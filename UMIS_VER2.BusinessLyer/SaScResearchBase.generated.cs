
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file SaScResearch.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'SA_SC_RESEARCH' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class SaScResearchBase : EntityBase, ISaScResearch, IEntityId<SaScResearchKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private SaScResearchEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private SaScResearchEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private SaScResearchEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<SaScResearch> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event SaScResearchEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event SaScResearchEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="SaScResearchBase"/> instance.
		///</summary>
		public SaScResearchBase()
		{
			this.entityData = new SaScResearchEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="SaScResearchBase"/> instance.
		///</summary>
		///<param name="_saScResearchId"></param>
		///<param name="_researchCode"></param>
		///<param name="_researchSummAr"></param>
		///<param name="_researchSummEn"></param>
		///<param name="_researchTitle"></param>
		///<param name="_pgSubjectDefinition"></param>
		///<param name="_approvalDate"></param>
		///<param name="_pagesNum"></param>
		///<param name="_researchPlace"></param>
		///<param name="_researchEval"></param>
		///<param name="_comments"></param>
		///<param name="_gsApprovalHId"></param>
		///<param name="_asFacultyInfoId"></param>
		///<param name="_researchType"></param>
		///<param name="_saPromotionRequestId"></param>
		///<param name="_saScCommId"></param>
		///<param name="_pgCodeResearchStrategyId"></param>
		public SaScResearchBase(System.Decimal _saScResearchId, System.String _researchCode, 
			System.String _researchSummAr, System.String _researchSummEn, System.String _researchTitle, 
			System.Decimal? _pgSubjectDefinition, System.DateTime? _approvalDate, System.Decimal? _pagesNum, 
			System.String _researchPlace, System.String _researchEval, System.String _comments, 
			System.Decimal _gsApprovalHId, System.Decimal _asFacultyInfoId, System.Decimal _researchType, 
			System.Decimal? _saPromotionRequestId, System.Decimal? _saScCommId, System.Decimal? _pgCodeResearchStrategyId)
		{
			this.entityData = new SaScResearchEntityData();
			this.backupData = null;

			this.SaScResearchId = _saScResearchId;
			this.ResearchCode = _researchCode;
			this.ResearchSummAr = _researchSummAr;
			this.ResearchSummEn = _researchSummEn;
			this.ResearchTitle = _researchTitle;
			this.PgSubjectDefinition = _pgSubjectDefinition;
			this.ApprovalDate = _approvalDate;
			this.PagesNum = _pagesNum;
			this.ResearchPlace = _researchPlace;
			this.ResearchEval = _researchEval;
			this.Comments = _comments;
			this.GsApprovalHId = _gsApprovalHId;
			this.AsFacultyInfoId = _asFacultyInfoId;
			this.ResearchType = _researchType;
			this.SaPromotionRequestId = _saPromotionRequestId;
			this.SaScCommId = _saScCommId;
			this.PgCodeResearchStrategyId = _pgCodeResearchStrategyId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="SaScResearch"/> instance.
		///</summary>
		///<param name="_saScResearchId"></param>
		///<param name="_researchCode"></param>
		///<param name="_researchSummAr"></param>
		///<param name="_researchSummEn"></param>
		///<param name="_researchTitle"></param>
		///<param name="_pgSubjectDefinition"></param>
		///<param name="_approvalDate"></param>
		///<param name="_pagesNum"></param>
		///<param name="_researchPlace"></param>
		///<param name="_researchEval"></param>
		///<param name="_comments"></param>
		///<param name="_gsApprovalHId"></param>
		///<param name="_asFacultyInfoId"></param>
		///<param name="_researchType"></param>
		///<param name="_saPromotionRequestId"></param>
		///<param name="_saScCommId"></param>
		///<param name="_pgCodeResearchStrategyId"></param>
		public static SaScResearch CreateSaScResearch(System.Decimal _saScResearchId, System.String _researchCode, 
			System.String _researchSummAr, System.String _researchSummEn, System.String _researchTitle, 
			System.Decimal? _pgSubjectDefinition, System.DateTime? _approvalDate, System.Decimal? _pagesNum, 
			System.String _researchPlace, System.String _researchEval, System.String _comments, 
			System.Decimal _gsApprovalHId, System.Decimal _asFacultyInfoId, System.Decimal _researchType, 
			System.Decimal? _saPromotionRequestId, System.Decimal? _saScCommId, System.Decimal? _pgCodeResearchStrategyId)
		{
			SaScResearch newSaScResearch = new SaScResearch();
			newSaScResearch.SaScResearchId = _saScResearchId;
			newSaScResearch.ResearchCode = _researchCode;
			newSaScResearch.ResearchSummAr = _researchSummAr;
			newSaScResearch.ResearchSummEn = _researchSummEn;
			newSaScResearch.ResearchTitle = _researchTitle;
			newSaScResearch.PgSubjectDefinition = _pgSubjectDefinition;
			newSaScResearch.ApprovalDate = _approvalDate;
			newSaScResearch.PagesNum = _pagesNum;
			newSaScResearch.ResearchPlace = _researchPlace;
			newSaScResearch.ResearchEval = _researchEval;
			newSaScResearch.Comments = _comments;
			newSaScResearch.GsApprovalHId = _gsApprovalHId;
			newSaScResearch.AsFacultyInfoId = _asFacultyInfoId;
			newSaScResearch.ResearchType = _researchType;
			newSaScResearch.SaPromotionRequestId = _saPromotionRequestId;
			newSaScResearch.SaScCommId = _saScCommId;
			newSaScResearch.PgCodeResearchStrategyId = _pgCodeResearchStrategyId;
			return newSaScResearch;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the SaScResearchId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal SaScResearchId
		{
			get
			{
				return this.entityData.SaScResearchId; 
			}
			
			set
			{
				if (this.entityData.SaScResearchId == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.SaScResearchId, this.entityData.SaScResearchId);
				this.entityData.SaScResearchId = value;
				this.EntityId.SaScResearchId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.SaScResearchId, this.entityData.SaScResearchId);
				OnPropertyChanged("SaScResearchId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the SA_SC_RESEARCH_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the SA_SC_RESEARCH_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalSaScResearchId
		{
			get { return this.entityData.OriginalSaScResearchId; }
			set { this.entityData.OriginalSaScResearchId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the ResearchCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String ResearchCode
		{
			get
			{
				return this.entityData.ResearchCode; 
			}
			
			set
			{
				if (this.entityData.ResearchCode == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.ResearchCode, this.entityData.ResearchCode);
				this.entityData.ResearchCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.ResearchCode, this.entityData.ResearchCode);
				OnPropertyChanged("ResearchCode");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ResearchSummAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 240)]
		public virtual System.String ResearchSummAr
		{
			get
			{
				return this.entityData.ResearchSummAr; 
			}
			
			set
			{
				if (this.entityData.ResearchSummAr == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.ResearchSummAr, this.entityData.ResearchSummAr);
				this.entityData.ResearchSummAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.ResearchSummAr, this.entityData.ResearchSummAr);
				OnPropertyChanged("ResearchSummAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ResearchSummEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 240)]
		public virtual System.String ResearchSummEn
		{
			get
			{
				return this.entityData.ResearchSummEn; 
			}
			
			set
			{
				if (this.entityData.ResearchSummEn == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.ResearchSummEn, this.entityData.ResearchSummEn);
				this.entityData.ResearchSummEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.ResearchSummEn, this.entityData.ResearchSummEn);
				OnPropertyChanged("ResearchSummEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ResearchTitle property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 240)]
		public virtual System.String ResearchTitle
		{
			get
			{
				return this.entityData.ResearchTitle; 
			}
			
			set
			{
				if (this.entityData.ResearchTitle == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.ResearchTitle, this.entityData.ResearchTitle);
				this.entityData.ResearchTitle = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.ResearchTitle, this.entityData.ResearchTitle);
				OnPropertyChanged("ResearchTitle");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PgSubjectDefinition property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPgSubjectDefinitionNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? PgSubjectDefinition
		{
			get
			{
				return this.entityData.PgSubjectDefinition; 
			}
			
			set
			{
				if (this.entityData.PgSubjectDefinition == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.PgSubjectDefinition, this.entityData.PgSubjectDefinition);
				this.entityData.PgSubjectDefinition = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.PgSubjectDefinition, this.entityData.PgSubjectDefinition);
				OnPropertyChanged("PgSubjectDefinition");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ApprovalDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsApprovalDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? ApprovalDate
		{
			get
			{
				return this.entityData.ApprovalDate; 
			}
			
			set
			{
				if (this.entityData.ApprovalDate == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.ApprovalDate, this.entityData.ApprovalDate);
				this.entityData.ApprovalDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.ApprovalDate, this.entityData.ApprovalDate);
				OnPropertyChanged("ApprovalDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PagesNum property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPagesNumNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? PagesNum
		{
			get
			{
				return this.entityData.PagesNum; 
			}
			
			set
			{
				if (this.entityData.PagesNum == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.PagesNum, this.entityData.PagesNum);
				this.entityData.PagesNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.PagesNum, this.entityData.PagesNum);
				OnPropertyChanged("PagesNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ResearchPlace property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 240)]
		public virtual System.String ResearchPlace
		{
			get
			{
				return this.entityData.ResearchPlace; 
			}
			
			set
			{
				if (this.entityData.ResearchPlace == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.ResearchPlace, this.entityData.ResearchPlace);
				this.entityData.ResearchPlace = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.ResearchPlace, this.entityData.ResearchPlace);
				OnPropertyChanged("ResearchPlace");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ResearchEval property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String ResearchEval
		{
			get
			{
				return this.entityData.ResearchEval; 
			}
			
			set
			{
				if (this.entityData.ResearchEval == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.ResearchEval, this.entityData.ResearchEval);
				this.entityData.ResearchEval = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.ResearchEval, this.entityData.ResearchEval);
				OnPropertyChanged("ResearchEval");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Comments property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 240)]
		public virtual System.String Comments
		{
			get
			{
				return this.entityData.Comments; 
			}
			
			set
			{
				if (this.entityData.Comments == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.Comments, this.entityData.Comments);
				this.entityData.Comments = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.Comments, this.entityData.Comments);
				OnPropertyChanged("Comments");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsApprovalHId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal GsApprovalHId
		{
			get
			{
				return this.entityData.GsApprovalHId; 
			}
			
			set
			{
				if (this.entityData.GsApprovalHId == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.GsApprovalHId, this.entityData.GsApprovalHId);
				this.entityData.GsApprovalHId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.GsApprovalHId, this.entityData.GsApprovalHId);
				OnPropertyChanged("GsApprovalHId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AsFacultyInfoId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal AsFacultyInfoId
		{
			get
			{
				return this.entityData.AsFacultyInfoId; 
			}
			
			set
			{
				if (this.entityData.AsFacultyInfoId == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.AsFacultyInfoId, this.entityData.AsFacultyInfoId);
				this.entityData.AsFacultyInfoId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.AsFacultyInfoId, this.entityData.AsFacultyInfoId);
				OnPropertyChanged("AsFacultyInfoId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ResearchType property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal ResearchType
		{
			get
			{
				return this.entityData.ResearchType; 
			}
			
			set
			{
				if (this.entityData.ResearchType == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.ResearchType, this.entityData.ResearchType);
				this.entityData.ResearchType = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.ResearchType, this.entityData.ResearchType);
				OnPropertyChanged("ResearchType");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SaPromotionRequestId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSaPromotionRequestIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SaPromotionRequestId
		{
			get
			{
				return this.entityData.SaPromotionRequestId; 
			}
			
			set
			{
				if (this.entityData.SaPromotionRequestId == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.SaPromotionRequestId, this.entityData.SaPromotionRequestId);
				this.entityData.SaPromotionRequestId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.SaPromotionRequestId, this.entityData.SaPromotionRequestId);
				OnPropertyChanged("SaPromotionRequestId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SaScCommId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSaScCommIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SaScCommId
		{
			get
			{
				return this.entityData.SaScCommId; 
			}
			
			set
			{
				if (this.entityData.SaScCommId == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.SaScCommId, this.entityData.SaScCommId);
				this.entityData.SaScCommId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.SaScCommId, this.entityData.SaScCommId);
				OnPropertyChanged("SaScCommId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PgCodeResearchStrategyId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPgCodeResearchStrategyIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? PgCodeResearchStrategyId
		{
			get
			{
				return this.entityData.PgCodeResearchStrategyId; 
			}
			
			set
			{
				if (this.entityData.PgCodeResearchStrategyId == value)
					return;
					
				OnColumnChanging(SaScResearchColumn.PgCodeResearchStrategyId, this.entityData.PgCodeResearchStrategyId);
				this.entityData.PgCodeResearchStrategyId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaScResearchColumn.PgCodeResearchStrategyId, this.entityData.PgCodeResearchStrategyId);
				OnPropertyChanged("PgCodeResearchStrategyId");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="SaScComm"/>.
		/// </summary>
		/// <value>The source SaScComm for SaScCommId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SaScComm SaScCommIdSource
      	{
            get { return entityData.SaScCommIdSource; }
            set { entityData.SaScCommIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SaPromotionRequest"/>.
		/// </summary>
		/// <value>The source SaPromotionRequest for SaPromotionRequestId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SaPromotionRequest SaPromotionRequestIdSource
      	{
            get { return entityData.SaPromotionRequestIdSource; }
            set { entityData.SaPromotionRequestIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AsFacultyInfo"/>.
		/// </summary>
		/// <value>The source AsFacultyInfo for AsFacultyInfoId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AsFacultyInfo AsFacultyInfoIdSource
      	{
            get { return entityData.AsFacultyInfoIdSource; }
            set { entityData.AsFacultyInfoIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsApprovalH"/>.
		/// </summary>
		/// <value>The source GsApprovalH for GsApprovalHId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsApprovalH GsApprovalHIdSource
      	{
            get { return entityData.GsApprovalHIdSource; }
            set { entityData.GsApprovalHIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of SaPublication objects
		///	which are related to this object through the relation FK_SA_PUBLICATION_SA_SC_RESEARCH
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaPublication> SaPublicationCollection
		{
			get { return entityData.SaPublicationCollection; }
			set { entityData.SaPublicationCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaResearchTeam objects
		///	which are related to this object through the relation FK_AUTO_04a1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaResearchTeam> SaResearchTeamCollection
		{
			get { return entityData.SaResearchTeamCollection; }
			set { entityData.SaResearchTeamCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ResearchCode", "Research Code", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ResearchSummAr", "Research Summ Ar", 240));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ResearchSummEn", "Research Summ En", 240));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("ResearchTitle", "Research Title"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ResearchTitle", "Research Title", 240));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ResearchPlace", "Research Place", 240));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ResearchEval", "Research Eval", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Comments", "Comments", 240));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "SA_SC_RESEARCH"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"SA_SC_RESEARCH_ID", "RESEARCH_CODE", "RESEARCH_SUMM_AR", "RESEARCH_SUMM_EN", "RESEARCH_TITLE", "PG_SUBJECT_DEFINITION", "APPROVAL_DATE", "PAGES_NUM", "RESEARCH_PLACE", "RESEARCH_EVAL", "COMMENTS", "GS_APPROVAL_H_ID", "AS_FACULTY_INFO_ID", "RESEARCH_TYPE", "SA_PROMOTION_REQUEST_ID", "SA_SC_COMM_ID", "PG_CODE_RESEARCH_STRATEGY_ID"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as SaScResearchEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (SaScResearch) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<SaScResearch>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as SaScResearch);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed SaScResearch Entity 
		///</summary>
		protected virtual SaScResearch Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			SaScResearch copy = new SaScResearch();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.SaScResearchId = this.SaScResearchId;
					copy.OriginalSaScResearchId = this.OriginalSaScResearchId;
				copy.ResearchCode = this.ResearchCode;
				copy.ResearchSummAr = this.ResearchSummAr;
				copy.ResearchSummEn = this.ResearchSummEn;
				copy.ResearchTitle = this.ResearchTitle;
				copy.PgSubjectDefinition = this.PgSubjectDefinition;
				copy.ApprovalDate = this.ApprovalDate;
				copy.PagesNum = this.PagesNum;
				copy.ResearchPlace = this.ResearchPlace;
				copy.ResearchEval = this.ResearchEval;
				copy.Comments = this.Comments;
				copy.GsApprovalHId = this.GsApprovalHId;
				copy.AsFacultyInfoId = this.AsFacultyInfoId;
				copy.ResearchType = this.ResearchType;
				copy.SaPromotionRequestId = this.SaPromotionRequestId;
				copy.SaScCommId = this.SaScCommId;
				copy.PgCodeResearchStrategyId = this.PgCodeResearchStrategyId;
			
			if (this.SaScCommIdSource != null && existingCopies.Contains(this.SaScCommIdSource))
				copy.SaScCommIdSource = existingCopies[this.SaScCommIdSource] as SaScComm;
			else
				copy.SaScCommIdSource = MakeCopyOf(this.SaScCommIdSource, existingCopies) as SaScComm;
			if (this.SaPromotionRequestIdSource != null && existingCopies.Contains(this.SaPromotionRequestIdSource))
				copy.SaPromotionRequestIdSource = existingCopies[this.SaPromotionRequestIdSource] as SaPromotionRequest;
			else
				copy.SaPromotionRequestIdSource = MakeCopyOf(this.SaPromotionRequestIdSource, existingCopies) as SaPromotionRequest;
			if (this.AsFacultyInfoIdSource != null && existingCopies.Contains(this.AsFacultyInfoIdSource))
				copy.AsFacultyInfoIdSource = existingCopies[this.AsFacultyInfoIdSource] as AsFacultyInfo;
			else
				copy.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource, existingCopies) as AsFacultyInfo;
			if (this.GsApprovalHIdSource != null && existingCopies.Contains(this.GsApprovalHIdSource))
				copy.GsApprovalHIdSource = existingCopies[this.GsApprovalHIdSource] as GsApprovalH;
			else
				copy.GsApprovalHIdSource = MakeCopyOf(this.GsApprovalHIdSource, existingCopies) as GsApprovalH;
		
			//deep copy nested objects
			copy.SaPublicationCollection = (TList<SaPublication>) MakeCopyOf(this.SaPublicationCollection, existingCopies); 
			copy.SaResearchTeamCollection = (TList<SaResearchTeam>) MakeCopyOf(this.SaResearchTeamCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed SaScResearch Entity 
		///</summary>
		public virtual SaScResearch Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed SaScResearch Entity which is a deep copy of the current entity.
		///</summary>
		public virtual SaScResearch DeepCopy()
		{
			return EntityHelper.Clone<SaScResearch>(this as SaScResearch);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as SaScResearchEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new SaScResearchEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as SaScResearchEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(SaScResearchColumn column)
		{
			switch(column)
			{
					case SaScResearchColumn.SaScResearchId:
					return entityData.SaScResearchId != _originalData.SaScResearchId;
					case SaScResearchColumn.ResearchCode:
					return entityData.ResearchCode != _originalData.ResearchCode;
					case SaScResearchColumn.ResearchSummAr:
					return entityData.ResearchSummAr != _originalData.ResearchSummAr;
					case SaScResearchColumn.ResearchSummEn:
					return entityData.ResearchSummEn != _originalData.ResearchSummEn;
					case SaScResearchColumn.ResearchTitle:
					return entityData.ResearchTitle != _originalData.ResearchTitle;
					case SaScResearchColumn.PgSubjectDefinition:
					return entityData.PgSubjectDefinition != _originalData.PgSubjectDefinition;
					case SaScResearchColumn.ApprovalDate:
					return entityData.ApprovalDate != _originalData.ApprovalDate;
					case SaScResearchColumn.PagesNum:
					return entityData.PagesNum != _originalData.PagesNum;
					case SaScResearchColumn.ResearchPlace:
					return entityData.ResearchPlace != _originalData.ResearchPlace;
					case SaScResearchColumn.ResearchEval:
					return entityData.ResearchEval != _originalData.ResearchEval;
					case SaScResearchColumn.Comments:
					return entityData.Comments != _originalData.Comments;
					case SaScResearchColumn.GsApprovalHId:
					return entityData.GsApprovalHId != _originalData.GsApprovalHId;
					case SaScResearchColumn.AsFacultyInfoId:
					return entityData.AsFacultyInfoId != _originalData.AsFacultyInfoId;
					case SaScResearchColumn.ResearchType:
					return entityData.ResearchType != _originalData.ResearchType;
					case SaScResearchColumn.SaPromotionRequestId:
					return entityData.SaPromotionRequestId != _originalData.SaPromotionRequestId;
					case SaScResearchColumn.SaScCommId:
					return entityData.SaScCommId != _originalData.SaScCommId;
					case SaScResearchColumn.PgCodeResearchStrategyId:
					return entityData.PgCodeResearchStrategyId != _originalData.PgCodeResearchStrategyId;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< SaScResearchColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.SaScResearchId != _originalData.SaScResearchId;
			result = result || entityData.ResearchCode != _originalData.ResearchCode;
			result = result || entityData.ResearchSummAr != _originalData.ResearchSummAr;
			result = result || entityData.ResearchSummEn != _originalData.ResearchSummEn;
			result = result || entityData.ResearchTitle != _originalData.ResearchTitle;
			result = result || entityData.PgSubjectDefinition != _originalData.PgSubjectDefinition;
			result = result || entityData.ApprovalDate != _originalData.ApprovalDate;
			result = result || entityData.PagesNum != _originalData.PagesNum;
			result = result || entityData.ResearchPlace != _originalData.ResearchPlace;
			result = result || entityData.ResearchEval != _originalData.ResearchEval;
			result = result || entityData.Comments != _originalData.Comments;
			result = result || entityData.GsApprovalHId != _originalData.GsApprovalHId;
			result = result || entityData.AsFacultyInfoId != _originalData.AsFacultyInfoId;
			result = result || entityData.ResearchType != _originalData.ResearchType;
			result = result || entityData.SaPromotionRequestId != _originalData.SaPromotionRequestId;
			result = result || entityData.SaScCommId != _originalData.SaScCommId;
			result = result || entityData.PgCodeResearchStrategyId != _originalData.PgCodeResearchStrategyId;
			return result;
		}	
		
		///<summary>
		///  Returns a SaScResearch Entity with the original data.
		///</summary>
		public SaScResearch GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateSaScResearch(
				_originalData.SaScResearchId,
				_originalData.ResearchCode,
				_originalData.ResearchSummAr,
				_originalData.ResearchSummEn,
				_originalData.ResearchTitle,
				_originalData.PgSubjectDefinition,
				_originalData.ApprovalDate,
				_originalData.PagesNum,
				_originalData.ResearchPlace,
				_originalData.ResearchEval,
				_originalData.Comments,
				_originalData.GsApprovalHId,
				_originalData.AsFacultyInfoId,
				_originalData.ResearchType,
				_originalData.SaPromotionRequestId,
				_originalData.SaScCommId,
				_originalData.PgCodeResearchStrategyId
				);
				
			return (SaScResearch)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="SaScResearchBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is SaScResearchBase)
				return ValueEquals(this, (SaScResearchBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="SaScResearchBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.SaScResearchId.GetHashCode() ^ 
					((this.ResearchCode == null) ? string.Empty : this.ResearchCode.ToString()).GetHashCode() ^ 
					((this.ResearchSummAr == null) ? string.Empty : this.ResearchSummAr.ToString()).GetHashCode() ^ 
					((this.ResearchSummEn == null) ? string.Empty : this.ResearchSummEn.ToString()).GetHashCode() ^ 
					this.ResearchTitle.GetHashCode() ^ 
					((this.PgSubjectDefinition == null) ? string.Empty : this.PgSubjectDefinition.ToString()).GetHashCode() ^ 
					((this.ApprovalDate == null) ? string.Empty : this.ApprovalDate.ToString()).GetHashCode() ^ 
					((this.PagesNum == null) ? string.Empty : this.PagesNum.ToString()).GetHashCode() ^ 
					((this.ResearchPlace == null) ? string.Empty : this.ResearchPlace.ToString()).GetHashCode() ^ 
					((this.ResearchEval == null) ? string.Empty : this.ResearchEval.ToString()).GetHashCode() ^ 
					((this.Comments == null) ? string.Empty : this.Comments.ToString()).GetHashCode() ^ 
					this.GsApprovalHId.GetHashCode() ^ 
					this.AsFacultyInfoId.GetHashCode() ^ 
					this.ResearchType.GetHashCode() ^ 
					((this.SaPromotionRequestId == null) ? string.Empty : this.SaPromotionRequestId.ToString()).GetHashCode() ^ 
					((this.SaScCommId == null) ? string.Empty : this.SaScCommId.ToString()).GetHashCode() ^ 
					((this.PgCodeResearchStrategyId == null) ? string.Empty : this.PgCodeResearchStrategyId.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="SaScResearchBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(SaScResearchBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="SaScResearchBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="SaScResearchBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="SaScResearchBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(SaScResearchBase Object1, SaScResearchBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.SaScResearchId != Object2.SaScResearchId)
				equal = false;
			if ( Object1.ResearchCode != null && Object2.ResearchCode != null )
			{
				if (Object1.ResearchCode != Object2.ResearchCode)
					equal = false;
			}
			else if (Object1.ResearchCode == null ^ Object2.ResearchCode == null )
			{
				equal = false;
			}
			if ( Object1.ResearchSummAr != null && Object2.ResearchSummAr != null )
			{
				if (Object1.ResearchSummAr != Object2.ResearchSummAr)
					equal = false;
			}
			else if (Object1.ResearchSummAr == null ^ Object2.ResearchSummAr == null )
			{
				equal = false;
			}
			if ( Object1.ResearchSummEn != null && Object2.ResearchSummEn != null )
			{
				if (Object1.ResearchSummEn != Object2.ResearchSummEn)
					equal = false;
			}
			else if (Object1.ResearchSummEn == null ^ Object2.ResearchSummEn == null )
			{
				equal = false;
			}
			if (Object1.ResearchTitle != Object2.ResearchTitle)
				equal = false;
			if ( Object1.PgSubjectDefinition != null && Object2.PgSubjectDefinition != null )
			{
				if (Object1.PgSubjectDefinition != Object2.PgSubjectDefinition)
					equal = false;
			}
			else if (Object1.PgSubjectDefinition == null ^ Object2.PgSubjectDefinition == null )
			{
				equal = false;
			}
			if ( Object1.ApprovalDate != null && Object2.ApprovalDate != null )
			{
				if (Object1.ApprovalDate != Object2.ApprovalDate)
					equal = false;
			}
			else if (Object1.ApprovalDate == null ^ Object2.ApprovalDate == null )
			{
				equal = false;
			}
			if ( Object1.PagesNum != null && Object2.PagesNum != null )
			{
				if (Object1.PagesNum != Object2.PagesNum)
					equal = false;
			}
			else if (Object1.PagesNum == null ^ Object2.PagesNum == null )
			{
				equal = false;
			}
			if ( Object1.ResearchPlace != null && Object2.ResearchPlace != null )
			{
				if (Object1.ResearchPlace != Object2.ResearchPlace)
					equal = false;
			}
			else if (Object1.ResearchPlace == null ^ Object2.ResearchPlace == null )
			{
				equal = false;
			}
			if ( Object1.ResearchEval != null && Object2.ResearchEval != null )
			{
				if (Object1.ResearchEval != Object2.ResearchEval)
					equal = false;
			}
			else if (Object1.ResearchEval == null ^ Object2.ResearchEval == null )
			{
				equal = false;
			}
			if ( Object1.Comments != null && Object2.Comments != null )
			{
				if (Object1.Comments != Object2.Comments)
					equal = false;
			}
			else if (Object1.Comments == null ^ Object2.Comments == null )
			{
				equal = false;
			}
			if (Object1.GsApprovalHId != Object2.GsApprovalHId)
				equal = false;
			if (Object1.AsFacultyInfoId != Object2.AsFacultyInfoId)
				equal = false;
			if (Object1.ResearchType != Object2.ResearchType)
				equal = false;
			if ( Object1.SaPromotionRequestId != null && Object2.SaPromotionRequestId != null )
			{
				if (Object1.SaPromotionRequestId != Object2.SaPromotionRequestId)
					equal = false;
			}
			else if (Object1.SaPromotionRequestId == null ^ Object2.SaPromotionRequestId == null )
			{
				equal = false;
			}
			if ( Object1.SaScCommId != null && Object2.SaScCommId != null )
			{
				if (Object1.SaScCommId != Object2.SaScCommId)
					equal = false;
			}
			else if (Object1.SaScCommId == null ^ Object2.SaScCommId == null )
			{
				equal = false;
			}
			if ( Object1.PgCodeResearchStrategyId != null && Object2.PgCodeResearchStrategyId != null )
			{
				if (Object1.PgCodeResearchStrategyId != Object2.PgCodeResearchStrategyId)
					equal = false;
			}
			else if (Object1.PgCodeResearchStrategyId == null ^ Object2.PgCodeResearchStrategyId == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((SaScResearchBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static SaScResearchComparer GetComparer()
        {
            return new SaScResearchComparer();
        }
        */

        // Comparer delegates back to SaScResearch
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(SaScResearch rhs, SaScResearchColumn which)
        {
            switch (which)
            {
            	
            	
            	case SaScResearchColumn.SaScResearchId:
            		return this.SaScResearchId.CompareTo(rhs.SaScResearchId);
            		
            		                 
            	
            	
            	case SaScResearchColumn.ResearchCode:
            		return this.ResearchCode.CompareTo(rhs.ResearchCode);
            		
            		                 
            	
            	
            	case SaScResearchColumn.ResearchSummAr:
            		return this.ResearchSummAr.CompareTo(rhs.ResearchSummAr);
            		
            		                 
            	
            	
            	case SaScResearchColumn.ResearchSummEn:
            		return this.ResearchSummEn.CompareTo(rhs.ResearchSummEn);
            		
            		                 
            	
            	
            	case SaScResearchColumn.ResearchTitle:
            		return this.ResearchTitle.CompareTo(rhs.ResearchTitle);
            		
            		                 
            	
            	
            	case SaScResearchColumn.PgSubjectDefinition:
            		return this.PgSubjectDefinition.Value.CompareTo(rhs.PgSubjectDefinition.Value);
            		
            		                 
            	
            	
            	case SaScResearchColumn.ApprovalDate:
            		return this.ApprovalDate.Value.CompareTo(rhs.ApprovalDate.Value);
            		
            		                 
            	
            	
            	case SaScResearchColumn.PagesNum:
            		return this.PagesNum.Value.CompareTo(rhs.PagesNum.Value);
            		
            		                 
            	
            	
            	case SaScResearchColumn.ResearchPlace:
            		return this.ResearchPlace.CompareTo(rhs.ResearchPlace);
            		
            		                 
            	
            	
            	case SaScResearchColumn.ResearchEval:
            		return this.ResearchEval.CompareTo(rhs.ResearchEval);
            		
            		                 
            	
            	
            	case SaScResearchColumn.Comments:
            		return this.Comments.CompareTo(rhs.Comments);
            		
            		                 
            	
            	
            	case SaScResearchColumn.GsApprovalHId:
            		return this.GsApprovalHId.CompareTo(rhs.GsApprovalHId);
            		
            		                 
            	
            	
            	case SaScResearchColumn.AsFacultyInfoId:
            		return this.AsFacultyInfoId.CompareTo(rhs.AsFacultyInfoId);
            		
            		                 
            	
            	
            	case SaScResearchColumn.ResearchType:
            		return this.ResearchType.CompareTo(rhs.ResearchType);
            		
            		                 
            	
            	
            	case SaScResearchColumn.SaPromotionRequestId:
            		return this.SaPromotionRequestId.Value.CompareTo(rhs.SaPromotionRequestId.Value);
            		
            		                 
            	
            	
            	case SaScResearchColumn.SaScCommId:
            		return this.SaScCommId.Value.CompareTo(rhs.SaScCommId.Value);
            		
            		                 
            	
            	
            	case SaScResearchColumn.PgCodeResearchStrategyId:
            		return this.PgCodeResearchStrategyId.Value.CompareTo(rhs.PgCodeResearchStrategyId.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<SaScResearchKey> Members
		
		// member variable for the EntityId property
		private SaScResearchKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual SaScResearchKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new SaScResearchKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("SaScResearch")
					.Append("|").Append( this.SaScResearchId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{18}{17}- SaScResearchId: {0}{17}- ResearchCode: {1}{17}- ResearchSummAr: {2}{17}- ResearchSummEn: {3}{17}- ResearchTitle: {4}{17}- PgSubjectDefinition: {5}{17}- ApprovalDate: {6}{17}- PagesNum: {7}{17}- ResearchPlace: {8}{17}- ResearchEval: {9}{17}- Comments: {10}{17}- GsApprovalHId: {11}{17}- AsFacultyInfoId: {12}{17}- ResearchType: {13}{17}- SaPromotionRequestId: {14}{17}- SaScCommId: {15}{17}- PgCodeResearchStrategyId: {16}{17}{19}", 
				this.SaScResearchId,
				(this.ResearchCode == null) ? string.Empty : this.ResearchCode.ToString(),
				(this.ResearchSummAr == null) ? string.Empty : this.ResearchSummAr.ToString(),
				(this.ResearchSummEn == null) ? string.Empty : this.ResearchSummEn.ToString(),
				this.ResearchTitle,
				(this.PgSubjectDefinition == null) ? string.Empty : this.PgSubjectDefinition.ToString(),
				(this.ApprovalDate == null) ? string.Empty : this.ApprovalDate.ToString(),
				(this.PagesNum == null) ? string.Empty : this.PagesNum.ToString(),
				(this.ResearchPlace == null) ? string.Empty : this.ResearchPlace.ToString(),
				(this.ResearchEval == null) ? string.Empty : this.ResearchEval.ToString(),
				(this.Comments == null) ? string.Empty : this.Comments.ToString(),
				this.GsApprovalHId,
				this.AsFacultyInfoId,
				this.ResearchType,
				(this.SaPromotionRequestId == null) ? string.Empty : this.SaPromotionRequestId.ToString(),
				(this.SaScCommId == null) ? string.Empty : this.SaScCommId.ToString(),
				(this.PgCodeResearchStrategyId == null) ? string.Empty : this.PgCodeResearchStrategyId.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'SA_SC_RESEARCH' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class SaScResearchEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// SA_SC_RESEARCH_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "SA_SC_RESEARCH"</remarks>
		public System.Decimal SaScResearchId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalSaScResearchId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// RESEARCH_CODE : 
		/// </summary>
		public System.String		  ResearchCode = null;
		
		/// <summary>
		/// RESEARCH_SUMM_AR : 
		/// </summary>
		public System.String		  ResearchSummAr = null;
		
		/// <summary>
		/// RESEARCH_SUMM_EN : 
		/// </summary>
		public System.String		  ResearchSummEn = null;
		
		/// <summary>
		/// RESEARCH_TITLE : 
		/// </summary>
		public System.String		  ResearchTitle = string.Empty;
		
		/// <summary>
		/// PG_SUBJECT_DEFINITION : 
		/// </summary>
		public System.Decimal?		  PgSubjectDefinition = null;
		
		/// <summary>
		/// APPROVAL_DATE : 
		/// </summary>
		public System.DateTime?		  ApprovalDate = null;
		
		/// <summary>
		/// PAGES_NUM : 
		/// </summary>
		public System.Decimal?		  PagesNum = null;
		
		/// <summary>
		/// RESEARCH_PLACE : 
		/// </summary>
		public System.String		  ResearchPlace = null;
		
		/// <summary>
		/// RESEARCH_EVAL : 
		/// </summary>
		public System.String		  ResearchEval = null;
		
		/// <summary>
		/// COMMENTS : 
		/// </summary>
		public System.String		  Comments = null;
		
		/// <summary>
		/// GS_APPROVAL_H_ID : 
		/// </summary>
		public System.Decimal		  GsApprovalHId = 0.0m;
		
		/// <summary>
		/// AS_FACULTY_INFO_ID : 
		/// </summary>
		public System.Decimal		  AsFacultyInfoId = 0.0m;
		
		/// <summary>
		/// RESEARCH_TYPE : 
		/// </summary>
		public System.Decimal		  ResearchType = 0.0m;
		
		/// <summary>
		/// SA_PROMOTION_REQUEST_ID : 
		/// </summary>
		public System.Decimal?		  SaPromotionRequestId = null;
		
		/// <summary>
		/// SA_SC_COMM_ID : 
		/// </summary>
		public System.Decimal?		  SaScCommId = null;
		
		/// <summary>
		/// PG_CODE_RESEARCH_STRATEGY_ID : 
		/// </summary>
		public System.Decimal?		  PgCodeResearchStrategyId = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private SaScComm _saScCommIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SaScComm"/>.
		/// </summary>
		/// <value>The source SaScComm for SaScCommId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SaScComm SaScCommIdSource
      	{
            get { return this._saScCommIdSource; }
            set { this._saScCommIdSource = value; }
      	}
		private SaPromotionRequest _saPromotionRequestIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SaPromotionRequest"/>.
		/// </summary>
		/// <value>The source SaPromotionRequest for SaPromotionRequestId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SaPromotionRequest SaPromotionRequestIdSource
      	{
            get { return this._saPromotionRequestIdSource; }
            set { this._saPromotionRequestIdSource = value; }
      	}
		private AsFacultyInfo _asFacultyInfoIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AsFacultyInfo"/>.
		/// </summary>
		/// <value>The source AsFacultyInfo for AsFacultyInfoId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AsFacultyInfo AsFacultyInfoIdSource
      	{
            get { return this._asFacultyInfoIdSource; }
            set { this._asFacultyInfoIdSource = value; }
      	}
		private GsApprovalH _gsApprovalHidSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsApprovalH"/>.
		/// </summary>
		/// <value>The source GsApprovalH for GsApprovalHId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsApprovalH GsApprovalHIdSource
      	{
            get { return this._gsApprovalHidSource; }
            set { this._gsApprovalHidSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region SaPublicationCollection
		
		private TList<SaPublication> _saPublicationSaScResearchId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saPublicationSaScResearchId
		/// </summary>
		
		public TList<SaPublication> SaPublicationCollection
		{
			get
			{
				if (_saPublicationSaScResearchId == null)
				{
				_saPublicationSaScResearchId = new TList<SaPublication>();
				}
	
				return _saPublicationSaScResearchId;
			}
			set { _saPublicationSaScResearchId = value; }
		}
		
		#endregion

		#region SaResearchTeamCollection
		
		private TList<SaResearchTeam> _saResearchTeamSaScResearchId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saResearchTeamSaScResearchId
		/// </summary>
		
		public TList<SaResearchTeam> SaResearchTeamCollection
		{
			get
			{
				if (_saResearchTeamSaScResearchId == null)
				{
				_saResearchTeamSaScResearchId = new TList<SaResearchTeam>();
				}
	
				return _saResearchTeamSaScResearchId;
			}
			set { _saResearchTeamSaScResearchId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			SaScResearchEntityData _tmp = new SaScResearchEntityData();
						
			_tmp.SaScResearchId = this.SaScResearchId;
			_tmp.OriginalSaScResearchId = this.OriginalSaScResearchId;
			
			_tmp.ResearchCode = this.ResearchCode;
			_tmp.ResearchSummAr = this.ResearchSummAr;
			_tmp.ResearchSummEn = this.ResearchSummEn;
			_tmp.ResearchTitle = this.ResearchTitle;
			_tmp.PgSubjectDefinition = this.PgSubjectDefinition;
			_tmp.ApprovalDate = this.ApprovalDate;
			_tmp.PagesNum = this.PagesNum;
			_tmp.ResearchPlace = this.ResearchPlace;
			_tmp.ResearchEval = this.ResearchEval;
			_tmp.Comments = this.Comments;
			_tmp.GsApprovalHId = this.GsApprovalHId;
			_tmp.AsFacultyInfoId = this.AsFacultyInfoId;
			_tmp.ResearchType = this.ResearchType;
			_tmp.SaPromotionRequestId = this.SaPromotionRequestId;
			_tmp.SaScCommId = this.SaScCommId;
			_tmp.PgCodeResearchStrategyId = this.PgCodeResearchStrategyId;
			
			#region Source Parent Composite Entities
			if (this.SaScCommIdSource != null)
				_tmp.SaScCommIdSource = MakeCopyOf(this.SaScCommIdSource) as SaScComm;
			if (this.SaPromotionRequestIdSource != null)
				_tmp.SaPromotionRequestIdSource = MakeCopyOf(this.SaPromotionRequestIdSource) as SaPromotionRequest;
			if (this.AsFacultyInfoIdSource != null)
				_tmp.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource) as AsFacultyInfo;
			if (this.GsApprovalHIdSource != null)
				_tmp.GsApprovalHIdSource = MakeCopyOf(this.GsApprovalHIdSource) as GsApprovalH;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._saPublicationSaScResearchId != null)
				_tmp.SaPublicationCollection = (TList<SaPublication>) MakeCopyOf(this.SaPublicationCollection); 
			if (this._saResearchTeamSaScResearchId != null)
				_tmp.SaResearchTeamCollection = (TList<SaResearchTeam>) MakeCopyOf(this.SaResearchTeamCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			SaScResearchEntityData _tmp = new SaScResearchEntityData();
						
			_tmp.SaScResearchId = this.SaScResearchId;
			_tmp.OriginalSaScResearchId = this.OriginalSaScResearchId;
			
			_tmp.ResearchCode = this.ResearchCode;
			_tmp.ResearchSummAr = this.ResearchSummAr;
			_tmp.ResearchSummEn = this.ResearchSummEn;
			_tmp.ResearchTitle = this.ResearchTitle;
			_tmp.PgSubjectDefinition = this.PgSubjectDefinition;
			_tmp.ApprovalDate = this.ApprovalDate;
			_tmp.PagesNum = this.PagesNum;
			_tmp.ResearchPlace = this.ResearchPlace;
			_tmp.ResearchEval = this.ResearchEval;
			_tmp.Comments = this.Comments;
			_tmp.GsApprovalHId = this.GsApprovalHId;
			_tmp.AsFacultyInfoId = this.AsFacultyInfoId;
			_tmp.ResearchType = this.ResearchType;
			_tmp.SaPromotionRequestId = this.SaPromotionRequestId;
			_tmp.SaScCommId = this.SaScCommId;
			_tmp.PgCodeResearchStrategyId = this.PgCodeResearchStrategyId;
			
			#region Source Parent Composite Entities
			if (this.SaScCommIdSource != null && existingCopies.Contains(this.SaScCommIdSource))
				_tmp.SaScCommIdSource = existingCopies[this.SaScCommIdSource] as SaScComm;
			else
				_tmp.SaScCommIdSource = MakeCopyOf(this.SaScCommIdSource, existingCopies) as SaScComm;
			if (this.SaPromotionRequestIdSource != null && existingCopies.Contains(this.SaPromotionRequestIdSource))
				_tmp.SaPromotionRequestIdSource = existingCopies[this.SaPromotionRequestIdSource] as SaPromotionRequest;
			else
				_tmp.SaPromotionRequestIdSource = MakeCopyOf(this.SaPromotionRequestIdSource, existingCopies) as SaPromotionRequest;
			if (this.AsFacultyInfoIdSource != null && existingCopies.Contains(this.AsFacultyInfoIdSource))
				_tmp.AsFacultyInfoIdSource = existingCopies[this.AsFacultyInfoIdSource] as AsFacultyInfo;
			else
				_tmp.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource, existingCopies) as AsFacultyInfo;
			if (this.GsApprovalHIdSource != null && existingCopies.Contains(this.GsApprovalHIdSource))
				_tmp.GsApprovalHIdSource = existingCopies[this.GsApprovalHIdSource] as GsApprovalH;
			else
				_tmp.GsApprovalHIdSource = MakeCopyOf(this.GsApprovalHIdSource, existingCopies) as GsApprovalH;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.SaPublicationCollection = (TList<SaPublication>) MakeCopyOf(this.SaPublicationCollection, existingCopies); 
			_tmp.SaResearchTeamCollection = (TList<SaResearchTeam>) MakeCopyOf(this.SaResearchTeamCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaScResearchColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(SaScResearchColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaScResearchColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(SaScResearchColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaScResearchColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(SaScResearchColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				SaScResearchEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new SaScResearchEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaScResearchColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(SaScResearchColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				SaScResearchEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new SaScResearchEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region SaScResearchEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="SaScResearch"/> object.
	/// </remarks>
	public class SaScResearchEventArgs : System.EventArgs
	{
		private SaScResearchColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the SaScResearchEventArgs class.
		///</summary>
		public SaScResearchEventArgs(SaScResearchColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the SaScResearchEventArgs class.
		///</summary>
		public SaScResearchEventArgs(SaScResearchColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The SaScResearchColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="SaScResearchColumn" />
		public SaScResearchColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all SaScResearch related events.
	///</summary>
	public delegate void SaScResearchEventHandler(object sender, SaScResearchEventArgs e);
	
	#region SaScResearchComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class SaScResearchComparer : System.Collections.Generic.IComparer<SaScResearch>
	{
		SaScResearchColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:SaScResearchComparer"/> class.
        /// </summary>
		public SaScResearchComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:SaScResearchComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public SaScResearchComparer(SaScResearchColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="SaScResearch"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="SaScResearch"/> to compare.</param>
        /// <param name="b">The second <c>SaScResearch</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(SaScResearch a, SaScResearch b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(SaScResearch entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(SaScResearch a, SaScResearch b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public SaScResearchColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region SaScResearchKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="SaScResearch"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class SaScResearchKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the SaScResearchKey class.
		/// </summary>
		public SaScResearchKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the SaScResearchKey class.
		/// </summary>
		public SaScResearchKey(SaScResearchBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.SaScResearchId = entity.SaScResearchId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the SaScResearchKey class.
		/// </summary>
		public SaScResearchKey(System.Decimal _saScResearchId)
		{
			#region Init Properties

			this.SaScResearchId = _saScResearchId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private SaScResearchBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public SaScResearchBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the SaScResearchId property
		private System.Decimal _saScResearchId;
		
		/// <summary>
		/// Gets or sets the SaScResearchId property.
		/// </summary>
		public System.Decimal SaScResearchId
		{
			get { return _saScResearchId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.SaScResearchId = value;
				
				_saScResearchId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				SaScResearchId = ( values["SaScResearchId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["SaScResearchId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("SaScResearchId", SaScResearchId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("SaScResearchId: {0}{1}",
								SaScResearchId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region SaScResearchColumn Enum
	
	/// <summary>
	/// Enumerate the SaScResearch columns.
	/// </summary>
	[Serializable]
	public enum SaScResearchColumn : int
	{
		/// <summary>
		/// SaScResearchId : 
		/// </summary>
		[EnumTextValue("SA_SC_RESEARCH_ID")]
		[ColumnEnum("SA_SC_RESEARCH_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		SaScResearchId = 1,
		/// <summary>
		/// ResearchCode : 
		/// </summary>
		[EnumTextValue("RESEARCH_CODE")]
		[ColumnEnum("RESEARCH_CODE", typeof(System.String), System.Data.DbType.String, false, false, true, 20)]
		ResearchCode = 2,
		/// <summary>
		/// ResearchSummAr : 
		/// </summary>
		[EnumTextValue("RESEARCH_SUMM_AR")]
		[ColumnEnum("RESEARCH_SUMM_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 240)]
		ResearchSummAr = 3,
		/// <summary>
		/// ResearchSummEn : 
		/// </summary>
		[EnumTextValue("RESEARCH_SUMM_EN")]
		[ColumnEnum("RESEARCH_SUMM_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 240)]
		ResearchSummEn = 4,
		/// <summary>
		/// ResearchTitle : 
		/// </summary>
		[EnumTextValue("RESEARCH_TITLE")]
		[ColumnEnum("RESEARCH_TITLE", typeof(System.String), System.Data.DbType.String, false, false, false, 240)]
		ResearchTitle = 5,
		/// <summary>
		/// PgSubjectDefinition : 
		/// </summary>
		[EnumTextValue("PG_SUBJECT_DEFINITION")]
		[ColumnEnum("PG_SUBJECT_DEFINITION", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PgSubjectDefinition = 6,
		/// <summary>
		/// ApprovalDate : 
		/// </summary>
		[EnumTextValue("APPROVAL_DATE")]
		[ColumnEnum("APPROVAL_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		ApprovalDate = 7,
		/// <summary>
		/// PagesNum : 
		/// </summary>
		[EnumTextValue("PAGES_NUM")]
		[ColumnEnum("PAGES_NUM", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PagesNum = 8,
		/// <summary>
		/// ResearchPlace : 
		/// </summary>
		[EnumTextValue("RESEARCH_PLACE")]
		[ColumnEnum("RESEARCH_PLACE", typeof(System.String), System.Data.DbType.String, false, false, true, 240)]
		ResearchPlace = 9,
		/// <summary>
		/// ResearchEval : 
		/// </summary>
		[EnumTextValue("RESEARCH_EVAL")]
		[ColumnEnum("RESEARCH_EVAL", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		ResearchEval = 10,
		/// <summary>
		/// Comments : 
		/// </summary>
		[EnumTextValue("COMMENTS")]
		[ColumnEnum("COMMENTS", typeof(System.String), System.Data.DbType.String, false, false, true, 240)]
		Comments = 11,
		/// <summary>
		/// GsApprovalHId : 
		/// </summary>
		[EnumTextValue("GS_APPROVAL_H_ID")]
		[ColumnEnum("GS_APPROVAL_H_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		GsApprovalHId = 12,
		/// <summary>
		/// AsFacultyInfoId : 
		/// </summary>
		[EnumTextValue("AS_FACULTY_INFO_ID")]
		[ColumnEnum("AS_FACULTY_INFO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		AsFacultyInfoId = 13,
		/// <summary>
		/// ResearchType : 
		/// </summary>
		[EnumTextValue("RESEARCH_TYPE")]
		[ColumnEnum("RESEARCH_TYPE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		ResearchType = 14,
		/// <summary>
		/// SaPromotionRequestId : 
		/// </summary>
		[EnumTextValue("SA_PROMOTION_REQUEST_ID")]
		[ColumnEnum("SA_PROMOTION_REQUEST_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SaPromotionRequestId = 15,
		/// <summary>
		/// SaScCommId : 
		/// </summary>
		[EnumTextValue("SA_SC_COMM_ID")]
		[ColumnEnum("SA_SC_COMM_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SaScCommId = 16,
		/// <summary>
		/// PgCodeResearchStrategyId : 
		/// </summary>
		[EnumTextValue("PG_CODE_RESEARCH_STRATEGY_ID")]
		[ColumnEnum("PG_CODE_RESEARCH_STRATEGY_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PgCodeResearchStrategyId = 17
	}//End enum

	#endregion SaScResearchColumn Enum

} // end namespace
