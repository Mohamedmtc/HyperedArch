
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file AdmReqDoc.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ADM_REQ_DOC' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class AdmReqDocBase : EntityBase, IAdmReqDoc, IEntityId<AdmReqDocKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private AdmReqDocEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private AdmReqDocEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private AdmReqDocEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<AdmReqDoc> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AdmReqDocEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AdmReqDocEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="AdmReqDocBase"/> instance.
		///</summary>
		public AdmReqDocBase()
		{
			this.entityData = new AdmReqDocEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="AdmReqDocBase"/> instance.
		///</summary>
		///<param name="_admReqDocId"></param>
		///<param name="_entMainId"></param>
		///<param name="_descrAr"></param>
		///<param name="_descrEn"></param>
		///<param name="_docTemplatePath"></param>
		///<param name="_delFlg"></param>
		///<param name="_origDocNo"></param>
		///<param name="_copyDocNo"></param>
		///<param name="_gsCodeGenderId"></param>
		///<param name="_docTypeFlg"></param>
		///<param name="_autoloadFlg"></param>
		///<param name="_transAppFlg"></param>
		///<param name="_asCodeDegreeClassId"></param>
		///<param name="_asCodeDegreeId"></param>
		///<param name="_edCodeQualId"></param>
		///<param name="_gsCdeSchoolId">اكواد المدارس</param>
		///<param name="_optionalFlg"></param>
		///<param name="_docHint"></param>
		///<param name="_gsCdeDocId"></param>
		///<param name="_gsCdeMaritalStatusId"></param>
		///<param name="_foreignFlg">Ejust  (International Yes/No) to specify that this Exam for International applicants only</param>
		///<param name="_admCdeAppTypeId"></param>
		///<param name="_sponsoredFlg"></param>
		///<param name="_spoSponsorTypeId"></param>
		///<param name="_seUserId"></param>
		///<param name="_lastDate"></param>
		///<param name="_appHideFlg"></param>
		public AdmReqDocBase(System.Decimal _admReqDocId, System.Decimal _entMainId, System.String _descrAr, 
			System.String _descrEn, System.String _docTemplatePath, System.Decimal _delFlg, System.Decimal _origDocNo, 
			System.Decimal _copyDocNo, System.Decimal? _gsCodeGenderId, System.Decimal _docTypeFlg, 
			System.Decimal _autoloadFlg, System.Decimal _transAppFlg, System.Decimal? _asCodeDegreeClassId, 
			System.Decimal? _asCodeDegreeId, System.Decimal? _edCodeQualId, System.Decimal? _gsCdeSchoolId, 
			System.Boolean? _optionalFlg, System.String _docHint, System.Int32? _gsCdeDocId, System.Decimal? _gsCdeMaritalStatusId, 
			System.Decimal? _foreignFlg, System.Decimal? _admCdeAppTypeId, System.Boolean? _sponsoredFlg, 
			System.Decimal? _spoSponsorTypeId, System.Decimal? _seUserId, System.DateTime? _lastDate, 
			System.Decimal? _appHideFlg)
		{
			this.entityData = new AdmReqDocEntityData();
			this.backupData = null;

			this.AdmReqDocId = _admReqDocId;
			this.EntMainId = _entMainId;
			this.DescrAr = _descrAr;
			this.DescrEn = _descrEn;
			this.DocTemplatePath = _docTemplatePath;
			this.DelFlg = _delFlg;
			this.OrigDocNo = _origDocNo;
			this.CopyDocNo = _copyDocNo;
			this.GsCodeGenderId = _gsCodeGenderId;
			this.DocTypeFlg = _docTypeFlg;
			this.AutoloadFlg = _autoloadFlg;
			this.TransAppFlg = _transAppFlg;
			this.AsCodeDegreeClassId = _asCodeDegreeClassId;
			this.AsCodeDegreeId = _asCodeDegreeId;
			this.EdCodeQualId = _edCodeQualId;
			this.GsCdeSchoolId = _gsCdeSchoolId;
			this.OptionalFlg = _optionalFlg;
			this.DocHint = _docHint;
			this.GsCdeDocId = _gsCdeDocId;
			this.GsCdeMaritalStatusId = _gsCdeMaritalStatusId;
			this.ForeignFlg = _foreignFlg;
			this.AdmCdeAppTypeId = _admCdeAppTypeId;
			this.SponsoredFlg = _sponsoredFlg;
			this.SpoSponsorTypeId = _spoSponsorTypeId;
			this.SeUserId = _seUserId;
			this.LastDate = _lastDate;
			this.AppHideFlg = _appHideFlg;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="AdmReqDoc"/> instance.
		///</summary>
		///<param name="_admReqDocId"></param>
		///<param name="_entMainId"></param>
		///<param name="_descrAr"></param>
		///<param name="_descrEn"></param>
		///<param name="_docTemplatePath"></param>
		///<param name="_delFlg"></param>
		///<param name="_origDocNo"></param>
		///<param name="_copyDocNo"></param>
		///<param name="_gsCodeGenderId"></param>
		///<param name="_docTypeFlg"></param>
		///<param name="_autoloadFlg"></param>
		///<param name="_transAppFlg"></param>
		///<param name="_asCodeDegreeClassId"></param>
		///<param name="_asCodeDegreeId"></param>
		///<param name="_edCodeQualId"></param>
		///<param name="_gsCdeSchoolId">اكواد المدارس</param>
		///<param name="_optionalFlg"></param>
		///<param name="_docHint"></param>
		///<param name="_gsCdeDocId"></param>
		///<param name="_gsCdeMaritalStatusId"></param>
		///<param name="_foreignFlg">Ejust  (International Yes/No) to specify that this Exam for International applicants only</param>
		///<param name="_admCdeAppTypeId"></param>
		///<param name="_sponsoredFlg"></param>
		///<param name="_spoSponsorTypeId"></param>
		///<param name="_seUserId"></param>
		///<param name="_lastDate"></param>
		///<param name="_appHideFlg"></param>
		public static AdmReqDoc CreateAdmReqDoc(System.Decimal _admReqDocId, System.Decimal _entMainId, System.String _descrAr, 
			System.String _descrEn, System.String _docTemplatePath, System.Decimal _delFlg, System.Decimal _origDocNo, 
			System.Decimal _copyDocNo, System.Decimal? _gsCodeGenderId, System.Decimal _docTypeFlg, 
			System.Decimal _autoloadFlg, System.Decimal _transAppFlg, System.Decimal? _asCodeDegreeClassId, 
			System.Decimal? _asCodeDegreeId, System.Decimal? _edCodeQualId, System.Decimal? _gsCdeSchoolId, 
			System.Boolean? _optionalFlg, System.String _docHint, System.Int32? _gsCdeDocId, System.Decimal? _gsCdeMaritalStatusId, 
			System.Decimal? _foreignFlg, System.Decimal? _admCdeAppTypeId, System.Boolean? _sponsoredFlg, 
			System.Decimal? _spoSponsorTypeId, System.Decimal? _seUserId, System.DateTime? _lastDate, 
			System.Decimal? _appHideFlg)
		{
			AdmReqDoc newAdmReqDoc = new AdmReqDoc();
			newAdmReqDoc.AdmReqDocId = _admReqDocId;
			newAdmReqDoc.EntMainId = _entMainId;
			newAdmReqDoc.DescrAr = _descrAr;
			newAdmReqDoc.DescrEn = _descrEn;
			newAdmReqDoc.DocTemplatePath = _docTemplatePath;
			newAdmReqDoc.DelFlg = _delFlg;
			newAdmReqDoc.OrigDocNo = _origDocNo;
			newAdmReqDoc.CopyDocNo = _copyDocNo;
			newAdmReqDoc.GsCodeGenderId = _gsCodeGenderId;
			newAdmReqDoc.DocTypeFlg = _docTypeFlg;
			newAdmReqDoc.AutoloadFlg = _autoloadFlg;
			newAdmReqDoc.TransAppFlg = _transAppFlg;
			newAdmReqDoc.AsCodeDegreeClassId = _asCodeDegreeClassId;
			newAdmReqDoc.AsCodeDegreeId = _asCodeDegreeId;
			newAdmReqDoc.EdCodeQualId = _edCodeQualId;
			newAdmReqDoc.GsCdeSchoolId = _gsCdeSchoolId;
			newAdmReqDoc.OptionalFlg = _optionalFlg;
			newAdmReqDoc.DocHint = _docHint;
			newAdmReqDoc.GsCdeDocId = _gsCdeDocId;
			newAdmReqDoc.GsCdeMaritalStatusId = _gsCdeMaritalStatusId;
			newAdmReqDoc.ForeignFlg = _foreignFlg;
			newAdmReqDoc.AdmCdeAppTypeId = _admCdeAppTypeId;
			newAdmReqDoc.SponsoredFlg = _sponsoredFlg;
			newAdmReqDoc.SpoSponsorTypeId = _spoSponsorTypeId;
			newAdmReqDoc.SeUserId = _seUserId;
			newAdmReqDoc.LastDate = _lastDate;
			newAdmReqDoc.AppHideFlg = _appHideFlg;
			return newAdmReqDoc;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the AdmReqDocId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal AdmReqDocId
		{
			get
			{
				return this.entityData.AdmReqDocId; 
			}
			
			set
			{
				if (this.entityData.AdmReqDocId == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.AdmReqDocId, this.entityData.AdmReqDocId);
				this.entityData.AdmReqDocId = value;
				this.EntityId.AdmReqDocId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.AdmReqDocId, this.entityData.AdmReqDocId);
				OnPropertyChanged("AdmReqDocId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ADM_REQ_DOC_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the ADM_REQ_DOC_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalAdmReqDocId
		{
			get { return this.entityData.OriginalAdmReqDocId; }
			set { this.entityData.OriginalAdmReqDocId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the EntMainId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EntMainId
		{
			get
			{
				return this.entityData.EntMainId; 
			}
			
			set
			{
				if (this.entityData.EntMainId == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.EntMainId, this.entityData.EntMainId);
				this.entityData.EntMainId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.EntMainId, this.entityData.EntMainId);
				OnPropertyChanged("EntMainId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DescrAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String DescrAr
		{
			get
			{
				return this.entityData.DescrAr; 
			}
			
			set
			{
				if (this.entityData.DescrAr == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.DescrAr, this.entityData.DescrAr);
				this.entityData.DescrAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.DescrAr, this.entityData.DescrAr);
				OnPropertyChanged("DescrAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DescrEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String DescrEn
		{
			get
			{
				return this.entityData.DescrEn; 
			}
			
			set
			{
				if (this.entityData.DescrEn == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.DescrEn, this.entityData.DescrEn);
				this.entityData.DescrEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.DescrEn, this.entityData.DescrEn);
				OnPropertyChanged("DescrEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DocTemplatePath property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String DocTemplatePath
		{
			get
			{
				return this.entityData.DocTemplatePath; 
			}
			
			set
			{
				if (this.entityData.DocTemplatePath == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.DocTemplatePath, this.entityData.DocTemplatePath);
				this.entityData.DocTemplatePath = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.DocTemplatePath, this.entityData.DocTemplatePath);
				OnPropertyChanged("DocTemplatePath");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DelFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal DelFlg
		{
			get
			{
				return this.entityData.DelFlg; 
			}
			
			set
			{
				if (this.entityData.DelFlg == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.DelFlg, this.entityData.DelFlg);
				this.entityData.DelFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.DelFlg, this.entityData.DelFlg);
				OnPropertyChanged("DelFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OrigDocNo property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal OrigDocNo
		{
			get
			{
				return this.entityData.OrigDocNo; 
			}
			
			set
			{
				if (this.entityData.OrigDocNo == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.OrigDocNo, this.entityData.OrigDocNo);
				this.entityData.OrigDocNo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.OrigDocNo, this.entityData.OrigDocNo);
				OnPropertyChanged("OrigDocNo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CopyDocNo property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal CopyDocNo
		{
			get
			{
				return this.entityData.CopyDocNo; 
			}
			
			set
			{
				if (this.entityData.CopyDocNo == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.CopyDocNo, this.entityData.CopyDocNo);
				this.entityData.CopyDocNo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.CopyDocNo, this.entityData.CopyDocNo);
				OnPropertyChanged("CopyDocNo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeGenderId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeGenderIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeGenderId
		{
			get
			{
				return this.entityData.GsCodeGenderId; 
			}
			
			set
			{
				if (this.entityData.GsCodeGenderId == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.GsCodeGenderId, this.entityData.GsCodeGenderId);
				this.entityData.GsCodeGenderId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.GsCodeGenderId, this.entityData.GsCodeGenderId);
				OnPropertyChanged("GsCodeGenderId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DocTypeFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal DocTypeFlg
		{
			get
			{
				return this.entityData.DocTypeFlg; 
			}
			
			set
			{
				if (this.entityData.DocTypeFlg == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.DocTypeFlg, this.entityData.DocTypeFlg);
				this.entityData.DocTypeFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.DocTypeFlg, this.entityData.DocTypeFlg);
				OnPropertyChanged("DocTypeFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AutoloadFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal AutoloadFlg
		{
			get
			{
				return this.entityData.AutoloadFlg; 
			}
			
			set
			{
				if (this.entityData.AutoloadFlg == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.AutoloadFlg, this.entityData.AutoloadFlg);
				this.entityData.AutoloadFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.AutoloadFlg, this.entityData.AutoloadFlg);
				OnPropertyChanged("AutoloadFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TransAppFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal TransAppFlg
		{
			get
			{
				return this.entityData.TransAppFlg; 
			}
			
			set
			{
				if (this.entityData.TransAppFlg == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.TransAppFlg, this.entityData.TransAppFlg);
				this.entityData.TransAppFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.TransAppFlg, this.entityData.TransAppFlg);
				OnPropertyChanged("TransAppFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AsCodeDegreeClassId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAsCodeDegreeClassIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AsCodeDegreeClassId
		{
			get
			{
				return this.entityData.AsCodeDegreeClassId; 
			}
			
			set
			{
				if (this.entityData.AsCodeDegreeClassId == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.AsCodeDegreeClassId, this.entityData.AsCodeDegreeClassId);
				this.entityData.AsCodeDegreeClassId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.AsCodeDegreeClassId, this.entityData.AsCodeDegreeClassId);
				OnPropertyChanged("AsCodeDegreeClassId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AsCodeDegreeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAsCodeDegreeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AsCodeDegreeId
		{
			get
			{
				return this.entityData.AsCodeDegreeId; 
			}
			
			set
			{
				if (this.entityData.AsCodeDegreeId == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.AsCodeDegreeId, this.entityData.AsCodeDegreeId);
				this.entityData.AsCodeDegreeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.AsCodeDegreeId, this.entityData.AsCodeDegreeId);
				OnPropertyChanged("AsCodeDegreeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeQualId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeQualIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCodeQualId
		{
			get
			{
				return this.entityData.EdCodeQualId; 
			}
			
			set
			{
				if (this.entityData.EdCodeQualId == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.EdCodeQualId, this.entityData.EdCodeQualId);
				this.entityData.EdCodeQualId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.EdCodeQualId, this.entityData.EdCodeQualId);
				OnPropertyChanged("EdCodeQualId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCdeSchoolId property. 
		///		اكواد المدارس
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCdeSchoolIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"اكواد المدارس"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCdeSchoolId
		{
			get
			{
				return this.entityData.GsCdeSchoolId; 
			}
			
			set
			{
				if (this.entityData.GsCdeSchoolId == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.GsCdeSchoolId, this.entityData.GsCdeSchoolId);
				this.entityData.GsCdeSchoolId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.GsCdeSchoolId, this.entityData.GsCdeSchoolId);
				OnPropertyChanged("GsCdeSchoolId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OptionalFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsOptionalFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? OptionalFlg
		{
			get
			{
				return this.entityData.OptionalFlg; 
			}
			
			set
			{
				if (this.entityData.OptionalFlg == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.OptionalFlg, this.entityData.OptionalFlg);
				this.entityData.OptionalFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.OptionalFlg, this.entityData.OptionalFlg);
				OnPropertyChanged("OptionalFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DocHint property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 300)]
		public virtual System.String DocHint
		{
			get
			{
				return this.entityData.DocHint; 
			}
			
			set
			{
				if (this.entityData.DocHint == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.DocHint, this.entityData.DocHint);
				this.entityData.DocHint = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.DocHint, this.entityData.DocHint);
				OnPropertyChanged("DocHint");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCdeDocId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsGsCdeDocIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? GsCdeDocId
		{
			get
			{
				return this.entityData.GsCdeDocId; 
			}
			
			set
			{
				if (this.entityData.GsCdeDocId == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.GsCdeDocId, this.entityData.GsCdeDocId);
				this.entityData.GsCdeDocId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.GsCdeDocId, this.entityData.GsCdeDocId);
				OnPropertyChanged("GsCdeDocId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCdeMaritalStatusId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCdeMaritalStatusIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCdeMaritalStatusId
		{
			get
			{
				return this.entityData.GsCdeMaritalStatusId; 
			}
			
			set
			{
				if (this.entityData.GsCdeMaritalStatusId == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.GsCdeMaritalStatusId, this.entityData.GsCdeMaritalStatusId);
				this.entityData.GsCdeMaritalStatusId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.GsCdeMaritalStatusId, this.entityData.GsCdeMaritalStatusId);
				OnPropertyChanged("GsCdeMaritalStatusId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ForeignFlg property. 
		///		Ejust  (International Yes/No) to specify that this Exam for International applicants only
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsForeignFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"Ejust  (International Yes/No) to specify that this Exam for International applicants only"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ForeignFlg
		{
			get
			{
				return this.entityData.ForeignFlg; 
			}
			
			set
			{
				if (this.entityData.ForeignFlg == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.ForeignFlg, this.entityData.ForeignFlg);
				this.entityData.ForeignFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.ForeignFlg, this.entityData.ForeignFlg);
				OnPropertyChanged("ForeignFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmCdeAppTypeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmCdeAppTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmCdeAppTypeId
		{
			get
			{
				return this.entityData.AdmCdeAppTypeId; 
			}
			
			set
			{
				if (this.entityData.AdmCdeAppTypeId == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.AdmCdeAppTypeId, this.entityData.AdmCdeAppTypeId);
				this.entityData.AdmCdeAppTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.AdmCdeAppTypeId, this.entityData.AdmCdeAppTypeId);
				OnPropertyChanged("AdmCdeAppTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SponsoredFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsSponsoredFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? SponsoredFlg
		{
			get
			{
				return this.entityData.SponsoredFlg; 
			}
			
			set
			{
				if (this.entityData.SponsoredFlg == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.SponsoredFlg, this.entityData.SponsoredFlg);
				this.entityData.SponsoredFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.SponsoredFlg, this.entityData.SponsoredFlg);
				OnPropertyChanged("SponsoredFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SpoSponsorTypeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSpoSponsorTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SpoSponsorTypeId
		{
			get
			{
				return this.entityData.SpoSponsorTypeId; 
			}
			
			set
			{
				if (this.entityData.SpoSponsorTypeId == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.SpoSponsorTypeId, this.entityData.SpoSponsorTypeId);
				this.entityData.SpoSponsorTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.SpoSponsorTypeId, this.entityData.SpoSponsorTypeId);
				OnPropertyChanged("SpoSponsorTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AppHideFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAppHideFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AppHideFlg
		{
			get
			{
				return this.entityData.AppHideFlg; 
			}
			
			set
			{
				if (this.entityData.AppHideFlg == value)
					return;
					
				OnColumnChanging(AdmReqDocColumn.AppHideFlg, this.entityData.AppHideFlg);
				this.entityData.AppHideFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmReqDocColumn.AppHideFlg, this.entityData.AppHideFlg);
				OnPropertyChanged("AppHideFlg");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeAppType"/>.
		/// </summary>
		/// <value>The source AdmCdeAppType for AdmCdeAppTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmCdeAppType AdmCdeAppTypeIdSource
      	{
            get { return entityData.AdmCdeAppTypeIdSource; }
            set { entityData.AdmCdeAppTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AsCodeDegree"/>.
		/// </summary>
		/// <value>The source AsCodeDegree for AsCodeDegreeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AsCodeDegree AsCodeDegreeIdSource
      	{
            get { return entityData.AsCodeDegreeIdSource; }
            set { entityData.AsCodeDegreeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AsCodeDegreeClass"/>.
		/// </summary>
		/// <value>The source AsCodeDegreeClass for AsCodeDegreeClassId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AsCodeDegreeClass AsCodeDegreeClassIdSource
      	{
            get { return entityData.AsCodeDegreeClassIdSource; }
            set { entityData.AsCodeDegreeClassIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeQual"/>.
		/// </summary>
		/// <value>The source EdCodeQual for EdCodeQualId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeQual EdCodeQualIdSource
      	{
            get { return entityData.EdCodeQualIdSource; }
            set { entityData.EdCodeQualIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EntityMain"/>.
		/// </summary>
		/// <value>The source EntityMain for EntMainId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EntityMain EntMainIdSource
      	{
            get { return entityData.EntMainIdSource; }
            set { entityData.EntMainIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeDoc"/>.
		/// </summary>
		/// <value>The source GsCdeDoc for GsCdeDocId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeDoc GsCdeDocIdSource
      	{
            get { return entityData.GsCdeDocIdSource; }
            set { entityData.GsCdeDocIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeMaritalStatus"/>.
		/// </summary>
		/// <value>The source GsCdeMaritalStatus for GsCdeMaritalStatusId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeMaritalStatus GsCdeMaritalStatusIdSource
      	{
            get { return entityData.GsCdeMaritalStatusIdSource; }
            set { entityData.GsCdeMaritalStatusIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeSchool"/>.
		/// </summary>
		/// <value>The source GsCdeSchool for GsCdeSchoolId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeSchool GsCdeSchoolIdSource
      	{
            get { return entityData.GsCdeSchoolIdSource; }
            set { entityData.GsCdeSchoolIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeGender"/>.
		/// </summary>
		/// <value>The source GsCodeGender for GsCodeGenderId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeGender GsCodeGenderIdSource
      	{
            get { return entityData.GsCodeGenderIdSource; }
            set { entityData.GsCodeGenderIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SpoSponsorType"/>.
		/// </summary>
		/// <value>The source SpoSponsorType for SpoSponsorTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SpoSponsorType SpoSponsorTypeIdSource
      	{
            get { return entityData.SpoSponsorTypeIdSource; }
            set { entityData.SpoSponsorTypeIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of AdmAppDoc objects
		///	which are related to this object through the relation FK_ADM_APP_DOC_ADM_REQ_DOC
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppDoc> AdmAppDocCollection
		{
			get { return entityData.AdmAppDocCollection; }
			set { entityData.AdmAppDocCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DescrAr", "Descr Ar", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DescrEn", "Descr En", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DocTemplatePath", "Doc Template Path", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DocHint", "Doc Hint", 300));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ADM_REQ_DOC"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ADM_REQ_DOC_ID", "ENT_MAIN_ID", "DESCR_AR", "DESCR_EN", "DOC_TEMPLATE_PATH", "DEL_FLG", "ORIG_DOC_NO", "COPY_DOC_NO", "GS_CODE_GENDER_ID", "DOC_TYPE_FLG", "AUTOLOAD_FLG", "TRANS_APP_FLG", "AS_CODE_DEGREE_CLASS_ID", "AS_CODE_DEGREE_ID", "ED_CODE_QUAL_ID", "GS_CDE_SCHOOL_ID", "OPTIONAL_FLG", "DOC_HINT", "GS_CDE_DOC_ID", "GS_CDE_MARITAL_STATUS_ID", "FOREIGN_FLG", "ADM_CDE_APP_TYPE_ID", "SPONSORED_FLG", "SPO_SPONSOR_TYPE_ID", "SE_USER_ID", "LAST_DATE", "APP_HIDE_FLG"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as AdmReqDocEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (AdmReqDoc) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<AdmReqDoc>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as AdmReqDoc);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed AdmReqDoc Entity 
		///</summary>
		protected virtual AdmReqDoc Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			AdmReqDoc copy = new AdmReqDoc();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.AdmReqDocId = this.AdmReqDocId;
					copy.OriginalAdmReqDocId = this.OriginalAdmReqDocId;
				copy.EntMainId = this.EntMainId;
				copy.DescrAr = this.DescrAr;
				copy.DescrEn = this.DescrEn;
				copy.DocTemplatePath = this.DocTemplatePath;
				copy.DelFlg = this.DelFlg;
				copy.OrigDocNo = this.OrigDocNo;
				copy.CopyDocNo = this.CopyDocNo;
				copy.GsCodeGenderId = this.GsCodeGenderId;
				copy.DocTypeFlg = this.DocTypeFlg;
				copy.AutoloadFlg = this.AutoloadFlg;
				copy.TransAppFlg = this.TransAppFlg;
				copy.AsCodeDegreeClassId = this.AsCodeDegreeClassId;
				copy.AsCodeDegreeId = this.AsCodeDegreeId;
				copy.EdCodeQualId = this.EdCodeQualId;
				copy.GsCdeSchoolId = this.GsCdeSchoolId;
				copy.OptionalFlg = this.OptionalFlg;
				copy.DocHint = this.DocHint;
				copy.GsCdeDocId = this.GsCdeDocId;
				copy.GsCdeMaritalStatusId = this.GsCdeMaritalStatusId;
				copy.ForeignFlg = this.ForeignFlg;
				copy.AdmCdeAppTypeId = this.AdmCdeAppTypeId;
				copy.SponsoredFlg = this.SponsoredFlg;
				copy.SpoSponsorTypeId = this.SpoSponsorTypeId;
				copy.SeUserId = this.SeUserId;
				copy.LastDate = this.LastDate;
				copy.AppHideFlg = this.AppHideFlg;
			
			if (this.AdmCdeAppTypeIdSource != null && existingCopies.Contains(this.AdmCdeAppTypeIdSource))
				copy.AdmCdeAppTypeIdSource = existingCopies[this.AdmCdeAppTypeIdSource] as AdmCdeAppType;
			else
				copy.AdmCdeAppTypeIdSource = MakeCopyOf(this.AdmCdeAppTypeIdSource, existingCopies) as AdmCdeAppType;
			if (this.AsCodeDegreeIdSource != null && existingCopies.Contains(this.AsCodeDegreeIdSource))
				copy.AsCodeDegreeIdSource = existingCopies[this.AsCodeDegreeIdSource] as AsCodeDegree;
			else
				copy.AsCodeDegreeIdSource = MakeCopyOf(this.AsCodeDegreeIdSource, existingCopies) as AsCodeDegree;
			if (this.AsCodeDegreeClassIdSource != null && existingCopies.Contains(this.AsCodeDegreeClassIdSource))
				copy.AsCodeDegreeClassIdSource = existingCopies[this.AsCodeDegreeClassIdSource] as AsCodeDegreeClass;
			else
				copy.AsCodeDegreeClassIdSource = MakeCopyOf(this.AsCodeDegreeClassIdSource, existingCopies) as AsCodeDegreeClass;
			if (this.EdCodeQualIdSource != null && existingCopies.Contains(this.EdCodeQualIdSource))
				copy.EdCodeQualIdSource = existingCopies[this.EdCodeQualIdSource] as EdCodeQual;
			else
				copy.EdCodeQualIdSource = MakeCopyOf(this.EdCodeQualIdSource, existingCopies) as EdCodeQual;
			if (this.EntMainIdSource != null && existingCopies.Contains(this.EntMainIdSource))
				copy.EntMainIdSource = existingCopies[this.EntMainIdSource] as EntityMain;
			else
				copy.EntMainIdSource = MakeCopyOf(this.EntMainIdSource, existingCopies) as EntityMain;
			if (this.GsCdeDocIdSource != null && existingCopies.Contains(this.GsCdeDocIdSource))
				copy.GsCdeDocIdSource = existingCopies[this.GsCdeDocIdSource] as GsCdeDoc;
			else
				copy.GsCdeDocIdSource = MakeCopyOf(this.GsCdeDocIdSource, existingCopies) as GsCdeDoc;
			if (this.GsCdeMaritalStatusIdSource != null && existingCopies.Contains(this.GsCdeMaritalStatusIdSource))
				copy.GsCdeMaritalStatusIdSource = existingCopies[this.GsCdeMaritalStatusIdSource] as GsCdeMaritalStatus;
			else
				copy.GsCdeMaritalStatusIdSource = MakeCopyOf(this.GsCdeMaritalStatusIdSource, existingCopies) as GsCdeMaritalStatus;
			if (this.GsCdeSchoolIdSource != null && existingCopies.Contains(this.GsCdeSchoolIdSource))
				copy.GsCdeSchoolIdSource = existingCopies[this.GsCdeSchoolIdSource] as GsCdeSchool;
			else
				copy.GsCdeSchoolIdSource = MakeCopyOf(this.GsCdeSchoolIdSource, existingCopies) as GsCdeSchool;
			if (this.GsCodeGenderIdSource != null && existingCopies.Contains(this.GsCodeGenderIdSource))
				copy.GsCodeGenderIdSource = existingCopies[this.GsCodeGenderIdSource] as GsCodeGender;
			else
				copy.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource, existingCopies) as GsCodeGender;
			if (this.SpoSponsorTypeIdSource != null && existingCopies.Contains(this.SpoSponsorTypeIdSource))
				copy.SpoSponsorTypeIdSource = existingCopies[this.SpoSponsorTypeIdSource] as SpoSponsorType;
			else
				copy.SpoSponsorTypeIdSource = MakeCopyOf(this.SpoSponsorTypeIdSource, existingCopies) as SpoSponsorType;
		
			//deep copy nested objects
			copy.AdmAppDocCollection = (TList<AdmAppDoc>) MakeCopyOf(this.AdmAppDocCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed AdmReqDoc Entity 
		///</summary>
		public virtual AdmReqDoc Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed AdmReqDoc Entity which is a deep copy of the current entity.
		///</summary>
		public virtual AdmReqDoc DeepCopy()
		{
			return EntityHelper.Clone<AdmReqDoc>(this as AdmReqDoc);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as AdmReqDocEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new AdmReqDocEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as AdmReqDocEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(AdmReqDocColumn column)
		{
			switch(column)
			{
					case AdmReqDocColumn.AdmReqDocId:
					return entityData.AdmReqDocId != _originalData.AdmReqDocId;
					case AdmReqDocColumn.EntMainId:
					return entityData.EntMainId != _originalData.EntMainId;
					case AdmReqDocColumn.DescrAr:
					return entityData.DescrAr != _originalData.DescrAr;
					case AdmReqDocColumn.DescrEn:
					return entityData.DescrEn != _originalData.DescrEn;
					case AdmReqDocColumn.DocTemplatePath:
					return entityData.DocTemplatePath != _originalData.DocTemplatePath;
					case AdmReqDocColumn.DelFlg:
					return entityData.DelFlg != _originalData.DelFlg;
					case AdmReqDocColumn.OrigDocNo:
					return entityData.OrigDocNo != _originalData.OrigDocNo;
					case AdmReqDocColumn.CopyDocNo:
					return entityData.CopyDocNo != _originalData.CopyDocNo;
					case AdmReqDocColumn.GsCodeGenderId:
					return entityData.GsCodeGenderId != _originalData.GsCodeGenderId;
					case AdmReqDocColumn.DocTypeFlg:
					return entityData.DocTypeFlg != _originalData.DocTypeFlg;
					case AdmReqDocColumn.AutoloadFlg:
					return entityData.AutoloadFlg != _originalData.AutoloadFlg;
					case AdmReqDocColumn.TransAppFlg:
					return entityData.TransAppFlg != _originalData.TransAppFlg;
					case AdmReqDocColumn.AsCodeDegreeClassId:
					return entityData.AsCodeDegreeClassId != _originalData.AsCodeDegreeClassId;
					case AdmReqDocColumn.AsCodeDegreeId:
					return entityData.AsCodeDegreeId != _originalData.AsCodeDegreeId;
					case AdmReqDocColumn.EdCodeQualId:
					return entityData.EdCodeQualId != _originalData.EdCodeQualId;
					case AdmReqDocColumn.GsCdeSchoolId:
					return entityData.GsCdeSchoolId != _originalData.GsCdeSchoolId;
					case AdmReqDocColumn.OptionalFlg:
					return entityData.OptionalFlg != _originalData.OptionalFlg;
					case AdmReqDocColumn.DocHint:
					return entityData.DocHint != _originalData.DocHint;
					case AdmReqDocColumn.GsCdeDocId:
					return entityData.GsCdeDocId != _originalData.GsCdeDocId;
					case AdmReqDocColumn.GsCdeMaritalStatusId:
					return entityData.GsCdeMaritalStatusId != _originalData.GsCdeMaritalStatusId;
					case AdmReqDocColumn.ForeignFlg:
					return entityData.ForeignFlg != _originalData.ForeignFlg;
					case AdmReqDocColumn.AdmCdeAppTypeId:
					return entityData.AdmCdeAppTypeId != _originalData.AdmCdeAppTypeId;
					case AdmReqDocColumn.SponsoredFlg:
					return entityData.SponsoredFlg != _originalData.SponsoredFlg;
					case AdmReqDocColumn.SpoSponsorTypeId:
					return entityData.SpoSponsorTypeId != _originalData.SpoSponsorTypeId;
					case AdmReqDocColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
					case AdmReqDocColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
					case AdmReqDocColumn.AppHideFlg:
					return entityData.AppHideFlg != _originalData.AppHideFlg;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< AdmReqDocColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.AdmReqDocId != _originalData.AdmReqDocId;
			result = result || entityData.EntMainId != _originalData.EntMainId;
			result = result || entityData.DescrAr != _originalData.DescrAr;
			result = result || entityData.DescrEn != _originalData.DescrEn;
			result = result || entityData.DocTemplatePath != _originalData.DocTemplatePath;
			result = result || entityData.DelFlg != _originalData.DelFlg;
			result = result || entityData.OrigDocNo != _originalData.OrigDocNo;
			result = result || entityData.CopyDocNo != _originalData.CopyDocNo;
			result = result || entityData.GsCodeGenderId != _originalData.GsCodeGenderId;
			result = result || entityData.DocTypeFlg != _originalData.DocTypeFlg;
			result = result || entityData.AutoloadFlg != _originalData.AutoloadFlg;
			result = result || entityData.TransAppFlg != _originalData.TransAppFlg;
			result = result || entityData.AsCodeDegreeClassId != _originalData.AsCodeDegreeClassId;
			result = result || entityData.AsCodeDegreeId != _originalData.AsCodeDegreeId;
			result = result || entityData.EdCodeQualId != _originalData.EdCodeQualId;
			result = result || entityData.GsCdeSchoolId != _originalData.GsCdeSchoolId;
			result = result || entityData.OptionalFlg != _originalData.OptionalFlg;
			result = result || entityData.DocHint != _originalData.DocHint;
			result = result || entityData.GsCdeDocId != _originalData.GsCdeDocId;
			result = result || entityData.GsCdeMaritalStatusId != _originalData.GsCdeMaritalStatusId;
			result = result || entityData.ForeignFlg != _originalData.ForeignFlg;
			result = result || entityData.AdmCdeAppTypeId != _originalData.AdmCdeAppTypeId;
			result = result || entityData.SponsoredFlg != _originalData.SponsoredFlg;
			result = result || entityData.SpoSponsorTypeId != _originalData.SpoSponsorTypeId;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			result = result || entityData.LastDate != _originalData.LastDate;
			result = result || entityData.AppHideFlg != _originalData.AppHideFlg;
			return result;
		}	
		
		///<summary>
		///  Returns a AdmReqDoc Entity with the original data.
		///</summary>
		public AdmReqDoc GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateAdmReqDoc(
				_originalData.AdmReqDocId,
				_originalData.EntMainId,
				_originalData.DescrAr,
				_originalData.DescrEn,
				_originalData.DocTemplatePath,
				_originalData.DelFlg,
				_originalData.OrigDocNo,
				_originalData.CopyDocNo,
				_originalData.GsCodeGenderId,
				_originalData.DocTypeFlg,
				_originalData.AutoloadFlg,
				_originalData.TransAppFlg,
				_originalData.AsCodeDegreeClassId,
				_originalData.AsCodeDegreeId,
				_originalData.EdCodeQualId,
				_originalData.GsCdeSchoolId,
				_originalData.OptionalFlg,
				_originalData.DocHint,
				_originalData.GsCdeDocId,
				_originalData.GsCdeMaritalStatusId,
				_originalData.ForeignFlg,
				_originalData.AdmCdeAppTypeId,
				_originalData.SponsoredFlg,
				_originalData.SpoSponsorTypeId,
				_originalData.SeUserId,
				_originalData.LastDate,
				_originalData.AppHideFlg
				);
				
			return (AdmReqDoc)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="AdmReqDocBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is AdmReqDocBase)
				return ValueEquals(this, (AdmReqDocBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="AdmReqDocBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.AdmReqDocId.GetHashCode() ^ 
					this.EntMainId.GetHashCode() ^ 
					((this.DescrAr == null) ? string.Empty : this.DescrAr.ToString()).GetHashCode() ^ 
					((this.DescrEn == null) ? string.Empty : this.DescrEn.ToString()).GetHashCode() ^ 
					((this.DocTemplatePath == null) ? string.Empty : this.DocTemplatePath.ToString()).GetHashCode() ^ 
					this.DelFlg.GetHashCode() ^ 
					this.OrigDocNo.GetHashCode() ^ 
					this.CopyDocNo.GetHashCode() ^ 
					((this.GsCodeGenderId == null) ? string.Empty : this.GsCodeGenderId.ToString()).GetHashCode() ^ 
					this.DocTypeFlg.GetHashCode() ^ 
					this.AutoloadFlg.GetHashCode() ^ 
					this.TransAppFlg.GetHashCode() ^ 
					((this.AsCodeDegreeClassId == null) ? string.Empty : this.AsCodeDegreeClassId.ToString()).GetHashCode() ^ 
					((this.AsCodeDegreeId == null) ? string.Empty : this.AsCodeDegreeId.ToString()).GetHashCode() ^ 
					((this.EdCodeQualId == null) ? string.Empty : this.EdCodeQualId.ToString()).GetHashCode() ^ 
					((this.GsCdeSchoolId == null) ? string.Empty : this.GsCdeSchoolId.ToString()).GetHashCode() ^ 
					((this.OptionalFlg == null) ? string.Empty : this.OptionalFlg.ToString()).GetHashCode() ^ 
					((this.DocHint == null) ? string.Empty : this.DocHint.ToString()).GetHashCode() ^ 
					((this.GsCdeDocId == null) ? string.Empty : this.GsCdeDocId.ToString()).GetHashCode() ^ 
					((this.GsCdeMaritalStatusId == null) ? string.Empty : this.GsCdeMaritalStatusId.ToString()).GetHashCode() ^ 
					((this.ForeignFlg == null) ? string.Empty : this.ForeignFlg.ToString()).GetHashCode() ^ 
					((this.AdmCdeAppTypeId == null) ? string.Empty : this.AdmCdeAppTypeId.ToString()).GetHashCode() ^ 
					((this.SponsoredFlg == null) ? string.Empty : this.SponsoredFlg.ToString()).GetHashCode() ^ 
					((this.SpoSponsorTypeId == null) ? string.Empty : this.SpoSponsorTypeId.ToString()).GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode() ^ 
					((this.AppHideFlg == null) ? string.Empty : this.AppHideFlg.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="AdmReqDocBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(AdmReqDocBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="AdmReqDocBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="AdmReqDocBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="AdmReqDocBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(AdmReqDocBase Object1, AdmReqDocBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.AdmReqDocId != Object2.AdmReqDocId)
				equal = false;
			if (Object1.EntMainId != Object2.EntMainId)
				equal = false;
			if ( Object1.DescrAr != null && Object2.DescrAr != null )
			{
				if (Object1.DescrAr != Object2.DescrAr)
					equal = false;
			}
			else if (Object1.DescrAr == null ^ Object2.DescrAr == null )
			{
				equal = false;
			}
			if ( Object1.DescrEn != null && Object2.DescrEn != null )
			{
				if (Object1.DescrEn != Object2.DescrEn)
					equal = false;
			}
			else if (Object1.DescrEn == null ^ Object2.DescrEn == null )
			{
				equal = false;
			}
			if ( Object1.DocTemplatePath != null && Object2.DocTemplatePath != null )
			{
				if (Object1.DocTemplatePath != Object2.DocTemplatePath)
					equal = false;
			}
			else if (Object1.DocTemplatePath == null ^ Object2.DocTemplatePath == null )
			{
				equal = false;
			}
			if (Object1.DelFlg != Object2.DelFlg)
				equal = false;
			if (Object1.OrigDocNo != Object2.OrigDocNo)
				equal = false;
			if (Object1.CopyDocNo != Object2.CopyDocNo)
				equal = false;
			if ( Object1.GsCodeGenderId != null && Object2.GsCodeGenderId != null )
			{
				if (Object1.GsCodeGenderId != Object2.GsCodeGenderId)
					equal = false;
			}
			else if (Object1.GsCodeGenderId == null ^ Object2.GsCodeGenderId == null )
			{
				equal = false;
			}
			if (Object1.DocTypeFlg != Object2.DocTypeFlg)
				equal = false;
			if (Object1.AutoloadFlg != Object2.AutoloadFlg)
				equal = false;
			if (Object1.TransAppFlg != Object2.TransAppFlg)
				equal = false;
			if ( Object1.AsCodeDegreeClassId != null && Object2.AsCodeDegreeClassId != null )
			{
				if (Object1.AsCodeDegreeClassId != Object2.AsCodeDegreeClassId)
					equal = false;
			}
			else if (Object1.AsCodeDegreeClassId == null ^ Object2.AsCodeDegreeClassId == null )
			{
				equal = false;
			}
			if ( Object1.AsCodeDegreeId != null && Object2.AsCodeDegreeId != null )
			{
				if (Object1.AsCodeDegreeId != Object2.AsCodeDegreeId)
					equal = false;
			}
			else if (Object1.AsCodeDegreeId == null ^ Object2.AsCodeDegreeId == null )
			{
				equal = false;
			}
			if ( Object1.EdCodeQualId != null && Object2.EdCodeQualId != null )
			{
				if (Object1.EdCodeQualId != Object2.EdCodeQualId)
					equal = false;
			}
			else if (Object1.EdCodeQualId == null ^ Object2.EdCodeQualId == null )
			{
				equal = false;
			}
			if ( Object1.GsCdeSchoolId != null && Object2.GsCdeSchoolId != null )
			{
				if (Object1.GsCdeSchoolId != Object2.GsCdeSchoolId)
					equal = false;
			}
			else if (Object1.GsCdeSchoolId == null ^ Object2.GsCdeSchoolId == null )
			{
				equal = false;
			}
			if ( Object1.OptionalFlg != null && Object2.OptionalFlg != null )
			{
				if (Object1.OptionalFlg != Object2.OptionalFlg)
					equal = false;
			}
			else if (Object1.OptionalFlg == null ^ Object2.OptionalFlg == null )
			{
				equal = false;
			}
			if ( Object1.DocHint != null && Object2.DocHint != null )
			{
				if (Object1.DocHint != Object2.DocHint)
					equal = false;
			}
			else if (Object1.DocHint == null ^ Object2.DocHint == null )
			{
				equal = false;
			}
			if ( Object1.GsCdeDocId != null && Object2.GsCdeDocId != null )
			{
				if (Object1.GsCdeDocId != Object2.GsCdeDocId)
					equal = false;
			}
			else if (Object1.GsCdeDocId == null ^ Object2.GsCdeDocId == null )
			{
				equal = false;
			}
			if ( Object1.GsCdeMaritalStatusId != null && Object2.GsCdeMaritalStatusId != null )
			{
				if (Object1.GsCdeMaritalStatusId != Object2.GsCdeMaritalStatusId)
					equal = false;
			}
			else if (Object1.GsCdeMaritalStatusId == null ^ Object2.GsCdeMaritalStatusId == null )
			{
				equal = false;
			}
			if ( Object1.ForeignFlg != null && Object2.ForeignFlg != null )
			{
				if (Object1.ForeignFlg != Object2.ForeignFlg)
					equal = false;
			}
			else if (Object1.ForeignFlg == null ^ Object2.ForeignFlg == null )
			{
				equal = false;
			}
			if ( Object1.AdmCdeAppTypeId != null && Object2.AdmCdeAppTypeId != null )
			{
				if (Object1.AdmCdeAppTypeId != Object2.AdmCdeAppTypeId)
					equal = false;
			}
			else if (Object1.AdmCdeAppTypeId == null ^ Object2.AdmCdeAppTypeId == null )
			{
				equal = false;
			}
			if ( Object1.SponsoredFlg != null && Object2.SponsoredFlg != null )
			{
				if (Object1.SponsoredFlg != Object2.SponsoredFlg)
					equal = false;
			}
			else if (Object1.SponsoredFlg == null ^ Object2.SponsoredFlg == null )
			{
				equal = false;
			}
			if ( Object1.SpoSponsorTypeId != null && Object2.SpoSponsorTypeId != null )
			{
				if (Object1.SpoSponsorTypeId != Object2.SpoSponsorTypeId)
					equal = false;
			}
			else if (Object1.SpoSponsorTypeId == null ^ Object2.SpoSponsorTypeId == null )
			{
				equal = false;
			}
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
			if ( Object1.AppHideFlg != null && Object2.AppHideFlg != null )
			{
				if (Object1.AppHideFlg != Object2.AppHideFlg)
					equal = false;
			}
			else if (Object1.AppHideFlg == null ^ Object2.AppHideFlg == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((AdmReqDocBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static AdmReqDocComparer GetComparer()
        {
            return new AdmReqDocComparer();
        }
        */

        // Comparer delegates back to AdmReqDoc
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(AdmReqDoc rhs, AdmReqDocColumn which)
        {
            switch (which)
            {
            	
            	
            	case AdmReqDocColumn.AdmReqDocId:
            		return this.AdmReqDocId.CompareTo(rhs.AdmReqDocId);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.EntMainId:
            		return this.EntMainId.CompareTo(rhs.EntMainId);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.DescrAr:
            		return this.DescrAr.CompareTo(rhs.DescrAr);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.DescrEn:
            		return this.DescrEn.CompareTo(rhs.DescrEn);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.DocTemplatePath:
            		return this.DocTemplatePath.CompareTo(rhs.DocTemplatePath);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.DelFlg:
            		return this.DelFlg.CompareTo(rhs.DelFlg);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.OrigDocNo:
            		return this.OrigDocNo.CompareTo(rhs.OrigDocNo);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.CopyDocNo:
            		return this.CopyDocNo.CompareTo(rhs.CopyDocNo);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.GsCodeGenderId:
            		return this.GsCodeGenderId.Value.CompareTo(rhs.GsCodeGenderId.Value);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.DocTypeFlg:
            		return this.DocTypeFlg.CompareTo(rhs.DocTypeFlg);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.AutoloadFlg:
            		return this.AutoloadFlg.CompareTo(rhs.AutoloadFlg);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.TransAppFlg:
            		return this.TransAppFlg.CompareTo(rhs.TransAppFlg);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.AsCodeDegreeClassId:
            		return this.AsCodeDegreeClassId.Value.CompareTo(rhs.AsCodeDegreeClassId.Value);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.AsCodeDegreeId:
            		return this.AsCodeDegreeId.Value.CompareTo(rhs.AsCodeDegreeId.Value);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.EdCodeQualId:
            		return this.EdCodeQualId.Value.CompareTo(rhs.EdCodeQualId.Value);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.GsCdeSchoolId:
            		return this.GsCdeSchoolId.Value.CompareTo(rhs.GsCdeSchoolId.Value);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.OptionalFlg:
            		return this.OptionalFlg.Value.CompareTo(rhs.OptionalFlg.Value);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.DocHint:
            		return this.DocHint.CompareTo(rhs.DocHint);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.GsCdeDocId:
            		return this.GsCdeDocId.Value.CompareTo(rhs.GsCdeDocId.Value);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.GsCdeMaritalStatusId:
            		return this.GsCdeMaritalStatusId.Value.CompareTo(rhs.GsCdeMaritalStatusId.Value);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.ForeignFlg:
            		return this.ForeignFlg.Value.CompareTo(rhs.ForeignFlg.Value);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.AdmCdeAppTypeId:
            		return this.AdmCdeAppTypeId.Value.CompareTo(rhs.AdmCdeAppTypeId.Value);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.SponsoredFlg:
            		return this.SponsoredFlg.Value.CompareTo(rhs.SponsoredFlg.Value);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.SpoSponsorTypeId:
            		return this.SpoSponsorTypeId.Value.CompareTo(rhs.SpoSponsorTypeId.Value);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            	
            	
            	case AdmReqDocColumn.AppHideFlg:
            		return this.AppHideFlg.Value.CompareTo(rhs.AppHideFlg.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<AdmReqDocKey> Members
		
		// member variable for the EntityId property
		private AdmReqDocKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual AdmReqDocKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new AdmReqDocKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("AdmReqDoc")
					.Append("|").Append( this.AdmReqDocId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{28}{27}- AdmReqDocId: {0}{27}- EntMainId: {1}{27}- DescrAr: {2}{27}- DescrEn: {3}{27}- DocTemplatePath: {4}{27}- DelFlg: {5}{27}- OrigDocNo: {6}{27}- CopyDocNo: {7}{27}- GsCodeGenderId: {8}{27}- DocTypeFlg: {9}{27}- AutoloadFlg: {10}{27}- TransAppFlg: {11}{27}- AsCodeDegreeClassId: {12}{27}- AsCodeDegreeId: {13}{27}- EdCodeQualId: {14}{27}- GsCdeSchoolId: {15}{27}- OptionalFlg: {16}{27}- DocHint: {17}{27}- GsCdeDocId: {18}{27}- GsCdeMaritalStatusId: {19}{27}- ForeignFlg: {20}{27}- AdmCdeAppTypeId: {21}{27}- SponsoredFlg: {22}{27}- SpoSponsorTypeId: {23}{27}- SeUserId: {24}{27}- LastDate: {25}{27}- AppHideFlg: {26}{27}{29}", 
				this.AdmReqDocId,
				this.EntMainId,
				(this.DescrAr == null) ? string.Empty : this.DescrAr.ToString(),
				(this.DescrEn == null) ? string.Empty : this.DescrEn.ToString(),
				(this.DocTemplatePath == null) ? string.Empty : this.DocTemplatePath.ToString(),
				this.DelFlg,
				this.OrigDocNo,
				this.CopyDocNo,
				(this.GsCodeGenderId == null) ? string.Empty : this.GsCodeGenderId.ToString(),
				this.DocTypeFlg,
				this.AutoloadFlg,
				this.TransAppFlg,
				(this.AsCodeDegreeClassId == null) ? string.Empty : this.AsCodeDegreeClassId.ToString(),
				(this.AsCodeDegreeId == null) ? string.Empty : this.AsCodeDegreeId.ToString(),
				(this.EdCodeQualId == null) ? string.Empty : this.EdCodeQualId.ToString(),
				(this.GsCdeSchoolId == null) ? string.Empty : this.GsCdeSchoolId.ToString(),
				(this.OptionalFlg == null) ? string.Empty : this.OptionalFlg.ToString(),
				(this.DocHint == null) ? string.Empty : this.DocHint.ToString(),
				(this.GsCdeDocId == null) ? string.Empty : this.GsCdeDocId.ToString(),
				(this.GsCdeMaritalStatusId == null) ? string.Empty : this.GsCdeMaritalStatusId.ToString(),
				(this.ForeignFlg == null) ? string.Empty : this.ForeignFlg.ToString(),
				(this.AdmCdeAppTypeId == null) ? string.Empty : this.AdmCdeAppTypeId.ToString(),
				(this.SponsoredFlg == null) ? string.Empty : this.SponsoredFlg.ToString(),
				(this.SpoSponsorTypeId == null) ? string.Empty : this.SpoSponsorTypeId.ToString(),
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				(this.AppHideFlg == null) ? string.Empty : this.AppHideFlg.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ADM_REQ_DOC' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class AdmReqDocEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ADM_REQ_DOC_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ADM_REQ_DOC"</remarks>
		public System.Decimal AdmReqDocId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalAdmReqDocId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// ENT_MAIN_ID : 
		/// </summary>
		public System.Decimal		  EntMainId = 0.0m;
		
		/// <summary>
		/// DESCR_AR : 
		/// </summary>
		public System.String		  DescrAr = null;
		
		/// <summary>
		/// DESCR_EN : 
		/// </summary>
		public System.String		  DescrEn = null;
		
		/// <summary>
		/// DOC_TEMPLATE_PATH : 
		/// </summary>
		public System.String		  DocTemplatePath = null;
		
		/// <summary>
		/// DEL_FLG : 
		/// </summary>
		public System.Decimal		  DelFlg = 0.0m;
		
		/// <summary>
		/// ORIG_DOC_NO : 
		/// </summary>
		public System.Decimal		  OrigDocNo = 0.0m;
		
		/// <summary>
		/// COPY_DOC_NO : 
		/// </summary>
		public System.Decimal		  CopyDocNo = 0.0m;
		
		/// <summary>
		/// GS_CODE_GENDER_ID : 
		/// </summary>
		public System.Decimal?		  GsCodeGenderId = null;
		
		/// <summary>
		/// DOC_TYPE_FLG : 
		/// </summary>
		public System.Decimal		  DocTypeFlg = 0.0m;
		
		/// <summary>
		/// AUTOLOAD_FLG : 
		/// </summary>
		public System.Decimal		  AutoloadFlg = 0.0m;
		
		/// <summary>
		/// TRANS_APP_FLG : 
		/// </summary>
		public System.Decimal		  TransAppFlg = 0.0m;
		
		/// <summary>
		/// AS_CODE_DEGREE_CLASS_ID : 
		/// </summary>
		public System.Decimal?		  AsCodeDegreeClassId = null;
		
		/// <summary>
		/// AS_CODE_DEGREE_ID : 
		/// </summary>
		public System.Decimal?		  AsCodeDegreeId = null;
		
		/// <summary>
		/// ED_CODE_QUAL_ID : 
		/// </summary>
		public System.Decimal?		  EdCodeQualId = null;
		
		/// <summary>
		/// GS_CDE_SCHOOL_ID : اكواد المدارس
		/// </summary>
		public System.Decimal?		  GsCdeSchoolId = null;
		
		/// <summary>
		/// OPTIONAL_FLG : 
		/// </summary>
		public System.Boolean?		  OptionalFlg = null;
		
		/// <summary>
		/// DOC_HINT : 
		/// </summary>
		public System.String		  DocHint = null;
		
		/// <summary>
		/// GS_CDE_DOC_ID : 
		/// </summary>
		public System.Int32?		  GsCdeDocId = null;
		
		/// <summary>
		/// GS_CDE_MARITAL_STATUS_ID : 
		/// </summary>
		public System.Decimal?		  GsCdeMaritalStatusId = null;
		
		/// <summary>
		/// FOREIGN_FLG : Ejust  (International Yes/No) to specify that this Exam for International applicants only
		/// </summary>
		public System.Decimal?		  ForeignFlg = null;
		
		/// <summary>
		/// ADM_CDE_APP_TYPE_ID : 
		/// </summary>
		public System.Decimal?		  AdmCdeAppTypeId = null;
		
		/// <summary>
		/// SPONSORED_FLG : 
		/// </summary>
		public System.Boolean?		  SponsoredFlg = null;
		
		/// <summary>
		/// SPO_SPONSOR_TYPE_ID : 
		/// </summary>
		public System.Decimal?		  SpoSponsorTypeId = null;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		
		/// <summary>
		/// APP_HIDE_FLG : 
		/// </summary>
		public System.Decimal?		  AppHideFlg = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private AdmCdeAppType _admCdeAppTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeAppType"/>.
		/// </summary>
		/// <value>The source AdmCdeAppType for AdmCdeAppTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmCdeAppType AdmCdeAppTypeIdSource
      	{
            get { return this._admCdeAppTypeIdSource; }
            set { this._admCdeAppTypeIdSource = value; }
      	}
		private AsCodeDegree _asCodeDegreeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AsCodeDegree"/>.
		/// </summary>
		/// <value>The source AsCodeDegree for AsCodeDegreeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AsCodeDegree AsCodeDegreeIdSource
      	{
            get { return this._asCodeDegreeIdSource; }
            set { this._asCodeDegreeIdSource = value; }
      	}
		private AsCodeDegreeClass _asCodeDegreeClassIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AsCodeDegreeClass"/>.
		/// </summary>
		/// <value>The source AsCodeDegreeClass for AsCodeDegreeClassId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AsCodeDegreeClass AsCodeDegreeClassIdSource
      	{
            get { return this._asCodeDegreeClassIdSource; }
            set { this._asCodeDegreeClassIdSource = value; }
      	}
		private EdCodeQual _edCodeQualIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeQual"/>.
		/// </summary>
		/// <value>The source EdCodeQual for EdCodeQualId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeQual EdCodeQualIdSource
      	{
            get { return this._edCodeQualIdSource; }
            set { this._edCodeQualIdSource = value; }
      	}
		private EntityMain _entMainIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EntityMain"/>.
		/// </summary>
		/// <value>The source EntityMain for EntMainId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EntityMain EntMainIdSource
      	{
            get { return this._entMainIdSource; }
            set { this._entMainIdSource = value; }
      	}
		private GsCdeDoc _gsCdeDocIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeDoc"/>.
		/// </summary>
		/// <value>The source GsCdeDoc for GsCdeDocId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeDoc GsCdeDocIdSource
      	{
            get { return this._gsCdeDocIdSource; }
            set { this._gsCdeDocIdSource = value; }
      	}
		private GsCdeMaritalStatus _gsCdeMaritalStatusIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeMaritalStatus"/>.
		/// </summary>
		/// <value>The source GsCdeMaritalStatus for GsCdeMaritalStatusId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeMaritalStatus GsCdeMaritalStatusIdSource
      	{
            get { return this._gsCdeMaritalStatusIdSource; }
            set { this._gsCdeMaritalStatusIdSource = value; }
      	}
		private GsCdeSchool _gsCdeSchoolIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeSchool"/>.
		/// </summary>
		/// <value>The source GsCdeSchool for GsCdeSchoolId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeSchool GsCdeSchoolIdSource
      	{
            get { return this._gsCdeSchoolIdSource; }
            set { this._gsCdeSchoolIdSource = value; }
      	}
		private GsCodeGender _gsCodeGenderIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeGender"/>.
		/// </summary>
		/// <value>The source GsCodeGender for GsCodeGenderId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeGender GsCodeGenderIdSource
      	{
            get { return this._gsCodeGenderIdSource; }
            set { this._gsCodeGenderIdSource = value; }
      	}
		private SpoSponsorType _spoSponsorTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SpoSponsorType"/>.
		/// </summary>
		/// <value>The source SpoSponsorType for SpoSponsorTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SpoSponsorType SpoSponsorTypeIdSource
      	{
            get { return this._spoSponsorTypeIdSource; }
            set { this._spoSponsorTypeIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region AdmAppDocCollection
		
		private TList<AdmAppDoc> _admAppDocAdmReqDocId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppDocAdmReqDocId
		/// </summary>
		
		public TList<AdmAppDoc> AdmAppDocCollection
		{
			get
			{
				if (_admAppDocAdmReqDocId == null)
				{
				_admAppDocAdmReqDocId = new TList<AdmAppDoc>();
				}
	
				return _admAppDocAdmReqDocId;
			}
			set { _admAppDocAdmReqDocId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			AdmReqDocEntityData _tmp = new AdmReqDocEntityData();
						
			_tmp.AdmReqDocId = this.AdmReqDocId;
			_tmp.OriginalAdmReqDocId = this.OriginalAdmReqDocId;
			
			_tmp.EntMainId = this.EntMainId;
			_tmp.DescrAr = this.DescrAr;
			_tmp.DescrEn = this.DescrEn;
			_tmp.DocTemplatePath = this.DocTemplatePath;
			_tmp.DelFlg = this.DelFlg;
			_tmp.OrigDocNo = this.OrigDocNo;
			_tmp.CopyDocNo = this.CopyDocNo;
			_tmp.GsCodeGenderId = this.GsCodeGenderId;
			_tmp.DocTypeFlg = this.DocTypeFlg;
			_tmp.AutoloadFlg = this.AutoloadFlg;
			_tmp.TransAppFlg = this.TransAppFlg;
			_tmp.AsCodeDegreeClassId = this.AsCodeDegreeClassId;
			_tmp.AsCodeDegreeId = this.AsCodeDegreeId;
			_tmp.EdCodeQualId = this.EdCodeQualId;
			_tmp.GsCdeSchoolId = this.GsCdeSchoolId;
			_tmp.OptionalFlg = this.OptionalFlg;
			_tmp.DocHint = this.DocHint;
			_tmp.GsCdeDocId = this.GsCdeDocId;
			_tmp.GsCdeMaritalStatusId = this.GsCdeMaritalStatusId;
			_tmp.ForeignFlg = this.ForeignFlg;
			_tmp.AdmCdeAppTypeId = this.AdmCdeAppTypeId;
			_tmp.SponsoredFlg = this.SponsoredFlg;
			_tmp.SpoSponsorTypeId = this.SpoSponsorTypeId;
			_tmp.SeUserId = this.SeUserId;
			_tmp.LastDate = this.LastDate;
			_tmp.AppHideFlg = this.AppHideFlg;
			
			#region Source Parent Composite Entities
			if (this.AdmCdeAppTypeIdSource != null)
				_tmp.AdmCdeAppTypeIdSource = MakeCopyOf(this.AdmCdeAppTypeIdSource) as AdmCdeAppType;
			if (this.AsCodeDegreeIdSource != null)
				_tmp.AsCodeDegreeIdSource = MakeCopyOf(this.AsCodeDegreeIdSource) as AsCodeDegree;
			if (this.AsCodeDegreeClassIdSource != null)
				_tmp.AsCodeDegreeClassIdSource = MakeCopyOf(this.AsCodeDegreeClassIdSource) as AsCodeDegreeClass;
			if (this.EdCodeQualIdSource != null)
				_tmp.EdCodeQualIdSource = MakeCopyOf(this.EdCodeQualIdSource) as EdCodeQual;
			if (this.EntMainIdSource != null)
				_tmp.EntMainIdSource = MakeCopyOf(this.EntMainIdSource) as EntityMain;
			if (this.GsCdeDocIdSource != null)
				_tmp.GsCdeDocIdSource = MakeCopyOf(this.GsCdeDocIdSource) as GsCdeDoc;
			if (this.GsCdeMaritalStatusIdSource != null)
				_tmp.GsCdeMaritalStatusIdSource = MakeCopyOf(this.GsCdeMaritalStatusIdSource) as GsCdeMaritalStatus;
			if (this.GsCdeSchoolIdSource != null)
				_tmp.GsCdeSchoolIdSource = MakeCopyOf(this.GsCdeSchoolIdSource) as GsCdeSchool;
			if (this.GsCodeGenderIdSource != null)
				_tmp.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource) as GsCodeGender;
			if (this.SpoSponsorTypeIdSource != null)
				_tmp.SpoSponsorTypeIdSource = MakeCopyOf(this.SpoSponsorTypeIdSource) as SpoSponsorType;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._admAppDocAdmReqDocId != null)
				_tmp.AdmAppDocCollection = (TList<AdmAppDoc>) MakeCopyOf(this.AdmAppDocCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			AdmReqDocEntityData _tmp = new AdmReqDocEntityData();
						
			_tmp.AdmReqDocId = this.AdmReqDocId;
			_tmp.OriginalAdmReqDocId = this.OriginalAdmReqDocId;
			
			_tmp.EntMainId = this.EntMainId;
			_tmp.DescrAr = this.DescrAr;
			_tmp.DescrEn = this.DescrEn;
			_tmp.DocTemplatePath = this.DocTemplatePath;
			_tmp.DelFlg = this.DelFlg;
			_tmp.OrigDocNo = this.OrigDocNo;
			_tmp.CopyDocNo = this.CopyDocNo;
			_tmp.GsCodeGenderId = this.GsCodeGenderId;
			_tmp.DocTypeFlg = this.DocTypeFlg;
			_tmp.AutoloadFlg = this.AutoloadFlg;
			_tmp.TransAppFlg = this.TransAppFlg;
			_tmp.AsCodeDegreeClassId = this.AsCodeDegreeClassId;
			_tmp.AsCodeDegreeId = this.AsCodeDegreeId;
			_tmp.EdCodeQualId = this.EdCodeQualId;
			_tmp.GsCdeSchoolId = this.GsCdeSchoolId;
			_tmp.OptionalFlg = this.OptionalFlg;
			_tmp.DocHint = this.DocHint;
			_tmp.GsCdeDocId = this.GsCdeDocId;
			_tmp.GsCdeMaritalStatusId = this.GsCdeMaritalStatusId;
			_tmp.ForeignFlg = this.ForeignFlg;
			_tmp.AdmCdeAppTypeId = this.AdmCdeAppTypeId;
			_tmp.SponsoredFlg = this.SponsoredFlg;
			_tmp.SpoSponsorTypeId = this.SpoSponsorTypeId;
			_tmp.SeUserId = this.SeUserId;
			_tmp.LastDate = this.LastDate;
			_tmp.AppHideFlg = this.AppHideFlg;
			
			#region Source Parent Composite Entities
			if (this.AdmCdeAppTypeIdSource != null && existingCopies.Contains(this.AdmCdeAppTypeIdSource))
				_tmp.AdmCdeAppTypeIdSource = existingCopies[this.AdmCdeAppTypeIdSource] as AdmCdeAppType;
			else
				_tmp.AdmCdeAppTypeIdSource = MakeCopyOf(this.AdmCdeAppTypeIdSource, existingCopies) as AdmCdeAppType;
			if (this.AsCodeDegreeIdSource != null && existingCopies.Contains(this.AsCodeDegreeIdSource))
				_tmp.AsCodeDegreeIdSource = existingCopies[this.AsCodeDegreeIdSource] as AsCodeDegree;
			else
				_tmp.AsCodeDegreeIdSource = MakeCopyOf(this.AsCodeDegreeIdSource, existingCopies) as AsCodeDegree;
			if (this.AsCodeDegreeClassIdSource != null && existingCopies.Contains(this.AsCodeDegreeClassIdSource))
				_tmp.AsCodeDegreeClassIdSource = existingCopies[this.AsCodeDegreeClassIdSource] as AsCodeDegreeClass;
			else
				_tmp.AsCodeDegreeClassIdSource = MakeCopyOf(this.AsCodeDegreeClassIdSource, existingCopies) as AsCodeDegreeClass;
			if (this.EdCodeQualIdSource != null && existingCopies.Contains(this.EdCodeQualIdSource))
				_tmp.EdCodeQualIdSource = existingCopies[this.EdCodeQualIdSource] as EdCodeQual;
			else
				_tmp.EdCodeQualIdSource = MakeCopyOf(this.EdCodeQualIdSource, existingCopies) as EdCodeQual;
			if (this.EntMainIdSource != null && existingCopies.Contains(this.EntMainIdSource))
				_tmp.EntMainIdSource = existingCopies[this.EntMainIdSource] as EntityMain;
			else
				_tmp.EntMainIdSource = MakeCopyOf(this.EntMainIdSource, existingCopies) as EntityMain;
			if (this.GsCdeDocIdSource != null && existingCopies.Contains(this.GsCdeDocIdSource))
				_tmp.GsCdeDocIdSource = existingCopies[this.GsCdeDocIdSource] as GsCdeDoc;
			else
				_tmp.GsCdeDocIdSource = MakeCopyOf(this.GsCdeDocIdSource, existingCopies) as GsCdeDoc;
			if (this.GsCdeMaritalStatusIdSource != null && existingCopies.Contains(this.GsCdeMaritalStatusIdSource))
				_tmp.GsCdeMaritalStatusIdSource = existingCopies[this.GsCdeMaritalStatusIdSource] as GsCdeMaritalStatus;
			else
				_tmp.GsCdeMaritalStatusIdSource = MakeCopyOf(this.GsCdeMaritalStatusIdSource, existingCopies) as GsCdeMaritalStatus;
			if (this.GsCdeSchoolIdSource != null && existingCopies.Contains(this.GsCdeSchoolIdSource))
				_tmp.GsCdeSchoolIdSource = existingCopies[this.GsCdeSchoolIdSource] as GsCdeSchool;
			else
				_tmp.GsCdeSchoolIdSource = MakeCopyOf(this.GsCdeSchoolIdSource, existingCopies) as GsCdeSchool;
			if (this.GsCodeGenderIdSource != null && existingCopies.Contains(this.GsCodeGenderIdSource))
				_tmp.GsCodeGenderIdSource = existingCopies[this.GsCodeGenderIdSource] as GsCodeGender;
			else
				_tmp.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource, existingCopies) as GsCodeGender;
			if (this.SpoSponsorTypeIdSource != null && existingCopies.Contains(this.SpoSponsorTypeIdSource))
				_tmp.SpoSponsorTypeIdSource = existingCopies[this.SpoSponsorTypeIdSource] as SpoSponsorType;
			else
				_tmp.SpoSponsorTypeIdSource = MakeCopyOf(this.SpoSponsorTypeIdSource, existingCopies) as SpoSponsorType;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.AdmAppDocCollection = (TList<AdmAppDoc>) MakeCopyOf(this.AdmAppDocCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmReqDocColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(AdmReqDocColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmReqDocColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(AdmReqDocColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmReqDocColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(AdmReqDocColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				AdmReqDocEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new AdmReqDocEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmReqDocColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(AdmReqDocColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				AdmReqDocEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new AdmReqDocEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region AdmReqDocEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="AdmReqDoc"/> object.
	/// </remarks>
	public class AdmReqDocEventArgs : System.EventArgs
	{
		private AdmReqDocColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the AdmReqDocEventArgs class.
		///</summary>
		public AdmReqDocEventArgs(AdmReqDocColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the AdmReqDocEventArgs class.
		///</summary>
		public AdmReqDocEventArgs(AdmReqDocColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The AdmReqDocColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="AdmReqDocColumn" />
		public AdmReqDocColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all AdmReqDoc related events.
	///</summary>
	public delegate void AdmReqDocEventHandler(object sender, AdmReqDocEventArgs e);
	
	#region AdmReqDocComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class AdmReqDocComparer : System.Collections.Generic.IComparer<AdmReqDoc>
	{
		AdmReqDocColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:AdmReqDocComparer"/> class.
        /// </summary>
		public AdmReqDocComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:AdmReqDocComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public AdmReqDocComparer(AdmReqDocColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="AdmReqDoc"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="AdmReqDoc"/> to compare.</param>
        /// <param name="b">The second <c>AdmReqDoc</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(AdmReqDoc a, AdmReqDoc b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(AdmReqDoc entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(AdmReqDoc a, AdmReqDoc b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public AdmReqDocColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region AdmReqDocKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="AdmReqDoc"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class AdmReqDocKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the AdmReqDocKey class.
		/// </summary>
		public AdmReqDocKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the AdmReqDocKey class.
		/// </summary>
		public AdmReqDocKey(AdmReqDocBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.AdmReqDocId = entity.AdmReqDocId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the AdmReqDocKey class.
		/// </summary>
		public AdmReqDocKey(System.Decimal _admReqDocId)
		{
			#region Init Properties

			this.AdmReqDocId = _admReqDocId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private AdmReqDocBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public AdmReqDocBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the AdmReqDocId property
		private System.Decimal _admReqDocId;
		
		/// <summary>
		/// Gets or sets the AdmReqDocId property.
		/// </summary>
		public System.Decimal AdmReqDocId
		{
			get { return _admReqDocId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.AdmReqDocId = value;
				
				_admReqDocId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				AdmReqDocId = ( values["AdmReqDocId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["AdmReqDocId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("AdmReqDocId", AdmReqDocId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("AdmReqDocId: {0}{1}",
								AdmReqDocId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region AdmReqDocColumn Enum
	
	/// <summary>
	/// Enumerate the AdmReqDoc columns.
	/// </summary>
	[Serializable]
	public enum AdmReqDocColumn : int
	{
		/// <summary>
		/// AdmReqDocId : 
		/// </summary>
		[EnumTextValue("ADM_REQ_DOC_ID")]
		[ColumnEnum("ADM_REQ_DOC_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		AdmReqDocId = 1,
		/// <summary>
		/// EntMainId : 
		/// </summary>
		[EnumTextValue("ENT_MAIN_ID")]
		[ColumnEnum("ENT_MAIN_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EntMainId = 2,
		/// <summary>
		/// DescrAr : 
		/// </summary>
		[EnumTextValue("DESCR_AR")]
		[ColumnEnum("DESCR_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		DescrAr = 3,
		/// <summary>
		/// DescrEn : 
		/// </summary>
		[EnumTextValue("DESCR_EN")]
		[ColumnEnum("DESCR_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		DescrEn = 4,
		/// <summary>
		/// DocTemplatePath : 
		/// </summary>
		[EnumTextValue("DOC_TEMPLATE_PATH")]
		[ColumnEnum("DOC_TEMPLATE_PATH", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		DocTemplatePath = 5,
		/// <summary>
		/// DelFlg : 
		/// </summary>
		[EnumTextValue("DEL_FLG")]
		[ColumnEnum("DEL_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		DelFlg = 6,
		/// <summary>
		/// OrigDocNo : 
		/// </summary>
		[EnumTextValue("ORIG_DOC_NO")]
		[ColumnEnum("ORIG_DOC_NO", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		OrigDocNo = 7,
		/// <summary>
		/// CopyDocNo : 
		/// </summary>
		[EnumTextValue("COPY_DOC_NO")]
		[ColumnEnum("COPY_DOC_NO", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		CopyDocNo = 8,
		/// <summary>
		/// GsCodeGenderId : 
		/// </summary>
		[EnumTextValue("GS_CODE_GENDER_ID")]
		[ColumnEnum("GS_CODE_GENDER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeGenderId = 9,
		/// <summary>
		/// DocTypeFlg : 
		/// </summary>
		[EnumTextValue("DOC_TYPE_FLG")]
		[ColumnEnum("DOC_TYPE_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		DocTypeFlg = 10,
		/// <summary>
		/// AutoloadFlg : 
		/// </summary>
		[EnumTextValue("AUTOLOAD_FLG")]
		[ColumnEnum("AUTOLOAD_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		AutoloadFlg = 11,
		/// <summary>
		/// TransAppFlg : 
		/// </summary>
		[EnumTextValue("TRANS_APP_FLG")]
		[ColumnEnum("TRANS_APP_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		TransAppFlg = 12,
		/// <summary>
		/// AsCodeDegreeClassId : 
		/// </summary>
		[EnumTextValue("AS_CODE_DEGREE_CLASS_ID")]
		[ColumnEnum("AS_CODE_DEGREE_CLASS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AsCodeDegreeClassId = 13,
		/// <summary>
		/// AsCodeDegreeId : 
		/// </summary>
		[EnumTextValue("AS_CODE_DEGREE_ID")]
		[ColumnEnum("AS_CODE_DEGREE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AsCodeDegreeId = 14,
		/// <summary>
		/// EdCodeQualId : 
		/// </summary>
		[EnumTextValue("ED_CODE_QUAL_ID")]
		[ColumnEnum("ED_CODE_QUAL_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeQualId = 15,
		/// <summary>
		/// GsCdeSchoolId : اكواد المدارس
		/// </summary>
		[EnumTextValue("GS_CDE_SCHOOL_ID")]
		[ColumnEnum("GS_CDE_SCHOOL_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCdeSchoolId = 16,
		/// <summary>
		/// OptionalFlg : 
		/// </summary>
		[EnumTextValue("OPTIONAL_FLG")]
		[ColumnEnum("OPTIONAL_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		OptionalFlg = 17,
		/// <summary>
		/// DocHint : 
		/// </summary>
		[EnumTextValue("DOC_HINT")]
		[ColumnEnum("DOC_HINT", typeof(System.String), System.Data.DbType.String, false, false, true, 300)]
		DocHint = 18,
		/// <summary>
		/// GsCdeDocId : 
		/// </summary>
		[EnumTextValue("GS_CDE_DOC_ID")]
		[ColumnEnum("GS_CDE_DOC_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		GsCdeDocId = 19,
		/// <summary>
		/// GsCdeMaritalStatusId : 
		/// </summary>
		[EnumTextValue("GS_CDE_MARITAL_STATUS_ID")]
		[ColumnEnum("GS_CDE_MARITAL_STATUS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCdeMaritalStatusId = 20,
		/// <summary>
		/// ForeignFlg : Ejust  (International Yes/No) to specify that this Exam for International applicants only
		/// </summary>
		[EnumTextValue("FOREIGN_FLG")]
		[ColumnEnum("FOREIGN_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ForeignFlg = 21,
		/// <summary>
		/// AdmCdeAppTypeId : 
		/// </summary>
		[EnumTextValue("ADM_CDE_APP_TYPE_ID")]
		[ColumnEnum("ADM_CDE_APP_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmCdeAppTypeId = 22,
		/// <summary>
		/// SponsoredFlg : 
		/// </summary>
		[EnumTextValue("SPONSORED_FLG")]
		[ColumnEnum("SPONSORED_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		SponsoredFlg = 23,
		/// <summary>
		/// SpoSponsorTypeId : 
		/// </summary>
		[EnumTextValue("SPO_SPONSOR_TYPE_ID")]
		[ColumnEnum("SPO_SPONSOR_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SpoSponsorTypeId = 24,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 25,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 26,
		/// <summary>
		/// AppHideFlg : 
		/// </summary>
		[EnumTextValue("APP_HIDE_FLG")]
		[ColumnEnum("APP_HIDE_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AppHideFlg = 27
	}//End enum

	#endregion AdmReqDocColumn Enum

} // end namespace
