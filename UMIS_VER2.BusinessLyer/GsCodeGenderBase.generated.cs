
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file GsCodeGender.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'GS_CODE_GENDER' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class GsCodeGenderBase : EntityBase, IGsCodeGender, IEntityId<GsCodeGenderKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private GsCodeGenderEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private GsCodeGenderEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private GsCodeGenderEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<GsCodeGender> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event GsCodeGenderEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event GsCodeGenderEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="GsCodeGenderBase"/> instance.
		///</summary>
		public GsCodeGenderBase()
		{
			this.entityData = new GsCodeGenderEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="GsCodeGenderBase"/> instance.
		///</summary>
		///<param name="_gsCodeGenderId"></param>
		///<param name="_genderDescrAr"></param>
		///<param name="_genderDescrEn"></param>
		///<param name="_genderCode"></param>
		public GsCodeGenderBase(System.Decimal _gsCodeGenderId, System.String _genderDescrAr, 
			System.String _genderDescrEn, System.String _genderCode)
		{
			this.entityData = new GsCodeGenderEntityData();
			this.backupData = null;

			this.GsCodeGenderId = _gsCodeGenderId;
			this.GenderDescrAr = _genderDescrAr;
			this.GenderDescrEn = _genderDescrEn;
			this.GenderCode = _genderCode;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="GsCodeGender"/> instance.
		///</summary>
		///<param name="_gsCodeGenderId"></param>
		///<param name="_genderDescrAr"></param>
		///<param name="_genderDescrEn"></param>
		///<param name="_genderCode"></param>
		public static GsCodeGender CreateGsCodeGender(System.Decimal _gsCodeGenderId, System.String _genderDescrAr, 
			System.String _genderDescrEn, System.String _genderCode)
		{
			GsCodeGender newGsCodeGender = new GsCodeGender();
			newGsCodeGender.GsCodeGenderId = _gsCodeGenderId;
			newGsCodeGender.GenderDescrAr = _genderDescrAr;
			newGsCodeGender.GenderDescrEn = _genderDescrEn;
			newGsCodeGender.GenderCode = _genderCode;
			return newGsCodeGender;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the GsCodeGenderId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal GsCodeGenderId
		{
			get
			{
				return this.entityData.GsCodeGenderId; 
			}
			
			set
			{
				if (this.entityData.GsCodeGenderId == value)
					return;
					
				OnColumnChanging(GsCodeGenderColumn.GsCodeGenderId, this.entityData.GsCodeGenderId);
				this.entityData.GsCodeGenderId = value;
				this.EntityId.GsCodeGenderId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsCodeGenderColumn.GsCodeGenderId, this.entityData.GsCodeGenderId);
				OnPropertyChanged("GsCodeGenderId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the GS_CODE_GENDER_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the GS_CODE_GENDER_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalGsCodeGenderId
		{
			get { return this.entityData.OriginalGsCodeGenderId; }
			set { this.entityData.OriginalGsCodeGenderId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the GenderDescrAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 50)]
		public virtual System.String GenderDescrAr
		{
			get
			{
				return this.entityData.GenderDescrAr; 
			}
			
			set
			{
				if (this.entityData.GenderDescrAr == value)
					return;
					
				OnColumnChanging(GsCodeGenderColumn.GenderDescrAr, this.entityData.GenderDescrAr);
				this.entityData.GenderDescrAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsCodeGenderColumn.GenderDescrAr, this.entityData.GenderDescrAr);
				OnPropertyChanged("GenderDescrAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GenderDescrEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String GenderDescrEn
		{
			get
			{
				return this.entityData.GenderDescrEn; 
			}
			
			set
			{
				if (this.entityData.GenderDescrEn == value)
					return;
					
				OnColumnChanging(GsCodeGenderColumn.GenderDescrEn, this.entityData.GenderDescrEn);
				this.entityData.GenderDescrEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsCodeGenderColumn.GenderDescrEn, this.entityData.GenderDescrEn);
				OnPropertyChanged("GenderDescrEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GenderCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String GenderCode
		{
			get
			{
				return this.entityData.GenderCode; 
			}
			
			set
			{
				if (this.entityData.GenderCode == value)
					return;
					
				OnColumnChanging(GsCodeGenderColumn.GenderCode, this.entityData.GenderCode);
				this.entityData.GenderCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsCodeGenderColumn.GenderCode, this.entityData.GenderCode);
				OnPropertyChanged("GenderCode");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of PgExtMember objects
		///	which are related to this object through the relation FK_PG_EXT_MEMBER_GS_CODE_GENDER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgExtMember> PgExtMemberCollection
		{
			get { return entityData.PgExtMemberCollection; }
			set { entityData.PgExtMemberCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScScheduleDtl objects
		///	which are related to this object through the relation FK_SC_SCHEDULE_DTL_GS_CODE_GENDER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScScheduleDtl> ScScheduleDtlCollection
		{
			get { return entityData.ScScheduleDtlCollection; }
			set { entityData.ScScheduleDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomCdePermtType objects
		///	which are related to this object through the relation FK_ACCOM_CDE_PERMT_TYPE_GS_CODE_GENDER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomCdePermtType> AccomCdePermtTypeCollection
		{
			get { return entityData.AccomCdePermtTypeCollection; }
			set { entityData.AccomCdePermtTypeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaStfMember objects
		///	which are related to this object through the relation FK_SA_STF_MEMBER_GS_CODE_GENDER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaStfMember> SaStfMemberCollection
		{
			get { return entityData.SaStfMemberCollection; }
			set { entityData.SaStfMemberCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SeUserAccnt objects
		///	which are related to this object through the relation FK_SE_USER_ACCNT_GS_CODE_GENDER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SeUserAccnt> SeUserAccntCollection
		{
			get { return entityData.SeUserAccntCollection; }
			set { entityData.SeUserAccntCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmReqDoc objects
		///	which are related to this object through the relation FK_ADM_REQ_DOC_GS_CODE_GENDER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmReqDoc> AdmReqDocCollection
		{
			get { return entityData.AdmReqDocCollection; }
			set { entityData.AdmReqDocCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaCodeDoc objects
		///	which are related to this object through the relation FK_AUTO_066b
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaCodeDoc> SaCodeDocCollection
		{
			get { return entityData.SaCodeDocCollection; }
			set { entityData.SaCodeDocCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaRelative objects
		///	which are related to this object through the relation FK_AUTO_0058
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaRelative> SaRelativeCollection
		{
			get { return entityData.SaRelativeCollection; }
			set { entityData.SaRelativeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeAllowanceRule objects
		///	which are related to this object through the relation FK_FEE_ALLOWANCE_RULE_GS_CODE_GENDER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeAllowanceRule> FeeAllowanceRuleCollection
		{
			get { return entityData.FeeAllowanceRuleCollection; }
			set { entityData.FeeAllowanceRuleCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GsCdeClrncItem objects
		///	which are related to this object through the relation FK_GS_CDE_CLRNC_ITEM_GS_CODE_GENDER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GsCdeClrncItem> GsCdeClrncItemCollection
		{
			get { return entityData.GsCdeClrncItemCollection; }
			set { entityData.GsCdeClrncItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmApplicant objects
		///	which are related to this object through the relation FK_ADM_APPLICANTS_GS_CODE_GENDER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmApplicant> AdmApplicantCollection
		{
			get { return entityData.AdmApplicantCollection; }
			set { entityData.AdmApplicantCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmPlaceExamDatetime objects
		///	which are related to this object through the relation FK_ADM_PLACE_EXAM_DATETIME_GS_CODE_GENDER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmPlaceExamDatetime> AdmPlaceExamDatetimeCollection
		{
			get { return entityData.AdmPlaceExamDatetimeCollection; }
			set { entityData.AdmPlaceExamDatetimeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomBuilding objects
		///	which are related to this object through the relation FK_ACCOM_BUILDING_GS_CODE_GENDER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomBuilding> AccomBuildingCollection
		{
			get { return entityData.AccomBuildingCollection; }
			set { entityData.AccomBuildingCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdExamSchdl objects
		///	which are related to this object through the relation FK_ED_EXAM_SCHDL_GS_CODE_GENDER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdExamSchdl> EdExamSchdlCollection
		{
			get { return entityData.EdExamSchdlCollection; }
			set { entityData.EdExamSchdlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStud objects
		///	which are related to this object through the relation FK_ED_STUD_GS_CODE_GENDER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStud> EdStudCollection
		{
			get { return entityData.EdStudCollection; }
			set { entityData.EdStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntityMain objects
		///	which are related to this object through the relation FK_ENTITY_MAIN_GS_CODE_GENDER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntityMain> EntityMainCollection
		{
			get { return entityData.EntityMainCollection; }
			set { entityData.EntityMainCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("GenderDescrAr", "Gender Descr Ar"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("GenderDescrAr", "Gender Descr Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("GenderDescrEn", "Gender Descr En", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("GenderCode", "Gender Code", 30));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "GS_CODE_GENDER"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"GS_CODE_GENDER_ID", "GENDER_DESCR_AR", "GENDER_DESCR_EN", "GENDER_CODE"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as GsCodeGenderEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (GsCodeGender) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<GsCodeGender>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as GsCodeGender);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed GsCodeGender Entity 
		///</summary>
		protected virtual GsCodeGender Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			GsCodeGender copy = new GsCodeGender();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.GsCodeGenderId = this.GsCodeGenderId;
					copy.OriginalGsCodeGenderId = this.OriginalGsCodeGenderId;
				copy.GenderDescrAr = this.GenderDescrAr;
				copy.GenderDescrEn = this.GenderDescrEn;
				copy.GenderCode = this.GenderCode;
			
		
			//deep copy nested objects
			copy.PgExtMemberCollection = (TList<PgExtMember>) MakeCopyOf(this.PgExtMemberCollection, existingCopies); 
			copy.ScScheduleDtlCollection = (TList<ScScheduleDtl>) MakeCopyOf(this.ScScheduleDtlCollection, existingCopies); 
			copy.AccomCdePermtTypeCollection = (TList<AccomCdePermtType>) MakeCopyOf(this.AccomCdePermtTypeCollection, existingCopies); 
			copy.SaStfMemberCollection = (TList<SaStfMember>) MakeCopyOf(this.SaStfMemberCollection, existingCopies); 
			copy.SeUserAccntCollection = (TList<SeUserAccnt>) MakeCopyOf(this.SeUserAccntCollection, existingCopies); 
			copy.AdmReqDocCollection = (TList<AdmReqDoc>) MakeCopyOf(this.AdmReqDocCollection, existingCopies); 
			copy.SaCodeDocCollection = (TList<SaCodeDoc>) MakeCopyOf(this.SaCodeDocCollection, existingCopies); 
			copy.SaRelativeCollection = (TList<SaRelative>) MakeCopyOf(this.SaRelativeCollection, existingCopies); 
			copy.FeeAllowanceRuleCollection = (TList<FeeAllowanceRule>) MakeCopyOf(this.FeeAllowanceRuleCollection, existingCopies); 
			copy.GsCdeClrncItemCollection = (TList<GsCdeClrncItem>) MakeCopyOf(this.GsCdeClrncItemCollection, existingCopies); 
			copy.AdmApplicantCollection = (TList<AdmApplicant>) MakeCopyOf(this.AdmApplicantCollection, existingCopies); 
			copy.AdmPlaceExamDatetimeCollection = (TList<AdmPlaceExamDatetime>) MakeCopyOf(this.AdmPlaceExamDatetimeCollection, existingCopies); 
			copy.AccomBuildingCollection = (TList<AccomBuilding>) MakeCopyOf(this.AccomBuildingCollection, existingCopies); 
			copy.EdExamSchdlCollection = (TList<EdExamSchdl>) MakeCopyOf(this.EdExamSchdlCollection, existingCopies); 
			copy.EdStudCollection = (TList<EdStud>) MakeCopyOf(this.EdStudCollection, existingCopies); 
			copy.EntityMainCollection = (TList<EntityMain>) MakeCopyOf(this.EntityMainCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed GsCodeGender Entity 
		///</summary>
		public virtual GsCodeGender Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed GsCodeGender Entity which is a deep copy of the current entity.
		///</summary>
		public virtual GsCodeGender DeepCopy()
		{
			return EntityHelper.Clone<GsCodeGender>(this as GsCodeGender);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as GsCodeGenderEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new GsCodeGenderEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as GsCodeGenderEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(GsCodeGenderColumn column)
		{
			switch(column)
			{
					case GsCodeGenderColumn.GsCodeGenderId:
					return entityData.GsCodeGenderId != _originalData.GsCodeGenderId;
					case GsCodeGenderColumn.GenderDescrAr:
					return entityData.GenderDescrAr != _originalData.GenderDescrAr;
					case GsCodeGenderColumn.GenderDescrEn:
					return entityData.GenderDescrEn != _originalData.GenderDescrEn;
					case GsCodeGenderColumn.GenderCode:
					return entityData.GenderCode != _originalData.GenderCode;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< GsCodeGenderColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.GsCodeGenderId != _originalData.GsCodeGenderId;
			result = result || entityData.GenderDescrAr != _originalData.GenderDescrAr;
			result = result || entityData.GenderDescrEn != _originalData.GenderDescrEn;
			result = result || entityData.GenderCode != _originalData.GenderCode;
			return result;
		}	
		
		///<summary>
		///  Returns a GsCodeGender Entity with the original data.
		///</summary>
		public GsCodeGender GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateGsCodeGender(
				_originalData.GsCodeGenderId,
				_originalData.GenderDescrAr,
				_originalData.GenderDescrEn,
				_originalData.GenderCode
				);
				
			return (GsCodeGender)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="GsCodeGenderBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is GsCodeGenderBase)
				return ValueEquals(this, (GsCodeGenderBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="GsCodeGenderBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.GsCodeGenderId.GetHashCode() ^ 
					this.GenderDescrAr.GetHashCode() ^ 
					((this.GenderDescrEn == null) ? string.Empty : this.GenderDescrEn.ToString()).GetHashCode() ^ 
					((this.GenderCode == null) ? string.Empty : this.GenderCode.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="GsCodeGenderBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(GsCodeGenderBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="GsCodeGenderBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="GsCodeGenderBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="GsCodeGenderBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(GsCodeGenderBase Object1, GsCodeGenderBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.GsCodeGenderId != Object2.GsCodeGenderId)
				equal = false;
			if (Object1.GenderDescrAr != Object2.GenderDescrAr)
				equal = false;
			if ( Object1.GenderDescrEn != null && Object2.GenderDescrEn != null )
			{
				if (Object1.GenderDescrEn != Object2.GenderDescrEn)
					equal = false;
			}
			else if (Object1.GenderDescrEn == null ^ Object2.GenderDescrEn == null )
			{
				equal = false;
			}
			if ( Object1.GenderCode != null && Object2.GenderCode != null )
			{
				if (Object1.GenderCode != Object2.GenderCode)
					equal = false;
			}
			else if (Object1.GenderCode == null ^ Object2.GenderCode == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((GsCodeGenderBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static GsCodeGenderComparer GetComparer()
        {
            return new GsCodeGenderComparer();
        }
        */

        // Comparer delegates back to GsCodeGender
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(GsCodeGender rhs, GsCodeGenderColumn which)
        {
            switch (which)
            {
            	
            	
            	case GsCodeGenderColumn.GsCodeGenderId:
            		return this.GsCodeGenderId.CompareTo(rhs.GsCodeGenderId);
            		
            		                 
            	
            	
            	case GsCodeGenderColumn.GenderDescrAr:
            		return this.GenderDescrAr.CompareTo(rhs.GenderDescrAr);
            		
            		                 
            	
            	
            	case GsCodeGenderColumn.GenderDescrEn:
            		return this.GenderDescrEn.CompareTo(rhs.GenderDescrEn);
            		
            		                 
            	
            	
            	case GsCodeGenderColumn.GenderCode:
            		return this.GenderCode.CompareTo(rhs.GenderCode);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<GsCodeGenderKey> Members
		
		// member variable for the EntityId property
		private GsCodeGenderKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual GsCodeGenderKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new GsCodeGenderKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("GsCodeGender")
					.Append("|").Append( this.GsCodeGenderId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{5}{4}- GsCodeGenderId: {0}{4}- GenderDescrAr: {1}{4}- GenderDescrEn: {2}{4}- GenderCode: {3}{4}{6}", 
				this.GsCodeGenderId,
				this.GenderDescrAr,
				(this.GenderDescrEn == null) ? string.Empty : this.GenderDescrEn.ToString(),
				(this.GenderCode == null) ? string.Empty : this.GenderCode.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'GS_CODE_GENDER' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class GsCodeGenderEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// GS_CODE_GENDER_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "GS_CODE_GENDER"</remarks>
		public System.Decimal GsCodeGenderId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalGsCodeGenderId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// GENDER_DESCR_AR : 
		/// </summary>
		public System.String		  GenderDescrAr = string.Empty;
		
		/// <summary>
		/// GENDER_DESCR_EN : 
		/// </summary>
		public System.String		  GenderDescrEn = null;
		
		/// <summary>
		/// GENDER_CODE : 
		/// </summary>
		public System.String		  GenderCode = null;
		#endregion
			
		#region Source Foreign Key Property
				
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region PgExtMemberCollection
		
		private TList<PgExtMember> _pgExtMemberGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgExtMemberGsCodeGenderId
		/// </summary>
		
		public TList<PgExtMember> PgExtMemberCollection
		{
			get
			{
				if (_pgExtMemberGsCodeGenderId == null)
				{
				_pgExtMemberGsCodeGenderId = new TList<PgExtMember>();
				}
	
				return _pgExtMemberGsCodeGenderId;
			}
			set { _pgExtMemberGsCodeGenderId = value; }
		}
		
		#endregion

		#region ScScheduleDtlCollection
		
		private TList<ScScheduleDtl> _scScheduleDtlGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scScheduleDtlGsCodeGenderId
		/// </summary>
		
		public TList<ScScheduleDtl> ScScheduleDtlCollection
		{
			get
			{
				if (_scScheduleDtlGsCodeGenderId == null)
				{
				_scScheduleDtlGsCodeGenderId = new TList<ScScheduleDtl>();
				}
	
				return _scScheduleDtlGsCodeGenderId;
			}
			set { _scScheduleDtlGsCodeGenderId = value; }
		}
		
		#endregion

		#region AccomCdePermtTypeCollection
		
		private TList<AccomCdePermtType> _accomCdePermtTypeGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomCdePermtTypeGsCodeGenderId
		/// </summary>
		
		public TList<AccomCdePermtType> AccomCdePermtTypeCollection
		{
			get
			{
				if (_accomCdePermtTypeGsCodeGenderId == null)
				{
				_accomCdePermtTypeGsCodeGenderId = new TList<AccomCdePermtType>();
				}
	
				return _accomCdePermtTypeGsCodeGenderId;
			}
			set { _accomCdePermtTypeGsCodeGenderId = value; }
		}
		
		#endregion

		#region SaStfMemberCollection
		
		private TList<SaStfMember> _saStfMemberGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saStfMemberGsCodeGenderId
		/// </summary>
		
		public TList<SaStfMember> SaStfMemberCollection
		{
			get
			{
				if (_saStfMemberGsCodeGenderId == null)
				{
				_saStfMemberGsCodeGenderId = new TList<SaStfMember>();
				}
	
				return _saStfMemberGsCodeGenderId;
			}
			set { _saStfMemberGsCodeGenderId = value; }
		}
		
		#endregion

		#region SeUserAccntCollection
		
		private TList<SeUserAccnt> _seUserAccntGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _seUserAccntGsCodeGenderId
		/// </summary>
		
		public TList<SeUserAccnt> SeUserAccntCollection
		{
			get
			{
				if (_seUserAccntGsCodeGenderId == null)
				{
				_seUserAccntGsCodeGenderId = new TList<SeUserAccnt>();
				}
	
				return _seUserAccntGsCodeGenderId;
			}
			set { _seUserAccntGsCodeGenderId = value; }
		}
		
		#endregion

		#region AdmReqDocCollection
		
		private TList<AdmReqDoc> _admReqDocGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admReqDocGsCodeGenderId
		/// </summary>
		
		public TList<AdmReqDoc> AdmReqDocCollection
		{
			get
			{
				if (_admReqDocGsCodeGenderId == null)
				{
				_admReqDocGsCodeGenderId = new TList<AdmReqDoc>();
				}
	
				return _admReqDocGsCodeGenderId;
			}
			set { _admReqDocGsCodeGenderId = value; }
		}
		
		#endregion

		#region SaCodeDocCollection
		
		private TList<SaCodeDoc> _saCodeDocGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saCodeDocGsCodeGenderId
		/// </summary>
		
		public TList<SaCodeDoc> SaCodeDocCollection
		{
			get
			{
				if (_saCodeDocGsCodeGenderId == null)
				{
				_saCodeDocGsCodeGenderId = new TList<SaCodeDoc>();
				}
	
				return _saCodeDocGsCodeGenderId;
			}
			set { _saCodeDocGsCodeGenderId = value; }
		}
		
		#endregion

		#region SaRelativeCollection
		
		private TList<SaRelative> _saRelativeGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saRelativeGsCodeGenderId
		/// </summary>
		
		public TList<SaRelative> SaRelativeCollection
		{
			get
			{
				if (_saRelativeGsCodeGenderId == null)
				{
				_saRelativeGsCodeGenderId = new TList<SaRelative>();
				}
	
				return _saRelativeGsCodeGenderId;
			}
			set { _saRelativeGsCodeGenderId = value; }
		}
		
		#endregion

		#region FeeAllowanceRuleCollection
		
		private TList<FeeAllowanceRule> _feeAllowanceRuleGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeAllowanceRuleGsCodeGenderId
		/// </summary>
		
		public TList<FeeAllowanceRule> FeeAllowanceRuleCollection
		{
			get
			{
				if (_feeAllowanceRuleGsCodeGenderId == null)
				{
				_feeAllowanceRuleGsCodeGenderId = new TList<FeeAllowanceRule>();
				}
	
				return _feeAllowanceRuleGsCodeGenderId;
			}
			set { _feeAllowanceRuleGsCodeGenderId = value; }
		}
		
		#endregion

		#region GsCdeClrncItemCollection
		
		private TList<GsCdeClrncItem> _gsCdeClrncItemGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _gsCdeClrncItemGsCodeGenderId
		/// </summary>
		
		public TList<GsCdeClrncItem> GsCdeClrncItemCollection
		{
			get
			{
				if (_gsCdeClrncItemGsCodeGenderId == null)
				{
				_gsCdeClrncItemGsCodeGenderId = new TList<GsCdeClrncItem>();
				}
	
				return _gsCdeClrncItemGsCodeGenderId;
			}
			set { _gsCdeClrncItemGsCodeGenderId = value; }
		}
		
		#endregion

		#region AdmApplicantCollection
		
		private TList<AdmApplicant> _admApplicantGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admApplicantGsCodeGenderId
		/// </summary>
		
		public TList<AdmApplicant> AdmApplicantCollection
		{
			get
			{
				if (_admApplicantGsCodeGenderId == null)
				{
				_admApplicantGsCodeGenderId = new TList<AdmApplicant>();
				}
	
				return _admApplicantGsCodeGenderId;
			}
			set { _admApplicantGsCodeGenderId = value; }
		}
		
		#endregion

		#region AdmPlaceExamDatetimeCollection
		
		private TList<AdmPlaceExamDatetime> _admPlaceExamDatetimeGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admPlaceExamDatetimeGsCodeGenderId
		/// </summary>
		
		public TList<AdmPlaceExamDatetime> AdmPlaceExamDatetimeCollection
		{
			get
			{
				if (_admPlaceExamDatetimeGsCodeGenderId == null)
				{
				_admPlaceExamDatetimeGsCodeGenderId = new TList<AdmPlaceExamDatetime>();
				}
	
				return _admPlaceExamDatetimeGsCodeGenderId;
			}
			set { _admPlaceExamDatetimeGsCodeGenderId = value; }
		}
		
		#endregion

		#region AccomBuildingCollection
		
		private TList<AccomBuilding> _accomBuildingGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomBuildingGsCodeGenderId
		/// </summary>
		
		public TList<AccomBuilding> AccomBuildingCollection
		{
			get
			{
				if (_accomBuildingGsCodeGenderId == null)
				{
				_accomBuildingGsCodeGenderId = new TList<AccomBuilding>();
				}
	
				return _accomBuildingGsCodeGenderId;
			}
			set { _accomBuildingGsCodeGenderId = value; }
		}
		
		#endregion

		#region EdExamSchdlCollection
		
		private TList<EdExamSchdl> _edExamSchdlGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edExamSchdlGsCodeGenderId
		/// </summary>
		
		public TList<EdExamSchdl> EdExamSchdlCollection
		{
			get
			{
				if (_edExamSchdlGsCodeGenderId == null)
				{
				_edExamSchdlGsCodeGenderId = new TList<EdExamSchdl>();
				}
	
				return _edExamSchdlGsCodeGenderId;
			}
			set { _edExamSchdlGsCodeGenderId = value; }
		}
		
		#endregion

		#region EdStudCollection
		
		private TList<EdStud> _edStudGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudGsCodeGenderId
		/// </summary>
		
		public TList<EdStud> EdStudCollection
		{
			get
			{
				if (_edStudGsCodeGenderId == null)
				{
				_edStudGsCodeGenderId = new TList<EdStud>();
				}
	
				return _edStudGsCodeGenderId;
			}
			set { _edStudGsCodeGenderId = value; }
		}
		
		#endregion

		#region EntityMainCollection
		
		private TList<EntityMain> _entityMainGsCodeGenderId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entityMainGsCodeGenderId
		/// </summary>
		
		public TList<EntityMain> EntityMainCollection
		{
			get
			{
				if (_entityMainGsCodeGenderId == null)
				{
				_entityMainGsCodeGenderId = new TList<EntityMain>();
				}
	
				return _entityMainGsCodeGenderId;
			}
			set { _entityMainGsCodeGenderId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			GsCodeGenderEntityData _tmp = new GsCodeGenderEntityData();
						
			_tmp.GsCodeGenderId = this.GsCodeGenderId;
			_tmp.OriginalGsCodeGenderId = this.OriginalGsCodeGenderId;
			
			_tmp.GenderDescrAr = this.GenderDescrAr;
			_tmp.GenderDescrEn = this.GenderDescrEn;
			_tmp.GenderCode = this.GenderCode;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._pgExtMemberGsCodeGenderId != null)
				_tmp.PgExtMemberCollection = (TList<PgExtMember>) MakeCopyOf(this.PgExtMemberCollection); 
			if (this._scScheduleDtlGsCodeGenderId != null)
				_tmp.ScScheduleDtlCollection = (TList<ScScheduleDtl>) MakeCopyOf(this.ScScheduleDtlCollection); 
			if (this._accomCdePermtTypeGsCodeGenderId != null)
				_tmp.AccomCdePermtTypeCollection = (TList<AccomCdePermtType>) MakeCopyOf(this.AccomCdePermtTypeCollection); 
			if (this._saStfMemberGsCodeGenderId != null)
				_tmp.SaStfMemberCollection = (TList<SaStfMember>) MakeCopyOf(this.SaStfMemberCollection); 
			if (this._seUserAccntGsCodeGenderId != null)
				_tmp.SeUserAccntCollection = (TList<SeUserAccnt>) MakeCopyOf(this.SeUserAccntCollection); 
			if (this._admReqDocGsCodeGenderId != null)
				_tmp.AdmReqDocCollection = (TList<AdmReqDoc>) MakeCopyOf(this.AdmReqDocCollection); 
			if (this._saCodeDocGsCodeGenderId != null)
				_tmp.SaCodeDocCollection = (TList<SaCodeDoc>) MakeCopyOf(this.SaCodeDocCollection); 
			if (this._saRelativeGsCodeGenderId != null)
				_tmp.SaRelativeCollection = (TList<SaRelative>) MakeCopyOf(this.SaRelativeCollection); 
			if (this._feeAllowanceRuleGsCodeGenderId != null)
				_tmp.FeeAllowanceRuleCollection = (TList<FeeAllowanceRule>) MakeCopyOf(this.FeeAllowanceRuleCollection); 
			if (this._gsCdeClrncItemGsCodeGenderId != null)
				_tmp.GsCdeClrncItemCollection = (TList<GsCdeClrncItem>) MakeCopyOf(this.GsCdeClrncItemCollection); 
			if (this._admApplicantGsCodeGenderId != null)
				_tmp.AdmApplicantCollection = (TList<AdmApplicant>) MakeCopyOf(this.AdmApplicantCollection); 
			if (this._admPlaceExamDatetimeGsCodeGenderId != null)
				_tmp.AdmPlaceExamDatetimeCollection = (TList<AdmPlaceExamDatetime>) MakeCopyOf(this.AdmPlaceExamDatetimeCollection); 
			if (this._accomBuildingGsCodeGenderId != null)
				_tmp.AccomBuildingCollection = (TList<AccomBuilding>) MakeCopyOf(this.AccomBuildingCollection); 
			if (this._edExamSchdlGsCodeGenderId != null)
				_tmp.EdExamSchdlCollection = (TList<EdExamSchdl>) MakeCopyOf(this.EdExamSchdlCollection); 
			if (this._edStudGsCodeGenderId != null)
				_tmp.EdStudCollection = (TList<EdStud>) MakeCopyOf(this.EdStudCollection); 
			if (this._entityMainGsCodeGenderId != null)
				_tmp.EntityMainCollection = (TList<EntityMain>) MakeCopyOf(this.EntityMainCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			GsCodeGenderEntityData _tmp = new GsCodeGenderEntityData();
						
			_tmp.GsCodeGenderId = this.GsCodeGenderId;
			_tmp.OriginalGsCodeGenderId = this.OriginalGsCodeGenderId;
			
			_tmp.GenderDescrAr = this.GenderDescrAr;
			_tmp.GenderDescrEn = this.GenderDescrEn;
			_tmp.GenderCode = this.GenderCode;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.PgExtMemberCollection = (TList<PgExtMember>) MakeCopyOf(this.PgExtMemberCollection, existingCopies); 
			_tmp.ScScheduleDtlCollection = (TList<ScScheduleDtl>) MakeCopyOf(this.ScScheduleDtlCollection, existingCopies); 
			_tmp.AccomCdePermtTypeCollection = (TList<AccomCdePermtType>) MakeCopyOf(this.AccomCdePermtTypeCollection, existingCopies); 
			_tmp.SaStfMemberCollection = (TList<SaStfMember>) MakeCopyOf(this.SaStfMemberCollection, existingCopies); 
			_tmp.SeUserAccntCollection = (TList<SeUserAccnt>) MakeCopyOf(this.SeUserAccntCollection, existingCopies); 
			_tmp.AdmReqDocCollection = (TList<AdmReqDoc>) MakeCopyOf(this.AdmReqDocCollection, existingCopies); 
			_tmp.SaCodeDocCollection = (TList<SaCodeDoc>) MakeCopyOf(this.SaCodeDocCollection, existingCopies); 
			_tmp.SaRelativeCollection = (TList<SaRelative>) MakeCopyOf(this.SaRelativeCollection, existingCopies); 
			_tmp.FeeAllowanceRuleCollection = (TList<FeeAllowanceRule>) MakeCopyOf(this.FeeAllowanceRuleCollection, existingCopies); 
			_tmp.GsCdeClrncItemCollection = (TList<GsCdeClrncItem>) MakeCopyOf(this.GsCdeClrncItemCollection, existingCopies); 
			_tmp.AdmApplicantCollection = (TList<AdmApplicant>) MakeCopyOf(this.AdmApplicantCollection, existingCopies); 
			_tmp.AdmPlaceExamDatetimeCollection = (TList<AdmPlaceExamDatetime>) MakeCopyOf(this.AdmPlaceExamDatetimeCollection, existingCopies); 
			_tmp.AccomBuildingCollection = (TList<AccomBuilding>) MakeCopyOf(this.AccomBuildingCollection, existingCopies); 
			_tmp.EdExamSchdlCollection = (TList<EdExamSchdl>) MakeCopyOf(this.EdExamSchdlCollection, existingCopies); 
			_tmp.EdStudCollection = (TList<EdStud>) MakeCopyOf(this.EdStudCollection, existingCopies); 
			_tmp.EntityMainCollection = (TList<EntityMain>) MakeCopyOf(this.EntityMainCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GsCodeGenderColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(GsCodeGenderColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GsCodeGenderColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(GsCodeGenderColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GsCodeGenderColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(GsCodeGenderColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				GsCodeGenderEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new GsCodeGenderEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GsCodeGenderColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(GsCodeGenderColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				GsCodeGenderEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new GsCodeGenderEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region GsCodeGenderEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="GsCodeGender"/> object.
	/// </remarks>
	public class GsCodeGenderEventArgs : System.EventArgs
	{
		private GsCodeGenderColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the GsCodeGenderEventArgs class.
		///</summary>
		public GsCodeGenderEventArgs(GsCodeGenderColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the GsCodeGenderEventArgs class.
		///</summary>
		public GsCodeGenderEventArgs(GsCodeGenderColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The GsCodeGenderColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="GsCodeGenderColumn" />
		public GsCodeGenderColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all GsCodeGender related events.
	///</summary>
	public delegate void GsCodeGenderEventHandler(object sender, GsCodeGenderEventArgs e);
	
	#region GsCodeGenderComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class GsCodeGenderComparer : System.Collections.Generic.IComparer<GsCodeGender>
	{
		GsCodeGenderColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:GsCodeGenderComparer"/> class.
        /// </summary>
		public GsCodeGenderComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:GsCodeGenderComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public GsCodeGenderComparer(GsCodeGenderColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="GsCodeGender"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="GsCodeGender"/> to compare.</param>
        /// <param name="b">The second <c>GsCodeGender</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(GsCodeGender a, GsCodeGender b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(GsCodeGender entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(GsCodeGender a, GsCodeGender b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public GsCodeGenderColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region GsCodeGenderKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="GsCodeGender"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class GsCodeGenderKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the GsCodeGenderKey class.
		/// </summary>
		public GsCodeGenderKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the GsCodeGenderKey class.
		/// </summary>
		public GsCodeGenderKey(GsCodeGenderBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.GsCodeGenderId = entity.GsCodeGenderId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the GsCodeGenderKey class.
		/// </summary>
		public GsCodeGenderKey(System.Decimal _gsCodeGenderId)
		{
			#region Init Properties

			this.GsCodeGenderId = _gsCodeGenderId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private GsCodeGenderBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public GsCodeGenderBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the GsCodeGenderId property
		private System.Decimal _gsCodeGenderId;
		
		/// <summary>
		/// Gets or sets the GsCodeGenderId property.
		/// </summary>
		public System.Decimal GsCodeGenderId
		{
			get { return _gsCodeGenderId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.GsCodeGenderId = value;
				
				_gsCodeGenderId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				GsCodeGenderId = ( values["GsCodeGenderId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["GsCodeGenderId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("GsCodeGenderId", GsCodeGenderId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("GsCodeGenderId: {0}{1}",
								GsCodeGenderId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region GsCodeGenderColumn Enum
	
	/// <summary>
	/// Enumerate the GsCodeGender columns.
	/// </summary>
	[Serializable]
	public enum GsCodeGenderColumn : int
	{
		/// <summary>
		/// GsCodeGenderId : 
		/// </summary>
		[EnumTextValue("GS_CODE_GENDER_ID")]
		[ColumnEnum("GS_CODE_GENDER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		GsCodeGenderId = 1,
		/// <summary>
		/// GenderDescrAr : 
		/// </summary>
		[EnumTextValue("GENDER_DESCR_AR")]
		[ColumnEnum("GENDER_DESCR_AR", typeof(System.String), System.Data.DbType.String, false, false, false, 50)]
		GenderDescrAr = 2,
		/// <summary>
		/// GenderDescrEn : 
		/// </summary>
		[EnumTextValue("GENDER_DESCR_EN")]
		[ColumnEnum("GENDER_DESCR_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		GenderDescrEn = 3,
		/// <summary>
		/// GenderCode : 
		/// </summary>
		[EnumTextValue("GENDER_CODE")]
		[ColumnEnum("GENDER_CODE", typeof(System.String), System.Data.DbType.String, false, false, true, 30)]
		GenderCode = 4
	}//End enum

	#endregion GsCodeGenderColumn Enum

} // end namespace
