
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file FeeStudVoucherPayMthod.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'FEE_STUD_VOUCHER_PAY_MTHOD' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class FeeStudVoucherPayMthodBase : EntityBase, IFeeStudVoucherPayMthod, IEntityId<FeeStudVoucherPayMthodKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private FeeStudVoucherPayMthodEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private FeeStudVoucherPayMthodEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private FeeStudVoucherPayMthodEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<FeeStudVoucherPayMthod> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event FeeStudVoucherPayMthodEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event FeeStudVoucherPayMthodEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="FeeStudVoucherPayMthodBase"/> instance.
		///</summary>
		public FeeStudVoucherPayMthodBase()
		{
			this.entityData = new FeeStudVoucherPayMthodEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="FeeStudVoucherPayMthodBase"/> instance.
		///</summary>
		///<param name="_feeStudVoucherPayMthodId">دفع باكتر من طريقةKU( 53=MULTI_PAYMENT)</param>
		///<param name="_feeStudVoucherId">اذن دفع/ايصال سداد</param>
		///<param name="_gsCodePayMethodId"></param>
		///<param name="_gsCodePayMthdTypeId"></param>
		///<param name="_payAmnt">المدفوع</param>
		///<param name="_bankTrnsDate">في حالة وسيلة الدفع "تحويل بنكي" يتم ادخال حقل تاريخ التحويل  --
		/// 		/// فى حالة دفع بالشيك او تاريخ  الشيك</param>
		///<param name="_feeCodeBankId">في حالة وسيلة الدفع "شيك" يتم ادخال البنك ورقم الحساب ورقم الشيك وتاريخ استحقاق الشيك</param>
		///<param name="_accntNum">رقم حساب البنك  فى حالة ايداع&&في حالة السداد من نوع "الشيك"  يجب اظهار البنوك للاختيار منها وبعد اختيار البنك يقوم النظام باظهار رقم الحساب الخاص بالبنك</param>
		///<param name="_cheqNum">رقم الشيك فى حالة دفع بالشيك</param>
		///<param name="_cardNum">في حالة السداد من نوع "فيزا" يجب ادخال
		/// 		///  "رقم الفيزا" اجباري الادخال</param>
		///<param name="_onlineFlg"></param>
		///<param name="_onlinePayInd"></param>
		///<param name="_seUserId"></param>
		///<param name="_lastDate"></param>
		public FeeStudVoucherPayMthodBase(System.Decimal _feeStudVoucherPayMthodId, System.Decimal _feeStudVoucherId, 
			System.Decimal _gsCodePayMethodId, System.Int32? _gsCodePayMthdTypeId, 
			System.Decimal? _payAmnt, System.DateTime? _bankTrnsDate, System.Decimal? _feeCodeBankId, 
			System.String _accntNum, System.String _cheqNum, System.String _cardNum, 
			System.Boolean? _onlineFlg, System.String _onlinePayInd, System.Decimal? _seUserId, 
			System.DateTime? _lastDate)
		{
			this.entityData = new FeeStudVoucherPayMthodEntityData();
			this.backupData = null;

			this.FeeStudVoucherPayMthodId = _feeStudVoucherPayMthodId;
			this.FeeStudVoucherId = _feeStudVoucherId;
			this.GsCodePayMethodId = _gsCodePayMethodId;
			this.GsCodePayMthdTypeId = _gsCodePayMthdTypeId;
			this.PayAmnt = _payAmnt;
			this.BankTrnsDate = _bankTrnsDate;
			this.FeeCodeBankId = _feeCodeBankId;
			this.AccntNum = _accntNum;
			this.CheqNum = _cheqNum;
			this.CardNum = _cardNum;
			this.OnlineFlg = _onlineFlg;
			this.OnlinePayInd = _onlinePayInd;
			this.SeUserId = _seUserId;
			this.LastDate = _lastDate;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="FeeStudVoucherPayMthod"/> instance.
		///</summary>
		///<param name="_feeStudVoucherPayMthodId">دفع باكتر من طريقةKU( 53=MULTI_PAYMENT)</param>
		///<param name="_feeStudVoucherId">اذن دفع/ايصال سداد</param>
		///<param name="_gsCodePayMethodId"></param>
		///<param name="_gsCodePayMthdTypeId"></param>
		///<param name="_payAmnt">المدفوع</param>
		///<param name="_bankTrnsDate">في حالة وسيلة الدفع "تحويل بنكي" يتم ادخال حقل تاريخ التحويل  --
		/// 		/// فى حالة دفع بالشيك او تاريخ  الشيك</param>
		///<param name="_feeCodeBankId">في حالة وسيلة الدفع "شيك" يتم ادخال البنك ورقم الحساب ورقم الشيك وتاريخ استحقاق الشيك</param>
		///<param name="_accntNum">رقم حساب البنك  فى حالة ايداع&&في حالة السداد من نوع "الشيك"  يجب اظهار البنوك للاختيار منها وبعد اختيار البنك يقوم النظام باظهار رقم الحساب الخاص بالبنك</param>
		///<param name="_cheqNum">رقم الشيك فى حالة دفع بالشيك</param>
		///<param name="_cardNum">في حالة السداد من نوع "فيزا" يجب ادخال
		/// 		///  "رقم الفيزا" اجباري الادخال</param>
		///<param name="_onlineFlg"></param>
		///<param name="_onlinePayInd"></param>
		///<param name="_seUserId"></param>
		///<param name="_lastDate"></param>
		public static FeeStudVoucherPayMthod CreateFeeStudVoucherPayMthod(System.Decimal _feeStudVoucherPayMthodId, System.Decimal _feeStudVoucherId, 
			System.Decimal _gsCodePayMethodId, System.Int32? _gsCodePayMthdTypeId, 
			System.Decimal? _payAmnt, System.DateTime? _bankTrnsDate, System.Decimal? _feeCodeBankId, 
			System.String _accntNum, System.String _cheqNum, System.String _cardNum, 
			System.Boolean? _onlineFlg, System.String _onlinePayInd, System.Decimal? _seUserId, 
			System.DateTime? _lastDate)
		{
			FeeStudVoucherPayMthod newFeeStudVoucherPayMthod = new FeeStudVoucherPayMthod();
			newFeeStudVoucherPayMthod.FeeStudVoucherPayMthodId = _feeStudVoucherPayMthodId;
			newFeeStudVoucherPayMthod.FeeStudVoucherId = _feeStudVoucherId;
			newFeeStudVoucherPayMthod.GsCodePayMethodId = _gsCodePayMethodId;
			newFeeStudVoucherPayMthod.GsCodePayMthdTypeId = _gsCodePayMthdTypeId;
			newFeeStudVoucherPayMthod.PayAmnt = _payAmnt;
			newFeeStudVoucherPayMthod.BankTrnsDate = _bankTrnsDate;
			newFeeStudVoucherPayMthod.FeeCodeBankId = _feeCodeBankId;
			newFeeStudVoucherPayMthod.AccntNum = _accntNum;
			newFeeStudVoucherPayMthod.CheqNum = _cheqNum;
			newFeeStudVoucherPayMthod.CardNum = _cardNum;
			newFeeStudVoucherPayMthod.OnlineFlg = _onlineFlg;
			newFeeStudVoucherPayMthod.OnlinePayInd = _onlinePayInd;
			newFeeStudVoucherPayMthod.SeUserId = _seUserId;
			newFeeStudVoucherPayMthod.LastDate = _lastDate;
			return newFeeStudVoucherPayMthod;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the FeeStudVoucherPayMthodId property. 
		///		دفع باكتر من طريقةKU( 53=MULTI_PAYMENT)
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"دفع باكتر من طريقةKU( 53=MULTI_PAYMENT)"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal FeeStudVoucherPayMthodId
		{
			get
			{
				return this.entityData.FeeStudVoucherPayMthodId; 
			}
			
			set
			{
				if (this.entityData.FeeStudVoucherPayMthodId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherPayMthodColumn.FeeStudVoucherPayMthodId, this.entityData.FeeStudVoucherPayMthodId);
				this.entityData.FeeStudVoucherPayMthodId = value;
				this.EntityId.FeeStudVoucherPayMthodId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherPayMthodColumn.FeeStudVoucherPayMthodId, this.entityData.FeeStudVoucherPayMthodId);
				OnPropertyChanged("FeeStudVoucherPayMthodId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the FEE_STUD_VOUCHER_PAY_MTHOD_ID property.
		///		دفع باكتر من طريقةKU( 53=MULTI_PAYMENT)
		/// </summary>
		/// <remarks>This is the original value of the FEE_STUD_VOUCHER_PAY_MTHOD_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalFeeStudVoucherPayMthodId
		{
			get { return this.entityData.OriginalFeeStudVoucherPayMthodId; }
			set { this.entityData.OriginalFeeStudVoucherPayMthodId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the FeeStudVoucherId property. 
		///		اذن دفع/ايصال سداد
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"اذن دفع/ايصال سداد"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal FeeStudVoucherId
		{
			get
			{
				return this.entityData.FeeStudVoucherId; 
			}
			
			set
			{
				if (this.entityData.FeeStudVoucherId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherPayMthodColumn.FeeStudVoucherId, this.entityData.FeeStudVoucherId);
				this.entityData.FeeStudVoucherId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherPayMthodColumn.FeeStudVoucherId, this.entityData.FeeStudVoucherId);
				OnPropertyChanged("FeeStudVoucherId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodePayMethodId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal GsCodePayMethodId
		{
			get
			{
				return this.entityData.GsCodePayMethodId; 
			}
			
			set
			{
				if (this.entityData.GsCodePayMethodId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherPayMthodColumn.GsCodePayMethodId, this.entityData.GsCodePayMethodId);
				this.entityData.GsCodePayMethodId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherPayMthodColumn.GsCodePayMethodId, this.entityData.GsCodePayMethodId);
				OnPropertyChanged("GsCodePayMethodId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodePayMthdTypeId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsGsCodePayMthdTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? GsCodePayMthdTypeId
		{
			get
			{
				return this.entityData.GsCodePayMthdTypeId; 
			}
			
			set
			{
				if (this.entityData.GsCodePayMthdTypeId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherPayMthodColumn.GsCodePayMthdTypeId, this.entityData.GsCodePayMthdTypeId);
				this.entityData.GsCodePayMthdTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherPayMthodColumn.GsCodePayMthdTypeId, this.entityData.GsCodePayMthdTypeId);
				OnPropertyChanged("GsCodePayMthdTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PayAmnt property. 
		///		المدفوع
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPayAmntNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"المدفوع"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? PayAmnt
		{
			get
			{
				return this.entityData.PayAmnt; 
			}
			
			set
			{
				if (this.entityData.PayAmnt == value)
					return;
					
				OnColumnChanging(FeeStudVoucherPayMthodColumn.PayAmnt, this.entityData.PayAmnt);
				this.entityData.PayAmnt = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherPayMthodColumn.PayAmnt, this.entityData.PayAmnt);
				OnPropertyChanged("PayAmnt");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BankTrnsDate property. 
		///		في حالة وسيلة الدفع "تحويل بنكي" يتم ادخال حقل تاريخ التحويل  --
		/// 		/// فى حالة دفع بالشيك او تاريخ  الشيك
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsBankTrnsDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"في حالة وسيلة الدفع 'تحويل بنكي' يتم ادخال حقل تاريخ التحويل  -- فى حالة دفع بالشيك او تاريخ  الشيك"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? BankTrnsDate
		{
			get
			{
				return this.entityData.BankTrnsDate; 
			}
			
			set
			{
				if (this.entityData.BankTrnsDate == value)
					return;
					
				OnColumnChanging(FeeStudVoucherPayMthodColumn.BankTrnsDate, this.entityData.BankTrnsDate);
				this.entityData.BankTrnsDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherPayMthodColumn.BankTrnsDate, this.entityData.BankTrnsDate);
				OnPropertyChanged("BankTrnsDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeCodeBankId property. 
		///		في حالة وسيلة الدفع "شيك" يتم ادخال البنك ورقم الحساب ورقم الشيك وتاريخ استحقاق الشيك
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFeeCodeBankIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"في حالة وسيلة الدفع 'شيك' يتم ادخال البنك ورقم الحساب ورقم الشيك وتاريخ استحقاق الشيك"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FeeCodeBankId
		{
			get
			{
				return this.entityData.FeeCodeBankId; 
			}
			
			set
			{
				if (this.entityData.FeeCodeBankId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherPayMthodColumn.FeeCodeBankId, this.entityData.FeeCodeBankId);
				this.entityData.FeeCodeBankId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherPayMthodColumn.FeeCodeBankId, this.entityData.FeeCodeBankId);
				OnPropertyChanged("FeeCodeBankId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AccntNum property. 
		///		رقم حساب البنك  فى حالة ايداع&&في حالة السداد من نوع "الشيك"  يجب اظهار البنوك للاختيار منها وبعد اختيار البنك يقوم النظام باظهار رقم الحساب الخاص بالبنك
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"رقم حساب البنك  فى حالة ايداع&&في حالة السداد من نوع 'الشيك'  يجب اظهار البنوك للاختيار منها وبعد اختيار البنك يقوم النظام باظهار رقم الحساب الخاص بالبنك"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String AccntNum
		{
			get
			{
				return this.entityData.AccntNum; 
			}
			
			set
			{
				if (this.entityData.AccntNum == value)
					return;
					
				OnColumnChanging(FeeStudVoucherPayMthodColumn.AccntNum, this.entityData.AccntNum);
				this.entityData.AccntNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherPayMthodColumn.AccntNum, this.entityData.AccntNum);
				OnPropertyChanged("AccntNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CheqNum property. 
		///		رقم الشيك فى حالة دفع بالشيك
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"رقم الشيك فى حالة دفع بالشيك"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String CheqNum
		{
			get
			{
				return this.entityData.CheqNum; 
			}
			
			set
			{
				if (this.entityData.CheqNum == value)
					return;
					
				OnColumnChanging(FeeStudVoucherPayMthodColumn.CheqNum, this.entityData.CheqNum);
				this.entityData.CheqNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherPayMthodColumn.CheqNum, this.entityData.CheqNum);
				OnPropertyChanged("CheqNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CardNum property. 
		///		في حالة السداد من نوع "فيزا" يجب ادخال
		/// 		///  "رقم الفيزا" اجباري الادخال
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"في حالة السداد من نوع 'فيزا' يجب ادخال  'رقم الفيزا' اجباري الادخال"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String CardNum
		{
			get
			{
				return this.entityData.CardNum; 
			}
			
			set
			{
				if (this.entityData.CardNum == value)
					return;
					
				OnColumnChanging(FeeStudVoucherPayMthodColumn.CardNum, this.entityData.CardNum);
				this.entityData.CardNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherPayMthodColumn.CardNum, this.entityData.CardNum);
				OnPropertyChanged("CardNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OnlineFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsOnlineFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? OnlineFlg
		{
			get
			{
				return this.entityData.OnlineFlg; 
			}
			
			set
			{
				if (this.entityData.OnlineFlg == value)
					return;
					
				OnColumnChanging(FeeStudVoucherPayMthodColumn.OnlineFlg, this.entityData.OnlineFlg);
				this.entityData.OnlineFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherPayMthodColumn.OnlineFlg, this.entityData.OnlineFlg);
				OnPropertyChanged("OnlineFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OnlinePayInd property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String OnlinePayInd
		{
			get
			{
				return this.entityData.OnlinePayInd; 
			}
			
			set
			{
				if (this.entityData.OnlinePayInd == value)
					return;
					
				OnColumnChanging(FeeStudVoucherPayMthodColumn.OnlinePayInd, this.entityData.OnlinePayInd);
				this.entityData.OnlinePayInd = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherPayMthodColumn.OnlinePayInd, this.entityData.OnlinePayInd);
				OnPropertyChanged("OnlinePayInd");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherPayMthodColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherPayMthodColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(FeeStudVoucherPayMthodColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherPayMthodColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="FeeCodeBanks"/>.
		/// </summary>
		/// <value>The source FeeCodeBanks for FeeCodeBankId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeCodeBanks FeeCodeBankIdSource
      	{
            get { return entityData.FeeCodeBankIdSource; }
            set { entityData.FeeCodeBankIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="FeeStudVoucher"/>.
		/// </summary>
		/// <value>The source FeeStudVoucher for FeeStudVoucherId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeStudVoucher FeeStudVoucherIdSource
      	{
            get { return entityData.FeeStudVoucherIdSource; }
            set { entityData.FeeStudVoucherIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodePayMethod"/>.
		/// </summary>
		/// <value>The source GsCodePayMethod for GsCodePayMethodId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodePayMethod GsCodePayMethodIdSource
      	{
            get { return entityData.GsCodePayMethodIdSource; }
            set { entityData.GsCodePayMethodIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodePayMthdType"/>.
		/// </summary>
		/// <value>The source GsCodePayMthdType for GsCodePayMthdTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodePayMthdType GsCodePayMthdTypeIdSource
      	{
            get { return entityData.GsCodePayMthdTypeIdSource; }
            set { entityData.GsCodePayMthdTypeIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("AccntNum", "Accnt Num", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CheqNum", "Cheq Num", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CardNum", "Card Num", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("OnlinePayInd", "Online Pay Ind", 100));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "FEE_STUD_VOUCHER_PAY_MTHOD"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"FEE_STUD_VOUCHER_PAY_MTHOD_ID", "FEE_STUD_VOUCHER_ID", "GS_CODE_PAY_METHOD_ID", "GS_CODE_PAY_MTHD_TYPE_ID", "PAY_AMNT", "BANK_TRNS_DATE", "FEE_CODE_BANK_ID", "ACCNT_NUM", "CHEQ_NUM", "CARD_NUM", "ONLINE_FLG", "ONLINE_PAY_IND", "SE_USER_ID", "LAST_DATE"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as FeeStudVoucherPayMthodEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (FeeStudVoucherPayMthod) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<FeeStudVoucherPayMthod>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as FeeStudVoucherPayMthod);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed FeeStudVoucherPayMthod Entity 
		///</summary>
		protected virtual FeeStudVoucherPayMthod Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			FeeStudVoucherPayMthod copy = new FeeStudVoucherPayMthod();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.FeeStudVoucherPayMthodId = this.FeeStudVoucherPayMthodId;
					copy.OriginalFeeStudVoucherPayMthodId = this.OriginalFeeStudVoucherPayMthodId;
				copy.FeeStudVoucherId = this.FeeStudVoucherId;
				copy.GsCodePayMethodId = this.GsCodePayMethodId;
				copy.GsCodePayMthdTypeId = this.GsCodePayMthdTypeId;
				copy.PayAmnt = this.PayAmnt;
				copy.BankTrnsDate = this.BankTrnsDate;
				copy.FeeCodeBankId = this.FeeCodeBankId;
				copy.AccntNum = this.AccntNum;
				copy.CheqNum = this.CheqNum;
				copy.CardNum = this.CardNum;
				copy.OnlineFlg = this.OnlineFlg;
				copy.OnlinePayInd = this.OnlinePayInd;
				copy.SeUserId = this.SeUserId;
				copy.LastDate = this.LastDate;
			
			if (this.FeeCodeBankIdSource != null && existingCopies.Contains(this.FeeCodeBankIdSource))
				copy.FeeCodeBankIdSource = existingCopies[this.FeeCodeBankIdSource] as FeeCodeBanks;
			else
				copy.FeeCodeBankIdSource = MakeCopyOf(this.FeeCodeBankIdSource, existingCopies) as FeeCodeBanks;
			if (this.FeeStudVoucherIdSource != null && existingCopies.Contains(this.FeeStudVoucherIdSource))
				copy.FeeStudVoucherIdSource = existingCopies[this.FeeStudVoucherIdSource] as FeeStudVoucher;
			else
				copy.FeeStudVoucherIdSource = MakeCopyOf(this.FeeStudVoucherIdSource, existingCopies) as FeeStudVoucher;
			if (this.GsCodePayMethodIdSource != null && existingCopies.Contains(this.GsCodePayMethodIdSource))
				copy.GsCodePayMethodIdSource = existingCopies[this.GsCodePayMethodIdSource] as GsCodePayMethod;
			else
				copy.GsCodePayMethodIdSource = MakeCopyOf(this.GsCodePayMethodIdSource, existingCopies) as GsCodePayMethod;
			if (this.GsCodePayMthdTypeIdSource != null && existingCopies.Contains(this.GsCodePayMthdTypeIdSource))
				copy.GsCodePayMthdTypeIdSource = existingCopies[this.GsCodePayMthdTypeIdSource] as GsCodePayMthdType;
			else
				copy.GsCodePayMthdTypeIdSource = MakeCopyOf(this.GsCodePayMthdTypeIdSource, existingCopies) as GsCodePayMthdType;
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed FeeStudVoucherPayMthod Entity 
		///</summary>
		public virtual FeeStudVoucherPayMthod Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed FeeStudVoucherPayMthod Entity which is a deep copy of the current entity.
		///</summary>
		public virtual FeeStudVoucherPayMthod DeepCopy()
		{
			return EntityHelper.Clone<FeeStudVoucherPayMthod>(this as FeeStudVoucherPayMthod);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as FeeStudVoucherPayMthodEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new FeeStudVoucherPayMthodEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as FeeStudVoucherPayMthodEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(FeeStudVoucherPayMthodColumn column)
		{
			switch(column)
			{
					case FeeStudVoucherPayMthodColumn.FeeStudVoucherPayMthodId:
					return entityData.FeeStudVoucherPayMthodId != _originalData.FeeStudVoucherPayMthodId;
					case FeeStudVoucherPayMthodColumn.FeeStudVoucherId:
					return entityData.FeeStudVoucherId != _originalData.FeeStudVoucherId;
					case FeeStudVoucherPayMthodColumn.GsCodePayMethodId:
					return entityData.GsCodePayMethodId != _originalData.GsCodePayMethodId;
					case FeeStudVoucherPayMthodColumn.GsCodePayMthdTypeId:
					return entityData.GsCodePayMthdTypeId != _originalData.GsCodePayMthdTypeId;
					case FeeStudVoucherPayMthodColumn.PayAmnt:
					return entityData.PayAmnt != _originalData.PayAmnt;
					case FeeStudVoucherPayMthodColumn.BankTrnsDate:
					return entityData.BankTrnsDate != _originalData.BankTrnsDate;
					case FeeStudVoucherPayMthodColumn.FeeCodeBankId:
					return entityData.FeeCodeBankId != _originalData.FeeCodeBankId;
					case FeeStudVoucherPayMthodColumn.AccntNum:
					return entityData.AccntNum != _originalData.AccntNum;
					case FeeStudVoucherPayMthodColumn.CheqNum:
					return entityData.CheqNum != _originalData.CheqNum;
					case FeeStudVoucherPayMthodColumn.CardNum:
					return entityData.CardNum != _originalData.CardNum;
					case FeeStudVoucherPayMthodColumn.OnlineFlg:
					return entityData.OnlineFlg != _originalData.OnlineFlg;
					case FeeStudVoucherPayMthodColumn.OnlinePayInd:
					return entityData.OnlinePayInd != _originalData.OnlinePayInd;
					case FeeStudVoucherPayMthodColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
					case FeeStudVoucherPayMthodColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< FeeStudVoucherPayMthodColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.FeeStudVoucherPayMthodId != _originalData.FeeStudVoucherPayMthodId;
			result = result || entityData.FeeStudVoucherId != _originalData.FeeStudVoucherId;
			result = result || entityData.GsCodePayMethodId != _originalData.GsCodePayMethodId;
			result = result || entityData.GsCodePayMthdTypeId != _originalData.GsCodePayMthdTypeId;
			result = result || entityData.PayAmnt != _originalData.PayAmnt;
			result = result || entityData.BankTrnsDate != _originalData.BankTrnsDate;
			result = result || entityData.FeeCodeBankId != _originalData.FeeCodeBankId;
			result = result || entityData.AccntNum != _originalData.AccntNum;
			result = result || entityData.CheqNum != _originalData.CheqNum;
			result = result || entityData.CardNum != _originalData.CardNum;
			result = result || entityData.OnlineFlg != _originalData.OnlineFlg;
			result = result || entityData.OnlinePayInd != _originalData.OnlinePayInd;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			result = result || entityData.LastDate != _originalData.LastDate;
			return result;
		}	
		
		///<summary>
		///  Returns a FeeStudVoucherPayMthod Entity with the original data.
		///</summary>
		public FeeStudVoucherPayMthod GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateFeeStudVoucherPayMthod(
				_originalData.FeeStudVoucherPayMthodId,
				_originalData.FeeStudVoucherId,
				_originalData.GsCodePayMethodId,
				_originalData.GsCodePayMthdTypeId,
				_originalData.PayAmnt,
				_originalData.BankTrnsDate,
				_originalData.FeeCodeBankId,
				_originalData.AccntNum,
				_originalData.CheqNum,
				_originalData.CardNum,
				_originalData.OnlineFlg,
				_originalData.OnlinePayInd,
				_originalData.SeUserId,
				_originalData.LastDate
				);
				
			return (FeeStudVoucherPayMthod)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="FeeStudVoucherPayMthodBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is FeeStudVoucherPayMthodBase)
				return ValueEquals(this, (FeeStudVoucherPayMthodBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="FeeStudVoucherPayMthodBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.FeeStudVoucherPayMthodId.GetHashCode() ^ 
					this.FeeStudVoucherId.GetHashCode() ^ 
					this.GsCodePayMethodId.GetHashCode() ^ 
					((this.GsCodePayMthdTypeId == null) ? string.Empty : this.GsCodePayMthdTypeId.ToString()).GetHashCode() ^ 
					((this.PayAmnt == null) ? string.Empty : this.PayAmnt.ToString()).GetHashCode() ^ 
					((this.BankTrnsDate == null) ? string.Empty : this.BankTrnsDate.ToString()).GetHashCode() ^ 
					((this.FeeCodeBankId == null) ? string.Empty : this.FeeCodeBankId.ToString()).GetHashCode() ^ 
					((this.AccntNum == null) ? string.Empty : this.AccntNum.ToString()).GetHashCode() ^ 
					((this.CheqNum == null) ? string.Empty : this.CheqNum.ToString()).GetHashCode() ^ 
					((this.CardNum == null) ? string.Empty : this.CardNum.ToString()).GetHashCode() ^ 
					((this.OnlineFlg == null) ? string.Empty : this.OnlineFlg.ToString()).GetHashCode() ^ 
					((this.OnlinePayInd == null) ? string.Empty : this.OnlinePayInd.ToString()).GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="FeeStudVoucherPayMthodBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(FeeStudVoucherPayMthodBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="FeeStudVoucherPayMthodBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="FeeStudVoucherPayMthodBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="FeeStudVoucherPayMthodBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(FeeStudVoucherPayMthodBase Object1, FeeStudVoucherPayMthodBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.FeeStudVoucherPayMthodId != Object2.FeeStudVoucherPayMthodId)
				equal = false;
			if (Object1.FeeStudVoucherId != Object2.FeeStudVoucherId)
				equal = false;
			if (Object1.GsCodePayMethodId != Object2.GsCodePayMethodId)
				equal = false;
			if ( Object1.GsCodePayMthdTypeId != null && Object2.GsCodePayMthdTypeId != null )
			{
				if (Object1.GsCodePayMthdTypeId != Object2.GsCodePayMthdTypeId)
					equal = false;
			}
			else if (Object1.GsCodePayMthdTypeId == null ^ Object2.GsCodePayMthdTypeId == null )
			{
				equal = false;
			}
			if ( Object1.PayAmnt != null && Object2.PayAmnt != null )
			{
				if (Object1.PayAmnt != Object2.PayAmnt)
					equal = false;
			}
			else if (Object1.PayAmnt == null ^ Object2.PayAmnt == null )
			{
				equal = false;
			}
			if ( Object1.BankTrnsDate != null && Object2.BankTrnsDate != null )
			{
				if (Object1.BankTrnsDate != Object2.BankTrnsDate)
					equal = false;
			}
			else if (Object1.BankTrnsDate == null ^ Object2.BankTrnsDate == null )
			{
				equal = false;
			}
			if ( Object1.FeeCodeBankId != null && Object2.FeeCodeBankId != null )
			{
				if (Object1.FeeCodeBankId != Object2.FeeCodeBankId)
					equal = false;
			}
			else if (Object1.FeeCodeBankId == null ^ Object2.FeeCodeBankId == null )
			{
				equal = false;
			}
			if ( Object1.AccntNum != null && Object2.AccntNum != null )
			{
				if (Object1.AccntNum != Object2.AccntNum)
					equal = false;
			}
			else if (Object1.AccntNum == null ^ Object2.AccntNum == null )
			{
				equal = false;
			}
			if ( Object1.CheqNum != null && Object2.CheqNum != null )
			{
				if (Object1.CheqNum != Object2.CheqNum)
					equal = false;
			}
			else if (Object1.CheqNum == null ^ Object2.CheqNum == null )
			{
				equal = false;
			}
			if ( Object1.CardNum != null && Object2.CardNum != null )
			{
				if (Object1.CardNum != Object2.CardNum)
					equal = false;
			}
			else if (Object1.CardNum == null ^ Object2.CardNum == null )
			{
				equal = false;
			}
			if ( Object1.OnlineFlg != null && Object2.OnlineFlg != null )
			{
				if (Object1.OnlineFlg != Object2.OnlineFlg)
					equal = false;
			}
			else if (Object1.OnlineFlg == null ^ Object2.OnlineFlg == null )
			{
				equal = false;
			}
			if ( Object1.OnlinePayInd != null && Object2.OnlinePayInd != null )
			{
				if (Object1.OnlinePayInd != Object2.OnlinePayInd)
					equal = false;
			}
			else if (Object1.OnlinePayInd == null ^ Object2.OnlinePayInd == null )
			{
				equal = false;
			}
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((FeeStudVoucherPayMthodBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static FeeStudVoucherPayMthodComparer GetComparer()
        {
            return new FeeStudVoucherPayMthodComparer();
        }
        */

        // Comparer delegates back to FeeStudVoucherPayMthod
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(FeeStudVoucherPayMthod rhs, FeeStudVoucherPayMthodColumn which)
        {
            switch (which)
            {
            	
            	
            	case FeeStudVoucherPayMthodColumn.FeeStudVoucherPayMthodId:
            		return this.FeeStudVoucherPayMthodId.CompareTo(rhs.FeeStudVoucherPayMthodId);
            		
            		                 
            	
            	
            	case FeeStudVoucherPayMthodColumn.FeeStudVoucherId:
            		return this.FeeStudVoucherId.CompareTo(rhs.FeeStudVoucherId);
            		
            		                 
            	
            	
            	case FeeStudVoucherPayMthodColumn.GsCodePayMethodId:
            		return this.GsCodePayMethodId.CompareTo(rhs.GsCodePayMethodId);
            		
            		                 
            	
            	
            	case FeeStudVoucherPayMthodColumn.GsCodePayMthdTypeId:
            		return this.GsCodePayMthdTypeId.Value.CompareTo(rhs.GsCodePayMthdTypeId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherPayMthodColumn.PayAmnt:
            		return this.PayAmnt.Value.CompareTo(rhs.PayAmnt.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherPayMthodColumn.BankTrnsDate:
            		return this.BankTrnsDate.Value.CompareTo(rhs.BankTrnsDate.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherPayMthodColumn.FeeCodeBankId:
            		return this.FeeCodeBankId.Value.CompareTo(rhs.FeeCodeBankId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherPayMthodColumn.AccntNum:
            		return this.AccntNum.CompareTo(rhs.AccntNum);
            		
            		                 
            	
            	
            	case FeeStudVoucherPayMthodColumn.CheqNum:
            		return this.CheqNum.CompareTo(rhs.CheqNum);
            		
            		                 
            	
            	
            	case FeeStudVoucherPayMthodColumn.CardNum:
            		return this.CardNum.CompareTo(rhs.CardNum);
            		
            		                 
            	
            	
            	case FeeStudVoucherPayMthodColumn.OnlineFlg:
            		return this.OnlineFlg.Value.CompareTo(rhs.OnlineFlg.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherPayMthodColumn.OnlinePayInd:
            		return this.OnlinePayInd.CompareTo(rhs.OnlinePayInd);
            		
            		                 
            	
            	
            	case FeeStudVoucherPayMthodColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherPayMthodColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<FeeStudVoucherPayMthodKey> Members
		
		// member variable for the EntityId property
		private FeeStudVoucherPayMthodKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual FeeStudVoucherPayMthodKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new FeeStudVoucherPayMthodKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("FeeStudVoucherPayMthod")
					.Append("|").Append( this.FeeStudVoucherPayMthodId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{15}{14}- FeeStudVoucherPayMthodId: {0}{14}- FeeStudVoucherId: {1}{14}- GsCodePayMethodId: {2}{14}- GsCodePayMthdTypeId: {3}{14}- PayAmnt: {4}{14}- BankTrnsDate: {5}{14}- FeeCodeBankId: {6}{14}- AccntNum: {7}{14}- CheqNum: {8}{14}- CardNum: {9}{14}- OnlineFlg: {10}{14}- OnlinePayInd: {11}{14}- SeUserId: {12}{14}- LastDate: {13}{14}{16}", 
				this.FeeStudVoucherPayMthodId,
				this.FeeStudVoucherId,
				this.GsCodePayMethodId,
				(this.GsCodePayMthdTypeId == null) ? string.Empty : this.GsCodePayMthdTypeId.ToString(),
				(this.PayAmnt == null) ? string.Empty : this.PayAmnt.ToString(),
				(this.BankTrnsDate == null) ? string.Empty : this.BankTrnsDate.ToString(),
				(this.FeeCodeBankId == null) ? string.Empty : this.FeeCodeBankId.ToString(),
				(this.AccntNum == null) ? string.Empty : this.AccntNum.ToString(),
				(this.CheqNum == null) ? string.Empty : this.CheqNum.ToString(),
				(this.CardNum == null) ? string.Empty : this.CardNum.ToString(),
				(this.OnlineFlg == null) ? string.Empty : this.OnlineFlg.ToString(),
				(this.OnlinePayInd == null) ? string.Empty : this.OnlinePayInd.ToString(),
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'FEE_STUD_VOUCHER_PAY_MTHOD' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class FeeStudVoucherPayMthodEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// FEE_STUD_VOUCHER_PAY_MTHOD_ID : دفع باكتر من طريقةKU( 53=MULTI_PAYMENT)
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "FEE_STUD_VOUCHER_PAY_MTHOD"</remarks>
		public System.Decimal FeeStudVoucherPayMthodId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalFeeStudVoucherPayMthodId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// FEE_STUD_VOUCHER_ID : اذن دفع/ايصال سداد
		/// </summary>
		public System.Decimal		  FeeStudVoucherId = 0.0m;
		
		/// <summary>
		/// GS_CODE_PAY_METHOD_ID : 
		/// </summary>
		public System.Decimal		  GsCodePayMethodId = 0.0m;
		
		/// <summary>
		/// GS_CODE_PAY_MTHD_TYPE_ID : 
		/// </summary>
		public System.Int32?		  GsCodePayMthdTypeId = null;
		
		/// <summary>
		/// PAY_AMNT : المدفوع
		/// </summary>
		public System.Decimal?		  PayAmnt = null;
		
		/// <summary>
		/// BANK_TRNS_DATE : في حالة وسيلة الدفع "تحويل بنكي" يتم ادخال حقل تاريخ التحويل  --
		/// 		/// فى حالة دفع بالشيك او تاريخ  الشيك
		/// </summary>
		public System.DateTime?		  BankTrnsDate = null;
		
		/// <summary>
		/// FEE_CODE_BANK_ID : في حالة وسيلة الدفع "شيك" يتم ادخال البنك ورقم الحساب ورقم الشيك وتاريخ استحقاق الشيك
		/// </summary>
		public System.Decimal?		  FeeCodeBankId = null;
		
		/// <summary>
		/// ACCNT_NUM : رقم حساب البنك  فى حالة ايداع&&في حالة السداد من نوع "الشيك"  يجب اظهار البنوك للاختيار منها وبعد اختيار البنك يقوم النظام باظهار رقم الحساب الخاص بالبنك
		/// </summary>
		public System.String		  AccntNum = null;
		
		/// <summary>
		/// CHEQ_NUM : رقم الشيك فى حالة دفع بالشيك
		/// </summary>
		public System.String		  CheqNum = null;
		
		/// <summary>
		/// CARD_NUM : في حالة السداد من نوع "فيزا" يجب ادخال
		/// 		///  "رقم الفيزا" اجباري الادخال
		/// </summary>
		public System.String		  CardNum = null;
		
		/// <summary>
		/// ONLINE_FLG : 
		/// </summary>
		public System.Boolean?		  OnlineFlg = null;
		
		/// <summary>
		/// ONLINE_PAY_IND : 
		/// </summary>
		public System.String		  OnlinePayInd = null;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private FeeCodeBanks _feeCodeBankIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeCodeBanks"/>.
		/// </summary>
		/// <value>The source FeeCodeBanks for FeeCodeBankId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeCodeBanks FeeCodeBankIdSource
      	{
            get { return this._feeCodeBankIdSource; }
            set { this._feeCodeBankIdSource = value; }
      	}
		private FeeStudVoucher _feeStudVoucherIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeStudVoucher"/>.
		/// </summary>
		/// <value>The source FeeStudVoucher for FeeStudVoucherId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeStudVoucher FeeStudVoucherIdSource
      	{
            get { return this._feeStudVoucherIdSource; }
            set { this._feeStudVoucherIdSource = value; }
      	}
		private GsCodePayMethod _gsCodePayMethodIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodePayMethod"/>.
		/// </summary>
		/// <value>The source GsCodePayMethod for GsCodePayMethodId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodePayMethod GsCodePayMethodIdSource
      	{
            get { return this._gsCodePayMethodIdSource; }
            set { this._gsCodePayMethodIdSource = value; }
      	}
		private GsCodePayMthdType _gsCodePayMthdTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodePayMthdType"/>.
		/// </summary>
		/// <value>The source GsCodePayMthdType for GsCodePayMthdTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodePayMthdType GsCodePayMthdTypeIdSource
      	{
            get { return this._gsCodePayMthdTypeIdSource; }
            set { this._gsCodePayMthdTypeIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			FeeStudVoucherPayMthodEntityData _tmp = new FeeStudVoucherPayMthodEntityData();
						
			_tmp.FeeStudVoucherPayMthodId = this.FeeStudVoucherPayMthodId;
			_tmp.OriginalFeeStudVoucherPayMthodId = this.OriginalFeeStudVoucherPayMthodId;
			
			_tmp.FeeStudVoucherId = this.FeeStudVoucherId;
			_tmp.GsCodePayMethodId = this.GsCodePayMethodId;
			_tmp.GsCodePayMthdTypeId = this.GsCodePayMthdTypeId;
			_tmp.PayAmnt = this.PayAmnt;
			_tmp.BankTrnsDate = this.BankTrnsDate;
			_tmp.FeeCodeBankId = this.FeeCodeBankId;
			_tmp.AccntNum = this.AccntNum;
			_tmp.CheqNum = this.CheqNum;
			_tmp.CardNum = this.CardNum;
			_tmp.OnlineFlg = this.OnlineFlg;
			_tmp.OnlinePayInd = this.OnlinePayInd;
			_tmp.SeUserId = this.SeUserId;
			_tmp.LastDate = this.LastDate;
			
			#region Source Parent Composite Entities
			if (this.FeeCodeBankIdSource != null)
				_tmp.FeeCodeBankIdSource = MakeCopyOf(this.FeeCodeBankIdSource) as FeeCodeBanks;
			if (this.FeeStudVoucherIdSource != null)
				_tmp.FeeStudVoucherIdSource = MakeCopyOf(this.FeeStudVoucherIdSource) as FeeStudVoucher;
			if (this.GsCodePayMethodIdSource != null)
				_tmp.GsCodePayMethodIdSource = MakeCopyOf(this.GsCodePayMethodIdSource) as GsCodePayMethod;
			if (this.GsCodePayMthdTypeIdSource != null)
				_tmp.GsCodePayMthdTypeIdSource = MakeCopyOf(this.GsCodePayMthdTypeIdSource) as GsCodePayMthdType;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			FeeStudVoucherPayMthodEntityData _tmp = new FeeStudVoucherPayMthodEntityData();
						
			_tmp.FeeStudVoucherPayMthodId = this.FeeStudVoucherPayMthodId;
			_tmp.OriginalFeeStudVoucherPayMthodId = this.OriginalFeeStudVoucherPayMthodId;
			
			_tmp.FeeStudVoucherId = this.FeeStudVoucherId;
			_tmp.GsCodePayMethodId = this.GsCodePayMethodId;
			_tmp.GsCodePayMthdTypeId = this.GsCodePayMthdTypeId;
			_tmp.PayAmnt = this.PayAmnt;
			_tmp.BankTrnsDate = this.BankTrnsDate;
			_tmp.FeeCodeBankId = this.FeeCodeBankId;
			_tmp.AccntNum = this.AccntNum;
			_tmp.CheqNum = this.CheqNum;
			_tmp.CardNum = this.CardNum;
			_tmp.OnlineFlg = this.OnlineFlg;
			_tmp.OnlinePayInd = this.OnlinePayInd;
			_tmp.SeUserId = this.SeUserId;
			_tmp.LastDate = this.LastDate;
			
			#region Source Parent Composite Entities
			if (this.FeeCodeBankIdSource != null && existingCopies.Contains(this.FeeCodeBankIdSource))
				_tmp.FeeCodeBankIdSource = existingCopies[this.FeeCodeBankIdSource] as FeeCodeBanks;
			else
				_tmp.FeeCodeBankIdSource = MakeCopyOf(this.FeeCodeBankIdSource, existingCopies) as FeeCodeBanks;
			if (this.FeeStudVoucherIdSource != null && existingCopies.Contains(this.FeeStudVoucherIdSource))
				_tmp.FeeStudVoucherIdSource = existingCopies[this.FeeStudVoucherIdSource] as FeeStudVoucher;
			else
				_tmp.FeeStudVoucherIdSource = MakeCopyOf(this.FeeStudVoucherIdSource, existingCopies) as FeeStudVoucher;
			if (this.GsCodePayMethodIdSource != null && existingCopies.Contains(this.GsCodePayMethodIdSource))
				_tmp.GsCodePayMethodIdSource = existingCopies[this.GsCodePayMethodIdSource] as GsCodePayMethod;
			else
				_tmp.GsCodePayMethodIdSource = MakeCopyOf(this.GsCodePayMethodIdSource, existingCopies) as GsCodePayMethod;
			if (this.GsCodePayMthdTypeIdSource != null && existingCopies.Contains(this.GsCodePayMthdTypeIdSource))
				_tmp.GsCodePayMthdTypeIdSource = existingCopies[this.GsCodePayMthdTypeIdSource] as GsCodePayMthdType;
			else
				_tmp.GsCodePayMthdTypeIdSource = MakeCopyOf(this.GsCodePayMthdTypeIdSource, existingCopies) as GsCodePayMthdType;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeStudVoucherPayMthodColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(FeeStudVoucherPayMthodColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeStudVoucherPayMthodColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(FeeStudVoucherPayMthodColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeStudVoucherPayMthodColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(FeeStudVoucherPayMthodColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				FeeStudVoucherPayMthodEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new FeeStudVoucherPayMthodEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeStudVoucherPayMthodColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(FeeStudVoucherPayMthodColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				FeeStudVoucherPayMthodEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new FeeStudVoucherPayMthodEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region FeeStudVoucherPayMthodEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="FeeStudVoucherPayMthod"/> object.
	/// </remarks>
	public class FeeStudVoucherPayMthodEventArgs : System.EventArgs
	{
		private FeeStudVoucherPayMthodColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the FeeStudVoucherPayMthodEventArgs class.
		///</summary>
		public FeeStudVoucherPayMthodEventArgs(FeeStudVoucherPayMthodColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the FeeStudVoucherPayMthodEventArgs class.
		///</summary>
		public FeeStudVoucherPayMthodEventArgs(FeeStudVoucherPayMthodColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The FeeStudVoucherPayMthodColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="FeeStudVoucherPayMthodColumn" />
		public FeeStudVoucherPayMthodColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all FeeStudVoucherPayMthod related events.
	///</summary>
	public delegate void FeeStudVoucherPayMthodEventHandler(object sender, FeeStudVoucherPayMthodEventArgs e);
	
	#region FeeStudVoucherPayMthodComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class FeeStudVoucherPayMthodComparer : System.Collections.Generic.IComparer<FeeStudVoucherPayMthod>
	{
		FeeStudVoucherPayMthodColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:FeeStudVoucherPayMthodComparer"/> class.
        /// </summary>
		public FeeStudVoucherPayMthodComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:FeeStudVoucherPayMthodComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public FeeStudVoucherPayMthodComparer(FeeStudVoucherPayMthodColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="FeeStudVoucherPayMthod"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="FeeStudVoucherPayMthod"/> to compare.</param>
        /// <param name="b">The second <c>FeeStudVoucherPayMthod</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(FeeStudVoucherPayMthod a, FeeStudVoucherPayMthod b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(FeeStudVoucherPayMthod entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(FeeStudVoucherPayMthod a, FeeStudVoucherPayMthod b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public FeeStudVoucherPayMthodColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region FeeStudVoucherPayMthodKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="FeeStudVoucherPayMthod"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class FeeStudVoucherPayMthodKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the FeeStudVoucherPayMthodKey class.
		/// </summary>
		public FeeStudVoucherPayMthodKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the FeeStudVoucherPayMthodKey class.
		/// </summary>
		public FeeStudVoucherPayMthodKey(FeeStudVoucherPayMthodBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.FeeStudVoucherPayMthodId = entity.FeeStudVoucherPayMthodId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the FeeStudVoucherPayMthodKey class.
		/// </summary>
		public FeeStudVoucherPayMthodKey(System.Decimal _feeStudVoucherPayMthodId)
		{
			#region Init Properties

			this.FeeStudVoucherPayMthodId = _feeStudVoucherPayMthodId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private FeeStudVoucherPayMthodBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public FeeStudVoucherPayMthodBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the FeeStudVoucherPayMthodId property
		private System.Decimal _feeStudVoucherPayMthodId;
		
		/// <summary>
		/// Gets or sets the FeeStudVoucherPayMthodId property.
		/// </summary>
		public System.Decimal FeeStudVoucherPayMthodId
		{
			get { return _feeStudVoucherPayMthodId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.FeeStudVoucherPayMthodId = value;
				
				_feeStudVoucherPayMthodId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				FeeStudVoucherPayMthodId = ( values["FeeStudVoucherPayMthodId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["FeeStudVoucherPayMthodId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("FeeStudVoucherPayMthodId", FeeStudVoucherPayMthodId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("FeeStudVoucherPayMthodId: {0}{1}",
								FeeStudVoucherPayMthodId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region FeeStudVoucherPayMthodColumn Enum
	
	/// <summary>
	/// Enumerate the FeeStudVoucherPayMthod columns.
	/// </summary>
	[Serializable]
	public enum FeeStudVoucherPayMthodColumn : int
	{
		/// <summary>
		/// FeeStudVoucherPayMthodId : دفع باكتر من طريقةKU( 53=MULTI_PAYMENT)
		/// </summary>
		[EnumTextValue("FEE_STUD_VOUCHER_PAY_MTHOD_ID")]
		[ColumnEnum("FEE_STUD_VOUCHER_PAY_MTHOD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		FeeStudVoucherPayMthodId = 1,
		/// <summary>
		/// FeeStudVoucherId : اذن دفع/ايصال سداد
		/// </summary>
		[EnumTextValue("FEE_STUD_VOUCHER_ID")]
		[ColumnEnum("FEE_STUD_VOUCHER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		FeeStudVoucherId = 2,
		/// <summary>
		/// GsCodePayMethodId : 
		/// </summary>
		[EnumTextValue("GS_CODE_PAY_METHOD_ID")]
		[ColumnEnum("GS_CODE_PAY_METHOD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		GsCodePayMethodId = 3,
		/// <summary>
		/// GsCodePayMthdTypeId : 
		/// </summary>
		[EnumTextValue("GS_CODE_PAY_MTHD_TYPE_ID")]
		[ColumnEnum("GS_CODE_PAY_MTHD_TYPE_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		GsCodePayMthdTypeId = 4,
		/// <summary>
		/// PayAmnt : المدفوع
		/// </summary>
		[EnumTextValue("PAY_AMNT")]
		[ColumnEnum("PAY_AMNT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PayAmnt = 5,
		/// <summary>
		/// BankTrnsDate : في حالة وسيلة الدفع "تحويل بنكي" يتم ادخال حقل تاريخ التحويل  --
		/// 		/// فى حالة دفع بالشيك او تاريخ  الشيك
		/// </summary>
		[EnumTextValue("BANK_TRNS_DATE")]
		[ColumnEnum("BANK_TRNS_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		BankTrnsDate = 6,
		/// <summary>
		/// FeeCodeBankId : في حالة وسيلة الدفع "شيك" يتم ادخال البنك ورقم الحساب ورقم الشيك وتاريخ استحقاق الشيك
		/// </summary>
		[EnumTextValue("FEE_CODE_BANK_ID")]
		[ColumnEnum("FEE_CODE_BANK_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FeeCodeBankId = 7,
		/// <summary>
		/// AccntNum : رقم حساب البنك  فى حالة ايداع&&في حالة السداد من نوع "الشيك"  يجب اظهار البنوك للاختيار منها وبعد اختيار البنك يقوم النظام باظهار رقم الحساب الخاص بالبنك
		/// </summary>
		[EnumTextValue("ACCNT_NUM")]
		[ColumnEnum("ACCNT_NUM", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		AccntNum = 8,
		/// <summary>
		/// CheqNum : رقم الشيك فى حالة دفع بالشيك
		/// </summary>
		[EnumTextValue("CHEQ_NUM")]
		[ColumnEnum("CHEQ_NUM", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		CheqNum = 9,
		/// <summary>
		/// CardNum : في حالة السداد من نوع "فيزا" يجب ادخال
		/// 		///  "رقم الفيزا" اجباري الادخال
		/// </summary>
		[EnumTextValue("CARD_NUM")]
		[ColumnEnum("CARD_NUM", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		CardNum = 10,
		/// <summary>
		/// OnlineFlg : 
		/// </summary>
		[EnumTextValue("ONLINE_FLG")]
		[ColumnEnum("ONLINE_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		OnlineFlg = 11,
		/// <summary>
		/// OnlinePayInd : 
		/// </summary>
		[EnumTextValue("ONLINE_PAY_IND")]
		[ColumnEnum("ONLINE_PAY_IND", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		OnlinePayInd = 12,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 13,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 14
	}//End enum

	#endregion FeeStudVoucherPayMthodColumn Enum

} // end namespace
