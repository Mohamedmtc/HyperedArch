
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file EdStudMilitaryInfo.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ED_STUD_MILITARY_INFO' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class EdStudMilitaryInfoBase : EntityBase, IEdStudMilitaryInfo, IEntityId<EdStudMilitaryInfoKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private EdStudMilitaryInfoEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private EdStudMilitaryInfoEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private EdStudMilitaryInfoEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<EdStudMilitaryInfo> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdStudMilitaryInfoEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdStudMilitaryInfoEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="EdStudMilitaryInfoBase"/> instance.
		///</summary>
		public EdStudMilitaryInfoBase()
		{
			this.entityData = new EdStudMilitaryInfoEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="EdStudMilitaryInfoBase"/> instance.
		///</summary>
		///<param name="_edStudMilitaryInfoId">بيانات التجنيد</param>
		///<param name="_edStudId"></param>
		///<param name="_militaryCardNumber"></param>
		///<param name="_gsMilitaryRegionId"></param>
		///<param name="_gsMilitaryOfficeId"></param>
		///<param name="_infoNotes"></param>
		///<param name="_recruitmentDate"></param>
		///<param name="_unitCode"></param>
		///<param name="_releaseDate"></param>
		///<param name="_statementNumber"></param>
		///<param name="_reserveEndDate">XXXتاريخ انتهاء فترة الاحتياط</param>
		///<param name="_admAppRegHistoryId">XXXX???  confirm delete</param>
		public EdStudMilitaryInfoBase(System.Decimal _edStudMilitaryInfoId, System.Decimal? _edStudId, 
			System.String _militaryCardNumber, System.Decimal? _gsMilitaryRegionId, System.Decimal? _gsMilitaryOfficeId, 
			System.String _infoNotes, System.DateTime? _recruitmentDate, System.String _unitCode, 
			System.DateTime? _releaseDate, System.String _statementNumber, System.DateTime? _reserveEndDate, 
			System.Decimal? _admAppRegHistoryId)
		{
			this.entityData = new EdStudMilitaryInfoEntityData();
			this.backupData = null;

			this.EdStudMilitaryInfoId = _edStudMilitaryInfoId;
			this.EdStudId = _edStudId;
			this.MilitaryCardNumber = _militaryCardNumber;
			this.GsMilitaryRegionId = _gsMilitaryRegionId;
			this.GsMilitaryOfficeId = _gsMilitaryOfficeId;
			this.InfoNotes = _infoNotes;
			this.RecruitmentDate = _recruitmentDate;
			this.UnitCode = _unitCode;
			this.ReleaseDate = _releaseDate;
			this.StatementNumber = _statementNumber;
			this.ReserveEndDate = _reserveEndDate;
			this.AdmAppRegHistoryId = _admAppRegHistoryId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="EdStudMilitaryInfo"/> instance.
		///</summary>
		///<param name="_edStudMilitaryInfoId">بيانات التجنيد</param>
		///<param name="_edStudId"></param>
		///<param name="_militaryCardNumber"></param>
		///<param name="_gsMilitaryRegionId"></param>
		///<param name="_gsMilitaryOfficeId"></param>
		///<param name="_infoNotes"></param>
		///<param name="_recruitmentDate"></param>
		///<param name="_unitCode"></param>
		///<param name="_releaseDate"></param>
		///<param name="_statementNumber"></param>
		///<param name="_reserveEndDate">XXXتاريخ انتهاء فترة الاحتياط</param>
		///<param name="_admAppRegHistoryId">XXXX???  confirm delete</param>
		public static EdStudMilitaryInfo CreateEdStudMilitaryInfo(System.Decimal _edStudMilitaryInfoId, System.Decimal? _edStudId, 
			System.String _militaryCardNumber, System.Decimal? _gsMilitaryRegionId, System.Decimal? _gsMilitaryOfficeId, 
			System.String _infoNotes, System.DateTime? _recruitmentDate, System.String _unitCode, 
			System.DateTime? _releaseDate, System.String _statementNumber, System.DateTime? _reserveEndDate, 
			System.Decimal? _admAppRegHistoryId)
		{
			EdStudMilitaryInfo newEdStudMilitaryInfo = new EdStudMilitaryInfo();
			newEdStudMilitaryInfo.EdStudMilitaryInfoId = _edStudMilitaryInfoId;
			newEdStudMilitaryInfo.EdStudId = _edStudId;
			newEdStudMilitaryInfo.MilitaryCardNumber = _militaryCardNumber;
			newEdStudMilitaryInfo.GsMilitaryRegionId = _gsMilitaryRegionId;
			newEdStudMilitaryInfo.GsMilitaryOfficeId = _gsMilitaryOfficeId;
			newEdStudMilitaryInfo.InfoNotes = _infoNotes;
			newEdStudMilitaryInfo.RecruitmentDate = _recruitmentDate;
			newEdStudMilitaryInfo.UnitCode = _unitCode;
			newEdStudMilitaryInfo.ReleaseDate = _releaseDate;
			newEdStudMilitaryInfo.StatementNumber = _statementNumber;
			newEdStudMilitaryInfo.ReserveEndDate = _reserveEndDate;
			newEdStudMilitaryInfo.AdmAppRegHistoryId = _admAppRegHistoryId;
			return newEdStudMilitaryInfo;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the EdStudMilitaryInfoId property. 
		///		بيانات التجنيد
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"بيانات التجنيد"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal EdStudMilitaryInfoId
		{
			get
			{
				return this.entityData.EdStudMilitaryInfoId; 
			}
			
			set
			{
				if (this.entityData.EdStudMilitaryInfoId == value)
					return;
					
				OnColumnChanging(EdStudMilitaryInfoColumn.EdStudMilitaryInfoId, this.entityData.EdStudMilitaryInfoId);
				this.entityData.EdStudMilitaryInfoId = value;
				this.EntityId.EdStudMilitaryInfoId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudMilitaryInfoColumn.EdStudMilitaryInfoId, this.entityData.EdStudMilitaryInfoId);
				OnPropertyChanged("EdStudMilitaryInfoId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ED_STUD_MILITARY_INFO_ID property.
		///		بيانات التجنيد
		/// </summary>
		/// <remarks>This is the original value of the ED_STUD_MILITARY_INFO_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalEdStudMilitaryInfoId
		{
			get { return this.entityData.OriginalEdStudMilitaryInfoId; }
			set { this.entityData.OriginalEdStudMilitaryInfoId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudId
		{
			get
			{
				return this.entityData.EdStudId; 
			}
			
			set
			{
				if (this.entityData.EdStudId == value)
					return;
					
				OnColumnChanging(EdStudMilitaryInfoColumn.EdStudId, this.entityData.EdStudId);
				this.entityData.EdStudId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudMilitaryInfoColumn.EdStudId, this.entityData.EdStudId);
				OnPropertyChanged("EdStudId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MilitaryCardNumber property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String MilitaryCardNumber
		{
			get
			{
				return this.entityData.MilitaryCardNumber; 
			}
			
			set
			{
				if (this.entityData.MilitaryCardNumber == value)
					return;
					
				OnColumnChanging(EdStudMilitaryInfoColumn.MilitaryCardNumber, this.entityData.MilitaryCardNumber);
				this.entityData.MilitaryCardNumber = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudMilitaryInfoColumn.MilitaryCardNumber, this.entityData.MilitaryCardNumber);
				OnPropertyChanged("MilitaryCardNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsMilitaryRegionId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsMilitaryRegionIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsMilitaryRegionId
		{
			get
			{
				return this.entityData.GsMilitaryRegionId; 
			}
			
			set
			{
				if (this.entityData.GsMilitaryRegionId == value)
					return;
					
				OnColumnChanging(EdStudMilitaryInfoColumn.GsMilitaryRegionId, this.entityData.GsMilitaryRegionId);
				this.entityData.GsMilitaryRegionId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudMilitaryInfoColumn.GsMilitaryRegionId, this.entityData.GsMilitaryRegionId);
				OnPropertyChanged("GsMilitaryRegionId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsMilitaryOfficeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsMilitaryOfficeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsMilitaryOfficeId
		{
			get
			{
				return this.entityData.GsMilitaryOfficeId; 
			}
			
			set
			{
				if (this.entityData.GsMilitaryOfficeId == value)
					return;
					
				OnColumnChanging(EdStudMilitaryInfoColumn.GsMilitaryOfficeId, this.entityData.GsMilitaryOfficeId);
				this.entityData.GsMilitaryOfficeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudMilitaryInfoColumn.GsMilitaryOfficeId, this.entityData.GsMilitaryOfficeId);
				OnPropertyChanged("GsMilitaryOfficeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the InfoNotes property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 400)]
		public virtual System.String InfoNotes
		{
			get
			{
				return this.entityData.InfoNotes; 
			}
			
			set
			{
				if (this.entityData.InfoNotes == value)
					return;
					
				OnColumnChanging(EdStudMilitaryInfoColumn.InfoNotes, this.entityData.InfoNotes);
				this.entityData.InfoNotes = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudMilitaryInfoColumn.InfoNotes, this.entityData.InfoNotes);
				OnPropertyChanged("InfoNotes");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RecruitmentDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsRecruitmentDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? RecruitmentDate
		{
			get
			{
				return this.entityData.RecruitmentDate; 
			}
			
			set
			{
				if (this.entityData.RecruitmentDate == value)
					return;
					
				OnColumnChanging(EdStudMilitaryInfoColumn.RecruitmentDate, this.entityData.RecruitmentDate);
				this.entityData.RecruitmentDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudMilitaryInfoColumn.RecruitmentDate, this.entityData.RecruitmentDate);
				OnPropertyChanged("RecruitmentDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the UnitCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String UnitCode
		{
			get
			{
				return this.entityData.UnitCode; 
			}
			
			set
			{
				if (this.entityData.UnitCode == value)
					return;
					
				OnColumnChanging(EdStudMilitaryInfoColumn.UnitCode, this.entityData.UnitCode);
				this.entityData.UnitCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudMilitaryInfoColumn.UnitCode, this.entityData.UnitCode);
				OnPropertyChanged("UnitCode");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ReleaseDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsReleaseDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? ReleaseDate
		{
			get
			{
				return this.entityData.ReleaseDate; 
			}
			
			set
			{
				if (this.entityData.ReleaseDate == value)
					return;
					
				OnColumnChanging(EdStudMilitaryInfoColumn.ReleaseDate, this.entityData.ReleaseDate);
				this.entityData.ReleaseDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudMilitaryInfoColumn.ReleaseDate, this.entityData.ReleaseDate);
				OnPropertyChanged("ReleaseDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StatementNumber property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String StatementNumber
		{
			get
			{
				return this.entityData.StatementNumber; 
			}
			
			set
			{
				if (this.entityData.StatementNumber == value)
					return;
					
				OnColumnChanging(EdStudMilitaryInfoColumn.StatementNumber, this.entityData.StatementNumber);
				this.entityData.StatementNumber = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudMilitaryInfoColumn.StatementNumber, this.entityData.StatementNumber);
				OnPropertyChanged("StatementNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ReserveEndDate property. 
		///		XXXتاريخ انتهاء فترة الاحتياط
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsReserveEndDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXXتاريخ انتهاء فترة الاحتياط"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? ReserveEndDate
		{
			get
			{
				return this.entityData.ReserveEndDate; 
			}
			
			set
			{
				if (this.entityData.ReserveEndDate == value)
					return;
					
				OnColumnChanging(EdStudMilitaryInfoColumn.ReserveEndDate, this.entityData.ReserveEndDate);
				this.entityData.ReserveEndDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudMilitaryInfoColumn.ReserveEndDate, this.entityData.ReserveEndDate);
				OnPropertyChanged("ReserveEndDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmAppRegHistoryId property. 
		///		XXXX???  confirm delete
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmAppRegHistoryIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXXX???  confirm delete"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmAppRegHistoryId
		{
			get
			{
				return this.entityData.AdmAppRegHistoryId; 
			}
			
			set
			{
				if (this.entityData.AdmAppRegHistoryId == value)
					return;
					
				OnColumnChanging(EdStudMilitaryInfoColumn.AdmAppRegHistoryId, this.entityData.AdmAppRegHistoryId);
				this.entityData.AdmAppRegHistoryId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudMilitaryInfoColumn.AdmAppRegHistoryId, this.entityData.AdmAppRegHistoryId);
				OnPropertyChanged("AdmAppRegHistoryId");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="EdStud"/>.
		/// </summary>
		/// <value>The source EdStud for EdStudId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStud EdStudIdSource
      	{
            get { return entityData.EdStudIdSource; }
            set { entityData.EdStudIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmAppRegHistory"/>.
		/// </summary>
		/// <value>The source AdmAppRegHistory for AdmAppRegHistoryId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmAppRegHistory AdmAppRegHistoryIdSource
      	{
            get { return entityData.AdmAppRegHistoryIdSource; }
            set { entityData.AdmAppRegHistoryIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsMilitaryOffice"/>.
		/// </summary>
		/// <value>The source GsMilitaryOffice for GsMilitaryOfficeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsMilitaryOffice GsMilitaryOfficeIdSource
      	{
            get { return entityData.GsMilitaryOfficeIdSource; }
            set { entityData.GsMilitaryOfficeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsMilitaryRegion"/>.
		/// </summary>
		/// <value>The source GsMilitaryRegion for GsMilitaryRegionId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsMilitaryRegion GsMilitaryRegionIdSource
      	{
            get { return entityData.GsMilitaryRegionIdSource; }
            set { entityData.GsMilitaryRegionIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MilitaryCardNumber", "Military Card Number", 30));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("InfoNotes", "Info Notes", 400));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("UnitCode", "Unit Code", 30));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StatementNumber", "Statement Number", 30));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ED_STUD_MILITARY_INFO"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ED_STUD_MILITARY_INFO_ID", "ED_STUD_ID", "MILITARY_CARD_NUMBER", "GS_MILITARY_REGION_ID", "GS_MILITARY_OFFICE_ID", "INFO_NOTES", "RECRUITMENT_DATE", "UNIT_CODE", "RELEASE_DATE", "STATEMENT_NUMBER", "RESERVE_END_DATE", "ADM_APP_REG_HISTORY_ID"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as EdStudMilitaryInfoEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (EdStudMilitaryInfo) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<EdStudMilitaryInfo>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as EdStudMilitaryInfo);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed EdStudMilitaryInfo Entity 
		///</summary>
		protected virtual EdStudMilitaryInfo Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			EdStudMilitaryInfo copy = new EdStudMilitaryInfo();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.EdStudMilitaryInfoId = this.EdStudMilitaryInfoId;
					copy.OriginalEdStudMilitaryInfoId = this.OriginalEdStudMilitaryInfoId;
				copy.EdStudId = this.EdStudId;
				copy.MilitaryCardNumber = this.MilitaryCardNumber;
				copy.GsMilitaryRegionId = this.GsMilitaryRegionId;
				copy.GsMilitaryOfficeId = this.GsMilitaryOfficeId;
				copy.InfoNotes = this.InfoNotes;
				copy.RecruitmentDate = this.RecruitmentDate;
				copy.UnitCode = this.UnitCode;
				copy.ReleaseDate = this.ReleaseDate;
				copy.StatementNumber = this.StatementNumber;
				copy.ReserveEndDate = this.ReserveEndDate;
				copy.AdmAppRegHistoryId = this.AdmAppRegHistoryId;
			
			if (this.EdStudIdSource != null && existingCopies.Contains(this.EdStudIdSource))
				copy.EdStudIdSource = existingCopies[this.EdStudIdSource] as EdStud;
			else
				copy.EdStudIdSource = MakeCopyOf(this.EdStudIdSource, existingCopies) as EdStud;
			if (this.AdmAppRegHistoryIdSource != null && existingCopies.Contains(this.AdmAppRegHistoryIdSource))
				copy.AdmAppRegHistoryIdSource = existingCopies[this.AdmAppRegHistoryIdSource] as AdmAppRegHistory;
			else
				copy.AdmAppRegHistoryIdSource = MakeCopyOf(this.AdmAppRegHistoryIdSource, existingCopies) as AdmAppRegHistory;
			if (this.GsMilitaryOfficeIdSource != null && existingCopies.Contains(this.GsMilitaryOfficeIdSource))
				copy.GsMilitaryOfficeIdSource = existingCopies[this.GsMilitaryOfficeIdSource] as GsMilitaryOffice;
			else
				copy.GsMilitaryOfficeIdSource = MakeCopyOf(this.GsMilitaryOfficeIdSource, existingCopies) as GsMilitaryOffice;
			if (this.GsMilitaryRegionIdSource != null && existingCopies.Contains(this.GsMilitaryRegionIdSource))
				copy.GsMilitaryRegionIdSource = existingCopies[this.GsMilitaryRegionIdSource] as GsMilitaryRegion;
			else
				copy.GsMilitaryRegionIdSource = MakeCopyOf(this.GsMilitaryRegionIdSource, existingCopies) as GsMilitaryRegion;
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed EdStudMilitaryInfo Entity 
		///</summary>
		public virtual EdStudMilitaryInfo Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed EdStudMilitaryInfo Entity which is a deep copy of the current entity.
		///</summary>
		public virtual EdStudMilitaryInfo DeepCopy()
		{
			return EntityHelper.Clone<EdStudMilitaryInfo>(this as EdStudMilitaryInfo);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as EdStudMilitaryInfoEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new EdStudMilitaryInfoEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as EdStudMilitaryInfoEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(EdStudMilitaryInfoColumn column)
		{
			switch(column)
			{
					case EdStudMilitaryInfoColumn.EdStudMilitaryInfoId:
					return entityData.EdStudMilitaryInfoId != _originalData.EdStudMilitaryInfoId;
					case EdStudMilitaryInfoColumn.EdStudId:
					return entityData.EdStudId != _originalData.EdStudId;
					case EdStudMilitaryInfoColumn.MilitaryCardNumber:
					return entityData.MilitaryCardNumber != _originalData.MilitaryCardNumber;
					case EdStudMilitaryInfoColumn.GsMilitaryRegionId:
					return entityData.GsMilitaryRegionId != _originalData.GsMilitaryRegionId;
					case EdStudMilitaryInfoColumn.GsMilitaryOfficeId:
					return entityData.GsMilitaryOfficeId != _originalData.GsMilitaryOfficeId;
					case EdStudMilitaryInfoColumn.InfoNotes:
					return entityData.InfoNotes != _originalData.InfoNotes;
					case EdStudMilitaryInfoColumn.RecruitmentDate:
					return entityData.RecruitmentDate != _originalData.RecruitmentDate;
					case EdStudMilitaryInfoColumn.UnitCode:
					return entityData.UnitCode != _originalData.UnitCode;
					case EdStudMilitaryInfoColumn.ReleaseDate:
					return entityData.ReleaseDate != _originalData.ReleaseDate;
					case EdStudMilitaryInfoColumn.StatementNumber:
					return entityData.StatementNumber != _originalData.StatementNumber;
					case EdStudMilitaryInfoColumn.ReserveEndDate:
					return entityData.ReserveEndDate != _originalData.ReserveEndDate;
					case EdStudMilitaryInfoColumn.AdmAppRegHistoryId:
					return entityData.AdmAppRegHistoryId != _originalData.AdmAppRegHistoryId;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< EdStudMilitaryInfoColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.EdStudMilitaryInfoId != _originalData.EdStudMilitaryInfoId;
			result = result || entityData.EdStudId != _originalData.EdStudId;
			result = result || entityData.MilitaryCardNumber != _originalData.MilitaryCardNumber;
			result = result || entityData.GsMilitaryRegionId != _originalData.GsMilitaryRegionId;
			result = result || entityData.GsMilitaryOfficeId != _originalData.GsMilitaryOfficeId;
			result = result || entityData.InfoNotes != _originalData.InfoNotes;
			result = result || entityData.RecruitmentDate != _originalData.RecruitmentDate;
			result = result || entityData.UnitCode != _originalData.UnitCode;
			result = result || entityData.ReleaseDate != _originalData.ReleaseDate;
			result = result || entityData.StatementNumber != _originalData.StatementNumber;
			result = result || entityData.ReserveEndDate != _originalData.ReserveEndDate;
			result = result || entityData.AdmAppRegHistoryId != _originalData.AdmAppRegHistoryId;
			return result;
		}	
		
		///<summary>
		///  Returns a EdStudMilitaryInfo Entity with the original data.
		///</summary>
		public EdStudMilitaryInfo GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateEdStudMilitaryInfo(
				_originalData.EdStudMilitaryInfoId,
				_originalData.EdStudId,
				_originalData.MilitaryCardNumber,
				_originalData.GsMilitaryRegionId,
				_originalData.GsMilitaryOfficeId,
				_originalData.InfoNotes,
				_originalData.RecruitmentDate,
				_originalData.UnitCode,
				_originalData.ReleaseDate,
				_originalData.StatementNumber,
				_originalData.ReserveEndDate,
				_originalData.AdmAppRegHistoryId
				);
				
			return (EdStudMilitaryInfo)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="EdStudMilitaryInfoBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is EdStudMilitaryInfoBase)
				return ValueEquals(this, (EdStudMilitaryInfoBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="EdStudMilitaryInfoBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.EdStudMilitaryInfoId.GetHashCode() ^ 
					((this.EdStudId == null) ? string.Empty : this.EdStudId.ToString()).GetHashCode() ^ 
					((this.MilitaryCardNumber == null) ? string.Empty : this.MilitaryCardNumber.ToString()).GetHashCode() ^ 
					((this.GsMilitaryRegionId == null) ? string.Empty : this.GsMilitaryRegionId.ToString()).GetHashCode() ^ 
					((this.GsMilitaryOfficeId == null) ? string.Empty : this.GsMilitaryOfficeId.ToString()).GetHashCode() ^ 
					((this.InfoNotes == null) ? string.Empty : this.InfoNotes.ToString()).GetHashCode() ^ 
					((this.RecruitmentDate == null) ? string.Empty : this.RecruitmentDate.ToString()).GetHashCode() ^ 
					((this.UnitCode == null) ? string.Empty : this.UnitCode.ToString()).GetHashCode() ^ 
					((this.ReleaseDate == null) ? string.Empty : this.ReleaseDate.ToString()).GetHashCode() ^ 
					((this.StatementNumber == null) ? string.Empty : this.StatementNumber.ToString()).GetHashCode() ^ 
					((this.ReserveEndDate == null) ? string.Empty : this.ReserveEndDate.ToString()).GetHashCode() ^ 
					((this.AdmAppRegHistoryId == null) ? string.Empty : this.AdmAppRegHistoryId.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="EdStudMilitaryInfoBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(EdStudMilitaryInfoBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="EdStudMilitaryInfoBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="EdStudMilitaryInfoBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="EdStudMilitaryInfoBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(EdStudMilitaryInfoBase Object1, EdStudMilitaryInfoBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.EdStudMilitaryInfoId != Object2.EdStudMilitaryInfoId)
				equal = false;
			if ( Object1.EdStudId != null && Object2.EdStudId != null )
			{
				if (Object1.EdStudId != Object2.EdStudId)
					equal = false;
			}
			else if (Object1.EdStudId == null ^ Object2.EdStudId == null )
			{
				equal = false;
			}
			if ( Object1.MilitaryCardNumber != null && Object2.MilitaryCardNumber != null )
			{
				if (Object1.MilitaryCardNumber != Object2.MilitaryCardNumber)
					equal = false;
			}
			else if (Object1.MilitaryCardNumber == null ^ Object2.MilitaryCardNumber == null )
			{
				equal = false;
			}
			if ( Object1.GsMilitaryRegionId != null && Object2.GsMilitaryRegionId != null )
			{
				if (Object1.GsMilitaryRegionId != Object2.GsMilitaryRegionId)
					equal = false;
			}
			else if (Object1.GsMilitaryRegionId == null ^ Object2.GsMilitaryRegionId == null )
			{
				equal = false;
			}
			if ( Object1.GsMilitaryOfficeId != null && Object2.GsMilitaryOfficeId != null )
			{
				if (Object1.GsMilitaryOfficeId != Object2.GsMilitaryOfficeId)
					equal = false;
			}
			else if (Object1.GsMilitaryOfficeId == null ^ Object2.GsMilitaryOfficeId == null )
			{
				equal = false;
			}
			if ( Object1.InfoNotes != null && Object2.InfoNotes != null )
			{
				if (Object1.InfoNotes != Object2.InfoNotes)
					equal = false;
			}
			else if (Object1.InfoNotes == null ^ Object2.InfoNotes == null )
			{
				equal = false;
			}
			if ( Object1.RecruitmentDate != null && Object2.RecruitmentDate != null )
			{
				if (Object1.RecruitmentDate != Object2.RecruitmentDate)
					equal = false;
			}
			else if (Object1.RecruitmentDate == null ^ Object2.RecruitmentDate == null )
			{
				equal = false;
			}
			if ( Object1.UnitCode != null && Object2.UnitCode != null )
			{
				if (Object1.UnitCode != Object2.UnitCode)
					equal = false;
			}
			else if (Object1.UnitCode == null ^ Object2.UnitCode == null )
			{
				equal = false;
			}
			if ( Object1.ReleaseDate != null && Object2.ReleaseDate != null )
			{
				if (Object1.ReleaseDate != Object2.ReleaseDate)
					equal = false;
			}
			else if (Object1.ReleaseDate == null ^ Object2.ReleaseDate == null )
			{
				equal = false;
			}
			if ( Object1.StatementNumber != null && Object2.StatementNumber != null )
			{
				if (Object1.StatementNumber != Object2.StatementNumber)
					equal = false;
			}
			else if (Object1.StatementNumber == null ^ Object2.StatementNumber == null )
			{
				equal = false;
			}
			if ( Object1.ReserveEndDate != null && Object2.ReserveEndDate != null )
			{
				if (Object1.ReserveEndDate != Object2.ReserveEndDate)
					equal = false;
			}
			else if (Object1.ReserveEndDate == null ^ Object2.ReserveEndDate == null )
			{
				equal = false;
			}
			if ( Object1.AdmAppRegHistoryId != null && Object2.AdmAppRegHistoryId != null )
			{
				if (Object1.AdmAppRegHistoryId != Object2.AdmAppRegHistoryId)
					equal = false;
			}
			else if (Object1.AdmAppRegHistoryId == null ^ Object2.AdmAppRegHistoryId == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((EdStudMilitaryInfoBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static EdStudMilitaryInfoComparer GetComparer()
        {
            return new EdStudMilitaryInfoComparer();
        }
        */

        // Comparer delegates back to EdStudMilitaryInfo
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(EdStudMilitaryInfo rhs, EdStudMilitaryInfoColumn which)
        {
            switch (which)
            {
            	
            	
            	case EdStudMilitaryInfoColumn.EdStudMilitaryInfoId:
            		return this.EdStudMilitaryInfoId.CompareTo(rhs.EdStudMilitaryInfoId);
            		
            		                 
            	
            	
            	case EdStudMilitaryInfoColumn.EdStudId:
            		return this.EdStudId.Value.CompareTo(rhs.EdStudId.Value);
            		
            		                 
            	
            	
            	case EdStudMilitaryInfoColumn.MilitaryCardNumber:
            		return this.MilitaryCardNumber.CompareTo(rhs.MilitaryCardNumber);
            		
            		                 
            	
            	
            	case EdStudMilitaryInfoColumn.GsMilitaryRegionId:
            		return this.GsMilitaryRegionId.Value.CompareTo(rhs.GsMilitaryRegionId.Value);
            		
            		                 
            	
            	
            	case EdStudMilitaryInfoColumn.GsMilitaryOfficeId:
            		return this.GsMilitaryOfficeId.Value.CompareTo(rhs.GsMilitaryOfficeId.Value);
            		
            		                 
            	
            	
            	case EdStudMilitaryInfoColumn.InfoNotes:
            		return this.InfoNotes.CompareTo(rhs.InfoNotes);
            		
            		                 
            	
            	
            	case EdStudMilitaryInfoColumn.RecruitmentDate:
            		return this.RecruitmentDate.Value.CompareTo(rhs.RecruitmentDate.Value);
            		
            		                 
            	
            	
            	case EdStudMilitaryInfoColumn.UnitCode:
            		return this.UnitCode.CompareTo(rhs.UnitCode);
            		
            		                 
            	
            	
            	case EdStudMilitaryInfoColumn.ReleaseDate:
            		return this.ReleaseDate.Value.CompareTo(rhs.ReleaseDate.Value);
            		
            		                 
            	
            	
            	case EdStudMilitaryInfoColumn.StatementNumber:
            		return this.StatementNumber.CompareTo(rhs.StatementNumber);
            		
            		                 
            	
            	
            	case EdStudMilitaryInfoColumn.ReserveEndDate:
            		return this.ReserveEndDate.Value.CompareTo(rhs.ReserveEndDate.Value);
            		
            		                 
            	
            	
            	case EdStudMilitaryInfoColumn.AdmAppRegHistoryId:
            		return this.AdmAppRegHistoryId.Value.CompareTo(rhs.AdmAppRegHistoryId.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<EdStudMilitaryInfoKey> Members
		
		// member variable for the EntityId property
		private EdStudMilitaryInfoKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual EdStudMilitaryInfoKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new EdStudMilitaryInfoKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("EdStudMilitaryInfo")
					.Append("|").Append( this.EdStudMilitaryInfoId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{13}{12}- EdStudMilitaryInfoId: {0}{12}- EdStudId: {1}{12}- MilitaryCardNumber: {2}{12}- GsMilitaryRegionId: {3}{12}- GsMilitaryOfficeId: {4}{12}- InfoNotes: {5}{12}- RecruitmentDate: {6}{12}- UnitCode: {7}{12}- ReleaseDate: {8}{12}- StatementNumber: {9}{12}- ReserveEndDate: {10}{12}- AdmAppRegHistoryId: {11}{12}{14}", 
				this.EdStudMilitaryInfoId,
				(this.EdStudId == null) ? string.Empty : this.EdStudId.ToString(),
				(this.MilitaryCardNumber == null) ? string.Empty : this.MilitaryCardNumber.ToString(),
				(this.GsMilitaryRegionId == null) ? string.Empty : this.GsMilitaryRegionId.ToString(),
				(this.GsMilitaryOfficeId == null) ? string.Empty : this.GsMilitaryOfficeId.ToString(),
				(this.InfoNotes == null) ? string.Empty : this.InfoNotes.ToString(),
				(this.RecruitmentDate == null) ? string.Empty : this.RecruitmentDate.ToString(),
				(this.UnitCode == null) ? string.Empty : this.UnitCode.ToString(),
				(this.ReleaseDate == null) ? string.Empty : this.ReleaseDate.ToString(),
				(this.StatementNumber == null) ? string.Empty : this.StatementNumber.ToString(),
				(this.ReserveEndDate == null) ? string.Empty : this.ReserveEndDate.ToString(),
				(this.AdmAppRegHistoryId == null) ? string.Empty : this.AdmAppRegHistoryId.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ED_STUD_MILITARY_INFO' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class EdStudMilitaryInfoEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ED_STUD_MILITARY_INFO_ID : بيانات التجنيد
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ED_STUD_MILITARY_INFO"</remarks>
		public System.Decimal EdStudMilitaryInfoId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalEdStudMilitaryInfoId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// ED_STUD_ID : 
		/// </summary>
		public System.Decimal?		  EdStudId = null;
		
		/// <summary>
		/// MILITARY_CARD_NUMBER : 
		/// </summary>
		public System.String		  MilitaryCardNumber = null;
		
		/// <summary>
		/// GS_MILITARY_REGION_ID : 
		/// </summary>
		public System.Decimal?		  GsMilitaryRegionId = null;
		
		/// <summary>
		/// GS_MILITARY_OFFICE_ID : 
		/// </summary>
		public System.Decimal?		  GsMilitaryOfficeId = null;
		
		/// <summary>
		/// INFO_NOTES : 
		/// </summary>
		public System.String		  InfoNotes = null;
		
		/// <summary>
		/// RECRUITMENT_DATE : 
		/// </summary>
		public System.DateTime?		  RecruitmentDate = null;
		
		/// <summary>
		/// UNIT_CODE : 
		/// </summary>
		public System.String		  UnitCode = null;
		
		/// <summary>
		/// RELEASE_DATE : 
		/// </summary>
		public System.DateTime?		  ReleaseDate = null;
		
		/// <summary>
		/// STATEMENT_NUMBER : 
		/// </summary>
		public System.String		  StatementNumber = null;
		
		/// <summary>
		/// RESERVE_END_DATE : XXXتاريخ انتهاء فترة الاحتياط
		/// </summary>
		public System.DateTime?		  ReserveEndDate = null;
		
		/// <summary>
		/// ADM_APP_REG_HISTORY_ID : XXXX???  confirm delete
		/// </summary>
		public System.Decimal?		  AdmAppRegHistoryId = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private EdStud _edStudIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStud"/>.
		/// </summary>
		/// <value>The source EdStud for EdStudId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStud EdStudIdSource
      	{
            get { return this._edStudIdSource; }
            set { this._edStudIdSource = value; }
      	}
		private AdmAppRegHistory _admAppRegHistoryIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmAppRegHistory"/>.
		/// </summary>
		/// <value>The source AdmAppRegHistory for AdmAppRegHistoryId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmAppRegHistory AdmAppRegHistoryIdSource
      	{
            get { return this._admAppRegHistoryIdSource; }
            set { this._admAppRegHistoryIdSource = value; }
      	}
		private GsMilitaryOffice _gsMilitaryOfficeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsMilitaryOffice"/>.
		/// </summary>
		/// <value>The source GsMilitaryOffice for GsMilitaryOfficeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsMilitaryOffice GsMilitaryOfficeIdSource
      	{
            get { return this._gsMilitaryOfficeIdSource; }
            set { this._gsMilitaryOfficeIdSource = value; }
      	}
		private GsMilitaryRegion _gsMilitaryRegionIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsMilitaryRegion"/>.
		/// </summary>
		/// <value>The source GsMilitaryRegion for GsMilitaryRegionId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsMilitaryRegion GsMilitaryRegionIdSource
      	{
            get { return this._gsMilitaryRegionIdSource; }
            set { this._gsMilitaryRegionIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			EdStudMilitaryInfoEntityData _tmp = new EdStudMilitaryInfoEntityData();
						
			_tmp.EdStudMilitaryInfoId = this.EdStudMilitaryInfoId;
			_tmp.OriginalEdStudMilitaryInfoId = this.OriginalEdStudMilitaryInfoId;
			
			_tmp.EdStudId = this.EdStudId;
			_tmp.MilitaryCardNumber = this.MilitaryCardNumber;
			_tmp.GsMilitaryRegionId = this.GsMilitaryRegionId;
			_tmp.GsMilitaryOfficeId = this.GsMilitaryOfficeId;
			_tmp.InfoNotes = this.InfoNotes;
			_tmp.RecruitmentDate = this.RecruitmentDate;
			_tmp.UnitCode = this.UnitCode;
			_tmp.ReleaseDate = this.ReleaseDate;
			_tmp.StatementNumber = this.StatementNumber;
			_tmp.ReserveEndDate = this.ReserveEndDate;
			_tmp.AdmAppRegHistoryId = this.AdmAppRegHistoryId;
			
			#region Source Parent Composite Entities
			if (this.EdStudIdSource != null)
				_tmp.EdStudIdSource = MakeCopyOf(this.EdStudIdSource) as EdStud;
			if (this.AdmAppRegHistoryIdSource != null)
				_tmp.AdmAppRegHistoryIdSource = MakeCopyOf(this.AdmAppRegHistoryIdSource) as AdmAppRegHistory;
			if (this.GsMilitaryOfficeIdSource != null)
				_tmp.GsMilitaryOfficeIdSource = MakeCopyOf(this.GsMilitaryOfficeIdSource) as GsMilitaryOffice;
			if (this.GsMilitaryRegionIdSource != null)
				_tmp.GsMilitaryRegionIdSource = MakeCopyOf(this.GsMilitaryRegionIdSource) as GsMilitaryRegion;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			EdStudMilitaryInfoEntityData _tmp = new EdStudMilitaryInfoEntityData();
						
			_tmp.EdStudMilitaryInfoId = this.EdStudMilitaryInfoId;
			_tmp.OriginalEdStudMilitaryInfoId = this.OriginalEdStudMilitaryInfoId;
			
			_tmp.EdStudId = this.EdStudId;
			_tmp.MilitaryCardNumber = this.MilitaryCardNumber;
			_tmp.GsMilitaryRegionId = this.GsMilitaryRegionId;
			_tmp.GsMilitaryOfficeId = this.GsMilitaryOfficeId;
			_tmp.InfoNotes = this.InfoNotes;
			_tmp.RecruitmentDate = this.RecruitmentDate;
			_tmp.UnitCode = this.UnitCode;
			_tmp.ReleaseDate = this.ReleaseDate;
			_tmp.StatementNumber = this.StatementNumber;
			_tmp.ReserveEndDate = this.ReserveEndDate;
			_tmp.AdmAppRegHistoryId = this.AdmAppRegHistoryId;
			
			#region Source Parent Composite Entities
			if (this.EdStudIdSource != null && existingCopies.Contains(this.EdStudIdSource))
				_tmp.EdStudIdSource = existingCopies[this.EdStudIdSource] as EdStud;
			else
				_tmp.EdStudIdSource = MakeCopyOf(this.EdStudIdSource, existingCopies) as EdStud;
			if (this.AdmAppRegHistoryIdSource != null && existingCopies.Contains(this.AdmAppRegHistoryIdSource))
				_tmp.AdmAppRegHistoryIdSource = existingCopies[this.AdmAppRegHistoryIdSource] as AdmAppRegHistory;
			else
				_tmp.AdmAppRegHistoryIdSource = MakeCopyOf(this.AdmAppRegHistoryIdSource, existingCopies) as AdmAppRegHistory;
			if (this.GsMilitaryOfficeIdSource != null && existingCopies.Contains(this.GsMilitaryOfficeIdSource))
				_tmp.GsMilitaryOfficeIdSource = existingCopies[this.GsMilitaryOfficeIdSource] as GsMilitaryOffice;
			else
				_tmp.GsMilitaryOfficeIdSource = MakeCopyOf(this.GsMilitaryOfficeIdSource, existingCopies) as GsMilitaryOffice;
			if (this.GsMilitaryRegionIdSource != null && existingCopies.Contains(this.GsMilitaryRegionIdSource))
				_tmp.GsMilitaryRegionIdSource = existingCopies[this.GsMilitaryRegionIdSource] as GsMilitaryRegion;
			else
				_tmp.GsMilitaryRegionIdSource = MakeCopyOf(this.GsMilitaryRegionIdSource, existingCopies) as GsMilitaryRegion;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudMilitaryInfoColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(EdStudMilitaryInfoColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudMilitaryInfoColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(EdStudMilitaryInfoColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudMilitaryInfoColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(EdStudMilitaryInfoColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				EdStudMilitaryInfoEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new EdStudMilitaryInfoEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudMilitaryInfoColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(EdStudMilitaryInfoColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				EdStudMilitaryInfoEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new EdStudMilitaryInfoEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region EdStudMilitaryInfoEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="EdStudMilitaryInfo"/> object.
	/// </remarks>
	public class EdStudMilitaryInfoEventArgs : System.EventArgs
	{
		private EdStudMilitaryInfoColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the EdStudMilitaryInfoEventArgs class.
		///</summary>
		public EdStudMilitaryInfoEventArgs(EdStudMilitaryInfoColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the EdStudMilitaryInfoEventArgs class.
		///</summary>
		public EdStudMilitaryInfoEventArgs(EdStudMilitaryInfoColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The EdStudMilitaryInfoColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="EdStudMilitaryInfoColumn" />
		public EdStudMilitaryInfoColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all EdStudMilitaryInfo related events.
	///</summary>
	public delegate void EdStudMilitaryInfoEventHandler(object sender, EdStudMilitaryInfoEventArgs e);
	
	#region EdStudMilitaryInfoComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class EdStudMilitaryInfoComparer : System.Collections.Generic.IComparer<EdStudMilitaryInfo>
	{
		EdStudMilitaryInfoColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:EdStudMilitaryInfoComparer"/> class.
        /// </summary>
		public EdStudMilitaryInfoComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:EdStudMilitaryInfoComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public EdStudMilitaryInfoComparer(EdStudMilitaryInfoColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="EdStudMilitaryInfo"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="EdStudMilitaryInfo"/> to compare.</param>
        /// <param name="b">The second <c>EdStudMilitaryInfo</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(EdStudMilitaryInfo a, EdStudMilitaryInfo b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(EdStudMilitaryInfo entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(EdStudMilitaryInfo a, EdStudMilitaryInfo b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public EdStudMilitaryInfoColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region EdStudMilitaryInfoKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="EdStudMilitaryInfo"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class EdStudMilitaryInfoKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the EdStudMilitaryInfoKey class.
		/// </summary>
		public EdStudMilitaryInfoKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the EdStudMilitaryInfoKey class.
		/// </summary>
		public EdStudMilitaryInfoKey(EdStudMilitaryInfoBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.EdStudMilitaryInfoId = entity.EdStudMilitaryInfoId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the EdStudMilitaryInfoKey class.
		/// </summary>
		public EdStudMilitaryInfoKey(System.Decimal _edStudMilitaryInfoId)
		{
			#region Init Properties

			this.EdStudMilitaryInfoId = _edStudMilitaryInfoId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private EdStudMilitaryInfoBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public EdStudMilitaryInfoBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the EdStudMilitaryInfoId property
		private System.Decimal _edStudMilitaryInfoId;
		
		/// <summary>
		/// Gets or sets the EdStudMilitaryInfoId property.
		/// </summary>
		public System.Decimal EdStudMilitaryInfoId
		{
			get { return _edStudMilitaryInfoId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.EdStudMilitaryInfoId = value;
				
				_edStudMilitaryInfoId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				EdStudMilitaryInfoId = ( values["EdStudMilitaryInfoId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["EdStudMilitaryInfoId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("EdStudMilitaryInfoId", EdStudMilitaryInfoId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("EdStudMilitaryInfoId: {0}{1}",
								EdStudMilitaryInfoId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region EdStudMilitaryInfoColumn Enum
	
	/// <summary>
	/// Enumerate the EdStudMilitaryInfo columns.
	/// </summary>
	[Serializable]
	public enum EdStudMilitaryInfoColumn : int
	{
		/// <summary>
		/// EdStudMilitaryInfoId : بيانات التجنيد
		/// </summary>
		[EnumTextValue("ED_STUD_MILITARY_INFO_ID")]
		[ColumnEnum("ED_STUD_MILITARY_INFO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		EdStudMilitaryInfoId = 1,
		/// <summary>
		/// EdStudId : 
		/// </summary>
		[EnumTextValue("ED_STUD_ID")]
		[ColumnEnum("ED_STUD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudId = 2,
		/// <summary>
		/// MilitaryCardNumber : 
		/// </summary>
		[EnumTextValue("MILITARY_CARD_NUMBER")]
		[ColumnEnum("MILITARY_CARD_NUMBER", typeof(System.String), System.Data.DbType.String, false, false, true, 30)]
		MilitaryCardNumber = 3,
		/// <summary>
		/// GsMilitaryRegionId : 
		/// </summary>
		[EnumTextValue("GS_MILITARY_REGION_ID")]
		[ColumnEnum("GS_MILITARY_REGION_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsMilitaryRegionId = 4,
		/// <summary>
		/// GsMilitaryOfficeId : 
		/// </summary>
		[EnumTextValue("GS_MILITARY_OFFICE_ID")]
		[ColumnEnum("GS_MILITARY_OFFICE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsMilitaryOfficeId = 5,
		/// <summary>
		/// InfoNotes : 
		/// </summary>
		[EnumTextValue("INFO_NOTES")]
		[ColumnEnum("INFO_NOTES", typeof(System.String), System.Data.DbType.String, false, false, true, 400)]
		InfoNotes = 6,
		/// <summary>
		/// RecruitmentDate : 
		/// </summary>
		[EnumTextValue("RECRUITMENT_DATE")]
		[ColumnEnum("RECRUITMENT_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		RecruitmentDate = 7,
		/// <summary>
		/// UnitCode : 
		/// </summary>
		[EnumTextValue("UNIT_CODE")]
		[ColumnEnum("UNIT_CODE", typeof(System.String), System.Data.DbType.String, false, false, true, 30)]
		UnitCode = 8,
		/// <summary>
		/// ReleaseDate : 
		/// </summary>
		[EnumTextValue("RELEASE_DATE")]
		[ColumnEnum("RELEASE_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		ReleaseDate = 9,
		/// <summary>
		/// StatementNumber : 
		/// </summary>
		[EnumTextValue("STATEMENT_NUMBER")]
		[ColumnEnum("STATEMENT_NUMBER", typeof(System.String), System.Data.DbType.String, false, false, true, 30)]
		StatementNumber = 10,
		/// <summary>
		/// ReserveEndDate : XXXتاريخ انتهاء فترة الاحتياط
		/// </summary>
		[EnumTextValue("RESERVE_END_DATE")]
		[ColumnEnum("RESERVE_END_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		ReserveEndDate = 11,
		/// <summary>
		/// AdmAppRegHistoryId : XXXX???  confirm delete
		/// </summary>
		[EnumTextValue("ADM_APP_REG_HISTORY_ID")]
		[ColumnEnum("ADM_APP_REG_HISTORY_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmAppRegHistoryId = 12
	}//End enum

	#endregion EdStudMilitaryInfoColumn Enum

} // end namespace
