
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file GsCodeReqStatus.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'GS_CODE_REQ_STATUS' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class GsCodeReqStatusBase : EntityBase, IGsCodeReqStatus, IEntityId<GsCodeReqStatusKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private GsCodeReqStatusEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private GsCodeReqStatusEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private GsCodeReqStatusEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<GsCodeReqStatus> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event GsCodeReqStatusEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event GsCodeReqStatusEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="GsCodeReqStatusBase"/> instance.
		///</summary>
		public GsCodeReqStatusBase()
		{
			this.entityData = new GsCodeReqStatusEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="GsCodeReqStatusBase"/> instance.
		///</summary>
		///<param name="_gsCodeReqStatusId"></param>
		///<param name="_descrAr"></param>
		///<param name="_descrEn"></param>
		public GsCodeReqStatusBase(System.Decimal _gsCodeReqStatusId, System.String _descrAr, 
			System.String _descrEn)
		{
			this.entityData = new GsCodeReqStatusEntityData();
			this.backupData = null;

			this.GsCodeReqStatusId = _gsCodeReqStatusId;
			this.DescrAr = _descrAr;
			this.DescrEn = _descrEn;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="GsCodeReqStatus"/> instance.
		///</summary>
		///<param name="_gsCodeReqStatusId"></param>
		///<param name="_descrAr"></param>
		///<param name="_descrEn"></param>
		public static GsCodeReqStatus CreateGsCodeReqStatus(System.Decimal _gsCodeReqStatusId, System.String _descrAr, 
			System.String _descrEn)
		{
			GsCodeReqStatus newGsCodeReqStatus = new GsCodeReqStatus();
			newGsCodeReqStatus.GsCodeReqStatusId = _gsCodeReqStatusId;
			newGsCodeReqStatus.DescrAr = _descrAr;
			newGsCodeReqStatus.DescrEn = _descrEn;
			return newGsCodeReqStatus;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the GsCodeReqStatusId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal GsCodeReqStatusId
		{
			get
			{
				return this.entityData.GsCodeReqStatusId; 
			}
			
			set
			{
				if (this.entityData.GsCodeReqStatusId == value)
					return;
					
				OnColumnChanging(GsCodeReqStatusColumn.GsCodeReqStatusId, this.entityData.GsCodeReqStatusId);
				this.entityData.GsCodeReqStatusId = value;
				this.EntityId.GsCodeReqStatusId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsCodeReqStatusColumn.GsCodeReqStatusId, this.entityData.GsCodeReqStatusId);
				OnPropertyChanged("GsCodeReqStatusId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the GS_CODE_REQ_STATUS_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the GS_CODE_REQ_STATUS_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalGsCodeReqStatusId
		{
			get { return this.entityData.OriginalGsCodeReqStatusId; }
			set { this.entityData.OriginalGsCodeReqStatusId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the DescrAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 20)]
		public virtual System.String DescrAr
		{
			get
			{
				return this.entityData.DescrAr; 
			}
			
			set
			{
				if (this.entityData.DescrAr == value)
					return;
					
				OnColumnChanging(GsCodeReqStatusColumn.DescrAr, this.entityData.DescrAr);
				this.entityData.DescrAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsCodeReqStatusColumn.DescrAr, this.entityData.DescrAr);
				OnPropertyChanged("DescrAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DescrEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 20)]
		public virtual System.String DescrEn
		{
			get
			{
				return this.entityData.DescrEn; 
			}
			
			set
			{
				if (this.entityData.DescrEn == value)
					return;
					
				OnColumnChanging(GsCodeReqStatusColumn.DescrEn, this.entityData.DescrEn);
				this.entityData.DescrEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsCodeReqStatusColumn.DescrEn, this.entityData.DescrEn);
				OnPropertyChanged("DescrEn");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of EdStudExecuseReq objects
		///	which are related to this object through the relation FK_ED_STUD_EXECUSE_REQ_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudExecuseReq> EdStudExecuseReqCollection
		{
			get { return entityData.EdStudExecuseReqCollection; }
			set { entityData.EdStudExecuseReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppTransReq objects
		///	which are related to this object through the relation FK_ADM_APP_TRANSFER_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppTransReq> AdmAppTransReqCollection
		{
			get { return entityData.AdmAppTransReqCollection; }
			set { entityData.AdmAppTransReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeRefndStdReq objects
		///	which are related to this object through the relation FK_FEE_REFUND_STUD_REQ_MASTER_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeRefndStdReq> FeeRefndStdReqCollection
		{
			get { return entityData.FeeRefndStdReqCollection; }
			set { entityData.FeeRefndStdReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoOfferStudException objects
		///	which are related to this object through the relation FK_SPO_OFFER_STUD_EXCEPTION_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoOfferStudException> SpoOfferStudExceptionCollection
		{
			get { return entityData.SpoOfferStudExceptionCollection; }
			set { entityData.SpoOfferStudExceptionCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of RsrchStudPostponeReq objects
		///	which are related to this object through the relation FK_RSRCH_STUD_POSTPONE_REQ_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<RsrchStudPostponeReq> RsrchStudPostponeReqCollection
		{
			get { return entityData.RsrchStudPostponeReqCollection; }
			set { entityData.RsrchStudPostponeReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrns objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrns> EdStudIntTrnsCollection
		{
			get { return entityData.EdStudIntTrnsCollection; }
			set { entityData.EdStudIntTrnsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRplc objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_RPLC_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRplc> EdStudCourseRplcCollection
		{
			get { return entityData.EdStudCourseRplcCollection; }
			set { entityData.EdStudCourseRplcCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudTransFromReq objects
		///	which are related to this object through the relation FK_ED_STUD_TRANS_FROM_REQ_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudTransFromReq> EdStudTransFromReqCollection
		{
			get { return entityData.EdStudTransFromReqCollection; }
			set { entityData.EdStudTransFromReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudExcuse objects
		///	which are related to this object through the relation FK_ED_STUD_EXCUSE_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudExcuse> EdStudExcuseCollection
		{
			get { return entityData.EdStudExcuseCollection; }
			set { entityData.EdStudExcuseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudClrncReq objects
		///	which are related to this object through the relation FK_ED_STUD_CLRNC_REQ_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudClrncReq> EdStudClrncReqCollection
		{
			get { return entityData.EdStudClrncReqCollection; }
			set { entityData.EdStudClrncReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomStudPermtReq objects
		///	which are related to this object through the relation FK_ACCOM_STUD_PERMT_REQ_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomStudPermtReq> AccomStudPermtReqCollection
		{
			get { return entityData.AccomStudPermtReqCollection; }
			set { entityData.AccomStudPermtReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomStudLeaveReq objects
		///	which are related to this object through the relation FK_ACCOM_STUD_LEAVE_REQ_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomStudLeaveReq> AccomStudLeaveReqCollection
		{
			get { return entityData.AccomStudLeaveReqCollection; }
			set { entityData.AccomStudLeaveReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudExmptReq objects
		///	which are related to this object through the relation FK_ED_STUD_EXMPT_REQ_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudExmptReq> EdStudExmptReqCollection
		{
			get { return entityData.EdStudExmptReqCollection; }
			set { entityData.EdStudExmptReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of TrnsStudReq objects
		///	which are related to this object through the relation FK_TRNS_STUD_REQ_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<TrnsStudReq> TrnsStudReqCollection
		{
			get { return entityData.TrnsStudReqCollection; }
			set { entityData.TrnsStudReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomStudFeedReq objects
		///	which are related to this object through the relation FK_ACCOM_STUD_FEED_REQ_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomStudFeedReq> AccomStudFeedReqCollection
		{
			get { return entityData.AccomStudFeedReqCollection; }
			set { entityData.AccomStudFeedReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomStudReq objects
		///	which are related to this object through the relation FK_ACCOM_STUD_REQ_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomStudReq> AccomStudReqCollection
		{
			get { return entityData.AccomStudReqCollection; }
			set { entityData.AccomStudReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudInstallmentRequest objects
		///	which are related to this object through the relation FK_FEE_STUD_INSTALLMENT_REQUEST_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudInstallmentRequest> FeeStudInstallmentRequestCollection
		{
			get { return entityData.FeeStudInstallmentRequestCollection; }
			set { entityData.FeeStudInstallmentRequestCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomStudGuestReq objects
		///	which are related to this object through the relation FK_ACCOM_STUD_GUEST_REQ_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomStudGuestReq> AccomStudGuestReqCollection
		{
			get { return entityData.AccomStudGuestReqCollection; }
			set { entityData.AccomStudGuestReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudDisc objects
		///	which are related to this object through the relation FK_FEE_STUD_DISC_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudDisc> FeeStudDiscCollection
		{
			get { return entityData.FeeStudDiscCollection; }
			set { entityData.FeeStudDiscCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseChng objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_CHNG_GS_CODE_REQ_STATUS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseChng> EdStudCourseChngCollection
		{
			get { return entityData.EdStudCourseChngCollection; }
			set { entityData.EdStudCourseChngCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("DescrAr", "Descr Ar"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DescrAr", "Descr Ar", 20));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("DescrEn", "Descr En"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DescrEn", "Descr En", 20));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "GS_CODE_REQ_STATUS"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"GS_CODE_REQ_STATUS_ID", "DESCR_AR", "DESCR_EN"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as GsCodeReqStatusEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (GsCodeReqStatus) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<GsCodeReqStatus>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as GsCodeReqStatus);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed GsCodeReqStatus Entity 
		///</summary>
		protected virtual GsCodeReqStatus Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			GsCodeReqStatus copy = new GsCodeReqStatus();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.GsCodeReqStatusId = this.GsCodeReqStatusId;
					copy.OriginalGsCodeReqStatusId = this.OriginalGsCodeReqStatusId;
				copy.DescrAr = this.DescrAr;
				copy.DescrEn = this.DescrEn;
			
		
			//deep copy nested objects
			copy.EdStudExecuseReqCollection = (TList<EdStudExecuseReq>) MakeCopyOf(this.EdStudExecuseReqCollection, existingCopies); 
			copy.AdmAppTransReqCollection = (TList<AdmAppTransReq>) MakeCopyOf(this.AdmAppTransReqCollection, existingCopies); 
			copy.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection, existingCopies); 
			copy.SpoOfferStudExceptionCollection = (TList<SpoOfferStudException>) MakeCopyOf(this.SpoOfferStudExceptionCollection, existingCopies); 
			copy.RsrchStudPostponeReqCollection = (TList<RsrchStudPostponeReq>) MakeCopyOf(this.RsrchStudPostponeReqCollection, existingCopies); 
			copy.EdStudIntTrnsCollection = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollection, existingCopies); 
			copy.EdStudCourseRplcCollection = (TList<EdStudCourseRplc>) MakeCopyOf(this.EdStudCourseRplcCollection, existingCopies); 
			copy.EdStudTransFromReqCollection = (TList<EdStudTransFromReq>) MakeCopyOf(this.EdStudTransFromReqCollection, existingCopies); 
			copy.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection, existingCopies); 
			copy.EdStudClrncReqCollection = (TList<EdStudClrncReq>) MakeCopyOf(this.EdStudClrncReqCollection, existingCopies); 
			copy.AccomStudPermtReqCollection = (TList<AccomStudPermtReq>) MakeCopyOf(this.AccomStudPermtReqCollection, existingCopies); 
			copy.AccomStudLeaveReqCollection = (TList<AccomStudLeaveReq>) MakeCopyOf(this.AccomStudLeaveReqCollection, existingCopies); 
			copy.EdStudExmptReqCollection = (TList<EdStudExmptReq>) MakeCopyOf(this.EdStudExmptReqCollection, existingCopies); 
			copy.TrnsStudReqCollection = (TList<TrnsStudReq>) MakeCopyOf(this.TrnsStudReqCollection, existingCopies); 
			copy.AccomStudFeedReqCollection = (TList<AccomStudFeedReq>) MakeCopyOf(this.AccomStudFeedReqCollection, existingCopies); 
			copy.AccomStudReqCollection = (TList<AccomStudReq>) MakeCopyOf(this.AccomStudReqCollection, existingCopies); 
			copy.FeeStudInstallmentRequestCollection = (TList<FeeStudInstallmentRequest>) MakeCopyOf(this.FeeStudInstallmentRequestCollection, existingCopies); 
			copy.AccomStudGuestReqCollection = (TList<AccomStudGuestReq>) MakeCopyOf(this.AccomStudGuestReqCollection, existingCopies); 
			copy.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection, existingCopies); 
			copy.EdStudCourseChngCollection = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed GsCodeReqStatus Entity 
		///</summary>
		public virtual GsCodeReqStatus Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed GsCodeReqStatus Entity which is a deep copy of the current entity.
		///</summary>
		public virtual GsCodeReqStatus DeepCopy()
		{
			return EntityHelper.Clone<GsCodeReqStatus>(this as GsCodeReqStatus);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as GsCodeReqStatusEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new GsCodeReqStatusEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as GsCodeReqStatusEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(GsCodeReqStatusColumn column)
		{
			switch(column)
			{
					case GsCodeReqStatusColumn.GsCodeReqStatusId:
					return entityData.GsCodeReqStatusId != _originalData.GsCodeReqStatusId;
					case GsCodeReqStatusColumn.DescrAr:
					return entityData.DescrAr != _originalData.DescrAr;
					case GsCodeReqStatusColumn.DescrEn:
					return entityData.DescrEn != _originalData.DescrEn;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< GsCodeReqStatusColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.GsCodeReqStatusId != _originalData.GsCodeReqStatusId;
			result = result || entityData.DescrAr != _originalData.DescrAr;
			result = result || entityData.DescrEn != _originalData.DescrEn;
			return result;
		}	
		
		///<summary>
		///  Returns a GsCodeReqStatus Entity with the original data.
		///</summary>
		public GsCodeReqStatus GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateGsCodeReqStatus(
				_originalData.GsCodeReqStatusId,
				_originalData.DescrAr,
				_originalData.DescrEn
				);
				
			return (GsCodeReqStatus)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="GsCodeReqStatusBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is GsCodeReqStatusBase)
				return ValueEquals(this, (GsCodeReqStatusBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="GsCodeReqStatusBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.GsCodeReqStatusId.GetHashCode() ^ 
					this.DescrAr.GetHashCode() ^ 
					this.DescrEn.GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="GsCodeReqStatusBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(GsCodeReqStatusBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="GsCodeReqStatusBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="GsCodeReqStatusBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="GsCodeReqStatusBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(GsCodeReqStatusBase Object1, GsCodeReqStatusBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.GsCodeReqStatusId != Object2.GsCodeReqStatusId)
				equal = false;
			if (Object1.DescrAr != Object2.DescrAr)
				equal = false;
			if (Object1.DescrEn != Object2.DescrEn)
				equal = false;
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((GsCodeReqStatusBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static GsCodeReqStatusComparer GetComparer()
        {
            return new GsCodeReqStatusComparer();
        }
        */

        // Comparer delegates back to GsCodeReqStatus
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(GsCodeReqStatus rhs, GsCodeReqStatusColumn which)
        {
            switch (which)
            {
            	
            	
            	case GsCodeReqStatusColumn.GsCodeReqStatusId:
            		return this.GsCodeReqStatusId.CompareTo(rhs.GsCodeReqStatusId);
            		
            		                 
            	
            	
            	case GsCodeReqStatusColumn.DescrAr:
            		return this.DescrAr.CompareTo(rhs.DescrAr);
            		
            		                 
            	
            	
            	case GsCodeReqStatusColumn.DescrEn:
            		return this.DescrEn.CompareTo(rhs.DescrEn);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<GsCodeReqStatusKey> Members
		
		// member variable for the EntityId property
		private GsCodeReqStatusKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual GsCodeReqStatusKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new GsCodeReqStatusKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("GsCodeReqStatus")
					.Append("|").Append( this.GsCodeReqStatusId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{4}{3}- GsCodeReqStatusId: {0}{3}- DescrAr: {1}{3}- DescrEn: {2}{3}{5}", 
				this.GsCodeReqStatusId,
				this.DescrAr,
				this.DescrEn,
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'GS_CODE_REQ_STATUS' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class GsCodeReqStatusEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// GS_CODE_REQ_STATUS_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "GS_CODE_REQ_STATUS"</remarks>
		public System.Decimal GsCodeReqStatusId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalGsCodeReqStatusId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// DESCR_AR : 
		/// </summary>
		public System.String		  DescrAr = string.Empty;
		
		/// <summary>
		/// DESCR_EN : 
		/// </summary>
		public System.String		  DescrEn = string.Empty;
		#endregion
			
		#region Source Foreign Key Property
				
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region EdStudExecuseReqCollection
		
		private TList<EdStudExecuseReq> _edStudExecuseReqGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudExecuseReqGsCodeReqStatusId
		/// </summary>
		
		public TList<EdStudExecuseReq> EdStudExecuseReqCollection
		{
			get
			{
				if (_edStudExecuseReqGsCodeReqStatusId == null)
				{
				_edStudExecuseReqGsCodeReqStatusId = new TList<EdStudExecuseReq>();
				}
	
				return _edStudExecuseReqGsCodeReqStatusId;
			}
			set { _edStudExecuseReqGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region AdmAppTransReqCollection
		
		private TList<AdmAppTransReq> _admAppTransReqGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppTransReqGsCodeReqStatusId
		/// </summary>
		
		public TList<AdmAppTransReq> AdmAppTransReqCollection
		{
			get
			{
				if (_admAppTransReqGsCodeReqStatusId == null)
				{
				_admAppTransReqGsCodeReqStatusId = new TList<AdmAppTransReq>();
				}
	
				return _admAppTransReqGsCodeReqStatusId;
			}
			set { _admAppTransReqGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region FeeRefndStdReqCollection
		
		private TList<FeeRefndStdReq> _feeRefndStdReqGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeRefndStdReqGsCodeReqStatusId
		/// </summary>
		
		public TList<FeeRefndStdReq> FeeRefndStdReqCollection
		{
			get
			{
				if (_feeRefndStdReqGsCodeReqStatusId == null)
				{
				_feeRefndStdReqGsCodeReqStatusId = new TList<FeeRefndStdReq>();
				}
	
				return _feeRefndStdReqGsCodeReqStatusId;
			}
			set { _feeRefndStdReqGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region SpoOfferStudExceptionCollection
		
		private TList<SpoOfferStudException> _spoOfferStudExceptionGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoOfferStudExceptionGsCodeReqStatusId
		/// </summary>
		
		public TList<SpoOfferStudException> SpoOfferStudExceptionCollection
		{
			get
			{
				if (_spoOfferStudExceptionGsCodeReqStatusId == null)
				{
				_spoOfferStudExceptionGsCodeReqStatusId = new TList<SpoOfferStudException>();
				}
	
				return _spoOfferStudExceptionGsCodeReqStatusId;
			}
			set { _spoOfferStudExceptionGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region RsrchStudPostponeReqCollection
		
		private TList<RsrchStudPostponeReq> _rsrchStudPostponeReqGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _rsrchStudPostponeReqGsCodeReqStatusId
		/// </summary>
		
		public TList<RsrchStudPostponeReq> RsrchStudPostponeReqCollection
		{
			get
			{
				if (_rsrchStudPostponeReqGsCodeReqStatusId == null)
				{
				_rsrchStudPostponeReqGsCodeReqStatusId = new TList<RsrchStudPostponeReq>();
				}
	
				return _rsrchStudPostponeReqGsCodeReqStatusId;
			}
			set { _rsrchStudPostponeReqGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsCollection
		
		private TList<EdStudIntTrns> _edStudIntTrnsGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsGsCodeReqStatusId
		/// </summary>
		
		public TList<EdStudIntTrns> EdStudIntTrnsCollection
		{
			get
			{
				if (_edStudIntTrnsGsCodeReqStatusId == null)
				{
				_edStudIntTrnsGsCodeReqStatusId = new TList<EdStudIntTrns>();
				}
	
				return _edStudIntTrnsGsCodeReqStatusId;
			}
			set { _edStudIntTrnsGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region EdStudCourseRplcCollection
		
		private TList<EdStudCourseRplc> _edStudCourseRplcGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRplcGsCodeReqStatusId
		/// </summary>
		
		public TList<EdStudCourseRplc> EdStudCourseRplcCollection
		{
			get
			{
				if (_edStudCourseRplcGsCodeReqStatusId == null)
				{
				_edStudCourseRplcGsCodeReqStatusId = new TList<EdStudCourseRplc>();
				}
	
				return _edStudCourseRplcGsCodeReqStatusId;
			}
			set { _edStudCourseRplcGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region EdStudTransFromReqCollection
		
		private TList<EdStudTransFromReq> _edStudTransFromReqGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudTransFromReqGsCodeReqStatusId
		/// </summary>
		
		public TList<EdStudTransFromReq> EdStudTransFromReqCollection
		{
			get
			{
				if (_edStudTransFromReqGsCodeReqStatusId == null)
				{
				_edStudTransFromReqGsCodeReqStatusId = new TList<EdStudTransFromReq>();
				}
	
				return _edStudTransFromReqGsCodeReqStatusId;
			}
			set { _edStudTransFromReqGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region EdStudExcuseCollection
		
		private TList<EdStudExcuse> _edStudExcuseGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudExcuseGsCodeReqStatusId
		/// </summary>
		
		public TList<EdStudExcuse> EdStudExcuseCollection
		{
			get
			{
				if (_edStudExcuseGsCodeReqStatusId == null)
				{
				_edStudExcuseGsCodeReqStatusId = new TList<EdStudExcuse>();
				}
	
				return _edStudExcuseGsCodeReqStatusId;
			}
			set { _edStudExcuseGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region EdStudClrncReqCollection
		
		private TList<EdStudClrncReq> _edStudClrncReqGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudClrncReqGsCodeReqStatusId
		/// </summary>
		
		public TList<EdStudClrncReq> EdStudClrncReqCollection
		{
			get
			{
				if (_edStudClrncReqGsCodeReqStatusId == null)
				{
				_edStudClrncReqGsCodeReqStatusId = new TList<EdStudClrncReq>();
				}
	
				return _edStudClrncReqGsCodeReqStatusId;
			}
			set { _edStudClrncReqGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region AccomStudPermtReqCollection
		
		private TList<AccomStudPermtReq> _accomStudPermtReqGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomStudPermtReqGsCodeReqStatusId
		/// </summary>
		
		public TList<AccomStudPermtReq> AccomStudPermtReqCollection
		{
			get
			{
				if (_accomStudPermtReqGsCodeReqStatusId == null)
				{
				_accomStudPermtReqGsCodeReqStatusId = new TList<AccomStudPermtReq>();
				}
	
				return _accomStudPermtReqGsCodeReqStatusId;
			}
			set { _accomStudPermtReqGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region AccomStudLeaveReqCollection
		
		private TList<AccomStudLeaveReq> _accomStudLeaveReqGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomStudLeaveReqGsCodeReqStatusId
		/// </summary>
		
		public TList<AccomStudLeaveReq> AccomStudLeaveReqCollection
		{
			get
			{
				if (_accomStudLeaveReqGsCodeReqStatusId == null)
				{
				_accomStudLeaveReqGsCodeReqStatusId = new TList<AccomStudLeaveReq>();
				}
	
				return _accomStudLeaveReqGsCodeReqStatusId;
			}
			set { _accomStudLeaveReqGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region EdStudExmptReqCollection
		
		private TList<EdStudExmptReq> _edStudExmptReqGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudExmptReqGsCodeReqStatusId
		/// </summary>
		
		public TList<EdStudExmptReq> EdStudExmptReqCollection
		{
			get
			{
				if (_edStudExmptReqGsCodeReqStatusId == null)
				{
				_edStudExmptReqGsCodeReqStatusId = new TList<EdStudExmptReq>();
				}
	
				return _edStudExmptReqGsCodeReqStatusId;
			}
			set { _edStudExmptReqGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region TrnsStudReqCollection
		
		private TList<TrnsStudReq> _trnsStudReqGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _trnsStudReqGsCodeReqStatusId
		/// </summary>
		
		public TList<TrnsStudReq> TrnsStudReqCollection
		{
			get
			{
				if (_trnsStudReqGsCodeReqStatusId == null)
				{
				_trnsStudReqGsCodeReqStatusId = new TList<TrnsStudReq>();
				}
	
				return _trnsStudReqGsCodeReqStatusId;
			}
			set { _trnsStudReqGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region AccomStudFeedReqCollection
		
		private TList<AccomStudFeedReq> _accomStudFeedReqGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomStudFeedReqGsCodeReqStatusId
		/// </summary>
		
		public TList<AccomStudFeedReq> AccomStudFeedReqCollection
		{
			get
			{
				if (_accomStudFeedReqGsCodeReqStatusId == null)
				{
				_accomStudFeedReqGsCodeReqStatusId = new TList<AccomStudFeedReq>();
				}
	
				return _accomStudFeedReqGsCodeReqStatusId;
			}
			set { _accomStudFeedReqGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region AccomStudReqCollection
		
		private TList<AccomStudReq> _accomStudReqGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomStudReqGsCodeReqStatusId
		/// </summary>
		
		public TList<AccomStudReq> AccomStudReqCollection
		{
			get
			{
				if (_accomStudReqGsCodeReqStatusId == null)
				{
				_accomStudReqGsCodeReqStatusId = new TList<AccomStudReq>();
				}
	
				return _accomStudReqGsCodeReqStatusId;
			}
			set { _accomStudReqGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region FeeStudInstallmentRequestCollection
		
		private TList<FeeStudInstallmentRequest> _feeStudInstallmentRequestGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudInstallmentRequestGsCodeReqStatusId
		/// </summary>
		
		public TList<FeeStudInstallmentRequest> FeeStudInstallmentRequestCollection
		{
			get
			{
				if (_feeStudInstallmentRequestGsCodeReqStatusId == null)
				{
				_feeStudInstallmentRequestGsCodeReqStatusId = new TList<FeeStudInstallmentRequest>();
				}
	
				return _feeStudInstallmentRequestGsCodeReqStatusId;
			}
			set { _feeStudInstallmentRequestGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region AccomStudGuestReqCollection
		
		private TList<AccomStudGuestReq> _accomStudGuestReqGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomStudGuestReqGsCodeReqStatusId
		/// </summary>
		
		public TList<AccomStudGuestReq> AccomStudGuestReqCollection
		{
			get
			{
				if (_accomStudGuestReqGsCodeReqStatusId == null)
				{
				_accomStudGuestReqGsCodeReqStatusId = new TList<AccomStudGuestReq>();
				}
	
				return _accomStudGuestReqGsCodeReqStatusId;
			}
			set { _accomStudGuestReqGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region FeeStudDiscCollection
		
		private TList<FeeStudDisc> _feeStudDiscGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudDiscGsCodeReqStatusId
		/// </summary>
		
		public TList<FeeStudDisc> FeeStudDiscCollection
		{
			get
			{
				if (_feeStudDiscGsCodeReqStatusId == null)
				{
				_feeStudDiscGsCodeReqStatusId = new TList<FeeStudDisc>();
				}
	
				return _feeStudDiscGsCodeReqStatusId;
			}
			set { _feeStudDiscGsCodeReqStatusId = value; }
		}
		
		#endregion

		#region EdStudCourseChngCollection
		
		private TList<EdStudCourseChng> _edStudCourseChngGsCodeReqStatusId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseChngGsCodeReqStatusId
		/// </summary>
		
		public TList<EdStudCourseChng> EdStudCourseChngCollection
		{
			get
			{
				if (_edStudCourseChngGsCodeReqStatusId == null)
				{
				_edStudCourseChngGsCodeReqStatusId = new TList<EdStudCourseChng>();
				}
	
				return _edStudCourseChngGsCodeReqStatusId;
			}
			set { _edStudCourseChngGsCodeReqStatusId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			GsCodeReqStatusEntityData _tmp = new GsCodeReqStatusEntityData();
						
			_tmp.GsCodeReqStatusId = this.GsCodeReqStatusId;
			_tmp.OriginalGsCodeReqStatusId = this.OriginalGsCodeReqStatusId;
			
			_tmp.DescrAr = this.DescrAr;
			_tmp.DescrEn = this.DescrEn;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._edStudExecuseReqGsCodeReqStatusId != null)
				_tmp.EdStudExecuseReqCollection = (TList<EdStudExecuseReq>) MakeCopyOf(this.EdStudExecuseReqCollection); 
			if (this._admAppTransReqGsCodeReqStatusId != null)
				_tmp.AdmAppTransReqCollection = (TList<AdmAppTransReq>) MakeCopyOf(this.AdmAppTransReqCollection); 
			if (this._feeRefndStdReqGsCodeReqStatusId != null)
				_tmp.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection); 
			if (this._spoOfferStudExceptionGsCodeReqStatusId != null)
				_tmp.SpoOfferStudExceptionCollection = (TList<SpoOfferStudException>) MakeCopyOf(this.SpoOfferStudExceptionCollection); 
			if (this._rsrchStudPostponeReqGsCodeReqStatusId != null)
				_tmp.RsrchStudPostponeReqCollection = (TList<RsrchStudPostponeReq>) MakeCopyOf(this.RsrchStudPostponeReqCollection); 
			if (this._edStudIntTrnsGsCodeReqStatusId != null)
				_tmp.EdStudIntTrnsCollection = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollection); 
			if (this._edStudCourseRplcGsCodeReqStatusId != null)
				_tmp.EdStudCourseRplcCollection = (TList<EdStudCourseRplc>) MakeCopyOf(this.EdStudCourseRplcCollection); 
			if (this._edStudTransFromReqGsCodeReqStatusId != null)
				_tmp.EdStudTransFromReqCollection = (TList<EdStudTransFromReq>) MakeCopyOf(this.EdStudTransFromReqCollection); 
			if (this._edStudExcuseGsCodeReqStatusId != null)
				_tmp.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection); 
			if (this._edStudClrncReqGsCodeReqStatusId != null)
				_tmp.EdStudClrncReqCollection = (TList<EdStudClrncReq>) MakeCopyOf(this.EdStudClrncReqCollection); 
			if (this._accomStudPermtReqGsCodeReqStatusId != null)
				_tmp.AccomStudPermtReqCollection = (TList<AccomStudPermtReq>) MakeCopyOf(this.AccomStudPermtReqCollection); 
			if (this._accomStudLeaveReqGsCodeReqStatusId != null)
				_tmp.AccomStudLeaveReqCollection = (TList<AccomStudLeaveReq>) MakeCopyOf(this.AccomStudLeaveReqCollection); 
			if (this._edStudExmptReqGsCodeReqStatusId != null)
				_tmp.EdStudExmptReqCollection = (TList<EdStudExmptReq>) MakeCopyOf(this.EdStudExmptReqCollection); 
			if (this._trnsStudReqGsCodeReqStatusId != null)
				_tmp.TrnsStudReqCollection = (TList<TrnsStudReq>) MakeCopyOf(this.TrnsStudReqCollection); 
			if (this._accomStudFeedReqGsCodeReqStatusId != null)
				_tmp.AccomStudFeedReqCollection = (TList<AccomStudFeedReq>) MakeCopyOf(this.AccomStudFeedReqCollection); 
			if (this._accomStudReqGsCodeReqStatusId != null)
				_tmp.AccomStudReqCollection = (TList<AccomStudReq>) MakeCopyOf(this.AccomStudReqCollection); 
			if (this._feeStudInstallmentRequestGsCodeReqStatusId != null)
				_tmp.FeeStudInstallmentRequestCollection = (TList<FeeStudInstallmentRequest>) MakeCopyOf(this.FeeStudInstallmentRequestCollection); 
			if (this._accomStudGuestReqGsCodeReqStatusId != null)
				_tmp.AccomStudGuestReqCollection = (TList<AccomStudGuestReq>) MakeCopyOf(this.AccomStudGuestReqCollection); 
			if (this._feeStudDiscGsCodeReqStatusId != null)
				_tmp.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection); 
			if (this._edStudCourseChngGsCodeReqStatusId != null)
				_tmp.EdStudCourseChngCollection = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			GsCodeReqStatusEntityData _tmp = new GsCodeReqStatusEntityData();
						
			_tmp.GsCodeReqStatusId = this.GsCodeReqStatusId;
			_tmp.OriginalGsCodeReqStatusId = this.OriginalGsCodeReqStatusId;
			
			_tmp.DescrAr = this.DescrAr;
			_tmp.DescrEn = this.DescrEn;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.EdStudExecuseReqCollection = (TList<EdStudExecuseReq>) MakeCopyOf(this.EdStudExecuseReqCollection, existingCopies); 
			_tmp.AdmAppTransReqCollection = (TList<AdmAppTransReq>) MakeCopyOf(this.AdmAppTransReqCollection, existingCopies); 
			_tmp.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection, existingCopies); 
			_tmp.SpoOfferStudExceptionCollection = (TList<SpoOfferStudException>) MakeCopyOf(this.SpoOfferStudExceptionCollection, existingCopies); 
			_tmp.RsrchStudPostponeReqCollection = (TList<RsrchStudPostponeReq>) MakeCopyOf(this.RsrchStudPostponeReqCollection, existingCopies); 
			_tmp.EdStudIntTrnsCollection = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollection, existingCopies); 
			_tmp.EdStudCourseRplcCollection = (TList<EdStudCourseRplc>) MakeCopyOf(this.EdStudCourseRplcCollection, existingCopies); 
			_tmp.EdStudTransFromReqCollection = (TList<EdStudTransFromReq>) MakeCopyOf(this.EdStudTransFromReqCollection, existingCopies); 
			_tmp.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection, existingCopies); 
			_tmp.EdStudClrncReqCollection = (TList<EdStudClrncReq>) MakeCopyOf(this.EdStudClrncReqCollection, existingCopies); 
			_tmp.AccomStudPermtReqCollection = (TList<AccomStudPermtReq>) MakeCopyOf(this.AccomStudPermtReqCollection, existingCopies); 
			_tmp.AccomStudLeaveReqCollection = (TList<AccomStudLeaveReq>) MakeCopyOf(this.AccomStudLeaveReqCollection, existingCopies); 
			_tmp.EdStudExmptReqCollection = (TList<EdStudExmptReq>) MakeCopyOf(this.EdStudExmptReqCollection, existingCopies); 
			_tmp.TrnsStudReqCollection = (TList<TrnsStudReq>) MakeCopyOf(this.TrnsStudReqCollection, existingCopies); 
			_tmp.AccomStudFeedReqCollection = (TList<AccomStudFeedReq>) MakeCopyOf(this.AccomStudFeedReqCollection, existingCopies); 
			_tmp.AccomStudReqCollection = (TList<AccomStudReq>) MakeCopyOf(this.AccomStudReqCollection, existingCopies); 
			_tmp.FeeStudInstallmentRequestCollection = (TList<FeeStudInstallmentRequest>) MakeCopyOf(this.FeeStudInstallmentRequestCollection, existingCopies); 
			_tmp.AccomStudGuestReqCollection = (TList<AccomStudGuestReq>) MakeCopyOf(this.AccomStudGuestReqCollection, existingCopies); 
			_tmp.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection, existingCopies); 
			_tmp.EdStudCourseChngCollection = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GsCodeReqStatusColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(GsCodeReqStatusColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GsCodeReqStatusColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(GsCodeReqStatusColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GsCodeReqStatusColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(GsCodeReqStatusColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				GsCodeReqStatusEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new GsCodeReqStatusEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GsCodeReqStatusColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(GsCodeReqStatusColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				GsCodeReqStatusEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new GsCodeReqStatusEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region GsCodeReqStatusEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="GsCodeReqStatus"/> object.
	/// </remarks>
	public class GsCodeReqStatusEventArgs : System.EventArgs
	{
		private GsCodeReqStatusColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the GsCodeReqStatusEventArgs class.
		///</summary>
		public GsCodeReqStatusEventArgs(GsCodeReqStatusColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the GsCodeReqStatusEventArgs class.
		///</summary>
		public GsCodeReqStatusEventArgs(GsCodeReqStatusColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The GsCodeReqStatusColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="GsCodeReqStatusColumn" />
		public GsCodeReqStatusColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all GsCodeReqStatus related events.
	///</summary>
	public delegate void GsCodeReqStatusEventHandler(object sender, GsCodeReqStatusEventArgs e);
	
	#region GsCodeReqStatusComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class GsCodeReqStatusComparer : System.Collections.Generic.IComparer<GsCodeReqStatus>
	{
		GsCodeReqStatusColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:GsCodeReqStatusComparer"/> class.
        /// </summary>
		public GsCodeReqStatusComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:GsCodeReqStatusComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public GsCodeReqStatusComparer(GsCodeReqStatusColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="GsCodeReqStatus"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="GsCodeReqStatus"/> to compare.</param>
        /// <param name="b">The second <c>GsCodeReqStatus</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(GsCodeReqStatus a, GsCodeReqStatus b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(GsCodeReqStatus entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(GsCodeReqStatus a, GsCodeReqStatus b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public GsCodeReqStatusColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region GsCodeReqStatusKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="GsCodeReqStatus"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class GsCodeReqStatusKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the GsCodeReqStatusKey class.
		/// </summary>
		public GsCodeReqStatusKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the GsCodeReqStatusKey class.
		/// </summary>
		public GsCodeReqStatusKey(GsCodeReqStatusBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.GsCodeReqStatusId = entity.GsCodeReqStatusId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the GsCodeReqStatusKey class.
		/// </summary>
		public GsCodeReqStatusKey(System.Decimal _gsCodeReqStatusId)
		{
			#region Init Properties

			this.GsCodeReqStatusId = _gsCodeReqStatusId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private GsCodeReqStatusBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public GsCodeReqStatusBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the GsCodeReqStatusId property
		private System.Decimal _gsCodeReqStatusId;
		
		/// <summary>
		/// Gets or sets the GsCodeReqStatusId property.
		/// </summary>
		public System.Decimal GsCodeReqStatusId
		{
			get { return _gsCodeReqStatusId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.GsCodeReqStatusId = value;
				
				_gsCodeReqStatusId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				GsCodeReqStatusId = ( values["GsCodeReqStatusId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["GsCodeReqStatusId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("GsCodeReqStatusId", GsCodeReqStatusId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("GsCodeReqStatusId: {0}{1}",
								GsCodeReqStatusId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region GsCodeReqStatusColumn Enum
	
	/// <summary>
	/// Enumerate the GsCodeReqStatus columns.
	/// </summary>
	[Serializable]
	public enum GsCodeReqStatusColumn : int
	{
		/// <summary>
		/// GsCodeReqStatusId : 
		/// </summary>
		[EnumTextValue("GS_CODE_REQ_STATUS_ID")]
		[ColumnEnum("GS_CODE_REQ_STATUS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		GsCodeReqStatusId = 1,
		/// <summary>
		/// DescrAr : 
		/// </summary>
		[EnumTextValue("DESCR_AR")]
		[ColumnEnum("DESCR_AR", typeof(System.String), System.Data.DbType.String, false, false, false, 20)]
		DescrAr = 2,
		/// <summary>
		/// DescrEn : 
		/// </summary>
		[EnumTextValue("DESCR_EN")]
		[ColumnEnum("DESCR_EN", typeof(System.String), System.Data.DbType.String, false, false, false, 20)]
		DescrEn = 3
	}//End enum

	#endregion GsCodeReqStatusColumn Enum

} // end namespace
