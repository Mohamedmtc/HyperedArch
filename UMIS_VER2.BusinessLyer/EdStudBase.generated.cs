
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file EdStud.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ED_STUD' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class EdStudBase : EntityBase, IEdStud, IEntityId<EdStudKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private EdStudEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private EdStudEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private EdStudEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<EdStud> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdStudEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdStudEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="EdStudBase"/> instance.
		///</summary>
		public EdStudBase()
		{
			this.entityData = new EdStudEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="EdStudBase"/> instance.
		///</summary>
		///<param name="_edStudId"></param>
		///<param name="_nationalNumber"></param>
		///<param name="_fullNameAr"></param>
		///<param name="_clFullNameAr"></param>
		///<param name="_studNameAr"></param>
		///<param name="_clStudNameAr"></param>
		///<param name="_fatherNameAr"></param>
		///<param name="_clFatherNameAr"></param>
		///<param name="_grandfatherNameAr"></param>
		///<param name="_clGrandfatherNameAr"></param>
		///<param name="_familyNameAr"></param>
		///<param name="_clFamilyNameAr"></param>
		///<param name="_fullNameEn"></param>
		///<param name="_studNameEn"></param>
		///<param name="_fatherNameEn"></param>
		///<param name="_grandfatherNameEn"></param>
		///<param name="_familyNameEn"></param>
		///<param name="_fatherProfession"></param>
		///<param name="_fatherNationalNumber"></param>
		///<param name="_motherNationalNumber"></param>
		///<param name="_motherNameAr"></param>
		///<param name="_clMotherNameAr"></param>
		///<param name="_motherNameEn"></param>
		///<param name="_gsCodeGenderId"></param>
		///<param name="_gsCodeReligionId"></param>
		///<param name="_birthRegNumber"></param>
		///<param name="_birthDate"></param>
		///<param name="_gsBirthCountryNodeId"></param>
		///<param name="_gsCountryInfoId1"></param>
		///<param name="_gsCountryInfoId2"></param>
		///<param name="_studPhoto"></param>
		///<param name="_gsCodeIdentTypeId"></param>
		///<param name="_isPrntStaff">XXX ED_GURAD</param>
		///<param name="_saStfMemberPrntId"></param>
		///<param name="_gsCdeBloodId"></param>
		///<param name="_studLnht"></param>
		///<param name="_studWght"></param>
		///<param name="_identIssuePlc">مكان اصدار</param>
		///<param name="_gsCodeLanguageId">لغة التخصص</param>
		///<param name="_passporNo"></param>
		///<param name="_passporExpireDate"></param>
		///<param name="_passporIssueDate"></param>
		///<param name="_specialNeedFlg"></param>
		///<param name="_employeeFlg">WORK_FLG</param>
		///<param name="_identIssueDate"></param>
		///<param name="_identExpireDate"></param>
		///<param name="_hecId">XXXnot used moved to ed_stud_faculty HEC-ID</param>
		///<param name="_gsCdeMaritalStatusId"></param>
		///<param name="_marriageDate"></param>
		///<param name="_noChild"></param>
		///<param name="_visaNumber">رقم التأشيرة</param>
		///<param name="_visaIssueDate"></param>
		///<param name="_visaExpireDate"></param>
		///<param name="_seFormId"></param>
		///<param name="_lastDate"></param>
		///<param name="_seUserId"></param>
		///<param name="_covidFlg"></param>
		public EdStudBase(System.Decimal _edStudId, System.String _nationalNumber, System.String _fullNameAr, 
			System.String _clFullNameAr, System.String _studNameAr, System.String _clStudNameAr, System.String _fatherNameAr, 
			System.String _clFatherNameAr, System.String _grandfatherNameAr, System.String _clGrandfatherNameAr, 
			System.String _familyNameAr, System.String _clFamilyNameAr, System.String _fullNameEn, System.String _studNameEn, 
			System.String _fatherNameEn, System.String _grandfatherNameEn, System.String _familyNameEn, System.String _fatherProfession, 
			System.String _fatherNationalNumber, System.String _motherNationalNumber, System.String _motherNameAr, 
			System.String _clMotherNameAr, System.String _motherNameEn, System.Decimal? _gsCodeGenderId, System.Decimal? _gsCodeReligionId, 
			System.String _birthRegNumber, System.DateTime? _birthDate, System.Decimal? _gsBirthCountryNodeId, System.Decimal? _gsCountryInfoId1, 
			System.Decimal? _gsCountryInfoId2, System.String _studPhoto, System.Decimal? _gsCodeIdentTypeId, System.Decimal? _isPrntStaff, 
			System.Decimal? _saStfMemberPrntId, System.Decimal? _gsCdeBloodId, System.Decimal? _studLnht, System.Decimal? _studWght, 
			System.String _identIssuePlc, System.Decimal? _gsCodeLanguageId, System.String _passporNo, System.DateTime? _passporExpireDate, 
			System.DateTime? _passporIssueDate, System.Boolean? _specialNeedFlg, System.Boolean? _employeeFlg, System.DateTime? _identIssueDate, 
			System.DateTime? _identExpireDate, System.String _hecId, System.Decimal? _gsCdeMaritalStatusId, System.DateTime? _marriageDate, 
			System.Int32? _noChild, System.String _visaNumber, System.DateTime? _visaIssueDate, System.DateTime? _visaExpireDate, 
			System.Decimal? _seFormId, System.DateTime? _lastDate, System.Decimal? _seUserId, System.Boolean? _covidFlg)
		{
			this.entityData = new EdStudEntityData();
			this.backupData = null;

			this.EdStudId = _edStudId;
			this.NationalNumber = _nationalNumber;
			this.FullNameAr = _fullNameAr;
			this.ClFullNameAr = _clFullNameAr;
			this.StudNameAr = _studNameAr;
			this.ClStudNameAr = _clStudNameAr;
			this.FatherNameAr = _fatherNameAr;
			this.ClFatherNameAr = _clFatherNameAr;
			this.GrandfatherNameAr = _grandfatherNameAr;
			this.ClGrandfatherNameAr = _clGrandfatherNameAr;
			this.FamilyNameAr = _familyNameAr;
			this.ClFamilyNameAr = _clFamilyNameAr;
			this.FullNameEn = _fullNameEn;
			this.StudNameEn = _studNameEn;
			this.FatherNameEn = _fatherNameEn;
			this.GrandfatherNameEn = _grandfatherNameEn;
			this.FamilyNameEn = _familyNameEn;
			this.FatherProfession = _fatherProfession;
			this.FatherNationalNumber = _fatherNationalNumber;
			this.MotherNationalNumber = _motherNationalNumber;
			this.MotherNameAr = _motherNameAr;
			this.ClMotherNameAr = _clMotherNameAr;
			this.MotherNameEn = _motherNameEn;
			this.GsCodeGenderId = _gsCodeGenderId;
			this.GsCodeReligionId = _gsCodeReligionId;
			this.BirthRegNumber = _birthRegNumber;
			this.BirthDate = _birthDate;
			this.GsBirthCountryNodeId = _gsBirthCountryNodeId;
			this.GsCountryInfoId1 = _gsCountryInfoId1;
			this.GsCountryInfoId2 = _gsCountryInfoId2;
			this.StudPhoto = _studPhoto;
			this.GsCodeIdentTypeId = _gsCodeIdentTypeId;
			this.IsPrntStaff = _isPrntStaff;
			this.SaStfMemberPrntId = _saStfMemberPrntId;
			this.GsCdeBloodId = _gsCdeBloodId;
			this.StudLnht = _studLnht;
			this.StudWght = _studWght;
			this.IdentIssuePlc = _identIssuePlc;
			this.GsCodeLanguageId = _gsCodeLanguageId;
			this.PassporNo = _passporNo;
			this.PassporExpireDate = _passporExpireDate;
			this.PassporIssueDate = _passporIssueDate;
			this.SpecialNeedFlg = _specialNeedFlg;
			this.EmployeeFlg = _employeeFlg;
			this.IdentIssueDate = _identIssueDate;
			this.IdentExpireDate = _identExpireDate;
			this.HecId = _hecId;
			this.GsCdeMaritalStatusId = _gsCdeMaritalStatusId;
			this.MarriageDate = _marriageDate;
			this.NoChild = _noChild;
			this.VisaNumber = _visaNumber;
			this.VisaIssueDate = _visaIssueDate;
			this.VisaExpireDate = _visaExpireDate;
			this.SeFormId = _seFormId;
			this.LastDate = _lastDate;
			this.SeUserId = _seUserId;
			this.CovidFlg = _covidFlg;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="EdStud"/> instance.
		///</summary>
		///<param name="_edStudId"></param>
		///<param name="_nationalNumber"></param>
		///<param name="_fullNameAr"></param>
		///<param name="_clFullNameAr"></param>
		///<param name="_studNameAr"></param>
		///<param name="_clStudNameAr"></param>
		///<param name="_fatherNameAr"></param>
		///<param name="_clFatherNameAr"></param>
		///<param name="_grandfatherNameAr"></param>
		///<param name="_clGrandfatherNameAr"></param>
		///<param name="_familyNameAr"></param>
		///<param name="_clFamilyNameAr"></param>
		///<param name="_fullNameEn"></param>
		///<param name="_studNameEn"></param>
		///<param name="_fatherNameEn"></param>
		///<param name="_grandfatherNameEn"></param>
		///<param name="_familyNameEn"></param>
		///<param name="_fatherProfession"></param>
		///<param name="_fatherNationalNumber"></param>
		///<param name="_motherNationalNumber"></param>
		///<param name="_motherNameAr"></param>
		///<param name="_clMotherNameAr"></param>
		///<param name="_motherNameEn"></param>
		///<param name="_gsCodeGenderId"></param>
		///<param name="_gsCodeReligionId"></param>
		///<param name="_birthRegNumber"></param>
		///<param name="_birthDate"></param>
		///<param name="_gsBirthCountryNodeId"></param>
		///<param name="_gsCountryInfoId1"></param>
		///<param name="_gsCountryInfoId2"></param>
		///<param name="_studPhoto"></param>
		///<param name="_gsCodeIdentTypeId"></param>
		///<param name="_isPrntStaff">XXX ED_GURAD</param>
		///<param name="_saStfMemberPrntId"></param>
		///<param name="_gsCdeBloodId"></param>
		///<param name="_studLnht"></param>
		///<param name="_studWght"></param>
		///<param name="_identIssuePlc">مكان اصدار</param>
		///<param name="_gsCodeLanguageId">لغة التخصص</param>
		///<param name="_passporNo"></param>
		///<param name="_passporExpireDate"></param>
		///<param name="_passporIssueDate"></param>
		///<param name="_specialNeedFlg"></param>
		///<param name="_employeeFlg">WORK_FLG</param>
		///<param name="_identIssueDate"></param>
		///<param name="_identExpireDate"></param>
		///<param name="_hecId">XXXnot used moved to ed_stud_faculty HEC-ID</param>
		///<param name="_gsCdeMaritalStatusId"></param>
		///<param name="_marriageDate"></param>
		///<param name="_noChild"></param>
		///<param name="_visaNumber">رقم التأشيرة</param>
		///<param name="_visaIssueDate"></param>
		///<param name="_visaExpireDate"></param>
		///<param name="_seFormId"></param>
		///<param name="_lastDate"></param>
		///<param name="_seUserId"></param>
		///<param name="_covidFlg"></param>
		public static EdStud CreateEdStud(System.Decimal _edStudId, System.String _nationalNumber, System.String _fullNameAr, 
			System.String _clFullNameAr, System.String _studNameAr, System.String _clStudNameAr, System.String _fatherNameAr, 
			System.String _clFatherNameAr, System.String _grandfatherNameAr, System.String _clGrandfatherNameAr, 
			System.String _familyNameAr, System.String _clFamilyNameAr, System.String _fullNameEn, System.String _studNameEn, 
			System.String _fatherNameEn, System.String _grandfatherNameEn, System.String _familyNameEn, System.String _fatherProfession, 
			System.String _fatherNationalNumber, System.String _motherNationalNumber, System.String _motherNameAr, 
			System.String _clMotherNameAr, System.String _motherNameEn, System.Decimal? _gsCodeGenderId, System.Decimal? _gsCodeReligionId, 
			System.String _birthRegNumber, System.DateTime? _birthDate, System.Decimal? _gsBirthCountryNodeId, System.Decimal? _gsCountryInfoId1, 
			System.Decimal? _gsCountryInfoId2, System.String _studPhoto, System.Decimal? _gsCodeIdentTypeId, System.Decimal? _isPrntStaff, 
			System.Decimal? _saStfMemberPrntId, System.Decimal? _gsCdeBloodId, System.Decimal? _studLnht, System.Decimal? _studWght, 
			System.String _identIssuePlc, System.Decimal? _gsCodeLanguageId, System.String _passporNo, System.DateTime? _passporExpireDate, 
			System.DateTime? _passporIssueDate, System.Boolean? _specialNeedFlg, System.Boolean? _employeeFlg, System.DateTime? _identIssueDate, 
			System.DateTime? _identExpireDate, System.String _hecId, System.Decimal? _gsCdeMaritalStatusId, System.DateTime? _marriageDate, 
			System.Int32? _noChild, System.String _visaNumber, System.DateTime? _visaIssueDate, System.DateTime? _visaExpireDate, 
			System.Decimal? _seFormId, System.DateTime? _lastDate, System.Decimal? _seUserId, System.Boolean? _covidFlg)
		{
			EdStud newEdStud = new EdStud();
			newEdStud.EdStudId = _edStudId;
			newEdStud.NationalNumber = _nationalNumber;
			newEdStud.FullNameAr = _fullNameAr;
			newEdStud.ClFullNameAr = _clFullNameAr;
			newEdStud.StudNameAr = _studNameAr;
			newEdStud.ClStudNameAr = _clStudNameAr;
			newEdStud.FatherNameAr = _fatherNameAr;
			newEdStud.ClFatherNameAr = _clFatherNameAr;
			newEdStud.GrandfatherNameAr = _grandfatherNameAr;
			newEdStud.ClGrandfatherNameAr = _clGrandfatherNameAr;
			newEdStud.FamilyNameAr = _familyNameAr;
			newEdStud.ClFamilyNameAr = _clFamilyNameAr;
			newEdStud.FullNameEn = _fullNameEn;
			newEdStud.StudNameEn = _studNameEn;
			newEdStud.FatherNameEn = _fatherNameEn;
			newEdStud.GrandfatherNameEn = _grandfatherNameEn;
			newEdStud.FamilyNameEn = _familyNameEn;
			newEdStud.FatherProfession = _fatherProfession;
			newEdStud.FatherNationalNumber = _fatherNationalNumber;
			newEdStud.MotherNationalNumber = _motherNationalNumber;
			newEdStud.MotherNameAr = _motherNameAr;
			newEdStud.ClMotherNameAr = _clMotherNameAr;
			newEdStud.MotherNameEn = _motherNameEn;
			newEdStud.GsCodeGenderId = _gsCodeGenderId;
			newEdStud.GsCodeReligionId = _gsCodeReligionId;
			newEdStud.BirthRegNumber = _birthRegNumber;
			newEdStud.BirthDate = _birthDate;
			newEdStud.GsBirthCountryNodeId = _gsBirthCountryNodeId;
			newEdStud.GsCountryInfoId1 = _gsCountryInfoId1;
			newEdStud.GsCountryInfoId2 = _gsCountryInfoId2;
			newEdStud.StudPhoto = _studPhoto;
			newEdStud.GsCodeIdentTypeId = _gsCodeIdentTypeId;
			newEdStud.IsPrntStaff = _isPrntStaff;
			newEdStud.SaStfMemberPrntId = _saStfMemberPrntId;
			newEdStud.GsCdeBloodId = _gsCdeBloodId;
			newEdStud.StudLnht = _studLnht;
			newEdStud.StudWght = _studWght;
			newEdStud.IdentIssuePlc = _identIssuePlc;
			newEdStud.GsCodeLanguageId = _gsCodeLanguageId;
			newEdStud.PassporNo = _passporNo;
			newEdStud.PassporExpireDate = _passporExpireDate;
			newEdStud.PassporIssueDate = _passporIssueDate;
			newEdStud.SpecialNeedFlg = _specialNeedFlg;
			newEdStud.EmployeeFlg = _employeeFlg;
			newEdStud.IdentIssueDate = _identIssueDate;
			newEdStud.IdentExpireDate = _identExpireDate;
			newEdStud.HecId = _hecId;
			newEdStud.GsCdeMaritalStatusId = _gsCdeMaritalStatusId;
			newEdStud.MarriageDate = _marriageDate;
			newEdStud.NoChild = _noChild;
			newEdStud.VisaNumber = _visaNumber;
			newEdStud.VisaIssueDate = _visaIssueDate;
			newEdStud.VisaExpireDate = _visaExpireDate;
			newEdStud.SeFormId = _seFormId;
			newEdStud.LastDate = _lastDate;
			newEdStud.SeUserId = _seUserId;
			newEdStud.CovidFlg = _covidFlg;
			return newEdStud;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the EdStudId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal EdStudId
		{
			get
			{
				return this.entityData.EdStudId; 
			}
			
			set
			{
				if (this.entityData.EdStudId == value)
					return;
					
				OnColumnChanging(EdStudColumn.EdStudId, this.entityData.EdStudId);
				this.entityData.EdStudId = value;
				this.EntityId.EdStudId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.EdStudId, this.entityData.EdStudId);
				OnPropertyChanged("EdStudId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ED_STUD_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the ED_STUD_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalEdStudId
		{
			get { return this.entityData.OriginalEdStudId; }
			set { this.entityData.OriginalEdStudId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the NationalNumber property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String NationalNumber
		{
			get
			{
				return this.entityData.NationalNumber; 
			}
			
			set
			{
				if (this.entityData.NationalNumber == value)
					return;
					
				OnColumnChanging(EdStudColumn.NationalNumber, this.entityData.NationalNumber);
				this.entityData.NationalNumber = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.NationalNumber, this.entityData.NationalNumber);
				OnPropertyChanged("NationalNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FullNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 150)]
		public virtual System.String FullNameAr
		{
			get
			{
				return this.entityData.FullNameAr; 
			}
			
			set
			{
				if (this.entityData.FullNameAr == value)
					return;
					
				OnColumnChanging(EdStudColumn.FullNameAr, this.entityData.FullNameAr);
				this.entityData.FullNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.FullNameAr, this.entityData.FullNameAr);
				OnPropertyChanged("FullNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ClFullNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String ClFullNameAr
		{
			get
			{
				return this.entityData.ClFullNameAr; 
			}
			
			set
			{
				if (this.entityData.ClFullNameAr == value)
					return;
					
				OnColumnChanging(EdStudColumn.ClFullNameAr, this.entityData.ClFullNameAr);
				this.entityData.ClFullNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.ClFullNameAr, this.entityData.ClFullNameAr);
				OnPropertyChanged("ClFullNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StudNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String StudNameAr
		{
			get
			{
				return this.entityData.StudNameAr; 
			}
			
			set
			{
				if (this.entityData.StudNameAr == value)
					return;
					
				OnColumnChanging(EdStudColumn.StudNameAr, this.entityData.StudNameAr);
				this.entityData.StudNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.StudNameAr, this.entityData.StudNameAr);
				OnPropertyChanged("StudNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ClStudNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String ClStudNameAr
		{
			get
			{
				return this.entityData.ClStudNameAr; 
			}
			
			set
			{
				if (this.entityData.ClStudNameAr == value)
					return;
					
				OnColumnChanging(EdStudColumn.ClStudNameAr, this.entityData.ClStudNameAr);
				this.entityData.ClStudNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.ClStudNameAr, this.entityData.ClStudNameAr);
				OnPropertyChanged("ClStudNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FatherNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String FatherNameAr
		{
			get
			{
				return this.entityData.FatherNameAr; 
			}
			
			set
			{
				if (this.entityData.FatherNameAr == value)
					return;
					
				OnColumnChanging(EdStudColumn.FatherNameAr, this.entityData.FatherNameAr);
				this.entityData.FatherNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.FatherNameAr, this.entityData.FatherNameAr);
				OnPropertyChanged("FatherNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ClFatherNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String ClFatherNameAr
		{
			get
			{
				return this.entityData.ClFatherNameAr; 
			}
			
			set
			{
				if (this.entityData.ClFatherNameAr == value)
					return;
					
				OnColumnChanging(EdStudColumn.ClFatherNameAr, this.entityData.ClFatherNameAr);
				this.entityData.ClFatherNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.ClFatherNameAr, this.entityData.ClFatherNameAr);
				OnPropertyChanged("ClFatherNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GrandfatherNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String GrandfatherNameAr
		{
			get
			{
				return this.entityData.GrandfatherNameAr; 
			}
			
			set
			{
				if (this.entityData.GrandfatherNameAr == value)
					return;
					
				OnColumnChanging(EdStudColumn.GrandfatherNameAr, this.entityData.GrandfatherNameAr);
				this.entityData.GrandfatherNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.GrandfatherNameAr, this.entityData.GrandfatherNameAr);
				OnPropertyChanged("GrandfatherNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ClGrandfatherNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String ClGrandfatherNameAr
		{
			get
			{
				return this.entityData.ClGrandfatherNameAr; 
			}
			
			set
			{
				if (this.entityData.ClGrandfatherNameAr == value)
					return;
					
				OnColumnChanging(EdStudColumn.ClGrandfatherNameAr, this.entityData.ClGrandfatherNameAr);
				this.entityData.ClGrandfatherNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.ClGrandfatherNameAr, this.entityData.ClGrandfatherNameAr);
				OnPropertyChanged("ClGrandfatherNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FamilyNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String FamilyNameAr
		{
			get
			{
				return this.entityData.FamilyNameAr; 
			}
			
			set
			{
				if (this.entityData.FamilyNameAr == value)
					return;
					
				OnColumnChanging(EdStudColumn.FamilyNameAr, this.entityData.FamilyNameAr);
				this.entityData.FamilyNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.FamilyNameAr, this.entityData.FamilyNameAr);
				OnPropertyChanged("FamilyNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ClFamilyNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String ClFamilyNameAr
		{
			get
			{
				return this.entityData.ClFamilyNameAr; 
			}
			
			set
			{
				if (this.entityData.ClFamilyNameAr == value)
					return;
					
				OnColumnChanging(EdStudColumn.ClFamilyNameAr, this.entityData.ClFamilyNameAr);
				this.entityData.ClFamilyNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.ClFamilyNameAr, this.entityData.ClFamilyNameAr);
				OnPropertyChanged("ClFamilyNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FullNameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 150)]
		public virtual System.String FullNameEn
		{
			get
			{
				return this.entityData.FullNameEn; 
			}
			
			set
			{
				if (this.entityData.FullNameEn == value)
					return;
					
				OnColumnChanging(EdStudColumn.FullNameEn, this.entityData.FullNameEn);
				this.entityData.FullNameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.FullNameEn, this.entityData.FullNameEn);
				OnPropertyChanged("FullNameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StudNameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String StudNameEn
		{
			get
			{
				return this.entityData.StudNameEn; 
			}
			
			set
			{
				if (this.entityData.StudNameEn == value)
					return;
					
				OnColumnChanging(EdStudColumn.StudNameEn, this.entityData.StudNameEn);
				this.entityData.StudNameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.StudNameEn, this.entityData.StudNameEn);
				OnPropertyChanged("StudNameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FatherNameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String FatherNameEn
		{
			get
			{
				return this.entityData.FatherNameEn; 
			}
			
			set
			{
				if (this.entityData.FatherNameEn == value)
					return;
					
				OnColumnChanging(EdStudColumn.FatherNameEn, this.entityData.FatherNameEn);
				this.entityData.FatherNameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.FatherNameEn, this.entityData.FatherNameEn);
				OnPropertyChanged("FatherNameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GrandfatherNameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String GrandfatherNameEn
		{
			get
			{
				return this.entityData.GrandfatherNameEn; 
			}
			
			set
			{
				if (this.entityData.GrandfatherNameEn == value)
					return;
					
				OnColumnChanging(EdStudColumn.GrandfatherNameEn, this.entityData.GrandfatherNameEn);
				this.entityData.GrandfatherNameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.GrandfatherNameEn, this.entityData.GrandfatherNameEn);
				OnPropertyChanged("GrandfatherNameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FamilyNameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String FamilyNameEn
		{
			get
			{
				return this.entityData.FamilyNameEn; 
			}
			
			set
			{
				if (this.entityData.FamilyNameEn == value)
					return;
					
				OnColumnChanging(EdStudColumn.FamilyNameEn, this.entityData.FamilyNameEn);
				this.entityData.FamilyNameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.FamilyNameEn, this.entityData.FamilyNameEn);
				OnPropertyChanged("FamilyNameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FatherProfession property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String FatherProfession
		{
			get
			{
				return this.entityData.FatherProfession; 
			}
			
			set
			{
				if (this.entityData.FatherProfession == value)
					return;
					
				OnColumnChanging(EdStudColumn.FatherProfession, this.entityData.FatherProfession);
				this.entityData.FatherProfession = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.FatherProfession, this.entityData.FatherProfession);
				OnPropertyChanged("FatherProfession");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FatherNationalNumber property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String FatherNationalNumber
		{
			get
			{
				return this.entityData.FatherNationalNumber; 
			}
			
			set
			{
				if (this.entityData.FatherNationalNumber == value)
					return;
					
				OnColumnChanging(EdStudColumn.FatherNationalNumber, this.entityData.FatherNationalNumber);
				this.entityData.FatherNationalNumber = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.FatherNationalNumber, this.entityData.FatherNationalNumber);
				OnPropertyChanged("FatherNationalNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MotherNationalNumber property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String MotherNationalNumber
		{
			get
			{
				return this.entityData.MotherNationalNumber; 
			}
			
			set
			{
				if (this.entityData.MotherNationalNumber == value)
					return;
					
				OnColumnChanging(EdStudColumn.MotherNationalNumber, this.entityData.MotherNationalNumber);
				this.entityData.MotherNationalNumber = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.MotherNationalNumber, this.entityData.MotherNationalNumber);
				OnPropertyChanged("MotherNationalNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MotherNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String MotherNameAr
		{
			get
			{
				return this.entityData.MotherNameAr; 
			}
			
			set
			{
				if (this.entityData.MotherNameAr == value)
					return;
					
				OnColumnChanging(EdStudColumn.MotherNameAr, this.entityData.MotherNameAr);
				this.entityData.MotherNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.MotherNameAr, this.entityData.MotherNameAr);
				OnPropertyChanged("MotherNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ClMotherNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String ClMotherNameAr
		{
			get
			{
				return this.entityData.ClMotherNameAr; 
			}
			
			set
			{
				if (this.entityData.ClMotherNameAr == value)
					return;
					
				OnColumnChanging(EdStudColumn.ClMotherNameAr, this.entityData.ClMotherNameAr);
				this.entityData.ClMotherNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.ClMotherNameAr, this.entityData.ClMotherNameAr);
				OnPropertyChanged("ClMotherNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MotherNameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String MotherNameEn
		{
			get
			{
				return this.entityData.MotherNameEn; 
			}
			
			set
			{
				if (this.entityData.MotherNameEn == value)
					return;
					
				OnColumnChanging(EdStudColumn.MotherNameEn, this.entityData.MotherNameEn);
				this.entityData.MotherNameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.MotherNameEn, this.entityData.MotherNameEn);
				OnPropertyChanged("MotherNameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeGenderId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeGenderIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeGenderId
		{
			get
			{
				return this.entityData.GsCodeGenderId; 
			}
			
			set
			{
				if (this.entityData.GsCodeGenderId == value)
					return;
					
				OnColumnChanging(EdStudColumn.GsCodeGenderId, this.entityData.GsCodeGenderId);
				this.entityData.GsCodeGenderId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.GsCodeGenderId, this.entityData.GsCodeGenderId);
				OnPropertyChanged("GsCodeGenderId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeReligionId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeReligionIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeReligionId
		{
			get
			{
				return this.entityData.GsCodeReligionId; 
			}
			
			set
			{
				if (this.entityData.GsCodeReligionId == value)
					return;
					
				OnColumnChanging(EdStudColumn.GsCodeReligionId, this.entityData.GsCodeReligionId);
				this.entityData.GsCodeReligionId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.GsCodeReligionId, this.entityData.GsCodeReligionId);
				OnPropertyChanged("GsCodeReligionId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BirthRegNumber property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String BirthRegNumber
		{
			get
			{
				return this.entityData.BirthRegNumber; 
			}
			
			set
			{
				if (this.entityData.BirthRegNumber == value)
					return;
					
				OnColumnChanging(EdStudColumn.BirthRegNumber, this.entityData.BirthRegNumber);
				this.entityData.BirthRegNumber = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.BirthRegNumber, this.entityData.BirthRegNumber);
				OnPropertyChanged("BirthRegNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BirthDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsBirthDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? BirthDate
		{
			get
			{
				return this.entityData.BirthDate; 
			}
			
			set
			{
				if (this.entityData.BirthDate == value)
					return;
					
				OnColumnChanging(EdStudColumn.BirthDate, this.entityData.BirthDate);
				this.entityData.BirthDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.BirthDate, this.entityData.BirthDate);
				OnPropertyChanged("BirthDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsBirthCountryNodeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsBirthCountryNodeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsBirthCountryNodeId
		{
			get
			{
				return this.entityData.GsBirthCountryNodeId; 
			}
			
			set
			{
				if (this.entityData.GsBirthCountryNodeId == value)
					return;
					
				OnColumnChanging(EdStudColumn.GsBirthCountryNodeId, this.entityData.GsBirthCountryNodeId);
				this.entityData.GsBirthCountryNodeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.GsBirthCountryNodeId, this.entityData.GsBirthCountryNodeId);
				OnPropertyChanged("GsBirthCountryNodeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCountryInfoId1 property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCountryInfoId1Null() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCountryInfoId1
		{
			get
			{
				return this.entityData.GsCountryInfoId1; 
			}
			
			set
			{
				if (this.entityData.GsCountryInfoId1 == value)
					return;
					
				OnColumnChanging(EdStudColumn.GsCountryInfoId1, this.entityData.GsCountryInfoId1);
				this.entityData.GsCountryInfoId1 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.GsCountryInfoId1, this.entityData.GsCountryInfoId1);
				OnPropertyChanged("GsCountryInfoId1");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCountryInfoId2 property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCountryInfoId2Null() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCountryInfoId2
		{
			get
			{
				return this.entityData.GsCountryInfoId2; 
			}
			
			set
			{
				if (this.entityData.GsCountryInfoId2 == value)
					return;
					
				OnColumnChanging(EdStudColumn.GsCountryInfoId2, this.entityData.GsCountryInfoId2);
				this.entityData.GsCountryInfoId2 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.GsCountryInfoId2, this.entityData.GsCountryInfoId2);
				OnPropertyChanged("GsCountryInfoId2");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StudPhoto property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 350)]
		public virtual System.String StudPhoto
		{
			get
			{
				return this.entityData.StudPhoto; 
			}
			
			set
			{
				if (this.entityData.StudPhoto == value)
					return;
					
				OnColumnChanging(EdStudColumn.StudPhoto, this.entityData.StudPhoto);
				this.entityData.StudPhoto = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.StudPhoto, this.entityData.StudPhoto);
				OnPropertyChanged("StudPhoto");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeIdentTypeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeIdentTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeIdentTypeId
		{
			get
			{
				return this.entityData.GsCodeIdentTypeId; 
			}
			
			set
			{
				if (this.entityData.GsCodeIdentTypeId == value)
					return;
					
				OnColumnChanging(EdStudColumn.GsCodeIdentTypeId, this.entityData.GsCodeIdentTypeId);
				this.entityData.GsCodeIdentTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.GsCodeIdentTypeId, this.entityData.GsCodeIdentTypeId);
				OnPropertyChanged("GsCodeIdentTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IsPrntStaff property. 
		///		XXX ED_GURAD
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsIsPrntStaffNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXX ED_GURAD"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? IsPrntStaff
		{
			get
			{
				return this.entityData.IsPrntStaff; 
			}
			
			set
			{
				if (this.entityData.IsPrntStaff == value)
					return;
					
				OnColumnChanging(EdStudColumn.IsPrntStaff, this.entityData.IsPrntStaff);
				this.entityData.IsPrntStaff = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.IsPrntStaff, this.entityData.IsPrntStaff);
				OnPropertyChanged("IsPrntStaff");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SaStfMemberPrntId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSaStfMemberPrntIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SaStfMemberPrntId
		{
			get
			{
				return this.entityData.SaStfMemberPrntId; 
			}
			
			set
			{
				if (this.entityData.SaStfMemberPrntId == value)
					return;
					
				OnColumnChanging(EdStudColumn.SaStfMemberPrntId, this.entityData.SaStfMemberPrntId);
				this.entityData.SaStfMemberPrntId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.SaStfMemberPrntId, this.entityData.SaStfMemberPrntId);
				OnPropertyChanged("SaStfMemberPrntId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCdeBloodId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCdeBloodIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCdeBloodId
		{
			get
			{
				return this.entityData.GsCdeBloodId; 
			}
			
			set
			{
				if (this.entityData.GsCdeBloodId == value)
					return;
					
				OnColumnChanging(EdStudColumn.GsCdeBloodId, this.entityData.GsCdeBloodId);
				this.entityData.GsCdeBloodId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.GsCdeBloodId, this.entityData.GsCdeBloodId);
				OnPropertyChanged("GsCdeBloodId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StudLnht property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsStudLnhtNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? StudLnht
		{
			get
			{
				return this.entityData.StudLnht; 
			}
			
			set
			{
				if (this.entityData.StudLnht == value)
					return;
					
				OnColumnChanging(EdStudColumn.StudLnht, this.entityData.StudLnht);
				this.entityData.StudLnht = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.StudLnht, this.entityData.StudLnht);
				OnPropertyChanged("StudLnht");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StudWght property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsStudWghtNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? StudWght
		{
			get
			{
				return this.entityData.StudWght; 
			}
			
			set
			{
				if (this.entityData.StudWght == value)
					return;
					
				OnColumnChanging(EdStudColumn.StudWght, this.entityData.StudWght);
				this.entityData.StudWght = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.StudWght, this.entityData.StudWght);
				OnPropertyChanged("StudWght");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdentIssuePlc property. 
		///		مكان اصدار
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"مكان اصدار"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String IdentIssuePlc
		{
			get
			{
				return this.entityData.IdentIssuePlc; 
			}
			
			set
			{
				if (this.entityData.IdentIssuePlc == value)
					return;
					
				OnColumnChanging(EdStudColumn.IdentIssuePlc, this.entityData.IdentIssuePlc);
				this.entityData.IdentIssuePlc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.IdentIssuePlc, this.entityData.IdentIssuePlc);
				OnPropertyChanged("IdentIssuePlc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeLanguageId property. 
		///		لغة التخصص
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeLanguageIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"لغة التخصص"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeLanguageId
		{
			get
			{
				return this.entityData.GsCodeLanguageId; 
			}
			
			set
			{
				if (this.entityData.GsCodeLanguageId == value)
					return;
					
				OnColumnChanging(EdStudColumn.GsCodeLanguageId, this.entityData.GsCodeLanguageId);
				this.entityData.GsCodeLanguageId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.GsCodeLanguageId, this.entityData.GsCodeLanguageId);
				OnPropertyChanged("GsCodeLanguageId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PassporNo property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String PassporNo
		{
			get
			{
				return this.entityData.PassporNo; 
			}
			
			set
			{
				if (this.entityData.PassporNo == value)
					return;
					
				OnColumnChanging(EdStudColumn.PassporNo, this.entityData.PassporNo);
				this.entityData.PassporNo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.PassporNo, this.entityData.PassporNo);
				OnPropertyChanged("PassporNo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PassporExpireDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsPassporExpireDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? PassporExpireDate
		{
			get
			{
				return this.entityData.PassporExpireDate; 
			}
			
			set
			{
				if (this.entityData.PassporExpireDate == value)
					return;
					
				OnColumnChanging(EdStudColumn.PassporExpireDate, this.entityData.PassporExpireDate);
				this.entityData.PassporExpireDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.PassporExpireDate, this.entityData.PassporExpireDate);
				OnPropertyChanged("PassporExpireDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PassporIssueDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsPassporIssueDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? PassporIssueDate
		{
			get
			{
				return this.entityData.PassporIssueDate; 
			}
			
			set
			{
				if (this.entityData.PassporIssueDate == value)
					return;
					
				OnColumnChanging(EdStudColumn.PassporIssueDate, this.entityData.PassporIssueDate);
				this.entityData.PassporIssueDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.PassporIssueDate, this.entityData.PassporIssueDate);
				OnPropertyChanged("PassporIssueDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SpecialNeedFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsSpecialNeedFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? SpecialNeedFlg
		{
			get
			{
				return this.entityData.SpecialNeedFlg; 
			}
			
			set
			{
				if (this.entityData.SpecialNeedFlg == value)
					return;
					
				OnColumnChanging(EdStudColumn.SpecialNeedFlg, this.entityData.SpecialNeedFlg);
				this.entityData.SpecialNeedFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.SpecialNeedFlg, this.entityData.SpecialNeedFlg);
				OnPropertyChanged("SpecialNeedFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EmployeeFlg property. 
		///		WORK_FLG
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsEmployeeFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"WORK_FLG"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? EmployeeFlg
		{
			get
			{
				return this.entityData.EmployeeFlg; 
			}
			
			set
			{
				if (this.entityData.EmployeeFlg == value)
					return;
					
				OnColumnChanging(EdStudColumn.EmployeeFlg, this.entityData.EmployeeFlg);
				this.entityData.EmployeeFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.EmployeeFlg, this.entityData.EmployeeFlg);
				OnPropertyChanged("EmployeeFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdentIssueDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsIdentIssueDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? IdentIssueDate
		{
			get
			{
				return this.entityData.IdentIssueDate; 
			}
			
			set
			{
				if (this.entityData.IdentIssueDate == value)
					return;
					
				OnColumnChanging(EdStudColumn.IdentIssueDate, this.entityData.IdentIssueDate);
				this.entityData.IdentIssueDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.IdentIssueDate, this.entityData.IdentIssueDate);
				OnPropertyChanged("IdentIssueDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdentExpireDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsIdentExpireDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? IdentExpireDate
		{
			get
			{
				return this.entityData.IdentExpireDate; 
			}
			
			set
			{
				if (this.entityData.IdentExpireDate == value)
					return;
					
				OnColumnChanging(EdStudColumn.IdentExpireDate, this.entityData.IdentExpireDate);
				this.entityData.IdentExpireDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.IdentExpireDate, this.entityData.IdentExpireDate);
				OnPropertyChanged("IdentExpireDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HecId property. 
		///		XXXnot used moved to ed_stud_faculty HEC-ID
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"XXXnot used moved to ed_stud_faculty HEC-ID"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String HecId
		{
			get
			{
				return this.entityData.HecId; 
			}
			
			set
			{
				if (this.entityData.HecId == value)
					return;
					
				OnColumnChanging(EdStudColumn.HecId, this.entityData.HecId);
				this.entityData.HecId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.HecId, this.entityData.HecId);
				OnPropertyChanged("HecId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCdeMaritalStatusId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCdeMaritalStatusIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCdeMaritalStatusId
		{
			get
			{
				return this.entityData.GsCdeMaritalStatusId; 
			}
			
			set
			{
				if (this.entityData.GsCdeMaritalStatusId == value)
					return;
					
				OnColumnChanging(EdStudColumn.GsCdeMaritalStatusId, this.entityData.GsCdeMaritalStatusId);
				this.entityData.GsCdeMaritalStatusId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.GsCdeMaritalStatusId, this.entityData.GsCdeMaritalStatusId);
				OnPropertyChanged("GsCdeMaritalStatusId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MarriageDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsMarriageDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? MarriageDate
		{
			get
			{
				return this.entityData.MarriageDate; 
			}
			
			set
			{
				if (this.entityData.MarriageDate == value)
					return;
					
				OnColumnChanging(EdStudColumn.MarriageDate, this.entityData.MarriageDate);
				this.entityData.MarriageDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.MarriageDate, this.entityData.MarriageDate);
				OnPropertyChanged("MarriageDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NoChild property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsNoChildNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? NoChild
		{
			get
			{
				return this.entityData.NoChild; 
			}
			
			set
			{
				if (this.entityData.NoChild == value)
					return;
					
				OnColumnChanging(EdStudColumn.NoChild, this.entityData.NoChild);
				this.entityData.NoChild = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.NoChild, this.entityData.NoChild);
				OnPropertyChanged("NoChild");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the VisaNumber property. 
		///		رقم التأشيرة
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"رقم التأشيرة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String VisaNumber
		{
			get
			{
				return this.entityData.VisaNumber; 
			}
			
			set
			{
				if (this.entityData.VisaNumber == value)
					return;
					
				OnColumnChanging(EdStudColumn.VisaNumber, this.entityData.VisaNumber);
				this.entityData.VisaNumber = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.VisaNumber, this.entityData.VisaNumber);
				OnPropertyChanged("VisaNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the VisaIssueDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsVisaIssueDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? VisaIssueDate
		{
			get
			{
				return this.entityData.VisaIssueDate; 
			}
			
			set
			{
				if (this.entityData.VisaIssueDate == value)
					return;
					
				OnColumnChanging(EdStudColumn.VisaIssueDate, this.entityData.VisaIssueDate);
				this.entityData.VisaIssueDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.VisaIssueDate, this.entityData.VisaIssueDate);
				OnPropertyChanged("VisaIssueDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the VisaExpireDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsVisaExpireDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? VisaExpireDate
		{
			get
			{
				return this.entityData.VisaExpireDate; 
			}
			
			set
			{
				if (this.entityData.VisaExpireDate == value)
					return;
					
				OnColumnChanging(EdStudColumn.VisaExpireDate, this.entityData.VisaExpireDate);
				this.entityData.VisaExpireDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.VisaExpireDate, this.entityData.VisaExpireDate);
				OnPropertyChanged("VisaExpireDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeFormId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeFormIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeFormId
		{
			get
			{
				return this.entityData.SeFormId; 
			}
			
			set
			{
				if (this.entityData.SeFormId == value)
					return;
					
				OnColumnChanging(EdStudColumn.SeFormId, this.entityData.SeFormId);
				this.entityData.SeFormId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.SeFormId, this.entityData.SeFormId);
				OnPropertyChanged("SeFormId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(EdStudColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(EdStudColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CovidFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsCovidFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? CovidFlg
		{
			get
			{
				return this.entityData.CovidFlg; 
			}
			
			set
			{
				if (this.entityData.CovidFlg == value)
					return;
					
				OnColumnChanging(EdStudColumn.CovidFlg, this.entityData.CovidFlg);
				this.entityData.CovidFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudColumn.CovidFlg, this.entityData.CovidFlg);
				OnPropertyChanged("CovidFlg");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeBlood"/>.
		/// </summary>
		/// <value>The source GsCdeBlood for GsCdeBloodId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeBlood GsCdeBloodIdSource
      	{
            get { return entityData.GsCdeBloodIdSource; }
            set { entityData.GsCdeBloodIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeMaritalStatus"/>.
		/// </summary>
		/// <value>The source GsCdeMaritalStatus for GsCdeMaritalStatusId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeMaritalStatus GsCdeMaritalStatusIdSource
      	{
            get { return entityData.GsCdeMaritalStatusIdSource; }
            set { entityData.GsCdeMaritalStatusIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeGender"/>.
		/// </summary>
		/// <value>The source GsCodeGender for GsCodeGenderId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeGender GsCodeGenderIdSource
      	{
            get { return entityData.GsCodeGenderIdSource; }
            set { entityData.GsCodeGenderIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeIdentType"/>.
		/// </summary>
		/// <value>The source GsCodeIdentType for GsCodeIdentTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeIdentType GsCodeIdentTypeIdSource
      	{
            get { return entityData.GsCodeIdentTypeIdSource; }
            set { entityData.GsCodeIdentTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeLanguage"/>.
		/// </summary>
		/// <value>The source GsCodeLanguage for GsCodeLanguageId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeLanguage GsCodeLanguageIdSource
      	{
            get { return entityData.GsCodeLanguageIdSource; }
            set { entityData.GsCodeLanguageIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeReligion"/>.
		/// </summary>
		/// <value>The source GsCodeReligion for GsCodeReligionId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeReligion GsCodeReligionIdSource
      	{
            get { return entityData.GsCodeReligionIdSource; }
            set { entityData.GsCodeReligionIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryInfoId1.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCountryNode GsCountryInfoId1Source
      	{
            get { return entityData.GsCountryInfoId1Source; }
            set { entityData.GsCountryInfoId1Source = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsBirthCountryNodeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCountryNode GsBirthCountryNodeIdSource
      	{
            get { return entityData.GsBirthCountryNodeIdSource; }
            set { entityData.GsBirthCountryNodeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SaStfMember"/>.
		/// </summary>
		/// <value>The source SaStfMember for SaStfMemberPrntId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SaStfMember SaStfMemberPrntIdSource
      	{
            get { return entityData.SaStfMemberPrntIdSource; }
            set { entityData.SaStfMemberPrntIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of EdStudFaculty objects
		///	which are related to this object through the relation FK_AUTO_004d
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudFaculty> EdStudFacultyCollection
		{
			get { return entityData.EdStudFacultyCollection; }
			set { entityData.EdStudFacultyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudTrans objects
		///	which are related to this object through the relation FK_ED_STUD_TRANS_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudTrans> EdStudTransCollection
		{
			get { return entityData.EdStudTransCollection; }
			set { entityData.EdStudTransCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudAskAdvRe objects
		///	which are related to this object through the relation FK_SV_STUD_ASK_ADV_RE_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudAskAdvRe> SvStudAskAdvReCollection
		{
			get { return entityData.SvStudAskAdvReCollection; }
			set { entityData.SvStudAskAdvReCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomStudResponsible objects
		///	which are related to this object through the relation FK_ACCOM_STUD_RESPONSIBLE_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomStudResponsible> AccomStudResponsibleCollection
		{
			get { return entityData.AccomStudResponsibleCollection; }
			set { entityData.AccomStudResponsibleCollection = value; }	
		}

		/// <summary>
		///	Holds a FeeStudBank object
		///	which is related to this object through the relation FeeStudBank
		/// </summary>
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeStudBank FeeStudBank
		{
			get { return entityData.FeeStudBank; }
			set { entityData.FeeStudBank = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRegPre objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_PRE_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRegPre> EdStudCourseRegPreCollection
		{
			get { return entityData.EdStudCourseRegPreCollection; }
			set { entityData.EdStudCourseRegPreCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudStaffEvalExt objects
		///	which are related to this object through the relation FK_SV_STUD_STAFF_EVAL_EXT_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudStaffEvalExt> SvStudStaffEvalExtCollection
		{
			get { return entityData.SvStudStaffEvalExtCollection; }
			set { entityData.SvStudStaffEvalExtCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudSemesterTemp objects
		///	which are related to this object through the relation FK_ED_STUD_SEMESTER_OLD_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudSemesterTemp> EdStudSemesterTempCollection
		{
			get { return entityData.EdStudSemesterTempCollection; }
			set { entityData.EdStudSemesterTempCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MdiStudProblem objects
		///	which are related to this object through the relation FK_MDI_STUD_PROBLEM_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MdiStudProblem> MdiStudProblemCollection
		{
			get { return entityData.MdiStudProblemCollection; }
			set { entityData.MdiStudProblemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudInstallment objects
		///	which are related to this object through the relation FEE_STUD_INSTALLMENT_fk5
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudInstallment> FeeStudInstallmentCollection
		{
			get { return entityData.FeeStudInstallmentCollection; }
			set { entityData.FeeStudInstallmentCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScStudGroup objects
		///	which are related to this object through the relation FK_SC_STUD_GROUP_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScStudGroup> ScStudGroupCollection
		{
			get { return entityData.ScStudGroupCollection; }
			set { entityData.ScStudGroupCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudMltryCrs objects
		///	which are related to this object through the relation FK_ED_STUD_MLTRY_CRS_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudMltryCrs> EdStudMltryCrsCollection
		{
			get { return entityData.EdStudMltryCrsCollection; }
			set { entityData.EdStudMltryCrsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of RsrchStudRegister objects
		///	which are related to this object through the relation FK_RSRCH_STUD_REGISTER_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<RsrchStudRegister> RsrchStudRegisterCollection
		{
			get { return entityData.RsrchStudRegisterCollection; }
			set { entityData.RsrchStudRegisterCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdTrainStud objects
		///	which are related to this object through the relation FK_ED_TRAIN_STUD_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdTrainStud> EdTrainStudCollection
		{
			get { return entityData.EdTrainStudCollection; }
			set { entityData.EdTrainStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudMilitaryState objects
		///	which are related to this object through the relation FK_AUTO_02a9
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudMilitaryState> EdStudMilitaryStateCollection
		{
			get { return entityData.EdStudMilitaryStateCollection; }
			set { entityData.EdStudMilitaryStateCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudGraduationAward objects
		///	which are related to this object through the relation FK_AUTO_00e9
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudGraduationAward> EdStudGraduationAwardCollection
		{
			get { return entityData.EdStudGraduationAwardCollection; }
			set { entityData.EdStudGraduationAwardCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudGuard objects
		///	which are related to this object through the relation FK_ED_STUD_GUARD_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudGuard> EdStudGuardCollection
		{
			get { return entityData.EdStudGuardCollection; }
			set { entityData.EdStudGuardCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudTransFromReq objects
		///	which are related to this object through the relation FK_ED_STUD_TRANS_FROM_REQ_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudTransFromReq> EdStudTransFromReqCollection
		{
			get { return entityData.EdStudTransFromReqCollection; }
			set { entityData.EdStudTransFromReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudStaffEval objects
		///	which are related to this object through the relation FK_SV_STUD_STAFF_EVAL_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudStaffEval> SvStudStaffEvalCollection
		{
			get { return entityData.SvStudStaffEvalCollection; }
			set { entityData.SvStudStaffEvalCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsStateFrom objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRANS_STATE_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsStateFrom> EdStudIntTrnsStateFromCollection
		{
			get { return entityData.EdStudIntTrnsStateFromCollection; }
			set { entityData.EdStudIntTrnsStateFromCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAcadWarn objects
		///	which are related to this object through the relation FK_ED_STUD_ACAD_WARN_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAcadWarn> EdStudAcadWarnCollection
		{
			get { return entityData.EdStudAcadWarnCollection; }
			set { entityData.EdStudAcadWarnCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MdiStudHosptl objects
		///	which are related to this object through the relation FK_MDI_STUD_HSPTL_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MdiStudHosptl> MdiStudHosptlCollection
		{
			get { return entityData.MdiStudHosptlCollection; }
			set { entityData.MdiStudHosptlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudLang objects
		///	which are related to this object through the relation FK_ED_STUD_LANG_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudLang> EdStudLangCollection
		{
			get { return entityData.EdStudLangCollection; }
			set { entityData.EdStudLangCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MdiStudRecord objects
		///	which are related to this object through the relation FK_MDI_STUD_RECORD_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MdiStudRecord> MdiStudRecordCollection
		{
			get { return entityData.MdiStudRecordCollection; }
			set { entityData.MdiStudRecordCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudLateness objects
		///	which are related to this object through the relation FK_Ed_Stud_Lateness_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudLateness> EdStudLatenessCollection
		{
			get { return entityData.EdStudLatenessCollection; }
			set { entityData.EdStudLatenessCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudItemCncl objects
		///	which are related to this object through the relation FK_FEE_STUD_ITEM_CNCL_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudItemCncl> FeeStudItemCnclCollection
		{
			get { return entityData.FeeStudItemCnclCollection; }
			set { entityData.FeeStudItemCnclCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudActivity objects
		///	which are related to this object through the relation FK_ED_STUD_HOBBY_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudActivity> EdStudActivityCollection
		{
			get { return entityData.EdStudActivityCollection; }
			set { entityData.EdStudActivityCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudPayPostpone objects
		///	which are related to this object through the relation FK_FEE_STUD_PAY_POSTPONE_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudPayPostpone> FeeStudPayPostponeCollection
		{
			get { return entityData.FeeStudPayPostponeCollection; }
			set { entityData.FeeStudPayPostponeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudRsdncy objects
		///	which are related to this object through the relation FK_ED_STUD_RSDNCY_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudRsdncy> EdStudRsdncyCollection
		{
			get { return entityData.EdStudRsdncyCollection; }
			set { entityData.EdStudRsdncyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MltStudInfo objects
		///	which are related to this object through the relation FK_MLT_STUD_INFO_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MltStudInfo> MltStudInfoCollection
		{
			get { return entityData.MltStudInfoCollection; }
			set { entityData.MltStudInfoCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudLockerReq objects
		///	which are related to this object through the relation FK_SV_STUD_LOCKER_REQ_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudLockerReq> SvStudLockerReqCollection
		{
			get { return entityData.SvStudLockerReqCollection; }
			set { entityData.SvStudLockerReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudMission objects
		///	which are related to this object through the relation FK_ED_STUD_MISSION_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudMission> EdStudMissionCollection
		{
			get { return entityData.EdStudMissionCollection; }
			set { entityData.EdStudMissionCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppWorkExper objects
		///	which are related to this object through the relation FK_ADM_APP_WORK_EXPER_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppWorkExper> AdmAppWorkExperCollection
		{
			get { return entityData.AdmAppWorkExperCollection; }
			set { entityData.AdmAppWorkExperCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudNote objects
		///	which are related to this object through the relation FK_AUTO_02ab
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudNote> EdStudNoteCollection
		{
			get { return entityData.EdStudNoteCollection; }
			set { entityData.EdStudNoteCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAcadmicAdv objects
		///	which are related to this object through the relation FK_ED_STUD_ACADMIC_ADV_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAcadmicAdv> EdStudAcadmicAdvCollection
		{
			get { return entityData.EdStudAcadmicAdvCollection; }
			set { entityData.EdStudAcadmicAdvCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CtrSrvcCrew objects
		///	which are related to this object through the relation FK_CTR_SRVC_CREW_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CtrSrvcCrew> CtrSrvcCrewCollection
		{
			get { return entityData.CtrSrvcCrewCollection; }
			set { entityData.CtrSrvcCrewCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SeBlockTrans objects
		///	which are related to this object through the relation FK_SE_BLOCK_TRANS_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SeBlockTrans> SeBlockTransCollection
		{
			get { return entityData.SeBlockTransCollection; }
			set { entityData.SeBlockTransCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoSponsorStud objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_STUD_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorStud> SpoSponsorStudCollection
		{
			get { return entityData.SpoSponsorStudCollection; }
			set { entityData.SpoSponsorStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AlmJob objects
		///	which are related to this object through the relation FK_ALM_JOB_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AlmJob> AlmJobCollection
		{
			get { return entityData.AlmJobCollection; }
			set { entityData.AlmJobCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudVoucher objects
		///	which are related to this object through the relation FK_FEE_STUD_VOUCHER_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudVoucher> FeeStudVoucherCollection
		{
			get { return entityData.FeeStudVoucherCollection; }
			set { entityData.FeeStudVoucherCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoSponsorStudSemester objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_STUD_SEMESTER_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorStudSemester> SpoSponsorStudSemesterCollection
		{
			get { return entityData.SpoSponsorStudSemesterCollection; }
			set { entityData.SpoSponsorStudSemesterCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudFund objects
		///	which are related to this object through the relation FK_FEE_STUD_FUND_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudFund> FeeStudFundCollection
		{
			get { return entityData.FeeStudFundCollection; }
			set { entityData.FeeStudFundCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgStudTravel objects
		///	which are related to this object through the relation FK_PG_STUD_TRAVEL_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgStudTravel> PgStudTravelCollection
		{
			get { return entityData.PgStudTravelCollection; }
			set { entityData.PgStudTravelCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CtrStudOut objects
		///	which are related to this object through the relation FK_CTR_STUD_OUT_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CtrStudOut> CtrStudOutCollection
		{
			get { return entityData.CtrStudOutCollection; }
			set { entityData.CtrStudOutCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudDisc objects
		///	which are related to this object through the relation FK_AUTO_000b
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudDisc> FeeStudDiscCollection
		{
			get { return entityData.FeeStudDiscCollection; }
			set { entityData.FeeStudDiscCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudSport objects
		///	which are related to this object through the relation FK_ED_STUD_SPORT_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudSport> EdStudSportCollection
		{
			get { return entityData.EdStudSportCollection; }
			set { entityData.EdStudSportCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MdiStudVacc objects
		///	which are related to this object through the relation FK_MDI_STUD_VACC_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MdiStudVacc> MdiStudVaccCollection
		{
			get { return entityData.MdiStudVaccCollection; }
			set { entityData.MdiStudVaccCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CtrStudExp objects
		///	which are related to this object through the relation FK_CTR_STUD_EXP_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CtrStudExp> CtrStudExpCollection
		{
			get { return entityData.CtrStudExpCollection; }
			set { entityData.CtrStudExpCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MdiStudClnq objects
		///	which are related to this object through the relation FK_MDI_STUD_CLNQ_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MdiStudClnq> MdiStudClnqCollection
		{
			get { return entityData.MdiStudClnqCollection; }
			set { entityData.MdiStudClnqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgThesisStud objects
		///	which are related to this object through the relation FK_PG_THESIS_STUD_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisStud> PgThesisStudCollection
		{
			get { return entityData.PgThesisStudCollection; }
			set { entityData.PgThesisStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudRetrieveRequest objects
		///	which are related to this object through the relation FK_FEE_STUD_RETRIEVE_REQUEST_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudRetrieveRequest> FeeStudRetrieveRequestCollection
		{
			get { return entityData.FeeStudRetrieveRequestCollection; }
			set { entityData.FeeStudRetrieveRequestCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudViol objects
		///	which are related to this object through the relation FK_ED_STUD_VIOL_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudViol> EdStudViolCollection
		{
			get { return entityData.EdStudViolCollection; }
			set { entityData.EdStudViolCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmApplicant objects
		///	which are related to this object through the relation FK_ADM_APPLICANT_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmApplicant> AdmApplicantCollection
		{
			get { return entityData.AdmApplicantCollection; }
			set { entityData.AdmApplicantCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsCourseFrom objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_COURSE_FROM_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsCourseFrom> EdStudIntTrnsCourseFromCollection
		{
			get { return entityData.EdStudIntTrnsCourseFromCollection; }
			set { entityData.EdStudIntTrnsCourseFromCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomStudAbsence objects
		///	which are related to this object through the relation FK_ACCOM_STUD_ABSENCE_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomStudAbsence> AccomStudAbsenceCollection
		{
			get { return entityData.AccomStudAbsenceCollection; }
			set { entityData.AccomStudAbsenceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeItemTrnsBlnc objects
		///	which are related to this object through the relation FK_FEE_ITEM_TRNS_BLNC_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeItemTrnsBlnc> FeeItemTrnsBlncCollection
		{
			get { return entityData.FeeItemTrnsBlncCollection; }
			set { entityData.FeeItemTrnsBlncCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmScholorship objects
		///	which are related to this object through the relation FK_ADM_SCHOLORSHIP_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmScholorship> AdmScholorshipCollection
		{
			get { return entityData.AdmScholorshipCollection; }
			set { entityData.AdmScholorshipCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudInstallmentRequest objects
		///	which are related to this object through the relation FK_FEE_STUD_INSTALLMENT_REQUEST_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudInstallmentRequest> FeeStudInstallmentRequestCollection
		{
			get { return entityData.FeeStudInstallmentRequestCollection; }
			set { entityData.FeeStudInstallmentRequestCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudGrantTemp objects
		///	which are related to this object through the relation FK_ED_STUD_GRANT_TEMP_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudGrantTemp> EdStudGrantTempCollection
		{
			get { return entityData.EdStudGrantTempCollection; }
			set { entityData.EdStudGrantTempCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudAllowance objects
		///	which are related to this object through the relation FK_FEE_STUD_ALLOWANCE_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudAllowance> FeeStudAllowanceCollection
		{
			get { return entityData.FeeStudAllowanceCollection; }
			set { entityData.FeeStudAllowanceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeInvoice objects
		///	which are related to this object through the relation FK_FEE_INVOICE_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeInvoice> FeeInvoiceCollection
		{
			get { return entityData.FeeInvoiceCollection; }
			set { entityData.FeeInvoiceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudProblem objects
		///	which are related to this object through the relation FK_ED_STUD_PROBLEM_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudProblem> EdStudProblemCollection
		{
			get { return entityData.EdStudProblemCollection; }
			set { entityData.EdStudProblemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AlmPrintRequest objects
		///	which are related to this object through the relation FK_ALM_PRINT_REQUEST_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AlmPrintRequest> AlmPrintRequestCollection
		{
			get { return entityData.AlmPrintRequestCollection; }
			set { entityData.AlmPrintRequestCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeInstlmntStud objects
		///	which are related to this object through the relation FK_FEE_INSTLMNT_STUD_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeInstlmntStud> FeeInstlmntStudCollection
		{
			get { return entityData.FeeInstlmntStudCollection; }
			set { entityData.FeeInstlmntStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCodeChng objects
		///	which are related to this object through the relation FK_ED_STUD_CODE_CHNG_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCodeChng> EdStudCodeChngCollection
		{
			get { return entityData.EdStudCodeChngCollection; }
			set { entityData.EdStudCodeChngCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudGrantDegree objects
		///	which are related to this object through the relation FK_ED_STUD_GRANT_DEGREE_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudGrantDegree> EdStudGrantDegreeCollection
		{
			get { return entityData.EdStudGrantDegreeCollection; }
			set { entityData.EdStudGrantDegreeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdProjStud objects
		///	which are related to this object through the relation FK_ED_PROJ_STUD_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdProjStud> EdProjStudCollection
		{
			get { return entityData.EdProjStudCollection; }
			set { entityData.EdProjStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudExmptReq objects
		///	which are related to this object through the relation FK_ED_STUD_EXMPT_REQ_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudExmptReq> EdStudExmptReqCollection
		{
			get { return entityData.EdStudExmptReqCollection; }
			set { entityData.EdStudExmptReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppDoc objects
		///	which are related to this object through the relation FK_ADM_APP_DOC_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppDoc> AdmAppDocCollection
		{
			get { return entityData.AdmAppDocCollection; }
			set { entityData.AdmAppDocCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of RsrchStudPostponeReq objects
		///	which are related to this object through the relation FK_RSRCH_STUD_POSTPONE_REQ_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<RsrchStudPostponeReq> RsrchStudPostponeReqCollection
		{
			get { return entityData.RsrchStudPostponeReqCollection; }
			set { entityData.RsrchStudPostponeReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of TrnsStudCarStkr objects
		///	which are related to this object through the relation FK_TRNS_STUD_CAR_STKR_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<TrnsStudCarStkr> TrnsStudCarStkrCollection
		{
			get { return entityData.TrnsStudCarStkrCollection; }
			set { entityData.TrnsStudCarStkrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgThesisNote objects
		///	which are related to this object through the relation FK_PG_THESIS_NOTE_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisNote> PgThesisNoteCollection
		{
			get { return entityData.PgThesisNoteCollection; }
			set { entityData.PgThesisNoteCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudNatSimilarityRequest objects
		///	which are related to this object through the relation FK_FEE_STUD_NAT_SIMILARITY_REQUEST_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudNatSimilarityRequest> FeeStudNatSimilarityRequestCollection
		{
			get { return entityData.FeeStudNatSimilarityRequestCollection; }
			set { entityData.FeeStudNatSimilarityRequestCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudSemester objects
		///	which are related to this object through the relation FK_ED_STUD_SEMESTER_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudSemester> EdStudSemesterCollection
		{
			get { return entityData.EdStudSemesterCollection; }
			set { entityData.EdStudSemesterCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvSrvyRespondQstn objects
		///	which are related to this object through the relation FK_SV_SRVY_RESPOND_QSTN_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvSrvyRespondQstn> SvSrvyRespondQstnCollection
		{
			get { return entityData.SvSrvyRespondQstnCollection; }
			set { entityData.SvSrvyRespondQstnCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudExecuseReq objects
		///	which are related to this object through the relation FK_ED_STUD_EXECUSE_REQ_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudExecuseReq> EdStudExecuseReqCollection
		{
			get { return entityData.EdStudExecuseReqCollection; }
			set { entityData.EdStudExecuseReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeRefndStdReq objects
		///	which are related to this object through the relation FK_REFUND_STUD_REQ_MASTER_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeRefndStdReq> FeeRefndStdReqCollection
		{
			get { return entityData.FeeRefndStdReqCollection; }
			set { entityData.FeeRefndStdReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudPoll objects
		///	which are related to this object through the relation FK_SV_STUD_POLL_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudPoll> SvStudPollCollection
		{
			get { return entityData.SvStudPollCollection; }
			set { entityData.SvStudPollCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAbsence objects
		///	which are related to this object through the relation FK_ED_STUD_ABSENCE_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAbsence> EdStudAbsenceCollection
		{
			get { return entityData.EdStudAbsenceCollection; }
			set { entityData.EdStudAbsenceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudCoursesItem objects
		///	which are related to this object through the relation FK_FEE_STUD_COURSES_ITEM_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudCoursesItem> FeeStudCoursesItemCollection
		{
			get { return entityData.FeeStudCoursesItemCollection; }
			set { entityData.FeeStudCoursesItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAbsFw objects
		///	which are related to this object through the relation FK_ED_STUD_ABS_FW_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAbsFw> EdStudAbsFwCollection
		{
			get { return entityData.EdStudAbsFwCollection; }
			set { entityData.EdStudAbsFwCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdAcdadvRmk objects
		///	which are related to this object through the relation FK_ED_ACDADV_RMK_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdAcdadvRmk> EdAcdadvRmkCollection
		{
			get { return entityData.EdAcdadvRmkCollection; }
			set { entityData.EdAcdadvRmkCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseComp objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_COMP_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseComp> EdStudCourseCompCollection
		{
			get { return entityData.EdStudCourseCompCollection; }
			set { entityData.EdStudCourseCompCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudCourseEval objects
		///	which are related to this object through the relation FK_SV_STUD_COURSE_EVAL_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudCourseEval> SvStudCourseEvalCollection
		{
			get { return entityData.SvStudCourseEvalCollection; }
			set { entityData.SvStudCourseEvalCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppDisability objects
		///	which are related to this object through the relation FK_ADM_APP_DISABILITY_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppDisability> AdmAppDisabilityCollection
		{
			get { return entityData.AdmAppDisabilityCollection; }
			set { entityData.AdmAppDisabilityCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudContactMethod objects
		///	which are related to this object through the relation FK_ED_STUD_CONTACT_METHOD_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudContactMethod> EdStudContactMethodCollection
		{
			get { return entityData.EdStudContactMethodCollection; }
			set { entityData.EdStudContactMethodCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomStudReq objects
		///	which are related to this object through the relation FK_ACCOM_STUD_REQ_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomStudReq> AccomStudReqCollection
		{
			get { return entityData.AccomStudReqCollection; }
			set { entityData.AccomStudReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdResidencyStud objects
		///	which are related to this object through the relation FK_ED_RESIDENCY_STUD_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdResidencyStud> EdResidencyStudCollection
		{
			get { return entityData.EdResidencyStudCollection; }
			set { entityData.EdResidencyStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudStateTemp objects
		///	which are related to this object through the relation FK_ED_STUD_STATE_TEMP_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudStateTemp> EdStudStateTempCollection
		{
			get { return entityData.EdStudStateTempCollection; }
			set { entityData.EdStudStateTempCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgStudPublish objects
		///	which are related to this object through the relation FK_PG_STUD_PUBLISH_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgStudPublish> PgStudPublishCollection
		{
			get { return entityData.PgStudPublishCollection; }
			set { entityData.PgStudPublishCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsCourseTo objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_COURSE_TO_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsCourseTo> EdStudIntTrnsCourseToCollection
		{
			get { return entityData.EdStudIntTrnsCourseToCollection; }
			set { entityData.EdStudIntTrnsCourseToCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsStateTo objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_STATE_TO_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsStateTo> EdStudIntTrnsStateToCollection
		{
			get { return entityData.EdStudIntTrnsStateToCollection; }
			set { entityData.EdStudIntTrnsStateToCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudFeeItem objects
		///	which are related to this object through the relation FK_FEE_STUD_FEE_ITEM_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudFeeItem> FeeStudFeeItemCollection
		{
			get { return entityData.FeeStudFeeItemCollection; }
			set { entityData.FeeStudFeeItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdPrintReq objects
		///	which are related to this object through the relation FK_ED_PRINT_REQ_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdPrintReq> EdPrintReqCollection
		{
			get { return entityData.EdPrintReqCollection; }
			set { entityData.EdPrintReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GsAddressDtl objects
		///	which are related to this object through the relation FK_ED_STUD_ADDRESS_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GsAddressDtl> GsAddressDtlCollection
		{
			get { return entityData.GsAddressDtlCollection; }
			set { entityData.GsAddressDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of TrnsStudReq objects
		///	which are related to this object through the relation FK_TRNS_LINE_STUD_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<TrnsStudReq> TrnsStudReqCollection
		{
			get { return entityData.TrnsStudReqCollection; }
			set { entityData.TrnsStudReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudAskAdv objects
		///	which are related to this object through the relation FK_SV_STUD_ASK_ADV_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudAskAdv> SvStudAskAdvCollection
		{
			get { return entityData.SvStudAskAdvCollection; }
			set { entityData.SvStudAskAdvCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomStudBook objects
		///	which are related to this object through the relation FK_ACCOM_STUD_BOOK_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomStudBook> AccomStudBookCollection
		{
			get { return entityData.AccomStudBookCollection; }
			set { entityData.AccomStudBookCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudCourseEvalExt objects
		///	which are related to this object through the relation FK_SV_STUD_COURSE_EVAL_EXT_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudCourseEvalExt> SvStudCourseEvalExtCollection
		{
			get { return entityData.SvStudCourseEvalExtCollection; }
			set { entityData.SvStudCourseEvalExtCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrns objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrns> EdStudIntTrnsCollection
		{
			get { return entityData.EdStudIntTrnsCollection; }
			set { entityData.EdStudIntTrnsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudComp objects
		///	which are related to this object through the relation FK_SV_STUD_COMP_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudComp> SvStudCompCollection
		{
			get { return entityData.SvStudCompCollection; }
			set { entityData.SvStudCompCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudExcuse objects
		///	which are related to this object through the relation FK_ED_STUD_EXCUSE_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudExcuse> EdStudExcuseCollection
		{
			get { return entityData.EdStudExcuseCollection; }
			set { entityData.EdStudExcuseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudQual objects
		///	which are related to this object through the relation FK_AUTO_0280
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudQual> EdStudQualCollection
		{
			get { return entityData.EdStudQualCollection; }
			set { entityData.EdStudQualCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MltRptDayOutStud objects
		///	which are related to this object through the relation FK_MLT_RPT_DAY_OUT_STUD_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MltRptDayOutStud> MltRptDayOutStudCollection
		{
			get { return entityData.MltRptDayOutStudCollection; }
			set { entityData.MltRptDayOutStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudRsrvRegTime objects
		///	which are related to this object through the relation FK_ED_STUD_RSRV_REG_TIME_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudRsrvRegTime> EdStudRsrvRegTimeCollection
		{
			get { return entityData.EdStudRsrvRegTimeCollection; }
			set { entityData.EdStudRsrvRegTimeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppLanguages objects
		///	which are related to this object through the relation FK_ADM_APP_LANGUAGES_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppLanguages> AdmAppLanguagesCollection
		{
			get { return entityData.AdmAppLanguagesCollection; }
			set { entityData.AdmAppLanguagesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgStudConference objects
		///	which are related to this object through the relation FK_PG_STUD_CONFERENCE_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgStudConference> PgStudConferenceCollection
		{
			get { return entityData.PgStudConferenceCollection; }
			set { entityData.PgStudConferenceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudMilitaryInfo objects
		///	which are related to this object through the relation FK_AUTO_02af
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudMilitaryInfo> EdStudMilitaryInfoCollection
		{
			get { return entityData.EdStudMilitaryInfoCollection; }
			set { entityData.EdStudMilitaryInfoCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of IntegUserAdLogDtl objects
		///	which are related to this object through the relation FK_INTEG_USER_AD_LOG_DTL_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<IntegUserAdLogDtl> IntegUserAdLogDtlCollection
		{
			get { return entityData.IntegUserAdLogDtlCollection; }
			set { entityData.IntegUserAdLogDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomStudAbsenceWarn objects
		///	which are related to this object through the relation FK_ACCOM_STUD_ABSENCE_WARN_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomStudAbsenceWarn> AccomStudAbsenceWarnCollection
		{
			get { return entityData.AccomStudAbsenceWarnCollection; }
			set { entityData.AccomStudAbsenceWarnCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmEnglishProficiency objects
		///	which are related to this object through the relation FK_ADM_ENGLISH_PROFICIENCY_ED_STUD
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmEnglishProficiency> AdmEnglishProficiencyCollection
		{
			get { return entityData.AdmEnglishProficiencyCollection; }
			set { entityData.AdmEnglishProficiencyCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("NationalNumber", "National Number", 30));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("FullNameAr", "Full Name Ar"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FullNameAr", "Full Name Ar", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ClFullNameAr", "Cl Full Name Ar", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StudNameAr", "Stud Name Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ClStudNameAr", "Cl Stud Name Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FatherNameAr", "Father Name Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ClFatherNameAr", "Cl Father Name Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("GrandfatherNameAr", "Grandfather Name Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ClGrandfatherNameAr", "Cl Grandfather Name Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FamilyNameAr", "Family Name Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ClFamilyNameAr", "Cl Family Name Ar", 50));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("FullNameEn", "Full Name En"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FullNameEn", "Full Name En", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StudNameEn", "Stud Name En", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FatherNameEn", "Father Name En", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("GrandfatherNameEn", "Grandfather Name En", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FamilyNameEn", "Family Name En", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FatherProfession", "Father Profession", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FatherNationalNumber", "Father National Number", 30));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MotherNationalNumber", "Mother National Number", 30));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MotherNameAr", "Mother Name Ar", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ClMotherNameAr", "Cl Mother Name Ar", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MotherNameEn", "Mother Name En", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("BirthRegNumber", "Birth Reg Number", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StudPhoto", "Stud Photo", 350));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("IdentIssuePlc", "Ident Issue Plc", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PassporNo", "Passpor No", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("HecId", "Hec Id", 30));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("VisaNumber", "Visa Number", 50));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ED_STUD"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ED_STUD_ID", "NATIONAL_NUMBER", "FULL_NAME_AR", "CL_FULL_NAME_AR", "STUD_NAME_AR", "CL_STUD_NAME_AR", "FATHER_NAME_AR", "CL_FATHER_NAME_AR", "GRANDFATHER_NAME_AR", "CL_GRANDFATHER_NAME_AR", "FAMILY_NAME_AR", "CL_FAMILY_NAME_AR", "FULL_NAME_EN", "STUD_NAME_EN", "FATHER_NAME_EN", "GRANDFATHER_NAME_EN", "FAMILY_NAME_EN", "FATHER_PROFESSION", "FATHER_NATIONAL_NUMBER", "MOTHER_NATIONAL_NUMBER", "MOTHER_NAME_AR", "CL_MOTHER_NAME_AR", "MOTHER_NAME_EN", "GS_CODE_GENDER_ID", "GS_CODE_RELIGION_ID", "BIRTH_REG_NUMBER", "BIRTH_DATE", "GS_BIRTH_COUNTRY_NODE_ID", "GS_COUNTRY_INFO_ID_1", "GS_COUNTRY_INFO_ID_2", "STUD_PHOTO", "GS_CODE_IDENT_TYPE_ID", "IS_PRNT_STAFF", "SA_STF_MEMBER_PRNT_ID", "GS_CDE_BLOOD_ID", "STUD_LNHT", "STUD_WGHT", "IDENT_ISSUE_PLC", "GS_CODE_LANGUAGE_ID", "PASSPOR_NO", "PASSPOR_EXPIRE_DATE", "PASSPOR_ISSUE_DATE", "SPECIAL_NEED_FLG", "EMPLOYEE_FLG", "IDENT_ISSUE_DATE", "IDENT_EXPIRE_DATE", "HEC_ID", "GS_CDE_MARITAL_STATUS_ID", "MARRIAGE_DATE", "NO_CHILD", "VISA_NUMBER", "VISA_ISSUE_DATE", "VISA_EXPIRE_DATE", "SE_FORM_ID", "LAST_DATE", "SE_USER_ID", "COVID_FLG"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as EdStudEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (EdStud) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<EdStud>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as EdStud);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed EdStud Entity 
		///</summary>
		protected virtual EdStud Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			EdStud copy = new EdStud();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.EdStudId = this.EdStudId;
					copy.OriginalEdStudId = this.OriginalEdStudId;
				copy.NationalNumber = this.NationalNumber;
				copy.FullNameAr = this.FullNameAr;
				copy.ClFullNameAr = this.ClFullNameAr;
				copy.StudNameAr = this.StudNameAr;
				copy.ClStudNameAr = this.ClStudNameAr;
				copy.FatherNameAr = this.FatherNameAr;
				copy.ClFatherNameAr = this.ClFatherNameAr;
				copy.GrandfatherNameAr = this.GrandfatherNameAr;
				copy.ClGrandfatherNameAr = this.ClGrandfatherNameAr;
				copy.FamilyNameAr = this.FamilyNameAr;
				copy.ClFamilyNameAr = this.ClFamilyNameAr;
				copy.FullNameEn = this.FullNameEn;
				copy.StudNameEn = this.StudNameEn;
				copy.FatherNameEn = this.FatherNameEn;
				copy.GrandfatherNameEn = this.GrandfatherNameEn;
				copy.FamilyNameEn = this.FamilyNameEn;
				copy.FatherProfession = this.FatherProfession;
				copy.FatherNationalNumber = this.FatherNationalNumber;
				copy.MotherNationalNumber = this.MotherNationalNumber;
				copy.MotherNameAr = this.MotherNameAr;
				copy.ClMotherNameAr = this.ClMotherNameAr;
				copy.MotherNameEn = this.MotherNameEn;
				copy.GsCodeGenderId = this.GsCodeGenderId;
				copy.GsCodeReligionId = this.GsCodeReligionId;
				copy.BirthRegNumber = this.BirthRegNumber;
				copy.BirthDate = this.BirthDate;
				copy.GsBirthCountryNodeId = this.GsBirthCountryNodeId;
				copy.GsCountryInfoId1 = this.GsCountryInfoId1;
				copy.GsCountryInfoId2 = this.GsCountryInfoId2;
				copy.StudPhoto = this.StudPhoto;
				copy.GsCodeIdentTypeId = this.GsCodeIdentTypeId;
				copy.IsPrntStaff = this.IsPrntStaff;
				copy.SaStfMemberPrntId = this.SaStfMemberPrntId;
				copy.GsCdeBloodId = this.GsCdeBloodId;
				copy.StudLnht = this.StudLnht;
				copy.StudWght = this.StudWght;
				copy.IdentIssuePlc = this.IdentIssuePlc;
				copy.GsCodeLanguageId = this.GsCodeLanguageId;
				copy.PassporNo = this.PassporNo;
				copy.PassporExpireDate = this.PassporExpireDate;
				copy.PassporIssueDate = this.PassporIssueDate;
				copy.SpecialNeedFlg = this.SpecialNeedFlg;
				copy.EmployeeFlg = this.EmployeeFlg;
				copy.IdentIssueDate = this.IdentIssueDate;
				copy.IdentExpireDate = this.IdentExpireDate;
				copy.HecId = this.HecId;
				copy.GsCdeMaritalStatusId = this.GsCdeMaritalStatusId;
				copy.MarriageDate = this.MarriageDate;
				copy.NoChild = this.NoChild;
				copy.VisaNumber = this.VisaNumber;
				copy.VisaIssueDate = this.VisaIssueDate;
				copy.VisaExpireDate = this.VisaExpireDate;
				copy.SeFormId = this.SeFormId;
				copy.LastDate = this.LastDate;
				copy.SeUserId = this.SeUserId;
				copy.CovidFlg = this.CovidFlg;
			
			if (this.GsCdeBloodIdSource != null && existingCopies.Contains(this.GsCdeBloodIdSource))
				copy.GsCdeBloodIdSource = existingCopies[this.GsCdeBloodIdSource] as GsCdeBlood;
			else
				copy.GsCdeBloodIdSource = MakeCopyOf(this.GsCdeBloodIdSource, existingCopies) as GsCdeBlood;
			if (this.GsCdeMaritalStatusIdSource != null && existingCopies.Contains(this.GsCdeMaritalStatusIdSource))
				copy.GsCdeMaritalStatusIdSource = existingCopies[this.GsCdeMaritalStatusIdSource] as GsCdeMaritalStatus;
			else
				copy.GsCdeMaritalStatusIdSource = MakeCopyOf(this.GsCdeMaritalStatusIdSource, existingCopies) as GsCdeMaritalStatus;
			if (this.GsCodeGenderIdSource != null && existingCopies.Contains(this.GsCodeGenderIdSource))
				copy.GsCodeGenderIdSource = existingCopies[this.GsCodeGenderIdSource] as GsCodeGender;
			else
				copy.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource, existingCopies) as GsCodeGender;
			if (this.GsCodeIdentTypeIdSource != null && existingCopies.Contains(this.GsCodeIdentTypeIdSource))
				copy.GsCodeIdentTypeIdSource = existingCopies[this.GsCodeIdentTypeIdSource] as GsCodeIdentType;
			else
				copy.GsCodeIdentTypeIdSource = MakeCopyOf(this.GsCodeIdentTypeIdSource, existingCopies) as GsCodeIdentType;
			if (this.GsCodeLanguageIdSource != null && existingCopies.Contains(this.GsCodeLanguageIdSource))
				copy.GsCodeLanguageIdSource = existingCopies[this.GsCodeLanguageIdSource] as GsCodeLanguage;
			else
				copy.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource, existingCopies) as GsCodeLanguage;
			if (this.GsCodeReligionIdSource != null && existingCopies.Contains(this.GsCodeReligionIdSource))
				copy.GsCodeReligionIdSource = existingCopies[this.GsCodeReligionIdSource] as GsCodeReligion;
			else
				copy.GsCodeReligionIdSource = MakeCopyOf(this.GsCodeReligionIdSource, existingCopies) as GsCodeReligion;
			if (this.GsCountryInfoId1Source != null && existingCopies.Contains(this.GsCountryInfoId1Source))
				copy.GsCountryInfoId1Source = existingCopies[this.GsCountryInfoId1Source] as GsCountryNode;
			else
				copy.GsCountryInfoId1Source = MakeCopyOf(this.GsCountryInfoId1Source, existingCopies) as GsCountryNode;
			if (this.GsBirthCountryNodeIdSource != null && existingCopies.Contains(this.GsBirthCountryNodeIdSource))
				copy.GsBirthCountryNodeIdSource = existingCopies[this.GsBirthCountryNodeIdSource] as GsCountryNode;
			else
				copy.GsBirthCountryNodeIdSource = MakeCopyOf(this.GsBirthCountryNodeIdSource, existingCopies) as GsCountryNode;
			if (this.SaStfMemberPrntIdSource != null && existingCopies.Contains(this.SaStfMemberPrntIdSource))
				copy.SaStfMemberPrntIdSource = existingCopies[this.SaStfMemberPrntIdSource] as SaStfMember;
			else
				copy.SaStfMemberPrntIdSource = MakeCopyOf(this.SaStfMemberPrntIdSource, existingCopies) as SaStfMember;
		
			//deep copy nested objects
			copy.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection, existingCopies); 
			copy.EdStudTransCollection = (TList<EdStudTrans>) MakeCopyOf(this.EdStudTransCollection, existingCopies); 
			copy.SvStudAskAdvReCollection = (TList<SvStudAskAdvRe>) MakeCopyOf(this.SvStudAskAdvReCollection, existingCopies); 
			copy.AccomStudResponsibleCollection = (TList<AccomStudResponsible>) MakeCopyOf(this.AccomStudResponsibleCollection, existingCopies); 
			copy.FeeStudBank = (FeeStudBank) MakeCopyOf(this.FeeStudBank, existingCopies); 
			copy.EdStudCourseRegPreCollection = (TList<EdStudCourseRegPre>) MakeCopyOf(this.EdStudCourseRegPreCollection, existingCopies); 
			copy.SvStudStaffEvalExtCollection = (TList<SvStudStaffEvalExt>) MakeCopyOf(this.SvStudStaffEvalExtCollection, existingCopies); 
			copy.EdStudSemesterTempCollection = (TList<EdStudSemesterTemp>) MakeCopyOf(this.EdStudSemesterTempCollection, existingCopies); 
			copy.MdiStudProblemCollection = (TList<MdiStudProblem>) MakeCopyOf(this.MdiStudProblemCollection, existingCopies); 
			copy.FeeStudInstallmentCollection = (TList<FeeStudInstallment>) MakeCopyOf(this.FeeStudInstallmentCollection, existingCopies); 
			copy.ScStudGroupCollection = (TList<ScStudGroup>) MakeCopyOf(this.ScStudGroupCollection, existingCopies); 
			copy.EdStudMltryCrsCollection = (TList<EdStudMltryCrs>) MakeCopyOf(this.EdStudMltryCrsCollection, existingCopies); 
			copy.RsrchStudRegisterCollection = (TList<RsrchStudRegister>) MakeCopyOf(this.RsrchStudRegisterCollection, existingCopies); 
			copy.EdTrainStudCollection = (TList<EdTrainStud>) MakeCopyOf(this.EdTrainStudCollection, existingCopies); 
			copy.EdStudMilitaryStateCollection = (TList<EdStudMilitaryState>) MakeCopyOf(this.EdStudMilitaryStateCollection, existingCopies); 
			copy.EdStudGraduationAwardCollection = (TList<EdStudGraduationAward>) MakeCopyOf(this.EdStudGraduationAwardCollection, existingCopies); 
			copy.EdStudGuardCollection = (TList<EdStudGuard>) MakeCopyOf(this.EdStudGuardCollection, existingCopies); 
			copy.EdStudTransFromReqCollection = (TList<EdStudTransFromReq>) MakeCopyOf(this.EdStudTransFromReqCollection, existingCopies); 
			copy.SvStudStaffEvalCollection = (TList<SvStudStaffEval>) MakeCopyOf(this.SvStudStaffEvalCollection, existingCopies); 
			copy.EdStudIntTrnsStateFromCollection = (TList<EdStudIntTrnsStateFrom>) MakeCopyOf(this.EdStudIntTrnsStateFromCollection, existingCopies); 
			copy.EdStudAcadWarnCollection = (TList<EdStudAcadWarn>) MakeCopyOf(this.EdStudAcadWarnCollection, existingCopies); 
			copy.MdiStudHosptlCollection = (TList<MdiStudHosptl>) MakeCopyOf(this.MdiStudHosptlCollection, existingCopies); 
			copy.EdStudLangCollection = (TList<EdStudLang>) MakeCopyOf(this.EdStudLangCollection, existingCopies); 
			copy.MdiStudRecordCollection = (TList<MdiStudRecord>) MakeCopyOf(this.MdiStudRecordCollection, existingCopies); 
			copy.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection, existingCopies); 
			copy.FeeStudItemCnclCollection = (TList<FeeStudItemCncl>) MakeCopyOf(this.FeeStudItemCnclCollection, existingCopies); 
			copy.EdStudActivityCollection = (TList<EdStudActivity>) MakeCopyOf(this.EdStudActivityCollection, existingCopies); 
			copy.FeeStudPayPostponeCollection = (TList<FeeStudPayPostpone>) MakeCopyOf(this.FeeStudPayPostponeCollection, existingCopies); 
			copy.EdStudRsdncyCollection = (TList<EdStudRsdncy>) MakeCopyOf(this.EdStudRsdncyCollection, existingCopies); 
			copy.MltStudInfoCollection = (TList<MltStudInfo>) MakeCopyOf(this.MltStudInfoCollection, existingCopies); 
			copy.SvStudLockerReqCollection = (TList<SvStudLockerReq>) MakeCopyOf(this.SvStudLockerReqCollection, existingCopies); 
			copy.EdStudMissionCollection = (TList<EdStudMission>) MakeCopyOf(this.EdStudMissionCollection, existingCopies); 
			copy.AdmAppWorkExperCollection = (TList<AdmAppWorkExper>) MakeCopyOf(this.AdmAppWorkExperCollection, existingCopies); 
			copy.EdStudNoteCollection = (TList<EdStudNote>) MakeCopyOf(this.EdStudNoteCollection, existingCopies); 
			copy.EdStudAcadmicAdvCollection = (TList<EdStudAcadmicAdv>) MakeCopyOf(this.EdStudAcadmicAdvCollection, existingCopies); 
			copy.CtrSrvcCrewCollection = (TList<CtrSrvcCrew>) MakeCopyOf(this.CtrSrvcCrewCollection, existingCopies); 
			copy.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection, existingCopies); 
			copy.SpoSponsorStudCollection = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollection, existingCopies); 
			copy.AlmJobCollection = (TList<AlmJob>) MakeCopyOf(this.AlmJobCollection, existingCopies); 
			copy.FeeStudVoucherCollection = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollection, existingCopies); 
			copy.SpoSponsorStudSemesterCollection = (TList<SpoSponsorStudSemester>) MakeCopyOf(this.SpoSponsorStudSemesterCollection, existingCopies); 
			copy.FeeStudFundCollection = (TList<FeeStudFund>) MakeCopyOf(this.FeeStudFundCollection, existingCopies); 
			copy.PgStudTravelCollection = (TList<PgStudTravel>) MakeCopyOf(this.PgStudTravelCollection, existingCopies); 
			copy.CtrStudOutCollection = (TList<CtrStudOut>) MakeCopyOf(this.CtrStudOutCollection, existingCopies); 
			copy.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection, existingCopies); 
			copy.EdStudSportCollection = (TList<EdStudSport>) MakeCopyOf(this.EdStudSportCollection, existingCopies); 
			copy.MdiStudVaccCollection = (TList<MdiStudVacc>) MakeCopyOf(this.MdiStudVaccCollection, existingCopies); 
			copy.CtrStudExpCollection = (TList<CtrStudExp>) MakeCopyOf(this.CtrStudExpCollection, existingCopies); 
			copy.MdiStudClnqCollection = (TList<MdiStudClnq>) MakeCopyOf(this.MdiStudClnqCollection, existingCopies); 
			copy.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection, existingCopies); 
			copy.FeeStudRetrieveRequestCollection = (TList<FeeStudRetrieveRequest>) MakeCopyOf(this.FeeStudRetrieveRequestCollection, existingCopies); 
			copy.EdStudViolCollection = (TList<EdStudViol>) MakeCopyOf(this.EdStudViolCollection, existingCopies); 
			copy.AdmApplicantCollection = (TList<AdmApplicant>) MakeCopyOf(this.AdmApplicantCollection, existingCopies); 
			copy.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection, existingCopies); 
			copy.AccomStudAbsenceCollection = (TList<AccomStudAbsence>) MakeCopyOf(this.AccomStudAbsenceCollection, existingCopies); 
			copy.FeeItemTrnsBlncCollection = (TList<FeeItemTrnsBlnc>) MakeCopyOf(this.FeeItemTrnsBlncCollection, existingCopies); 
			copy.AdmScholorshipCollection = (TList<AdmScholorship>) MakeCopyOf(this.AdmScholorshipCollection, existingCopies); 
			copy.FeeStudInstallmentRequestCollection = (TList<FeeStudInstallmentRequest>) MakeCopyOf(this.FeeStudInstallmentRequestCollection, existingCopies); 
			copy.EdStudGrantTempCollection = (TList<EdStudGrantTemp>) MakeCopyOf(this.EdStudGrantTempCollection, existingCopies); 
			copy.FeeStudAllowanceCollection = (TList<FeeStudAllowance>) MakeCopyOf(this.FeeStudAllowanceCollection, existingCopies); 
			copy.FeeInvoiceCollection = (TList<FeeInvoice>) MakeCopyOf(this.FeeInvoiceCollection, existingCopies); 
			copy.EdStudProblemCollection = (TList<EdStudProblem>) MakeCopyOf(this.EdStudProblemCollection, existingCopies); 
			copy.AlmPrintRequestCollection = (TList<AlmPrintRequest>) MakeCopyOf(this.AlmPrintRequestCollection, existingCopies); 
			copy.FeeInstlmntStudCollection = (TList<FeeInstlmntStud>) MakeCopyOf(this.FeeInstlmntStudCollection, existingCopies); 
			copy.EdStudCodeChngCollection = (TList<EdStudCodeChng>) MakeCopyOf(this.EdStudCodeChngCollection, existingCopies); 
			copy.EdStudGrantDegreeCollection = (TList<EdStudGrantDegree>) MakeCopyOf(this.EdStudGrantDegreeCollection, existingCopies); 
			copy.EdProjStudCollection = (TList<EdProjStud>) MakeCopyOf(this.EdProjStudCollection, existingCopies); 
			copy.EdStudExmptReqCollection = (TList<EdStudExmptReq>) MakeCopyOf(this.EdStudExmptReqCollection, existingCopies); 
			copy.AdmAppDocCollection = (TList<AdmAppDoc>) MakeCopyOf(this.AdmAppDocCollection, existingCopies); 
			copy.RsrchStudPostponeReqCollection = (TList<RsrchStudPostponeReq>) MakeCopyOf(this.RsrchStudPostponeReqCollection, existingCopies); 
			copy.TrnsStudCarStkrCollection = (TList<TrnsStudCarStkr>) MakeCopyOf(this.TrnsStudCarStkrCollection, existingCopies); 
			copy.PgThesisNoteCollection = (TList<PgThesisNote>) MakeCopyOf(this.PgThesisNoteCollection, existingCopies); 
			copy.FeeStudNatSimilarityRequestCollection = (TList<FeeStudNatSimilarityRequest>) MakeCopyOf(this.FeeStudNatSimilarityRequestCollection, existingCopies); 
			copy.EdStudSemesterCollection = (TList<EdStudSemester>) MakeCopyOf(this.EdStudSemesterCollection, existingCopies); 
			copy.SvSrvyRespondQstnCollection = (TList<SvSrvyRespondQstn>) MakeCopyOf(this.SvSrvyRespondQstnCollection, existingCopies); 
			copy.EdStudExecuseReqCollection = (TList<EdStudExecuseReq>) MakeCopyOf(this.EdStudExecuseReqCollection, existingCopies); 
			copy.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection, existingCopies); 
			copy.SvStudPollCollection = (TList<SvStudPoll>) MakeCopyOf(this.SvStudPollCollection, existingCopies); 
			copy.EdStudAbsenceCollection = (TList<EdStudAbsence>) MakeCopyOf(this.EdStudAbsenceCollection, existingCopies); 
			copy.FeeStudCoursesItemCollection = (TList<FeeStudCoursesItem>) MakeCopyOf(this.FeeStudCoursesItemCollection, existingCopies); 
			copy.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection, existingCopies); 
			copy.EdAcdadvRmkCollection = (TList<EdAcdadvRmk>) MakeCopyOf(this.EdAcdadvRmkCollection, existingCopies); 
			copy.EdStudCourseCompCollection = (TList<EdStudCourseComp>) MakeCopyOf(this.EdStudCourseCompCollection, existingCopies); 
			copy.SvStudCourseEvalCollection = (TList<SvStudCourseEval>) MakeCopyOf(this.SvStudCourseEvalCollection, existingCopies); 
			copy.AdmAppDisabilityCollection = (TList<AdmAppDisability>) MakeCopyOf(this.AdmAppDisabilityCollection, existingCopies); 
			copy.EdStudContactMethodCollection = (TList<EdStudContactMethod>) MakeCopyOf(this.EdStudContactMethodCollection, existingCopies); 
			copy.AccomStudReqCollection = (TList<AccomStudReq>) MakeCopyOf(this.AccomStudReqCollection, existingCopies); 
			copy.EdResidencyStudCollection = (TList<EdResidencyStud>) MakeCopyOf(this.EdResidencyStudCollection, existingCopies); 
			copy.EdStudStateTempCollection = (TList<EdStudStateTemp>) MakeCopyOf(this.EdStudStateTempCollection, existingCopies); 
			copy.PgStudPublishCollection = (TList<PgStudPublish>) MakeCopyOf(this.PgStudPublishCollection, existingCopies); 
			copy.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection, existingCopies); 
			copy.EdStudIntTrnsStateToCollection = (TList<EdStudIntTrnsStateTo>) MakeCopyOf(this.EdStudIntTrnsStateToCollection, existingCopies); 
			copy.FeeStudFeeItemCollection = (TList<FeeStudFeeItem>) MakeCopyOf(this.FeeStudFeeItemCollection, existingCopies); 
			copy.EdPrintReqCollection = (TList<EdPrintReq>) MakeCopyOf(this.EdPrintReqCollection, existingCopies); 
			copy.GsAddressDtlCollection = (TList<GsAddressDtl>) MakeCopyOf(this.GsAddressDtlCollection, existingCopies); 
			copy.TrnsStudReqCollection = (TList<TrnsStudReq>) MakeCopyOf(this.TrnsStudReqCollection, existingCopies); 
			copy.SvStudAskAdvCollection = (TList<SvStudAskAdv>) MakeCopyOf(this.SvStudAskAdvCollection, existingCopies); 
			copy.AccomStudBookCollection = (TList<AccomStudBook>) MakeCopyOf(this.AccomStudBookCollection, existingCopies); 
			copy.SvStudCourseEvalExtCollection = (TList<SvStudCourseEvalExt>) MakeCopyOf(this.SvStudCourseEvalExtCollection, existingCopies); 
			copy.EdStudIntTrnsCollection = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollection, existingCopies); 
			copy.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection, existingCopies); 
			copy.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection, existingCopies); 
			copy.EdStudQualCollection = (TList<EdStudQual>) MakeCopyOf(this.EdStudQualCollection, existingCopies); 
			copy.MltRptDayOutStudCollection = (TList<MltRptDayOutStud>) MakeCopyOf(this.MltRptDayOutStudCollection, existingCopies); 
			copy.EdStudRsrvRegTimeCollection = (TList<EdStudRsrvRegTime>) MakeCopyOf(this.EdStudRsrvRegTimeCollection, existingCopies); 
			copy.AdmAppLanguagesCollection = (TList<AdmAppLanguages>) MakeCopyOf(this.AdmAppLanguagesCollection, existingCopies); 
			copy.PgStudConferenceCollection = (TList<PgStudConference>) MakeCopyOf(this.PgStudConferenceCollection, existingCopies); 
			copy.EdStudMilitaryInfoCollection = (TList<EdStudMilitaryInfo>) MakeCopyOf(this.EdStudMilitaryInfoCollection, existingCopies); 
			copy.IntegUserAdLogDtlCollection = (TList<IntegUserAdLogDtl>) MakeCopyOf(this.IntegUserAdLogDtlCollection, existingCopies); 
			copy.AccomStudAbsenceWarnCollection = (TList<AccomStudAbsenceWarn>) MakeCopyOf(this.AccomStudAbsenceWarnCollection, existingCopies); 
			copy.AdmEnglishProficiencyCollection = (TList<AdmEnglishProficiency>) MakeCopyOf(this.AdmEnglishProficiencyCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed EdStud Entity 
		///</summary>
		public virtual EdStud Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed EdStud Entity which is a deep copy of the current entity.
		///</summary>
		public virtual EdStud DeepCopy()
		{
			return EntityHelper.Clone<EdStud>(this as EdStud);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as EdStudEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new EdStudEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as EdStudEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(EdStudColumn column)
		{
			switch(column)
			{
					case EdStudColumn.EdStudId:
					return entityData.EdStudId != _originalData.EdStudId;
					case EdStudColumn.NationalNumber:
					return entityData.NationalNumber != _originalData.NationalNumber;
					case EdStudColumn.FullNameAr:
					return entityData.FullNameAr != _originalData.FullNameAr;
					case EdStudColumn.ClFullNameAr:
					return entityData.ClFullNameAr != _originalData.ClFullNameAr;
					case EdStudColumn.StudNameAr:
					return entityData.StudNameAr != _originalData.StudNameAr;
					case EdStudColumn.ClStudNameAr:
					return entityData.ClStudNameAr != _originalData.ClStudNameAr;
					case EdStudColumn.FatherNameAr:
					return entityData.FatherNameAr != _originalData.FatherNameAr;
					case EdStudColumn.ClFatherNameAr:
					return entityData.ClFatherNameAr != _originalData.ClFatherNameAr;
					case EdStudColumn.GrandfatherNameAr:
					return entityData.GrandfatherNameAr != _originalData.GrandfatherNameAr;
					case EdStudColumn.ClGrandfatherNameAr:
					return entityData.ClGrandfatherNameAr != _originalData.ClGrandfatherNameAr;
					case EdStudColumn.FamilyNameAr:
					return entityData.FamilyNameAr != _originalData.FamilyNameAr;
					case EdStudColumn.ClFamilyNameAr:
					return entityData.ClFamilyNameAr != _originalData.ClFamilyNameAr;
					case EdStudColumn.FullNameEn:
					return entityData.FullNameEn != _originalData.FullNameEn;
					case EdStudColumn.StudNameEn:
					return entityData.StudNameEn != _originalData.StudNameEn;
					case EdStudColumn.FatherNameEn:
					return entityData.FatherNameEn != _originalData.FatherNameEn;
					case EdStudColumn.GrandfatherNameEn:
					return entityData.GrandfatherNameEn != _originalData.GrandfatherNameEn;
					case EdStudColumn.FamilyNameEn:
					return entityData.FamilyNameEn != _originalData.FamilyNameEn;
					case EdStudColumn.FatherProfession:
					return entityData.FatherProfession != _originalData.FatherProfession;
					case EdStudColumn.FatherNationalNumber:
					return entityData.FatherNationalNumber != _originalData.FatherNationalNumber;
					case EdStudColumn.MotherNationalNumber:
					return entityData.MotherNationalNumber != _originalData.MotherNationalNumber;
					case EdStudColumn.MotherNameAr:
					return entityData.MotherNameAr != _originalData.MotherNameAr;
					case EdStudColumn.ClMotherNameAr:
					return entityData.ClMotherNameAr != _originalData.ClMotherNameAr;
					case EdStudColumn.MotherNameEn:
					return entityData.MotherNameEn != _originalData.MotherNameEn;
					case EdStudColumn.GsCodeGenderId:
					return entityData.GsCodeGenderId != _originalData.GsCodeGenderId;
					case EdStudColumn.GsCodeReligionId:
					return entityData.GsCodeReligionId != _originalData.GsCodeReligionId;
					case EdStudColumn.BirthRegNumber:
					return entityData.BirthRegNumber != _originalData.BirthRegNumber;
					case EdStudColumn.BirthDate:
					return entityData.BirthDate != _originalData.BirthDate;
					case EdStudColumn.GsBirthCountryNodeId:
					return entityData.GsBirthCountryNodeId != _originalData.GsBirthCountryNodeId;
					case EdStudColumn.GsCountryInfoId1:
					return entityData.GsCountryInfoId1 != _originalData.GsCountryInfoId1;
					case EdStudColumn.GsCountryInfoId2:
					return entityData.GsCountryInfoId2 != _originalData.GsCountryInfoId2;
					case EdStudColumn.StudPhoto:
					return entityData.StudPhoto != _originalData.StudPhoto;
					case EdStudColumn.GsCodeIdentTypeId:
					return entityData.GsCodeIdentTypeId != _originalData.GsCodeIdentTypeId;
					case EdStudColumn.IsPrntStaff:
					return entityData.IsPrntStaff != _originalData.IsPrntStaff;
					case EdStudColumn.SaStfMemberPrntId:
					return entityData.SaStfMemberPrntId != _originalData.SaStfMemberPrntId;
					case EdStudColumn.GsCdeBloodId:
					return entityData.GsCdeBloodId != _originalData.GsCdeBloodId;
					case EdStudColumn.StudLnht:
					return entityData.StudLnht != _originalData.StudLnht;
					case EdStudColumn.StudWght:
					return entityData.StudWght != _originalData.StudWght;
					case EdStudColumn.IdentIssuePlc:
					return entityData.IdentIssuePlc != _originalData.IdentIssuePlc;
					case EdStudColumn.GsCodeLanguageId:
					return entityData.GsCodeLanguageId != _originalData.GsCodeLanguageId;
					case EdStudColumn.PassporNo:
					return entityData.PassporNo != _originalData.PassporNo;
					case EdStudColumn.PassporExpireDate:
					return entityData.PassporExpireDate != _originalData.PassporExpireDate;
					case EdStudColumn.PassporIssueDate:
					return entityData.PassporIssueDate != _originalData.PassporIssueDate;
					case EdStudColumn.SpecialNeedFlg:
					return entityData.SpecialNeedFlg != _originalData.SpecialNeedFlg;
					case EdStudColumn.EmployeeFlg:
					return entityData.EmployeeFlg != _originalData.EmployeeFlg;
					case EdStudColumn.IdentIssueDate:
					return entityData.IdentIssueDate != _originalData.IdentIssueDate;
					case EdStudColumn.IdentExpireDate:
					return entityData.IdentExpireDate != _originalData.IdentExpireDate;
					case EdStudColumn.HecId:
					return entityData.HecId != _originalData.HecId;
					case EdStudColumn.GsCdeMaritalStatusId:
					return entityData.GsCdeMaritalStatusId != _originalData.GsCdeMaritalStatusId;
					case EdStudColumn.MarriageDate:
					return entityData.MarriageDate != _originalData.MarriageDate;
					case EdStudColumn.NoChild:
					return entityData.NoChild != _originalData.NoChild;
					case EdStudColumn.VisaNumber:
					return entityData.VisaNumber != _originalData.VisaNumber;
					case EdStudColumn.VisaIssueDate:
					return entityData.VisaIssueDate != _originalData.VisaIssueDate;
					case EdStudColumn.VisaExpireDate:
					return entityData.VisaExpireDate != _originalData.VisaExpireDate;
					case EdStudColumn.SeFormId:
					return entityData.SeFormId != _originalData.SeFormId;
					case EdStudColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
					case EdStudColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
					case EdStudColumn.CovidFlg:
					return entityData.CovidFlg != _originalData.CovidFlg;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< EdStudColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.EdStudId != _originalData.EdStudId;
			result = result || entityData.NationalNumber != _originalData.NationalNumber;
			result = result || entityData.FullNameAr != _originalData.FullNameAr;
			result = result || entityData.ClFullNameAr != _originalData.ClFullNameAr;
			result = result || entityData.StudNameAr != _originalData.StudNameAr;
			result = result || entityData.ClStudNameAr != _originalData.ClStudNameAr;
			result = result || entityData.FatherNameAr != _originalData.FatherNameAr;
			result = result || entityData.ClFatherNameAr != _originalData.ClFatherNameAr;
			result = result || entityData.GrandfatherNameAr != _originalData.GrandfatherNameAr;
			result = result || entityData.ClGrandfatherNameAr != _originalData.ClGrandfatherNameAr;
			result = result || entityData.FamilyNameAr != _originalData.FamilyNameAr;
			result = result || entityData.ClFamilyNameAr != _originalData.ClFamilyNameAr;
			result = result || entityData.FullNameEn != _originalData.FullNameEn;
			result = result || entityData.StudNameEn != _originalData.StudNameEn;
			result = result || entityData.FatherNameEn != _originalData.FatherNameEn;
			result = result || entityData.GrandfatherNameEn != _originalData.GrandfatherNameEn;
			result = result || entityData.FamilyNameEn != _originalData.FamilyNameEn;
			result = result || entityData.FatherProfession != _originalData.FatherProfession;
			result = result || entityData.FatherNationalNumber != _originalData.FatherNationalNumber;
			result = result || entityData.MotherNationalNumber != _originalData.MotherNationalNumber;
			result = result || entityData.MotherNameAr != _originalData.MotherNameAr;
			result = result || entityData.ClMotherNameAr != _originalData.ClMotherNameAr;
			result = result || entityData.MotherNameEn != _originalData.MotherNameEn;
			result = result || entityData.GsCodeGenderId != _originalData.GsCodeGenderId;
			result = result || entityData.GsCodeReligionId != _originalData.GsCodeReligionId;
			result = result || entityData.BirthRegNumber != _originalData.BirthRegNumber;
			result = result || entityData.BirthDate != _originalData.BirthDate;
			result = result || entityData.GsBirthCountryNodeId != _originalData.GsBirthCountryNodeId;
			result = result || entityData.GsCountryInfoId1 != _originalData.GsCountryInfoId1;
			result = result || entityData.GsCountryInfoId2 != _originalData.GsCountryInfoId2;
			result = result || entityData.StudPhoto != _originalData.StudPhoto;
			result = result || entityData.GsCodeIdentTypeId != _originalData.GsCodeIdentTypeId;
			result = result || entityData.IsPrntStaff != _originalData.IsPrntStaff;
			result = result || entityData.SaStfMemberPrntId != _originalData.SaStfMemberPrntId;
			result = result || entityData.GsCdeBloodId != _originalData.GsCdeBloodId;
			result = result || entityData.StudLnht != _originalData.StudLnht;
			result = result || entityData.StudWght != _originalData.StudWght;
			result = result || entityData.IdentIssuePlc != _originalData.IdentIssuePlc;
			result = result || entityData.GsCodeLanguageId != _originalData.GsCodeLanguageId;
			result = result || entityData.PassporNo != _originalData.PassporNo;
			result = result || entityData.PassporExpireDate != _originalData.PassporExpireDate;
			result = result || entityData.PassporIssueDate != _originalData.PassporIssueDate;
			result = result || entityData.SpecialNeedFlg != _originalData.SpecialNeedFlg;
			result = result || entityData.EmployeeFlg != _originalData.EmployeeFlg;
			result = result || entityData.IdentIssueDate != _originalData.IdentIssueDate;
			result = result || entityData.IdentExpireDate != _originalData.IdentExpireDate;
			result = result || entityData.HecId != _originalData.HecId;
			result = result || entityData.GsCdeMaritalStatusId != _originalData.GsCdeMaritalStatusId;
			result = result || entityData.MarriageDate != _originalData.MarriageDate;
			result = result || entityData.NoChild != _originalData.NoChild;
			result = result || entityData.VisaNumber != _originalData.VisaNumber;
			result = result || entityData.VisaIssueDate != _originalData.VisaIssueDate;
			result = result || entityData.VisaExpireDate != _originalData.VisaExpireDate;
			result = result || entityData.SeFormId != _originalData.SeFormId;
			result = result || entityData.LastDate != _originalData.LastDate;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			result = result || entityData.CovidFlg != _originalData.CovidFlg;
			return result;
		}	
		
		///<summary>
		///  Returns a EdStud Entity with the original data.
		///</summary>
		public EdStud GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateEdStud(
				_originalData.EdStudId,
				_originalData.NationalNumber,
				_originalData.FullNameAr,
				_originalData.ClFullNameAr,
				_originalData.StudNameAr,
				_originalData.ClStudNameAr,
				_originalData.FatherNameAr,
				_originalData.ClFatherNameAr,
				_originalData.GrandfatherNameAr,
				_originalData.ClGrandfatherNameAr,
				_originalData.FamilyNameAr,
				_originalData.ClFamilyNameAr,
				_originalData.FullNameEn,
				_originalData.StudNameEn,
				_originalData.FatherNameEn,
				_originalData.GrandfatherNameEn,
				_originalData.FamilyNameEn,
				_originalData.FatherProfession,
				_originalData.FatherNationalNumber,
				_originalData.MotherNationalNumber,
				_originalData.MotherNameAr,
				_originalData.ClMotherNameAr,
				_originalData.MotherNameEn,
				_originalData.GsCodeGenderId,
				_originalData.GsCodeReligionId,
				_originalData.BirthRegNumber,
				_originalData.BirthDate,
				_originalData.GsBirthCountryNodeId,
				_originalData.GsCountryInfoId1,
				_originalData.GsCountryInfoId2,
				_originalData.StudPhoto,
				_originalData.GsCodeIdentTypeId,
				_originalData.IsPrntStaff,
				_originalData.SaStfMemberPrntId,
				_originalData.GsCdeBloodId,
				_originalData.StudLnht,
				_originalData.StudWght,
				_originalData.IdentIssuePlc,
				_originalData.GsCodeLanguageId,
				_originalData.PassporNo,
				_originalData.PassporExpireDate,
				_originalData.PassporIssueDate,
				_originalData.SpecialNeedFlg,
				_originalData.EmployeeFlg,
				_originalData.IdentIssueDate,
				_originalData.IdentExpireDate,
				_originalData.HecId,
				_originalData.GsCdeMaritalStatusId,
				_originalData.MarriageDate,
				_originalData.NoChild,
				_originalData.VisaNumber,
				_originalData.VisaIssueDate,
				_originalData.VisaExpireDate,
				_originalData.SeFormId,
				_originalData.LastDate,
				_originalData.SeUserId,
				_originalData.CovidFlg
				);
				
			return (EdStud)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="EdStudBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is EdStudBase)
				return ValueEquals(this, (EdStudBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="EdStudBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.EdStudId.GetHashCode() ^ 
					((this.NationalNumber == null) ? string.Empty : this.NationalNumber.ToString()).GetHashCode() ^ 
					this.FullNameAr.GetHashCode() ^ 
					((this.ClFullNameAr == null) ? string.Empty : this.ClFullNameAr.ToString()).GetHashCode() ^ 
					((this.StudNameAr == null) ? string.Empty : this.StudNameAr.ToString()).GetHashCode() ^ 
					((this.ClStudNameAr == null) ? string.Empty : this.ClStudNameAr.ToString()).GetHashCode() ^ 
					((this.FatherNameAr == null) ? string.Empty : this.FatherNameAr.ToString()).GetHashCode() ^ 
					((this.ClFatherNameAr == null) ? string.Empty : this.ClFatherNameAr.ToString()).GetHashCode() ^ 
					((this.GrandfatherNameAr == null) ? string.Empty : this.GrandfatherNameAr.ToString()).GetHashCode() ^ 
					((this.ClGrandfatherNameAr == null) ? string.Empty : this.ClGrandfatherNameAr.ToString()).GetHashCode() ^ 
					((this.FamilyNameAr == null) ? string.Empty : this.FamilyNameAr.ToString()).GetHashCode() ^ 
					((this.ClFamilyNameAr == null) ? string.Empty : this.ClFamilyNameAr.ToString()).GetHashCode() ^ 
					this.FullNameEn.GetHashCode() ^ 
					((this.StudNameEn == null) ? string.Empty : this.StudNameEn.ToString()).GetHashCode() ^ 
					((this.FatherNameEn == null) ? string.Empty : this.FatherNameEn.ToString()).GetHashCode() ^ 
					((this.GrandfatherNameEn == null) ? string.Empty : this.GrandfatherNameEn.ToString()).GetHashCode() ^ 
					((this.FamilyNameEn == null) ? string.Empty : this.FamilyNameEn.ToString()).GetHashCode() ^ 
					((this.FatherProfession == null) ? string.Empty : this.FatherProfession.ToString()).GetHashCode() ^ 
					((this.FatherNationalNumber == null) ? string.Empty : this.FatherNationalNumber.ToString()).GetHashCode() ^ 
					((this.MotherNationalNumber == null) ? string.Empty : this.MotherNationalNumber.ToString()).GetHashCode() ^ 
					((this.MotherNameAr == null) ? string.Empty : this.MotherNameAr.ToString()).GetHashCode() ^ 
					((this.ClMotherNameAr == null) ? string.Empty : this.ClMotherNameAr.ToString()).GetHashCode() ^ 
					((this.MotherNameEn == null) ? string.Empty : this.MotherNameEn.ToString()).GetHashCode() ^ 
					((this.GsCodeGenderId == null) ? string.Empty : this.GsCodeGenderId.ToString()).GetHashCode() ^ 
					((this.GsCodeReligionId == null) ? string.Empty : this.GsCodeReligionId.ToString()).GetHashCode() ^ 
					((this.BirthRegNumber == null) ? string.Empty : this.BirthRegNumber.ToString()).GetHashCode() ^ 
					((this.BirthDate == null) ? string.Empty : this.BirthDate.ToString()).GetHashCode() ^ 
					((this.GsBirthCountryNodeId == null) ? string.Empty : this.GsBirthCountryNodeId.ToString()).GetHashCode() ^ 
					((this.GsCountryInfoId1 == null) ? string.Empty : this.GsCountryInfoId1.ToString()).GetHashCode() ^ 
					((this.GsCountryInfoId2 == null) ? string.Empty : this.GsCountryInfoId2.ToString()).GetHashCode() ^ 
					((this.StudPhoto == null) ? string.Empty : this.StudPhoto.ToString()).GetHashCode() ^ 
					((this.GsCodeIdentTypeId == null) ? string.Empty : this.GsCodeIdentTypeId.ToString()).GetHashCode() ^ 
					((this.IsPrntStaff == null) ? string.Empty : this.IsPrntStaff.ToString()).GetHashCode() ^ 
					((this.SaStfMemberPrntId == null) ? string.Empty : this.SaStfMemberPrntId.ToString()).GetHashCode() ^ 
					((this.GsCdeBloodId == null) ? string.Empty : this.GsCdeBloodId.ToString()).GetHashCode() ^ 
					((this.StudLnht == null) ? string.Empty : this.StudLnht.ToString()).GetHashCode() ^ 
					((this.StudWght == null) ? string.Empty : this.StudWght.ToString()).GetHashCode() ^ 
					((this.IdentIssuePlc == null) ? string.Empty : this.IdentIssuePlc.ToString()).GetHashCode() ^ 
					((this.GsCodeLanguageId == null) ? string.Empty : this.GsCodeLanguageId.ToString()).GetHashCode() ^ 
					((this.PassporNo == null) ? string.Empty : this.PassporNo.ToString()).GetHashCode() ^ 
					((this.PassporExpireDate == null) ? string.Empty : this.PassporExpireDate.ToString()).GetHashCode() ^ 
					((this.PassporIssueDate == null) ? string.Empty : this.PassporIssueDate.ToString()).GetHashCode() ^ 
					((this.SpecialNeedFlg == null) ? string.Empty : this.SpecialNeedFlg.ToString()).GetHashCode() ^ 
					((this.EmployeeFlg == null) ? string.Empty : this.EmployeeFlg.ToString()).GetHashCode() ^ 
					((this.IdentIssueDate == null) ? string.Empty : this.IdentIssueDate.ToString()).GetHashCode() ^ 
					((this.IdentExpireDate == null) ? string.Empty : this.IdentExpireDate.ToString()).GetHashCode() ^ 
					((this.HecId == null) ? string.Empty : this.HecId.ToString()).GetHashCode() ^ 
					((this.GsCdeMaritalStatusId == null) ? string.Empty : this.GsCdeMaritalStatusId.ToString()).GetHashCode() ^ 
					((this.MarriageDate == null) ? string.Empty : this.MarriageDate.ToString()).GetHashCode() ^ 
					((this.NoChild == null) ? string.Empty : this.NoChild.ToString()).GetHashCode() ^ 
					((this.VisaNumber == null) ? string.Empty : this.VisaNumber.ToString()).GetHashCode() ^ 
					((this.VisaIssueDate == null) ? string.Empty : this.VisaIssueDate.ToString()).GetHashCode() ^ 
					((this.VisaExpireDate == null) ? string.Empty : this.VisaExpireDate.ToString()).GetHashCode() ^ 
					((this.SeFormId == null) ? string.Empty : this.SeFormId.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode() ^ 
					((this.CovidFlg == null) ? string.Empty : this.CovidFlg.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="EdStudBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(EdStudBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="EdStudBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="EdStudBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="EdStudBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(EdStudBase Object1, EdStudBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.EdStudId != Object2.EdStudId)
				equal = false;
			if ( Object1.NationalNumber != null && Object2.NationalNumber != null )
			{
				if (Object1.NationalNumber != Object2.NationalNumber)
					equal = false;
			}
			else if (Object1.NationalNumber == null ^ Object2.NationalNumber == null )
			{
				equal = false;
			}
			if (Object1.FullNameAr != Object2.FullNameAr)
				equal = false;
			if ( Object1.ClFullNameAr != null && Object2.ClFullNameAr != null )
			{
				if (Object1.ClFullNameAr != Object2.ClFullNameAr)
					equal = false;
			}
			else if (Object1.ClFullNameAr == null ^ Object2.ClFullNameAr == null )
			{
				equal = false;
			}
			if ( Object1.StudNameAr != null && Object2.StudNameAr != null )
			{
				if (Object1.StudNameAr != Object2.StudNameAr)
					equal = false;
			}
			else if (Object1.StudNameAr == null ^ Object2.StudNameAr == null )
			{
				equal = false;
			}
			if ( Object1.ClStudNameAr != null && Object2.ClStudNameAr != null )
			{
				if (Object1.ClStudNameAr != Object2.ClStudNameAr)
					equal = false;
			}
			else if (Object1.ClStudNameAr == null ^ Object2.ClStudNameAr == null )
			{
				equal = false;
			}
			if ( Object1.FatherNameAr != null && Object2.FatherNameAr != null )
			{
				if (Object1.FatherNameAr != Object2.FatherNameAr)
					equal = false;
			}
			else if (Object1.FatherNameAr == null ^ Object2.FatherNameAr == null )
			{
				equal = false;
			}
			if ( Object1.ClFatherNameAr != null && Object2.ClFatherNameAr != null )
			{
				if (Object1.ClFatherNameAr != Object2.ClFatherNameAr)
					equal = false;
			}
			else if (Object1.ClFatherNameAr == null ^ Object2.ClFatherNameAr == null )
			{
				equal = false;
			}
			if ( Object1.GrandfatherNameAr != null && Object2.GrandfatherNameAr != null )
			{
				if (Object1.GrandfatherNameAr != Object2.GrandfatherNameAr)
					equal = false;
			}
			else if (Object1.GrandfatherNameAr == null ^ Object2.GrandfatherNameAr == null )
			{
				equal = false;
			}
			if ( Object1.ClGrandfatherNameAr != null && Object2.ClGrandfatherNameAr != null )
			{
				if (Object1.ClGrandfatherNameAr != Object2.ClGrandfatherNameAr)
					equal = false;
			}
			else if (Object1.ClGrandfatherNameAr == null ^ Object2.ClGrandfatherNameAr == null )
			{
				equal = false;
			}
			if ( Object1.FamilyNameAr != null && Object2.FamilyNameAr != null )
			{
				if (Object1.FamilyNameAr != Object2.FamilyNameAr)
					equal = false;
			}
			else if (Object1.FamilyNameAr == null ^ Object2.FamilyNameAr == null )
			{
				equal = false;
			}
			if ( Object1.ClFamilyNameAr != null && Object2.ClFamilyNameAr != null )
			{
				if (Object1.ClFamilyNameAr != Object2.ClFamilyNameAr)
					equal = false;
			}
			else if (Object1.ClFamilyNameAr == null ^ Object2.ClFamilyNameAr == null )
			{
				equal = false;
			}
			if (Object1.FullNameEn != Object2.FullNameEn)
				equal = false;
			if ( Object1.StudNameEn != null && Object2.StudNameEn != null )
			{
				if (Object1.StudNameEn != Object2.StudNameEn)
					equal = false;
			}
			else if (Object1.StudNameEn == null ^ Object2.StudNameEn == null )
			{
				equal = false;
			}
			if ( Object1.FatherNameEn != null && Object2.FatherNameEn != null )
			{
				if (Object1.FatherNameEn != Object2.FatherNameEn)
					equal = false;
			}
			else if (Object1.FatherNameEn == null ^ Object2.FatherNameEn == null )
			{
				equal = false;
			}
			if ( Object1.GrandfatherNameEn != null && Object2.GrandfatherNameEn != null )
			{
				if (Object1.GrandfatherNameEn != Object2.GrandfatherNameEn)
					equal = false;
			}
			else if (Object1.GrandfatherNameEn == null ^ Object2.GrandfatherNameEn == null )
			{
				equal = false;
			}
			if ( Object1.FamilyNameEn != null && Object2.FamilyNameEn != null )
			{
				if (Object1.FamilyNameEn != Object2.FamilyNameEn)
					equal = false;
			}
			else if (Object1.FamilyNameEn == null ^ Object2.FamilyNameEn == null )
			{
				equal = false;
			}
			if ( Object1.FatherProfession != null && Object2.FatherProfession != null )
			{
				if (Object1.FatherProfession != Object2.FatherProfession)
					equal = false;
			}
			else if (Object1.FatherProfession == null ^ Object2.FatherProfession == null )
			{
				equal = false;
			}
			if ( Object1.FatherNationalNumber != null && Object2.FatherNationalNumber != null )
			{
				if (Object1.FatherNationalNumber != Object2.FatherNationalNumber)
					equal = false;
			}
			else if (Object1.FatherNationalNumber == null ^ Object2.FatherNationalNumber == null )
			{
				equal = false;
			}
			if ( Object1.MotherNationalNumber != null && Object2.MotherNationalNumber != null )
			{
				if (Object1.MotherNationalNumber != Object2.MotherNationalNumber)
					equal = false;
			}
			else if (Object1.MotherNationalNumber == null ^ Object2.MotherNationalNumber == null )
			{
				equal = false;
			}
			if ( Object1.MotherNameAr != null && Object2.MotherNameAr != null )
			{
				if (Object1.MotherNameAr != Object2.MotherNameAr)
					equal = false;
			}
			else if (Object1.MotherNameAr == null ^ Object2.MotherNameAr == null )
			{
				equal = false;
			}
			if ( Object1.ClMotherNameAr != null && Object2.ClMotherNameAr != null )
			{
				if (Object1.ClMotherNameAr != Object2.ClMotherNameAr)
					equal = false;
			}
			else if (Object1.ClMotherNameAr == null ^ Object2.ClMotherNameAr == null )
			{
				equal = false;
			}
			if ( Object1.MotherNameEn != null && Object2.MotherNameEn != null )
			{
				if (Object1.MotherNameEn != Object2.MotherNameEn)
					equal = false;
			}
			else if (Object1.MotherNameEn == null ^ Object2.MotherNameEn == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeGenderId != null && Object2.GsCodeGenderId != null )
			{
				if (Object1.GsCodeGenderId != Object2.GsCodeGenderId)
					equal = false;
			}
			else if (Object1.GsCodeGenderId == null ^ Object2.GsCodeGenderId == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeReligionId != null && Object2.GsCodeReligionId != null )
			{
				if (Object1.GsCodeReligionId != Object2.GsCodeReligionId)
					equal = false;
			}
			else if (Object1.GsCodeReligionId == null ^ Object2.GsCodeReligionId == null )
			{
				equal = false;
			}
			if ( Object1.BirthRegNumber != null && Object2.BirthRegNumber != null )
			{
				if (Object1.BirthRegNumber != Object2.BirthRegNumber)
					equal = false;
			}
			else if (Object1.BirthRegNumber == null ^ Object2.BirthRegNumber == null )
			{
				equal = false;
			}
			if ( Object1.BirthDate != null && Object2.BirthDate != null )
			{
				if (Object1.BirthDate != Object2.BirthDate)
					equal = false;
			}
			else if (Object1.BirthDate == null ^ Object2.BirthDate == null )
			{
				equal = false;
			}
			if ( Object1.GsBirthCountryNodeId != null && Object2.GsBirthCountryNodeId != null )
			{
				if (Object1.GsBirthCountryNodeId != Object2.GsBirthCountryNodeId)
					equal = false;
			}
			else if (Object1.GsBirthCountryNodeId == null ^ Object2.GsBirthCountryNodeId == null )
			{
				equal = false;
			}
			if ( Object1.GsCountryInfoId1 != null && Object2.GsCountryInfoId1 != null )
			{
				if (Object1.GsCountryInfoId1 != Object2.GsCountryInfoId1)
					equal = false;
			}
			else if (Object1.GsCountryInfoId1 == null ^ Object2.GsCountryInfoId1 == null )
			{
				equal = false;
			}
			if ( Object1.GsCountryInfoId2 != null && Object2.GsCountryInfoId2 != null )
			{
				if (Object1.GsCountryInfoId2 != Object2.GsCountryInfoId2)
					equal = false;
			}
			else if (Object1.GsCountryInfoId2 == null ^ Object2.GsCountryInfoId2 == null )
			{
				equal = false;
			}
			if ( Object1.StudPhoto != null && Object2.StudPhoto != null )
			{
				if (Object1.StudPhoto != Object2.StudPhoto)
					equal = false;
			}
			else if (Object1.StudPhoto == null ^ Object2.StudPhoto == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeIdentTypeId != null && Object2.GsCodeIdentTypeId != null )
			{
				if (Object1.GsCodeIdentTypeId != Object2.GsCodeIdentTypeId)
					equal = false;
			}
			else if (Object1.GsCodeIdentTypeId == null ^ Object2.GsCodeIdentTypeId == null )
			{
				equal = false;
			}
			if ( Object1.IsPrntStaff != null && Object2.IsPrntStaff != null )
			{
				if (Object1.IsPrntStaff != Object2.IsPrntStaff)
					equal = false;
			}
			else if (Object1.IsPrntStaff == null ^ Object2.IsPrntStaff == null )
			{
				equal = false;
			}
			if ( Object1.SaStfMemberPrntId != null && Object2.SaStfMemberPrntId != null )
			{
				if (Object1.SaStfMemberPrntId != Object2.SaStfMemberPrntId)
					equal = false;
			}
			else if (Object1.SaStfMemberPrntId == null ^ Object2.SaStfMemberPrntId == null )
			{
				equal = false;
			}
			if ( Object1.GsCdeBloodId != null && Object2.GsCdeBloodId != null )
			{
				if (Object1.GsCdeBloodId != Object2.GsCdeBloodId)
					equal = false;
			}
			else if (Object1.GsCdeBloodId == null ^ Object2.GsCdeBloodId == null )
			{
				equal = false;
			}
			if ( Object1.StudLnht != null && Object2.StudLnht != null )
			{
				if (Object1.StudLnht != Object2.StudLnht)
					equal = false;
			}
			else if (Object1.StudLnht == null ^ Object2.StudLnht == null )
			{
				equal = false;
			}
			if ( Object1.StudWght != null && Object2.StudWght != null )
			{
				if (Object1.StudWght != Object2.StudWght)
					equal = false;
			}
			else if (Object1.StudWght == null ^ Object2.StudWght == null )
			{
				equal = false;
			}
			if ( Object1.IdentIssuePlc != null && Object2.IdentIssuePlc != null )
			{
				if (Object1.IdentIssuePlc != Object2.IdentIssuePlc)
					equal = false;
			}
			else if (Object1.IdentIssuePlc == null ^ Object2.IdentIssuePlc == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeLanguageId != null && Object2.GsCodeLanguageId != null )
			{
				if (Object1.GsCodeLanguageId != Object2.GsCodeLanguageId)
					equal = false;
			}
			else if (Object1.GsCodeLanguageId == null ^ Object2.GsCodeLanguageId == null )
			{
				equal = false;
			}
			if ( Object1.PassporNo != null && Object2.PassporNo != null )
			{
				if (Object1.PassporNo != Object2.PassporNo)
					equal = false;
			}
			else if (Object1.PassporNo == null ^ Object2.PassporNo == null )
			{
				equal = false;
			}
			if ( Object1.PassporExpireDate != null && Object2.PassporExpireDate != null )
			{
				if (Object1.PassporExpireDate != Object2.PassporExpireDate)
					equal = false;
			}
			else if (Object1.PassporExpireDate == null ^ Object2.PassporExpireDate == null )
			{
				equal = false;
			}
			if ( Object1.PassporIssueDate != null && Object2.PassporIssueDate != null )
			{
				if (Object1.PassporIssueDate != Object2.PassporIssueDate)
					equal = false;
			}
			else if (Object1.PassporIssueDate == null ^ Object2.PassporIssueDate == null )
			{
				equal = false;
			}
			if ( Object1.SpecialNeedFlg != null && Object2.SpecialNeedFlg != null )
			{
				if (Object1.SpecialNeedFlg != Object2.SpecialNeedFlg)
					equal = false;
			}
			else if (Object1.SpecialNeedFlg == null ^ Object2.SpecialNeedFlg == null )
			{
				equal = false;
			}
			if ( Object1.EmployeeFlg != null && Object2.EmployeeFlg != null )
			{
				if (Object1.EmployeeFlg != Object2.EmployeeFlg)
					equal = false;
			}
			else if (Object1.EmployeeFlg == null ^ Object2.EmployeeFlg == null )
			{
				equal = false;
			}
			if ( Object1.IdentIssueDate != null && Object2.IdentIssueDate != null )
			{
				if (Object1.IdentIssueDate != Object2.IdentIssueDate)
					equal = false;
			}
			else if (Object1.IdentIssueDate == null ^ Object2.IdentIssueDate == null )
			{
				equal = false;
			}
			if ( Object1.IdentExpireDate != null && Object2.IdentExpireDate != null )
			{
				if (Object1.IdentExpireDate != Object2.IdentExpireDate)
					equal = false;
			}
			else if (Object1.IdentExpireDate == null ^ Object2.IdentExpireDate == null )
			{
				equal = false;
			}
			if ( Object1.HecId != null && Object2.HecId != null )
			{
				if (Object1.HecId != Object2.HecId)
					equal = false;
			}
			else if (Object1.HecId == null ^ Object2.HecId == null )
			{
				equal = false;
			}
			if ( Object1.GsCdeMaritalStatusId != null && Object2.GsCdeMaritalStatusId != null )
			{
				if (Object1.GsCdeMaritalStatusId != Object2.GsCdeMaritalStatusId)
					equal = false;
			}
			else if (Object1.GsCdeMaritalStatusId == null ^ Object2.GsCdeMaritalStatusId == null )
			{
				equal = false;
			}
			if ( Object1.MarriageDate != null && Object2.MarriageDate != null )
			{
				if (Object1.MarriageDate != Object2.MarriageDate)
					equal = false;
			}
			else if (Object1.MarriageDate == null ^ Object2.MarriageDate == null )
			{
				equal = false;
			}
			if ( Object1.NoChild != null && Object2.NoChild != null )
			{
				if (Object1.NoChild != Object2.NoChild)
					equal = false;
			}
			else if (Object1.NoChild == null ^ Object2.NoChild == null )
			{
				equal = false;
			}
			if ( Object1.VisaNumber != null && Object2.VisaNumber != null )
			{
				if (Object1.VisaNumber != Object2.VisaNumber)
					equal = false;
			}
			else if (Object1.VisaNumber == null ^ Object2.VisaNumber == null )
			{
				equal = false;
			}
			if ( Object1.VisaIssueDate != null && Object2.VisaIssueDate != null )
			{
				if (Object1.VisaIssueDate != Object2.VisaIssueDate)
					equal = false;
			}
			else if (Object1.VisaIssueDate == null ^ Object2.VisaIssueDate == null )
			{
				equal = false;
			}
			if ( Object1.VisaExpireDate != null && Object2.VisaExpireDate != null )
			{
				if (Object1.VisaExpireDate != Object2.VisaExpireDate)
					equal = false;
			}
			else if (Object1.VisaExpireDate == null ^ Object2.VisaExpireDate == null )
			{
				equal = false;
			}
			if ( Object1.SeFormId != null && Object2.SeFormId != null )
			{
				if (Object1.SeFormId != Object2.SeFormId)
					equal = false;
			}
			else if (Object1.SeFormId == null ^ Object2.SeFormId == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
			if ( Object1.CovidFlg != null && Object2.CovidFlg != null )
			{
				if (Object1.CovidFlg != Object2.CovidFlg)
					equal = false;
			}
			else if (Object1.CovidFlg == null ^ Object2.CovidFlg == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((EdStudBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static EdStudComparer GetComparer()
        {
            return new EdStudComparer();
        }
        */

        // Comparer delegates back to EdStud
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(EdStud rhs, EdStudColumn which)
        {
            switch (which)
            {
            	
            	
            	case EdStudColumn.EdStudId:
            		return this.EdStudId.CompareTo(rhs.EdStudId);
            		
            		                 
            	
            	
            	case EdStudColumn.NationalNumber:
            		return this.NationalNumber.CompareTo(rhs.NationalNumber);
            		
            		                 
            	
            	
            	case EdStudColumn.FullNameAr:
            		return this.FullNameAr.CompareTo(rhs.FullNameAr);
            		
            		                 
            	
            	
            	case EdStudColumn.ClFullNameAr:
            		return this.ClFullNameAr.CompareTo(rhs.ClFullNameAr);
            		
            		                 
            	
            	
            	case EdStudColumn.StudNameAr:
            		return this.StudNameAr.CompareTo(rhs.StudNameAr);
            		
            		                 
            	
            	
            	case EdStudColumn.ClStudNameAr:
            		return this.ClStudNameAr.CompareTo(rhs.ClStudNameAr);
            		
            		                 
            	
            	
            	case EdStudColumn.FatherNameAr:
            		return this.FatherNameAr.CompareTo(rhs.FatherNameAr);
            		
            		                 
            	
            	
            	case EdStudColumn.ClFatherNameAr:
            		return this.ClFatherNameAr.CompareTo(rhs.ClFatherNameAr);
            		
            		                 
            	
            	
            	case EdStudColumn.GrandfatherNameAr:
            		return this.GrandfatherNameAr.CompareTo(rhs.GrandfatherNameAr);
            		
            		                 
            	
            	
            	case EdStudColumn.ClGrandfatherNameAr:
            		return this.ClGrandfatherNameAr.CompareTo(rhs.ClGrandfatherNameAr);
            		
            		                 
            	
            	
            	case EdStudColumn.FamilyNameAr:
            		return this.FamilyNameAr.CompareTo(rhs.FamilyNameAr);
            		
            		                 
            	
            	
            	case EdStudColumn.ClFamilyNameAr:
            		return this.ClFamilyNameAr.CompareTo(rhs.ClFamilyNameAr);
            		
            		                 
            	
            	
            	case EdStudColumn.FullNameEn:
            		return this.FullNameEn.CompareTo(rhs.FullNameEn);
            		
            		                 
            	
            	
            	case EdStudColumn.StudNameEn:
            		return this.StudNameEn.CompareTo(rhs.StudNameEn);
            		
            		                 
            	
            	
            	case EdStudColumn.FatherNameEn:
            		return this.FatherNameEn.CompareTo(rhs.FatherNameEn);
            		
            		                 
            	
            	
            	case EdStudColumn.GrandfatherNameEn:
            		return this.GrandfatherNameEn.CompareTo(rhs.GrandfatherNameEn);
            		
            		                 
            	
            	
            	case EdStudColumn.FamilyNameEn:
            		return this.FamilyNameEn.CompareTo(rhs.FamilyNameEn);
            		
            		                 
            	
            	
            	case EdStudColumn.FatherProfession:
            		return this.FatherProfession.CompareTo(rhs.FatherProfession);
            		
            		                 
            	
            	
            	case EdStudColumn.FatherNationalNumber:
            		return this.FatherNationalNumber.CompareTo(rhs.FatherNationalNumber);
            		
            		                 
            	
            	
            	case EdStudColumn.MotherNationalNumber:
            		return this.MotherNationalNumber.CompareTo(rhs.MotherNationalNumber);
            		
            		                 
            	
            	
            	case EdStudColumn.MotherNameAr:
            		return this.MotherNameAr.CompareTo(rhs.MotherNameAr);
            		
            		                 
            	
            	
            	case EdStudColumn.ClMotherNameAr:
            		return this.ClMotherNameAr.CompareTo(rhs.ClMotherNameAr);
            		
            		                 
            	
            	
            	case EdStudColumn.MotherNameEn:
            		return this.MotherNameEn.CompareTo(rhs.MotherNameEn);
            		
            		                 
            	
            	
            	case EdStudColumn.GsCodeGenderId:
            		return this.GsCodeGenderId.Value.CompareTo(rhs.GsCodeGenderId.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.GsCodeReligionId:
            		return this.GsCodeReligionId.Value.CompareTo(rhs.GsCodeReligionId.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.BirthRegNumber:
            		return this.BirthRegNumber.CompareTo(rhs.BirthRegNumber);
            		
            		                 
            	
            	
            	case EdStudColumn.BirthDate:
            		return this.BirthDate.Value.CompareTo(rhs.BirthDate.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.GsBirthCountryNodeId:
            		return this.GsBirthCountryNodeId.Value.CompareTo(rhs.GsBirthCountryNodeId.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.GsCountryInfoId1:
            		return this.GsCountryInfoId1.Value.CompareTo(rhs.GsCountryInfoId1.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.GsCountryInfoId2:
            		return this.GsCountryInfoId2.Value.CompareTo(rhs.GsCountryInfoId2.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.StudPhoto:
            		return this.StudPhoto.CompareTo(rhs.StudPhoto);
            		
            		                 
            	
            	
            	case EdStudColumn.GsCodeIdentTypeId:
            		return this.GsCodeIdentTypeId.Value.CompareTo(rhs.GsCodeIdentTypeId.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.IsPrntStaff:
            		return this.IsPrntStaff.Value.CompareTo(rhs.IsPrntStaff.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.SaStfMemberPrntId:
            		return this.SaStfMemberPrntId.Value.CompareTo(rhs.SaStfMemberPrntId.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.GsCdeBloodId:
            		return this.GsCdeBloodId.Value.CompareTo(rhs.GsCdeBloodId.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.StudLnht:
            		return this.StudLnht.Value.CompareTo(rhs.StudLnht.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.StudWght:
            		return this.StudWght.Value.CompareTo(rhs.StudWght.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.IdentIssuePlc:
            		return this.IdentIssuePlc.CompareTo(rhs.IdentIssuePlc);
            		
            		                 
            	
            	
            	case EdStudColumn.GsCodeLanguageId:
            		return this.GsCodeLanguageId.Value.CompareTo(rhs.GsCodeLanguageId.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.PassporNo:
            		return this.PassporNo.CompareTo(rhs.PassporNo);
            		
            		                 
            	
            	
            	case EdStudColumn.PassporExpireDate:
            		return this.PassporExpireDate.Value.CompareTo(rhs.PassporExpireDate.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.PassporIssueDate:
            		return this.PassporIssueDate.Value.CompareTo(rhs.PassporIssueDate.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.SpecialNeedFlg:
            		return this.SpecialNeedFlg.Value.CompareTo(rhs.SpecialNeedFlg.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.EmployeeFlg:
            		return this.EmployeeFlg.Value.CompareTo(rhs.EmployeeFlg.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.IdentIssueDate:
            		return this.IdentIssueDate.Value.CompareTo(rhs.IdentIssueDate.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.IdentExpireDate:
            		return this.IdentExpireDate.Value.CompareTo(rhs.IdentExpireDate.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.HecId:
            		return this.HecId.CompareTo(rhs.HecId);
            		
            		                 
            	
            	
            	case EdStudColumn.GsCdeMaritalStatusId:
            		return this.GsCdeMaritalStatusId.Value.CompareTo(rhs.GsCdeMaritalStatusId.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.MarriageDate:
            		return this.MarriageDate.Value.CompareTo(rhs.MarriageDate.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.NoChild:
            		return this.NoChild.Value.CompareTo(rhs.NoChild.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.VisaNumber:
            		return this.VisaNumber.CompareTo(rhs.VisaNumber);
            		
            		                 
            	
            	
            	case EdStudColumn.VisaIssueDate:
            		return this.VisaIssueDate.Value.CompareTo(rhs.VisaIssueDate.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.VisaExpireDate:
            		return this.VisaExpireDate.Value.CompareTo(rhs.VisaExpireDate.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.SeFormId:
            		return this.SeFormId.Value.CompareTo(rhs.SeFormId.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            	
            	
            	case EdStudColumn.CovidFlg:
            		return this.CovidFlg.Value.CompareTo(rhs.CovidFlg.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<EdStudKey> Members
		
		// member variable for the EntityId property
		private EdStudKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual EdStudKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new EdStudKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("EdStud")
					.Append("|").Append( this.EdStudId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{58}{57}- EdStudId: {0}{57}- NationalNumber: {1}{57}- FullNameAr: {2}{57}- ClFullNameAr: {3}{57}- StudNameAr: {4}{57}- ClStudNameAr: {5}{57}- FatherNameAr: {6}{57}- ClFatherNameAr: {7}{57}- GrandfatherNameAr: {8}{57}- ClGrandfatherNameAr: {9}{57}- FamilyNameAr: {10}{57}- ClFamilyNameAr: {11}{57}- FullNameEn: {12}{57}- StudNameEn: {13}{57}- FatherNameEn: {14}{57}- GrandfatherNameEn: {15}{57}- FamilyNameEn: {16}{57}- FatherProfession: {17}{57}- FatherNationalNumber: {18}{57}- MotherNationalNumber: {19}{57}- MotherNameAr: {20}{57}- ClMotherNameAr: {21}{57}- MotherNameEn: {22}{57}- GsCodeGenderId: {23}{57}- GsCodeReligionId: {24}{57}- BirthRegNumber: {25}{57}- BirthDate: {26}{57}- GsBirthCountryNodeId: {27}{57}- GsCountryInfoId1: {28}{57}- GsCountryInfoId2: {29}{57}- StudPhoto: {30}{57}- GsCodeIdentTypeId: {31}{57}- IsPrntStaff: {32}{57}- SaStfMemberPrntId: {33}{57}- GsCdeBloodId: {34}{57}- StudLnht: {35}{57}- StudWght: {36}{57}- IdentIssuePlc: {37}{57}- GsCodeLanguageId: {38}{57}- PassporNo: {39}{57}- PassporExpireDate: {40}{57}- PassporIssueDate: {41}{57}- SpecialNeedFlg: {42}{57}- EmployeeFlg: {43}{57}- IdentIssueDate: {44}{57}- IdentExpireDate: {45}{57}- HecId: {46}{57}- GsCdeMaritalStatusId: {47}{57}- MarriageDate: {48}{57}- NoChild: {49}{57}- VisaNumber: {50}{57}- VisaIssueDate: {51}{57}- VisaExpireDate: {52}{57}- SeFormId: {53}{57}- LastDate: {54}{57}- SeUserId: {55}{57}- CovidFlg: {56}{57}{59}", 
				this.EdStudId,
				(this.NationalNumber == null) ? string.Empty : this.NationalNumber.ToString(),
				this.FullNameAr,
				(this.ClFullNameAr == null) ? string.Empty : this.ClFullNameAr.ToString(),
				(this.StudNameAr == null) ? string.Empty : this.StudNameAr.ToString(),
				(this.ClStudNameAr == null) ? string.Empty : this.ClStudNameAr.ToString(),
				(this.FatherNameAr == null) ? string.Empty : this.FatherNameAr.ToString(),
				(this.ClFatherNameAr == null) ? string.Empty : this.ClFatherNameAr.ToString(),
				(this.GrandfatherNameAr == null) ? string.Empty : this.GrandfatherNameAr.ToString(),
				(this.ClGrandfatherNameAr == null) ? string.Empty : this.ClGrandfatherNameAr.ToString(),
				(this.FamilyNameAr == null) ? string.Empty : this.FamilyNameAr.ToString(),
				(this.ClFamilyNameAr == null) ? string.Empty : this.ClFamilyNameAr.ToString(),
				this.FullNameEn,
				(this.StudNameEn == null) ? string.Empty : this.StudNameEn.ToString(),
				(this.FatherNameEn == null) ? string.Empty : this.FatherNameEn.ToString(),
				(this.GrandfatherNameEn == null) ? string.Empty : this.GrandfatherNameEn.ToString(),
				(this.FamilyNameEn == null) ? string.Empty : this.FamilyNameEn.ToString(),
				(this.FatherProfession == null) ? string.Empty : this.FatherProfession.ToString(),
				(this.FatherNationalNumber == null) ? string.Empty : this.FatherNationalNumber.ToString(),
				(this.MotherNationalNumber == null) ? string.Empty : this.MotherNationalNumber.ToString(),
				(this.MotherNameAr == null) ? string.Empty : this.MotherNameAr.ToString(),
				(this.ClMotherNameAr == null) ? string.Empty : this.ClMotherNameAr.ToString(),
				(this.MotherNameEn == null) ? string.Empty : this.MotherNameEn.ToString(),
				(this.GsCodeGenderId == null) ? string.Empty : this.GsCodeGenderId.ToString(),
				(this.GsCodeReligionId == null) ? string.Empty : this.GsCodeReligionId.ToString(),
				(this.BirthRegNumber == null) ? string.Empty : this.BirthRegNumber.ToString(),
				(this.BirthDate == null) ? string.Empty : this.BirthDate.ToString(),
				(this.GsBirthCountryNodeId == null) ? string.Empty : this.GsBirthCountryNodeId.ToString(),
				(this.GsCountryInfoId1 == null) ? string.Empty : this.GsCountryInfoId1.ToString(),
				(this.GsCountryInfoId2 == null) ? string.Empty : this.GsCountryInfoId2.ToString(),
				(this.StudPhoto == null) ? string.Empty : this.StudPhoto.ToString(),
				(this.GsCodeIdentTypeId == null) ? string.Empty : this.GsCodeIdentTypeId.ToString(),
				(this.IsPrntStaff == null) ? string.Empty : this.IsPrntStaff.ToString(),
				(this.SaStfMemberPrntId == null) ? string.Empty : this.SaStfMemberPrntId.ToString(),
				(this.GsCdeBloodId == null) ? string.Empty : this.GsCdeBloodId.ToString(),
				(this.StudLnht == null) ? string.Empty : this.StudLnht.ToString(),
				(this.StudWght == null) ? string.Empty : this.StudWght.ToString(),
				(this.IdentIssuePlc == null) ? string.Empty : this.IdentIssuePlc.ToString(),
				(this.GsCodeLanguageId == null) ? string.Empty : this.GsCodeLanguageId.ToString(),
				(this.PassporNo == null) ? string.Empty : this.PassporNo.ToString(),
				(this.PassporExpireDate == null) ? string.Empty : this.PassporExpireDate.ToString(),
				(this.PassporIssueDate == null) ? string.Empty : this.PassporIssueDate.ToString(),
				(this.SpecialNeedFlg == null) ? string.Empty : this.SpecialNeedFlg.ToString(),
				(this.EmployeeFlg == null) ? string.Empty : this.EmployeeFlg.ToString(),
				(this.IdentIssueDate == null) ? string.Empty : this.IdentIssueDate.ToString(),
				(this.IdentExpireDate == null) ? string.Empty : this.IdentExpireDate.ToString(),
				(this.HecId == null) ? string.Empty : this.HecId.ToString(),
				(this.GsCdeMaritalStatusId == null) ? string.Empty : this.GsCdeMaritalStatusId.ToString(),
				(this.MarriageDate == null) ? string.Empty : this.MarriageDate.ToString(),
				(this.NoChild == null) ? string.Empty : this.NoChild.ToString(),
				(this.VisaNumber == null) ? string.Empty : this.VisaNumber.ToString(),
				(this.VisaIssueDate == null) ? string.Empty : this.VisaIssueDate.ToString(),
				(this.VisaExpireDate == null) ? string.Empty : this.VisaExpireDate.ToString(),
				(this.SeFormId == null) ? string.Empty : this.SeFormId.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				(this.CovidFlg == null) ? string.Empty : this.CovidFlg.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ED_STUD' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class EdStudEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ED_STUD_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ED_STUD"</remarks>
		public System.Decimal EdStudId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalEdStudId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// NATIONAL_NUMBER : 
		/// </summary>
		public System.String		  NationalNumber = null;
		
		/// <summary>
		/// FULL_NAME_AR : 
		/// </summary>
		public System.String		  FullNameAr = string.Empty;
		
		/// <summary>
		/// CL_FULL_NAME_AR : 
		/// </summary>
		public System.String		  ClFullNameAr = null;
		
		/// <summary>
		/// STUD_NAME_AR : 
		/// </summary>
		public System.String		  StudNameAr = null;
		
		/// <summary>
		/// CL_STUD_NAME_AR : 
		/// </summary>
		public System.String		  ClStudNameAr = null;
		
		/// <summary>
		/// FATHER_NAME_AR : 
		/// </summary>
		public System.String		  FatherNameAr = null;
		
		/// <summary>
		/// CL_FATHER_NAME_AR : 
		/// </summary>
		public System.String		  ClFatherNameAr = null;
		
		/// <summary>
		/// GRANDFATHER_NAME_AR : 
		/// </summary>
		public System.String		  GrandfatherNameAr = null;
		
		/// <summary>
		/// CL_GRANDFATHER_NAME_AR : 
		/// </summary>
		public System.String		  ClGrandfatherNameAr = null;
		
		/// <summary>
		/// FAMILY_NAME_AR : 
		/// </summary>
		public System.String		  FamilyNameAr = null;
		
		/// <summary>
		/// CL_FAMILY_NAME_AR : 
		/// </summary>
		public System.String		  ClFamilyNameAr = null;
		
		/// <summary>
		/// FULL_NAME_EN : 
		/// </summary>
		public System.String		  FullNameEn = string.Empty;
		
		/// <summary>
		/// STUD_NAME_EN : 
		/// </summary>
		public System.String		  StudNameEn = null;
		
		/// <summary>
		/// FATHER_NAME_EN : 
		/// </summary>
		public System.String		  FatherNameEn = null;
		
		/// <summary>
		/// GRANDFATHER_NAME_EN : 
		/// </summary>
		public System.String		  GrandfatherNameEn = null;
		
		/// <summary>
		/// FAMILY_NAME_EN : 
		/// </summary>
		public System.String		  FamilyNameEn = null;
		
		/// <summary>
		/// FATHER_PROFESSION : 
		/// </summary>
		public System.String		  FatherProfession = null;
		
		/// <summary>
		/// FATHER_NATIONAL_NUMBER : 
		/// </summary>
		public System.String		  FatherNationalNumber = null;
		
		/// <summary>
		/// MOTHER_NATIONAL_NUMBER : 
		/// </summary>
		public System.String		  MotherNationalNumber = null;
		
		/// <summary>
		/// MOTHER_NAME_AR : 
		/// </summary>
		public System.String		  MotherNameAr = null;
		
		/// <summary>
		/// CL_MOTHER_NAME_AR : 
		/// </summary>
		public System.String		  ClMotherNameAr = null;
		
		/// <summary>
		/// MOTHER_NAME_EN : 
		/// </summary>
		public System.String		  MotherNameEn = null;
		
		/// <summary>
		/// GS_CODE_GENDER_ID : 
		/// </summary>
		public System.Decimal?		  GsCodeGenderId = null;
		
		/// <summary>
		/// GS_CODE_RELIGION_ID : 
		/// </summary>
		public System.Decimal?		  GsCodeReligionId = null;
		
		/// <summary>
		/// BIRTH_REG_NUMBER : 
		/// </summary>
		public System.String		  BirthRegNumber = null;
		
		/// <summary>
		/// BIRTH_DATE : 
		/// </summary>
		public System.DateTime?		  BirthDate = null;
		
		/// <summary>
		/// GS_BIRTH_COUNTRY_NODE_ID : 
		/// </summary>
		public System.Decimal?		  GsBirthCountryNodeId = null;
		
		/// <summary>
		/// GS_COUNTRY_INFO_ID_1 : 
		/// </summary>
		public System.Decimal?		  GsCountryInfoId1 = null;
		
		/// <summary>
		/// GS_COUNTRY_INFO_ID_2 : 
		/// </summary>
		public System.Decimal?		  GsCountryInfoId2 = null;
		
		/// <summary>
		/// STUD_PHOTO : 
		/// </summary>
		public System.String		  StudPhoto = null;
		
		/// <summary>
		/// GS_CODE_IDENT_TYPE_ID : 
		/// </summary>
		public System.Decimal?		  GsCodeIdentTypeId = null;
		
		/// <summary>
		/// IS_PRNT_STAFF : XXX ED_GURAD
		/// </summary>
		public System.Decimal?		  IsPrntStaff = null;
		
		/// <summary>
		/// SA_STF_MEMBER_PRNT_ID : 
		/// </summary>
		public System.Decimal?		  SaStfMemberPrntId = null;
		
		/// <summary>
		/// GS_CDE_BLOOD_ID : 
		/// </summary>
		public System.Decimal?		  GsCdeBloodId = null;
		
		/// <summary>
		/// STUD_LNHT : 
		/// </summary>
		public System.Decimal?		  StudLnht = null;
		
		/// <summary>
		/// STUD_WGHT : 
		/// </summary>
		public System.Decimal?		  StudWght = null;
		
		/// <summary>
		/// IDENT_ISSUE_PLC : مكان اصدار
		/// </summary>
		public System.String		  IdentIssuePlc = null;
		
		/// <summary>
		/// GS_CODE_LANGUAGE_ID : لغة التخصص
		/// </summary>
		public System.Decimal?		  GsCodeLanguageId = null;
		
		/// <summary>
		/// PASSPOR_NO : 
		/// </summary>
		public System.String		  PassporNo = null;
		
		/// <summary>
		/// PASSPOR_EXPIRE_DATE : 
		/// </summary>
		public System.DateTime?		  PassporExpireDate = null;
		
		/// <summary>
		/// PASSPOR_ISSUE_DATE : 
		/// </summary>
		public System.DateTime?		  PassporIssueDate = null;
		
		/// <summary>
		/// SPECIAL_NEED_FLG : 
		/// </summary>
		public System.Boolean?		  SpecialNeedFlg = null;
		
		/// <summary>
		/// EMPLOYEE_FLG : WORK_FLG
		/// </summary>
		public System.Boolean?		  EmployeeFlg = null;
		
		/// <summary>
		/// IDENT_ISSUE_DATE : 
		/// </summary>
		public System.DateTime?		  IdentIssueDate = null;
		
		/// <summary>
		/// IDENT_EXPIRE_DATE : 
		/// </summary>
		public System.DateTime?		  IdentExpireDate = null;
		
		/// <summary>
		/// HEC_ID : XXXnot used moved to ed_stud_faculty HEC-ID
		/// </summary>
		public System.String		  HecId = null;
		
		/// <summary>
		/// GS_CDE_MARITAL_STATUS_ID : 
		/// </summary>
		public System.Decimal?		  GsCdeMaritalStatusId = null;
		
		/// <summary>
		/// MARRIAGE_DATE : 
		/// </summary>
		public System.DateTime?		  MarriageDate = null;
		
		/// <summary>
		/// NO_CHILD : 
		/// </summary>
		public System.Int32?		  NoChild = null;
		
		/// <summary>
		/// VISA_NUMBER : رقم التأشيرة
		/// </summary>
		public System.String		  VisaNumber = null;
		
		/// <summary>
		/// VISA_ISSUE_DATE : 
		/// </summary>
		public System.DateTime?		  VisaIssueDate = null;
		
		/// <summary>
		/// VISA_EXPIRE_DATE : 
		/// </summary>
		public System.DateTime?		  VisaExpireDate = null;
		
		/// <summary>
		/// SE_FORM_ID : 
		/// </summary>
		public System.Decimal?		  SeFormId = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		
		/// <summary>
		/// COVID_FLG : 
		/// </summary>
		public System.Boolean?		  CovidFlg = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private GsCdeBlood _gsCdeBloodIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeBlood"/>.
		/// </summary>
		/// <value>The source GsCdeBlood for GsCdeBloodId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeBlood GsCdeBloodIdSource
      	{
            get { return this._gsCdeBloodIdSource; }
            set { this._gsCdeBloodIdSource = value; }
      	}
		private GsCdeMaritalStatus _gsCdeMaritalStatusIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeMaritalStatus"/>.
		/// </summary>
		/// <value>The source GsCdeMaritalStatus for GsCdeMaritalStatusId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeMaritalStatus GsCdeMaritalStatusIdSource
      	{
            get { return this._gsCdeMaritalStatusIdSource; }
            set { this._gsCdeMaritalStatusIdSource = value; }
      	}
		private GsCodeGender _gsCodeGenderIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeGender"/>.
		/// </summary>
		/// <value>The source GsCodeGender for GsCodeGenderId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeGender GsCodeGenderIdSource
      	{
            get { return this._gsCodeGenderIdSource; }
            set { this._gsCodeGenderIdSource = value; }
      	}
		private GsCodeIdentType _gsCodeIdentTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeIdentType"/>.
		/// </summary>
		/// <value>The source GsCodeIdentType for GsCodeIdentTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeIdentType GsCodeIdentTypeIdSource
      	{
            get { return this._gsCodeIdentTypeIdSource; }
            set { this._gsCodeIdentTypeIdSource = value; }
      	}
		private GsCodeLanguage _gsCodeLanguageIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeLanguage"/>.
		/// </summary>
		/// <value>The source GsCodeLanguage for GsCodeLanguageId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeLanguage GsCodeLanguageIdSource
      	{
            get { return this._gsCodeLanguageIdSource; }
            set { this._gsCodeLanguageIdSource = value; }
      	}
		private GsCodeReligion _gsCodeReligionIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeReligion"/>.
		/// </summary>
		/// <value>The source GsCodeReligion for GsCodeReligionId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeReligion GsCodeReligionIdSource
      	{
            get { return this._gsCodeReligionIdSource; }
            set { this._gsCodeReligionIdSource = value; }
      	}
		private GsCountryNode _gsCountryInfoId1Source = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryInfoId1.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCountryNode GsCountryInfoId1Source
      	{
            get { return this._gsCountryInfoId1Source; }
            set { this._gsCountryInfoId1Source = value; }
      	}
		private GsCountryNode _gsBirthCountryNodeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsBirthCountryNodeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCountryNode GsBirthCountryNodeIdSource
      	{
            get { return this._gsBirthCountryNodeIdSource; }
            set { this._gsBirthCountryNodeIdSource = value; }
      	}
		private SaStfMember _saStfMemberPrntIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SaStfMember"/>.
		/// </summary>
		/// <value>The source SaStfMember for SaStfMemberPrntId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SaStfMember SaStfMemberPrntIdSource
      	{
            get { return this._saStfMemberPrntIdSource; }
            set { this._saStfMemberPrntIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region EdStudFacultyCollection
		
		private TList<EdStudFaculty> _edStudFacultyEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudFacultyEdStudId
		/// </summary>
		
		public TList<EdStudFaculty> EdStudFacultyCollection
		{
			get
			{
				if (_edStudFacultyEdStudId == null)
				{
				_edStudFacultyEdStudId = new TList<EdStudFaculty>();
				}
	
				return _edStudFacultyEdStudId;
			}
			set { _edStudFacultyEdStudId = value; }
		}
		
		#endregion

		#region EdStudTransCollection
		
		private TList<EdStudTrans> _edStudTransEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudTransEdStudId
		/// </summary>
		
		public TList<EdStudTrans> EdStudTransCollection
		{
			get
			{
				if (_edStudTransEdStudId == null)
				{
				_edStudTransEdStudId = new TList<EdStudTrans>();
				}
	
				return _edStudTransEdStudId;
			}
			set { _edStudTransEdStudId = value; }
		}
		
		#endregion

		#region SvStudAskAdvReCollection
		
		private TList<SvStudAskAdvRe> _svStudAskAdvReEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudAskAdvReEdStudId
		/// </summary>
		
		public TList<SvStudAskAdvRe> SvStudAskAdvReCollection
		{
			get
			{
				if (_svStudAskAdvReEdStudId == null)
				{
				_svStudAskAdvReEdStudId = new TList<SvStudAskAdvRe>();
				}
	
				return _svStudAskAdvReEdStudId;
			}
			set { _svStudAskAdvReEdStudId = value; }
		}
		
		#endregion

		#region AccomStudResponsibleCollection
		
		private TList<AccomStudResponsible> _accomStudResponsibleEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomStudResponsibleEdStudId
		/// </summary>
		
		public TList<AccomStudResponsible> AccomStudResponsibleCollection
		{
			get
			{
				if (_accomStudResponsibleEdStudId == null)
				{
				_accomStudResponsibleEdStudId = new TList<AccomStudResponsible>();
				}
	
				return _accomStudResponsibleEdStudId;
			}
			set { _accomStudResponsibleEdStudId = value; }
		}
		
		#endregion

		#region FeeStudBank
		
		private FeeStudBank _feeStudBankEdStudId;
		
		/// <summary>
		///	Holds a  FeeStudBank entity object
		///	which is related to this object through the relation _feeStudBankEdStudId
		/// </summary>
		
		public FeeStudBank FeeStudBank
		{
			get {		return _feeStudBankEdStudId;		}
			set { 	_feeStudBankEdStudId = value; 	}
		}
		
		#endregion 

		#region EdStudCourseRegPreCollection
		
		private TList<EdStudCourseRegPre> _edStudCourseRegPreEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegPreEdStudId
		/// </summary>
		
		public TList<EdStudCourseRegPre> EdStudCourseRegPreCollection
		{
			get
			{
				if (_edStudCourseRegPreEdStudId == null)
				{
				_edStudCourseRegPreEdStudId = new TList<EdStudCourseRegPre>();
				}
	
				return _edStudCourseRegPreEdStudId;
			}
			set { _edStudCourseRegPreEdStudId = value; }
		}
		
		#endregion

		#region SvStudStaffEvalExtCollection
		
		private TList<SvStudStaffEvalExt> _svStudStaffEvalExtEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudStaffEvalExtEdStudId
		/// </summary>
		
		public TList<SvStudStaffEvalExt> SvStudStaffEvalExtCollection
		{
			get
			{
				if (_svStudStaffEvalExtEdStudId == null)
				{
				_svStudStaffEvalExtEdStudId = new TList<SvStudStaffEvalExt>();
				}
	
				return _svStudStaffEvalExtEdStudId;
			}
			set { _svStudStaffEvalExtEdStudId = value; }
		}
		
		#endregion

		#region EdStudSemesterTempCollection
		
		private TList<EdStudSemesterTemp> _edStudSemesterTempEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudSemesterTempEdStudId
		/// </summary>
		
		public TList<EdStudSemesterTemp> EdStudSemesterTempCollection
		{
			get
			{
				if (_edStudSemesterTempEdStudId == null)
				{
				_edStudSemesterTempEdStudId = new TList<EdStudSemesterTemp>();
				}
	
				return _edStudSemesterTempEdStudId;
			}
			set { _edStudSemesterTempEdStudId = value; }
		}
		
		#endregion

		#region MdiStudProblemCollection
		
		private TList<MdiStudProblem> _mdiStudProblemEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mdiStudProblemEdStudId
		/// </summary>
		
		public TList<MdiStudProblem> MdiStudProblemCollection
		{
			get
			{
				if (_mdiStudProblemEdStudId == null)
				{
				_mdiStudProblemEdStudId = new TList<MdiStudProblem>();
				}
	
				return _mdiStudProblemEdStudId;
			}
			set { _mdiStudProblemEdStudId = value; }
		}
		
		#endregion

		#region FeeStudInstallmentCollection
		
		private TList<FeeStudInstallment> _feeStudInstallmentEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudInstallmentEdStudId
		/// </summary>
		
		public TList<FeeStudInstallment> FeeStudInstallmentCollection
		{
			get
			{
				if (_feeStudInstallmentEdStudId == null)
				{
				_feeStudInstallmentEdStudId = new TList<FeeStudInstallment>();
				}
	
				return _feeStudInstallmentEdStudId;
			}
			set { _feeStudInstallmentEdStudId = value; }
		}
		
		#endregion

		#region ScStudGroupCollection
		
		private TList<ScStudGroup> _scStudGroupEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scStudGroupEdStudId
		/// </summary>
		
		public TList<ScStudGroup> ScStudGroupCollection
		{
			get
			{
				if (_scStudGroupEdStudId == null)
				{
				_scStudGroupEdStudId = new TList<ScStudGroup>();
				}
	
				return _scStudGroupEdStudId;
			}
			set { _scStudGroupEdStudId = value; }
		}
		
		#endregion

		#region EdStudMltryCrsCollection
		
		private TList<EdStudMltryCrs> _edStudMltryCrsEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudMltryCrsEdStudId
		/// </summary>
		
		public TList<EdStudMltryCrs> EdStudMltryCrsCollection
		{
			get
			{
				if (_edStudMltryCrsEdStudId == null)
				{
				_edStudMltryCrsEdStudId = new TList<EdStudMltryCrs>();
				}
	
				return _edStudMltryCrsEdStudId;
			}
			set { _edStudMltryCrsEdStudId = value; }
		}
		
		#endregion

		#region RsrchStudRegisterCollection
		
		private TList<RsrchStudRegister> _rsrchStudRegisterEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _rsrchStudRegisterEdStudId
		/// </summary>
		
		public TList<RsrchStudRegister> RsrchStudRegisterCollection
		{
			get
			{
				if (_rsrchStudRegisterEdStudId == null)
				{
				_rsrchStudRegisterEdStudId = new TList<RsrchStudRegister>();
				}
	
				return _rsrchStudRegisterEdStudId;
			}
			set { _rsrchStudRegisterEdStudId = value; }
		}
		
		#endregion

		#region EdTrainStudCollection
		
		private TList<EdTrainStud> _edTrainStudEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edTrainStudEdStudId
		/// </summary>
		
		public TList<EdTrainStud> EdTrainStudCollection
		{
			get
			{
				if (_edTrainStudEdStudId == null)
				{
				_edTrainStudEdStudId = new TList<EdTrainStud>();
				}
	
				return _edTrainStudEdStudId;
			}
			set { _edTrainStudEdStudId = value; }
		}
		
		#endregion

		#region EdStudMilitaryStateCollection
		
		private TList<EdStudMilitaryState> _edStudMilitaryStateEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudMilitaryStateEdStudId
		/// </summary>
		
		public TList<EdStudMilitaryState> EdStudMilitaryStateCollection
		{
			get
			{
				if (_edStudMilitaryStateEdStudId == null)
				{
				_edStudMilitaryStateEdStudId = new TList<EdStudMilitaryState>();
				}
	
				return _edStudMilitaryStateEdStudId;
			}
			set { _edStudMilitaryStateEdStudId = value; }
		}
		
		#endregion

		#region EdStudGraduationAwardCollection
		
		private TList<EdStudGraduationAward> _edStudGraduationAwardEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudGraduationAwardEdStudId
		/// </summary>
		
		public TList<EdStudGraduationAward> EdStudGraduationAwardCollection
		{
			get
			{
				if (_edStudGraduationAwardEdStudId == null)
				{
				_edStudGraduationAwardEdStudId = new TList<EdStudGraduationAward>();
				}
	
				return _edStudGraduationAwardEdStudId;
			}
			set { _edStudGraduationAwardEdStudId = value; }
		}
		
		#endregion

		#region EdStudGuardCollection
		
		private TList<EdStudGuard> _edStudGuardEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudGuardEdStudId
		/// </summary>
		
		public TList<EdStudGuard> EdStudGuardCollection
		{
			get
			{
				if (_edStudGuardEdStudId == null)
				{
				_edStudGuardEdStudId = new TList<EdStudGuard>();
				}
	
				return _edStudGuardEdStudId;
			}
			set { _edStudGuardEdStudId = value; }
		}
		
		#endregion

		#region EdStudTransFromReqCollection
		
		private TList<EdStudTransFromReq> _edStudTransFromReqEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudTransFromReqEdStudId
		/// </summary>
		
		public TList<EdStudTransFromReq> EdStudTransFromReqCollection
		{
			get
			{
				if (_edStudTransFromReqEdStudId == null)
				{
				_edStudTransFromReqEdStudId = new TList<EdStudTransFromReq>();
				}
	
				return _edStudTransFromReqEdStudId;
			}
			set { _edStudTransFromReqEdStudId = value; }
		}
		
		#endregion

		#region SvStudStaffEvalCollection
		
		private TList<SvStudStaffEval> _svStudStaffEvalEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudStaffEvalEdStudId
		/// </summary>
		
		public TList<SvStudStaffEval> SvStudStaffEvalCollection
		{
			get
			{
				if (_svStudStaffEvalEdStudId == null)
				{
				_svStudStaffEvalEdStudId = new TList<SvStudStaffEval>();
				}
	
				return _svStudStaffEvalEdStudId;
			}
			set { _svStudStaffEvalEdStudId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsStateFromCollection
		
		private TList<EdStudIntTrnsStateFrom> _edStudIntTrnsStateFromEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsStateFromEdStudId
		/// </summary>
		
		public TList<EdStudIntTrnsStateFrom> EdStudIntTrnsStateFromCollection
		{
			get
			{
				if (_edStudIntTrnsStateFromEdStudId == null)
				{
				_edStudIntTrnsStateFromEdStudId = new TList<EdStudIntTrnsStateFrom>();
				}
	
				return _edStudIntTrnsStateFromEdStudId;
			}
			set { _edStudIntTrnsStateFromEdStudId = value; }
		}
		
		#endregion

		#region EdStudAcadWarnCollection
		
		private TList<EdStudAcadWarn> _edStudAcadWarnEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAcadWarnEdStudId
		/// </summary>
		
		public TList<EdStudAcadWarn> EdStudAcadWarnCollection
		{
			get
			{
				if (_edStudAcadWarnEdStudId == null)
				{
				_edStudAcadWarnEdStudId = new TList<EdStudAcadWarn>();
				}
	
				return _edStudAcadWarnEdStudId;
			}
			set { _edStudAcadWarnEdStudId = value; }
		}
		
		#endregion

		#region MdiStudHosptlCollection
		
		private TList<MdiStudHosptl> _mdiStudHosptlEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mdiStudHosptlEdStudId
		/// </summary>
		
		public TList<MdiStudHosptl> MdiStudHosptlCollection
		{
			get
			{
				if (_mdiStudHosptlEdStudId == null)
				{
				_mdiStudHosptlEdStudId = new TList<MdiStudHosptl>();
				}
	
				return _mdiStudHosptlEdStudId;
			}
			set { _mdiStudHosptlEdStudId = value; }
		}
		
		#endregion

		#region EdStudLangCollection
		
		private TList<EdStudLang> _edStudLangEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudLangEdStudId
		/// </summary>
		
		public TList<EdStudLang> EdStudLangCollection
		{
			get
			{
				if (_edStudLangEdStudId == null)
				{
				_edStudLangEdStudId = new TList<EdStudLang>();
				}
	
				return _edStudLangEdStudId;
			}
			set { _edStudLangEdStudId = value; }
		}
		
		#endregion

		#region MdiStudRecordCollection
		
		private TList<MdiStudRecord> _mdiStudRecordEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mdiStudRecordEdStudId
		/// </summary>
		
		public TList<MdiStudRecord> MdiStudRecordCollection
		{
			get
			{
				if (_mdiStudRecordEdStudId == null)
				{
				_mdiStudRecordEdStudId = new TList<MdiStudRecord>();
				}
	
				return _mdiStudRecordEdStudId;
			}
			set { _mdiStudRecordEdStudId = value; }
		}
		
		#endregion

		#region EdStudLatenessCollection
		
		private TList<EdStudLateness> _edStudLatenessEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudLatenessEdStudId
		/// </summary>
		
		public TList<EdStudLateness> EdStudLatenessCollection
		{
			get
			{
				if (_edStudLatenessEdStudId == null)
				{
				_edStudLatenessEdStudId = new TList<EdStudLateness>();
				}
	
				return _edStudLatenessEdStudId;
			}
			set { _edStudLatenessEdStudId = value; }
		}
		
		#endregion

		#region FeeStudItemCnclCollection
		
		private TList<FeeStudItemCncl> _feeStudItemCnclEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudItemCnclEdStudId
		/// </summary>
		
		public TList<FeeStudItemCncl> FeeStudItemCnclCollection
		{
			get
			{
				if (_feeStudItemCnclEdStudId == null)
				{
				_feeStudItemCnclEdStudId = new TList<FeeStudItemCncl>();
				}
	
				return _feeStudItemCnclEdStudId;
			}
			set { _feeStudItemCnclEdStudId = value; }
		}
		
		#endregion

		#region EdStudActivityCollection
		
		private TList<EdStudActivity> _edStudActivityEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudActivityEdStudId
		/// </summary>
		
		public TList<EdStudActivity> EdStudActivityCollection
		{
			get
			{
				if (_edStudActivityEdStudId == null)
				{
				_edStudActivityEdStudId = new TList<EdStudActivity>();
				}
	
				return _edStudActivityEdStudId;
			}
			set { _edStudActivityEdStudId = value; }
		}
		
		#endregion

		#region FeeStudPayPostponeCollection
		
		private TList<FeeStudPayPostpone> _feeStudPayPostponeEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudPayPostponeEdStudId
		/// </summary>
		
		public TList<FeeStudPayPostpone> FeeStudPayPostponeCollection
		{
			get
			{
				if (_feeStudPayPostponeEdStudId == null)
				{
				_feeStudPayPostponeEdStudId = new TList<FeeStudPayPostpone>();
				}
	
				return _feeStudPayPostponeEdStudId;
			}
			set { _feeStudPayPostponeEdStudId = value; }
		}
		
		#endregion

		#region EdStudRsdncyCollection
		
		private TList<EdStudRsdncy> _edStudRsdncyEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudRsdncyEdStudId
		/// </summary>
		
		public TList<EdStudRsdncy> EdStudRsdncyCollection
		{
			get
			{
				if (_edStudRsdncyEdStudId == null)
				{
				_edStudRsdncyEdStudId = new TList<EdStudRsdncy>();
				}
	
				return _edStudRsdncyEdStudId;
			}
			set { _edStudRsdncyEdStudId = value; }
		}
		
		#endregion

		#region MltStudInfoCollection
		
		private TList<MltStudInfo> _mltStudInfoEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mltStudInfoEdStudId
		/// </summary>
		
		public TList<MltStudInfo> MltStudInfoCollection
		{
			get
			{
				if (_mltStudInfoEdStudId == null)
				{
				_mltStudInfoEdStudId = new TList<MltStudInfo>();
				}
	
				return _mltStudInfoEdStudId;
			}
			set { _mltStudInfoEdStudId = value; }
		}
		
		#endregion

		#region SvStudLockerReqCollection
		
		private TList<SvStudLockerReq> _svStudLockerReqEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudLockerReqEdStudId
		/// </summary>
		
		public TList<SvStudLockerReq> SvStudLockerReqCollection
		{
			get
			{
				if (_svStudLockerReqEdStudId == null)
				{
				_svStudLockerReqEdStudId = new TList<SvStudLockerReq>();
				}
	
				return _svStudLockerReqEdStudId;
			}
			set { _svStudLockerReqEdStudId = value; }
		}
		
		#endregion

		#region EdStudMissionCollection
		
		private TList<EdStudMission> _edStudMissionEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudMissionEdStudId
		/// </summary>
		
		public TList<EdStudMission> EdStudMissionCollection
		{
			get
			{
				if (_edStudMissionEdStudId == null)
				{
				_edStudMissionEdStudId = new TList<EdStudMission>();
				}
	
				return _edStudMissionEdStudId;
			}
			set { _edStudMissionEdStudId = value; }
		}
		
		#endregion

		#region AdmAppWorkExperCollection
		
		private TList<AdmAppWorkExper> _admAppWorkExperEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppWorkExperEdStudId
		/// </summary>
		
		public TList<AdmAppWorkExper> AdmAppWorkExperCollection
		{
			get
			{
				if (_admAppWorkExperEdStudId == null)
				{
				_admAppWorkExperEdStudId = new TList<AdmAppWorkExper>();
				}
	
				return _admAppWorkExperEdStudId;
			}
			set { _admAppWorkExperEdStudId = value; }
		}
		
		#endregion

		#region EdStudNoteCollection
		
		private TList<EdStudNote> _edStudNoteEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudNoteEdStudId
		/// </summary>
		
		public TList<EdStudNote> EdStudNoteCollection
		{
			get
			{
				if (_edStudNoteEdStudId == null)
				{
				_edStudNoteEdStudId = new TList<EdStudNote>();
				}
	
				return _edStudNoteEdStudId;
			}
			set { _edStudNoteEdStudId = value; }
		}
		
		#endregion

		#region EdStudAcadmicAdvCollection
		
		private TList<EdStudAcadmicAdv> _edStudAcadmicAdvEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAcadmicAdvEdStudId
		/// </summary>
		
		public TList<EdStudAcadmicAdv> EdStudAcadmicAdvCollection
		{
			get
			{
				if (_edStudAcadmicAdvEdStudId == null)
				{
				_edStudAcadmicAdvEdStudId = new TList<EdStudAcadmicAdv>();
				}
	
				return _edStudAcadmicAdvEdStudId;
			}
			set { _edStudAcadmicAdvEdStudId = value; }
		}
		
		#endregion

		#region CtrSrvcCrewCollection
		
		private TList<CtrSrvcCrew> _ctrSrvcCrewEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _ctrSrvcCrewEdStudId
		/// </summary>
		
		public TList<CtrSrvcCrew> CtrSrvcCrewCollection
		{
			get
			{
				if (_ctrSrvcCrewEdStudId == null)
				{
				_ctrSrvcCrewEdStudId = new TList<CtrSrvcCrew>();
				}
	
				return _ctrSrvcCrewEdStudId;
			}
			set { _ctrSrvcCrewEdStudId = value; }
		}
		
		#endregion

		#region SeBlockTransCollection
		
		private TList<SeBlockTrans> _seBlockTransEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _seBlockTransEdStudId
		/// </summary>
		
		public TList<SeBlockTrans> SeBlockTransCollection
		{
			get
			{
				if (_seBlockTransEdStudId == null)
				{
				_seBlockTransEdStudId = new TList<SeBlockTrans>();
				}
	
				return _seBlockTransEdStudId;
			}
			set { _seBlockTransEdStudId = value; }
		}
		
		#endregion

		#region SpoSponsorStudCollection
		
		private TList<SpoSponsorStud> _spoSponsorStudEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorStudEdStudId
		/// </summary>
		
		public TList<SpoSponsorStud> SpoSponsorStudCollection
		{
			get
			{
				if (_spoSponsorStudEdStudId == null)
				{
				_spoSponsorStudEdStudId = new TList<SpoSponsorStud>();
				}
	
				return _spoSponsorStudEdStudId;
			}
			set { _spoSponsorStudEdStudId = value; }
		}
		
		#endregion

		#region AlmJobCollection
		
		private TList<AlmJob> _almJobEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _almJobEdStudId
		/// </summary>
		
		public TList<AlmJob> AlmJobCollection
		{
			get
			{
				if (_almJobEdStudId == null)
				{
				_almJobEdStudId = new TList<AlmJob>();
				}
	
				return _almJobEdStudId;
			}
			set { _almJobEdStudId = value; }
		}
		
		#endregion

		#region FeeStudVoucherCollection
		
		private TList<FeeStudVoucher> _feeStudVoucherEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudVoucherEdStudId
		/// </summary>
		
		public TList<FeeStudVoucher> FeeStudVoucherCollection
		{
			get
			{
				if (_feeStudVoucherEdStudId == null)
				{
				_feeStudVoucherEdStudId = new TList<FeeStudVoucher>();
				}
	
				return _feeStudVoucherEdStudId;
			}
			set { _feeStudVoucherEdStudId = value; }
		}
		
		#endregion

		#region SpoSponsorStudSemesterCollection
		
		private TList<SpoSponsorStudSemester> _spoSponsorStudSemesterEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorStudSemesterEdStudId
		/// </summary>
		
		public TList<SpoSponsorStudSemester> SpoSponsorStudSemesterCollection
		{
			get
			{
				if (_spoSponsorStudSemesterEdStudId == null)
				{
				_spoSponsorStudSemesterEdStudId = new TList<SpoSponsorStudSemester>();
				}
	
				return _spoSponsorStudSemesterEdStudId;
			}
			set { _spoSponsorStudSemesterEdStudId = value; }
		}
		
		#endregion

		#region FeeStudFundCollection
		
		private TList<FeeStudFund> _feeStudFundEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudFundEdStudId
		/// </summary>
		
		public TList<FeeStudFund> FeeStudFundCollection
		{
			get
			{
				if (_feeStudFundEdStudId == null)
				{
				_feeStudFundEdStudId = new TList<FeeStudFund>();
				}
	
				return _feeStudFundEdStudId;
			}
			set { _feeStudFundEdStudId = value; }
		}
		
		#endregion

		#region PgStudTravelCollection
		
		private TList<PgStudTravel> _pgStudTravelEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgStudTravelEdStudId
		/// </summary>
		
		public TList<PgStudTravel> PgStudTravelCollection
		{
			get
			{
				if (_pgStudTravelEdStudId == null)
				{
				_pgStudTravelEdStudId = new TList<PgStudTravel>();
				}
	
				return _pgStudTravelEdStudId;
			}
			set { _pgStudTravelEdStudId = value; }
		}
		
		#endregion

		#region CtrStudOutCollection
		
		private TList<CtrStudOut> _ctrStudOutEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _ctrStudOutEdStudId
		/// </summary>
		
		public TList<CtrStudOut> CtrStudOutCollection
		{
			get
			{
				if (_ctrStudOutEdStudId == null)
				{
				_ctrStudOutEdStudId = new TList<CtrStudOut>();
				}
	
				return _ctrStudOutEdStudId;
			}
			set { _ctrStudOutEdStudId = value; }
		}
		
		#endregion

		#region FeeStudDiscCollection
		
		private TList<FeeStudDisc> _feeStudDiscEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudDiscEdStudId
		/// </summary>
		
		public TList<FeeStudDisc> FeeStudDiscCollection
		{
			get
			{
				if (_feeStudDiscEdStudId == null)
				{
				_feeStudDiscEdStudId = new TList<FeeStudDisc>();
				}
	
				return _feeStudDiscEdStudId;
			}
			set { _feeStudDiscEdStudId = value; }
		}
		
		#endregion

		#region EdStudSportCollection
		
		private TList<EdStudSport> _edStudSportEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudSportEdStudId
		/// </summary>
		
		public TList<EdStudSport> EdStudSportCollection
		{
			get
			{
				if (_edStudSportEdStudId == null)
				{
				_edStudSportEdStudId = new TList<EdStudSport>();
				}
	
				return _edStudSportEdStudId;
			}
			set { _edStudSportEdStudId = value; }
		}
		
		#endregion

		#region MdiStudVaccCollection
		
		private TList<MdiStudVacc> _mdiStudVaccEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mdiStudVaccEdStudId
		/// </summary>
		
		public TList<MdiStudVacc> MdiStudVaccCollection
		{
			get
			{
				if (_mdiStudVaccEdStudId == null)
				{
				_mdiStudVaccEdStudId = new TList<MdiStudVacc>();
				}
	
				return _mdiStudVaccEdStudId;
			}
			set { _mdiStudVaccEdStudId = value; }
		}
		
		#endregion

		#region CtrStudExpCollection
		
		private TList<CtrStudExp> _ctrStudExpEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _ctrStudExpEdStudId
		/// </summary>
		
		public TList<CtrStudExp> CtrStudExpCollection
		{
			get
			{
				if (_ctrStudExpEdStudId == null)
				{
				_ctrStudExpEdStudId = new TList<CtrStudExp>();
				}
	
				return _ctrStudExpEdStudId;
			}
			set { _ctrStudExpEdStudId = value; }
		}
		
		#endregion

		#region MdiStudClnqCollection
		
		private TList<MdiStudClnq> _mdiStudClnqEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mdiStudClnqEdStudId
		/// </summary>
		
		public TList<MdiStudClnq> MdiStudClnqCollection
		{
			get
			{
				if (_mdiStudClnqEdStudId == null)
				{
				_mdiStudClnqEdStudId = new TList<MdiStudClnq>();
				}
	
				return _mdiStudClnqEdStudId;
			}
			set { _mdiStudClnqEdStudId = value; }
		}
		
		#endregion

		#region PgThesisStudCollection
		
		private TList<PgThesisStud> _pgThesisStudEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisStudEdStudId
		/// </summary>
		
		public TList<PgThesisStud> PgThesisStudCollection
		{
			get
			{
				if (_pgThesisStudEdStudId == null)
				{
				_pgThesisStudEdStudId = new TList<PgThesisStud>();
				}
	
				return _pgThesisStudEdStudId;
			}
			set { _pgThesisStudEdStudId = value; }
		}
		
		#endregion

		#region FeeStudRetrieveRequestCollection
		
		private TList<FeeStudRetrieveRequest> _feeStudRetrieveRequestEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudRetrieveRequestEdStudId
		/// </summary>
		
		public TList<FeeStudRetrieveRequest> FeeStudRetrieveRequestCollection
		{
			get
			{
				if (_feeStudRetrieveRequestEdStudId == null)
				{
				_feeStudRetrieveRequestEdStudId = new TList<FeeStudRetrieveRequest>();
				}
	
				return _feeStudRetrieveRequestEdStudId;
			}
			set { _feeStudRetrieveRequestEdStudId = value; }
		}
		
		#endregion

		#region EdStudViolCollection
		
		private TList<EdStudViol> _edStudViolEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudViolEdStudId
		/// </summary>
		
		public TList<EdStudViol> EdStudViolCollection
		{
			get
			{
				if (_edStudViolEdStudId == null)
				{
				_edStudViolEdStudId = new TList<EdStudViol>();
				}
	
				return _edStudViolEdStudId;
			}
			set { _edStudViolEdStudId = value; }
		}
		
		#endregion

		#region AdmApplicantCollection
		
		private TList<AdmApplicant> _admApplicantEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admApplicantEdStudId
		/// </summary>
		
		public TList<AdmApplicant> AdmApplicantCollection
		{
			get
			{
				if (_admApplicantEdStudId == null)
				{
				_admApplicantEdStudId = new TList<AdmApplicant>();
				}
	
				return _admApplicantEdStudId;
			}
			set { _admApplicantEdStudId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsCourseFromCollection
		
		private TList<EdStudIntTrnsCourseFrom> _edStudIntTrnsCourseFromEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsCourseFromEdStudId
		/// </summary>
		
		public TList<EdStudIntTrnsCourseFrom> EdStudIntTrnsCourseFromCollection
		{
			get
			{
				if (_edStudIntTrnsCourseFromEdStudId == null)
				{
				_edStudIntTrnsCourseFromEdStudId = new TList<EdStudIntTrnsCourseFrom>();
				}
	
				return _edStudIntTrnsCourseFromEdStudId;
			}
			set { _edStudIntTrnsCourseFromEdStudId = value; }
		}
		
		#endregion

		#region AccomStudAbsenceCollection
		
		private TList<AccomStudAbsence> _accomStudAbsenceEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomStudAbsenceEdStudId
		/// </summary>
		
		public TList<AccomStudAbsence> AccomStudAbsenceCollection
		{
			get
			{
				if (_accomStudAbsenceEdStudId == null)
				{
				_accomStudAbsenceEdStudId = new TList<AccomStudAbsence>();
				}
	
				return _accomStudAbsenceEdStudId;
			}
			set { _accomStudAbsenceEdStudId = value; }
		}
		
		#endregion

		#region FeeItemTrnsBlncCollection
		
		private TList<FeeItemTrnsBlnc> _feeItemTrnsBlncEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeItemTrnsBlncEdStudId
		/// </summary>
		
		public TList<FeeItemTrnsBlnc> FeeItemTrnsBlncCollection
		{
			get
			{
				if (_feeItemTrnsBlncEdStudId == null)
				{
				_feeItemTrnsBlncEdStudId = new TList<FeeItemTrnsBlnc>();
				}
	
				return _feeItemTrnsBlncEdStudId;
			}
			set { _feeItemTrnsBlncEdStudId = value; }
		}
		
		#endregion

		#region AdmScholorshipCollection
		
		private TList<AdmScholorship> _admScholorshipEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admScholorshipEdStudId
		/// </summary>
		
		public TList<AdmScholorship> AdmScholorshipCollection
		{
			get
			{
				if (_admScholorshipEdStudId == null)
				{
				_admScholorshipEdStudId = new TList<AdmScholorship>();
				}
	
				return _admScholorshipEdStudId;
			}
			set { _admScholorshipEdStudId = value; }
		}
		
		#endregion

		#region FeeStudInstallmentRequestCollection
		
		private TList<FeeStudInstallmentRequest> _feeStudInstallmentRequestEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudInstallmentRequestEdStudId
		/// </summary>
		
		public TList<FeeStudInstallmentRequest> FeeStudInstallmentRequestCollection
		{
			get
			{
				if (_feeStudInstallmentRequestEdStudId == null)
				{
				_feeStudInstallmentRequestEdStudId = new TList<FeeStudInstallmentRequest>();
				}
	
				return _feeStudInstallmentRequestEdStudId;
			}
			set { _feeStudInstallmentRequestEdStudId = value; }
		}
		
		#endregion

		#region EdStudGrantTempCollection
		
		private TList<EdStudGrantTemp> _edStudGrantTempEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudGrantTempEdStudId
		/// </summary>
		
		public TList<EdStudGrantTemp> EdStudGrantTempCollection
		{
			get
			{
				if (_edStudGrantTempEdStudId == null)
				{
				_edStudGrantTempEdStudId = new TList<EdStudGrantTemp>();
				}
	
				return _edStudGrantTempEdStudId;
			}
			set { _edStudGrantTempEdStudId = value; }
		}
		
		#endregion

		#region FeeStudAllowanceCollection
		
		private TList<FeeStudAllowance> _feeStudAllowanceEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudAllowanceEdStudId
		/// </summary>
		
		public TList<FeeStudAllowance> FeeStudAllowanceCollection
		{
			get
			{
				if (_feeStudAllowanceEdStudId == null)
				{
				_feeStudAllowanceEdStudId = new TList<FeeStudAllowance>();
				}
	
				return _feeStudAllowanceEdStudId;
			}
			set { _feeStudAllowanceEdStudId = value; }
		}
		
		#endregion

		#region FeeInvoiceCollection
		
		private TList<FeeInvoice> _feeInvoiceEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeInvoiceEdStudId
		/// </summary>
		
		public TList<FeeInvoice> FeeInvoiceCollection
		{
			get
			{
				if (_feeInvoiceEdStudId == null)
				{
				_feeInvoiceEdStudId = new TList<FeeInvoice>();
				}
	
				return _feeInvoiceEdStudId;
			}
			set { _feeInvoiceEdStudId = value; }
		}
		
		#endregion

		#region EdStudProblemCollection
		
		private TList<EdStudProblem> _edStudProblemEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudProblemEdStudId
		/// </summary>
		
		public TList<EdStudProblem> EdStudProblemCollection
		{
			get
			{
				if (_edStudProblemEdStudId == null)
				{
				_edStudProblemEdStudId = new TList<EdStudProblem>();
				}
	
				return _edStudProblemEdStudId;
			}
			set { _edStudProblemEdStudId = value; }
		}
		
		#endregion

		#region AlmPrintRequestCollection
		
		private TList<AlmPrintRequest> _almPrintRequestEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _almPrintRequestEdStudId
		/// </summary>
		
		public TList<AlmPrintRequest> AlmPrintRequestCollection
		{
			get
			{
				if (_almPrintRequestEdStudId == null)
				{
				_almPrintRequestEdStudId = new TList<AlmPrintRequest>();
				}
	
				return _almPrintRequestEdStudId;
			}
			set { _almPrintRequestEdStudId = value; }
		}
		
		#endregion

		#region FeeInstlmntStudCollection
		
		private TList<FeeInstlmntStud> _feeInstlmntStudEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeInstlmntStudEdStudId
		/// </summary>
		
		public TList<FeeInstlmntStud> FeeInstlmntStudCollection
		{
			get
			{
				if (_feeInstlmntStudEdStudId == null)
				{
				_feeInstlmntStudEdStudId = new TList<FeeInstlmntStud>();
				}
	
				return _feeInstlmntStudEdStudId;
			}
			set { _feeInstlmntStudEdStudId = value; }
		}
		
		#endregion

		#region EdStudCodeChngCollection
		
		private TList<EdStudCodeChng> _edStudCodeChngEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCodeChngEdStudId
		/// </summary>
		
		public TList<EdStudCodeChng> EdStudCodeChngCollection
		{
			get
			{
				if (_edStudCodeChngEdStudId == null)
				{
				_edStudCodeChngEdStudId = new TList<EdStudCodeChng>();
				}
	
				return _edStudCodeChngEdStudId;
			}
			set { _edStudCodeChngEdStudId = value; }
		}
		
		#endregion

		#region EdStudGrantDegreeCollection
		
		private TList<EdStudGrantDegree> _edStudGrantDegreeEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudGrantDegreeEdStudId
		/// </summary>
		
		public TList<EdStudGrantDegree> EdStudGrantDegreeCollection
		{
			get
			{
				if (_edStudGrantDegreeEdStudId == null)
				{
				_edStudGrantDegreeEdStudId = new TList<EdStudGrantDegree>();
				}
	
				return _edStudGrantDegreeEdStudId;
			}
			set { _edStudGrantDegreeEdStudId = value; }
		}
		
		#endregion

		#region EdProjStudCollection
		
		private TList<EdProjStud> _edProjStudEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edProjStudEdStudId
		/// </summary>
		
		public TList<EdProjStud> EdProjStudCollection
		{
			get
			{
				if (_edProjStudEdStudId == null)
				{
				_edProjStudEdStudId = new TList<EdProjStud>();
				}
	
				return _edProjStudEdStudId;
			}
			set { _edProjStudEdStudId = value; }
		}
		
		#endregion

		#region EdStudExmptReqCollection
		
		private TList<EdStudExmptReq> _edStudExmptReqEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudExmptReqEdStudId
		/// </summary>
		
		public TList<EdStudExmptReq> EdStudExmptReqCollection
		{
			get
			{
				if (_edStudExmptReqEdStudId == null)
				{
				_edStudExmptReqEdStudId = new TList<EdStudExmptReq>();
				}
	
				return _edStudExmptReqEdStudId;
			}
			set { _edStudExmptReqEdStudId = value; }
		}
		
		#endregion

		#region AdmAppDocCollection
		
		private TList<AdmAppDoc> _admAppDocEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppDocEdStudId
		/// </summary>
		
		public TList<AdmAppDoc> AdmAppDocCollection
		{
			get
			{
				if (_admAppDocEdStudId == null)
				{
				_admAppDocEdStudId = new TList<AdmAppDoc>();
				}
	
				return _admAppDocEdStudId;
			}
			set { _admAppDocEdStudId = value; }
		}
		
		#endregion

		#region RsrchStudPostponeReqCollection
		
		private TList<RsrchStudPostponeReq> _rsrchStudPostponeReqEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _rsrchStudPostponeReqEdStudId
		/// </summary>
		
		public TList<RsrchStudPostponeReq> RsrchStudPostponeReqCollection
		{
			get
			{
				if (_rsrchStudPostponeReqEdStudId == null)
				{
				_rsrchStudPostponeReqEdStudId = new TList<RsrchStudPostponeReq>();
				}
	
				return _rsrchStudPostponeReqEdStudId;
			}
			set { _rsrchStudPostponeReqEdStudId = value; }
		}
		
		#endregion

		#region TrnsStudCarStkrCollection
		
		private TList<TrnsStudCarStkr> _trnsStudCarStkrEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _trnsStudCarStkrEdStudId
		/// </summary>
		
		public TList<TrnsStudCarStkr> TrnsStudCarStkrCollection
		{
			get
			{
				if (_trnsStudCarStkrEdStudId == null)
				{
				_trnsStudCarStkrEdStudId = new TList<TrnsStudCarStkr>();
				}
	
				return _trnsStudCarStkrEdStudId;
			}
			set { _trnsStudCarStkrEdStudId = value; }
		}
		
		#endregion

		#region PgThesisNoteCollection
		
		private TList<PgThesisNote> _pgThesisNoteEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisNoteEdStudId
		/// </summary>
		
		public TList<PgThesisNote> PgThesisNoteCollection
		{
			get
			{
				if (_pgThesisNoteEdStudId == null)
				{
				_pgThesisNoteEdStudId = new TList<PgThesisNote>();
				}
	
				return _pgThesisNoteEdStudId;
			}
			set { _pgThesisNoteEdStudId = value; }
		}
		
		#endregion

		#region FeeStudNatSimilarityRequestCollection
		
		private TList<FeeStudNatSimilarityRequest> _feeStudNatSimilarityRequestEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudNatSimilarityRequestEdStudId
		/// </summary>
		
		public TList<FeeStudNatSimilarityRequest> FeeStudNatSimilarityRequestCollection
		{
			get
			{
				if (_feeStudNatSimilarityRequestEdStudId == null)
				{
				_feeStudNatSimilarityRequestEdStudId = new TList<FeeStudNatSimilarityRequest>();
				}
	
				return _feeStudNatSimilarityRequestEdStudId;
			}
			set { _feeStudNatSimilarityRequestEdStudId = value; }
		}
		
		#endregion

		#region EdStudSemesterCollection
		
		private TList<EdStudSemester> _edStudSemesterEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudSemesterEdStudId
		/// </summary>
		
		public TList<EdStudSemester> EdStudSemesterCollection
		{
			get
			{
				if (_edStudSemesterEdStudId == null)
				{
				_edStudSemesterEdStudId = new TList<EdStudSemester>();
				}
	
				return _edStudSemesterEdStudId;
			}
			set { _edStudSemesterEdStudId = value; }
		}
		
		#endregion

		#region SvSrvyRespondQstnCollection
		
		private TList<SvSrvyRespondQstn> _svSrvyRespondQstnEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svSrvyRespondQstnEdStudId
		/// </summary>
		
		public TList<SvSrvyRespondQstn> SvSrvyRespondQstnCollection
		{
			get
			{
				if (_svSrvyRespondQstnEdStudId == null)
				{
				_svSrvyRespondQstnEdStudId = new TList<SvSrvyRespondQstn>();
				}
	
				return _svSrvyRespondQstnEdStudId;
			}
			set { _svSrvyRespondQstnEdStudId = value; }
		}
		
		#endregion

		#region EdStudExecuseReqCollection
		
		private TList<EdStudExecuseReq> _edStudExecuseReqEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudExecuseReqEdStudId
		/// </summary>
		
		public TList<EdStudExecuseReq> EdStudExecuseReqCollection
		{
			get
			{
				if (_edStudExecuseReqEdStudId == null)
				{
				_edStudExecuseReqEdStudId = new TList<EdStudExecuseReq>();
				}
	
				return _edStudExecuseReqEdStudId;
			}
			set { _edStudExecuseReqEdStudId = value; }
		}
		
		#endregion

		#region FeeRefndStdReqCollection
		
		private TList<FeeRefndStdReq> _feeRefndStdReqEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeRefndStdReqEdStudId
		/// </summary>
		
		public TList<FeeRefndStdReq> FeeRefndStdReqCollection
		{
			get
			{
				if (_feeRefndStdReqEdStudId == null)
				{
				_feeRefndStdReqEdStudId = new TList<FeeRefndStdReq>();
				}
	
				return _feeRefndStdReqEdStudId;
			}
			set { _feeRefndStdReqEdStudId = value; }
		}
		
		#endregion

		#region SvStudPollCollection
		
		private TList<SvStudPoll> _svStudPollEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudPollEdStudId
		/// </summary>
		
		public TList<SvStudPoll> SvStudPollCollection
		{
			get
			{
				if (_svStudPollEdStudId == null)
				{
				_svStudPollEdStudId = new TList<SvStudPoll>();
				}
	
				return _svStudPollEdStudId;
			}
			set { _svStudPollEdStudId = value; }
		}
		
		#endregion

		#region EdStudAbsenceCollection
		
		private TList<EdStudAbsence> _edStudAbsenceEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAbsenceEdStudId
		/// </summary>
		
		public TList<EdStudAbsence> EdStudAbsenceCollection
		{
			get
			{
				if (_edStudAbsenceEdStudId == null)
				{
				_edStudAbsenceEdStudId = new TList<EdStudAbsence>();
				}
	
				return _edStudAbsenceEdStudId;
			}
			set { _edStudAbsenceEdStudId = value; }
		}
		
		#endregion

		#region FeeStudCoursesItemCollection
		
		private TList<FeeStudCoursesItem> _feeStudCoursesItemEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudCoursesItemEdStudId
		/// </summary>
		
		public TList<FeeStudCoursesItem> FeeStudCoursesItemCollection
		{
			get
			{
				if (_feeStudCoursesItemEdStudId == null)
				{
				_feeStudCoursesItemEdStudId = new TList<FeeStudCoursesItem>();
				}
	
				return _feeStudCoursesItemEdStudId;
			}
			set { _feeStudCoursesItemEdStudId = value; }
		}
		
		#endregion

		#region EdStudAbsFwCollection
		
		private TList<EdStudAbsFw> _edStudAbsFwEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAbsFwEdStudId
		/// </summary>
		
		public TList<EdStudAbsFw> EdStudAbsFwCollection
		{
			get
			{
				if (_edStudAbsFwEdStudId == null)
				{
				_edStudAbsFwEdStudId = new TList<EdStudAbsFw>();
				}
	
				return _edStudAbsFwEdStudId;
			}
			set { _edStudAbsFwEdStudId = value; }
		}
		
		#endregion

		#region EdAcdadvRmkCollection
		
		private TList<EdAcdadvRmk> _edAcdadvRmkEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edAcdadvRmkEdStudId
		/// </summary>
		
		public TList<EdAcdadvRmk> EdAcdadvRmkCollection
		{
			get
			{
				if (_edAcdadvRmkEdStudId == null)
				{
				_edAcdadvRmkEdStudId = new TList<EdAcdadvRmk>();
				}
	
				return _edAcdadvRmkEdStudId;
			}
			set { _edAcdadvRmkEdStudId = value; }
		}
		
		#endregion

		#region EdStudCourseCompCollection
		
		private TList<EdStudCourseComp> _edStudCourseCompEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseCompEdStudId
		/// </summary>
		
		public TList<EdStudCourseComp> EdStudCourseCompCollection
		{
			get
			{
				if (_edStudCourseCompEdStudId == null)
				{
				_edStudCourseCompEdStudId = new TList<EdStudCourseComp>();
				}
	
				return _edStudCourseCompEdStudId;
			}
			set { _edStudCourseCompEdStudId = value; }
		}
		
		#endregion

		#region SvStudCourseEvalCollection
		
		private TList<SvStudCourseEval> _svStudCourseEvalEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudCourseEvalEdStudId
		/// </summary>
		
		public TList<SvStudCourseEval> SvStudCourseEvalCollection
		{
			get
			{
				if (_svStudCourseEvalEdStudId == null)
				{
				_svStudCourseEvalEdStudId = new TList<SvStudCourseEval>();
				}
	
				return _svStudCourseEvalEdStudId;
			}
			set { _svStudCourseEvalEdStudId = value; }
		}
		
		#endregion

		#region AdmAppDisabilityCollection
		
		private TList<AdmAppDisability> _admAppDisabilityEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppDisabilityEdStudId
		/// </summary>
		
		public TList<AdmAppDisability> AdmAppDisabilityCollection
		{
			get
			{
				if (_admAppDisabilityEdStudId == null)
				{
				_admAppDisabilityEdStudId = new TList<AdmAppDisability>();
				}
	
				return _admAppDisabilityEdStudId;
			}
			set { _admAppDisabilityEdStudId = value; }
		}
		
		#endregion

		#region EdStudContactMethodCollection
		
		private TList<EdStudContactMethod> _edStudContactMethodEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudContactMethodEdStudId
		/// </summary>
		
		public TList<EdStudContactMethod> EdStudContactMethodCollection
		{
			get
			{
				if (_edStudContactMethodEdStudId == null)
				{
				_edStudContactMethodEdStudId = new TList<EdStudContactMethod>();
				}
	
				return _edStudContactMethodEdStudId;
			}
			set { _edStudContactMethodEdStudId = value; }
		}
		
		#endregion

		#region AccomStudReqCollection
		
		private TList<AccomStudReq> _accomStudReqEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomStudReqEdStudId
		/// </summary>
		
		public TList<AccomStudReq> AccomStudReqCollection
		{
			get
			{
				if (_accomStudReqEdStudId == null)
				{
				_accomStudReqEdStudId = new TList<AccomStudReq>();
				}
	
				return _accomStudReqEdStudId;
			}
			set { _accomStudReqEdStudId = value; }
		}
		
		#endregion

		#region EdResidencyStudCollection
		
		private TList<EdResidencyStud> _edResidencyStudEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edResidencyStudEdStudId
		/// </summary>
		
		public TList<EdResidencyStud> EdResidencyStudCollection
		{
			get
			{
				if (_edResidencyStudEdStudId == null)
				{
				_edResidencyStudEdStudId = new TList<EdResidencyStud>();
				}
	
				return _edResidencyStudEdStudId;
			}
			set { _edResidencyStudEdStudId = value; }
		}
		
		#endregion

		#region EdStudStateTempCollection
		
		private TList<EdStudStateTemp> _edStudStateTempEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudStateTempEdStudId
		/// </summary>
		
		public TList<EdStudStateTemp> EdStudStateTempCollection
		{
			get
			{
				if (_edStudStateTempEdStudId == null)
				{
				_edStudStateTempEdStudId = new TList<EdStudStateTemp>();
				}
	
				return _edStudStateTempEdStudId;
			}
			set { _edStudStateTempEdStudId = value; }
		}
		
		#endregion

		#region PgStudPublishCollection
		
		private TList<PgStudPublish> _pgStudPublishEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgStudPublishEdStudId
		/// </summary>
		
		public TList<PgStudPublish> PgStudPublishCollection
		{
			get
			{
				if (_pgStudPublishEdStudId == null)
				{
				_pgStudPublishEdStudId = new TList<PgStudPublish>();
				}
	
				return _pgStudPublishEdStudId;
			}
			set { _pgStudPublishEdStudId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsCourseToCollection
		
		private TList<EdStudIntTrnsCourseTo> _edStudIntTrnsCourseToEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsCourseToEdStudId
		/// </summary>
		
		public TList<EdStudIntTrnsCourseTo> EdStudIntTrnsCourseToCollection
		{
			get
			{
				if (_edStudIntTrnsCourseToEdStudId == null)
				{
				_edStudIntTrnsCourseToEdStudId = new TList<EdStudIntTrnsCourseTo>();
				}
	
				return _edStudIntTrnsCourseToEdStudId;
			}
			set { _edStudIntTrnsCourseToEdStudId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsStateToCollection
		
		private TList<EdStudIntTrnsStateTo> _edStudIntTrnsStateToEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsStateToEdStudId
		/// </summary>
		
		public TList<EdStudIntTrnsStateTo> EdStudIntTrnsStateToCollection
		{
			get
			{
				if (_edStudIntTrnsStateToEdStudId == null)
				{
				_edStudIntTrnsStateToEdStudId = new TList<EdStudIntTrnsStateTo>();
				}
	
				return _edStudIntTrnsStateToEdStudId;
			}
			set { _edStudIntTrnsStateToEdStudId = value; }
		}
		
		#endregion

		#region FeeStudFeeItemCollection
		
		private TList<FeeStudFeeItem> _feeStudFeeItemEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudFeeItemEdStudId
		/// </summary>
		
		public TList<FeeStudFeeItem> FeeStudFeeItemCollection
		{
			get
			{
				if (_feeStudFeeItemEdStudId == null)
				{
				_feeStudFeeItemEdStudId = new TList<FeeStudFeeItem>();
				}
	
				return _feeStudFeeItemEdStudId;
			}
			set { _feeStudFeeItemEdStudId = value; }
		}
		
		#endregion

		#region EdPrintReqCollection
		
		private TList<EdPrintReq> _edPrintReqEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edPrintReqEdStudId
		/// </summary>
		
		public TList<EdPrintReq> EdPrintReqCollection
		{
			get
			{
				if (_edPrintReqEdStudId == null)
				{
				_edPrintReqEdStudId = new TList<EdPrintReq>();
				}
	
				return _edPrintReqEdStudId;
			}
			set { _edPrintReqEdStudId = value; }
		}
		
		#endregion

		#region GsAddressDtlCollection
		
		private TList<GsAddressDtl> _gsAddressDtlEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _gsAddressDtlEdStudId
		/// </summary>
		
		public TList<GsAddressDtl> GsAddressDtlCollection
		{
			get
			{
				if (_gsAddressDtlEdStudId == null)
				{
				_gsAddressDtlEdStudId = new TList<GsAddressDtl>();
				}
	
				return _gsAddressDtlEdStudId;
			}
			set { _gsAddressDtlEdStudId = value; }
		}
		
		#endregion

		#region TrnsStudReqCollection
		
		private TList<TrnsStudReq> _trnsStudReqEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _trnsStudReqEdStudId
		/// </summary>
		
		public TList<TrnsStudReq> TrnsStudReqCollection
		{
			get
			{
				if (_trnsStudReqEdStudId == null)
				{
				_trnsStudReqEdStudId = new TList<TrnsStudReq>();
				}
	
				return _trnsStudReqEdStudId;
			}
			set { _trnsStudReqEdStudId = value; }
		}
		
		#endregion

		#region SvStudAskAdvCollection
		
		private TList<SvStudAskAdv> _svStudAskAdvEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudAskAdvEdStudId
		/// </summary>
		
		public TList<SvStudAskAdv> SvStudAskAdvCollection
		{
			get
			{
				if (_svStudAskAdvEdStudId == null)
				{
				_svStudAskAdvEdStudId = new TList<SvStudAskAdv>();
				}
	
				return _svStudAskAdvEdStudId;
			}
			set { _svStudAskAdvEdStudId = value; }
		}
		
		#endregion

		#region AccomStudBookCollection
		
		private TList<AccomStudBook> _accomStudBookEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomStudBookEdStudId
		/// </summary>
		
		public TList<AccomStudBook> AccomStudBookCollection
		{
			get
			{
				if (_accomStudBookEdStudId == null)
				{
				_accomStudBookEdStudId = new TList<AccomStudBook>();
				}
	
				return _accomStudBookEdStudId;
			}
			set { _accomStudBookEdStudId = value; }
		}
		
		#endregion

		#region SvStudCourseEvalExtCollection
		
		private TList<SvStudCourseEvalExt> _svStudCourseEvalExtEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudCourseEvalExtEdStudId
		/// </summary>
		
		public TList<SvStudCourseEvalExt> SvStudCourseEvalExtCollection
		{
			get
			{
				if (_svStudCourseEvalExtEdStudId == null)
				{
				_svStudCourseEvalExtEdStudId = new TList<SvStudCourseEvalExt>();
				}
	
				return _svStudCourseEvalExtEdStudId;
			}
			set { _svStudCourseEvalExtEdStudId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsCollection
		
		private TList<EdStudIntTrns> _edStudIntTrnsEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsEdStudId
		/// </summary>
		
		public TList<EdStudIntTrns> EdStudIntTrnsCollection
		{
			get
			{
				if (_edStudIntTrnsEdStudId == null)
				{
				_edStudIntTrnsEdStudId = new TList<EdStudIntTrns>();
				}
	
				return _edStudIntTrnsEdStudId;
			}
			set { _edStudIntTrnsEdStudId = value; }
		}
		
		#endregion

		#region SvStudCompCollection
		
		private TList<SvStudComp> _svStudCompEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudCompEdStudId
		/// </summary>
		
		public TList<SvStudComp> SvStudCompCollection
		{
			get
			{
				if (_svStudCompEdStudId == null)
				{
				_svStudCompEdStudId = new TList<SvStudComp>();
				}
	
				return _svStudCompEdStudId;
			}
			set { _svStudCompEdStudId = value; }
		}
		
		#endregion

		#region EdStudExcuseCollection
		
		private TList<EdStudExcuse> _edStudExcuseEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudExcuseEdStudId
		/// </summary>
		
		public TList<EdStudExcuse> EdStudExcuseCollection
		{
			get
			{
				if (_edStudExcuseEdStudId == null)
				{
				_edStudExcuseEdStudId = new TList<EdStudExcuse>();
				}
	
				return _edStudExcuseEdStudId;
			}
			set { _edStudExcuseEdStudId = value; }
		}
		
		#endregion

		#region EdStudQualCollection
		
		private TList<EdStudQual> _edStudQualEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudQualEdStudId
		/// </summary>
		
		public TList<EdStudQual> EdStudQualCollection
		{
			get
			{
				if (_edStudQualEdStudId == null)
				{
				_edStudQualEdStudId = new TList<EdStudQual>();
				}
	
				return _edStudQualEdStudId;
			}
			set { _edStudQualEdStudId = value; }
		}
		
		#endregion

		#region MltRptDayOutStudCollection
		
		private TList<MltRptDayOutStud> _mltRptDayOutStudEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mltRptDayOutStudEdStudId
		/// </summary>
		
		public TList<MltRptDayOutStud> MltRptDayOutStudCollection
		{
			get
			{
				if (_mltRptDayOutStudEdStudId == null)
				{
				_mltRptDayOutStudEdStudId = new TList<MltRptDayOutStud>();
				}
	
				return _mltRptDayOutStudEdStudId;
			}
			set { _mltRptDayOutStudEdStudId = value; }
		}
		
		#endregion

		#region EdStudRsrvRegTimeCollection
		
		private TList<EdStudRsrvRegTime> _edStudRsrvRegTimeEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudRsrvRegTimeEdStudId
		/// </summary>
		
		public TList<EdStudRsrvRegTime> EdStudRsrvRegTimeCollection
		{
			get
			{
				if (_edStudRsrvRegTimeEdStudId == null)
				{
				_edStudRsrvRegTimeEdStudId = new TList<EdStudRsrvRegTime>();
				}
	
				return _edStudRsrvRegTimeEdStudId;
			}
			set { _edStudRsrvRegTimeEdStudId = value; }
		}
		
		#endregion

		#region AdmAppLanguagesCollection
		
		private TList<AdmAppLanguages> _admAppLanguagesEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppLanguagesEdStudId
		/// </summary>
		
		public TList<AdmAppLanguages> AdmAppLanguagesCollection
		{
			get
			{
				if (_admAppLanguagesEdStudId == null)
				{
				_admAppLanguagesEdStudId = new TList<AdmAppLanguages>();
				}
	
				return _admAppLanguagesEdStudId;
			}
			set { _admAppLanguagesEdStudId = value; }
		}
		
		#endregion

		#region PgStudConferenceCollection
		
		private TList<PgStudConference> _pgStudConferenceEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgStudConferenceEdStudId
		/// </summary>
		
		public TList<PgStudConference> PgStudConferenceCollection
		{
			get
			{
				if (_pgStudConferenceEdStudId == null)
				{
				_pgStudConferenceEdStudId = new TList<PgStudConference>();
				}
	
				return _pgStudConferenceEdStudId;
			}
			set { _pgStudConferenceEdStudId = value; }
		}
		
		#endregion

		#region EdStudMilitaryInfoCollection
		
		private TList<EdStudMilitaryInfo> _edStudMilitaryInfoEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudMilitaryInfoEdStudId
		/// </summary>
		
		public TList<EdStudMilitaryInfo> EdStudMilitaryInfoCollection
		{
			get
			{
				if (_edStudMilitaryInfoEdStudId == null)
				{
				_edStudMilitaryInfoEdStudId = new TList<EdStudMilitaryInfo>();
				}
	
				return _edStudMilitaryInfoEdStudId;
			}
			set { _edStudMilitaryInfoEdStudId = value; }
		}
		
		#endregion

		#region IntegUserAdLogDtlCollection
		
		private TList<IntegUserAdLogDtl> _integUserAdLogDtlEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _integUserAdLogDtlEdStudId
		/// </summary>
		
		public TList<IntegUserAdLogDtl> IntegUserAdLogDtlCollection
		{
			get
			{
				if (_integUserAdLogDtlEdStudId == null)
				{
				_integUserAdLogDtlEdStudId = new TList<IntegUserAdLogDtl>();
				}
	
				return _integUserAdLogDtlEdStudId;
			}
			set { _integUserAdLogDtlEdStudId = value; }
		}
		
		#endregion

		#region AccomStudAbsenceWarnCollection
		
		private TList<AccomStudAbsenceWarn> _accomStudAbsenceWarnEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomStudAbsenceWarnEdStudId
		/// </summary>
		
		public TList<AccomStudAbsenceWarn> AccomStudAbsenceWarnCollection
		{
			get
			{
				if (_accomStudAbsenceWarnEdStudId == null)
				{
				_accomStudAbsenceWarnEdStudId = new TList<AccomStudAbsenceWarn>();
				}
	
				return _accomStudAbsenceWarnEdStudId;
			}
			set { _accomStudAbsenceWarnEdStudId = value; }
		}
		
		#endregion

		#region AdmEnglishProficiencyCollection
		
		private TList<AdmEnglishProficiency> _admEnglishProficiencyEdStudId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admEnglishProficiencyEdStudId
		/// </summary>
		
		public TList<AdmEnglishProficiency> AdmEnglishProficiencyCollection
		{
			get
			{
				if (_admEnglishProficiencyEdStudId == null)
				{
				_admEnglishProficiencyEdStudId = new TList<AdmEnglishProficiency>();
				}
	
				return _admEnglishProficiencyEdStudId;
			}
			set { _admEnglishProficiencyEdStudId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			EdStudEntityData _tmp = new EdStudEntityData();
						
			_tmp.EdStudId = this.EdStudId;
			_tmp.OriginalEdStudId = this.OriginalEdStudId;
			
			_tmp.NationalNumber = this.NationalNumber;
			_tmp.FullNameAr = this.FullNameAr;
			_tmp.ClFullNameAr = this.ClFullNameAr;
			_tmp.StudNameAr = this.StudNameAr;
			_tmp.ClStudNameAr = this.ClStudNameAr;
			_tmp.FatherNameAr = this.FatherNameAr;
			_tmp.ClFatherNameAr = this.ClFatherNameAr;
			_tmp.GrandfatherNameAr = this.GrandfatherNameAr;
			_tmp.ClGrandfatherNameAr = this.ClGrandfatherNameAr;
			_tmp.FamilyNameAr = this.FamilyNameAr;
			_tmp.ClFamilyNameAr = this.ClFamilyNameAr;
			_tmp.FullNameEn = this.FullNameEn;
			_tmp.StudNameEn = this.StudNameEn;
			_tmp.FatherNameEn = this.FatherNameEn;
			_tmp.GrandfatherNameEn = this.GrandfatherNameEn;
			_tmp.FamilyNameEn = this.FamilyNameEn;
			_tmp.FatherProfession = this.FatherProfession;
			_tmp.FatherNationalNumber = this.FatherNationalNumber;
			_tmp.MotherNationalNumber = this.MotherNationalNumber;
			_tmp.MotherNameAr = this.MotherNameAr;
			_tmp.ClMotherNameAr = this.ClMotherNameAr;
			_tmp.MotherNameEn = this.MotherNameEn;
			_tmp.GsCodeGenderId = this.GsCodeGenderId;
			_tmp.GsCodeReligionId = this.GsCodeReligionId;
			_tmp.BirthRegNumber = this.BirthRegNumber;
			_tmp.BirthDate = this.BirthDate;
			_tmp.GsBirthCountryNodeId = this.GsBirthCountryNodeId;
			_tmp.GsCountryInfoId1 = this.GsCountryInfoId1;
			_tmp.GsCountryInfoId2 = this.GsCountryInfoId2;
			_tmp.StudPhoto = this.StudPhoto;
			_tmp.GsCodeIdentTypeId = this.GsCodeIdentTypeId;
			_tmp.IsPrntStaff = this.IsPrntStaff;
			_tmp.SaStfMemberPrntId = this.SaStfMemberPrntId;
			_tmp.GsCdeBloodId = this.GsCdeBloodId;
			_tmp.StudLnht = this.StudLnht;
			_tmp.StudWght = this.StudWght;
			_tmp.IdentIssuePlc = this.IdentIssuePlc;
			_tmp.GsCodeLanguageId = this.GsCodeLanguageId;
			_tmp.PassporNo = this.PassporNo;
			_tmp.PassporExpireDate = this.PassporExpireDate;
			_tmp.PassporIssueDate = this.PassporIssueDate;
			_tmp.SpecialNeedFlg = this.SpecialNeedFlg;
			_tmp.EmployeeFlg = this.EmployeeFlg;
			_tmp.IdentIssueDate = this.IdentIssueDate;
			_tmp.IdentExpireDate = this.IdentExpireDate;
			_tmp.HecId = this.HecId;
			_tmp.GsCdeMaritalStatusId = this.GsCdeMaritalStatusId;
			_tmp.MarriageDate = this.MarriageDate;
			_tmp.NoChild = this.NoChild;
			_tmp.VisaNumber = this.VisaNumber;
			_tmp.VisaIssueDate = this.VisaIssueDate;
			_tmp.VisaExpireDate = this.VisaExpireDate;
			_tmp.SeFormId = this.SeFormId;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserId = this.SeUserId;
			_tmp.CovidFlg = this.CovidFlg;
			
			#region Source Parent Composite Entities
			if (this.GsCdeBloodIdSource != null)
				_tmp.GsCdeBloodIdSource = MakeCopyOf(this.GsCdeBloodIdSource) as GsCdeBlood;
			if (this.GsCdeMaritalStatusIdSource != null)
				_tmp.GsCdeMaritalStatusIdSource = MakeCopyOf(this.GsCdeMaritalStatusIdSource) as GsCdeMaritalStatus;
			if (this.GsCodeGenderIdSource != null)
				_tmp.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource) as GsCodeGender;
			if (this.GsCodeIdentTypeIdSource != null)
				_tmp.GsCodeIdentTypeIdSource = MakeCopyOf(this.GsCodeIdentTypeIdSource) as GsCodeIdentType;
			if (this.GsCodeLanguageIdSource != null)
				_tmp.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource) as GsCodeLanguage;
			if (this.GsCodeReligionIdSource != null)
				_tmp.GsCodeReligionIdSource = MakeCopyOf(this.GsCodeReligionIdSource) as GsCodeReligion;
			if (this.GsCountryInfoId1Source != null)
				_tmp.GsCountryInfoId1Source = MakeCopyOf(this.GsCountryInfoId1Source) as GsCountryNode;
			if (this.GsBirthCountryNodeIdSource != null)
				_tmp.GsBirthCountryNodeIdSource = MakeCopyOf(this.GsBirthCountryNodeIdSource) as GsCountryNode;
			if (this.SaStfMemberPrntIdSource != null)
				_tmp.SaStfMemberPrntIdSource = MakeCopyOf(this.SaStfMemberPrntIdSource) as SaStfMember;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._edStudFacultyEdStudId != null)
				_tmp.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection); 
			if (this._edStudTransEdStudId != null)
				_tmp.EdStudTransCollection = (TList<EdStudTrans>) MakeCopyOf(this.EdStudTransCollection); 
			if (this._svStudAskAdvReEdStudId != null)
				_tmp.SvStudAskAdvReCollection = (TList<SvStudAskAdvRe>) MakeCopyOf(this.SvStudAskAdvReCollection); 
			if (this._accomStudResponsibleEdStudId != null)
				_tmp.AccomStudResponsibleCollection = (TList<AccomStudResponsible>) MakeCopyOf(this.AccomStudResponsibleCollection); 
			if (this._feeStudBankEdStudId != null)
				_tmp.FeeStudBank = (FeeStudBank) MakeCopyOf(this.FeeStudBank); 
			if (this._edStudCourseRegPreEdStudId != null)
				_tmp.EdStudCourseRegPreCollection = (TList<EdStudCourseRegPre>) MakeCopyOf(this.EdStudCourseRegPreCollection); 
			if (this._svStudStaffEvalExtEdStudId != null)
				_tmp.SvStudStaffEvalExtCollection = (TList<SvStudStaffEvalExt>) MakeCopyOf(this.SvStudStaffEvalExtCollection); 
			if (this._edStudSemesterTempEdStudId != null)
				_tmp.EdStudSemesterTempCollection = (TList<EdStudSemesterTemp>) MakeCopyOf(this.EdStudSemesterTempCollection); 
			if (this._mdiStudProblemEdStudId != null)
				_tmp.MdiStudProblemCollection = (TList<MdiStudProblem>) MakeCopyOf(this.MdiStudProblemCollection); 
			if (this._feeStudInstallmentEdStudId != null)
				_tmp.FeeStudInstallmentCollection = (TList<FeeStudInstallment>) MakeCopyOf(this.FeeStudInstallmentCollection); 
			if (this._scStudGroupEdStudId != null)
				_tmp.ScStudGroupCollection = (TList<ScStudGroup>) MakeCopyOf(this.ScStudGroupCollection); 
			if (this._edStudMltryCrsEdStudId != null)
				_tmp.EdStudMltryCrsCollection = (TList<EdStudMltryCrs>) MakeCopyOf(this.EdStudMltryCrsCollection); 
			if (this._rsrchStudRegisterEdStudId != null)
				_tmp.RsrchStudRegisterCollection = (TList<RsrchStudRegister>) MakeCopyOf(this.RsrchStudRegisterCollection); 
			if (this._edTrainStudEdStudId != null)
				_tmp.EdTrainStudCollection = (TList<EdTrainStud>) MakeCopyOf(this.EdTrainStudCollection); 
			if (this._edStudMilitaryStateEdStudId != null)
				_tmp.EdStudMilitaryStateCollection = (TList<EdStudMilitaryState>) MakeCopyOf(this.EdStudMilitaryStateCollection); 
			if (this._edStudGraduationAwardEdStudId != null)
				_tmp.EdStudGraduationAwardCollection = (TList<EdStudGraduationAward>) MakeCopyOf(this.EdStudGraduationAwardCollection); 
			if (this._edStudGuardEdStudId != null)
				_tmp.EdStudGuardCollection = (TList<EdStudGuard>) MakeCopyOf(this.EdStudGuardCollection); 
			if (this._edStudTransFromReqEdStudId != null)
				_tmp.EdStudTransFromReqCollection = (TList<EdStudTransFromReq>) MakeCopyOf(this.EdStudTransFromReqCollection); 
			if (this._svStudStaffEvalEdStudId != null)
				_tmp.SvStudStaffEvalCollection = (TList<SvStudStaffEval>) MakeCopyOf(this.SvStudStaffEvalCollection); 
			if (this._edStudIntTrnsStateFromEdStudId != null)
				_tmp.EdStudIntTrnsStateFromCollection = (TList<EdStudIntTrnsStateFrom>) MakeCopyOf(this.EdStudIntTrnsStateFromCollection); 
			if (this._edStudAcadWarnEdStudId != null)
				_tmp.EdStudAcadWarnCollection = (TList<EdStudAcadWarn>) MakeCopyOf(this.EdStudAcadWarnCollection); 
			if (this._mdiStudHosptlEdStudId != null)
				_tmp.MdiStudHosptlCollection = (TList<MdiStudHosptl>) MakeCopyOf(this.MdiStudHosptlCollection); 
			if (this._edStudLangEdStudId != null)
				_tmp.EdStudLangCollection = (TList<EdStudLang>) MakeCopyOf(this.EdStudLangCollection); 
			if (this._mdiStudRecordEdStudId != null)
				_tmp.MdiStudRecordCollection = (TList<MdiStudRecord>) MakeCopyOf(this.MdiStudRecordCollection); 
			if (this._edStudLatenessEdStudId != null)
				_tmp.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection); 
			if (this._feeStudItemCnclEdStudId != null)
				_tmp.FeeStudItemCnclCollection = (TList<FeeStudItemCncl>) MakeCopyOf(this.FeeStudItemCnclCollection); 
			if (this._edStudActivityEdStudId != null)
				_tmp.EdStudActivityCollection = (TList<EdStudActivity>) MakeCopyOf(this.EdStudActivityCollection); 
			if (this._feeStudPayPostponeEdStudId != null)
				_tmp.FeeStudPayPostponeCollection = (TList<FeeStudPayPostpone>) MakeCopyOf(this.FeeStudPayPostponeCollection); 
			if (this._edStudRsdncyEdStudId != null)
				_tmp.EdStudRsdncyCollection = (TList<EdStudRsdncy>) MakeCopyOf(this.EdStudRsdncyCollection); 
			if (this._mltStudInfoEdStudId != null)
				_tmp.MltStudInfoCollection = (TList<MltStudInfo>) MakeCopyOf(this.MltStudInfoCollection); 
			if (this._svStudLockerReqEdStudId != null)
				_tmp.SvStudLockerReqCollection = (TList<SvStudLockerReq>) MakeCopyOf(this.SvStudLockerReqCollection); 
			if (this._edStudMissionEdStudId != null)
				_tmp.EdStudMissionCollection = (TList<EdStudMission>) MakeCopyOf(this.EdStudMissionCollection); 
			if (this._admAppWorkExperEdStudId != null)
				_tmp.AdmAppWorkExperCollection = (TList<AdmAppWorkExper>) MakeCopyOf(this.AdmAppWorkExperCollection); 
			if (this._edStudNoteEdStudId != null)
				_tmp.EdStudNoteCollection = (TList<EdStudNote>) MakeCopyOf(this.EdStudNoteCollection); 
			if (this._edStudAcadmicAdvEdStudId != null)
				_tmp.EdStudAcadmicAdvCollection = (TList<EdStudAcadmicAdv>) MakeCopyOf(this.EdStudAcadmicAdvCollection); 
			if (this._ctrSrvcCrewEdStudId != null)
				_tmp.CtrSrvcCrewCollection = (TList<CtrSrvcCrew>) MakeCopyOf(this.CtrSrvcCrewCollection); 
			if (this._seBlockTransEdStudId != null)
				_tmp.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection); 
			if (this._spoSponsorStudEdStudId != null)
				_tmp.SpoSponsorStudCollection = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollection); 
			if (this._almJobEdStudId != null)
				_tmp.AlmJobCollection = (TList<AlmJob>) MakeCopyOf(this.AlmJobCollection); 
			if (this._feeStudVoucherEdStudId != null)
				_tmp.FeeStudVoucherCollection = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollection); 
			if (this._spoSponsorStudSemesterEdStudId != null)
				_tmp.SpoSponsorStudSemesterCollection = (TList<SpoSponsorStudSemester>) MakeCopyOf(this.SpoSponsorStudSemesterCollection); 
			if (this._feeStudFundEdStudId != null)
				_tmp.FeeStudFundCollection = (TList<FeeStudFund>) MakeCopyOf(this.FeeStudFundCollection); 
			if (this._pgStudTravelEdStudId != null)
				_tmp.PgStudTravelCollection = (TList<PgStudTravel>) MakeCopyOf(this.PgStudTravelCollection); 
			if (this._ctrStudOutEdStudId != null)
				_tmp.CtrStudOutCollection = (TList<CtrStudOut>) MakeCopyOf(this.CtrStudOutCollection); 
			if (this._feeStudDiscEdStudId != null)
				_tmp.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection); 
			if (this._edStudSportEdStudId != null)
				_tmp.EdStudSportCollection = (TList<EdStudSport>) MakeCopyOf(this.EdStudSportCollection); 
			if (this._mdiStudVaccEdStudId != null)
				_tmp.MdiStudVaccCollection = (TList<MdiStudVacc>) MakeCopyOf(this.MdiStudVaccCollection); 
			if (this._ctrStudExpEdStudId != null)
				_tmp.CtrStudExpCollection = (TList<CtrStudExp>) MakeCopyOf(this.CtrStudExpCollection); 
			if (this._mdiStudClnqEdStudId != null)
				_tmp.MdiStudClnqCollection = (TList<MdiStudClnq>) MakeCopyOf(this.MdiStudClnqCollection); 
			if (this._pgThesisStudEdStudId != null)
				_tmp.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection); 
			if (this._feeStudRetrieveRequestEdStudId != null)
				_tmp.FeeStudRetrieveRequestCollection = (TList<FeeStudRetrieveRequest>) MakeCopyOf(this.FeeStudRetrieveRequestCollection); 
			if (this._edStudViolEdStudId != null)
				_tmp.EdStudViolCollection = (TList<EdStudViol>) MakeCopyOf(this.EdStudViolCollection); 
			if (this._admApplicantEdStudId != null)
				_tmp.AdmApplicantCollection = (TList<AdmApplicant>) MakeCopyOf(this.AdmApplicantCollection); 
			if (this._edStudIntTrnsCourseFromEdStudId != null)
				_tmp.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection); 
			if (this._accomStudAbsenceEdStudId != null)
				_tmp.AccomStudAbsenceCollection = (TList<AccomStudAbsence>) MakeCopyOf(this.AccomStudAbsenceCollection); 
			if (this._feeItemTrnsBlncEdStudId != null)
				_tmp.FeeItemTrnsBlncCollection = (TList<FeeItemTrnsBlnc>) MakeCopyOf(this.FeeItemTrnsBlncCollection); 
			if (this._admScholorshipEdStudId != null)
				_tmp.AdmScholorshipCollection = (TList<AdmScholorship>) MakeCopyOf(this.AdmScholorshipCollection); 
			if (this._feeStudInstallmentRequestEdStudId != null)
				_tmp.FeeStudInstallmentRequestCollection = (TList<FeeStudInstallmentRequest>) MakeCopyOf(this.FeeStudInstallmentRequestCollection); 
			if (this._edStudGrantTempEdStudId != null)
				_tmp.EdStudGrantTempCollection = (TList<EdStudGrantTemp>) MakeCopyOf(this.EdStudGrantTempCollection); 
			if (this._feeStudAllowanceEdStudId != null)
				_tmp.FeeStudAllowanceCollection = (TList<FeeStudAllowance>) MakeCopyOf(this.FeeStudAllowanceCollection); 
			if (this._feeInvoiceEdStudId != null)
				_tmp.FeeInvoiceCollection = (TList<FeeInvoice>) MakeCopyOf(this.FeeInvoiceCollection); 
			if (this._edStudProblemEdStudId != null)
				_tmp.EdStudProblemCollection = (TList<EdStudProblem>) MakeCopyOf(this.EdStudProblemCollection); 
			if (this._almPrintRequestEdStudId != null)
				_tmp.AlmPrintRequestCollection = (TList<AlmPrintRequest>) MakeCopyOf(this.AlmPrintRequestCollection); 
			if (this._feeInstlmntStudEdStudId != null)
				_tmp.FeeInstlmntStudCollection = (TList<FeeInstlmntStud>) MakeCopyOf(this.FeeInstlmntStudCollection); 
			if (this._edStudCodeChngEdStudId != null)
				_tmp.EdStudCodeChngCollection = (TList<EdStudCodeChng>) MakeCopyOf(this.EdStudCodeChngCollection); 
			if (this._edStudGrantDegreeEdStudId != null)
				_tmp.EdStudGrantDegreeCollection = (TList<EdStudGrantDegree>) MakeCopyOf(this.EdStudGrantDegreeCollection); 
			if (this._edProjStudEdStudId != null)
				_tmp.EdProjStudCollection = (TList<EdProjStud>) MakeCopyOf(this.EdProjStudCollection); 
			if (this._edStudExmptReqEdStudId != null)
				_tmp.EdStudExmptReqCollection = (TList<EdStudExmptReq>) MakeCopyOf(this.EdStudExmptReqCollection); 
			if (this._admAppDocEdStudId != null)
				_tmp.AdmAppDocCollection = (TList<AdmAppDoc>) MakeCopyOf(this.AdmAppDocCollection); 
			if (this._rsrchStudPostponeReqEdStudId != null)
				_tmp.RsrchStudPostponeReqCollection = (TList<RsrchStudPostponeReq>) MakeCopyOf(this.RsrchStudPostponeReqCollection); 
			if (this._trnsStudCarStkrEdStudId != null)
				_tmp.TrnsStudCarStkrCollection = (TList<TrnsStudCarStkr>) MakeCopyOf(this.TrnsStudCarStkrCollection); 
			if (this._pgThesisNoteEdStudId != null)
				_tmp.PgThesisNoteCollection = (TList<PgThesisNote>) MakeCopyOf(this.PgThesisNoteCollection); 
			if (this._feeStudNatSimilarityRequestEdStudId != null)
				_tmp.FeeStudNatSimilarityRequestCollection = (TList<FeeStudNatSimilarityRequest>) MakeCopyOf(this.FeeStudNatSimilarityRequestCollection); 
			if (this._edStudSemesterEdStudId != null)
				_tmp.EdStudSemesterCollection = (TList<EdStudSemester>) MakeCopyOf(this.EdStudSemesterCollection); 
			if (this._svSrvyRespondQstnEdStudId != null)
				_tmp.SvSrvyRespondQstnCollection = (TList<SvSrvyRespondQstn>) MakeCopyOf(this.SvSrvyRespondQstnCollection); 
			if (this._edStudExecuseReqEdStudId != null)
				_tmp.EdStudExecuseReqCollection = (TList<EdStudExecuseReq>) MakeCopyOf(this.EdStudExecuseReqCollection); 
			if (this._feeRefndStdReqEdStudId != null)
				_tmp.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection); 
			if (this._svStudPollEdStudId != null)
				_tmp.SvStudPollCollection = (TList<SvStudPoll>) MakeCopyOf(this.SvStudPollCollection); 
			if (this._edStudAbsenceEdStudId != null)
				_tmp.EdStudAbsenceCollection = (TList<EdStudAbsence>) MakeCopyOf(this.EdStudAbsenceCollection); 
			if (this._feeStudCoursesItemEdStudId != null)
				_tmp.FeeStudCoursesItemCollection = (TList<FeeStudCoursesItem>) MakeCopyOf(this.FeeStudCoursesItemCollection); 
			if (this._edStudAbsFwEdStudId != null)
				_tmp.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection); 
			if (this._edAcdadvRmkEdStudId != null)
				_tmp.EdAcdadvRmkCollection = (TList<EdAcdadvRmk>) MakeCopyOf(this.EdAcdadvRmkCollection); 
			if (this._edStudCourseCompEdStudId != null)
				_tmp.EdStudCourseCompCollection = (TList<EdStudCourseComp>) MakeCopyOf(this.EdStudCourseCompCollection); 
			if (this._svStudCourseEvalEdStudId != null)
				_tmp.SvStudCourseEvalCollection = (TList<SvStudCourseEval>) MakeCopyOf(this.SvStudCourseEvalCollection); 
			if (this._admAppDisabilityEdStudId != null)
				_tmp.AdmAppDisabilityCollection = (TList<AdmAppDisability>) MakeCopyOf(this.AdmAppDisabilityCollection); 
			if (this._edStudContactMethodEdStudId != null)
				_tmp.EdStudContactMethodCollection = (TList<EdStudContactMethod>) MakeCopyOf(this.EdStudContactMethodCollection); 
			if (this._accomStudReqEdStudId != null)
				_tmp.AccomStudReqCollection = (TList<AccomStudReq>) MakeCopyOf(this.AccomStudReqCollection); 
			if (this._edResidencyStudEdStudId != null)
				_tmp.EdResidencyStudCollection = (TList<EdResidencyStud>) MakeCopyOf(this.EdResidencyStudCollection); 
			if (this._edStudStateTempEdStudId != null)
				_tmp.EdStudStateTempCollection = (TList<EdStudStateTemp>) MakeCopyOf(this.EdStudStateTempCollection); 
			if (this._pgStudPublishEdStudId != null)
				_tmp.PgStudPublishCollection = (TList<PgStudPublish>) MakeCopyOf(this.PgStudPublishCollection); 
			if (this._edStudIntTrnsCourseToEdStudId != null)
				_tmp.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection); 
			if (this._edStudIntTrnsStateToEdStudId != null)
				_tmp.EdStudIntTrnsStateToCollection = (TList<EdStudIntTrnsStateTo>) MakeCopyOf(this.EdStudIntTrnsStateToCollection); 
			if (this._feeStudFeeItemEdStudId != null)
				_tmp.FeeStudFeeItemCollection = (TList<FeeStudFeeItem>) MakeCopyOf(this.FeeStudFeeItemCollection); 
			if (this._edPrintReqEdStudId != null)
				_tmp.EdPrintReqCollection = (TList<EdPrintReq>) MakeCopyOf(this.EdPrintReqCollection); 
			if (this._gsAddressDtlEdStudId != null)
				_tmp.GsAddressDtlCollection = (TList<GsAddressDtl>) MakeCopyOf(this.GsAddressDtlCollection); 
			if (this._trnsStudReqEdStudId != null)
				_tmp.TrnsStudReqCollection = (TList<TrnsStudReq>) MakeCopyOf(this.TrnsStudReqCollection); 
			if (this._svStudAskAdvEdStudId != null)
				_tmp.SvStudAskAdvCollection = (TList<SvStudAskAdv>) MakeCopyOf(this.SvStudAskAdvCollection); 
			if (this._accomStudBookEdStudId != null)
				_tmp.AccomStudBookCollection = (TList<AccomStudBook>) MakeCopyOf(this.AccomStudBookCollection); 
			if (this._svStudCourseEvalExtEdStudId != null)
				_tmp.SvStudCourseEvalExtCollection = (TList<SvStudCourseEvalExt>) MakeCopyOf(this.SvStudCourseEvalExtCollection); 
			if (this._edStudIntTrnsEdStudId != null)
				_tmp.EdStudIntTrnsCollection = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollection); 
			if (this._svStudCompEdStudId != null)
				_tmp.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection); 
			if (this._edStudExcuseEdStudId != null)
				_tmp.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection); 
			if (this._edStudQualEdStudId != null)
				_tmp.EdStudQualCollection = (TList<EdStudQual>) MakeCopyOf(this.EdStudQualCollection); 
			if (this._mltRptDayOutStudEdStudId != null)
				_tmp.MltRptDayOutStudCollection = (TList<MltRptDayOutStud>) MakeCopyOf(this.MltRptDayOutStudCollection); 
			if (this._edStudRsrvRegTimeEdStudId != null)
				_tmp.EdStudRsrvRegTimeCollection = (TList<EdStudRsrvRegTime>) MakeCopyOf(this.EdStudRsrvRegTimeCollection); 
			if (this._admAppLanguagesEdStudId != null)
				_tmp.AdmAppLanguagesCollection = (TList<AdmAppLanguages>) MakeCopyOf(this.AdmAppLanguagesCollection); 
			if (this._pgStudConferenceEdStudId != null)
				_tmp.PgStudConferenceCollection = (TList<PgStudConference>) MakeCopyOf(this.PgStudConferenceCollection); 
			if (this._edStudMilitaryInfoEdStudId != null)
				_tmp.EdStudMilitaryInfoCollection = (TList<EdStudMilitaryInfo>) MakeCopyOf(this.EdStudMilitaryInfoCollection); 
			if (this._integUserAdLogDtlEdStudId != null)
				_tmp.IntegUserAdLogDtlCollection = (TList<IntegUserAdLogDtl>) MakeCopyOf(this.IntegUserAdLogDtlCollection); 
			if (this._accomStudAbsenceWarnEdStudId != null)
				_tmp.AccomStudAbsenceWarnCollection = (TList<AccomStudAbsenceWarn>) MakeCopyOf(this.AccomStudAbsenceWarnCollection); 
			if (this._admEnglishProficiencyEdStudId != null)
				_tmp.AdmEnglishProficiencyCollection = (TList<AdmEnglishProficiency>) MakeCopyOf(this.AdmEnglishProficiencyCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			EdStudEntityData _tmp = new EdStudEntityData();
						
			_tmp.EdStudId = this.EdStudId;
			_tmp.OriginalEdStudId = this.OriginalEdStudId;
			
			_tmp.NationalNumber = this.NationalNumber;
			_tmp.FullNameAr = this.FullNameAr;
			_tmp.ClFullNameAr = this.ClFullNameAr;
			_tmp.StudNameAr = this.StudNameAr;
			_tmp.ClStudNameAr = this.ClStudNameAr;
			_tmp.FatherNameAr = this.FatherNameAr;
			_tmp.ClFatherNameAr = this.ClFatherNameAr;
			_tmp.GrandfatherNameAr = this.GrandfatherNameAr;
			_tmp.ClGrandfatherNameAr = this.ClGrandfatherNameAr;
			_tmp.FamilyNameAr = this.FamilyNameAr;
			_tmp.ClFamilyNameAr = this.ClFamilyNameAr;
			_tmp.FullNameEn = this.FullNameEn;
			_tmp.StudNameEn = this.StudNameEn;
			_tmp.FatherNameEn = this.FatherNameEn;
			_tmp.GrandfatherNameEn = this.GrandfatherNameEn;
			_tmp.FamilyNameEn = this.FamilyNameEn;
			_tmp.FatherProfession = this.FatherProfession;
			_tmp.FatherNationalNumber = this.FatherNationalNumber;
			_tmp.MotherNationalNumber = this.MotherNationalNumber;
			_tmp.MotherNameAr = this.MotherNameAr;
			_tmp.ClMotherNameAr = this.ClMotherNameAr;
			_tmp.MotherNameEn = this.MotherNameEn;
			_tmp.GsCodeGenderId = this.GsCodeGenderId;
			_tmp.GsCodeReligionId = this.GsCodeReligionId;
			_tmp.BirthRegNumber = this.BirthRegNumber;
			_tmp.BirthDate = this.BirthDate;
			_tmp.GsBirthCountryNodeId = this.GsBirthCountryNodeId;
			_tmp.GsCountryInfoId1 = this.GsCountryInfoId1;
			_tmp.GsCountryInfoId2 = this.GsCountryInfoId2;
			_tmp.StudPhoto = this.StudPhoto;
			_tmp.GsCodeIdentTypeId = this.GsCodeIdentTypeId;
			_tmp.IsPrntStaff = this.IsPrntStaff;
			_tmp.SaStfMemberPrntId = this.SaStfMemberPrntId;
			_tmp.GsCdeBloodId = this.GsCdeBloodId;
			_tmp.StudLnht = this.StudLnht;
			_tmp.StudWght = this.StudWght;
			_tmp.IdentIssuePlc = this.IdentIssuePlc;
			_tmp.GsCodeLanguageId = this.GsCodeLanguageId;
			_tmp.PassporNo = this.PassporNo;
			_tmp.PassporExpireDate = this.PassporExpireDate;
			_tmp.PassporIssueDate = this.PassporIssueDate;
			_tmp.SpecialNeedFlg = this.SpecialNeedFlg;
			_tmp.EmployeeFlg = this.EmployeeFlg;
			_tmp.IdentIssueDate = this.IdentIssueDate;
			_tmp.IdentExpireDate = this.IdentExpireDate;
			_tmp.HecId = this.HecId;
			_tmp.GsCdeMaritalStatusId = this.GsCdeMaritalStatusId;
			_tmp.MarriageDate = this.MarriageDate;
			_tmp.NoChild = this.NoChild;
			_tmp.VisaNumber = this.VisaNumber;
			_tmp.VisaIssueDate = this.VisaIssueDate;
			_tmp.VisaExpireDate = this.VisaExpireDate;
			_tmp.SeFormId = this.SeFormId;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserId = this.SeUserId;
			_tmp.CovidFlg = this.CovidFlg;
			
			#region Source Parent Composite Entities
			if (this.GsCdeBloodIdSource != null && existingCopies.Contains(this.GsCdeBloodIdSource))
				_tmp.GsCdeBloodIdSource = existingCopies[this.GsCdeBloodIdSource] as GsCdeBlood;
			else
				_tmp.GsCdeBloodIdSource = MakeCopyOf(this.GsCdeBloodIdSource, existingCopies) as GsCdeBlood;
			if (this.GsCdeMaritalStatusIdSource != null && existingCopies.Contains(this.GsCdeMaritalStatusIdSource))
				_tmp.GsCdeMaritalStatusIdSource = existingCopies[this.GsCdeMaritalStatusIdSource] as GsCdeMaritalStatus;
			else
				_tmp.GsCdeMaritalStatusIdSource = MakeCopyOf(this.GsCdeMaritalStatusIdSource, existingCopies) as GsCdeMaritalStatus;
			if (this.GsCodeGenderIdSource != null && existingCopies.Contains(this.GsCodeGenderIdSource))
				_tmp.GsCodeGenderIdSource = existingCopies[this.GsCodeGenderIdSource] as GsCodeGender;
			else
				_tmp.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource, existingCopies) as GsCodeGender;
			if (this.GsCodeIdentTypeIdSource != null && existingCopies.Contains(this.GsCodeIdentTypeIdSource))
				_tmp.GsCodeIdentTypeIdSource = existingCopies[this.GsCodeIdentTypeIdSource] as GsCodeIdentType;
			else
				_tmp.GsCodeIdentTypeIdSource = MakeCopyOf(this.GsCodeIdentTypeIdSource, existingCopies) as GsCodeIdentType;
			if (this.GsCodeLanguageIdSource != null && existingCopies.Contains(this.GsCodeLanguageIdSource))
				_tmp.GsCodeLanguageIdSource = existingCopies[this.GsCodeLanguageIdSource] as GsCodeLanguage;
			else
				_tmp.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource, existingCopies) as GsCodeLanguage;
			if (this.GsCodeReligionIdSource != null && existingCopies.Contains(this.GsCodeReligionIdSource))
				_tmp.GsCodeReligionIdSource = existingCopies[this.GsCodeReligionIdSource] as GsCodeReligion;
			else
				_tmp.GsCodeReligionIdSource = MakeCopyOf(this.GsCodeReligionIdSource, existingCopies) as GsCodeReligion;
			if (this.GsCountryInfoId1Source != null && existingCopies.Contains(this.GsCountryInfoId1Source))
				_tmp.GsCountryInfoId1Source = existingCopies[this.GsCountryInfoId1Source] as GsCountryNode;
			else
				_tmp.GsCountryInfoId1Source = MakeCopyOf(this.GsCountryInfoId1Source, existingCopies) as GsCountryNode;
			if (this.GsBirthCountryNodeIdSource != null && existingCopies.Contains(this.GsBirthCountryNodeIdSource))
				_tmp.GsBirthCountryNodeIdSource = existingCopies[this.GsBirthCountryNodeIdSource] as GsCountryNode;
			else
				_tmp.GsBirthCountryNodeIdSource = MakeCopyOf(this.GsBirthCountryNodeIdSource, existingCopies) as GsCountryNode;
			if (this.SaStfMemberPrntIdSource != null && existingCopies.Contains(this.SaStfMemberPrntIdSource))
				_tmp.SaStfMemberPrntIdSource = existingCopies[this.SaStfMemberPrntIdSource] as SaStfMember;
			else
				_tmp.SaStfMemberPrntIdSource = MakeCopyOf(this.SaStfMemberPrntIdSource, existingCopies) as SaStfMember;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection, existingCopies); 
			_tmp.EdStudTransCollection = (TList<EdStudTrans>) MakeCopyOf(this.EdStudTransCollection, existingCopies); 
			_tmp.SvStudAskAdvReCollection = (TList<SvStudAskAdvRe>) MakeCopyOf(this.SvStudAskAdvReCollection, existingCopies); 
			_tmp.AccomStudResponsibleCollection = (TList<AccomStudResponsible>) MakeCopyOf(this.AccomStudResponsibleCollection, existingCopies); 
			_tmp.FeeStudBank = (FeeStudBank) MakeCopyOf(this.FeeStudBank, existingCopies); 
			_tmp.EdStudCourseRegPreCollection = (TList<EdStudCourseRegPre>) MakeCopyOf(this.EdStudCourseRegPreCollection, existingCopies); 
			_tmp.SvStudStaffEvalExtCollection = (TList<SvStudStaffEvalExt>) MakeCopyOf(this.SvStudStaffEvalExtCollection, existingCopies); 
			_tmp.EdStudSemesterTempCollection = (TList<EdStudSemesterTemp>) MakeCopyOf(this.EdStudSemesterTempCollection, existingCopies); 
			_tmp.MdiStudProblemCollection = (TList<MdiStudProblem>) MakeCopyOf(this.MdiStudProblemCollection, existingCopies); 
			_tmp.FeeStudInstallmentCollection = (TList<FeeStudInstallment>) MakeCopyOf(this.FeeStudInstallmentCollection, existingCopies); 
			_tmp.ScStudGroupCollection = (TList<ScStudGroup>) MakeCopyOf(this.ScStudGroupCollection, existingCopies); 
			_tmp.EdStudMltryCrsCollection = (TList<EdStudMltryCrs>) MakeCopyOf(this.EdStudMltryCrsCollection, existingCopies); 
			_tmp.RsrchStudRegisterCollection = (TList<RsrchStudRegister>) MakeCopyOf(this.RsrchStudRegisterCollection, existingCopies); 
			_tmp.EdTrainStudCollection = (TList<EdTrainStud>) MakeCopyOf(this.EdTrainStudCollection, existingCopies); 
			_tmp.EdStudMilitaryStateCollection = (TList<EdStudMilitaryState>) MakeCopyOf(this.EdStudMilitaryStateCollection, existingCopies); 
			_tmp.EdStudGraduationAwardCollection = (TList<EdStudGraduationAward>) MakeCopyOf(this.EdStudGraduationAwardCollection, existingCopies); 
			_tmp.EdStudGuardCollection = (TList<EdStudGuard>) MakeCopyOf(this.EdStudGuardCollection, existingCopies); 
			_tmp.EdStudTransFromReqCollection = (TList<EdStudTransFromReq>) MakeCopyOf(this.EdStudTransFromReqCollection, existingCopies); 
			_tmp.SvStudStaffEvalCollection = (TList<SvStudStaffEval>) MakeCopyOf(this.SvStudStaffEvalCollection, existingCopies); 
			_tmp.EdStudIntTrnsStateFromCollection = (TList<EdStudIntTrnsStateFrom>) MakeCopyOf(this.EdStudIntTrnsStateFromCollection, existingCopies); 
			_tmp.EdStudAcadWarnCollection = (TList<EdStudAcadWarn>) MakeCopyOf(this.EdStudAcadWarnCollection, existingCopies); 
			_tmp.MdiStudHosptlCollection = (TList<MdiStudHosptl>) MakeCopyOf(this.MdiStudHosptlCollection, existingCopies); 
			_tmp.EdStudLangCollection = (TList<EdStudLang>) MakeCopyOf(this.EdStudLangCollection, existingCopies); 
			_tmp.MdiStudRecordCollection = (TList<MdiStudRecord>) MakeCopyOf(this.MdiStudRecordCollection, existingCopies); 
			_tmp.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection, existingCopies); 
			_tmp.FeeStudItemCnclCollection = (TList<FeeStudItemCncl>) MakeCopyOf(this.FeeStudItemCnclCollection, existingCopies); 
			_tmp.EdStudActivityCollection = (TList<EdStudActivity>) MakeCopyOf(this.EdStudActivityCollection, existingCopies); 
			_tmp.FeeStudPayPostponeCollection = (TList<FeeStudPayPostpone>) MakeCopyOf(this.FeeStudPayPostponeCollection, existingCopies); 
			_tmp.EdStudRsdncyCollection = (TList<EdStudRsdncy>) MakeCopyOf(this.EdStudRsdncyCollection, existingCopies); 
			_tmp.MltStudInfoCollection = (TList<MltStudInfo>) MakeCopyOf(this.MltStudInfoCollection, existingCopies); 
			_tmp.SvStudLockerReqCollection = (TList<SvStudLockerReq>) MakeCopyOf(this.SvStudLockerReqCollection, existingCopies); 
			_tmp.EdStudMissionCollection = (TList<EdStudMission>) MakeCopyOf(this.EdStudMissionCollection, existingCopies); 
			_tmp.AdmAppWorkExperCollection = (TList<AdmAppWorkExper>) MakeCopyOf(this.AdmAppWorkExperCollection, existingCopies); 
			_tmp.EdStudNoteCollection = (TList<EdStudNote>) MakeCopyOf(this.EdStudNoteCollection, existingCopies); 
			_tmp.EdStudAcadmicAdvCollection = (TList<EdStudAcadmicAdv>) MakeCopyOf(this.EdStudAcadmicAdvCollection, existingCopies); 
			_tmp.CtrSrvcCrewCollection = (TList<CtrSrvcCrew>) MakeCopyOf(this.CtrSrvcCrewCollection, existingCopies); 
			_tmp.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection, existingCopies); 
			_tmp.SpoSponsorStudCollection = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollection, existingCopies); 
			_tmp.AlmJobCollection = (TList<AlmJob>) MakeCopyOf(this.AlmJobCollection, existingCopies); 
			_tmp.FeeStudVoucherCollection = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollection, existingCopies); 
			_tmp.SpoSponsorStudSemesterCollection = (TList<SpoSponsorStudSemester>) MakeCopyOf(this.SpoSponsorStudSemesterCollection, existingCopies); 
			_tmp.FeeStudFundCollection = (TList<FeeStudFund>) MakeCopyOf(this.FeeStudFundCollection, existingCopies); 
			_tmp.PgStudTravelCollection = (TList<PgStudTravel>) MakeCopyOf(this.PgStudTravelCollection, existingCopies); 
			_tmp.CtrStudOutCollection = (TList<CtrStudOut>) MakeCopyOf(this.CtrStudOutCollection, existingCopies); 
			_tmp.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection, existingCopies); 
			_tmp.EdStudSportCollection = (TList<EdStudSport>) MakeCopyOf(this.EdStudSportCollection, existingCopies); 
			_tmp.MdiStudVaccCollection = (TList<MdiStudVacc>) MakeCopyOf(this.MdiStudVaccCollection, existingCopies); 
			_tmp.CtrStudExpCollection = (TList<CtrStudExp>) MakeCopyOf(this.CtrStudExpCollection, existingCopies); 
			_tmp.MdiStudClnqCollection = (TList<MdiStudClnq>) MakeCopyOf(this.MdiStudClnqCollection, existingCopies); 
			_tmp.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection, existingCopies); 
			_tmp.FeeStudRetrieveRequestCollection = (TList<FeeStudRetrieveRequest>) MakeCopyOf(this.FeeStudRetrieveRequestCollection, existingCopies); 
			_tmp.EdStudViolCollection = (TList<EdStudViol>) MakeCopyOf(this.EdStudViolCollection, existingCopies); 
			_tmp.AdmApplicantCollection = (TList<AdmApplicant>) MakeCopyOf(this.AdmApplicantCollection, existingCopies); 
			_tmp.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection, existingCopies); 
			_tmp.AccomStudAbsenceCollection = (TList<AccomStudAbsence>) MakeCopyOf(this.AccomStudAbsenceCollection, existingCopies); 
			_tmp.FeeItemTrnsBlncCollection = (TList<FeeItemTrnsBlnc>) MakeCopyOf(this.FeeItemTrnsBlncCollection, existingCopies); 
			_tmp.AdmScholorshipCollection = (TList<AdmScholorship>) MakeCopyOf(this.AdmScholorshipCollection, existingCopies); 
			_tmp.FeeStudInstallmentRequestCollection = (TList<FeeStudInstallmentRequest>) MakeCopyOf(this.FeeStudInstallmentRequestCollection, existingCopies); 
			_tmp.EdStudGrantTempCollection = (TList<EdStudGrantTemp>) MakeCopyOf(this.EdStudGrantTempCollection, existingCopies); 
			_tmp.FeeStudAllowanceCollection = (TList<FeeStudAllowance>) MakeCopyOf(this.FeeStudAllowanceCollection, existingCopies); 
			_tmp.FeeInvoiceCollection = (TList<FeeInvoice>) MakeCopyOf(this.FeeInvoiceCollection, existingCopies); 
			_tmp.EdStudProblemCollection = (TList<EdStudProblem>) MakeCopyOf(this.EdStudProblemCollection, existingCopies); 
			_tmp.AlmPrintRequestCollection = (TList<AlmPrintRequest>) MakeCopyOf(this.AlmPrintRequestCollection, existingCopies); 
			_tmp.FeeInstlmntStudCollection = (TList<FeeInstlmntStud>) MakeCopyOf(this.FeeInstlmntStudCollection, existingCopies); 
			_tmp.EdStudCodeChngCollection = (TList<EdStudCodeChng>) MakeCopyOf(this.EdStudCodeChngCollection, existingCopies); 
			_tmp.EdStudGrantDegreeCollection = (TList<EdStudGrantDegree>) MakeCopyOf(this.EdStudGrantDegreeCollection, existingCopies); 
			_tmp.EdProjStudCollection = (TList<EdProjStud>) MakeCopyOf(this.EdProjStudCollection, existingCopies); 
			_tmp.EdStudExmptReqCollection = (TList<EdStudExmptReq>) MakeCopyOf(this.EdStudExmptReqCollection, existingCopies); 
			_tmp.AdmAppDocCollection = (TList<AdmAppDoc>) MakeCopyOf(this.AdmAppDocCollection, existingCopies); 
			_tmp.RsrchStudPostponeReqCollection = (TList<RsrchStudPostponeReq>) MakeCopyOf(this.RsrchStudPostponeReqCollection, existingCopies); 
			_tmp.TrnsStudCarStkrCollection = (TList<TrnsStudCarStkr>) MakeCopyOf(this.TrnsStudCarStkrCollection, existingCopies); 
			_tmp.PgThesisNoteCollection = (TList<PgThesisNote>) MakeCopyOf(this.PgThesisNoteCollection, existingCopies); 
			_tmp.FeeStudNatSimilarityRequestCollection = (TList<FeeStudNatSimilarityRequest>) MakeCopyOf(this.FeeStudNatSimilarityRequestCollection, existingCopies); 
			_tmp.EdStudSemesterCollection = (TList<EdStudSemester>) MakeCopyOf(this.EdStudSemesterCollection, existingCopies); 
			_tmp.SvSrvyRespondQstnCollection = (TList<SvSrvyRespondQstn>) MakeCopyOf(this.SvSrvyRespondQstnCollection, existingCopies); 
			_tmp.EdStudExecuseReqCollection = (TList<EdStudExecuseReq>) MakeCopyOf(this.EdStudExecuseReqCollection, existingCopies); 
			_tmp.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection, existingCopies); 
			_tmp.SvStudPollCollection = (TList<SvStudPoll>) MakeCopyOf(this.SvStudPollCollection, existingCopies); 
			_tmp.EdStudAbsenceCollection = (TList<EdStudAbsence>) MakeCopyOf(this.EdStudAbsenceCollection, existingCopies); 
			_tmp.FeeStudCoursesItemCollection = (TList<FeeStudCoursesItem>) MakeCopyOf(this.FeeStudCoursesItemCollection, existingCopies); 
			_tmp.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection, existingCopies); 
			_tmp.EdAcdadvRmkCollection = (TList<EdAcdadvRmk>) MakeCopyOf(this.EdAcdadvRmkCollection, existingCopies); 
			_tmp.EdStudCourseCompCollection = (TList<EdStudCourseComp>) MakeCopyOf(this.EdStudCourseCompCollection, existingCopies); 
			_tmp.SvStudCourseEvalCollection = (TList<SvStudCourseEval>) MakeCopyOf(this.SvStudCourseEvalCollection, existingCopies); 
			_tmp.AdmAppDisabilityCollection = (TList<AdmAppDisability>) MakeCopyOf(this.AdmAppDisabilityCollection, existingCopies); 
			_tmp.EdStudContactMethodCollection = (TList<EdStudContactMethod>) MakeCopyOf(this.EdStudContactMethodCollection, existingCopies); 
			_tmp.AccomStudReqCollection = (TList<AccomStudReq>) MakeCopyOf(this.AccomStudReqCollection, existingCopies); 
			_tmp.EdResidencyStudCollection = (TList<EdResidencyStud>) MakeCopyOf(this.EdResidencyStudCollection, existingCopies); 
			_tmp.EdStudStateTempCollection = (TList<EdStudStateTemp>) MakeCopyOf(this.EdStudStateTempCollection, existingCopies); 
			_tmp.PgStudPublishCollection = (TList<PgStudPublish>) MakeCopyOf(this.PgStudPublishCollection, existingCopies); 
			_tmp.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection, existingCopies); 
			_tmp.EdStudIntTrnsStateToCollection = (TList<EdStudIntTrnsStateTo>) MakeCopyOf(this.EdStudIntTrnsStateToCollection, existingCopies); 
			_tmp.FeeStudFeeItemCollection = (TList<FeeStudFeeItem>) MakeCopyOf(this.FeeStudFeeItemCollection, existingCopies); 
			_tmp.EdPrintReqCollection = (TList<EdPrintReq>) MakeCopyOf(this.EdPrintReqCollection, existingCopies); 
			_tmp.GsAddressDtlCollection = (TList<GsAddressDtl>) MakeCopyOf(this.GsAddressDtlCollection, existingCopies); 
			_tmp.TrnsStudReqCollection = (TList<TrnsStudReq>) MakeCopyOf(this.TrnsStudReqCollection, existingCopies); 
			_tmp.SvStudAskAdvCollection = (TList<SvStudAskAdv>) MakeCopyOf(this.SvStudAskAdvCollection, existingCopies); 
			_tmp.AccomStudBookCollection = (TList<AccomStudBook>) MakeCopyOf(this.AccomStudBookCollection, existingCopies); 
			_tmp.SvStudCourseEvalExtCollection = (TList<SvStudCourseEvalExt>) MakeCopyOf(this.SvStudCourseEvalExtCollection, existingCopies); 
			_tmp.EdStudIntTrnsCollection = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollection, existingCopies); 
			_tmp.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection, existingCopies); 
			_tmp.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection, existingCopies); 
			_tmp.EdStudQualCollection = (TList<EdStudQual>) MakeCopyOf(this.EdStudQualCollection, existingCopies); 
			_tmp.MltRptDayOutStudCollection = (TList<MltRptDayOutStud>) MakeCopyOf(this.MltRptDayOutStudCollection, existingCopies); 
			_tmp.EdStudRsrvRegTimeCollection = (TList<EdStudRsrvRegTime>) MakeCopyOf(this.EdStudRsrvRegTimeCollection, existingCopies); 
			_tmp.AdmAppLanguagesCollection = (TList<AdmAppLanguages>) MakeCopyOf(this.AdmAppLanguagesCollection, existingCopies); 
			_tmp.PgStudConferenceCollection = (TList<PgStudConference>) MakeCopyOf(this.PgStudConferenceCollection, existingCopies); 
			_tmp.EdStudMilitaryInfoCollection = (TList<EdStudMilitaryInfo>) MakeCopyOf(this.EdStudMilitaryInfoCollection, existingCopies); 
			_tmp.IntegUserAdLogDtlCollection = (TList<IntegUserAdLogDtl>) MakeCopyOf(this.IntegUserAdLogDtlCollection, existingCopies); 
			_tmp.AccomStudAbsenceWarnCollection = (TList<AccomStudAbsenceWarn>) MakeCopyOf(this.AccomStudAbsenceWarnCollection, existingCopies); 
			_tmp.AdmEnglishProficiencyCollection = (TList<AdmEnglishProficiency>) MakeCopyOf(this.AdmEnglishProficiencyCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(EdStudColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(EdStudColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(EdStudColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				EdStudEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new EdStudEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(EdStudColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				EdStudEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new EdStudEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region EdStudEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="EdStud"/> object.
	/// </remarks>
	public class EdStudEventArgs : System.EventArgs
	{
		private EdStudColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the EdStudEventArgs class.
		///</summary>
		public EdStudEventArgs(EdStudColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the EdStudEventArgs class.
		///</summary>
		public EdStudEventArgs(EdStudColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The EdStudColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="EdStudColumn" />
		public EdStudColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all EdStud related events.
	///</summary>
	public delegate void EdStudEventHandler(object sender, EdStudEventArgs e);
	
	#region EdStudComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class EdStudComparer : System.Collections.Generic.IComparer<EdStud>
	{
		EdStudColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:EdStudComparer"/> class.
        /// </summary>
		public EdStudComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:EdStudComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public EdStudComparer(EdStudColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="EdStud"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="EdStud"/> to compare.</param>
        /// <param name="b">The second <c>EdStud</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(EdStud a, EdStud b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(EdStud entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(EdStud a, EdStud b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public EdStudColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region EdStudKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="EdStud"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class EdStudKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the EdStudKey class.
		/// </summary>
		public EdStudKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the EdStudKey class.
		/// </summary>
		public EdStudKey(EdStudBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.EdStudId = entity.EdStudId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the EdStudKey class.
		/// </summary>
		public EdStudKey(System.Decimal _edStudId)
		{
			#region Init Properties

			this.EdStudId = _edStudId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private EdStudBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public EdStudBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the EdStudId property
		private System.Decimal _edStudId;
		
		/// <summary>
		/// Gets or sets the EdStudId property.
		/// </summary>
		public System.Decimal EdStudId
		{
			get { return _edStudId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.EdStudId = value;
				
				_edStudId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				EdStudId = ( values["EdStudId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["EdStudId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("EdStudId", EdStudId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("EdStudId: {0}{1}",
								EdStudId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region EdStudColumn Enum
	
	/// <summary>
	/// Enumerate the EdStud columns.
	/// </summary>
	[Serializable]
	public enum EdStudColumn : int
	{
		/// <summary>
		/// EdStudId : 
		/// </summary>
		[EnumTextValue("ED_STUD_ID")]
		[ColumnEnum("ED_STUD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		EdStudId = 1,
		/// <summary>
		/// NationalNumber : 
		/// </summary>
		[EnumTextValue("NATIONAL_NUMBER")]
		[ColumnEnum("NATIONAL_NUMBER", typeof(System.String), System.Data.DbType.String, false, false, true, 30)]
		NationalNumber = 2,
		/// <summary>
		/// FullNameAr : 
		/// </summary>
		[EnumTextValue("FULL_NAME_AR")]
		[ColumnEnum("FULL_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, false, 150)]
		FullNameAr = 3,
		/// <summary>
		/// ClFullNameAr : 
		/// </summary>
		[EnumTextValue("CL_FULL_NAME_AR")]
		[ColumnEnum("CL_FULL_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		ClFullNameAr = 4,
		/// <summary>
		/// StudNameAr : 
		/// </summary>
		[EnumTextValue("STUD_NAME_AR")]
		[ColumnEnum("STUD_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		StudNameAr = 5,
		/// <summary>
		/// ClStudNameAr : 
		/// </summary>
		[EnumTextValue("CL_STUD_NAME_AR")]
		[ColumnEnum("CL_STUD_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		ClStudNameAr = 6,
		/// <summary>
		/// FatherNameAr : 
		/// </summary>
		[EnumTextValue("FATHER_NAME_AR")]
		[ColumnEnum("FATHER_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		FatherNameAr = 7,
		/// <summary>
		/// ClFatherNameAr : 
		/// </summary>
		[EnumTextValue("CL_FATHER_NAME_AR")]
		[ColumnEnum("CL_FATHER_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		ClFatherNameAr = 8,
		/// <summary>
		/// GrandfatherNameAr : 
		/// </summary>
		[EnumTextValue("GRANDFATHER_NAME_AR")]
		[ColumnEnum("GRANDFATHER_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		GrandfatherNameAr = 9,
		/// <summary>
		/// ClGrandfatherNameAr : 
		/// </summary>
		[EnumTextValue("CL_GRANDFATHER_NAME_AR")]
		[ColumnEnum("CL_GRANDFATHER_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		ClGrandfatherNameAr = 10,
		/// <summary>
		/// FamilyNameAr : 
		/// </summary>
		[EnumTextValue("FAMILY_NAME_AR")]
		[ColumnEnum("FAMILY_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		FamilyNameAr = 11,
		/// <summary>
		/// ClFamilyNameAr : 
		/// </summary>
		[EnumTextValue("CL_FAMILY_NAME_AR")]
		[ColumnEnum("CL_FAMILY_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		ClFamilyNameAr = 12,
		/// <summary>
		/// FullNameEn : 
		/// </summary>
		[EnumTextValue("FULL_NAME_EN")]
		[ColumnEnum("FULL_NAME_EN", typeof(System.String), System.Data.DbType.String, false, false, false, 150)]
		FullNameEn = 13,
		/// <summary>
		/// StudNameEn : 
		/// </summary>
		[EnumTextValue("STUD_NAME_EN")]
		[ColumnEnum("STUD_NAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		StudNameEn = 14,
		/// <summary>
		/// FatherNameEn : 
		/// </summary>
		[EnumTextValue("FATHER_NAME_EN")]
		[ColumnEnum("FATHER_NAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		FatherNameEn = 15,
		/// <summary>
		/// GrandfatherNameEn : 
		/// </summary>
		[EnumTextValue("GRANDFATHER_NAME_EN")]
		[ColumnEnum("GRANDFATHER_NAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		GrandfatherNameEn = 16,
		/// <summary>
		/// FamilyNameEn : 
		/// </summary>
		[EnumTextValue("FAMILY_NAME_EN")]
		[ColumnEnum("FAMILY_NAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		FamilyNameEn = 17,
		/// <summary>
		/// FatherProfession : 
		/// </summary>
		[EnumTextValue("FATHER_PROFESSION")]
		[ColumnEnum("FATHER_PROFESSION", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		FatherProfession = 18,
		/// <summary>
		/// FatherNationalNumber : 
		/// </summary>
		[EnumTextValue("FATHER_NATIONAL_NUMBER")]
		[ColumnEnum("FATHER_NATIONAL_NUMBER", typeof(System.String), System.Data.DbType.String, false, false, true, 30)]
		FatherNationalNumber = 19,
		/// <summary>
		/// MotherNationalNumber : 
		/// </summary>
		[EnumTextValue("MOTHER_NATIONAL_NUMBER")]
		[ColumnEnum("MOTHER_NATIONAL_NUMBER", typeof(System.String), System.Data.DbType.String, false, false, true, 30)]
		MotherNationalNumber = 20,
		/// <summary>
		/// MotherNameAr : 
		/// </summary>
		[EnumTextValue("MOTHER_NAME_AR")]
		[ColumnEnum("MOTHER_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		MotherNameAr = 21,
		/// <summary>
		/// ClMotherNameAr : 
		/// </summary>
		[EnumTextValue("CL_MOTHER_NAME_AR")]
		[ColumnEnum("CL_MOTHER_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		ClMotherNameAr = 22,
		/// <summary>
		/// MotherNameEn : 
		/// </summary>
		[EnumTextValue("MOTHER_NAME_EN")]
		[ColumnEnum("MOTHER_NAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		MotherNameEn = 23,
		/// <summary>
		/// GsCodeGenderId : 
		/// </summary>
		[EnumTextValue("GS_CODE_GENDER_ID")]
		[ColumnEnum("GS_CODE_GENDER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeGenderId = 24,
		/// <summary>
		/// GsCodeReligionId : 
		/// </summary>
		[EnumTextValue("GS_CODE_RELIGION_ID")]
		[ColumnEnum("GS_CODE_RELIGION_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeReligionId = 25,
		/// <summary>
		/// BirthRegNumber : 
		/// </summary>
		[EnumTextValue("BIRTH_REG_NUMBER")]
		[ColumnEnum("BIRTH_REG_NUMBER", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		BirthRegNumber = 26,
		/// <summary>
		/// BirthDate : 
		/// </summary>
		[EnumTextValue("BIRTH_DATE")]
		[ColumnEnum("BIRTH_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		BirthDate = 27,
		/// <summary>
		/// GsBirthCountryNodeId : 
		/// </summary>
		[EnumTextValue("GS_BIRTH_COUNTRY_NODE_ID")]
		[ColumnEnum("GS_BIRTH_COUNTRY_NODE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsBirthCountryNodeId = 28,
		/// <summary>
		/// GsCountryInfoId1 : 
		/// </summary>
		[EnumTextValue("GS_COUNTRY_INFO_ID_1")]
		[ColumnEnum("GS_COUNTRY_INFO_ID_1", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCountryInfoId1 = 29,
		/// <summary>
		/// GsCountryInfoId2 : 
		/// </summary>
		[EnumTextValue("GS_COUNTRY_INFO_ID_2")]
		[ColumnEnum("GS_COUNTRY_INFO_ID_2", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCountryInfoId2 = 30,
		/// <summary>
		/// StudPhoto : 
		/// </summary>
		[EnumTextValue("STUD_PHOTO")]
		[ColumnEnum("STUD_PHOTO", typeof(System.String), System.Data.DbType.String, false, false, true, 350)]
		StudPhoto = 31,
		/// <summary>
		/// GsCodeIdentTypeId : 
		/// </summary>
		[EnumTextValue("GS_CODE_IDENT_TYPE_ID")]
		[ColumnEnum("GS_CODE_IDENT_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeIdentTypeId = 32,
		/// <summary>
		/// IsPrntStaff : XXX ED_GURAD
		/// </summary>
		[EnumTextValue("IS_PRNT_STAFF")]
		[ColumnEnum("IS_PRNT_STAFF", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		IsPrntStaff = 33,
		/// <summary>
		/// SaStfMemberPrntId : 
		/// </summary>
		[EnumTextValue("SA_STF_MEMBER_PRNT_ID")]
		[ColumnEnum("SA_STF_MEMBER_PRNT_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SaStfMemberPrntId = 34,
		/// <summary>
		/// GsCdeBloodId : 
		/// </summary>
		[EnumTextValue("GS_CDE_BLOOD_ID")]
		[ColumnEnum("GS_CDE_BLOOD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCdeBloodId = 35,
		/// <summary>
		/// StudLnht : 
		/// </summary>
		[EnumTextValue("STUD_LNHT")]
		[ColumnEnum("STUD_LNHT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		StudLnht = 36,
		/// <summary>
		/// StudWght : 
		/// </summary>
		[EnumTextValue("STUD_WGHT")]
		[ColumnEnum("STUD_WGHT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		StudWght = 37,
		/// <summary>
		/// IdentIssuePlc : مكان اصدار
		/// </summary>
		[EnumTextValue("IDENT_ISSUE_PLC")]
		[ColumnEnum("IDENT_ISSUE_PLC", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		IdentIssuePlc = 38,
		/// <summary>
		/// GsCodeLanguageId : لغة التخصص
		/// </summary>
		[EnumTextValue("GS_CODE_LANGUAGE_ID")]
		[ColumnEnum("GS_CODE_LANGUAGE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeLanguageId = 39,
		/// <summary>
		/// PassporNo : 
		/// </summary>
		[EnumTextValue("PASSPOR_NO")]
		[ColumnEnum("PASSPOR_NO", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		PassporNo = 40,
		/// <summary>
		/// PassporExpireDate : 
		/// </summary>
		[EnumTextValue("PASSPOR_EXPIRE_DATE")]
		[ColumnEnum("PASSPOR_EXPIRE_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		PassporExpireDate = 41,
		/// <summary>
		/// PassporIssueDate : 
		/// </summary>
		[EnumTextValue("PASSPOR_ISSUE_DATE")]
		[ColumnEnum("PASSPOR_ISSUE_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		PassporIssueDate = 42,
		/// <summary>
		/// SpecialNeedFlg : 
		/// </summary>
		[EnumTextValue("SPECIAL_NEED_FLG")]
		[ColumnEnum("SPECIAL_NEED_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		SpecialNeedFlg = 43,
		/// <summary>
		/// EmployeeFlg : WORK_FLG
		/// </summary>
		[EnumTextValue("EMPLOYEE_FLG")]
		[ColumnEnum("EMPLOYEE_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		EmployeeFlg = 44,
		/// <summary>
		/// IdentIssueDate : 
		/// </summary>
		[EnumTextValue("IDENT_ISSUE_DATE")]
		[ColumnEnum("IDENT_ISSUE_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		IdentIssueDate = 45,
		/// <summary>
		/// IdentExpireDate : 
		/// </summary>
		[EnumTextValue("IDENT_EXPIRE_DATE")]
		[ColumnEnum("IDENT_EXPIRE_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		IdentExpireDate = 46,
		/// <summary>
		/// HecId : XXXnot used moved to ed_stud_faculty HEC-ID
		/// </summary>
		[EnumTextValue("HEC_ID")]
		[ColumnEnum("HEC_ID", typeof(System.String), System.Data.DbType.String, false, false, true, 30)]
		HecId = 47,
		/// <summary>
		/// GsCdeMaritalStatusId : 
		/// </summary>
		[EnumTextValue("GS_CDE_MARITAL_STATUS_ID")]
		[ColumnEnum("GS_CDE_MARITAL_STATUS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCdeMaritalStatusId = 48,
		/// <summary>
		/// MarriageDate : 
		/// </summary>
		[EnumTextValue("MARRIAGE_DATE")]
		[ColumnEnum("MARRIAGE_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		MarriageDate = 49,
		/// <summary>
		/// NoChild : 
		/// </summary>
		[EnumTextValue("NO_CHILD")]
		[ColumnEnum("NO_CHILD", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		NoChild = 50,
		/// <summary>
		/// VisaNumber : رقم التأشيرة
		/// </summary>
		[EnumTextValue("VISA_NUMBER")]
		[ColumnEnum("VISA_NUMBER", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		VisaNumber = 51,
		/// <summary>
		/// VisaIssueDate : 
		/// </summary>
		[EnumTextValue("VISA_ISSUE_DATE")]
		[ColumnEnum("VISA_ISSUE_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		VisaIssueDate = 52,
		/// <summary>
		/// VisaExpireDate : 
		/// </summary>
		[EnumTextValue("VISA_EXPIRE_DATE")]
		[ColumnEnum("VISA_EXPIRE_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		VisaExpireDate = 53,
		/// <summary>
		/// SeFormId : 
		/// </summary>
		[EnumTextValue("SE_FORM_ID")]
		[ColumnEnum("SE_FORM_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeFormId = 54,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 55,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 56,
		/// <summary>
		/// CovidFlg : 
		/// </summary>
		[EnumTextValue("COVID_FLG")]
		[ColumnEnum("COVID_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		CovidFlg = 57
	}//End enum

	#endregion EdStudColumn Enum

} // end namespace
