
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file AdmAppSchoolInfo.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ADM_APP_SCHOOL_INFO' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class AdmAppSchoolInfoBase : EntityBase, IAdmAppSchoolInfo, IEntityId<AdmAppSchoolInfoKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private AdmAppSchoolInfoEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private AdmAppSchoolInfoEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private AdmAppSchoolInfoEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<AdmAppSchoolInfo> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AdmAppSchoolInfoEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AdmAppSchoolInfoEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="AdmAppSchoolInfoBase"/> instance.
		///</summary>
		public AdmAppSchoolInfoBase()
		{
			this.entityData = new AdmAppSchoolInfoEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="AdmAppSchoolInfoBase"/> instance.
		///</summary>
		///<param name="_admAppSchoolInfoId"></param>
		///<param name="_admApplicantId">مسلسل المتقدم</param>
		///<param name="_gsCdeSchoolId">مسلسل مدرسة الثانوية</param>
		///<param name="_schoolOtherName">اسم المدرسة فى حالة اختار الطالب مدرسة غير موجودة</param>
		///<param name="_gsCountryNodeId">بلد المدرسة فى حالة اختار الطالب مدرسة غير موجودة</param>
		///<param name="_schoolOther"></param>
		///<param name="_certDate"></param>
		///<param name="_edCodeQualId"></param>
		///<param name="_certTypeOtherName"></param>
		///<param name="_certfEngPrcnt">معدل اللغة الانجليزية فى الثانوية العامة</param>
		///<param name="_certfPercent">نسبة المؤهل</param>
		///<param name="_gsCodeLanguageId">لغة الدراسة الرئيسية</param>
		///<param name="_certfDegree">درجة المؤهل</param>
		///<param name="_cgpa"></param>
		public AdmAppSchoolInfoBase(System.Decimal _admAppSchoolInfoId, System.Decimal _admApplicantId, 
			System.Decimal? _gsCdeSchoolId, System.String _schoolOtherName, System.Decimal? _gsCountryNodeId, 
			System.String _schoolOther, System.DateTime? _certDate, System.Decimal? _edCodeQualId, 
			System.String _certTypeOtherName, System.Decimal? _certfEngPrcnt, System.Decimal? _certfPercent, 
			System.Decimal? _gsCodeLanguageId, System.String _certfDegree, System.Decimal? _cgpa)
		{
			this.entityData = new AdmAppSchoolInfoEntityData();
			this.backupData = null;

			this.AdmAppSchoolInfoId = _admAppSchoolInfoId;
			this.AdmApplicantId = _admApplicantId;
			this.GsCdeSchoolId = _gsCdeSchoolId;
			this.SchoolOtherName = _schoolOtherName;
			this.GsCountryNodeId = _gsCountryNodeId;
			this.SchoolOther = _schoolOther;
			this.CertDate = _certDate;
			this.EdCodeQualId = _edCodeQualId;
			this.CertTypeOtherName = _certTypeOtherName;
			this.CertfEngPrcnt = _certfEngPrcnt;
			this.CertfPercent = _certfPercent;
			this.GsCodeLanguageId = _gsCodeLanguageId;
			this.CertfDegree = _certfDegree;
			this.Cgpa = _cgpa;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="AdmAppSchoolInfo"/> instance.
		///</summary>
		///<param name="_admAppSchoolInfoId"></param>
		///<param name="_admApplicantId">مسلسل المتقدم</param>
		///<param name="_gsCdeSchoolId">مسلسل مدرسة الثانوية</param>
		///<param name="_schoolOtherName">اسم المدرسة فى حالة اختار الطالب مدرسة غير موجودة</param>
		///<param name="_gsCountryNodeId">بلد المدرسة فى حالة اختار الطالب مدرسة غير موجودة</param>
		///<param name="_schoolOther"></param>
		///<param name="_certDate"></param>
		///<param name="_edCodeQualId"></param>
		///<param name="_certTypeOtherName"></param>
		///<param name="_certfEngPrcnt">معدل اللغة الانجليزية فى الثانوية العامة</param>
		///<param name="_certfPercent">نسبة المؤهل</param>
		///<param name="_gsCodeLanguageId">لغة الدراسة الرئيسية</param>
		///<param name="_certfDegree">درجة المؤهل</param>
		///<param name="_cgpa"></param>
		public static AdmAppSchoolInfo CreateAdmAppSchoolInfo(System.Decimal _admAppSchoolInfoId, System.Decimal _admApplicantId, 
			System.Decimal? _gsCdeSchoolId, System.String _schoolOtherName, System.Decimal? _gsCountryNodeId, 
			System.String _schoolOther, System.DateTime? _certDate, System.Decimal? _edCodeQualId, 
			System.String _certTypeOtherName, System.Decimal? _certfEngPrcnt, System.Decimal? _certfPercent, 
			System.Decimal? _gsCodeLanguageId, System.String _certfDegree, System.Decimal? _cgpa)
		{
			AdmAppSchoolInfo newAdmAppSchoolInfo = new AdmAppSchoolInfo();
			newAdmAppSchoolInfo.AdmAppSchoolInfoId = _admAppSchoolInfoId;
			newAdmAppSchoolInfo.AdmApplicantId = _admApplicantId;
			newAdmAppSchoolInfo.GsCdeSchoolId = _gsCdeSchoolId;
			newAdmAppSchoolInfo.SchoolOtherName = _schoolOtherName;
			newAdmAppSchoolInfo.GsCountryNodeId = _gsCountryNodeId;
			newAdmAppSchoolInfo.SchoolOther = _schoolOther;
			newAdmAppSchoolInfo.CertDate = _certDate;
			newAdmAppSchoolInfo.EdCodeQualId = _edCodeQualId;
			newAdmAppSchoolInfo.CertTypeOtherName = _certTypeOtherName;
			newAdmAppSchoolInfo.CertfEngPrcnt = _certfEngPrcnt;
			newAdmAppSchoolInfo.CertfPercent = _certfPercent;
			newAdmAppSchoolInfo.GsCodeLanguageId = _gsCodeLanguageId;
			newAdmAppSchoolInfo.CertfDegree = _certfDegree;
			newAdmAppSchoolInfo.Cgpa = _cgpa;
			return newAdmAppSchoolInfo;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the AdmAppSchoolInfoId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal AdmAppSchoolInfoId
		{
			get
			{
				return this.entityData.AdmAppSchoolInfoId; 
			}
			
			set
			{
				if (this.entityData.AdmAppSchoolInfoId == value)
					return;
					
				OnColumnChanging(AdmAppSchoolInfoColumn.AdmAppSchoolInfoId, this.entityData.AdmAppSchoolInfoId);
				this.entityData.AdmAppSchoolInfoId = value;
				this.EntityId.AdmAppSchoolInfoId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppSchoolInfoColumn.AdmAppSchoolInfoId, this.entityData.AdmAppSchoolInfoId);
				OnPropertyChanged("AdmAppSchoolInfoId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ADM_APP_SCHOOL_INFO_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the ADM_APP_SCHOOL_INFO_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalAdmAppSchoolInfoId
		{
			get { return this.entityData.OriginalAdmAppSchoolInfoId; }
			set { this.entityData.OriginalAdmAppSchoolInfoId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the AdmApplicantId property. 
		///		مسلسل المتقدم
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"مسلسل المتقدم"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal AdmApplicantId
		{
			get
			{
				return this.entityData.AdmApplicantId; 
			}
			
			set
			{
				if (this.entityData.AdmApplicantId == value)
					return;
					
				OnColumnChanging(AdmAppSchoolInfoColumn.AdmApplicantId, this.entityData.AdmApplicantId);
				this.entityData.AdmApplicantId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppSchoolInfoColumn.AdmApplicantId, this.entityData.AdmApplicantId);
				OnPropertyChanged("AdmApplicantId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCdeSchoolId property. 
		///		مسلسل مدرسة الثانوية
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCdeSchoolIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"مسلسل مدرسة الثانوية"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCdeSchoolId
		{
			get
			{
				return this.entityData.GsCdeSchoolId; 
			}
			
			set
			{
				if (this.entityData.GsCdeSchoolId == value)
					return;
					
				OnColumnChanging(AdmAppSchoolInfoColumn.GsCdeSchoolId, this.entityData.GsCdeSchoolId);
				this.entityData.GsCdeSchoolId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppSchoolInfoColumn.GsCdeSchoolId, this.entityData.GsCdeSchoolId);
				OnPropertyChanged("GsCdeSchoolId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SchoolOtherName property. 
		///		اسم المدرسة فى حالة اختار الطالب مدرسة غير موجودة
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"اسم المدرسة فى حالة اختار الطالب مدرسة غير موجودة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String SchoolOtherName
		{
			get
			{
				return this.entityData.SchoolOtherName; 
			}
			
			set
			{
				if (this.entityData.SchoolOtherName == value)
					return;
					
				OnColumnChanging(AdmAppSchoolInfoColumn.SchoolOtherName, this.entityData.SchoolOtherName);
				this.entityData.SchoolOtherName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppSchoolInfoColumn.SchoolOtherName, this.entityData.SchoolOtherName);
				OnPropertyChanged("SchoolOtherName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCountryNodeId property. 
		///		بلد المدرسة فى حالة اختار الطالب مدرسة غير موجودة
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCountryNodeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"بلد المدرسة فى حالة اختار الطالب مدرسة غير موجودة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCountryNodeId
		{
			get
			{
				return this.entityData.GsCountryNodeId; 
			}
			
			set
			{
				if (this.entityData.GsCountryNodeId == value)
					return;
					
				OnColumnChanging(AdmAppSchoolInfoColumn.GsCountryNodeId, this.entityData.GsCountryNodeId);
				this.entityData.GsCountryNodeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppSchoolInfoColumn.GsCountryNodeId, this.entityData.GsCountryNodeId);
				OnPropertyChanged("GsCountryNodeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SchoolOther property. 
		///		
		/// </summary>
		/// <value>This type is nchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String SchoolOther
		{
			get
			{
				return this.entityData.SchoolOther; 
			}
			
			set
			{
				if (this.entityData.SchoolOther == value)
					return;
					
				OnColumnChanging(AdmAppSchoolInfoColumn.SchoolOther, this.entityData.SchoolOther);
				this.entityData.SchoolOther = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppSchoolInfoColumn.SchoolOther, this.entityData.SchoolOther);
				OnPropertyChanged("SchoolOther");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CertDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsCertDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? CertDate
		{
			get
			{
				return this.entityData.CertDate; 
			}
			
			set
			{
				if (this.entityData.CertDate == value)
					return;
					
				OnColumnChanging(AdmAppSchoolInfoColumn.CertDate, this.entityData.CertDate);
				this.entityData.CertDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppSchoolInfoColumn.CertDate, this.entityData.CertDate);
				OnPropertyChanged("CertDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeQualId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeQualIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCodeQualId
		{
			get
			{
				return this.entityData.EdCodeQualId; 
			}
			
			set
			{
				if (this.entityData.EdCodeQualId == value)
					return;
					
				OnColumnChanging(AdmAppSchoolInfoColumn.EdCodeQualId, this.entityData.EdCodeQualId);
				this.entityData.EdCodeQualId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppSchoolInfoColumn.EdCodeQualId, this.entityData.EdCodeQualId);
				OnPropertyChanged("EdCodeQualId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CertTypeOtherName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String CertTypeOtherName
		{
			get
			{
				return this.entityData.CertTypeOtherName; 
			}
			
			set
			{
				if (this.entityData.CertTypeOtherName == value)
					return;
					
				OnColumnChanging(AdmAppSchoolInfoColumn.CertTypeOtherName, this.entityData.CertTypeOtherName);
				this.entityData.CertTypeOtherName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppSchoolInfoColumn.CertTypeOtherName, this.entityData.CertTypeOtherName);
				OnPropertyChanged("CertTypeOtherName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CertfEngPrcnt property. 
		///		معدل اللغة الانجليزية فى الثانوية العامة
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCertfEngPrcntNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"معدل اللغة الانجليزية فى الثانوية العامة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? CertfEngPrcnt
		{
			get
			{
				return this.entityData.CertfEngPrcnt; 
			}
			
			set
			{
				if (this.entityData.CertfEngPrcnt == value)
					return;
					
				OnColumnChanging(AdmAppSchoolInfoColumn.CertfEngPrcnt, this.entityData.CertfEngPrcnt);
				this.entityData.CertfEngPrcnt = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppSchoolInfoColumn.CertfEngPrcnt, this.entityData.CertfEngPrcnt);
				OnPropertyChanged("CertfEngPrcnt");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CertfPercent property. 
		///		نسبة المؤهل
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCertfPercentNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"نسبة المؤهل"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? CertfPercent
		{
			get
			{
				return this.entityData.CertfPercent; 
			}
			
			set
			{
				if (this.entityData.CertfPercent == value)
					return;
					
				OnColumnChanging(AdmAppSchoolInfoColumn.CertfPercent, this.entityData.CertfPercent);
				this.entityData.CertfPercent = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppSchoolInfoColumn.CertfPercent, this.entityData.CertfPercent);
				OnPropertyChanged("CertfPercent");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeLanguageId property. 
		///		لغة الدراسة الرئيسية
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeLanguageIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"لغة الدراسة الرئيسية"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeLanguageId
		{
			get
			{
				return this.entityData.GsCodeLanguageId; 
			}
			
			set
			{
				if (this.entityData.GsCodeLanguageId == value)
					return;
					
				OnColumnChanging(AdmAppSchoolInfoColumn.GsCodeLanguageId, this.entityData.GsCodeLanguageId);
				this.entityData.GsCodeLanguageId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppSchoolInfoColumn.GsCodeLanguageId, this.entityData.GsCodeLanguageId);
				OnPropertyChanged("GsCodeLanguageId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CertfDegree property. 
		///		درجة المؤهل
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"درجة المؤهل"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String CertfDegree
		{
			get
			{
				return this.entityData.CertfDegree; 
			}
			
			set
			{
				if (this.entityData.CertfDegree == value)
					return;
					
				OnColumnChanging(AdmAppSchoolInfoColumn.CertfDegree, this.entityData.CertfDegree);
				this.entityData.CertfDegree = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppSchoolInfoColumn.CertfDegree, this.entityData.CertfDegree);
				OnPropertyChanged("CertfDegree");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Cgpa property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCgpaNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? Cgpa
		{
			get
			{
				return this.entityData.Cgpa; 
			}
			
			set
			{
				if (this.entityData.Cgpa == value)
					return;
					
				OnColumnChanging(AdmAppSchoolInfoColumn.Cgpa, this.entityData.Cgpa);
				this.entityData.Cgpa = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppSchoolInfoColumn.Cgpa, this.entityData.Cgpa);
				OnPropertyChanged("Cgpa");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="AdmApplicant"/>.
		/// </summary>
		/// <value>The source AdmApplicant for AdmApplicantId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmApplicant AdmApplicantIdSource
      	{
            get { return entityData.AdmApplicantIdSource; }
            set { entityData.AdmApplicantIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeQual"/>.
		/// </summary>
		/// <value>The source EdCodeQual for EdCodeQualId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeQual EdCodeQualIdSource
      	{
            get { return entityData.EdCodeQualIdSource; }
            set { entityData.EdCodeQualIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeSchool"/>.
		/// </summary>
		/// <value>The source GsCdeSchool for GsCdeSchoolId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeSchool GsCdeSchoolIdSource
      	{
            get { return entityData.GsCdeSchoolIdSource; }
            set { entityData.GsCdeSchoolIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeLanguage"/>.
		/// </summary>
		/// <value>The source GsCodeLanguage for GsCodeLanguageId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeLanguage GsCodeLanguageIdSource
      	{
            get { return entityData.GsCodeLanguageIdSource; }
            set { entityData.GsCodeLanguageIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryNodeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCountryNode GsCountryNodeIdSource
      	{
            get { return entityData.GsCountryNodeIdSource; }
            set { entityData.GsCountryNodeIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SchoolOtherName", "School Other Name", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SchoolOther", "School Other", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CertTypeOtherName", "Cert Type Other Name", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CertfDegree", "Certf Degree", 20));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ADM_APP_SCHOOL_INFO"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ADM_APP_SCHOOL_INFO_ID", "ADM_APPLICANT_ID", "GS_CDE_SCHOOL_ID", "SCHOOL_OTHER_NAME", "GS_COUNTRY_NODE_ID", "SCHOOL_OTHER_", "CERT_DATE", "ED_CODE_QUAL_ID", "CERT_TYPE_OTHER_NAME", "CERTF_ENG_PRCNT", "CERTF_PERCENT", "GS_CODE_LANGUAGE_ID", "CERTF_DEGREE", "CGPA"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as AdmAppSchoolInfoEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (AdmAppSchoolInfo) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<AdmAppSchoolInfo>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as AdmAppSchoolInfo);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed AdmAppSchoolInfo Entity 
		///</summary>
		protected virtual AdmAppSchoolInfo Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			AdmAppSchoolInfo copy = new AdmAppSchoolInfo();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.AdmAppSchoolInfoId = this.AdmAppSchoolInfoId;
					copy.OriginalAdmAppSchoolInfoId = this.OriginalAdmAppSchoolInfoId;
				copy.AdmApplicantId = this.AdmApplicantId;
				copy.GsCdeSchoolId = this.GsCdeSchoolId;
				copy.SchoolOtherName = this.SchoolOtherName;
				copy.GsCountryNodeId = this.GsCountryNodeId;
				copy.SchoolOther = this.SchoolOther;
				copy.CertDate = this.CertDate;
				copy.EdCodeQualId = this.EdCodeQualId;
				copy.CertTypeOtherName = this.CertTypeOtherName;
				copy.CertfEngPrcnt = this.CertfEngPrcnt;
				copy.CertfPercent = this.CertfPercent;
				copy.GsCodeLanguageId = this.GsCodeLanguageId;
				copy.CertfDegree = this.CertfDegree;
				copy.Cgpa = this.Cgpa;
			
			if (this.AdmApplicantIdSource != null && existingCopies.Contains(this.AdmApplicantIdSource))
				copy.AdmApplicantIdSource = existingCopies[this.AdmApplicantIdSource] as AdmApplicant;
			else
				copy.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource, existingCopies) as AdmApplicant;
			if (this.EdCodeQualIdSource != null && existingCopies.Contains(this.EdCodeQualIdSource))
				copy.EdCodeQualIdSource = existingCopies[this.EdCodeQualIdSource] as EdCodeQual;
			else
				copy.EdCodeQualIdSource = MakeCopyOf(this.EdCodeQualIdSource, existingCopies) as EdCodeQual;
			if (this.GsCdeSchoolIdSource != null && existingCopies.Contains(this.GsCdeSchoolIdSource))
				copy.GsCdeSchoolIdSource = existingCopies[this.GsCdeSchoolIdSource] as GsCdeSchool;
			else
				copy.GsCdeSchoolIdSource = MakeCopyOf(this.GsCdeSchoolIdSource, existingCopies) as GsCdeSchool;
			if (this.GsCodeLanguageIdSource != null && existingCopies.Contains(this.GsCodeLanguageIdSource))
				copy.GsCodeLanguageIdSource = existingCopies[this.GsCodeLanguageIdSource] as GsCodeLanguage;
			else
				copy.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource, existingCopies) as GsCodeLanguage;
			if (this.GsCountryNodeIdSource != null && existingCopies.Contains(this.GsCountryNodeIdSource))
				copy.GsCountryNodeIdSource = existingCopies[this.GsCountryNodeIdSource] as GsCountryNode;
			else
				copy.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource, existingCopies) as GsCountryNode;
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed AdmAppSchoolInfo Entity 
		///</summary>
		public virtual AdmAppSchoolInfo Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed AdmAppSchoolInfo Entity which is a deep copy of the current entity.
		///</summary>
		public virtual AdmAppSchoolInfo DeepCopy()
		{
			return EntityHelper.Clone<AdmAppSchoolInfo>(this as AdmAppSchoolInfo);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as AdmAppSchoolInfoEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new AdmAppSchoolInfoEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as AdmAppSchoolInfoEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(AdmAppSchoolInfoColumn column)
		{
			switch(column)
			{
					case AdmAppSchoolInfoColumn.AdmAppSchoolInfoId:
					return entityData.AdmAppSchoolInfoId != _originalData.AdmAppSchoolInfoId;
					case AdmAppSchoolInfoColumn.AdmApplicantId:
					return entityData.AdmApplicantId != _originalData.AdmApplicantId;
					case AdmAppSchoolInfoColumn.GsCdeSchoolId:
					return entityData.GsCdeSchoolId != _originalData.GsCdeSchoolId;
					case AdmAppSchoolInfoColumn.SchoolOtherName:
					return entityData.SchoolOtherName != _originalData.SchoolOtherName;
					case AdmAppSchoolInfoColumn.GsCountryNodeId:
					return entityData.GsCountryNodeId != _originalData.GsCountryNodeId;
					case AdmAppSchoolInfoColumn.SchoolOther:
					return entityData.SchoolOther != _originalData.SchoolOther;
					case AdmAppSchoolInfoColumn.CertDate:
					return entityData.CertDate != _originalData.CertDate;
					case AdmAppSchoolInfoColumn.EdCodeQualId:
					return entityData.EdCodeQualId != _originalData.EdCodeQualId;
					case AdmAppSchoolInfoColumn.CertTypeOtherName:
					return entityData.CertTypeOtherName != _originalData.CertTypeOtherName;
					case AdmAppSchoolInfoColumn.CertfEngPrcnt:
					return entityData.CertfEngPrcnt != _originalData.CertfEngPrcnt;
					case AdmAppSchoolInfoColumn.CertfPercent:
					return entityData.CertfPercent != _originalData.CertfPercent;
					case AdmAppSchoolInfoColumn.GsCodeLanguageId:
					return entityData.GsCodeLanguageId != _originalData.GsCodeLanguageId;
					case AdmAppSchoolInfoColumn.CertfDegree:
					return entityData.CertfDegree != _originalData.CertfDegree;
					case AdmAppSchoolInfoColumn.Cgpa:
					return entityData.Cgpa != _originalData.Cgpa;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< AdmAppSchoolInfoColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.AdmAppSchoolInfoId != _originalData.AdmAppSchoolInfoId;
			result = result || entityData.AdmApplicantId != _originalData.AdmApplicantId;
			result = result || entityData.GsCdeSchoolId != _originalData.GsCdeSchoolId;
			result = result || entityData.SchoolOtherName != _originalData.SchoolOtherName;
			result = result || entityData.GsCountryNodeId != _originalData.GsCountryNodeId;
			result = result || entityData.SchoolOther != _originalData.SchoolOther;
			result = result || entityData.CertDate != _originalData.CertDate;
			result = result || entityData.EdCodeQualId != _originalData.EdCodeQualId;
			result = result || entityData.CertTypeOtherName != _originalData.CertTypeOtherName;
			result = result || entityData.CertfEngPrcnt != _originalData.CertfEngPrcnt;
			result = result || entityData.CertfPercent != _originalData.CertfPercent;
			result = result || entityData.GsCodeLanguageId != _originalData.GsCodeLanguageId;
			result = result || entityData.CertfDegree != _originalData.CertfDegree;
			result = result || entityData.Cgpa != _originalData.Cgpa;
			return result;
		}	
		
		///<summary>
		///  Returns a AdmAppSchoolInfo Entity with the original data.
		///</summary>
		public AdmAppSchoolInfo GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateAdmAppSchoolInfo(
				_originalData.AdmAppSchoolInfoId,
				_originalData.AdmApplicantId,
				_originalData.GsCdeSchoolId,
				_originalData.SchoolOtherName,
				_originalData.GsCountryNodeId,
				_originalData.SchoolOther,
				_originalData.CertDate,
				_originalData.EdCodeQualId,
				_originalData.CertTypeOtherName,
				_originalData.CertfEngPrcnt,
				_originalData.CertfPercent,
				_originalData.GsCodeLanguageId,
				_originalData.CertfDegree,
				_originalData.Cgpa
				);
				
			return (AdmAppSchoolInfo)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="AdmAppSchoolInfoBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is AdmAppSchoolInfoBase)
				return ValueEquals(this, (AdmAppSchoolInfoBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="AdmAppSchoolInfoBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.AdmAppSchoolInfoId.GetHashCode() ^ 
					this.AdmApplicantId.GetHashCode() ^ 
					((this.GsCdeSchoolId == null) ? string.Empty : this.GsCdeSchoolId.ToString()).GetHashCode() ^ 
					((this.SchoolOtherName == null) ? string.Empty : this.SchoolOtherName.ToString()).GetHashCode() ^ 
					((this.GsCountryNodeId == null) ? string.Empty : this.GsCountryNodeId.ToString()).GetHashCode() ^ 
					((this.SchoolOther == null) ? string.Empty : this.SchoolOther.ToString()).GetHashCode() ^ 
					((this.CertDate == null) ? string.Empty : this.CertDate.ToString()).GetHashCode() ^ 
					((this.EdCodeQualId == null) ? string.Empty : this.EdCodeQualId.ToString()).GetHashCode() ^ 
					((this.CertTypeOtherName == null) ? string.Empty : this.CertTypeOtherName.ToString()).GetHashCode() ^ 
					((this.CertfEngPrcnt == null) ? string.Empty : this.CertfEngPrcnt.ToString()).GetHashCode() ^ 
					((this.CertfPercent == null) ? string.Empty : this.CertfPercent.ToString()).GetHashCode() ^ 
					((this.GsCodeLanguageId == null) ? string.Empty : this.GsCodeLanguageId.ToString()).GetHashCode() ^ 
					((this.CertfDegree == null) ? string.Empty : this.CertfDegree.ToString()).GetHashCode() ^ 
					((this.Cgpa == null) ? string.Empty : this.Cgpa.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="AdmAppSchoolInfoBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(AdmAppSchoolInfoBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="AdmAppSchoolInfoBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="AdmAppSchoolInfoBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="AdmAppSchoolInfoBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(AdmAppSchoolInfoBase Object1, AdmAppSchoolInfoBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.AdmAppSchoolInfoId != Object2.AdmAppSchoolInfoId)
				equal = false;
			if (Object1.AdmApplicantId != Object2.AdmApplicantId)
				equal = false;
			if ( Object1.GsCdeSchoolId != null && Object2.GsCdeSchoolId != null )
			{
				if (Object1.GsCdeSchoolId != Object2.GsCdeSchoolId)
					equal = false;
			}
			else if (Object1.GsCdeSchoolId == null ^ Object2.GsCdeSchoolId == null )
			{
				equal = false;
			}
			if ( Object1.SchoolOtherName != null && Object2.SchoolOtherName != null )
			{
				if (Object1.SchoolOtherName != Object2.SchoolOtherName)
					equal = false;
			}
			else if (Object1.SchoolOtherName == null ^ Object2.SchoolOtherName == null )
			{
				equal = false;
			}
			if ( Object1.GsCountryNodeId != null && Object2.GsCountryNodeId != null )
			{
				if (Object1.GsCountryNodeId != Object2.GsCountryNodeId)
					equal = false;
			}
			else if (Object1.GsCountryNodeId == null ^ Object2.GsCountryNodeId == null )
			{
				equal = false;
			}
			if ( Object1.SchoolOther != null && Object2.SchoolOther != null )
			{
				if (Object1.SchoolOther != Object2.SchoolOther)
					equal = false;
			}
			else if (Object1.SchoolOther == null ^ Object2.SchoolOther == null )
			{
				equal = false;
			}
			if ( Object1.CertDate != null && Object2.CertDate != null )
			{
				if (Object1.CertDate != Object2.CertDate)
					equal = false;
			}
			else if (Object1.CertDate == null ^ Object2.CertDate == null )
			{
				equal = false;
			}
			if ( Object1.EdCodeQualId != null && Object2.EdCodeQualId != null )
			{
				if (Object1.EdCodeQualId != Object2.EdCodeQualId)
					equal = false;
			}
			else if (Object1.EdCodeQualId == null ^ Object2.EdCodeQualId == null )
			{
				equal = false;
			}
			if ( Object1.CertTypeOtherName != null && Object2.CertTypeOtherName != null )
			{
				if (Object1.CertTypeOtherName != Object2.CertTypeOtherName)
					equal = false;
			}
			else if (Object1.CertTypeOtherName == null ^ Object2.CertTypeOtherName == null )
			{
				equal = false;
			}
			if ( Object1.CertfEngPrcnt != null && Object2.CertfEngPrcnt != null )
			{
				if (Object1.CertfEngPrcnt != Object2.CertfEngPrcnt)
					equal = false;
			}
			else if (Object1.CertfEngPrcnt == null ^ Object2.CertfEngPrcnt == null )
			{
				equal = false;
			}
			if ( Object1.CertfPercent != null && Object2.CertfPercent != null )
			{
				if (Object1.CertfPercent != Object2.CertfPercent)
					equal = false;
			}
			else if (Object1.CertfPercent == null ^ Object2.CertfPercent == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeLanguageId != null && Object2.GsCodeLanguageId != null )
			{
				if (Object1.GsCodeLanguageId != Object2.GsCodeLanguageId)
					equal = false;
			}
			else if (Object1.GsCodeLanguageId == null ^ Object2.GsCodeLanguageId == null )
			{
				equal = false;
			}
			if ( Object1.CertfDegree != null && Object2.CertfDegree != null )
			{
				if (Object1.CertfDegree != Object2.CertfDegree)
					equal = false;
			}
			else if (Object1.CertfDegree == null ^ Object2.CertfDegree == null )
			{
				equal = false;
			}
			if ( Object1.Cgpa != null && Object2.Cgpa != null )
			{
				if (Object1.Cgpa != Object2.Cgpa)
					equal = false;
			}
			else if (Object1.Cgpa == null ^ Object2.Cgpa == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((AdmAppSchoolInfoBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static AdmAppSchoolInfoComparer GetComparer()
        {
            return new AdmAppSchoolInfoComparer();
        }
        */

        // Comparer delegates back to AdmAppSchoolInfo
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(AdmAppSchoolInfo rhs, AdmAppSchoolInfoColumn which)
        {
            switch (which)
            {
            	
            	
            	case AdmAppSchoolInfoColumn.AdmAppSchoolInfoId:
            		return this.AdmAppSchoolInfoId.CompareTo(rhs.AdmAppSchoolInfoId);
            		
            		                 
            	
            	
            	case AdmAppSchoolInfoColumn.AdmApplicantId:
            		return this.AdmApplicantId.CompareTo(rhs.AdmApplicantId);
            		
            		                 
            	
            	
            	case AdmAppSchoolInfoColumn.GsCdeSchoolId:
            		return this.GsCdeSchoolId.Value.CompareTo(rhs.GsCdeSchoolId.Value);
            		
            		                 
            	
            	
            	case AdmAppSchoolInfoColumn.SchoolOtherName:
            		return this.SchoolOtherName.CompareTo(rhs.SchoolOtherName);
            		
            		                 
            	
            	
            	case AdmAppSchoolInfoColumn.GsCountryNodeId:
            		return this.GsCountryNodeId.Value.CompareTo(rhs.GsCountryNodeId.Value);
            		
            		                 
            	
            	
            	case AdmAppSchoolInfoColumn.SchoolOther:
            		return this.SchoolOther.CompareTo(rhs.SchoolOther);
            		
            		                 
            	
            	
            	case AdmAppSchoolInfoColumn.CertDate:
            		return this.CertDate.Value.CompareTo(rhs.CertDate.Value);
            		
            		                 
            	
            	
            	case AdmAppSchoolInfoColumn.EdCodeQualId:
            		return this.EdCodeQualId.Value.CompareTo(rhs.EdCodeQualId.Value);
            		
            		                 
            	
            	
            	case AdmAppSchoolInfoColumn.CertTypeOtherName:
            		return this.CertTypeOtherName.CompareTo(rhs.CertTypeOtherName);
            		
            		                 
            	
            	
            	case AdmAppSchoolInfoColumn.CertfEngPrcnt:
            		return this.CertfEngPrcnt.Value.CompareTo(rhs.CertfEngPrcnt.Value);
            		
            		                 
            	
            	
            	case AdmAppSchoolInfoColumn.CertfPercent:
            		return this.CertfPercent.Value.CompareTo(rhs.CertfPercent.Value);
            		
            		                 
            	
            	
            	case AdmAppSchoolInfoColumn.GsCodeLanguageId:
            		return this.GsCodeLanguageId.Value.CompareTo(rhs.GsCodeLanguageId.Value);
            		
            		                 
            	
            	
            	case AdmAppSchoolInfoColumn.CertfDegree:
            		return this.CertfDegree.CompareTo(rhs.CertfDegree);
            		
            		                 
            	
            	
            	case AdmAppSchoolInfoColumn.Cgpa:
            		return this.Cgpa.Value.CompareTo(rhs.Cgpa.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<AdmAppSchoolInfoKey> Members
		
		// member variable for the EntityId property
		private AdmAppSchoolInfoKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual AdmAppSchoolInfoKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new AdmAppSchoolInfoKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("AdmAppSchoolInfo")
					.Append("|").Append( this.AdmAppSchoolInfoId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{15}{14}- AdmAppSchoolInfoId: {0}{14}- AdmApplicantId: {1}{14}- GsCdeSchoolId: {2}{14}- SchoolOtherName: {3}{14}- GsCountryNodeId: {4}{14}- SchoolOther: {5}{14}- CertDate: {6}{14}- EdCodeQualId: {7}{14}- CertTypeOtherName: {8}{14}- CertfEngPrcnt: {9}{14}- CertfPercent: {10}{14}- GsCodeLanguageId: {11}{14}- CertfDegree: {12}{14}- Cgpa: {13}{14}{16}", 
				this.AdmAppSchoolInfoId,
				this.AdmApplicantId,
				(this.GsCdeSchoolId == null) ? string.Empty : this.GsCdeSchoolId.ToString(),
				(this.SchoolOtherName == null) ? string.Empty : this.SchoolOtherName.ToString(),
				(this.GsCountryNodeId == null) ? string.Empty : this.GsCountryNodeId.ToString(),
				(this.SchoolOther == null) ? string.Empty : this.SchoolOther.ToString(),
				(this.CertDate == null) ? string.Empty : this.CertDate.ToString(),
				(this.EdCodeQualId == null) ? string.Empty : this.EdCodeQualId.ToString(),
				(this.CertTypeOtherName == null) ? string.Empty : this.CertTypeOtherName.ToString(),
				(this.CertfEngPrcnt == null) ? string.Empty : this.CertfEngPrcnt.ToString(),
				(this.CertfPercent == null) ? string.Empty : this.CertfPercent.ToString(),
				(this.GsCodeLanguageId == null) ? string.Empty : this.GsCodeLanguageId.ToString(),
				(this.CertfDegree == null) ? string.Empty : this.CertfDegree.ToString(),
				(this.Cgpa == null) ? string.Empty : this.Cgpa.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ADM_APP_SCHOOL_INFO' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class AdmAppSchoolInfoEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ADM_APP_SCHOOL_INFO_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ADM_APP_SCHOOL_INFO"</remarks>
		public System.Decimal AdmAppSchoolInfoId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalAdmAppSchoolInfoId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// ADM_APPLICANT_ID : مسلسل المتقدم
		/// </summary>
		public System.Decimal		  AdmApplicantId = 0.0m;
		
		/// <summary>
		/// GS_CDE_SCHOOL_ID : مسلسل مدرسة الثانوية
		/// </summary>
		public System.Decimal?		  GsCdeSchoolId = null;
		
		/// <summary>
		/// SCHOOL_OTHER_NAME : اسم المدرسة فى حالة اختار الطالب مدرسة غير موجودة
		/// </summary>
		public System.String		  SchoolOtherName = null;
		
		/// <summary>
		/// GS_COUNTRY_NODE_ID : بلد المدرسة فى حالة اختار الطالب مدرسة غير موجودة
		/// </summary>
		public System.Decimal?		  GsCountryNodeId = null;
		
		/// <summary>
		/// SCHOOL_OTHER_ : 
		/// </summary>
		public System.String		  SchoolOther = null;
		
		/// <summary>
		/// CERT_DATE : 
		/// </summary>
		public System.DateTime?		  CertDate = null;
		
		/// <summary>
		/// ED_CODE_QUAL_ID : 
		/// </summary>
		public System.Decimal?		  EdCodeQualId = null;
		
		/// <summary>
		/// CERT_TYPE_OTHER_NAME : 
		/// </summary>
		public System.String		  CertTypeOtherName = null;
		
		/// <summary>
		/// CERTF_ENG_PRCNT : معدل اللغة الانجليزية فى الثانوية العامة
		/// </summary>
		public System.Decimal?		  CertfEngPrcnt = null;
		
		/// <summary>
		/// CERTF_PERCENT : نسبة المؤهل
		/// </summary>
		public System.Decimal?		  CertfPercent = null;
		
		/// <summary>
		/// GS_CODE_LANGUAGE_ID : لغة الدراسة الرئيسية
		/// </summary>
		public System.Decimal?		  GsCodeLanguageId = null;
		
		/// <summary>
		/// CERTF_DEGREE : درجة المؤهل
		/// </summary>
		public System.String		  CertfDegree = null;
		
		/// <summary>
		/// CGPA : 
		/// </summary>
		public System.Decimal?		  Cgpa = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private AdmApplicant _admApplicantIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmApplicant"/>.
		/// </summary>
		/// <value>The source AdmApplicant for AdmApplicantId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmApplicant AdmApplicantIdSource
      	{
            get { return this._admApplicantIdSource; }
            set { this._admApplicantIdSource = value; }
      	}
		private EdCodeQual _edCodeQualIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeQual"/>.
		/// </summary>
		/// <value>The source EdCodeQual for EdCodeQualId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeQual EdCodeQualIdSource
      	{
            get { return this._edCodeQualIdSource; }
            set { this._edCodeQualIdSource = value; }
      	}
		private GsCdeSchool _gsCdeSchoolIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeSchool"/>.
		/// </summary>
		/// <value>The source GsCdeSchool for GsCdeSchoolId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeSchool GsCdeSchoolIdSource
      	{
            get { return this._gsCdeSchoolIdSource; }
            set { this._gsCdeSchoolIdSource = value; }
      	}
		private GsCodeLanguage _gsCodeLanguageIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeLanguage"/>.
		/// </summary>
		/// <value>The source GsCodeLanguage for GsCodeLanguageId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeLanguage GsCodeLanguageIdSource
      	{
            get { return this._gsCodeLanguageIdSource; }
            set { this._gsCodeLanguageIdSource = value; }
      	}
		private GsCountryNode _gsCountryNodeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryNodeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCountryNode GsCountryNodeIdSource
      	{
            get { return this._gsCountryNodeIdSource; }
            set { this._gsCountryNodeIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			AdmAppSchoolInfoEntityData _tmp = new AdmAppSchoolInfoEntityData();
						
			_tmp.AdmAppSchoolInfoId = this.AdmAppSchoolInfoId;
			_tmp.OriginalAdmAppSchoolInfoId = this.OriginalAdmAppSchoolInfoId;
			
			_tmp.AdmApplicantId = this.AdmApplicantId;
			_tmp.GsCdeSchoolId = this.GsCdeSchoolId;
			_tmp.SchoolOtherName = this.SchoolOtherName;
			_tmp.GsCountryNodeId = this.GsCountryNodeId;
			_tmp.SchoolOther = this.SchoolOther;
			_tmp.CertDate = this.CertDate;
			_tmp.EdCodeQualId = this.EdCodeQualId;
			_tmp.CertTypeOtherName = this.CertTypeOtherName;
			_tmp.CertfEngPrcnt = this.CertfEngPrcnt;
			_tmp.CertfPercent = this.CertfPercent;
			_tmp.GsCodeLanguageId = this.GsCodeLanguageId;
			_tmp.CertfDegree = this.CertfDegree;
			_tmp.Cgpa = this.Cgpa;
			
			#region Source Parent Composite Entities
			if (this.AdmApplicantIdSource != null)
				_tmp.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource) as AdmApplicant;
			if (this.EdCodeQualIdSource != null)
				_tmp.EdCodeQualIdSource = MakeCopyOf(this.EdCodeQualIdSource) as EdCodeQual;
			if (this.GsCdeSchoolIdSource != null)
				_tmp.GsCdeSchoolIdSource = MakeCopyOf(this.GsCdeSchoolIdSource) as GsCdeSchool;
			if (this.GsCodeLanguageIdSource != null)
				_tmp.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource) as GsCodeLanguage;
			if (this.GsCountryNodeIdSource != null)
				_tmp.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource) as GsCountryNode;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			AdmAppSchoolInfoEntityData _tmp = new AdmAppSchoolInfoEntityData();
						
			_tmp.AdmAppSchoolInfoId = this.AdmAppSchoolInfoId;
			_tmp.OriginalAdmAppSchoolInfoId = this.OriginalAdmAppSchoolInfoId;
			
			_tmp.AdmApplicantId = this.AdmApplicantId;
			_tmp.GsCdeSchoolId = this.GsCdeSchoolId;
			_tmp.SchoolOtherName = this.SchoolOtherName;
			_tmp.GsCountryNodeId = this.GsCountryNodeId;
			_tmp.SchoolOther = this.SchoolOther;
			_tmp.CertDate = this.CertDate;
			_tmp.EdCodeQualId = this.EdCodeQualId;
			_tmp.CertTypeOtherName = this.CertTypeOtherName;
			_tmp.CertfEngPrcnt = this.CertfEngPrcnt;
			_tmp.CertfPercent = this.CertfPercent;
			_tmp.GsCodeLanguageId = this.GsCodeLanguageId;
			_tmp.CertfDegree = this.CertfDegree;
			_tmp.Cgpa = this.Cgpa;
			
			#region Source Parent Composite Entities
			if (this.AdmApplicantIdSource != null && existingCopies.Contains(this.AdmApplicantIdSource))
				_tmp.AdmApplicantIdSource = existingCopies[this.AdmApplicantIdSource] as AdmApplicant;
			else
				_tmp.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource, existingCopies) as AdmApplicant;
			if (this.EdCodeQualIdSource != null && existingCopies.Contains(this.EdCodeQualIdSource))
				_tmp.EdCodeQualIdSource = existingCopies[this.EdCodeQualIdSource] as EdCodeQual;
			else
				_tmp.EdCodeQualIdSource = MakeCopyOf(this.EdCodeQualIdSource, existingCopies) as EdCodeQual;
			if (this.GsCdeSchoolIdSource != null && existingCopies.Contains(this.GsCdeSchoolIdSource))
				_tmp.GsCdeSchoolIdSource = existingCopies[this.GsCdeSchoolIdSource] as GsCdeSchool;
			else
				_tmp.GsCdeSchoolIdSource = MakeCopyOf(this.GsCdeSchoolIdSource, existingCopies) as GsCdeSchool;
			if (this.GsCodeLanguageIdSource != null && existingCopies.Contains(this.GsCodeLanguageIdSource))
				_tmp.GsCodeLanguageIdSource = existingCopies[this.GsCodeLanguageIdSource] as GsCodeLanguage;
			else
				_tmp.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource, existingCopies) as GsCodeLanguage;
			if (this.GsCountryNodeIdSource != null && existingCopies.Contains(this.GsCountryNodeIdSource))
				_tmp.GsCountryNodeIdSource = existingCopies[this.GsCountryNodeIdSource] as GsCountryNode;
			else
				_tmp.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource, existingCopies) as GsCountryNode;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmAppSchoolInfoColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(AdmAppSchoolInfoColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmAppSchoolInfoColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(AdmAppSchoolInfoColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmAppSchoolInfoColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(AdmAppSchoolInfoColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				AdmAppSchoolInfoEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new AdmAppSchoolInfoEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmAppSchoolInfoColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(AdmAppSchoolInfoColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				AdmAppSchoolInfoEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new AdmAppSchoolInfoEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region AdmAppSchoolInfoEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="AdmAppSchoolInfo"/> object.
	/// </remarks>
	public class AdmAppSchoolInfoEventArgs : System.EventArgs
	{
		private AdmAppSchoolInfoColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the AdmAppSchoolInfoEventArgs class.
		///</summary>
		public AdmAppSchoolInfoEventArgs(AdmAppSchoolInfoColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the AdmAppSchoolInfoEventArgs class.
		///</summary>
		public AdmAppSchoolInfoEventArgs(AdmAppSchoolInfoColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The AdmAppSchoolInfoColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="AdmAppSchoolInfoColumn" />
		public AdmAppSchoolInfoColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all AdmAppSchoolInfo related events.
	///</summary>
	public delegate void AdmAppSchoolInfoEventHandler(object sender, AdmAppSchoolInfoEventArgs e);
	
	#region AdmAppSchoolInfoComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class AdmAppSchoolInfoComparer : System.Collections.Generic.IComparer<AdmAppSchoolInfo>
	{
		AdmAppSchoolInfoColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:AdmAppSchoolInfoComparer"/> class.
        /// </summary>
		public AdmAppSchoolInfoComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:AdmAppSchoolInfoComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public AdmAppSchoolInfoComparer(AdmAppSchoolInfoColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="AdmAppSchoolInfo"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="AdmAppSchoolInfo"/> to compare.</param>
        /// <param name="b">The second <c>AdmAppSchoolInfo</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(AdmAppSchoolInfo a, AdmAppSchoolInfo b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(AdmAppSchoolInfo entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(AdmAppSchoolInfo a, AdmAppSchoolInfo b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public AdmAppSchoolInfoColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region AdmAppSchoolInfoKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="AdmAppSchoolInfo"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class AdmAppSchoolInfoKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the AdmAppSchoolInfoKey class.
		/// </summary>
		public AdmAppSchoolInfoKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the AdmAppSchoolInfoKey class.
		/// </summary>
		public AdmAppSchoolInfoKey(AdmAppSchoolInfoBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.AdmAppSchoolInfoId = entity.AdmAppSchoolInfoId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the AdmAppSchoolInfoKey class.
		/// </summary>
		public AdmAppSchoolInfoKey(System.Decimal _admAppSchoolInfoId)
		{
			#region Init Properties

			this.AdmAppSchoolInfoId = _admAppSchoolInfoId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private AdmAppSchoolInfoBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public AdmAppSchoolInfoBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the AdmAppSchoolInfoId property
		private System.Decimal _admAppSchoolInfoId;
		
		/// <summary>
		/// Gets or sets the AdmAppSchoolInfoId property.
		/// </summary>
		public System.Decimal AdmAppSchoolInfoId
		{
			get { return _admAppSchoolInfoId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.AdmAppSchoolInfoId = value;
				
				_admAppSchoolInfoId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				AdmAppSchoolInfoId = ( values["AdmAppSchoolInfoId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["AdmAppSchoolInfoId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("AdmAppSchoolInfoId", AdmAppSchoolInfoId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("AdmAppSchoolInfoId: {0}{1}",
								AdmAppSchoolInfoId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region AdmAppSchoolInfoColumn Enum
	
	/// <summary>
	/// Enumerate the AdmAppSchoolInfo columns.
	/// </summary>
	[Serializable]
	public enum AdmAppSchoolInfoColumn : int
	{
		/// <summary>
		/// AdmAppSchoolInfoId : 
		/// </summary>
		[EnumTextValue("ADM_APP_SCHOOL_INFO_ID")]
		[ColumnEnum("ADM_APP_SCHOOL_INFO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		AdmAppSchoolInfoId = 1,
		/// <summary>
		/// AdmApplicantId : مسلسل المتقدم
		/// </summary>
		[EnumTextValue("ADM_APPLICANT_ID")]
		[ColumnEnum("ADM_APPLICANT_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		AdmApplicantId = 2,
		/// <summary>
		/// GsCdeSchoolId : مسلسل مدرسة الثانوية
		/// </summary>
		[EnumTextValue("GS_CDE_SCHOOL_ID")]
		[ColumnEnum("GS_CDE_SCHOOL_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCdeSchoolId = 3,
		/// <summary>
		/// SchoolOtherName : اسم المدرسة فى حالة اختار الطالب مدرسة غير موجودة
		/// </summary>
		[EnumTextValue("SCHOOL_OTHER_NAME")]
		[ColumnEnum("SCHOOL_OTHER_NAME", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		SchoolOtherName = 4,
		/// <summary>
		/// GsCountryNodeId : بلد المدرسة فى حالة اختار الطالب مدرسة غير موجودة
		/// </summary>
		[EnumTextValue("GS_COUNTRY_NODE_ID")]
		[ColumnEnum("GS_COUNTRY_NODE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCountryNodeId = 5,
		/// <summary>
		/// SchoolOther : 
		/// </summary>
		[EnumTextValue("SCHOOL_OTHER_")]
		[ColumnEnum("SCHOOL_OTHER_", typeof(System.String), System.Data.DbType.StringFixedLength, false, false, true, 10)]
		SchoolOther = 6,
		/// <summary>
		/// CertDate : 
		/// </summary>
		[EnumTextValue("CERT_DATE")]
		[ColumnEnum("CERT_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		CertDate = 7,
		/// <summary>
		/// EdCodeQualId : 
		/// </summary>
		[EnumTextValue("ED_CODE_QUAL_ID")]
		[ColumnEnum("ED_CODE_QUAL_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeQualId = 8,
		/// <summary>
		/// CertTypeOtherName : 
		/// </summary>
		[EnumTextValue("CERT_TYPE_OTHER_NAME")]
		[ColumnEnum("CERT_TYPE_OTHER_NAME", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		CertTypeOtherName = 9,
		/// <summary>
		/// CertfEngPrcnt : معدل اللغة الانجليزية فى الثانوية العامة
		/// </summary>
		[EnumTextValue("CERTF_ENG_PRCNT")]
		[ColumnEnum("CERTF_ENG_PRCNT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CertfEngPrcnt = 10,
		/// <summary>
		/// CertfPercent : نسبة المؤهل
		/// </summary>
		[EnumTextValue("CERTF_PERCENT")]
		[ColumnEnum("CERTF_PERCENT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CertfPercent = 11,
		/// <summary>
		/// GsCodeLanguageId : لغة الدراسة الرئيسية
		/// </summary>
		[EnumTextValue("GS_CODE_LANGUAGE_ID")]
		[ColumnEnum("GS_CODE_LANGUAGE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeLanguageId = 12,
		/// <summary>
		/// CertfDegree : درجة المؤهل
		/// </summary>
		[EnumTextValue("CERTF_DEGREE")]
		[ColumnEnum("CERTF_DEGREE", typeof(System.String), System.Data.DbType.String, false, false, true, 20)]
		CertfDegree = 13,
		/// <summary>
		/// Cgpa : 
		/// </summary>
		[EnumTextValue("CGPA")]
		[ColumnEnum("CGPA", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		Cgpa = 14
	}//End enum

	#endregion AdmAppSchoolInfoColumn Enum

} // end namespace
