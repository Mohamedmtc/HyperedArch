
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file SeUser.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'SE_USER' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class SeUserBase : EntityBase, ISeUser, IEntityId<SeUserKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private SeUserEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private SeUserEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private SeUserEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<SeUser> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event SeUserEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event SeUserEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="SeUserBase"/> instance.
		///</summary>
		public SeUserBase()
		{
			this.entityData = new SeUserEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="SeUserBase"/> instance.
		///</summary>
		///<param name="_seUserId"></param>
		///<param name="_seCodeUserJobId">XXX</param>
		///<param name="_seCodeUserPlaceId">XXX</param>
		///<param name="_userNameEn"></param>
		///<param name="_userNameAr"></param>
		///<param name="_pwdExpireDate"></param>
		///<param name="_securityQuestion"></param>
		///<param name="_sequrityAns"></param>
		///<param name="_creatorUserId"></param>
		///<param name="_creationDate"></param>
		///<param name="_lastLoginDate"></param>
		///<param name="_status">1:active - 0:not active</param>
		///<param name="_failedAttemptsNum"></param>
		///<param name="_validateMachine"></param>
		///<param name="_ip"></param>
		///<param name="_mac"></param>
		///<param name="_isLogin"></param>
		///<param name="_email"></param>
		///<param name="_adUserName"></param>
		///<param name="_adUserGuid"></param>
		///<param name="_seCodeUserTypeId">Default User Type</param>
		///<param name="_userTableId">Default Related Table  ID</param>
		///<param name="_erpOrgTreeId">XXnot usedXX</param>
		///<param name="_lastDate"></param>
		///<param name="_seUserLstId"></param>
		///<param name="_forgetPasswordCode"></param>
		///<param name="_forgetPasswordCodeValidUntil"></param>
		///<param name="_enumId">integration user 
		/// 		/// 1: Course_Reg, Course_reg_Assess</param>
		///<param name="_userMobile"></param>
		public SeUserBase(System.Decimal _seUserId, System.Decimal? _seCodeUserJobId, System.Decimal? _seCodeUserPlaceId, 
			System.String _userNameEn, System.String _userNameAr, System.DateTime? _pwdExpireDate, System.String _securityQuestion, 
			System.String _sequrityAns, System.Decimal? _creatorUserId, System.DateTime _creationDate, System.DateTime? _lastLoginDate, 
			System.Decimal _status, System.Decimal _failedAttemptsNum, System.Decimal? _validateMachine, System.String _ip, 
			System.String _mac, System.Decimal? _isLogin, System.String _email, System.String _adUserName, 
			System.String _adUserGuid, System.Decimal? _seCodeUserTypeId, System.Decimal? _userTableId, System.Decimal? _erpOrgTreeId, 
			System.DateTime? _lastDate, System.Decimal? _seUserLstId, System.String _forgetPasswordCode, System.DateTime? _forgetPasswordCodeValidUntil, 
			System.Int32? _enumId, System.String _userMobile)
		{
			this.entityData = new SeUserEntityData();
			this.backupData = null;

			this.SeUserId = _seUserId;
			this.SeCodeUserJobId = _seCodeUserJobId;
			this.SeCodeUserPlaceId = _seCodeUserPlaceId;
			this.UserNameEn = _userNameEn;
			this.UserNameAr = _userNameAr;
			this.PwdExpireDate = _pwdExpireDate;
			this.SecurityQuestion = _securityQuestion;
			this.SequrityAns = _sequrityAns;
			this.CreatorUserId = _creatorUserId;
			this.CreationDate = _creationDate;
			this.LastLoginDate = _lastLoginDate;
			this.Status = _status;
			this.FailedAttemptsNum = _failedAttemptsNum;
			this.ValidateMachine = _validateMachine;
			this.Ip = _ip;
			this.Mac = _mac;
			this.IsLogin = _isLogin;
			this.Email = _email;
			this.AdUserName = _adUserName;
			this.AdUserGuid = _adUserGuid;
			this.SeCodeUserTypeId = _seCodeUserTypeId;
			this.UserTableId = _userTableId;
			this.ErpOrgTreeId = _erpOrgTreeId;
			this.LastDate = _lastDate;
			this.SeUserLstId = _seUserLstId;
			this.ForgetPasswordCode = _forgetPasswordCode;
			this.ForgetPasswordCodeValidUntil = _forgetPasswordCodeValidUntil;
			this.EnumId = _enumId;
			this.UserMobile = _userMobile;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="SeUser"/> instance.
		///</summary>
		///<param name="_seUserId"></param>
		///<param name="_seCodeUserJobId">XXX</param>
		///<param name="_seCodeUserPlaceId">XXX</param>
		///<param name="_userNameEn"></param>
		///<param name="_userNameAr"></param>
		///<param name="_pwdExpireDate"></param>
		///<param name="_securityQuestion"></param>
		///<param name="_sequrityAns"></param>
		///<param name="_creatorUserId"></param>
		///<param name="_creationDate"></param>
		///<param name="_lastLoginDate"></param>
		///<param name="_status">1:active - 0:not active</param>
		///<param name="_failedAttemptsNum"></param>
		///<param name="_validateMachine"></param>
		///<param name="_ip"></param>
		///<param name="_mac"></param>
		///<param name="_isLogin"></param>
		///<param name="_email"></param>
		///<param name="_adUserName"></param>
		///<param name="_adUserGuid"></param>
		///<param name="_seCodeUserTypeId">Default User Type</param>
		///<param name="_userTableId">Default Related Table  ID</param>
		///<param name="_erpOrgTreeId">XXnot usedXX</param>
		///<param name="_lastDate"></param>
		///<param name="_seUserLstId"></param>
		///<param name="_forgetPasswordCode"></param>
		///<param name="_forgetPasswordCodeValidUntil"></param>
		///<param name="_enumId">integration user 
		/// 		/// 1: Course_Reg, Course_reg_Assess</param>
		///<param name="_userMobile"></param>
		public static SeUser CreateSeUser(System.Decimal _seUserId, System.Decimal? _seCodeUserJobId, System.Decimal? _seCodeUserPlaceId, 
			System.String _userNameEn, System.String _userNameAr, System.DateTime? _pwdExpireDate, System.String _securityQuestion, 
			System.String _sequrityAns, System.Decimal? _creatorUserId, System.DateTime _creationDate, System.DateTime? _lastLoginDate, 
			System.Decimal _status, System.Decimal _failedAttemptsNum, System.Decimal? _validateMachine, System.String _ip, 
			System.String _mac, System.Decimal? _isLogin, System.String _email, System.String _adUserName, 
			System.String _adUserGuid, System.Decimal? _seCodeUserTypeId, System.Decimal? _userTableId, System.Decimal? _erpOrgTreeId, 
			System.DateTime? _lastDate, System.Decimal? _seUserLstId, System.String _forgetPasswordCode, System.DateTime? _forgetPasswordCodeValidUntil, 
			System.Int32? _enumId, System.String _userMobile)
		{
			SeUser newSeUser = new SeUser();
			newSeUser.SeUserId = _seUserId;
			newSeUser.SeCodeUserJobId = _seCodeUserJobId;
			newSeUser.SeCodeUserPlaceId = _seCodeUserPlaceId;
			newSeUser.UserNameEn = _userNameEn;
			newSeUser.UserNameAr = _userNameAr;
			newSeUser.PwdExpireDate = _pwdExpireDate;
			newSeUser.SecurityQuestion = _securityQuestion;
			newSeUser.SequrityAns = _sequrityAns;
			newSeUser.CreatorUserId = _creatorUserId;
			newSeUser.CreationDate = _creationDate;
			newSeUser.LastLoginDate = _lastLoginDate;
			newSeUser.Status = _status;
			newSeUser.FailedAttemptsNum = _failedAttemptsNum;
			newSeUser.ValidateMachine = _validateMachine;
			newSeUser.Ip = _ip;
			newSeUser.Mac = _mac;
			newSeUser.IsLogin = _isLogin;
			newSeUser.Email = _email;
			newSeUser.AdUserName = _adUserName;
			newSeUser.AdUserGuid = _adUserGuid;
			newSeUser.SeCodeUserTypeId = _seCodeUserTypeId;
			newSeUser.UserTableId = _userTableId;
			newSeUser.ErpOrgTreeId = _erpOrgTreeId;
			newSeUser.LastDate = _lastDate;
			newSeUser.SeUserLstId = _seUserLstId;
			newSeUser.ForgetPasswordCode = _forgetPasswordCode;
			newSeUser.ForgetPasswordCodeValidUntil = _forgetPasswordCodeValidUntil;
			newSeUser.EnumId = _enumId;
			newSeUser.UserMobile = _userMobile;
			return newSeUser;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(SeUserColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				this.EntityId.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the SE_USER_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the SE_USER_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalSeUserId
		{
			get { return this.entityData.OriginalSeUserId; }
			set { this.entityData.OriginalSeUserId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the SeCodeUserJobId property. 
		///		XXX
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeCodeUserJobIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXX"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeCodeUserJobId
		{
			get
			{
				return this.entityData.SeCodeUserJobId; 
			}
			
			set
			{
				if (this.entityData.SeCodeUserJobId == value)
					return;
					
				OnColumnChanging(SeUserColumn.SeCodeUserJobId, this.entityData.SeCodeUserJobId);
				this.entityData.SeCodeUserJobId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.SeCodeUserJobId, this.entityData.SeCodeUserJobId);
				OnPropertyChanged("SeCodeUserJobId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeCodeUserPlaceId property. 
		///		XXX
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeCodeUserPlaceIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXX"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeCodeUserPlaceId
		{
			get
			{
				return this.entityData.SeCodeUserPlaceId; 
			}
			
			set
			{
				if (this.entityData.SeCodeUserPlaceId == value)
					return;
					
				OnColumnChanging(SeUserColumn.SeCodeUserPlaceId, this.entityData.SeCodeUserPlaceId);
				this.entityData.SeCodeUserPlaceId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.SeCodeUserPlaceId, this.entityData.SeCodeUserPlaceId);
				OnPropertyChanged("SeCodeUserPlaceId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the UserNameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 150)]
		public virtual System.String UserNameEn
		{
			get
			{
				return this.entityData.UserNameEn; 
			}
			
			set
			{
				if (this.entityData.UserNameEn == value)
					return;
					
				OnColumnChanging(SeUserColumn.UserNameEn, this.entityData.UserNameEn);
				this.entityData.UserNameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.UserNameEn, this.entityData.UserNameEn);
				OnPropertyChanged("UserNameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the UserNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String UserNameAr
		{
			get
			{
				return this.entityData.UserNameAr; 
			}
			
			set
			{
				if (this.entityData.UserNameAr == value)
					return;
					
				OnColumnChanging(SeUserColumn.UserNameAr, this.entityData.UserNameAr);
				this.entityData.UserNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.UserNameAr, this.entityData.UserNameAr);
				OnPropertyChanged("UserNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PwdExpireDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsPwdExpireDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? PwdExpireDate
		{
			get
			{
				return this.entityData.PwdExpireDate; 
			}
			
			set
			{
				if (this.entityData.PwdExpireDate == value)
					return;
					
				OnColumnChanging(SeUserColumn.PwdExpireDate, this.entityData.PwdExpireDate);
				this.entityData.PwdExpireDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.PwdExpireDate, this.entityData.PwdExpireDate);
				OnPropertyChanged("PwdExpireDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SecurityQuestion property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 200)]
		public virtual System.String SecurityQuestion
		{
			get
			{
				return this.entityData.SecurityQuestion; 
			}
			
			set
			{
				if (this.entityData.SecurityQuestion == value)
					return;
					
				OnColumnChanging(SeUserColumn.SecurityQuestion, this.entityData.SecurityQuestion);
				this.entityData.SecurityQuestion = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.SecurityQuestion, this.entityData.SecurityQuestion);
				OnPropertyChanged("SecurityQuestion");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SequrityAns property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 200)]
		public virtual System.String SequrityAns
		{
			get
			{
				return this.entityData.SequrityAns; 
			}
			
			set
			{
				if (this.entityData.SequrityAns == value)
					return;
					
				OnColumnChanging(SeUserColumn.SequrityAns, this.entityData.SequrityAns);
				this.entityData.SequrityAns = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.SequrityAns, this.entityData.SequrityAns);
				OnPropertyChanged("SequrityAns");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CreatorUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCreatorUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? CreatorUserId
		{
			get
			{
				return this.entityData.CreatorUserId; 
			}
			
			set
			{
				if (this.entityData.CreatorUserId == value)
					return;
					
				OnColumnChanging(SeUserColumn.CreatorUserId, this.entityData.CreatorUserId);
				this.entityData.CreatorUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.CreatorUserId, this.entityData.CreatorUserId);
				OnPropertyChanged("CreatorUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CreationDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.DateTime CreationDate
		{
			get
			{
				return this.entityData.CreationDate; 
			}
			
			set
			{
				if (this.entityData.CreationDate == value)
					return;
					
				OnColumnChanging(SeUserColumn.CreationDate, this.entityData.CreationDate);
				this.entityData.CreationDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.CreationDate, this.entityData.CreationDate);
				OnPropertyChanged("CreationDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastLoginDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastLoginDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastLoginDate
		{
			get
			{
				return this.entityData.LastLoginDate; 
			}
			
			set
			{
				if (this.entityData.LastLoginDate == value)
					return;
					
				OnColumnChanging(SeUserColumn.LastLoginDate, this.entityData.LastLoginDate);
				this.entityData.LastLoginDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.LastLoginDate, this.entityData.LastLoginDate);
				OnPropertyChanged("LastLoginDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Status property. 
		///		1:active - 0:not active
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"1:active - 0:not active"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal Status
		{
			get
			{
				return this.entityData.Status; 
			}
			
			set
			{
				if (this.entityData.Status == value)
					return;
					
				OnColumnChanging(SeUserColumn.Status, this.entityData.Status);
				this.entityData.Status = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.Status, this.entityData.Status);
				OnPropertyChanged("Status");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FailedAttemptsNum property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal FailedAttemptsNum
		{
			get
			{
				return this.entityData.FailedAttemptsNum; 
			}
			
			set
			{
				if (this.entityData.FailedAttemptsNum == value)
					return;
					
				OnColumnChanging(SeUserColumn.FailedAttemptsNum, this.entityData.FailedAttemptsNum);
				this.entityData.FailedAttemptsNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.FailedAttemptsNum, this.entityData.FailedAttemptsNum);
				OnPropertyChanged("FailedAttemptsNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ValidateMachine property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsValidateMachineNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ValidateMachine
		{
			get
			{
				return this.entityData.ValidateMachine; 
			}
			
			set
			{
				if (this.entityData.ValidateMachine == value)
					return;
					
				OnColumnChanging(SeUserColumn.ValidateMachine, this.entityData.ValidateMachine);
				this.entityData.ValidateMachine = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.ValidateMachine, this.entityData.ValidateMachine);
				OnPropertyChanged("ValidateMachine");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Ip property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String Ip
		{
			get
			{
				return this.entityData.Ip; 
			}
			
			set
			{
				if (this.entityData.Ip == value)
					return;
					
				OnColumnChanging(SeUserColumn.Ip, this.entityData.Ip);
				this.entityData.Ip = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.Ip, this.entityData.Ip);
				OnPropertyChanged("Ip");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Mac property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Mac
		{
			get
			{
				return this.entityData.Mac; 
			}
			
			set
			{
				if (this.entityData.Mac == value)
					return;
					
				OnColumnChanging(SeUserColumn.Mac, this.entityData.Mac);
				this.entityData.Mac = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.Mac, this.entityData.Mac);
				OnPropertyChanged("Mac");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IsLogin property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsIsLoginNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? IsLogin
		{
			get
			{
				return this.entityData.IsLogin; 
			}
			
			set
			{
				if (this.entityData.IsLogin == value)
					return;
					
				OnColumnChanging(SeUserColumn.IsLogin, this.entityData.IsLogin);
				this.entityData.IsLogin = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.IsLogin, this.entityData.IsLogin);
				OnPropertyChanged("IsLogin");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Email property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String Email
		{
			get
			{
				return this.entityData.Email; 
			}
			
			set
			{
				if (this.entityData.Email == value)
					return;
					
				OnColumnChanging(SeUserColumn.Email, this.entityData.Email);
				this.entityData.Email = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.Email, this.entityData.Email);
				OnPropertyChanged("Email");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdUserName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 150)]
		public virtual System.String AdUserName
		{
			get
			{
				return this.entityData.AdUserName; 
			}
			
			set
			{
				if (this.entityData.AdUserName == value)
					return;
					
				OnColumnChanging(SeUserColumn.AdUserName, this.entityData.AdUserName);
				this.entityData.AdUserName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.AdUserName, this.entityData.AdUserName);
				OnPropertyChanged("AdUserName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdUserGuid property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String AdUserGuid
		{
			get
			{
				return this.entityData.AdUserGuid; 
			}
			
			set
			{
				if (this.entityData.AdUserGuid == value)
					return;
					
				OnColumnChanging(SeUserColumn.AdUserGuid, this.entityData.AdUserGuid);
				this.entityData.AdUserGuid = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.AdUserGuid, this.entityData.AdUserGuid);
				OnPropertyChanged("AdUserGuid");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeCodeUserTypeId property. 
		///		Default User Type
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeCodeUserTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"Default User Type"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeCodeUserTypeId
		{
			get
			{
				return this.entityData.SeCodeUserTypeId; 
			}
			
			set
			{
				if (this.entityData.SeCodeUserTypeId == value)
					return;
					
				OnColumnChanging(SeUserColumn.SeCodeUserTypeId, this.entityData.SeCodeUserTypeId);
				this.entityData.SeCodeUserTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.SeCodeUserTypeId, this.entityData.SeCodeUserTypeId);
				OnPropertyChanged("SeCodeUserTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the UserTableId property. 
		///		Default Related Table  ID
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsUserTableIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"Default Related Table  ID"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? UserTableId
		{
			get
			{
				return this.entityData.UserTableId; 
			}
			
			set
			{
				if (this.entityData.UserTableId == value)
					return;
					
				OnColumnChanging(SeUserColumn.UserTableId, this.entityData.UserTableId);
				this.entityData.UserTableId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.UserTableId, this.entityData.UserTableId);
				OnPropertyChanged("UserTableId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ErpOrgTreeId property. 
		///		XXnot usedXX
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsErpOrgTreeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXnot usedXX"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ErpOrgTreeId
		{
			get
			{
				return this.entityData.ErpOrgTreeId; 
			}
			
			set
			{
				if (this.entityData.ErpOrgTreeId == value)
					return;
					
				OnColumnChanging(SeUserColumn.ErpOrgTreeId, this.entityData.ErpOrgTreeId);
				this.entityData.ErpOrgTreeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.ErpOrgTreeId, this.entityData.ErpOrgTreeId);
				OnPropertyChanged("ErpOrgTreeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(SeUserColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserLstId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserLstIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserLstId
		{
			get
			{
				return this.entityData.SeUserLstId; 
			}
			
			set
			{
				if (this.entityData.SeUserLstId == value)
					return;
					
				OnColumnChanging(SeUserColumn.SeUserLstId, this.entityData.SeUserLstId);
				this.entityData.SeUserLstId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.SeUserLstId, this.entityData.SeUserLstId);
				OnPropertyChanged("SeUserLstId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ForgetPasswordCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 4)]
		public virtual System.String ForgetPasswordCode
		{
			get
			{
				return this.entityData.ForgetPasswordCode; 
			}
			
			set
			{
				if (this.entityData.ForgetPasswordCode == value)
					return;
					
				OnColumnChanging(SeUserColumn.ForgetPasswordCode, this.entityData.ForgetPasswordCode);
				this.entityData.ForgetPasswordCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.ForgetPasswordCode, this.entityData.ForgetPasswordCode);
				OnPropertyChanged("ForgetPasswordCode");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ForgetPasswordCodeValidUntil property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsForgetPasswordCodeValidUntilNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? ForgetPasswordCodeValidUntil
		{
			get
			{
				return this.entityData.ForgetPasswordCodeValidUntil; 
			}
			
			set
			{
				if (this.entityData.ForgetPasswordCodeValidUntil == value)
					return;
					
				OnColumnChanging(SeUserColumn.ForgetPasswordCodeValidUntil, this.entityData.ForgetPasswordCodeValidUntil);
				this.entityData.ForgetPasswordCodeValidUntil = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.ForgetPasswordCodeValidUntil, this.entityData.ForgetPasswordCodeValidUntil);
				OnPropertyChanged("ForgetPasswordCodeValidUntil");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EnumId property. 
		///		integration user 
		/// 		/// 1: Course_Reg, Course_reg_Assess
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsEnumIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"integration user  1: Course_Reg, Course_reg_Assess"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? EnumId
		{
			get
			{
				return this.entityData.EnumId; 
			}
			
			set
			{
				if (this.entityData.EnumId == value)
					return;
					
				OnColumnChanging(SeUserColumn.EnumId, this.entityData.EnumId);
				this.entityData.EnumId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.EnumId, this.entityData.EnumId);
				OnPropertyChanged("EnumId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the UserMobile property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String UserMobile
		{
			get
			{
				return this.entityData.UserMobile; 
			}
			
			set
			{
				if (this.entityData.UserMobile == value)
					return;
					
				OnColumnChanging(SeUserColumn.UserMobile, this.entityData.UserMobile);
				this.entityData.UserMobile = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SeUserColumn.UserMobile, this.entityData.UserMobile);
				OnPropertyChanged("UserMobile");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="ErpOrgTree"/>.
		/// </summary>
		/// <value>The source ErpOrgTree for ErpOrgTreeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual ErpOrgTree ErpOrgTreeIdSource
      	{
            get { return entityData.ErpOrgTreeIdSource; }
            set { entityData.ErpOrgTreeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SeCodeUserJob"/>.
		/// </summary>
		/// <value>The source SeCodeUserJob for SeCodeUserJobId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SeCodeUserJob SeCodeUserJobIdSource
      	{
            get { return entityData.SeCodeUserJobIdSource; }
            set { entityData.SeCodeUserJobIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SeCodeUserPlace"/>.
		/// </summary>
		/// <value>The source SeCodeUserPlace for SeCodeUserPlaceId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SeCodeUserPlace SeCodeUserPlaceIdSource
      	{
            get { return entityData.SeCodeUserPlaceIdSource; }
            set { entityData.SeCodeUserPlaceIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SeCodeUserType"/>.
		/// </summary>
		/// <value>The source SeCodeUserType for SeCodeUserTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SeCodeUserType SeCodeUserTypeIdSource
      	{
            get { return entityData.SeCodeUserTypeIdSource; }
            set { entityData.SeCodeUserTypeIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of TrnsStudCarStkr objects
		///	which are related to this object through the relation FK_TRNS_STUD_CAR_STKR_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<TrnsStudCarStkr> TrnsStudCarStkrCollection
		{
			get { return entityData.TrnsStudCarStkrCollection; }
			set { entityData.TrnsStudCarStkrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudVoucherItem objects
		///	which are related to this object through the relation FK_FEE_STUD_VOUCHER_ITEM_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudVoucherItem> FeeStudVoucherItemCollection
		{
			get { return entityData.FeeStudVoucherItemCollection; }
			set { entityData.FeeStudVoucherItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of WfCrsRsltApprove objects
		///	which are related to this object through the relation FK_WF_CRS_RSLT_APPROVE_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<WfCrsRsltApprove> WfCrsRsltApproveCollection
		{
			get { return entityData.WfCrsRsltApproveCollection; }
			set { entityData.WfCrsRsltApproveCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvCourseEval objects
		///	which are related to this object through the relation FK_SV_COURSE_EVAL_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvCourseEval> SvCourseEvalCollection
		{
			get { return entityData.SvCourseEvalCollection; }
			set { entityData.SvCourseEvalCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvUserTask objects
		///	which are related to this object through the relation FK_SV_USER_TASK_SE_USER1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvUserTask> SvUserTaskCollection
		{
			get { return entityData.SvUserTaskCollection; }
			set { entityData.SvUserTaskCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomWfRequestApprove objects
		///	which are related to this object through the relation FK_ACCOM_WF_REQUEST_APPROVE_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomWfRequestApprove> AccomWfRequestApproveCollection
		{
			get { return entityData.AccomWfRequestApproveCollection; }
			set { entityData.AccomWfRequestApproveCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdOfferingCourse objects
		///	which are related to this object through the relation FK_ED_OFFERING_COURSE_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdOfferingCourse> EdOfferingCourseCollection
		{
			get { return entityData.EdOfferingCourseCollection; }
			set { entityData.EdOfferingCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmInbox objects
		///	which are related to this object through the relation FK_ADM_INBOX_SE_USER1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmInbox> AdmInboxCollectionGetByInMsgUserTo
		{
			get { return entityData.AdmInboxCollectionGetByInMsgUserTo; }
			set { entityData.AdmInboxCollectionGetByInMsgUserTo = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseOutcomesTopics objects
		///	which are related to this object through the relation FK_ED_Course_Outcomes_Topics_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseOutcomesTopics> EdCourseOutcomesTopicsCollection
		{
			get { return entityData.EdCourseOutcomesTopicsCollection; }
			set { entityData.EdCourseOutcomesTopicsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudGuard objects
		///	which are related to this object through the relation FK_SE_USER_RLTD_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudGuard> EdStudGuardCollection
		{
			get { return entityData.EdStudGuardCollection; }
			set { entityData.EdStudGuardCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStaffEvl objects
		///	which are related to this object through the relation FK_SV_STAFF_EVL_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStaffEvl> SvStaffEvlCollection
		{
			get { return entityData.SvStaffEvlCollection; }
			set { entityData.SvStaffEvlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoControl objects
		///	which are related to this object through the relation FK_CO_CONTROL_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoControl> CoControlCollection
		{
			get { return entityData.CoControlCollection; }
			set { entityData.CoControlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppFees objects
		///	which are related to this object through the relation FK_ADM_APP_FEES_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppFees> AdmAppFeesCollection
		{
			get { return entityData.AdmAppFeesCollection; }
			set { entityData.AdmAppFeesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdAcadPlan objects
		///	which are related to this object through the relation FK_ED_ACAD_PLAN_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdAcadPlan> EdAcadPlanCollection
		{
			get { return entityData.EdAcadPlanCollection; }
			set { entityData.EdAcadPlanCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoCrsRsltRaise objects
		///	which are related to this object through the relation FK_CO_CRS_RSLT_RAISE_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoCrsRsltRaise> CoCrsRsltRaiseCollection
		{
			get { return entityData.CoCrsRsltRaiseCollection; }
			set { entityData.CoCrsRsltRaiseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudLateness objects
		///	which are related to this object through the relation FK_Ed_Stud_Lateness_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudLateness> EdStudLatenessCollection
		{
			get { return entityData.EdStudLatenessCollection; }
			set { entityData.EdStudLatenessCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvSrvyHdr objects
		///	which are related to this object through the relation FK_SV_SRVY_HDR_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvSrvyHdr> SvSrvyHdrCollection
		{
			get { return entityData.SvSrvyHdrCollection; }
			set { entityData.SvSrvyHdrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvUserRefreshToken objects
		///	which are related to this object through the relation FK_SV_USER_REFRESH_TOKEN_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvUserRefreshToken> SvUserRefreshTokenCollection
		{
			get { return entityData.SvUserRefreshTokenCollection; }
			set { entityData.SvUserRefreshTokenCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudFeeItem objects
		///	which are related to this object through the relation FK_FEE_STUD_FEE_ITEM_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudFeeItem> FeeStudFeeItemCollection
		{
			get { return entityData.FeeStudFeeItemCollection; }
			set { entityData.FeeStudFeeItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmTansikMajorsCodes objects
		///	which are related to this object through the relation FK_ADM_Tansik_Majors_Codes_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmTansikMajorsCodes> AdmTansikMajorsCodesCollection
		{
			get { return entityData.AdmTansikMajorsCodesCollection; }
			set { entityData.AdmTansikMajorsCodesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudLockerReq objects
		///	which are related to this object through the relation FK_SV_STUD_LOCKER_REQ_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudLockerReq> SvStudLockerReqCollection
		{
			get { return entityData.SvStudLockerReqCollection; }
			set { entityData.SvStudLockerReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudNote objects
		///	which are related to this object through the relation FK_ED_STUD_NOTE_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudNote> EdStudNoteCollection
		{
			get { return entityData.EdStudNoteCollection; }
			set { entityData.EdStudNoteCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAcadWarn objects
		///	which are related to this object through the relation FK_ED_STUD_ACAD_WARN_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAcadWarn> EdStudAcadWarnCollection
		{
			get { return entityData.EdStudAcadWarnCollection; }
			set { entityData.EdStudAcadWarnCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SeUserAccnt objects
		///	which are related to this object through the relation FK_SE_USER_ACCNT_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SeUserAccnt> SeUserAccntCollection
		{
			get { return entityData.SeUserAccntCollection; }
			set { entityData.SeUserAccntCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudEnrollChange objects
		///	which are related to this object through the relation FK_ED_STUD_ENROLL_CHANGE_SE_USER1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudEnrollChange> EdStudEnrollChangeCollectionGetBySeUserInsrtId
		{
			get { return entityData.EdStudEnrollChangeCollectionGetBySeUserInsrtId; }
			set { entityData.EdStudEnrollChangeCollectionGetBySeUserInsrtId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseChng objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_CHNG_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseChng> EdStudCourseChngCollectionGetBySeUserId
		{
			get { return entityData.EdStudCourseChngCollectionGetBySeUserId; }
			set { entityData.EdStudCourseChngCollectionGetBySeUserId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdOffering objects
		///	which are related to this object through the relation FK_ED_OFFERING_SE_USER2
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdOffering> EdOfferingCollectionGetByCrsSchdDeanApprvUsrId
		{
			get { return entityData.EdOfferingCollectionGetByCrsSchdDeanApprvUsrId; }
			set { entityData.EdOfferingCollectionGetByCrsSchdDeanApprvUsrId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CtrStudExp objects
		///	which are related to this object through the relation FK_CTR_STUD_EXP_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CtrStudExp> CtrStudExpCollection
		{
			get { return entityData.CtrStudExpCollection; }
			set { entityData.CtrStudExpCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvPollHdr objects
		///	which are related to this object through the relation FK_SV_POLL_HDR_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvPollHdr> SvPollHdrCollection
		{
			get { return entityData.SvPollHdrCollection; }
			set { entityData.SvPollHdrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseGrdChng objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_GRD_CHNG_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseGrdChng> EdStudCourseGrdChngCollection
		{
			get { return entityData.EdStudCourseGrdChngCollection; }
			set { entityData.EdStudCourseGrdChngCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdBylaw objects
		///	which are related to this object through the relation FK_ED_BYLAW_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdBylaw> EdBylawCollection
		{
			get { return entityData.EdBylawCollection; }
			set { entityData.EdBylawCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmInbox objects
		///	which are related to this object through the relation FK_ADM_INBOX_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmInbox> AdmInboxCollectionGetByInMsgUserFrom
		{
			get { return entityData.AdmInboxCollectionGetByInMsgUserFrom; }
			set { entityData.AdmInboxCollectionGetByInMsgUserFrom = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAbsFw objects
		///	which are related to this object through the relation FK_ED_STUD_ABS_FW_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAbsFw> EdStudAbsFwCollection
		{
			get { return entityData.EdStudAbsFwCollection; }
			set { entityData.EdStudAbsFwCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeItemTrnsBlnc objects
		///	which are related to this object through the relation FK_FEE_ITEM_TRNS_BLNC_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeItemTrnsBlnc> FeeItemTrnsBlncCollection
		{
			get { return entityData.FeeItemTrnsBlncCollection; }
			set { entityData.FeeItemTrnsBlncCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdOutcome objects
		///	which are related to this object through the relation FK_ED_OUTCOME_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdOutcome> EdOutcomeCollection
		{
			get { return entityData.EdOutcomeCollection; }
			set { entityData.EdOutcomeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdOffering objects
		///	which are related to this object through the relation FK_ED_OFFERING_SE_USER1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdOffering> EdOfferingCollectionGetByExmSchdHodApprvUsrId
		{
			get { return entityData.EdOfferingCollectionGetByExmSchdHodApprvUsrId; }
			set { entityData.EdOfferingCollectionGetByExmSchdHodApprvUsrId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudVoucher objects
		///	which are related to this object through the relation FK_FEE_STUD_VOUCHER_SE_USER1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudVoucher> FeeStudVoucherCollectionGetBySeUserCnclId
		{
			get { return entityData.FeeStudVoucherCollectionGetBySeUserCnclId; }
			set { entityData.FeeStudVoucherCollectionGetBySeUserCnclId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseChng objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_CHNG_SE_USER1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseChng> EdStudCourseChngCollectionGetBySeUserInsrtId
		{
			get { return entityData.EdStudCourseChngCollectionGetBySeUserInsrtId; }
			set { entityData.EdStudCourseChngCollectionGetBySeUserInsrtId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CtrStudOut objects
		///	which are related to this object through the relation FK_CTR_STUD_OUT_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CtrStudOut> CtrStudOutCollection
		{
			get { return entityData.CtrStudOutCollection; }
			set { entityData.CtrStudOutCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScScheduleDtl objects
		///	which are related to this object through the relation FK_SC_SCHEDULE_DTL_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScScheduleDtl> ScScheduleDtlCollection
		{
			get { return entityData.ScScheduleDtlCollection; }
			set { entityData.ScScheduleDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoContRoomMember objects
		///	which are related to this object through the relation FK_CO_CONT_ROOM_MEMBER_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoContRoomMember> CoContRoomMemberCollection
		{
			get { return entityData.CoContRoomMemberCollection; }
			set { entityData.CoContRoomMemberCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRplc objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_RPLC_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRplc> EdStudCourseRplcCollection
		{
			get { return entityData.EdStudCourseRplcCollection; }
			set { entityData.EdStudCourseRplcCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseReg objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseReg> EdStudCourseRegCollectionGetBySeUserId
		{
			get { return entityData.EdStudCourseRegCollectionGetBySeUserId; }
			set { entityData.EdStudCourseRegCollectionGetBySeUserId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppRegHistory objects
		///	which are related to this object through the relation FK_ADM_APP_REG_HISTORY_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppRegHistory> AdmAppRegHistoryCollection
		{
			get { return entityData.AdmAppRegHistoryCollection; }
			set { entityData.AdmAppRegHistoryCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of UsrTopLink objects
		///	which are related to this object through the relation FK_USR_TOP_LINK_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<UsrTopLink> UsrTopLinkCollection
		{
			get { return entityData.UsrTopLinkCollection; }
			set { entityData.UsrTopLinkCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdOffering objects
		///	which are related to this object through the relation FK_ED_OFFERING_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdOffering> EdOfferingCollectionGetByCrsSchdHodApprvUsrId
		{
			get { return entityData.EdOfferingCollectionGetByCrsSchdHodApprvUsrId; }
			set { entityData.EdOfferingCollectionGetByCrsSchdHodApprvUsrId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseReg objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_SE_USER_APRV
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseReg> EdStudCourseRegCollectionGetBySeUserApproveId
		{
			get { return entityData.EdStudCourseRegCollectionGetBySeUserApproveId; }
			set { entityData.EdStudCourseRegCollectionGetBySeUserApproveId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SeUserCrsAssess objects
		///	which are related to this object through the relation FK_SE_USER_CRS_ASSESS_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SeUserCrsAssess> SeUserCrsAssessCollection
		{
			get { return entityData.SeUserCrsAssessCollection; }
			set { entityData.SeUserCrsAssessCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvUserMobToken objects
		///	which are related to this object through the relation FK_SV_USER_MOB_TOKEN_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvUserMobToken> SvUserMobTokenCollection
		{
			get { return entityData.SvUserMobTokenCollection; }
			set { entityData.SvUserMobTokenCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SeApplicationLog objects
		///	which are related to this object through the relation FK_SE_APPLICATION_LOG_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SeApplicationLog> SeApplicationLogCollection
		{
			get { return entityData.SeApplicationLogCollection; }
			set { entityData.SeApplicationLogCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseOutcomesDtl objects
		///	which are related to this object through the relation FK_ED_Course_Outcomes_DTL_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseOutcomesDtl> EdCourseOutcomesDtlCollection
		{
			get { return entityData.EdCourseOutcomesDtlCollection; }
			set { entityData.EdCourseOutcomesDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmOutbox objects
		///	which are related to this object through the relation FK_ADM_OUTBOX_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmOutbox> AdmOutboxCollectionGetByOutMsgUserFrom
		{
			get { return entityData.AdmOutboxCollectionGetByOutMsgUserFrom; }
			set { entityData.AdmOutboxCollectionGetByOutMsgUserFrom = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdResultApprove objects
		///	which are related to this object through the relation FK_ED_RESULT_APPROVE_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdResultApprove> EdResultApproveCollection
		{
			get { return entityData.EdResultApproveCollection; }
			set { entityData.EdResultApproveCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudEnrollChange objects
		///	which are related to this object through the relation FK_ED_STUD_ENROLL_CHANGE_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudEnrollChange> EdStudEnrollChangeCollectionGetBySeUserId
		{
			get { return entityData.EdStudEnrollChangeCollectionGetBySeUserId; }
			set { entityData.EdStudEnrollChangeCollectionGetBySeUserId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudVoucher objects
		///	which are related to this object through the relation FK_FEE_STUD_VOUCHER_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudVoucher> FeeStudVoucherCollectionGetBySeUserId
		{
			get { return entityData.FeeStudVoucherCollectionGetBySeUserId; }
			set { entityData.FeeStudVoucherCollectionGetBySeUserId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmTansikAppCodes objects
		///	which are related to this object through the relation FK_ADM_Tansik_App_Codes_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmTansikAppCodes> AdmTansikAppCodesCollection
		{
			get { return entityData.AdmTansikAppCodesCollection; }
			set { entityData.AdmTansikAppCodesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdOffering objects
		///	which are related to this object through the relation FK_ED_OFFERING_SE_USER3
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdOffering> EdOfferingCollectionGetByExmSchdDeanApprvUsrId
		{
			get { return entityData.EdOfferingCollectionGetByExmSchdDeanApprvUsrId; }
			set { entityData.EdOfferingCollectionGetByExmSchdDeanApprvUsrId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmTansikCodes objects
		///	which are related to this object through the relation FK_ADM_Tansik_Codes_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmTansikCodes> AdmTansikCodesCollection
		{
			get { return entityData.AdmTansikCodesCollection; }
			set { entityData.AdmTansikCodesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudComp objects
		///	which are related to this object through the relation FK_SV_STUD_COMP_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudComp> SvStudCompCollection
		{
			get { return entityData.SvStudCompCollection; }
			set { entityData.SvStudCompCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudExcuse objects
		///	which are related to this object through the relation FK_ED_STUD_EXCUSE_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudExcuse> EdStudExcuseCollection
		{
			get { return entityData.EdStudExcuseCollection; }
			set { entityData.EdStudExcuseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeFineDtl objects
		///	which are related to this object through the relation FK_FEE_FINE_DTL_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeFineDtl> FeeFineDtlCollection
		{
			get { return entityData.FeeFineDtlCollection; }
			set { entityData.FeeFineDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRegAssess objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_ASSESS_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRegAssess> EdStudCourseRegAssessCollection
		{
			get { return entityData.EdStudCourseRegAssessCollection; }
			set { entityData.EdStudCourseRegAssessCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmOutbox objects
		///	which are related to this object through the relation FK_ADM_OUTBOX_SE_USER1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmOutbox> AdmOutboxCollectionGetByOutMsgUserTo
		{
			get { return entityData.AdmOutboxCollectionGetByOutMsgUserTo; }
			set { entityData.AdmOutboxCollectionGetByOutMsgUserTo = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SeBlockTrans objects
		///	which are related to this object through the relation FK_SE_BLOCK_TRANS_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SeBlockTrans> SeBlockTransCollection
		{
			get { return entityData.SeBlockTransCollection; }
			set { entityData.SeBlockTransCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of IntegUserAdLogDtl objects
		///	which are related to this object through the relation FK_INTEG_USER_AD_LOG_DTL_SE_USER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<IntegUserAdLogDtl> IntegUserAdLogDtlCollection
		{
			get { return entityData.IntegUserAdLogDtlCollection; }
			set { entityData.IntegUserAdLogDtlCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("UserNameEn", "User Name En"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("UserNameEn", "User Name En", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("UserNameAr", "User Name Ar", 150));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("SecurityQuestion", "Security Question"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SecurityQuestion", "Security Question", 200));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("SequrityAns", "Sequrity Ans"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SequrityAns", "Sequrity Ans", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Ip", "Ip", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Mac", "Mac", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Email", "Email", 150));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("AdUserName", "Ad User Name"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("AdUserName", "Ad User Name", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("AdUserGuid", "Ad User Guid", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ForgetPasswordCode", "Forget Password Code", 4));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("UserMobile", "User Mobile", 50));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "SE_USER"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"SE_USER_ID", "SE_CODE_USER_JOB_ID", "SE_CODE_USER_PLACE_ID", "USER_NAME_EN", "USER_NAME_AR", "PWD_EXPIRE_DATE", "SECURITY_QUESTION", "SEQURITY_ANS", "CREATOR_USER_ID", "CREATION_DATE", "LAST_LOGIN_DATE", "STATUS", "FAILED_ATTEMPTS_NUM", "VALIDATE_MACHINE", "IP", "MAC", "IS_LOGIN", "Email", "AD_USER_NAME", "AD_USER_GUID", "SE_CODE_USER_TYPE_ID", "USER_TABLE_ID", "ERP_ORG_TREE_ID", "LAST_DATE", "SE_USER_LST_ID", "ForgetPasswordCode", "ForgetPasswordCodeValidUntil", "ENUM_ID", "USER_MOBILE"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as SeUserEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (SeUser) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<SeUser>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as SeUser);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed SeUser Entity 
		///</summary>
		protected virtual SeUser Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			SeUser copy = new SeUser();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.SeUserId = this.SeUserId;
					copy.OriginalSeUserId = this.OriginalSeUserId;
				copy.SeCodeUserJobId = this.SeCodeUserJobId;
				copy.SeCodeUserPlaceId = this.SeCodeUserPlaceId;
				copy.UserNameEn = this.UserNameEn;
				copy.UserNameAr = this.UserNameAr;
				copy.PwdExpireDate = this.PwdExpireDate;
				copy.SecurityQuestion = this.SecurityQuestion;
				copy.SequrityAns = this.SequrityAns;
				copy.CreatorUserId = this.CreatorUserId;
				copy.CreationDate = this.CreationDate;
				copy.LastLoginDate = this.LastLoginDate;
				copy.Status = this.Status;
				copy.FailedAttemptsNum = this.FailedAttemptsNum;
				copy.ValidateMachine = this.ValidateMachine;
				copy.Ip = this.Ip;
				copy.Mac = this.Mac;
				copy.IsLogin = this.IsLogin;
				copy.Email = this.Email;
				copy.AdUserName = this.AdUserName;
				copy.AdUserGuid = this.AdUserGuid;
				copy.SeCodeUserTypeId = this.SeCodeUserTypeId;
				copy.UserTableId = this.UserTableId;
				copy.ErpOrgTreeId = this.ErpOrgTreeId;
				copy.LastDate = this.LastDate;
				copy.SeUserLstId = this.SeUserLstId;
				copy.ForgetPasswordCode = this.ForgetPasswordCode;
				copy.ForgetPasswordCodeValidUntil = this.ForgetPasswordCodeValidUntil;
				copy.EnumId = this.EnumId;
				copy.UserMobile = this.UserMobile;
			
			if (this.ErpOrgTreeIdSource != null && existingCopies.Contains(this.ErpOrgTreeIdSource))
				copy.ErpOrgTreeIdSource = existingCopies[this.ErpOrgTreeIdSource] as ErpOrgTree;
			else
				copy.ErpOrgTreeIdSource = MakeCopyOf(this.ErpOrgTreeIdSource, existingCopies) as ErpOrgTree;
			if (this.SeCodeUserJobIdSource != null && existingCopies.Contains(this.SeCodeUserJobIdSource))
				copy.SeCodeUserJobIdSource = existingCopies[this.SeCodeUserJobIdSource] as SeCodeUserJob;
			else
				copy.SeCodeUserJobIdSource = MakeCopyOf(this.SeCodeUserJobIdSource, existingCopies) as SeCodeUserJob;
			if (this.SeCodeUserPlaceIdSource != null && existingCopies.Contains(this.SeCodeUserPlaceIdSource))
				copy.SeCodeUserPlaceIdSource = existingCopies[this.SeCodeUserPlaceIdSource] as SeCodeUserPlace;
			else
				copy.SeCodeUserPlaceIdSource = MakeCopyOf(this.SeCodeUserPlaceIdSource, existingCopies) as SeCodeUserPlace;
			if (this.SeCodeUserTypeIdSource != null && existingCopies.Contains(this.SeCodeUserTypeIdSource))
				copy.SeCodeUserTypeIdSource = existingCopies[this.SeCodeUserTypeIdSource] as SeCodeUserType;
			else
				copy.SeCodeUserTypeIdSource = MakeCopyOf(this.SeCodeUserTypeIdSource, existingCopies) as SeCodeUserType;
		
			//deep copy nested objects
			copy.TrnsStudCarStkrCollection = (TList<TrnsStudCarStkr>) MakeCopyOf(this.TrnsStudCarStkrCollection, existingCopies); 
			copy.FeeStudVoucherItemCollection = (TList<FeeStudVoucherItem>) MakeCopyOf(this.FeeStudVoucherItemCollection, existingCopies); 
			copy.WfCrsRsltApproveCollection = (TList<WfCrsRsltApprove>) MakeCopyOf(this.WfCrsRsltApproveCollection, existingCopies); 
			copy.SvCourseEvalCollection = (TList<SvCourseEval>) MakeCopyOf(this.SvCourseEvalCollection, existingCopies); 
			copy.SvUserTaskCollection = (TList<SvUserTask>) MakeCopyOf(this.SvUserTaskCollection, existingCopies); 
			copy.AccomWfRequestApproveCollection = (TList<AccomWfRequestApprove>) MakeCopyOf(this.AccomWfRequestApproveCollection, existingCopies); 
			copy.EdOfferingCourseCollection = (TList<EdOfferingCourse>) MakeCopyOf(this.EdOfferingCourseCollection, existingCopies); 
			copy.AdmInboxCollectionGetByInMsgUserTo = (TList<AdmInbox>) MakeCopyOf(this.AdmInboxCollectionGetByInMsgUserTo, existingCopies); 
			copy.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection, existingCopies); 
			copy.EdStudGuardCollection = (TList<EdStudGuard>) MakeCopyOf(this.EdStudGuardCollection, existingCopies); 
			copy.SvStaffEvlCollection = (TList<SvStaffEvl>) MakeCopyOf(this.SvStaffEvlCollection, existingCopies); 
			copy.CoControlCollection = (TList<CoControl>) MakeCopyOf(this.CoControlCollection, existingCopies); 
			copy.AdmAppFeesCollection = (TList<AdmAppFees>) MakeCopyOf(this.AdmAppFeesCollection, existingCopies); 
			copy.EdAcadPlanCollection = (TList<EdAcadPlan>) MakeCopyOf(this.EdAcadPlanCollection, existingCopies); 
			copy.CoCrsRsltRaiseCollection = (TList<CoCrsRsltRaise>) MakeCopyOf(this.CoCrsRsltRaiseCollection, existingCopies); 
			copy.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection, existingCopies); 
			copy.SvSrvyHdrCollection = (TList<SvSrvyHdr>) MakeCopyOf(this.SvSrvyHdrCollection, existingCopies); 
			copy.SvUserRefreshTokenCollection = (TList<SvUserRefreshToken>) MakeCopyOf(this.SvUserRefreshTokenCollection, existingCopies); 
			copy.FeeStudFeeItemCollection = (TList<FeeStudFeeItem>) MakeCopyOf(this.FeeStudFeeItemCollection, existingCopies); 
			copy.AdmTansikMajorsCodesCollection = (TList<AdmTansikMajorsCodes>) MakeCopyOf(this.AdmTansikMajorsCodesCollection, existingCopies); 
			copy.SvStudLockerReqCollection = (TList<SvStudLockerReq>) MakeCopyOf(this.SvStudLockerReqCollection, existingCopies); 
			copy.EdStudNoteCollection = (TList<EdStudNote>) MakeCopyOf(this.EdStudNoteCollection, existingCopies); 
			copy.EdStudAcadWarnCollection = (TList<EdStudAcadWarn>) MakeCopyOf(this.EdStudAcadWarnCollection, existingCopies); 
			copy.SeUserAccntCollection = (TList<SeUserAccnt>) MakeCopyOf(this.SeUserAccntCollection, existingCopies); 
			copy.EdStudEnrollChangeCollectionGetBySeUserInsrtId = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollectionGetBySeUserInsrtId, existingCopies); 
			copy.EdStudCourseChngCollectionGetBySeUserId = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollectionGetBySeUserId, existingCopies); 
			copy.EdOfferingCollectionGetByCrsSchdDeanApprvUsrId = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollectionGetByCrsSchdDeanApprvUsrId, existingCopies); 
			copy.CtrStudExpCollection = (TList<CtrStudExp>) MakeCopyOf(this.CtrStudExpCollection, existingCopies); 
			copy.SvPollHdrCollection = (TList<SvPollHdr>) MakeCopyOf(this.SvPollHdrCollection, existingCopies); 
			copy.EdStudCourseGrdChngCollection = (TList<EdStudCourseGrdChng>) MakeCopyOf(this.EdStudCourseGrdChngCollection, existingCopies); 
			copy.EdBylawCollection = (TList<EdBylaw>) MakeCopyOf(this.EdBylawCollection, existingCopies); 
			copy.AdmInboxCollectionGetByInMsgUserFrom = (TList<AdmInbox>) MakeCopyOf(this.AdmInboxCollectionGetByInMsgUserFrom, existingCopies); 
			copy.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection, existingCopies); 
			copy.FeeItemTrnsBlncCollection = (TList<FeeItemTrnsBlnc>) MakeCopyOf(this.FeeItemTrnsBlncCollection, existingCopies); 
			copy.EdOutcomeCollection = (TList<EdOutcome>) MakeCopyOf(this.EdOutcomeCollection, existingCopies); 
			copy.EdOfferingCollectionGetByExmSchdHodApprvUsrId = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollectionGetByExmSchdHodApprvUsrId, existingCopies); 
			copy.FeeStudVoucherCollectionGetBySeUserCnclId = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollectionGetBySeUserCnclId, existingCopies); 
			copy.EdStudCourseChngCollectionGetBySeUserInsrtId = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollectionGetBySeUserInsrtId, existingCopies); 
			copy.CtrStudOutCollection = (TList<CtrStudOut>) MakeCopyOf(this.CtrStudOutCollection, existingCopies); 
			copy.ScScheduleDtlCollection = (TList<ScScheduleDtl>) MakeCopyOf(this.ScScheduleDtlCollection, existingCopies); 
			copy.CoContRoomMemberCollection = (TList<CoContRoomMember>) MakeCopyOf(this.CoContRoomMemberCollection, existingCopies); 
			copy.EdStudCourseRplcCollection = (TList<EdStudCourseRplc>) MakeCopyOf(this.EdStudCourseRplcCollection, existingCopies); 
			copy.EdStudCourseRegCollectionGetBySeUserId = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollectionGetBySeUserId, existingCopies); 
			copy.AdmAppRegHistoryCollection = (TList<AdmAppRegHistory>) MakeCopyOf(this.AdmAppRegHistoryCollection, existingCopies); 
			copy.UsrTopLinkCollection = (TList<UsrTopLink>) MakeCopyOf(this.UsrTopLinkCollection, existingCopies); 
			copy.EdOfferingCollectionGetByCrsSchdHodApprvUsrId = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollectionGetByCrsSchdHodApprvUsrId, existingCopies); 
			copy.EdStudCourseRegCollectionGetBySeUserApproveId = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollectionGetBySeUserApproveId, existingCopies); 
			copy.SeUserCrsAssessCollection = (TList<SeUserCrsAssess>) MakeCopyOf(this.SeUserCrsAssessCollection, existingCopies); 
			copy.SvUserMobTokenCollection = (TList<SvUserMobToken>) MakeCopyOf(this.SvUserMobTokenCollection, existingCopies); 
			copy.SeApplicationLogCollection = (TList<SeApplicationLog>) MakeCopyOf(this.SeApplicationLogCollection, existingCopies); 
			copy.EdCourseOutcomesDtlCollection = (TList<EdCourseOutcomesDtl>) MakeCopyOf(this.EdCourseOutcomesDtlCollection, existingCopies); 
			copy.AdmOutboxCollectionGetByOutMsgUserFrom = (TList<AdmOutbox>) MakeCopyOf(this.AdmOutboxCollectionGetByOutMsgUserFrom, existingCopies); 
			copy.EdResultApproveCollection = (TList<EdResultApprove>) MakeCopyOf(this.EdResultApproveCollection, existingCopies); 
			copy.EdStudEnrollChangeCollectionGetBySeUserId = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollectionGetBySeUserId, existingCopies); 
			copy.FeeStudVoucherCollectionGetBySeUserId = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollectionGetBySeUserId, existingCopies); 
			copy.AdmTansikAppCodesCollection = (TList<AdmTansikAppCodes>) MakeCopyOf(this.AdmTansikAppCodesCollection, existingCopies); 
			copy.EdOfferingCollectionGetByExmSchdDeanApprvUsrId = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollectionGetByExmSchdDeanApprvUsrId, existingCopies); 
			copy.AdmTansikCodesCollection = (TList<AdmTansikCodes>) MakeCopyOf(this.AdmTansikCodesCollection, existingCopies); 
			copy.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection, existingCopies); 
			copy.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection, existingCopies); 
			copy.FeeFineDtlCollection = (TList<FeeFineDtl>) MakeCopyOf(this.FeeFineDtlCollection, existingCopies); 
			copy.EdStudCourseRegAssessCollection = (TList<EdStudCourseRegAssess>) MakeCopyOf(this.EdStudCourseRegAssessCollection, existingCopies); 
			copy.AdmOutboxCollectionGetByOutMsgUserTo = (TList<AdmOutbox>) MakeCopyOf(this.AdmOutboxCollectionGetByOutMsgUserTo, existingCopies); 
			copy.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection, existingCopies); 
			copy.IntegUserAdLogDtlCollection = (TList<IntegUserAdLogDtl>) MakeCopyOf(this.IntegUserAdLogDtlCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed SeUser Entity 
		///</summary>
		public virtual SeUser Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed SeUser Entity which is a deep copy of the current entity.
		///</summary>
		public virtual SeUser DeepCopy()
		{
			return EntityHelper.Clone<SeUser>(this as SeUser);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as SeUserEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new SeUserEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as SeUserEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(SeUserColumn column)
		{
			switch(column)
			{
					case SeUserColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
					case SeUserColumn.SeCodeUserJobId:
					return entityData.SeCodeUserJobId != _originalData.SeCodeUserJobId;
					case SeUserColumn.SeCodeUserPlaceId:
					return entityData.SeCodeUserPlaceId != _originalData.SeCodeUserPlaceId;
					case SeUserColumn.UserNameEn:
					return entityData.UserNameEn != _originalData.UserNameEn;
					case SeUserColumn.UserNameAr:
					return entityData.UserNameAr != _originalData.UserNameAr;
					case SeUserColumn.PwdExpireDate:
					return entityData.PwdExpireDate != _originalData.PwdExpireDate;
					case SeUserColumn.SecurityQuestion:
					return entityData.SecurityQuestion != _originalData.SecurityQuestion;
					case SeUserColumn.SequrityAns:
					return entityData.SequrityAns != _originalData.SequrityAns;
					case SeUserColumn.CreatorUserId:
					return entityData.CreatorUserId != _originalData.CreatorUserId;
					case SeUserColumn.CreationDate:
					return entityData.CreationDate != _originalData.CreationDate;
					case SeUserColumn.LastLoginDate:
					return entityData.LastLoginDate != _originalData.LastLoginDate;
					case SeUserColumn.Status:
					return entityData.Status != _originalData.Status;
					case SeUserColumn.FailedAttemptsNum:
					return entityData.FailedAttemptsNum != _originalData.FailedAttemptsNum;
					case SeUserColumn.ValidateMachine:
					return entityData.ValidateMachine != _originalData.ValidateMachine;
					case SeUserColumn.Ip:
					return entityData.Ip != _originalData.Ip;
					case SeUserColumn.Mac:
					return entityData.Mac != _originalData.Mac;
					case SeUserColumn.IsLogin:
					return entityData.IsLogin != _originalData.IsLogin;
					case SeUserColumn.Email:
					return entityData.Email != _originalData.Email;
					case SeUserColumn.AdUserName:
					return entityData.AdUserName != _originalData.AdUserName;
					case SeUserColumn.AdUserGuid:
					return entityData.AdUserGuid != _originalData.AdUserGuid;
					case SeUserColumn.SeCodeUserTypeId:
					return entityData.SeCodeUserTypeId != _originalData.SeCodeUserTypeId;
					case SeUserColumn.UserTableId:
					return entityData.UserTableId != _originalData.UserTableId;
					case SeUserColumn.ErpOrgTreeId:
					return entityData.ErpOrgTreeId != _originalData.ErpOrgTreeId;
					case SeUserColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
					case SeUserColumn.SeUserLstId:
					return entityData.SeUserLstId != _originalData.SeUserLstId;
					case SeUserColumn.ForgetPasswordCode:
					return entityData.ForgetPasswordCode != _originalData.ForgetPasswordCode;
					case SeUserColumn.ForgetPasswordCodeValidUntil:
					return entityData.ForgetPasswordCodeValidUntil != _originalData.ForgetPasswordCodeValidUntil;
					case SeUserColumn.EnumId:
					return entityData.EnumId != _originalData.EnumId;
					case SeUserColumn.UserMobile:
					return entityData.UserMobile != _originalData.UserMobile;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< SeUserColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			result = result || entityData.SeCodeUserJobId != _originalData.SeCodeUserJobId;
			result = result || entityData.SeCodeUserPlaceId != _originalData.SeCodeUserPlaceId;
			result = result || entityData.UserNameEn != _originalData.UserNameEn;
			result = result || entityData.UserNameAr != _originalData.UserNameAr;
			result = result || entityData.PwdExpireDate != _originalData.PwdExpireDate;
			result = result || entityData.SecurityQuestion != _originalData.SecurityQuestion;
			result = result || entityData.SequrityAns != _originalData.SequrityAns;
			result = result || entityData.CreatorUserId != _originalData.CreatorUserId;
			result = result || entityData.CreationDate != _originalData.CreationDate;
			result = result || entityData.LastLoginDate != _originalData.LastLoginDate;
			result = result || entityData.Status != _originalData.Status;
			result = result || entityData.FailedAttemptsNum != _originalData.FailedAttemptsNum;
			result = result || entityData.ValidateMachine != _originalData.ValidateMachine;
			result = result || entityData.Ip != _originalData.Ip;
			result = result || entityData.Mac != _originalData.Mac;
			result = result || entityData.IsLogin != _originalData.IsLogin;
			result = result || entityData.Email != _originalData.Email;
			result = result || entityData.AdUserName != _originalData.AdUserName;
			result = result || entityData.AdUserGuid != _originalData.AdUserGuid;
			result = result || entityData.SeCodeUserTypeId != _originalData.SeCodeUserTypeId;
			result = result || entityData.UserTableId != _originalData.UserTableId;
			result = result || entityData.ErpOrgTreeId != _originalData.ErpOrgTreeId;
			result = result || entityData.LastDate != _originalData.LastDate;
			result = result || entityData.SeUserLstId != _originalData.SeUserLstId;
			result = result || entityData.ForgetPasswordCode != _originalData.ForgetPasswordCode;
			result = result || entityData.ForgetPasswordCodeValidUntil != _originalData.ForgetPasswordCodeValidUntil;
			result = result || entityData.EnumId != _originalData.EnumId;
			result = result || entityData.UserMobile != _originalData.UserMobile;
			return result;
		}	
		
		///<summary>
		///  Returns a SeUser Entity with the original data.
		///</summary>
		public SeUser GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateSeUser(
				_originalData.SeUserId,
				_originalData.SeCodeUserJobId,
				_originalData.SeCodeUserPlaceId,
				_originalData.UserNameEn,
				_originalData.UserNameAr,
				_originalData.PwdExpireDate,
				_originalData.SecurityQuestion,
				_originalData.SequrityAns,
				_originalData.CreatorUserId,
				_originalData.CreationDate,
				_originalData.LastLoginDate,
				_originalData.Status,
				_originalData.FailedAttemptsNum,
				_originalData.ValidateMachine,
				_originalData.Ip,
				_originalData.Mac,
				_originalData.IsLogin,
				_originalData.Email,
				_originalData.AdUserName,
				_originalData.AdUserGuid,
				_originalData.SeCodeUserTypeId,
				_originalData.UserTableId,
				_originalData.ErpOrgTreeId,
				_originalData.LastDate,
				_originalData.SeUserLstId,
				_originalData.ForgetPasswordCode,
				_originalData.ForgetPasswordCodeValidUntil,
				_originalData.EnumId,
				_originalData.UserMobile
				);
				
			return (SeUser)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="SeUserBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is SeUserBase)
				return ValueEquals(this, (SeUserBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="SeUserBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.SeUserId.GetHashCode() ^ 
					((this.SeCodeUserJobId == null) ? string.Empty : this.SeCodeUserJobId.ToString()).GetHashCode() ^ 
					((this.SeCodeUserPlaceId == null) ? string.Empty : this.SeCodeUserPlaceId.ToString()).GetHashCode() ^ 
					this.UserNameEn.GetHashCode() ^ 
					((this.UserNameAr == null) ? string.Empty : this.UserNameAr.ToString()).GetHashCode() ^ 
					((this.PwdExpireDate == null) ? string.Empty : this.PwdExpireDate.ToString()).GetHashCode() ^ 
					this.SecurityQuestion.GetHashCode() ^ 
					this.SequrityAns.GetHashCode() ^ 
					((this.CreatorUserId == null) ? string.Empty : this.CreatorUserId.ToString()).GetHashCode() ^ 
					this.CreationDate.GetHashCode() ^ 
					((this.LastLoginDate == null) ? string.Empty : this.LastLoginDate.ToString()).GetHashCode() ^ 
					this.Status.GetHashCode() ^ 
					this.FailedAttemptsNum.GetHashCode() ^ 
					((this.ValidateMachine == null) ? string.Empty : this.ValidateMachine.ToString()).GetHashCode() ^ 
					((this.Ip == null) ? string.Empty : this.Ip.ToString()).GetHashCode() ^ 
					((this.Mac == null) ? string.Empty : this.Mac.ToString()).GetHashCode() ^ 
					((this.IsLogin == null) ? string.Empty : this.IsLogin.ToString()).GetHashCode() ^ 
					((this.Email == null) ? string.Empty : this.Email.ToString()).GetHashCode() ^ 
					this.AdUserName.GetHashCode() ^ 
					((this.AdUserGuid == null) ? string.Empty : this.AdUserGuid.ToString()).GetHashCode() ^ 
					((this.SeCodeUserTypeId == null) ? string.Empty : this.SeCodeUserTypeId.ToString()).GetHashCode() ^ 
					((this.UserTableId == null) ? string.Empty : this.UserTableId.ToString()).GetHashCode() ^ 
					((this.ErpOrgTreeId == null) ? string.Empty : this.ErpOrgTreeId.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode() ^ 
					((this.SeUserLstId == null) ? string.Empty : this.SeUserLstId.ToString()).GetHashCode() ^ 
					((this.ForgetPasswordCode == null) ? string.Empty : this.ForgetPasswordCode.ToString()).GetHashCode() ^ 
					((this.ForgetPasswordCodeValidUntil == null) ? string.Empty : this.ForgetPasswordCodeValidUntil.ToString()).GetHashCode() ^ 
					((this.EnumId == null) ? string.Empty : this.EnumId.ToString()).GetHashCode() ^ 
					((this.UserMobile == null) ? string.Empty : this.UserMobile.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="SeUserBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(SeUserBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="SeUserBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="SeUserBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="SeUserBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(SeUserBase Object1, SeUserBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.SeUserId != Object2.SeUserId)
				equal = false;
			if ( Object1.SeCodeUserJobId != null && Object2.SeCodeUserJobId != null )
			{
				if (Object1.SeCodeUserJobId != Object2.SeCodeUserJobId)
					equal = false;
			}
			else if (Object1.SeCodeUserJobId == null ^ Object2.SeCodeUserJobId == null )
			{
				equal = false;
			}
			if ( Object1.SeCodeUserPlaceId != null && Object2.SeCodeUserPlaceId != null )
			{
				if (Object1.SeCodeUserPlaceId != Object2.SeCodeUserPlaceId)
					equal = false;
			}
			else if (Object1.SeCodeUserPlaceId == null ^ Object2.SeCodeUserPlaceId == null )
			{
				equal = false;
			}
			if (Object1.UserNameEn != Object2.UserNameEn)
				equal = false;
			if ( Object1.UserNameAr != null && Object2.UserNameAr != null )
			{
				if (Object1.UserNameAr != Object2.UserNameAr)
					equal = false;
			}
			else if (Object1.UserNameAr == null ^ Object2.UserNameAr == null )
			{
				equal = false;
			}
			if ( Object1.PwdExpireDate != null && Object2.PwdExpireDate != null )
			{
				if (Object1.PwdExpireDate != Object2.PwdExpireDate)
					equal = false;
			}
			else if (Object1.PwdExpireDate == null ^ Object2.PwdExpireDate == null )
			{
				equal = false;
			}
			if (Object1.SecurityQuestion != Object2.SecurityQuestion)
				equal = false;
			if (Object1.SequrityAns != Object2.SequrityAns)
				equal = false;
			if ( Object1.CreatorUserId != null && Object2.CreatorUserId != null )
			{
				if (Object1.CreatorUserId != Object2.CreatorUserId)
					equal = false;
			}
			else if (Object1.CreatorUserId == null ^ Object2.CreatorUserId == null )
			{
				equal = false;
			}
			if (Object1.CreationDate != Object2.CreationDate)
				equal = false;
			if ( Object1.LastLoginDate != null && Object2.LastLoginDate != null )
			{
				if (Object1.LastLoginDate != Object2.LastLoginDate)
					equal = false;
			}
			else if (Object1.LastLoginDate == null ^ Object2.LastLoginDate == null )
			{
				equal = false;
			}
			if (Object1.Status != Object2.Status)
				equal = false;
			if (Object1.FailedAttemptsNum != Object2.FailedAttemptsNum)
				equal = false;
			if ( Object1.ValidateMachine != null && Object2.ValidateMachine != null )
			{
				if (Object1.ValidateMachine != Object2.ValidateMachine)
					equal = false;
			}
			else if (Object1.ValidateMachine == null ^ Object2.ValidateMachine == null )
			{
				equal = false;
			}
			if ( Object1.Ip != null && Object2.Ip != null )
			{
				if (Object1.Ip != Object2.Ip)
					equal = false;
			}
			else if (Object1.Ip == null ^ Object2.Ip == null )
			{
				equal = false;
			}
			if ( Object1.Mac != null && Object2.Mac != null )
			{
				if (Object1.Mac != Object2.Mac)
					equal = false;
			}
			else if (Object1.Mac == null ^ Object2.Mac == null )
			{
				equal = false;
			}
			if ( Object1.IsLogin != null && Object2.IsLogin != null )
			{
				if (Object1.IsLogin != Object2.IsLogin)
					equal = false;
			}
			else if (Object1.IsLogin == null ^ Object2.IsLogin == null )
			{
				equal = false;
			}
			if ( Object1.Email != null && Object2.Email != null )
			{
				if (Object1.Email != Object2.Email)
					equal = false;
			}
			else if (Object1.Email == null ^ Object2.Email == null )
			{
				equal = false;
			}
			if (Object1.AdUserName != Object2.AdUserName)
				equal = false;
			if ( Object1.AdUserGuid != null && Object2.AdUserGuid != null )
			{
				if (Object1.AdUserGuid != Object2.AdUserGuid)
					equal = false;
			}
			else if (Object1.AdUserGuid == null ^ Object2.AdUserGuid == null )
			{
				equal = false;
			}
			if ( Object1.SeCodeUserTypeId != null && Object2.SeCodeUserTypeId != null )
			{
				if (Object1.SeCodeUserTypeId != Object2.SeCodeUserTypeId)
					equal = false;
			}
			else if (Object1.SeCodeUserTypeId == null ^ Object2.SeCodeUserTypeId == null )
			{
				equal = false;
			}
			if ( Object1.UserTableId != null && Object2.UserTableId != null )
			{
				if (Object1.UserTableId != Object2.UserTableId)
					equal = false;
			}
			else if (Object1.UserTableId == null ^ Object2.UserTableId == null )
			{
				equal = false;
			}
			if ( Object1.ErpOrgTreeId != null && Object2.ErpOrgTreeId != null )
			{
				if (Object1.ErpOrgTreeId != Object2.ErpOrgTreeId)
					equal = false;
			}
			else if (Object1.ErpOrgTreeId == null ^ Object2.ErpOrgTreeId == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
			if ( Object1.SeUserLstId != null && Object2.SeUserLstId != null )
			{
				if (Object1.SeUserLstId != Object2.SeUserLstId)
					equal = false;
			}
			else if (Object1.SeUserLstId == null ^ Object2.SeUserLstId == null )
			{
				equal = false;
			}
			if ( Object1.ForgetPasswordCode != null && Object2.ForgetPasswordCode != null )
			{
				if (Object1.ForgetPasswordCode != Object2.ForgetPasswordCode)
					equal = false;
			}
			else if (Object1.ForgetPasswordCode == null ^ Object2.ForgetPasswordCode == null )
			{
				equal = false;
			}
			if ( Object1.ForgetPasswordCodeValidUntil != null && Object2.ForgetPasswordCodeValidUntil != null )
			{
				if (Object1.ForgetPasswordCodeValidUntil != Object2.ForgetPasswordCodeValidUntil)
					equal = false;
			}
			else if (Object1.ForgetPasswordCodeValidUntil == null ^ Object2.ForgetPasswordCodeValidUntil == null )
			{
				equal = false;
			}
			if ( Object1.EnumId != null && Object2.EnumId != null )
			{
				if (Object1.EnumId != Object2.EnumId)
					equal = false;
			}
			else if (Object1.EnumId == null ^ Object2.EnumId == null )
			{
				equal = false;
			}
			if ( Object1.UserMobile != null && Object2.UserMobile != null )
			{
				if (Object1.UserMobile != Object2.UserMobile)
					equal = false;
			}
			else if (Object1.UserMobile == null ^ Object2.UserMobile == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((SeUserBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static SeUserComparer GetComparer()
        {
            return new SeUserComparer();
        }
        */

        // Comparer delegates back to SeUser
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(SeUser rhs, SeUserColumn which)
        {
            switch (which)
            {
            	
            	
            	case SeUserColumn.SeUserId:
            		return this.SeUserId.CompareTo(rhs.SeUserId);
            		
            		                 
            	
            	
            	case SeUserColumn.SeCodeUserJobId:
            		return this.SeCodeUserJobId.Value.CompareTo(rhs.SeCodeUserJobId.Value);
            		
            		                 
            	
            	
            	case SeUserColumn.SeCodeUserPlaceId:
            		return this.SeCodeUserPlaceId.Value.CompareTo(rhs.SeCodeUserPlaceId.Value);
            		
            		                 
            	
            	
            	case SeUserColumn.UserNameEn:
            		return this.UserNameEn.CompareTo(rhs.UserNameEn);
            		
            		                 
            	
            	
            	case SeUserColumn.UserNameAr:
            		return this.UserNameAr.CompareTo(rhs.UserNameAr);
            		
            		                 
            	
            	
            	case SeUserColumn.PwdExpireDate:
            		return this.PwdExpireDate.Value.CompareTo(rhs.PwdExpireDate.Value);
            		
            		                 
            	
            	
            	case SeUserColumn.SecurityQuestion:
            		return this.SecurityQuestion.CompareTo(rhs.SecurityQuestion);
            		
            		                 
            	
            	
            	case SeUserColumn.SequrityAns:
            		return this.SequrityAns.CompareTo(rhs.SequrityAns);
            		
            		                 
            	
            	
            	case SeUserColumn.CreatorUserId:
            		return this.CreatorUserId.Value.CompareTo(rhs.CreatorUserId.Value);
            		
            		                 
            	
            	
            	case SeUserColumn.CreationDate:
            		return this.CreationDate.CompareTo(rhs.CreationDate);
            		
            		                 
            	
            	
            	case SeUserColumn.LastLoginDate:
            		return this.LastLoginDate.Value.CompareTo(rhs.LastLoginDate.Value);
            		
            		                 
            	
            	
            	case SeUserColumn.Status:
            		return this.Status.CompareTo(rhs.Status);
            		
            		                 
            	
            	
            	case SeUserColumn.FailedAttemptsNum:
            		return this.FailedAttemptsNum.CompareTo(rhs.FailedAttemptsNum);
            		
            		                 
            	
            	
            	case SeUserColumn.ValidateMachine:
            		return this.ValidateMachine.Value.CompareTo(rhs.ValidateMachine.Value);
            		
            		                 
            	
            	
            	case SeUserColumn.Ip:
            		return this.Ip.CompareTo(rhs.Ip);
            		
            		                 
            	
            	
            	case SeUserColumn.Mac:
            		return this.Mac.CompareTo(rhs.Mac);
            		
            		                 
            	
            	
            	case SeUserColumn.IsLogin:
            		return this.IsLogin.Value.CompareTo(rhs.IsLogin.Value);
            		
            		                 
            	
            	
            	case SeUserColumn.Email:
            		return this.Email.CompareTo(rhs.Email);
            		
            		                 
            	
            	
            	case SeUserColumn.AdUserName:
            		return this.AdUserName.CompareTo(rhs.AdUserName);
            		
            		                 
            	
            	
            	case SeUserColumn.AdUserGuid:
            		return this.AdUserGuid.CompareTo(rhs.AdUserGuid);
            		
            		                 
            	
            	
            	case SeUserColumn.SeCodeUserTypeId:
            		return this.SeCodeUserTypeId.Value.CompareTo(rhs.SeCodeUserTypeId.Value);
            		
            		                 
            	
            	
            	case SeUserColumn.UserTableId:
            		return this.UserTableId.Value.CompareTo(rhs.UserTableId.Value);
            		
            		                 
            	
            	
            	case SeUserColumn.ErpOrgTreeId:
            		return this.ErpOrgTreeId.Value.CompareTo(rhs.ErpOrgTreeId.Value);
            		
            		                 
            	
            	
            	case SeUserColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            	
            	
            	case SeUserColumn.SeUserLstId:
            		return this.SeUserLstId.Value.CompareTo(rhs.SeUserLstId.Value);
            		
            		                 
            	
            	
            	case SeUserColumn.ForgetPasswordCode:
            		return this.ForgetPasswordCode.CompareTo(rhs.ForgetPasswordCode);
            		
            		                 
            	
            	
            	case SeUserColumn.ForgetPasswordCodeValidUntil:
            		return this.ForgetPasswordCodeValidUntil.Value.CompareTo(rhs.ForgetPasswordCodeValidUntil.Value);
            		
            		                 
            	
            	
            	case SeUserColumn.EnumId:
            		return this.EnumId.Value.CompareTo(rhs.EnumId.Value);
            		
            		                 
            	
            	
            	case SeUserColumn.UserMobile:
            		return this.UserMobile.CompareTo(rhs.UserMobile);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<SeUserKey> Members
		
		// member variable for the EntityId property
		private SeUserKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual SeUserKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new SeUserKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("SeUser")
					.Append("|").Append( this.SeUserId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{30}{29}- SeUserId: {0}{29}- SeCodeUserJobId: {1}{29}- SeCodeUserPlaceId: {2}{29}- UserNameEn: {3}{29}- UserNameAr: {4}{29}- PwdExpireDate: {5}{29}- SecurityQuestion: {6}{29}- SequrityAns: {7}{29}- CreatorUserId: {8}{29}- CreationDate: {9}{29}- LastLoginDate: {10}{29}- Status: {11}{29}- FailedAttemptsNum: {12}{29}- ValidateMachine: {13}{29}- Ip: {14}{29}- Mac: {15}{29}- IsLogin: {16}{29}- Email: {17}{29}- AdUserName: {18}{29}- AdUserGuid: {19}{29}- SeCodeUserTypeId: {20}{29}- UserTableId: {21}{29}- ErpOrgTreeId: {22}{29}- LastDate: {23}{29}- SeUserLstId: {24}{29}- ForgetPasswordCode: {25}{29}- ForgetPasswordCodeValidUntil: {26}{29}- EnumId: {27}{29}- UserMobile: {28}{29}{31}", 
				this.SeUserId,
				(this.SeCodeUserJobId == null) ? string.Empty : this.SeCodeUserJobId.ToString(),
				(this.SeCodeUserPlaceId == null) ? string.Empty : this.SeCodeUserPlaceId.ToString(),
				this.UserNameEn,
				(this.UserNameAr == null) ? string.Empty : this.UserNameAr.ToString(),
				(this.PwdExpireDate == null) ? string.Empty : this.PwdExpireDate.ToString(),
				this.SecurityQuestion,
				this.SequrityAns,
				(this.CreatorUserId == null) ? string.Empty : this.CreatorUserId.ToString(),
				this.CreationDate,
				(this.LastLoginDate == null) ? string.Empty : this.LastLoginDate.ToString(),
				this.Status,
				this.FailedAttemptsNum,
				(this.ValidateMachine == null) ? string.Empty : this.ValidateMachine.ToString(),
				(this.Ip == null) ? string.Empty : this.Ip.ToString(),
				(this.Mac == null) ? string.Empty : this.Mac.ToString(),
				(this.IsLogin == null) ? string.Empty : this.IsLogin.ToString(),
				(this.Email == null) ? string.Empty : this.Email.ToString(),
				this.AdUserName,
				(this.AdUserGuid == null) ? string.Empty : this.AdUserGuid.ToString(),
				(this.SeCodeUserTypeId == null) ? string.Empty : this.SeCodeUserTypeId.ToString(),
				(this.UserTableId == null) ? string.Empty : this.UserTableId.ToString(),
				(this.ErpOrgTreeId == null) ? string.Empty : this.ErpOrgTreeId.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				(this.SeUserLstId == null) ? string.Empty : this.SeUserLstId.ToString(),
				(this.ForgetPasswordCode == null) ? string.Empty : this.ForgetPasswordCode.ToString(),
				(this.ForgetPasswordCodeValidUntil == null) ? string.Empty : this.ForgetPasswordCodeValidUntil.ToString(),
				(this.EnumId == null) ? string.Empty : this.EnumId.ToString(),
				(this.UserMobile == null) ? string.Empty : this.UserMobile.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'SE_USER' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class SeUserEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// SE_USER_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "SE_USER"</remarks>
		public System.Decimal SeUserId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalSeUserId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// SE_CODE_USER_JOB_ID : XXX
		/// </summary>
		public System.Decimal?		  SeCodeUserJobId = null;
		
		/// <summary>
		/// SE_CODE_USER_PLACE_ID : XXX
		/// </summary>
		public System.Decimal?		  SeCodeUserPlaceId = null;
		
		/// <summary>
		/// USER_NAME_EN : 
		/// </summary>
		public System.String		  UserNameEn = string.Empty;
		
		/// <summary>
		/// USER_NAME_AR : 
		/// </summary>
		public System.String		  UserNameAr = null;
		
		/// <summary>
		/// PWD_EXPIRE_DATE : 
		/// </summary>
		public System.DateTime?		  PwdExpireDate = null;
		
		/// <summary>
		/// SECURITY_QUESTION : 
		/// </summary>
		public System.String		  SecurityQuestion = string.Empty;
		
		/// <summary>
		/// SEQURITY_ANS : 
		/// </summary>
		public System.String		  SequrityAns = string.Empty;
		
		/// <summary>
		/// CREATOR_USER_ID : 
		/// </summary>
		public System.Decimal?		  CreatorUserId = null;
		
		/// <summary>
		/// CREATION_DATE : 
		/// </summary>
		public System.DateTime		  CreationDate = DateTime.MinValue;
		
		/// <summary>
		/// LAST_LOGIN_DATE : 
		/// </summary>
		public System.DateTime?		  LastLoginDate = null;
		
		/// <summary>
		/// STATUS : 1:active - 0:not active
		/// </summary>
		public System.Decimal		  Status = 0.0m;
		
		/// <summary>
		/// FAILED_ATTEMPTS_NUM : 
		/// </summary>
		public System.Decimal		  FailedAttemptsNum = 0.0m;
		
		/// <summary>
		/// VALIDATE_MACHINE : 
		/// </summary>
		public System.Decimal?		  ValidateMachine = null;
		
		/// <summary>
		/// IP : 
		/// </summary>
		public System.String		  Ip = null;
		
		/// <summary>
		/// MAC : 
		/// </summary>
		public System.String		  Mac = null;
		
		/// <summary>
		/// IS_LOGIN : 
		/// </summary>
		public System.Decimal?		  IsLogin = null;
		
		/// <summary>
		/// Email : 
		/// </summary>
		public System.String		  Email = null;
		
		/// <summary>
		/// AD_USER_NAME : 
		/// </summary>
		public System.String		  AdUserName = string.Empty;
		
		/// <summary>
		/// AD_USER_GUID : 
		/// </summary>
		public System.String		  AdUserGuid = null;
		
		/// <summary>
		/// SE_CODE_USER_TYPE_ID : Default User Type
		/// </summary>
		public System.Decimal?		  SeCodeUserTypeId = null;
		
		/// <summary>
		/// USER_TABLE_ID : Default Related Table  ID
		/// </summary>
		public System.Decimal?		  UserTableId = null;
		
		/// <summary>
		/// ERP_ORG_TREE_ID : XXnot usedXX
		/// </summary>
		public System.Decimal?		  ErpOrgTreeId = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		
		/// <summary>
		/// SE_USER_LST_ID : 
		/// </summary>
		public System.Decimal?		  SeUserLstId = null;
		
		/// <summary>
		/// ForgetPasswordCode : 
		/// </summary>
		public System.String		  ForgetPasswordCode = null;
		
		/// <summary>
		/// ForgetPasswordCodeValidUntil : 
		/// </summary>
		public System.DateTime?		  ForgetPasswordCodeValidUntil = null;
		
		/// <summary>
		/// ENUM_ID : integration user 
		/// 		/// 1: Course_Reg, Course_reg_Assess
		/// </summary>
		public System.Int32?		  EnumId = null;
		
		/// <summary>
		/// USER_MOBILE : 
		/// </summary>
		public System.String		  UserMobile = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private ErpOrgTree _erpOrgTreeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="ErpOrgTree"/>.
		/// </summary>
		/// <value>The source ErpOrgTree for ErpOrgTreeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual ErpOrgTree ErpOrgTreeIdSource
      	{
            get { return this._erpOrgTreeIdSource; }
            set { this._erpOrgTreeIdSource = value; }
      	}
		private SeCodeUserJob _seCodeUserJobIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SeCodeUserJob"/>.
		/// </summary>
		/// <value>The source SeCodeUserJob for SeCodeUserJobId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SeCodeUserJob SeCodeUserJobIdSource
      	{
            get { return this._seCodeUserJobIdSource; }
            set { this._seCodeUserJobIdSource = value; }
      	}
		private SeCodeUserPlace _seCodeUserPlaceIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SeCodeUserPlace"/>.
		/// </summary>
		/// <value>The source SeCodeUserPlace for SeCodeUserPlaceId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SeCodeUserPlace SeCodeUserPlaceIdSource
      	{
            get { return this._seCodeUserPlaceIdSource; }
            set { this._seCodeUserPlaceIdSource = value; }
      	}
		private SeCodeUserType _seCodeUserTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SeCodeUserType"/>.
		/// </summary>
		/// <value>The source SeCodeUserType for SeCodeUserTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SeCodeUserType SeCodeUserTypeIdSource
      	{
            get { return this._seCodeUserTypeIdSource; }
            set { this._seCodeUserTypeIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region TrnsStudCarStkrCollection
		
		private TList<TrnsStudCarStkr> _trnsStudCarStkrSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _trnsStudCarStkrSeUserId
		/// </summary>
		
		public TList<TrnsStudCarStkr> TrnsStudCarStkrCollection
		{
			get
			{
				if (_trnsStudCarStkrSeUserId == null)
				{
				_trnsStudCarStkrSeUserId = new TList<TrnsStudCarStkr>();
				}
	
				return _trnsStudCarStkrSeUserId;
			}
			set { _trnsStudCarStkrSeUserId = value; }
		}
		
		#endregion

		#region FeeStudVoucherItemCollection
		
		private TList<FeeStudVoucherItem> _feeStudVoucherItemSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudVoucherItemSeUserId
		/// </summary>
		
		public TList<FeeStudVoucherItem> FeeStudVoucherItemCollection
		{
			get
			{
				if (_feeStudVoucherItemSeUserId == null)
				{
				_feeStudVoucherItemSeUserId = new TList<FeeStudVoucherItem>();
				}
	
				return _feeStudVoucherItemSeUserId;
			}
			set { _feeStudVoucherItemSeUserId = value; }
		}
		
		#endregion

		#region WfCrsRsltApproveCollection
		
		private TList<WfCrsRsltApprove> _wfCrsRsltApproveSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _wfCrsRsltApproveSeUserId
		/// </summary>
		
		public TList<WfCrsRsltApprove> WfCrsRsltApproveCollection
		{
			get
			{
				if (_wfCrsRsltApproveSeUserId == null)
				{
				_wfCrsRsltApproveSeUserId = new TList<WfCrsRsltApprove>();
				}
	
				return _wfCrsRsltApproveSeUserId;
			}
			set { _wfCrsRsltApproveSeUserId = value; }
		}
		
		#endregion

		#region SvCourseEvalCollection
		
		private TList<SvCourseEval> _svCourseEvalSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svCourseEvalSeUserId
		/// </summary>
		
		public TList<SvCourseEval> SvCourseEvalCollection
		{
			get
			{
				if (_svCourseEvalSeUserId == null)
				{
				_svCourseEvalSeUserId = new TList<SvCourseEval>();
				}
	
				return _svCourseEvalSeUserId;
			}
			set { _svCourseEvalSeUserId = value; }
		}
		
		#endregion

		#region SvUserTaskCollection
		
		private TList<SvUserTask> _svUserTaskSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svUserTaskSeUserId
		/// </summary>
		
		public TList<SvUserTask> SvUserTaskCollection
		{
			get
			{
				if (_svUserTaskSeUserId == null)
				{
				_svUserTaskSeUserId = new TList<SvUserTask>();
				}
	
				return _svUserTaskSeUserId;
			}
			set { _svUserTaskSeUserId = value; }
		}
		
		#endregion

		#region AccomWfRequestApproveCollection
		
		private TList<AccomWfRequestApprove> _accomWfRequestApproveSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomWfRequestApproveSeUserId
		/// </summary>
		
		public TList<AccomWfRequestApprove> AccomWfRequestApproveCollection
		{
			get
			{
				if (_accomWfRequestApproveSeUserId == null)
				{
				_accomWfRequestApproveSeUserId = new TList<AccomWfRequestApprove>();
				}
	
				return _accomWfRequestApproveSeUserId;
			}
			set { _accomWfRequestApproveSeUserId = value; }
		}
		
		#endregion

		#region EdOfferingCourseCollection
		
		private TList<EdOfferingCourse> _edOfferingCourseSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edOfferingCourseSeUserId
		/// </summary>
		
		public TList<EdOfferingCourse> EdOfferingCourseCollection
		{
			get
			{
				if (_edOfferingCourseSeUserId == null)
				{
				_edOfferingCourseSeUserId = new TList<EdOfferingCourse>();
				}
	
				return _edOfferingCourseSeUserId;
			}
			set { _edOfferingCourseSeUserId = value; }
		}
		
		#endregion

		#region AdmInboxCollectionGetByInMsgUserTo
		
		private TList<AdmInbox> _admInboxInMsgUserToGetByInMsgUserTo;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admInboxInMsgUserToGetByInMsgUserTo
		/// </summary>
		
		public TList<AdmInbox> AdmInboxCollectionGetByInMsgUserTo
		{
			get
			{
				if (_admInboxInMsgUserToGetByInMsgUserTo == null)
				{
				_admInboxInMsgUserToGetByInMsgUserTo = new TList<AdmInbox>();
				}
	
				return _admInboxInMsgUserToGetByInMsgUserTo;
			}
			set { _admInboxInMsgUserToGetByInMsgUserTo = value; }
		}
		
		#endregion

		#region EdCourseOutcomesTopicsCollection
		
		private TList<EdCourseOutcomesTopics> _edCourseOutcomesTopicsSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseOutcomesTopicsSeUserId
		/// </summary>
		
		public TList<EdCourseOutcomesTopics> EdCourseOutcomesTopicsCollection
		{
			get
			{
				if (_edCourseOutcomesTopicsSeUserId == null)
				{
				_edCourseOutcomesTopicsSeUserId = new TList<EdCourseOutcomesTopics>();
				}
	
				return _edCourseOutcomesTopicsSeUserId;
			}
			set { _edCourseOutcomesTopicsSeUserId = value; }
		}
		
		#endregion

		#region EdStudGuardCollection
		
		private TList<EdStudGuard> _edStudGuardSeUserPrntId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudGuardSeUserPrntId
		/// </summary>
		
		public TList<EdStudGuard> EdStudGuardCollection
		{
			get
			{
				if (_edStudGuardSeUserPrntId == null)
				{
				_edStudGuardSeUserPrntId = new TList<EdStudGuard>();
				}
	
				return _edStudGuardSeUserPrntId;
			}
			set { _edStudGuardSeUserPrntId = value; }
		}
		
		#endregion

		#region SvStaffEvlCollection
		
		private TList<SvStaffEvl> _svStaffEvlSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStaffEvlSeUserId
		/// </summary>
		
		public TList<SvStaffEvl> SvStaffEvlCollection
		{
			get
			{
				if (_svStaffEvlSeUserId == null)
				{
				_svStaffEvlSeUserId = new TList<SvStaffEvl>();
				}
	
				return _svStaffEvlSeUserId;
			}
			set { _svStaffEvlSeUserId = value; }
		}
		
		#endregion

		#region CoControlCollection
		
		private TList<CoControl> _coControlSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coControlSeUserId
		/// </summary>
		
		public TList<CoControl> CoControlCollection
		{
			get
			{
				if (_coControlSeUserId == null)
				{
				_coControlSeUserId = new TList<CoControl>();
				}
	
				return _coControlSeUserId;
			}
			set { _coControlSeUserId = value; }
		}
		
		#endregion

		#region AdmAppFeesCollection
		
		private TList<AdmAppFees> _admAppFeesSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppFeesSeUserId
		/// </summary>
		
		public TList<AdmAppFees> AdmAppFeesCollection
		{
			get
			{
				if (_admAppFeesSeUserId == null)
				{
				_admAppFeesSeUserId = new TList<AdmAppFees>();
				}
	
				return _admAppFeesSeUserId;
			}
			set { _admAppFeesSeUserId = value; }
		}
		
		#endregion

		#region EdAcadPlanCollection
		
		private TList<EdAcadPlan> _edAcadPlanSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edAcadPlanSeUserId
		/// </summary>
		
		public TList<EdAcadPlan> EdAcadPlanCollection
		{
			get
			{
				if (_edAcadPlanSeUserId == null)
				{
				_edAcadPlanSeUserId = new TList<EdAcadPlan>();
				}
	
				return _edAcadPlanSeUserId;
			}
			set { _edAcadPlanSeUserId = value; }
		}
		
		#endregion

		#region CoCrsRsltRaiseCollection
		
		private TList<CoCrsRsltRaise> _coCrsRsltRaiseSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coCrsRsltRaiseSeUserId
		/// </summary>
		
		public TList<CoCrsRsltRaise> CoCrsRsltRaiseCollection
		{
			get
			{
				if (_coCrsRsltRaiseSeUserId == null)
				{
				_coCrsRsltRaiseSeUserId = new TList<CoCrsRsltRaise>();
				}
	
				return _coCrsRsltRaiseSeUserId;
			}
			set { _coCrsRsltRaiseSeUserId = value; }
		}
		
		#endregion

		#region EdStudLatenessCollection
		
		private TList<EdStudLateness> _edStudLatenessSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudLatenessSeUserId
		/// </summary>
		
		public TList<EdStudLateness> EdStudLatenessCollection
		{
			get
			{
				if (_edStudLatenessSeUserId == null)
				{
				_edStudLatenessSeUserId = new TList<EdStudLateness>();
				}
	
				return _edStudLatenessSeUserId;
			}
			set { _edStudLatenessSeUserId = value; }
		}
		
		#endregion

		#region SvSrvyHdrCollection
		
		private TList<SvSrvyHdr> _svSrvyHdrSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svSrvyHdrSeUserId
		/// </summary>
		
		public TList<SvSrvyHdr> SvSrvyHdrCollection
		{
			get
			{
				if (_svSrvyHdrSeUserId == null)
				{
				_svSrvyHdrSeUserId = new TList<SvSrvyHdr>();
				}
	
				return _svSrvyHdrSeUserId;
			}
			set { _svSrvyHdrSeUserId = value; }
		}
		
		#endregion

		#region SvUserRefreshTokenCollection
		
		private TList<SvUserRefreshToken> _svUserRefreshTokenSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svUserRefreshTokenSeUserId
		/// </summary>
		
		public TList<SvUserRefreshToken> SvUserRefreshTokenCollection
		{
			get
			{
				if (_svUserRefreshTokenSeUserId == null)
				{
				_svUserRefreshTokenSeUserId = new TList<SvUserRefreshToken>();
				}
	
				return _svUserRefreshTokenSeUserId;
			}
			set { _svUserRefreshTokenSeUserId = value; }
		}
		
		#endregion

		#region FeeStudFeeItemCollection
		
		private TList<FeeStudFeeItem> _feeStudFeeItemSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudFeeItemSeUserId
		/// </summary>
		
		public TList<FeeStudFeeItem> FeeStudFeeItemCollection
		{
			get
			{
				if (_feeStudFeeItemSeUserId == null)
				{
				_feeStudFeeItemSeUserId = new TList<FeeStudFeeItem>();
				}
	
				return _feeStudFeeItemSeUserId;
			}
			set { _feeStudFeeItemSeUserId = value; }
		}
		
		#endregion

		#region AdmTansikMajorsCodesCollection
		
		private TList<AdmTansikMajorsCodes> _admTansikMajorsCodesSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admTansikMajorsCodesSeUserId
		/// </summary>
		
		public TList<AdmTansikMajorsCodes> AdmTansikMajorsCodesCollection
		{
			get
			{
				if (_admTansikMajorsCodesSeUserId == null)
				{
				_admTansikMajorsCodesSeUserId = new TList<AdmTansikMajorsCodes>();
				}
	
				return _admTansikMajorsCodesSeUserId;
			}
			set { _admTansikMajorsCodesSeUserId = value; }
		}
		
		#endregion

		#region SvStudLockerReqCollection
		
		private TList<SvStudLockerReq> _svStudLockerReqSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudLockerReqSeUserId
		/// </summary>
		
		public TList<SvStudLockerReq> SvStudLockerReqCollection
		{
			get
			{
				if (_svStudLockerReqSeUserId == null)
				{
				_svStudLockerReqSeUserId = new TList<SvStudLockerReq>();
				}
	
				return _svStudLockerReqSeUserId;
			}
			set { _svStudLockerReqSeUserId = value; }
		}
		
		#endregion

		#region EdStudNoteCollection
		
		private TList<EdStudNote> _edStudNoteSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudNoteSeUserId
		/// </summary>
		
		public TList<EdStudNote> EdStudNoteCollection
		{
			get
			{
				if (_edStudNoteSeUserId == null)
				{
				_edStudNoteSeUserId = new TList<EdStudNote>();
				}
	
				return _edStudNoteSeUserId;
			}
			set { _edStudNoteSeUserId = value; }
		}
		
		#endregion

		#region EdStudAcadWarnCollection
		
		private TList<EdStudAcadWarn> _edStudAcadWarnSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAcadWarnSeUserId
		/// </summary>
		
		public TList<EdStudAcadWarn> EdStudAcadWarnCollection
		{
			get
			{
				if (_edStudAcadWarnSeUserId == null)
				{
				_edStudAcadWarnSeUserId = new TList<EdStudAcadWarn>();
				}
	
				return _edStudAcadWarnSeUserId;
			}
			set { _edStudAcadWarnSeUserId = value; }
		}
		
		#endregion

		#region SeUserAccntCollection
		
		private TList<SeUserAccnt> _seUserAccntSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _seUserAccntSeUserId
		/// </summary>
		
		public TList<SeUserAccnt> SeUserAccntCollection
		{
			get
			{
				if (_seUserAccntSeUserId == null)
				{
				_seUserAccntSeUserId = new TList<SeUserAccnt>();
				}
	
				return _seUserAccntSeUserId;
			}
			set { _seUserAccntSeUserId = value; }
		}
		
		#endregion

		#region EdStudEnrollChangeCollectionGetBySeUserInsrtId
		
		private TList<EdStudEnrollChange> _edStudEnrollChangeSeUserInsrtIdGetBySeUserInsrtId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudEnrollChangeSeUserInsrtIdGetBySeUserInsrtId
		/// </summary>
		
		public TList<EdStudEnrollChange> EdStudEnrollChangeCollectionGetBySeUserInsrtId
		{
			get
			{
				if (_edStudEnrollChangeSeUserInsrtIdGetBySeUserInsrtId == null)
				{
				_edStudEnrollChangeSeUserInsrtIdGetBySeUserInsrtId = new TList<EdStudEnrollChange>();
				}
	
				return _edStudEnrollChangeSeUserInsrtIdGetBySeUserInsrtId;
			}
			set { _edStudEnrollChangeSeUserInsrtIdGetBySeUserInsrtId = value; }
		}
		
		#endregion

		#region EdStudCourseChngCollectionGetBySeUserId
		
		private TList<EdStudCourseChng> _edStudCourseChngSeUserInsrtIdGetBySeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseChngSeUserInsrtIdGetBySeUserId
		/// </summary>
		
		public TList<EdStudCourseChng> EdStudCourseChngCollectionGetBySeUserId
		{
			get
			{
				if (_edStudCourseChngSeUserInsrtIdGetBySeUserId == null)
				{
				_edStudCourseChngSeUserInsrtIdGetBySeUserId = new TList<EdStudCourseChng>();
				}
	
				return _edStudCourseChngSeUserInsrtIdGetBySeUserId;
			}
			set { _edStudCourseChngSeUserInsrtIdGetBySeUserId = value; }
		}
		
		#endregion

		#region EdOfferingCollectionGetByCrsSchdDeanApprvUsrId
		
		private TList<EdOffering> _edOfferingCrsSchdDeanApprvUsrIdGetByCrsSchdDeanApprvUsrId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edOfferingCrsSchdDeanApprvUsrIdGetByCrsSchdDeanApprvUsrId
		/// </summary>
		
		public TList<EdOffering> EdOfferingCollectionGetByCrsSchdDeanApprvUsrId
		{
			get
			{
				if (_edOfferingCrsSchdDeanApprvUsrIdGetByCrsSchdDeanApprvUsrId == null)
				{
				_edOfferingCrsSchdDeanApprvUsrIdGetByCrsSchdDeanApprvUsrId = new TList<EdOffering>();
				}
	
				return _edOfferingCrsSchdDeanApprvUsrIdGetByCrsSchdDeanApprvUsrId;
			}
			set { _edOfferingCrsSchdDeanApprvUsrIdGetByCrsSchdDeanApprvUsrId = value; }
		}
		
		#endregion

		#region CtrStudExpCollection
		
		private TList<CtrStudExp> _ctrStudExpSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _ctrStudExpSeUserId
		/// </summary>
		
		public TList<CtrStudExp> CtrStudExpCollection
		{
			get
			{
				if (_ctrStudExpSeUserId == null)
				{
				_ctrStudExpSeUserId = new TList<CtrStudExp>();
				}
	
				return _ctrStudExpSeUserId;
			}
			set { _ctrStudExpSeUserId = value; }
		}
		
		#endregion

		#region SvPollHdrCollection
		
		private TList<SvPollHdr> _svPollHdrSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svPollHdrSeUserId
		/// </summary>
		
		public TList<SvPollHdr> SvPollHdrCollection
		{
			get
			{
				if (_svPollHdrSeUserId == null)
				{
				_svPollHdrSeUserId = new TList<SvPollHdr>();
				}
	
				return _svPollHdrSeUserId;
			}
			set { _svPollHdrSeUserId = value; }
		}
		
		#endregion

		#region EdStudCourseGrdChngCollection
		
		private TList<EdStudCourseGrdChng> _edStudCourseGrdChngSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseGrdChngSeUserId
		/// </summary>
		
		public TList<EdStudCourseGrdChng> EdStudCourseGrdChngCollection
		{
			get
			{
				if (_edStudCourseGrdChngSeUserId == null)
				{
				_edStudCourseGrdChngSeUserId = new TList<EdStudCourseGrdChng>();
				}
	
				return _edStudCourseGrdChngSeUserId;
			}
			set { _edStudCourseGrdChngSeUserId = value; }
		}
		
		#endregion

		#region EdBylawCollection
		
		private TList<EdBylaw> _edBylawSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edBylawSeUserId
		/// </summary>
		
		public TList<EdBylaw> EdBylawCollection
		{
			get
			{
				if (_edBylawSeUserId == null)
				{
				_edBylawSeUserId = new TList<EdBylaw>();
				}
	
				return _edBylawSeUserId;
			}
			set { _edBylawSeUserId = value; }
		}
		
		#endregion

		#region AdmInboxCollectionGetByInMsgUserFrom
		
		private TList<AdmInbox> _admInboxInMsgUserToGetByInMsgUserFrom;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admInboxInMsgUserToGetByInMsgUserFrom
		/// </summary>
		
		public TList<AdmInbox> AdmInboxCollectionGetByInMsgUserFrom
		{
			get
			{
				if (_admInboxInMsgUserToGetByInMsgUserFrom == null)
				{
				_admInboxInMsgUserToGetByInMsgUserFrom = new TList<AdmInbox>();
				}
	
				return _admInboxInMsgUserToGetByInMsgUserFrom;
			}
			set { _admInboxInMsgUserToGetByInMsgUserFrom = value; }
		}
		
		#endregion

		#region EdStudAbsFwCollection
		
		private TList<EdStudAbsFw> _edStudAbsFwSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAbsFwSeUserId
		/// </summary>
		
		public TList<EdStudAbsFw> EdStudAbsFwCollection
		{
			get
			{
				if (_edStudAbsFwSeUserId == null)
				{
				_edStudAbsFwSeUserId = new TList<EdStudAbsFw>();
				}
	
				return _edStudAbsFwSeUserId;
			}
			set { _edStudAbsFwSeUserId = value; }
		}
		
		#endregion

		#region FeeItemTrnsBlncCollection
		
		private TList<FeeItemTrnsBlnc> _feeItemTrnsBlncSeUserTrnsId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeItemTrnsBlncSeUserTrnsId
		/// </summary>
		
		public TList<FeeItemTrnsBlnc> FeeItemTrnsBlncCollection
		{
			get
			{
				if (_feeItemTrnsBlncSeUserTrnsId == null)
				{
				_feeItemTrnsBlncSeUserTrnsId = new TList<FeeItemTrnsBlnc>();
				}
	
				return _feeItemTrnsBlncSeUserTrnsId;
			}
			set { _feeItemTrnsBlncSeUserTrnsId = value; }
		}
		
		#endregion

		#region EdOutcomeCollection
		
		private TList<EdOutcome> _edOutcomeSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edOutcomeSeUserId
		/// </summary>
		
		public TList<EdOutcome> EdOutcomeCollection
		{
			get
			{
				if (_edOutcomeSeUserId == null)
				{
				_edOutcomeSeUserId = new TList<EdOutcome>();
				}
	
				return _edOutcomeSeUserId;
			}
			set { _edOutcomeSeUserId = value; }
		}
		
		#endregion

		#region EdOfferingCollectionGetByExmSchdHodApprvUsrId
		
		private TList<EdOffering> _edOfferingExmSchdHodApprvUsrIdGetByExmSchdHodApprvUsrId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edOfferingExmSchdHodApprvUsrIdGetByExmSchdHodApprvUsrId
		/// </summary>
		
		public TList<EdOffering> EdOfferingCollectionGetByExmSchdHodApprvUsrId
		{
			get
			{
				if (_edOfferingExmSchdHodApprvUsrIdGetByExmSchdHodApprvUsrId == null)
				{
				_edOfferingExmSchdHodApprvUsrIdGetByExmSchdHodApprvUsrId = new TList<EdOffering>();
				}
	
				return _edOfferingExmSchdHodApprvUsrIdGetByExmSchdHodApprvUsrId;
			}
			set { _edOfferingExmSchdHodApprvUsrIdGetByExmSchdHodApprvUsrId = value; }
		}
		
		#endregion

		#region FeeStudVoucherCollectionGetBySeUserCnclId
		
		private TList<FeeStudVoucher> _feeStudVoucherSeUserCnclIdGetBySeUserCnclId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudVoucherSeUserCnclIdGetBySeUserCnclId
		/// </summary>
		
		public TList<FeeStudVoucher> FeeStudVoucherCollectionGetBySeUserCnclId
		{
			get
			{
				if (_feeStudVoucherSeUserCnclIdGetBySeUserCnclId == null)
				{
				_feeStudVoucherSeUserCnclIdGetBySeUserCnclId = new TList<FeeStudVoucher>();
				}
	
				return _feeStudVoucherSeUserCnclIdGetBySeUserCnclId;
			}
			set { _feeStudVoucherSeUserCnclIdGetBySeUserCnclId = value; }
		}
		
		#endregion

		#region EdStudCourseChngCollectionGetBySeUserInsrtId
		
		private TList<EdStudCourseChng> _edStudCourseChngSeUserInsrtIdGetBySeUserInsrtId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseChngSeUserInsrtIdGetBySeUserInsrtId
		/// </summary>
		
		public TList<EdStudCourseChng> EdStudCourseChngCollectionGetBySeUserInsrtId
		{
			get
			{
				if (_edStudCourseChngSeUserInsrtIdGetBySeUserInsrtId == null)
				{
				_edStudCourseChngSeUserInsrtIdGetBySeUserInsrtId = new TList<EdStudCourseChng>();
				}
	
				return _edStudCourseChngSeUserInsrtIdGetBySeUserInsrtId;
			}
			set { _edStudCourseChngSeUserInsrtIdGetBySeUserInsrtId = value; }
		}
		
		#endregion

		#region CtrStudOutCollection
		
		private TList<CtrStudOut> _ctrStudOutSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _ctrStudOutSeUserId
		/// </summary>
		
		public TList<CtrStudOut> CtrStudOutCollection
		{
			get
			{
				if (_ctrStudOutSeUserId == null)
				{
				_ctrStudOutSeUserId = new TList<CtrStudOut>();
				}
	
				return _ctrStudOutSeUserId;
			}
			set { _ctrStudOutSeUserId = value; }
		}
		
		#endregion

		#region ScScheduleDtlCollection
		
		private TList<ScScheduleDtl> _scScheduleDtlSeUserRsultApproveId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scScheduleDtlSeUserRsultApproveId
		/// </summary>
		
		public TList<ScScheduleDtl> ScScheduleDtlCollection
		{
			get
			{
				if (_scScheduleDtlSeUserRsultApproveId == null)
				{
				_scScheduleDtlSeUserRsultApproveId = new TList<ScScheduleDtl>();
				}
	
				return _scScheduleDtlSeUserRsultApproveId;
			}
			set { _scScheduleDtlSeUserRsultApproveId = value; }
		}
		
		#endregion

		#region CoContRoomMemberCollection
		
		private TList<CoContRoomMember> _coContRoomMemberSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coContRoomMemberSeUserId
		/// </summary>
		
		public TList<CoContRoomMember> CoContRoomMemberCollection
		{
			get
			{
				if (_coContRoomMemberSeUserId == null)
				{
				_coContRoomMemberSeUserId = new TList<CoContRoomMember>();
				}
	
				return _coContRoomMemberSeUserId;
			}
			set { _coContRoomMemberSeUserId = value; }
		}
		
		#endregion

		#region EdStudCourseRplcCollection
		
		private TList<EdStudCourseRplc> _edStudCourseRplcSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRplcSeUserId
		/// </summary>
		
		public TList<EdStudCourseRplc> EdStudCourseRplcCollection
		{
			get
			{
				if (_edStudCourseRplcSeUserId == null)
				{
				_edStudCourseRplcSeUserId = new TList<EdStudCourseRplc>();
				}
	
				return _edStudCourseRplcSeUserId;
			}
			set { _edStudCourseRplcSeUserId = value; }
		}
		
		#endregion

		#region EdStudCourseRegCollectionGetBySeUserId
		
		private TList<EdStudCourseReg> _edStudCourseRegSeUserApproveIdGetBySeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegSeUserApproveIdGetBySeUserId
		/// </summary>
		
		public TList<EdStudCourseReg> EdStudCourseRegCollectionGetBySeUserId
		{
			get
			{
				if (_edStudCourseRegSeUserApproveIdGetBySeUserId == null)
				{
				_edStudCourseRegSeUserApproveIdGetBySeUserId = new TList<EdStudCourseReg>();
				}
	
				return _edStudCourseRegSeUserApproveIdGetBySeUserId;
			}
			set { _edStudCourseRegSeUserApproveIdGetBySeUserId = value; }
		}
		
		#endregion

		#region AdmAppRegHistoryCollection
		
		private TList<AdmAppRegHistory> _admAppRegHistorySeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppRegHistorySeUserId
		/// </summary>
		
		public TList<AdmAppRegHistory> AdmAppRegHistoryCollection
		{
			get
			{
				if (_admAppRegHistorySeUserId == null)
				{
				_admAppRegHistorySeUserId = new TList<AdmAppRegHistory>();
				}
	
				return _admAppRegHistorySeUserId;
			}
			set { _admAppRegHistorySeUserId = value; }
		}
		
		#endregion

		#region UsrTopLinkCollection
		
		private TList<UsrTopLink> _usrTopLinkSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _usrTopLinkSeUserId
		/// </summary>
		
		public TList<UsrTopLink> UsrTopLinkCollection
		{
			get
			{
				if (_usrTopLinkSeUserId == null)
				{
				_usrTopLinkSeUserId = new TList<UsrTopLink>();
				}
	
				return _usrTopLinkSeUserId;
			}
			set { _usrTopLinkSeUserId = value; }
		}
		
		#endregion

		#region EdOfferingCollectionGetByCrsSchdHodApprvUsrId
		
		private TList<EdOffering> _edOfferingExmSchdDeanApprvUsrIdGetByCrsSchdHodApprvUsrId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edOfferingExmSchdDeanApprvUsrIdGetByCrsSchdHodApprvUsrId
		/// </summary>
		
		public TList<EdOffering> EdOfferingCollectionGetByCrsSchdHodApprvUsrId
		{
			get
			{
				if (_edOfferingExmSchdDeanApprvUsrIdGetByCrsSchdHodApprvUsrId == null)
				{
				_edOfferingExmSchdDeanApprvUsrIdGetByCrsSchdHodApprvUsrId = new TList<EdOffering>();
				}
	
				return _edOfferingExmSchdDeanApprvUsrIdGetByCrsSchdHodApprvUsrId;
			}
			set { _edOfferingExmSchdDeanApprvUsrIdGetByCrsSchdHodApprvUsrId = value; }
		}
		
		#endregion

		#region EdStudCourseRegCollectionGetBySeUserApproveId
		
		private TList<EdStudCourseReg> _edStudCourseRegSeUserApproveIdGetBySeUserApproveId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegSeUserApproveIdGetBySeUserApproveId
		/// </summary>
		
		public TList<EdStudCourseReg> EdStudCourseRegCollectionGetBySeUserApproveId
		{
			get
			{
				if (_edStudCourseRegSeUserApproveIdGetBySeUserApproveId == null)
				{
				_edStudCourseRegSeUserApproveIdGetBySeUserApproveId = new TList<EdStudCourseReg>();
				}
	
				return _edStudCourseRegSeUserApproveIdGetBySeUserApproveId;
			}
			set { _edStudCourseRegSeUserApproveIdGetBySeUserApproveId = value; }
		}
		
		#endregion

		#region SeUserCrsAssessCollection
		
		private TList<SeUserCrsAssess> _seUserCrsAssessSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _seUserCrsAssessSeUserId
		/// </summary>
		
		public TList<SeUserCrsAssess> SeUserCrsAssessCollection
		{
			get
			{
				if (_seUserCrsAssessSeUserId == null)
				{
				_seUserCrsAssessSeUserId = new TList<SeUserCrsAssess>();
				}
	
				return _seUserCrsAssessSeUserId;
			}
			set { _seUserCrsAssessSeUserId = value; }
		}
		
		#endregion

		#region SvUserMobTokenCollection
		
		private TList<SvUserMobToken> _svUserMobTokenSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svUserMobTokenSeUserId
		/// </summary>
		
		public TList<SvUserMobToken> SvUserMobTokenCollection
		{
			get
			{
				if (_svUserMobTokenSeUserId == null)
				{
				_svUserMobTokenSeUserId = new TList<SvUserMobToken>();
				}
	
				return _svUserMobTokenSeUserId;
			}
			set { _svUserMobTokenSeUserId = value; }
		}
		
		#endregion

		#region SeApplicationLogCollection
		
		private TList<SeApplicationLog> _seApplicationLogSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _seApplicationLogSeUserId
		/// </summary>
		
		public TList<SeApplicationLog> SeApplicationLogCollection
		{
			get
			{
				if (_seApplicationLogSeUserId == null)
				{
				_seApplicationLogSeUserId = new TList<SeApplicationLog>();
				}
	
				return _seApplicationLogSeUserId;
			}
			set { _seApplicationLogSeUserId = value; }
		}
		
		#endregion

		#region EdCourseOutcomesDtlCollection
		
		private TList<EdCourseOutcomesDtl> _edCourseOutcomesDtlSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseOutcomesDtlSeUserId
		/// </summary>
		
		public TList<EdCourseOutcomesDtl> EdCourseOutcomesDtlCollection
		{
			get
			{
				if (_edCourseOutcomesDtlSeUserId == null)
				{
				_edCourseOutcomesDtlSeUserId = new TList<EdCourseOutcomesDtl>();
				}
	
				return _edCourseOutcomesDtlSeUserId;
			}
			set { _edCourseOutcomesDtlSeUserId = value; }
		}
		
		#endregion

		#region AdmOutboxCollectionGetByOutMsgUserFrom
		
		private TList<AdmOutbox> _admOutboxOutMsgUserToGetByOutMsgUserFrom;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admOutboxOutMsgUserToGetByOutMsgUserFrom
		/// </summary>
		
		public TList<AdmOutbox> AdmOutboxCollectionGetByOutMsgUserFrom
		{
			get
			{
				if (_admOutboxOutMsgUserToGetByOutMsgUserFrom == null)
				{
				_admOutboxOutMsgUserToGetByOutMsgUserFrom = new TList<AdmOutbox>();
				}
	
				return _admOutboxOutMsgUserToGetByOutMsgUserFrom;
			}
			set { _admOutboxOutMsgUserToGetByOutMsgUserFrom = value; }
		}
		
		#endregion

		#region EdResultApproveCollection
		
		private TList<EdResultApprove> _edResultApproveSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edResultApproveSeUserId
		/// </summary>
		
		public TList<EdResultApprove> EdResultApproveCollection
		{
			get
			{
				if (_edResultApproveSeUserId == null)
				{
				_edResultApproveSeUserId = new TList<EdResultApprove>();
				}
	
				return _edResultApproveSeUserId;
			}
			set { _edResultApproveSeUserId = value; }
		}
		
		#endregion

		#region EdStudEnrollChangeCollectionGetBySeUserId
		
		private TList<EdStudEnrollChange> _edStudEnrollChangeSeUserInsrtIdGetBySeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudEnrollChangeSeUserInsrtIdGetBySeUserId
		/// </summary>
		
		public TList<EdStudEnrollChange> EdStudEnrollChangeCollectionGetBySeUserId
		{
			get
			{
				if (_edStudEnrollChangeSeUserInsrtIdGetBySeUserId == null)
				{
				_edStudEnrollChangeSeUserInsrtIdGetBySeUserId = new TList<EdStudEnrollChange>();
				}
	
				return _edStudEnrollChangeSeUserInsrtIdGetBySeUserId;
			}
			set { _edStudEnrollChangeSeUserInsrtIdGetBySeUserId = value; }
		}
		
		#endregion

		#region FeeStudVoucherCollectionGetBySeUserId
		
		private TList<FeeStudVoucher> _feeStudVoucherSeUserCnclIdGetBySeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudVoucherSeUserCnclIdGetBySeUserId
		/// </summary>
		
		public TList<FeeStudVoucher> FeeStudVoucherCollectionGetBySeUserId
		{
			get
			{
				if (_feeStudVoucherSeUserCnclIdGetBySeUserId == null)
				{
				_feeStudVoucherSeUserCnclIdGetBySeUserId = new TList<FeeStudVoucher>();
				}
	
				return _feeStudVoucherSeUserCnclIdGetBySeUserId;
			}
			set { _feeStudVoucherSeUserCnclIdGetBySeUserId = value; }
		}
		
		#endregion

		#region AdmTansikAppCodesCollection
		
		private TList<AdmTansikAppCodes> _admTansikAppCodesSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admTansikAppCodesSeUserId
		/// </summary>
		
		public TList<AdmTansikAppCodes> AdmTansikAppCodesCollection
		{
			get
			{
				if (_admTansikAppCodesSeUserId == null)
				{
				_admTansikAppCodesSeUserId = new TList<AdmTansikAppCodes>();
				}
	
				return _admTansikAppCodesSeUserId;
			}
			set { _admTansikAppCodesSeUserId = value; }
		}
		
		#endregion

		#region EdOfferingCollectionGetByExmSchdDeanApprvUsrId
		
		private TList<EdOffering> _edOfferingExmSchdDeanApprvUsrIdGetByExmSchdDeanApprvUsrId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edOfferingExmSchdDeanApprvUsrIdGetByExmSchdDeanApprvUsrId
		/// </summary>
		
		public TList<EdOffering> EdOfferingCollectionGetByExmSchdDeanApprvUsrId
		{
			get
			{
				if (_edOfferingExmSchdDeanApprvUsrIdGetByExmSchdDeanApprvUsrId == null)
				{
				_edOfferingExmSchdDeanApprvUsrIdGetByExmSchdDeanApprvUsrId = new TList<EdOffering>();
				}
	
				return _edOfferingExmSchdDeanApprvUsrIdGetByExmSchdDeanApprvUsrId;
			}
			set { _edOfferingExmSchdDeanApprvUsrIdGetByExmSchdDeanApprvUsrId = value; }
		}
		
		#endregion

		#region AdmTansikCodesCollection
		
		private TList<AdmTansikCodes> _admTansikCodesSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admTansikCodesSeUserId
		/// </summary>
		
		public TList<AdmTansikCodes> AdmTansikCodesCollection
		{
			get
			{
				if (_admTansikCodesSeUserId == null)
				{
				_admTansikCodesSeUserId = new TList<AdmTansikCodes>();
				}
	
				return _admTansikCodesSeUserId;
			}
			set { _admTansikCodesSeUserId = value; }
		}
		
		#endregion

		#region SvStudCompCollection
		
		private TList<SvStudComp> _svStudCompSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudCompSeUserId
		/// </summary>
		
		public TList<SvStudComp> SvStudCompCollection
		{
			get
			{
				if (_svStudCompSeUserId == null)
				{
				_svStudCompSeUserId = new TList<SvStudComp>();
				}
	
				return _svStudCompSeUserId;
			}
			set { _svStudCompSeUserId = value; }
		}
		
		#endregion

		#region EdStudExcuseCollection
		
		private TList<EdStudExcuse> _edStudExcuseSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudExcuseSeUserId
		/// </summary>
		
		public TList<EdStudExcuse> EdStudExcuseCollection
		{
			get
			{
				if (_edStudExcuseSeUserId == null)
				{
				_edStudExcuseSeUserId = new TList<EdStudExcuse>();
				}
	
				return _edStudExcuseSeUserId;
			}
			set { _edStudExcuseSeUserId = value; }
		}
		
		#endregion

		#region FeeFineDtlCollection
		
		private TList<FeeFineDtl> _feeFineDtlSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeFineDtlSeUserId
		/// </summary>
		
		public TList<FeeFineDtl> FeeFineDtlCollection
		{
			get
			{
				if (_feeFineDtlSeUserId == null)
				{
				_feeFineDtlSeUserId = new TList<FeeFineDtl>();
				}
	
				return _feeFineDtlSeUserId;
			}
			set { _feeFineDtlSeUserId = value; }
		}
		
		#endregion

		#region EdStudCourseRegAssessCollection
		
		private TList<EdStudCourseRegAssess> _edStudCourseRegAssessSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegAssessSeUserId
		/// </summary>
		
		public TList<EdStudCourseRegAssess> EdStudCourseRegAssessCollection
		{
			get
			{
				if (_edStudCourseRegAssessSeUserId == null)
				{
				_edStudCourseRegAssessSeUserId = new TList<EdStudCourseRegAssess>();
				}
	
				return _edStudCourseRegAssessSeUserId;
			}
			set { _edStudCourseRegAssessSeUserId = value; }
		}
		
		#endregion

		#region AdmOutboxCollectionGetByOutMsgUserTo
		
		private TList<AdmOutbox> _admOutboxOutMsgUserToGetByOutMsgUserTo;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admOutboxOutMsgUserToGetByOutMsgUserTo
		/// </summary>
		
		public TList<AdmOutbox> AdmOutboxCollectionGetByOutMsgUserTo
		{
			get
			{
				if (_admOutboxOutMsgUserToGetByOutMsgUserTo == null)
				{
				_admOutboxOutMsgUserToGetByOutMsgUserTo = new TList<AdmOutbox>();
				}
	
				return _admOutboxOutMsgUserToGetByOutMsgUserTo;
			}
			set { _admOutboxOutMsgUserToGetByOutMsgUserTo = value; }
		}
		
		#endregion

		#region SeBlockTransCollection
		
		private TList<SeBlockTrans> _seBlockTransSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _seBlockTransSeUserId
		/// </summary>
		
		public TList<SeBlockTrans> SeBlockTransCollection
		{
			get
			{
				if (_seBlockTransSeUserId == null)
				{
				_seBlockTransSeUserId = new TList<SeBlockTrans>();
				}
	
				return _seBlockTransSeUserId;
			}
			set { _seBlockTransSeUserId = value; }
		}
		
		#endregion

		#region IntegUserAdLogDtlCollection
		
		private TList<IntegUserAdLogDtl> _integUserAdLogDtlSeUserId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _integUserAdLogDtlSeUserId
		/// </summary>
		
		public TList<IntegUserAdLogDtl> IntegUserAdLogDtlCollection
		{
			get
			{
				if (_integUserAdLogDtlSeUserId == null)
				{
				_integUserAdLogDtlSeUserId = new TList<IntegUserAdLogDtl>();
				}
	
				return _integUserAdLogDtlSeUserId;
			}
			set { _integUserAdLogDtlSeUserId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			SeUserEntityData _tmp = new SeUserEntityData();
						
			_tmp.SeUserId = this.SeUserId;
			_tmp.OriginalSeUserId = this.OriginalSeUserId;
			
			_tmp.SeCodeUserJobId = this.SeCodeUserJobId;
			_tmp.SeCodeUserPlaceId = this.SeCodeUserPlaceId;
			_tmp.UserNameEn = this.UserNameEn;
			_tmp.UserNameAr = this.UserNameAr;
			_tmp.PwdExpireDate = this.PwdExpireDate;
			_tmp.SecurityQuestion = this.SecurityQuestion;
			_tmp.SequrityAns = this.SequrityAns;
			_tmp.CreatorUserId = this.CreatorUserId;
			_tmp.CreationDate = this.CreationDate;
			_tmp.LastLoginDate = this.LastLoginDate;
			_tmp.Status = this.Status;
			_tmp.FailedAttemptsNum = this.FailedAttemptsNum;
			_tmp.ValidateMachine = this.ValidateMachine;
			_tmp.Ip = this.Ip;
			_tmp.Mac = this.Mac;
			_tmp.IsLogin = this.IsLogin;
			_tmp.Email = this.Email;
			_tmp.AdUserName = this.AdUserName;
			_tmp.AdUserGuid = this.AdUserGuid;
			_tmp.SeCodeUserTypeId = this.SeCodeUserTypeId;
			_tmp.UserTableId = this.UserTableId;
			_tmp.ErpOrgTreeId = this.ErpOrgTreeId;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserLstId = this.SeUserLstId;
			_tmp.ForgetPasswordCode = this.ForgetPasswordCode;
			_tmp.ForgetPasswordCodeValidUntil = this.ForgetPasswordCodeValidUntil;
			_tmp.EnumId = this.EnumId;
			_tmp.UserMobile = this.UserMobile;
			
			#region Source Parent Composite Entities
			if (this.ErpOrgTreeIdSource != null)
				_tmp.ErpOrgTreeIdSource = MakeCopyOf(this.ErpOrgTreeIdSource) as ErpOrgTree;
			if (this.SeCodeUserJobIdSource != null)
				_tmp.SeCodeUserJobIdSource = MakeCopyOf(this.SeCodeUserJobIdSource) as SeCodeUserJob;
			if (this.SeCodeUserPlaceIdSource != null)
				_tmp.SeCodeUserPlaceIdSource = MakeCopyOf(this.SeCodeUserPlaceIdSource) as SeCodeUserPlace;
			if (this.SeCodeUserTypeIdSource != null)
				_tmp.SeCodeUserTypeIdSource = MakeCopyOf(this.SeCodeUserTypeIdSource) as SeCodeUserType;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._trnsStudCarStkrSeUserId != null)
				_tmp.TrnsStudCarStkrCollection = (TList<TrnsStudCarStkr>) MakeCopyOf(this.TrnsStudCarStkrCollection); 
			if (this._feeStudVoucherItemSeUserId != null)
				_tmp.FeeStudVoucherItemCollection = (TList<FeeStudVoucherItem>) MakeCopyOf(this.FeeStudVoucherItemCollection); 
			if (this._wfCrsRsltApproveSeUserId != null)
				_tmp.WfCrsRsltApproveCollection = (TList<WfCrsRsltApprove>) MakeCopyOf(this.WfCrsRsltApproveCollection); 
			if (this._svCourseEvalSeUserId != null)
				_tmp.SvCourseEvalCollection = (TList<SvCourseEval>) MakeCopyOf(this.SvCourseEvalCollection); 
			if (this._svUserTaskSeUserId != null)
				_tmp.SvUserTaskCollection = (TList<SvUserTask>) MakeCopyOf(this.SvUserTaskCollection); 
			if (this._accomWfRequestApproveSeUserId != null)
				_tmp.AccomWfRequestApproveCollection = (TList<AccomWfRequestApprove>) MakeCopyOf(this.AccomWfRequestApproveCollection); 
			if (this._edOfferingCourseSeUserId != null)
				_tmp.EdOfferingCourseCollection = (TList<EdOfferingCourse>) MakeCopyOf(this.EdOfferingCourseCollection); 
			if (this._admInboxInMsgUserToGetByInMsgUserTo != null)
				_tmp.AdmInboxCollectionGetByInMsgUserTo = (TList<AdmInbox>) MakeCopyOf(this.AdmInboxCollectionGetByInMsgUserTo); 
			if (this._edCourseOutcomesTopicsSeUserId != null)
				_tmp.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection); 
			if (this._edStudGuardSeUserPrntId != null)
				_tmp.EdStudGuardCollection = (TList<EdStudGuard>) MakeCopyOf(this.EdStudGuardCollection); 
			if (this._svStaffEvlSeUserId != null)
				_tmp.SvStaffEvlCollection = (TList<SvStaffEvl>) MakeCopyOf(this.SvStaffEvlCollection); 
			if (this._coControlSeUserId != null)
				_tmp.CoControlCollection = (TList<CoControl>) MakeCopyOf(this.CoControlCollection); 
			if (this._admAppFeesSeUserId != null)
				_tmp.AdmAppFeesCollection = (TList<AdmAppFees>) MakeCopyOf(this.AdmAppFeesCollection); 
			if (this._edAcadPlanSeUserId != null)
				_tmp.EdAcadPlanCollection = (TList<EdAcadPlan>) MakeCopyOf(this.EdAcadPlanCollection); 
			if (this._coCrsRsltRaiseSeUserId != null)
				_tmp.CoCrsRsltRaiseCollection = (TList<CoCrsRsltRaise>) MakeCopyOf(this.CoCrsRsltRaiseCollection); 
			if (this._edStudLatenessSeUserId != null)
				_tmp.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection); 
			if (this._svSrvyHdrSeUserId != null)
				_tmp.SvSrvyHdrCollection = (TList<SvSrvyHdr>) MakeCopyOf(this.SvSrvyHdrCollection); 
			if (this._svUserRefreshTokenSeUserId != null)
				_tmp.SvUserRefreshTokenCollection = (TList<SvUserRefreshToken>) MakeCopyOf(this.SvUserRefreshTokenCollection); 
			if (this._feeStudFeeItemSeUserId != null)
				_tmp.FeeStudFeeItemCollection = (TList<FeeStudFeeItem>) MakeCopyOf(this.FeeStudFeeItemCollection); 
			if (this._admTansikMajorsCodesSeUserId != null)
				_tmp.AdmTansikMajorsCodesCollection = (TList<AdmTansikMajorsCodes>) MakeCopyOf(this.AdmTansikMajorsCodesCollection); 
			if (this._svStudLockerReqSeUserId != null)
				_tmp.SvStudLockerReqCollection = (TList<SvStudLockerReq>) MakeCopyOf(this.SvStudLockerReqCollection); 
			if (this._edStudNoteSeUserId != null)
				_tmp.EdStudNoteCollection = (TList<EdStudNote>) MakeCopyOf(this.EdStudNoteCollection); 
			if (this._edStudAcadWarnSeUserId != null)
				_tmp.EdStudAcadWarnCollection = (TList<EdStudAcadWarn>) MakeCopyOf(this.EdStudAcadWarnCollection); 
			if (this._seUserAccntSeUserId != null)
				_tmp.SeUserAccntCollection = (TList<SeUserAccnt>) MakeCopyOf(this.SeUserAccntCollection); 
			if (this._edStudEnrollChangeSeUserInsrtIdGetBySeUserInsrtId != null)
				_tmp.EdStudEnrollChangeCollectionGetBySeUserInsrtId = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollectionGetBySeUserInsrtId); 
			if (this._edStudCourseChngSeUserInsrtIdGetBySeUserId != null)
				_tmp.EdStudCourseChngCollectionGetBySeUserId = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollectionGetBySeUserId); 
			if (this._edOfferingCrsSchdDeanApprvUsrIdGetByCrsSchdDeanApprvUsrId != null)
				_tmp.EdOfferingCollectionGetByCrsSchdDeanApprvUsrId = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollectionGetByCrsSchdDeanApprvUsrId); 
			if (this._ctrStudExpSeUserId != null)
				_tmp.CtrStudExpCollection = (TList<CtrStudExp>) MakeCopyOf(this.CtrStudExpCollection); 
			if (this._svPollHdrSeUserId != null)
				_tmp.SvPollHdrCollection = (TList<SvPollHdr>) MakeCopyOf(this.SvPollHdrCollection); 
			if (this._edStudCourseGrdChngSeUserId != null)
				_tmp.EdStudCourseGrdChngCollection = (TList<EdStudCourseGrdChng>) MakeCopyOf(this.EdStudCourseGrdChngCollection); 
			if (this._edBylawSeUserId != null)
				_tmp.EdBylawCollection = (TList<EdBylaw>) MakeCopyOf(this.EdBylawCollection); 
			if (this._admInboxInMsgUserToGetByInMsgUserFrom != null)
				_tmp.AdmInboxCollectionGetByInMsgUserFrom = (TList<AdmInbox>) MakeCopyOf(this.AdmInboxCollectionGetByInMsgUserFrom); 
			if (this._edStudAbsFwSeUserId != null)
				_tmp.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection); 
			if (this._feeItemTrnsBlncSeUserTrnsId != null)
				_tmp.FeeItemTrnsBlncCollection = (TList<FeeItemTrnsBlnc>) MakeCopyOf(this.FeeItemTrnsBlncCollection); 
			if (this._edOutcomeSeUserId != null)
				_tmp.EdOutcomeCollection = (TList<EdOutcome>) MakeCopyOf(this.EdOutcomeCollection); 
			if (this._edOfferingExmSchdHodApprvUsrIdGetByExmSchdHodApprvUsrId != null)
				_tmp.EdOfferingCollectionGetByExmSchdHodApprvUsrId = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollectionGetByExmSchdHodApprvUsrId); 
			if (this._feeStudVoucherSeUserCnclIdGetBySeUserCnclId != null)
				_tmp.FeeStudVoucherCollectionGetBySeUserCnclId = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollectionGetBySeUserCnclId); 
			if (this._edStudCourseChngSeUserInsrtIdGetBySeUserInsrtId != null)
				_tmp.EdStudCourseChngCollectionGetBySeUserInsrtId = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollectionGetBySeUserInsrtId); 
			if (this._ctrStudOutSeUserId != null)
				_tmp.CtrStudOutCollection = (TList<CtrStudOut>) MakeCopyOf(this.CtrStudOutCollection); 
			if (this._scScheduleDtlSeUserRsultApproveId != null)
				_tmp.ScScheduleDtlCollection = (TList<ScScheduleDtl>) MakeCopyOf(this.ScScheduleDtlCollection); 
			if (this._coContRoomMemberSeUserId != null)
				_tmp.CoContRoomMemberCollection = (TList<CoContRoomMember>) MakeCopyOf(this.CoContRoomMemberCollection); 
			if (this._edStudCourseRplcSeUserId != null)
				_tmp.EdStudCourseRplcCollection = (TList<EdStudCourseRplc>) MakeCopyOf(this.EdStudCourseRplcCollection); 
			if (this._edStudCourseRegSeUserApproveIdGetBySeUserId != null)
				_tmp.EdStudCourseRegCollectionGetBySeUserId = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollectionGetBySeUserId); 
			if (this._admAppRegHistorySeUserId != null)
				_tmp.AdmAppRegHistoryCollection = (TList<AdmAppRegHistory>) MakeCopyOf(this.AdmAppRegHistoryCollection); 
			if (this._usrTopLinkSeUserId != null)
				_tmp.UsrTopLinkCollection = (TList<UsrTopLink>) MakeCopyOf(this.UsrTopLinkCollection); 
			if (this._edOfferingExmSchdDeanApprvUsrIdGetByCrsSchdHodApprvUsrId != null)
				_tmp.EdOfferingCollectionGetByCrsSchdHodApprvUsrId = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollectionGetByCrsSchdHodApprvUsrId); 
			if (this._edStudCourseRegSeUserApproveIdGetBySeUserApproveId != null)
				_tmp.EdStudCourseRegCollectionGetBySeUserApproveId = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollectionGetBySeUserApproveId); 
			if (this._seUserCrsAssessSeUserId != null)
				_tmp.SeUserCrsAssessCollection = (TList<SeUserCrsAssess>) MakeCopyOf(this.SeUserCrsAssessCollection); 
			if (this._svUserMobTokenSeUserId != null)
				_tmp.SvUserMobTokenCollection = (TList<SvUserMobToken>) MakeCopyOf(this.SvUserMobTokenCollection); 
			if (this._seApplicationLogSeUserId != null)
				_tmp.SeApplicationLogCollection = (TList<SeApplicationLog>) MakeCopyOf(this.SeApplicationLogCollection); 
			if (this._edCourseOutcomesDtlSeUserId != null)
				_tmp.EdCourseOutcomesDtlCollection = (TList<EdCourseOutcomesDtl>) MakeCopyOf(this.EdCourseOutcomesDtlCollection); 
			if (this._admOutboxOutMsgUserToGetByOutMsgUserFrom != null)
				_tmp.AdmOutboxCollectionGetByOutMsgUserFrom = (TList<AdmOutbox>) MakeCopyOf(this.AdmOutboxCollectionGetByOutMsgUserFrom); 
			if (this._edResultApproveSeUserId != null)
				_tmp.EdResultApproveCollection = (TList<EdResultApprove>) MakeCopyOf(this.EdResultApproveCollection); 
			if (this._edStudEnrollChangeSeUserInsrtIdGetBySeUserId != null)
				_tmp.EdStudEnrollChangeCollectionGetBySeUserId = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollectionGetBySeUserId); 
			if (this._feeStudVoucherSeUserCnclIdGetBySeUserId != null)
				_tmp.FeeStudVoucherCollectionGetBySeUserId = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollectionGetBySeUserId); 
			if (this._admTansikAppCodesSeUserId != null)
				_tmp.AdmTansikAppCodesCollection = (TList<AdmTansikAppCodes>) MakeCopyOf(this.AdmTansikAppCodesCollection); 
			if (this._edOfferingExmSchdDeanApprvUsrIdGetByExmSchdDeanApprvUsrId != null)
				_tmp.EdOfferingCollectionGetByExmSchdDeanApprvUsrId = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollectionGetByExmSchdDeanApprvUsrId); 
			if (this._admTansikCodesSeUserId != null)
				_tmp.AdmTansikCodesCollection = (TList<AdmTansikCodes>) MakeCopyOf(this.AdmTansikCodesCollection); 
			if (this._svStudCompSeUserId != null)
				_tmp.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection); 
			if (this._edStudExcuseSeUserId != null)
				_tmp.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection); 
			if (this._feeFineDtlSeUserId != null)
				_tmp.FeeFineDtlCollection = (TList<FeeFineDtl>) MakeCopyOf(this.FeeFineDtlCollection); 
			if (this._edStudCourseRegAssessSeUserId != null)
				_tmp.EdStudCourseRegAssessCollection = (TList<EdStudCourseRegAssess>) MakeCopyOf(this.EdStudCourseRegAssessCollection); 
			if (this._admOutboxOutMsgUserToGetByOutMsgUserTo != null)
				_tmp.AdmOutboxCollectionGetByOutMsgUserTo = (TList<AdmOutbox>) MakeCopyOf(this.AdmOutboxCollectionGetByOutMsgUserTo); 
			if (this._seBlockTransSeUserId != null)
				_tmp.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection); 
			if (this._integUserAdLogDtlSeUserId != null)
				_tmp.IntegUserAdLogDtlCollection = (TList<IntegUserAdLogDtl>) MakeCopyOf(this.IntegUserAdLogDtlCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			SeUserEntityData _tmp = new SeUserEntityData();
						
			_tmp.SeUserId = this.SeUserId;
			_tmp.OriginalSeUserId = this.OriginalSeUserId;
			
			_tmp.SeCodeUserJobId = this.SeCodeUserJobId;
			_tmp.SeCodeUserPlaceId = this.SeCodeUserPlaceId;
			_tmp.UserNameEn = this.UserNameEn;
			_tmp.UserNameAr = this.UserNameAr;
			_tmp.PwdExpireDate = this.PwdExpireDate;
			_tmp.SecurityQuestion = this.SecurityQuestion;
			_tmp.SequrityAns = this.SequrityAns;
			_tmp.CreatorUserId = this.CreatorUserId;
			_tmp.CreationDate = this.CreationDate;
			_tmp.LastLoginDate = this.LastLoginDate;
			_tmp.Status = this.Status;
			_tmp.FailedAttemptsNum = this.FailedAttemptsNum;
			_tmp.ValidateMachine = this.ValidateMachine;
			_tmp.Ip = this.Ip;
			_tmp.Mac = this.Mac;
			_tmp.IsLogin = this.IsLogin;
			_tmp.Email = this.Email;
			_tmp.AdUserName = this.AdUserName;
			_tmp.AdUserGuid = this.AdUserGuid;
			_tmp.SeCodeUserTypeId = this.SeCodeUserTypeId;
			_tmp.UserTableId = this.UserTableId;
			_tmp.ErpOrgTreeId = this.ErpOrgTreeId;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserLstId = this.SeUserLstId;
			_tmp.ForgetPasswordCode = this.ForgetPasswordCode;
			_tmp.ForgetPasswordCodeValidUntil = this.ForgetPasswordCodeValidUntil;
			_tmp.EnumId = this.EnumId;
			_tmp.UserMobile = this.UserMobile;
			
			#region Source Parent Composite Entities
			if (this.ErpOrgTreeIdSource != null && existingCopies.Contains(this.ErpOrgTreeIdSource))
				_tmp.ErpOrgTreeIdSource = existingCopies[this.ErpOrgTreeIdSource] as ErpOrgTree;
			else
				_tmp.ErpOrgTreeIdSource = MakeCopyOf(this.ErpOrgTreeIdSource, existingCopies) as ErpOrgTree;
			if (this.SeCodeUserJobIdSource != null && existingCopies.Contains(this.SeCodeUserJobIdSource))
				_tmp.SeCodeUserJobIdSource = existingCopies[this.SeCodeUserJobIdSource] as SeCodeUserJob;
			else
				_tmp.SeCodeUserJobIdSource = MakeCopyOf(this.SeCodeUserJobIdSource, existingCopies) as SeCodeUserJob;
			if (this.SeCodeUserPlaceIdSource != null && existingCopies.Contains(this.SeCodeUserPlaceIdSource))
				_tmp.SeCodeUserPlaceIdSource = existingCopies[this.SeCodeUserPlaceIdSource] as SeCodeUserPlace;
			else
				_tmp.SeCodeUserPlaceIdSource = MakeCopyOf(this.SeCodeUserPlaceIdSource, existingCopies) as SeCodeUserPlace;
			if (this.SeCodeUserTypeIdSource != null && existingCopies.Contains(this.SeCodeUserTypeIdSource))
				_tmp.SeCodeUserTypeIdSource = existingCopies[this.SeCodeUserTypeIdSource] as SeCodeUserType;
			else
				_tmp.SeCodeUserTypeIdSource = MakeCopyOf(this.SeCodeUserTypeIdSource, existingCopies) as SeCodeUserType;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.TrnsStudCarStkrCollection = (TList<TrnsStudCarStkr>) MakeCopyOf(this.TrnsStudCarStkrCollection, existingCopies); 
			_tmp.FeeStudVoucherItemCollection = (TList<FeeStudVoucherItem>) MakeCopyOf(this.FeeStudVoucherItemCollection, existingCopies); 
			_tmp.WfCrsRsltApproveCollection = (TList<WfCrsRsltApprove>) MakeCopyOf(this.WfCrsRsltApproveCollection, existingCopies); 
			_tmp.SvCourseEvalCollection = (TList<SvCourseEval>) MakeCopyOf(this.SvCourseEvalCollection, existingCopies); 
			_tmp.SvUserTaskCollection = (TList<SvUserTask>) MakeCopyOf(this.SvUserTaskCollection, existingCopies); 
			_tmp.AccomWfRequestApproveCollection = (TList<AccomWfRequestApprove>) MakeCopyOf(this.AccomWfRequestApproveCollection, existingCopies); 
			_tmp.EdOfferingCourseCollection = (TList<EdOfferingCourse>) MakeCopyOf(this.EdOfferingCourseCollection, existingCopies); 
			_tmp.AdmInboxCollectionGetByInMsgUserTo = (TList<AdmInbox>) MakeCopyOf(this.AdmInboxCollectionGetByInMsgUserTo, existingCopies); 
			_tmp.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection, existingCopies); 
			_tmp.EdStudGuardCollection = (TList<EdStudGuard>) MakeCopyOf(this.EdStudGuardCollection, existingCopies); 
			_tmp.SvStaffEvlCollection = (TList<SvStaffEvl>) MakeCopyOf(this.SvStaffEvlCollection, existingCopies); 
			_tmp.CoControlCollection = (TList<CoControl>) MakeCopyOf(this.CoControlCollection, existingCopies); 
			_tmp.AdmAppFeesCollection = (TList<AdmAppFees>) MakeCopyOf(this.AdmAppFeesCollection, existingCopies); 
			_tmp.EdAcadPlanCollection = (TList<EdAcadPlan>) MakeCopyOf(this.EdAcadPlanCollection, existingCopies); 
			_tmp.CoCrsRsltRaiseCollection = (TList<CoCrsRsltRaise>) MakeCopyOf(this.CoCrsRsltRaiseCollection, existingCopies); 
			_tmp.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection, existingCopies); 
			_tmp.SvSrvyHdrCollection = (TList<SvSrvyHdr>) MakeCopyOf(this.SvSrvyHdrCollection, existingCopies); 
			_tmp.SvUserRefreshTokenCollection = (TList<SvUserRefreshToken>) MakeCopyOf(this.SvUserRefreshTokenCollection, existingCopies); 
			_tmp.FeeStudFeeItemCollection = (TList<FeeStudFeeItem>) MakeCopyOf(this.FeeStudFeeItemCollection, existingCopies); 
			_tmp.AdmTansikMajorsCodesCollection = (TList<AdmTansikMajorsCodes>) MakeCopyOf(this.AdmTansikMajorsCodesCollection, existingCopies); 
			_tmp.SvStudLockerReqCollection = (TList<SvStudLockerReq>) MakeCopyOf(this.SvStudLockerReqCollection, existingCopies); 
			_tmp.EdStudNoteCollection = (TList<EdStudNote>) MakeCopyOf(this.EdStudNoteCollection, existingCopies); 
			_tmp.EdStudAcadWarnCollection = (TList<EdStudAcadWarn>) MakeCopyOf(this.EdStudAcadWarnCollection, existingCopies); 
			_tmp.SeUserAccntCollection = (TList<SeUserAccnt>) MakeCopyOf(this.SeUserAccntCollection, existingCopies); 
			_tmp.EdStudEnrollChangeCollectionGetBySeUserInsrtId = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollectionGetBySeUserInsrtId, existingCopies); 
			_tmp.EdStudCourseChngCollectionGetBySeUserId = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollectionGetBySeUserId, existingCopies); 
			_tmp.EdOfferingCollectionGetByCrsSchdDeanApprvUsrId = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollectionGetByCrsSchdDeanApprvUsrId, existingCopies); 
			_tmp.CtrStudExpCollection = (TList<CtrStudExp>) MakeCopyOf(this.CtrStudExpCollection, existingCopies); 
			_tmp.SvPollHdrCollection = (TList<SvPollHdr>) MakeCopyOf(this.SvPollHdrCollection, existingCopies); 
			_tmp.EdStudCourseGrdChngCollection = (TList<EdStudCourseGrdChng>) MakeCopyOf(this.EdStudCourseGrdChngCollection, existingCopies); 
			_tmp.EdBylawCollection = (TList<EdBylaw>) MakeCopyOf(this.EdBylawCollection, existingCopies); 
			_tmp.AdmInboxCollectionGetByInMsgUserFrom = (TList<AdmInbox>) MakeCopyOf(this.AdmInboxCollectionGetByInMsgUserFrom, existingCopies); 
			_tmp.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection, existingCopies); 
			_tmp.FeeItemTrnsBlncCollection = (TList<FeeItemTrnsBlnc>) MakeCopyOf(this.FeeItemTrnsBlncCollection, existingCopies); 
			_tmp.EdOutcomeCollection = (TList<EdOutcome>) MakeCopyOf(this.EdOutcomeCollection, existingCopies); 
			_tmp.EdOfferingCollectionGetByExmSchdHodApprvUsrId = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollectionGetByExmSchdHodApprvUsrId, existingCopies); 
			_tmp.FeeStudVoucherCollectionGetBySeUserCnclId = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollectionGetBySeUserCnclId, existingCopies); 
			_tmp.EdStudCourseChngCollectionGetBySeUserInsrtId = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollectionGetBySeUserInsrtId, existingCopies); 
			_tmp.CtrStudOutCollection = (TList<CtrStudOut>) MakeCopyOf(this.CtrStudOutCollection, existingCopies); 
			_tmp.ScScheduleDtlCollection = (TList<ScScheduleDtl>) MakeCopyOf(this.ScScheduleDtlCollection, existingCopies); 
			_tmp.CoContRoomMemberCollection = (TList<CoContRoomMember>) MakeCopyOf(this.CoContRoomMemberCollection, existingCopies); 
			_tmp.EdStudCourseRplcCollection = (TList<EdStudCourseRplc>) MakeCopyOf(this.EdStudCourseRplcCollection, existingCopies); 
			_tmp.EdStudCourseRegCollectionGetBySeUserId = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollectionGetBySeUserId, existingCopies); 
			_tmp.AdmAppRegHistoryCollection = (TList<AdmAppRegHistory>) MakeCopyOf(this.AdmAppRegHistoryCollection, existingCopies); 
			_tmp.UsrTopLinkCollection = (TList<UsrTopLink>) MakeCopyOf(this.UsrTopLinkCollection, existingCopies); 
			_tmp.EdOfferingCollectionGetByCrsSchdHodApprvUsrId = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollectionGetByCrsSchdHodApprvUsrId, existingCopies); 
			_tmp.EdStudCourseRegCollectionGetBySeUserApproveId = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollectionGetBySeUserApproveId, existingCopies); 
			_tmp.SeUserCrsAssessCollection = (TList<SeUserCrsAssess>) MakeCopyOf(this.SeUserCrsAssessCollection, existingCopies); 
			_tmp.SvUserMobTokenCollection = (TList<SvUserMobToken>) MakeCopyOf(this.SvUserMobTokenCollection, existingCopies); 
			_tmp.SeApplicationLogCollection = (TList<SeApplicationLog>) MakeCopyOf(this.SeApplicationLogCollection, existingCopies); 
			_tmp.EdCourseOutcomesDtlCollection = (TList<EdCourseOutcomesDtl>) MakeCopyOf(this.EdCourseOutcomesDtlCollection, existingCopies); 
			_tmp.AdmOutboxCollectionGetByOutMsgUserFrom = (TList<AdmOutbox>) MakeCopyOf(this.AdmOutboxCollectionGetByOutMsgUserFrom, existingCopies); 
			_tmp.EdResultApproveCollection = (TList<EdResultApprove>) MakeCopyOf(this.EdResultApproveCollection, existingCopies); 
			_tmp.EdStudEnrollChangeCollectionGetBySeUserId = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollectionGetBySeUserId, existingCopies); 
			_tmp.FeeStudVoucherCollectionGetBySeUserId = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollectionGetBySeUserId, existingCopies); 
			_tmp.AdmTansikAppCodesCollection = (TList<AdmTansikAppCodes>) MakeCopyOf(this.AdmTansikAppCodesCollection, existingCopies); 
			_tmp.EdOfferingCollectionGetByExmSchdDeanApprvUsrId = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollectionGetByExmSchdDeanApprvUsrId, existingCopies); 
			_tmp.AdmTansikCodesCollection = (TList<AdmTansikCodes>) MakeCopyOf(this.AdmTansikCodesCollection, existingCopies); 
			_tmp.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection, existingCopies); 
			_tmp.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection, existingCopies); 
			_tmp.FeeFineDtlCollection = (TList<FeeFineDtl>) MakeCopyOf(this.FeeFineDtlCollection, existingCopies); 
			_tmp.EdStudCourseRegAssessCollection = (TList<EdStudCourseRegAssess>) MakeCopyOf(this.EdStudCourseRegAssessCollection, existingCopies); 
			_tmp.AdmOutboxCollectionGetByOutMsgUserTo = (TList<AdmOutbox>) MakeCopyOf(this.AdmOutboxCollectionGetByOutMsgUserTo, existingCopies); 
			_tmp.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection, existingCopies); 
			_tmp.IntegUserAdLogDtlCollection = (TList<IntegUserAdLogDtl>) MakeCopyOf(this.IntegUserAdLogDtlCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SeUserColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(SeUserColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SeUserColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(SeUserColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SeUserColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(SeUserColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				SeUserEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new SeUserEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SeUserColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(SeUserColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				SeUserEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new SeUserEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region SeUserEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="SeUser"/> object.
	/// </remarks>
	public class SeUserEventArgs : System.EventArgs
	{
		private SeUserColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the SeUserEventArgs class.
		///</summary>
		public SeUserEventArgs(SeUserColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the SeUserEventArgs class.
		///</summary>
		public SeUserEventArgs(SeUserColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The SeUserColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="SeUserColumn" />
		public SeUserColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all SeUser related events.
	///</summary>
	public delegate void SeUserEventHandler(object sender, SeUserEventArgs e);
	
	#region SeUserComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class SeUserComparer : System.Collections.Generic.IComparer<SeUser>
	{
		SeUserColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:SeUserComparer"/> class.
        /// </summary>
		public SeUserComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:SeUserComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public SeUserComparer(SeUserColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="SeUser"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="SeUser"/> to compare.</param>
        /// <param name="b">The second <c>SeUser</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(SeUser a, SeUser b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(SeUser entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(SeUser a, SeUser b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public SeUserColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region SeUserKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="SeUser"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class SeUserKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the SeUserKey class.
		/// </summary>
		public SeUserKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the SeUserKey class.
		/// </summary>
		public SeUserKey(SeUserBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.SeUserId = entity.SeUserId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the SeUserKey class.
		/// </summary>
		public SeUserKey(System.Decimal _seUserId)
		{
			#region Init Properties

			this.SeUserId = _seUserId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private SeUserBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public SeUserBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the SeUserId property
		private System.Decimal _seUserId;
		
		/// <summary>
		/// Gets or sets the SeUserId property.
		/// </summary>
		public System.Decimal SeUserId
		{
			get { return _seUserId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.SeUserId = value;
				
				_seUserId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				SeUserId = ( values["SeUserId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["SeUserId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("SeUserId", SeUserId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("SeUserId: {0}{1}",
								SeUserId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region SeUserColumn Enum
	
	/// <summary>
	/// Enumerate the SeUser columns.
	/// </summary>
	[Serializable]
	public enum SeUserColumn : int
	{
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		SeUserId = 1,
		/// <summary>
		/// SeCodeUserJobId : XXX
		/// </summary>
		[EnumTextValue("SE_CODE_USER_JOB_ID")]
		[ColumnEnum("SE_CODE_USER_JOB_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeCodeUserJobId = 2,
		/// <summary>
		/// SeCodeUserPlaceId : XXX
		/// </summary>
		[EnumTextValue("SE_CODE_USER_PLACE_ID")]
		[ColumnEnum("SE_CODE_USER_PLACE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeCodeUserPlaceId = 3,
		/// <summary>
		/// UserNameEn : 
		/// </summary>
		[EnumTextValue("USER_NAME_EN")]
		[ColumnEnum("USER_NAME_EN", typeof(System.String), System.Data.DbType.String, false, false, false, 150)]
		UserNameEn = 4,
		/// <summary>
		/// UserNameAr : 
		/// </summary>
		[EnumTextValue("USER_NAME_AR")]
		[ColumnEnum("USER_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		UserNameAr = 5,
		/// <summary>
		/// PwdExpireDate : 
		/// </summary>
		[EnumTextValue("PWD_EXPIRE_DATE")]
		[ColumnEnum("PWD_EXPIRE_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		PwdExpireDate = 6,
		/// <summary>
		/// SecurityQuestion : 
		/// </summary>
		[EnumTextValue("SECURITY_QUESTION")]
		[ColumnEnum("SECURITY_QUESTION", typeof(System.String), System.Data.DbType.String, false, false, false, 200)]
		SecurityQuestion = 7,
		/// <summary>
		/// SequrityAns : 
		/// </summary>
		[EnumTextValue("SEQURITY_ANS")]
		[ColumnEnum("SEQURITY_ANS", typeof(System.String), System.Data.DbType.String, false, false, false, 200)]
		SequrityAns = 8,
		/// <summary>
		/// CreatorUserId : 
		/// </summary>
		[EnumTextValue("CREATOR_USER_ID")]
		[ColumnEnum("CREATOR_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CreatorUserId = 9,
		/// <summary>
		/// CreationDate : 
		/// </summary>
		[EnumTextValue("CREATION_DATE")]
		[ColumnEnum("CREATION_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		CreationDate = 10,
		/// <summary>
		/// LastLoginDate : 
		/// </summary>
		[EnumTextValue("LAST_LOGIN_DATE")]
		[ColumnEnum("LAST_LOGIN_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastLoginDate = 11,
		/// <summary>
		/// Status : 1:active - 0:not active
		/// </summary>
		[EnumTextValue("STATUS")]
		[ColumnEnum("STATUS", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		Status = 12,
		/// <summary>
		/// FailedAttemptsNum : 
		/// </summary>
		[EnumTextValue("FAILED_ATTEMPTS_NUM")]
		[ColumnEnum("FAILED_ATTEMPTS_NUM", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		FailedAttemptsNum = 13,
		/// <summary>
		/// ValidateMachine : 
		/// </summary>
		[EnumTextValue("VALIDATE_MACHINE")]
		[ColumnEnum("VALIDATE_MACHINE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ValidateMachine = 14,
		/// <summary>
		/// Ip : 
		/// </summary>
		[EnumTextValue("IP")]
		[ColumnEnum("IP", typeof(System.String), System.Data.DbType.String, false, false, true, 20)]
		Ip = 15,
		/// <summary>
		/// Mac : 
		/// </summary>
		[EnumTextValue("MAC")]
		[ColumnEnum("MAC", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Mac = 16,
		/// <summary>
		/// IsLogin : 
		/// </summary>
		[EnumTextValue("IS_LOGIN")]
		[ColumnEnum("IS_LOGIN", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		IsLogin = 17,
		/// <summary>
		/// Email : 
		/// </summary>
		[EnumTextValue("Email")]
		[ColumnEnum("Email", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		Email = 18,
		/// <summary>
		/// AdUserName : 
		/// </summary>
		[EnumTextValue("AD_USER_NAME")]
		[ColumnEnum("AD_USER_NAME", typeof(System.String), System.Data.DbType.String, false, false, false, 150)]
		AdUserName = 19,
		/// <summary>
		/// AdUserGuid : 
		/// </summary>
		[EnumTextValue("AD_USER_GUID")]
		[ColumnEnum("AD_USER_GUID", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		AdUserGuid = 20,
		/// <summary>
		/// SeCodeUserTypeId : Default User Type
		/// </summary>
		[EnumTextValue("SE_CODE_USER_TYPE_ID")]
		[ColumnEnum("SE_CODE_USER_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeCodeUserTypeId = 21,
		/// <summary>
		/// UserTableId : Default Related Table  ID
		/// </summary>
		[EnumTextValue("USER_TABLE_ID")]
		[ColumnEnum("USER_TABLE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		UserTableId = 22,
		/// <summary>
		/// ErpOrgTreeId : XXnot usedXX
		/// </summary>
		[EnumTextValue("ERP_ORG_TREE_ID")]
		[ColumnEnum("ERP_ORG_TREE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ErpOrgTreeId = 23,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 24,
		/// <summary>
		/// SeUserLstId : 
		/// </summary>
		[EnumTextValue("SE_USER_LST_ID")]
		[ColumnEnum("SE_USER_LST_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserLstId = 25,
		/// <summary>
		/// ForgetPasswordCode : 
		/// </summary>
		[EnumTextValue("ForgetPasswordCode")]
		[ColumnEnum("ForgetPasswordCode", typeof(System.String), System.Data.DbType.String, false, false, true, 4)]
		ForgetPasswordCode = 26,
		/// <summary>
		/// ForgetPasswordCodeValidUntil : 
		/// </summary>
		[EnumTextValue("ForgetPasswordCodeValidUntil")]
		[ColumnEnum("ForgetPasswordCodeValidUntil", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		ForgetPasswordCodeValidUntil = 27,
		/// <summary>
		/// EnumId : integration user 
		/// 		/// 1: Course_Reg, Course_reg_Assess
		/// </summary>
		[EnumTextValue("ENUM_ID")]
		[ColumnEnum("ENUM_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		EnumId = 28,
		/// <summary>
		/// UserMobile : 
		/// </summary>
		[EnumTextValue("USER_MOBILE")]
		[ColumnEnum("USER_MOBILE", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		UserMobile = 29
	}//End enum

	#endregion SeUserColumn Enum

} // end namespace
