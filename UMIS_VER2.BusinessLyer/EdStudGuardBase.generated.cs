
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file EdStudGuard.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ED_STUD_GUARD' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class EdStudGuardBase : EntityBase, IEdStudGuard, IEntityId<EdStudGuardKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private EdStudGuardEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private EdStudGuardEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private EdStudGuardEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<EdStudGuard> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdStudGuardEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdStudGuardEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="EdStudGuardBase"/> instance.
		///</summary>
		public EdStudGuardBase()
		{
			this.entityData = new EdStudGuardEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="EdStudGuardBase"/> instance.
		///</summary>
		///<param name="_edStudGuardId"></param>
		///<param name="_gsCodeRelationId">صلة القرابة</param>
		///<param name="_seUserPrntId"></param>
		///<param name="_edStudId"></param>
		///<param name="_edGuardId"></param>
		///<param name="_admApplicantId"></param>
		///<param name="_mainFlg"></param>
		///<param name="_orderOfStud"></param>
		///<param name="_feesFlg">مسؤل عن المصروفات</param>
		///<param name="_emrgncyFlg"></param>
		///<param name="_guardOrdr"></param>
		///<param name="_lastDate"></param>
		///<param name="_seUserId"></param>
		public EdStudGuardBase(System.Decimal _edStudGuardId, System.Decimal _gsCodeRelationId, 
			System.Decimal? _seUserPrntId, System.Decimal? _edStudId, System.Decimal _edGuardId, 
			System.Decimal? _admApplicantId, System.Decimal _mainFlg, System.Decimal _orderOfStud, 
			System.Boolean? _feesFlg, System.Boolean? _emrgncyFlg, System.Int32? _guardOrdr, System.DateTime? _lastDate, 
			System.Decimal? _seUserId)
		{
			this.entityData = new EdStudGuardEntityData();
			this.backupData = null;

			this.EdStudGuardId = _edStudGuardId;
			this.GsCodeRelationId = _gsCodeRelationId;
			this.SeUserPrntId = _seUserPrntId;
			this.EdStudId = _edStudId;
			this.EdGuardId = _edGuardId;
			this.AdmApplicantId = _admApplicantId;
			this.MainFlg = _mainFlg;
			this.OrderOfStud = _orderOfStud;
			this.FeesFlg = _feesFlg;
			this.EmrgncyFlg = _emrgncyFlg;
			this.GuardOrdr = _guardOrdr;
			this.LastDate = _lastDate;
			this.SeUserId = _seUserId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="EdStudGuard"/> instance.
		///</summary>
		///<param name="_edStudGuardId"></param>
		///<param name="_gsCodeRelationId">صلة القرابة</param>
		///<param name="_seUserPrntId"></param>
		///<param name="_edStudId"></param>
		///<param name="_edGuardId"></param>
		///<param name="_admApplicantId"></param>
		///<param name="_mainFlg"></param>
		///<param name="_orderOfStud"></param>
		///<param name="_feesFlg">مسؤل عن المصروفات</param>
		///<param name="_emrgncyFlg"></param>
		///<param name="_guardOrdr"></param>
		///<param name="_lastDate"></param>
		///<param name="_seUserId"></param>
		public static EdStudGuard CreateEdStudGuard(System.Decimal _edStudGuardId, System.Decimal _gsCodeRelationId, 
			System.Decimal? _seUserPrntId, System.Decimal? _edStudId, System.Decimal _edGuardId, 
			System.Decimal? _admApplicantId, System.Decimal _mainFlg, System.Decimal _orderOfStud, 
			System.Boolean? _feesFlg, System.Boolean? _emrgncyFlg, System.Int32? _guardOrdr, System.DateTime? _lastDate, 
			System.Decimal? _seUserId)
		{
			EdStudGuard newEdStudGuard = new EdStudGuard();
			newEdStudGuard.EdStudGuardId = _edStudGuardId;
			newEdStudGuard.GsCodeRelationId = _gsCodeRelationId;
			newEdStudGuard.SeUserPrntId = _seUserPrntId;
			newEdStudGuard.EdStudId = _edStudId;
			newEdStudGuard.EdGuardId = _edGuardId;
			newEdStudGuard.AdmApplicantId = _admApplicantId;
			newEdStudGuard.MainFlg = _mainFlg;
			newEdStudGuard.OrderOfStud = _orderOfStud;
			newEdStudGuard.FeesFlg = _feesFlg;
			newEdStudGuard.EmrgncyFlg = _emrgncyFlg;
			newEdStudGuard.GuardOrdr = _guardOrdr;
			newEdStudGuard.LastDate = _lastDate;
			newEdStudGuard.SeUserId = _seUserId;
			return newEdStudGuard;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the EdStudGuardId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal EdStudGuardId
		{
			get
			{
				return this.entityData.EdStudGuardId; 
			}
			
			set
			{
				if (this.entityData.EdStudGuardId == value)
					return;
					
				OnColumnChanging(EdStudGuardColumn.EdStudGuardId, this.entityData.EdStudGuardId);
				this.entityData.EdStudGuardId = value;
				this.EntityId.EdStudGuardId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudGuardColumn.EdStudGuardId, this.entityData.EdStudGuardId);
				OnPropertyChanged("EdStudGuardId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ED_STUD_GUARD_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the ED_STUD_GUARD_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalEdStudGuardId
		{
			get { return this.entityData.OriginalEdStudGuardId; }
			set { this.entityData.OriginalEdStudGuardId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeRelationId property. 
		///		صلة القرابة
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"صلة القرابة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal GsCodeRelationId
		{
			get
			{
				return this.entityData.GsCodeRelationId; 
			}
			
			set
			{
				if (this.entityData.GsCodeRelationId == value)
					return;
					
				OnColumnChanging(EdStudGuardColumn.GsCodeRelationId, this.entityData.GsCodeRelationId);
				this.entityData.GsCodeRelationId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudGuardColumn.GsCodeRelationId, this.entityData.GsCodeRelationId);
				OnPropertyChanged("GsCodeRelationId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserPrntId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserPrntIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserPrntId
		{
			get
			{
				return this.entityData.SeUserPrntId; 
			}
			
			set
			{
				if (this.entityData.SeUserPrntId == value)
					return;
					
				OnColumnChanging(EdStudGuardColumn.SeUserPrntId, this.entityData.SeUserPrntId);
				this.entityData.SeUserPrntId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudGuardColumn.SeUserPrntId, this.entityData.SeUserPrntId);
				OnPropertyChanged("SeUserPrntId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudId
		{
			get
			{
				return this.entityData.EdStudId; 
			}
			
			set
			{
				if (this.entityData.EdStudId == value)
					return;
					
				OnColumnChanging(EdStudGuardColumn.EdStudId, this.entityData.EdStudId);
				this.entityData.EdStudId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudGuardColumn.EdStudId, this.entityData.EdStudId);
				OnPropertyChanged("EdStudId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdGuardId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EdGuardId
		{
			get
			{
				return this.entityData.EdGuardId; 
			}
			
			set
			{
				if (this.entityData.EdGuardId == value)
					return;
					
				OnColumnChanging(EdStudGuardColumn.EdGuardId, this.entityData.EdGuardId);
				this.entityData.EdGuardId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudGuardColumn.EdGuardId, this.entityData.EdGuardId);
				OnPropertyChanged("EdGuardId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmApplicantId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmApplicantIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmApplicantId
		{
			get
			{
				return this.entityData.AdmApplicantId; 
			}
			
			set
			{
				if (this.entityData.AdmApplicantId == value)
					return;
					
				OnColumnChanging(EdStudGuardColumn.AdmApplicantId, this.entityData.AdmApplicantId);
				this.entityData.AdmApplicantId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudGuardColumn.AdmApplicantId, this.entityData.AdmApplicantId);
				OnPropertyChanged("AdmApplicantId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MainFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal MainFlg
		{
			get
			{
				return this.entityData.MainFlg; 
			}
			
			set
			{
				if (this.entityData.MainFlg == value)
					return;
					
				OnColumnChanging(EdStudGuardColumn.MainFlg, this.entityData.MainFlg);
				this.entityData.MainFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudGuardColumn.MainFlg, this.entityData.MainFlg);
				OnPropertyChanged("MainFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OrderOfStud property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal OrderOfStud
		{
			get
			{
				return this.entityData.OrderOfStud; 
			}
			
			set
			{
				if (this.entityData.OrderOfStud == value)
					return;
					
				OnColumnChanging(EdStudGuardColumn.OrderOfStud, this.entityData.OrderOfStud);
				this.entityData.OrderOfStud = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudGuardColumn.OrderOfStud, this.entityData.OrderOfStud);
				OnPropertyChanged("OrderOfStud");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeesFlg property. 
		///		مسؤل عن المصروفات
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsFeesFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"مسؤل عن المصروفات"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? FeesFlg
		{
			get
			{
				return this.entityData.FeesFlg; 
			}
			
			set
			{
				if (this.entityData.FeesFlg == value)
					return;
					
				OnColumnChanging(EdStudGuardColumn.FeesFlg, this.entityData.FeesFlg);
				this.entityData.FeesFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudGuardColumn.FeesFlg, this.entityData.FeesFlg);
				OnPropertyChanged("FeesFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EmrgncyFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsEmrgncyFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? EmrgncyFlg
		{
			get
			{
				return this.entityData.EmrgncyFlg; 
			}
			
			set
			{
				if (this.entityData.EmrgncyFlg == value)
					return;
					
				OnColumnChanging(EdStudGuardColumn.EmrgncyFlg, this.entityData.EmrgncyFlg);
				this.entityData.EmrgncyFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudGuardColumn.EmrgncyFlg, this.entityData.EmrgncyFlg);
				OnPropertyChanged("EmrgncyFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GuardOrdr property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsGuardOrdrNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? GuardOrdr
		{
			get
			{
				return this.entityData.GuardOrdr; 
			}
			
			set
			{
				if (this.entityData.GuardOrdr == value)
					return;
					
				OnColumnChanging(EdStudGuardColumn.GuardOrdr, this.entityData.GuardOrdr);
				this.entityData.GuardOrdr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudGuardColumn.GuardOrdr, this.entityData.GuardOrdr);
				OnPropertyChanged("GuardOrdr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(EdStudGuardColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudGuardColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(EdStudGuardColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudGuardColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="AdmApplicant"/>.
		/// </summary>
		/// <value>The source AdmApplicant for AdmApplicantId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmApplicant AdmApplicantIdSource
      	{
            get { return entityData.AdmApplicantIdSource; }
            set { entityData.AdmApplicantIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdGuard"/>.
		/// </summary>
		/// <value>The source EdGuard for EdGuardId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdGuard EdGuardIdSource
      	{
            get { return entityData.EdGuardIdSource; }
            set { entityData.EdGuardIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStud"/>.
		/// </summary>
		/// <value>The source EdStud for EdStudId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStud EdStudIdSource
      	{
            get { return entityData.EdStudIdSource; }
            set { entityData.EdStudIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeKinship"/>.
		/// </summary>
		/// <value>The source GsCodeKinship for GsCodeRelationId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeKinship GsCodeRelationIdSource
      	{
            get { return entityData.GsCodeRelationIdSource; }
            set { entityData.GsCodeRelationIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SeUser"/>.
		/// </summary>
		/// <value>The source SeUser for SeUserPrntId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SeUser SeUserPrntIdSource
      	{
            get { return entityData.SeUserPrntIdSource; }
            set { entityData.SeUserPrntIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ED_STUD_GUARD"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ED_STUD_GUARD_ID", "GS_CODE_RELATION_ID", "SE_USER_PRNT_ID", "ED_STUD_ID", "ED_GUARD_ID", "ADM_APPLICANT_ID", "MAIN_FLG", "ORDER_OF_STUD", "FEES_FLG", "EMRGNCY_FLG", "GUARD_ORDR", "LAST_DATE", "SE_USER_ID"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as EdStudGuardEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (EdStudGuard) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<EdStudGuard>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as EdStudGuard);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed EdStudGuard Entity 
		///</summary>
		protected virtual EdStudGuard Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			EdStudGuard copy = new EdStudGuard();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.EdStudGuardId = this.EdStudGuardId;
					copy.OriginalEdStudGuardId = this.OriginalEdStudGuardId;
				copy.GsCodeRelationId = this.GsCodeRelationId;
				copy.SeUserPrntId = this.SeUserPrntId;
				copy.EdStudId = this.EdStudId;
				copy.EdGuardId = this.EdGuardId;
				copy.AdmApplicantId = this.AdmApplicantId;
				copy.MainFlg = this.MainFlg;
				copy.OrderOfStud = this.OrderOfStud;
				copy.FeesFlg = this.FeesFlg;
				copy.EmrgncyFlg = this.EmrgncyFlg;
				copy.GuardOrdr = this.GuardOrdr;
				copy.LastDate = this.LastDate;
				copy.SeUserId = this.SeUserId;
			
			if (this.AdmApplicantIdSource != null && existingCopies.Contains(this.AdmApplicantIdSource))
				copy.AdmApplicantIdSource = existingCopies[this.AdmApplicantIdSource] as AdmApplicant;
			else
				copy.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource, existingCopies) as AdmApplicant;
			if (this.EdGuardIdSource != null && existingCopies.Contains(this.EdGuardIdSource))
				copy.EdGuardIdSource = existingCopies[this.EdGuardIdSource] as EdGuard;
			else
				copy.EdGuardIdSource = MakeCopyOf(this.EdGuardIdSource, existingCopies) as EdGuard;
			if (this.EdStudIdSource != null && existingCopies.Contains(this.EdStudIdSource))
				copy.EdStudIdSource = existingCopies[this.EdStudIdSource] as EdStud;
			else
				copy.EdStudIdSource = MakeCopyOf(this.EdStudIdSource, existingCopies) as EdStud;
			if (this.GsCodeRelationIdSource != null && existingCopies.Contains(this.GsCodeRelationIdSource))
				copy.GsCodeRelationIdSource = existingCopies[this.GsCodeRelationIdSource] as GsCodeKinship;
			else
				copy.GsCodeRelationIdSource = MakeCopyOf(this.GsCodeRelationIdSource, existingCopies) as GsCodeKinship;
			if (this.SeUserPrntIdSource != null && existingCopies.Contains(this.SeUserPrntIdSource))
				copy.SeUserPrntIdSource = existingCopies[this.SeUserPrntIdSource] as SeUser;
			else
				copy.SeUserPrntIdSource = MakeCopyOf(this.SeUserPrntIdSource, existingCopies) as SeUser;
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed EdStudGuard Entity 
		///</summary>
		public virtual EdStudGuard Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed EdStudGuard Entity which is a deep copy of the current entity.
		///</summary>
		public virtual EdStudGuard DeepCopy()
		{
			return EntityHelper.Clone<EdStudGuard>(this as EdStudGuard);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as EdStudGuardEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new EdStudGuardEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as EdStudGuardEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(EdStudGuardColumn column)
		{
			switch(column)
			{
					case EdStudGuardColumn.EdStudGuardId:
					return entityData.EdStudGuardId != _originalData.EdStudGuardId;
					case EdStudGuardColumn.GsCodeRelationId:
					return entityData.GsCodeRelationId != _originalData.GsCodeRelationId;
					case EdStudGuardColumn.SeUserPrntId:
					return entityData.SeUserPrntId != _originalData.SeUserPrntId;
					case EdStudGuardColumn.EdStudId:
					return entityData.EdStudId != _originalData.EdStudId;
					case EdStudGuardColumn.EdGuardId:
					return entityData.EdGuardId != _originalData.EdGuardId;
					case EdStudGuardColumn.AdmApplicantId:
					return entityData.AdmApplicantId != _originalData.AdmApplicantId;
					case EdStudGuardColumn.MainFlg:
					return entityData.MainFlg != _originalData.MainFlg;
					case EdStudGuardColumn.OrderOfStud:
					return entityData.OrderOfStud != _originalData.OrderOfStud;
					case EdStudGuardColumn.FeesFlg:
					return entityData.FeesFlg != _originalData.FeesFlg;
					case EdStudGuardColumn.EmrgncyFlg:
					return entityData.EmrgncyFlg != _originalData.EmrgncyFlg;
					case EdStudGuardColumn.GuardOrdr:
					return entityData.GuardOrdr != _originalData.GuardOrdr;
					case EdStudGuardColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
					case EdStudGuardColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< EdStudGuardColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.EdStudGuardId != _originalData.EdStudGuardId;
			result = result || entityData.GsCodeRelationId != _originalData.GsCodeRelationId;
			result = result || entityData.SeUserPrntId != _originalData.SeUserPrntId;
			result = result || entityData.EdStudId != _originalData.EdStudId;
			result = result || entityData.EdGuardId != _originalData.EdGuardId;
			result = result || entityData.AdmApplicantId != _originalData.AdmApplicantId;
			result = result || entityData.MainFlg != _originalData.MainFlg;
			result = result || entityData.OrderOfStud != _originalData.OrderOfStud;
			result = result || entityData.FeesFlg != _originalData.FeesFlg;
			result = result || entityData.EmrgncyFlg != _originalData.EmrgncyFlg;
			result = result || entityData.GuardOrdr != _originalData.GuardOrdr;
			result = result || entityData.LastDate != _originalData.LastDate;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			return result;
		}	
		
		///<summary>
		///  Returns a EdStudGuard Entity with the original data.
		///</summary>
		public EdStudGuard GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateEdStudGuard(
				_originalData.EdStudGuardId,
				_originalData.GsCodeRelationId,
				_originalData.SeUserPrntId,
				_originalData.EdStudId,
				_originalData.EdGuardId,
				_originalData.AdmApplicantId,
				_originalData.MainFlg,
				_originalData.OrderOfStud,
				_originalData.FeesFlg,
				_originalData.EmrgncyFlg,
				_originalData.GuardOrdr,
				_originalData.LastDate,
				_originalData.SeUserId
				);
				
			return (EdStudGuard)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="EdStudGuardBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is EdStudGuardBase)
				return ValueEquals(this, (EdStudGuardBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="EdStudGuardBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.EdStudGuardId.GetHashCode() ^ 
					this.GsCodeRelationId.GetHashCode() ^ 
					((this.SeUserPrntId == null) ? string.Empty : this.SeUserPrntId.ToString()).GetHashCode() ^ 
					((this.EdStudId == null) ? string.Empty : this.EdStudId.ToString()).GetHashCode() ^ 
					this.EdGuardId.GetHashCode() ^ 
					((this.AdmApplicantId == null) ? string.Empty : this.AdmApplicantId.ToString()).GetHashCode() ^ 
					this.MainFlg.GetHashCode() ^ 
					this.OrderOfStud.GetHashCode() ^ 
					((this.FeesFlg == null) ? string.Empty : this.FeesFlg.ToString()).GetHashCode() ^ 
					((this.EmrgncyFlg == null) ? string.Empty : this.EmrgncyFlg.ToString()).GetHashCode() ^ 
					((this.GuardOrdr == null) ? string.Empty : this.GuardOrdr.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="EdStudGuardBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(EdStudGuardBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="EdStudGuardBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="EdStudGuardBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="EdStudGuardBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(EdStudGuardBase Object1, EdStudGuardBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.EdStudGuardId != Object2.EdStudGuardId)
				equal = false;
			if (Object1.GsCodeRelationId != Object2.GsCodeRelationId)
				equal = false;
			if ( Object1.SeUserPrntId != null && Object2.SeUserPrntId != null )
			{
				if (Object1.SeUserPrntId != Object2.SeUserPrntId)
					equal = false;
			}
			else if (Object1.SeUserPrntId == null ^ Object2.SeUserPrntId == null )
			{
				equal = false;
			}
			if ( Object1.EdStudId != null && Object2.EdStudId != null )
			{
				if (Object1.EdStudId != Object2.EdStudId)
					equal = false;
			}
			else if (Object1.EdStudId == null ^ Object2.EdStudId == null )
			{
				equal = false;
			}
			if (Object1.EdGuardId != Object2.EdGuardId)
				equal = false;
			if ( Object1.AdmApplicantId != null && Object2.AdmApplicantId != null )
			{
				if (Object1.AdmApplicantId != Object2.AdmApplicantId)
					equal = false;
			}
			else if (Object1.AdmApplicantId == null ^ Object2.AdmApplicantId == null )
			{
				equal = false;
			}
			if (Object1.MainFlg != Object2.MainFlg)
				equal = false;
			if (Object1.OrderOfStud != Object2.OrderOfStud)
				equal = false;
			if ( Object1.FeesFlg != null && Object2.FeesFlg != null )
			{
				if (Object1.FeesFlg != Object2.FeesFlg)
					equal = false;
			}
			else if (Object1.FeesFlg == null ^ Object2.FeesFlg == null )
			{
				equal = false;
			}
			if ( Object1.EmrgncyFlg != null && Object2.EmrgncyFlg != null )
			{
				if (Object1.EmrgncyFlg != Object2.EmrgncyFlg)
					equal = false;
			}
			else if (Object1.EmrgncyFlg == null ^ Object2.EmrgncyFlg == null )
			{
				equal = false;
			}
			if ( Object1.GuardOrdr != null && Object2.GuardOrdr != null )
			{
				if (Object1.GuardOrdr != Object2.GuardOrdr)
					equal = false;
			}
			else if (Object1.GuardOrdr == null ^ Object2.GuardOrdr == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((EdStudGuardBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static EdStudGuardComparer GetComparer()
        {
            return new EdStudGuardComparer();
        }
        */

        // Comparer delegates back to EdStudGuard
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(EdStudGuard rhs, EdStudGuardColumn which)
        {
            switch (which)
            {
            	
            	
            	case EdStudGuardColumn.EdStudGuardId:
            		return this.EdStudGuardId.CompareTo(rhs.EdStudGuardId);
            		
            		                 
            	
            	
            	case EdStudGuardColumn.GsCodeRelationId:
            		return this.GsCodeRelationId.CompareTo(rhs.GsCodeRelationId);
            		
            		                 
            	
            	
            	case EdStudGuardColumn.SeUserPrntId:
            		return this.SeUserPrntId.Value.CompareTo(rhs.SeUserPrntId.Value);
            		
            		                 
            	
            	
            	case EdStudGuardColumn.EdStudId:
            		return this.EdStudId.Value.CompareTo(rhs.EdStudId.Value);
            		
            		                 
            	
            	
            	case EdStudGuardColumn.EdGuardId:
            		return this.EdGuardId.CompareTo(rhs.EdGuardId);
            		
            		                 
            	
            	
            	case EdStudGuardColumn.AdmApplicantId:
            		return this.AdmApplicantId.Value.CompareTo(rhs.AdmApplicantId.Value);
            		
            		                 
            	
            	
            	case EdStudGuardColumn.MainFlg:
            		return this.MainFlg.CompareTo(rhs.MainFlg);
            		
            		                 
            	
            	
            	case EdStudGuardColumn.OrderOfStud:
            		return this.OrderOfStud.CompareTo(rhs.OrderOfStud);
            		
            		                 
            	
            	
            	case EdStudGuardColumn.FeesFlg:
            		return this.FeesFlg.Value.CompareTo(rhs.FeesFlg.Value);
            		
            		                 
            	
            	
            	case EdStudGuardColumn.EmrgncyFlg:
            		return this.EmrgncyFlg.Value.CompareTo(rhs.EmrgncyFlg.Value);
            		
            		                 
            	
            	
            	case EdStudGuardColumn.GuardOrdr:
            		return this.GuardOrdr.Value.CompareTo(rhs.GuardOrdr.Value);
            		
            		                 
            	
            	
            	case EdStudGuardColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            	
            	
            	case EdStudGuardColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<EdStudGuardKey> Members
		
		// member variable for the EntityId property
		private EdStudGuardKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual EdStudGuardKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new EdStudGuardKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("EdStudGuard")
					.Append("|").Append( this.EdStudGuardId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{14}{13}- EdStudGuardId: {0}{13}- GsCodeRelationId: {1}{13}- SeUserPrntId: {2}{13}- EdStudId: {3}{13}- EdGuardId: {4}{13}- AdmApplicantId: {5}{13}- MainFlg: {6}{13}- OrderOfStud: {7}{13}- FeesFlg: {8}{13}- EmrgncyFlg: {9}{13}- GuardOrdr: {10}{13}- LastDate: {11}{13}- SeUserId: {12}{13}{15}", 
				this.EdStudGuardId,
				this.GsCodeRelationId,
				(this.SeUserPrntId == null) ? string.Empty : this.SeUserPrntId.ToString(),
				(this.EdStudId == null) ? string.Empty : this.EdStudId.ToString(),
				this.EdGuardId,
				(this.AdmApplicantId == null) ? string.Empty : this.AdmApplicantId.ToString(),
				this.MainFlg,
				this.OrderOfStud,
				(this.FeesFlg == null) ? string.Empty : this.FeesFlg.ToString(),
				(this.EmrgncyFlg == null) ? string.Empty : this.EmrgncyFlg.ToString(),
				(this.GuardOrdr == null) ? string.Empty : this.GuardOrdr.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ED_STUD_GUARD' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class EdStudGuardEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ED_STUD_GUARD_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ED_STUD_GUARD"</remarks>
		public System.Decimal EdStudGuardId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalEdStudGuardId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// GS_CODE_RELATION_ID : صلة القرابة
		/// </summary>
		public System.Decimal		  GsCodeRelationId = 0.0m;
		
		/// <summary>
		/// SE_USER_PRNT_ID : 
		/// </summary>
		public System.Decimal?		  SeUserPrntId = null;
		
		/// <summary>
		/// ED_STUD_ID : 
		/// </summary>
		public System.Decimal?		  EdStudId = null;
		
		/// <summary>
		/// ED_GUARD_ID : 
		/// </summary>
		public System.Decimal		  EdGuardId = 0.0m;
		
		/// <summary>
		/// ADM_APPLICANT_ID : 
		/// </summary>
		public System.Decimal?		  AdmApplicantId = null;
		
		/// <summary>
		/// MAIN_FLG : 
		/// </summary>
		public System.Decimal		  MainFlg = 0.0m;
		
		/// <summary>
		/// ORDER_OF_STUD : 
		/// </summary>
		public System.Decimal		  OrderOfStud = 0.0m;
		
		/// <summary>
		/// FEES_FLG : مسؤل عن المصروفات
		/// </summary>
		public System.Boolean?		  FeesFlg = null;
		
		/// <summary>
		/// EMRGNCY_FLG : 
		/// </summary>
		public System.Boolean?		  EmrgncyFlg = null;
		
		/// <summary>
		/// GUARD_ORDR : 
		/// </summary>
		public System.Int32?		  GuardOrdr = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private AdmApplicant _admApplicantIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmApplicant"/>.
		/// </summary>
		/// <value>The source AdmApplicant for AdmApplicantId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmApplicant AdmApplicantIdSource
      	{
            get { return this._admApplicantIdSource; }
            set { this._admApplicantIdSource = value; }
      	}
		private EdGuard _edGuardIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdGuard"/>.
		/// </summary>
		/// <value>The source EdGuard for EdGuardId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdGuard EdGuardIdSource
      	{
            get { return this._edGuardIdSource; }
            set { this._edGuardIdSource = value; }
      	}
		private EdStud _edStudIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStud"/>.
		/// </summary>
		/// <value>The source EdStud for EdStudId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStud EdStudIdSource
      	{
            get { return this._edStudIdSource; }
            set { this._edStudIdSource = value; }
      	}
		private GsCodeKinship _gsCodeRelationIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeKinship"/>.
		/// </summary>
		/// <value>The source GsCodeKinship for GsCodeRelationId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeKinship GsCodeRelationIdSource
      	{
            get { return this._gsCodeRelationIdSource; }
            set { this._gsCodeRelationIdSource = value; }
      	}
		private SeUser _seUserPrntIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SeUser"/>.
		/// </summary>
		/// <value>The source SeUser for SeUserPrntId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SeUser SeUserPrntIdSource
      	{
            get { return this._seUserPrntIdSource; }
            set { this._seUserPrntIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			EdStudGuardEntityData _tmp = new EdStudGuardEntityData();
						
			_tmp.EdStudGuardId = this.EdStudGuardId;
			_tmp.OriginalEdStudGuardId = this.OriginalEdStudGuardId;
			
			_tmp.GsCodeRelationId = this.GsCodeRelationId;
			_tmp.SeUserPrntId = this.SeUserPrntId;
			_tmp.EdStudId = this.EdStudId;
			_tmp.EdGuardId = this.EdGuardId;
			_tmp.AdmApplicantId = this.AdmApplicantId;
			_tmp.MainFlg = this.MainFlg;
			_tmp.OrderOfStud = this.OrderOfStud;
			_tmp.FeesFlg = this.FeesFlg;
			_tmp.EmrgncyFlg = this.EmrgncyFlg;
			_tmp.GuardOrdr = this.GuardOrdr;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserId = this.SeUserId;
			
			#region Source Parent Composite Entities
			if (this.AdmApplicantIdSource != null)
				_tmp.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource) as AdmApplicant;
			if (this.EdGuardIdSource != null)
				_tmp.EdGuardIdSource = MakeCopyOf(this.EdGuardIdSource) as EdGuard;
			if (this.EdStudIdSource != null)
				_tmp.EdStudIdSource = MakeCopyOf(this.EdStudIdSource) as EdStud;
			if (this.GsCodeRelationIdSource != null)
				_tmp.GsCodeRelationIdSource = MakeCopyOf(this.GsCodeRelationIdSource) as GsCodeKinship;
			if (this.SeUserPrntIdSource != null)
				_tmp.SeUserPrntIdSource = MakeCopyOf(this.SeUserPrntIdSource) as SeUser;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			EdStudGuardEntityData _tmp = new EdStudGuardEntityData();
						
			_tmp.EdStudGuardId = this.EdStudGuardId;
			_tmp.OriginalEdStudGuardId = this.OriginalEdStudGuardId;
			
			_tmp.GsCodeRelationId = this.GsCodeRelationId;
			_tmp.SeUserPrntId = this.SeUserPrntId;
			_tmp.EdStudId = this.EdStudId;
			_tmp.EdGuardId = this.EdGuardId;
			_tmp.AdmApplicantId = this.AdmApplicantId;
			_tmp.MainFlg = this.MainFlg;
			_tmp.OrderOfStud = this.OrderOfStud;
			_tmp.FeesFlg = this.FeesFlg;
			_tmp.EmrgncyFlg = this.EmrgncyFlg;
			_tmp.GuardOrdr = this.GuardOrdr;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserId = this.SeUserId;
			
			#region Source Parent Composite Entities
			if (this.AdmApplicantIdSource != null && existingCopies.Contains(this.AdmApplicantIdSource))
				_tmp.AdmApplicantIdSource = existingCopies[this.AdmApplicantIdSource] as AdmApplicant;
			else
				_tmp.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource, existingCopies) as AdmApplicant;
			if (this.EdGuardIdSource != null && existingCopies.Contains(this.EdGuardIdSource))
				_tmp.EdGuardIdSource = existingCopies[this.EdGuardIdSource] as EdGuard;
			else
				_tmp.EdGuardIdSource = MakeCopyOf(this.EdGuardIdSource, existingCopies) as EdGuard;
			if (this.EdStudIdSource != null && existingCopies.Contains(this.EdStudIdSource))
				_tmp.EdStudIdSource = existingCopies[this.EdStudIdSource] as EdStud;
			else
				_tmp.EdStudIdSource = MakeCopyOf(this.EdStudIdSource, existingCopies) as EdStud;
			if (this.GsCodeRelationIdSource != null && existingCopies.Contains(this.GsCodeRelationIdSource))
				_tmp.GsCodeRelationIdSource = existingCopies[this.GsCodeRelationIdSource] as GsCodeKinship;
			else
				_tmp.GsCodeRelationIdSource = MakeCopyOf(this.GsCodeRelationIdSource, existingCopies) as GsCodeKinship;
			if (this.SeUserPrntIdSource != null && existingCopies.Contains(this.SeUserPrntIdSource))
				_tmp.SeUserPrntIdSource = existingCopies[this.SeUserPrntIdSource] as SeUser;
			else
				_tmp.SeUserPrntIdSource = MakeCopyOf(this.SeUserPrntIdSource, existingCopies) as SeUser;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudGuardColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(EdStudGuardColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudGuardColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(EdStudGuardColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudGuardColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(EdStudGuardColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				EdStudGuardEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new EdStudGuardEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudGuardColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(EdStudGuardColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				EdStudGuardEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new EdStudGuardEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region EdStudGuardEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="EdStudGuard"/> object.
	/// </remarks>
	public class EdStudGuardEventArgs : System.EventArgs
	{
		private EdStudGuardColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the EdStudGuardEventArgs class.
		///</summary>
		public EdStudGuardEventArgs(EdStudGuardColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the EdStudGuardEventArgs class.
		///</summary>
		public EdStudGuardEventArgs(EdStudGuardColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The EdStudGuardColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="EdStudGuardColumn" />
		public EdStudGuardColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all EdStudGuard related events.
	///</summary>
	public delegate void EdStudGuardEventHandler(object sender, EdStudGuardEventArgs e);
	
	#region EdStudGuardComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class EdStudGuardComparer : System.Collections.Generic.IComparer<EdStudGuard>
	{
		EdStudGuardColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:EdStudGuardComparer"/> class.
        /// </summary>
		public EdStudGuardComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:EdStudGuardComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public EdStudGuardComparer(EdStudGuardColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="EdStudGuard"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="EdStudGuard"/> to compare.</param>
        /// <param name="b">The second <c>EdStudGuard</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(EdStudGuard a, EdStudGuard b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(EdStudGuard entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(EdStudGuard a, EdStudGuard b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public EdStudGuardColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region EdStudGuardKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="EdStudGuard"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class EdStudGuardKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the EdStudGuardKey class.
		/// </summary>
		public EdStudGuardKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the EdStudGuardKey class.
		/// </summary>
		public EdStudGuardKey(EdStudGuardBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.EdStudGuardId = entity.EdStudGuardId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the EdStudGuardKey class.
		/// </summary>
		public EdStudGuardKey(System.Decimal _edStudGuardId)
		{
			#region Init Properties

			this.EdStudGuardId = _edStudGuardId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private EdStudGuardBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public EdStudGuardBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the EdStudGuardId property
		private System.Decimal _edStudGuardId;
		
		/// <summary>
		/// Gets or sets the EdStudGuardId property.
		/// </summary>
		public System.Decimal EdStudGuardId
		{
			get { return _edStudGuardId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.EdStudGuardId = value;
				
				_edStudGuardId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				EdStudGuardId = ( values["EdStudGuardId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["EdStudGuardId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("EdStudGuardId", EdStudGuardId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("EdStudGuardId: {0}{1}",
								EdStudGuardId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region EdStudGuardColumn Enum
	
	/// <summary>
	/// Enumerate the EdStudGuard columns.
	/// </summary>
	[Serializable]
	public enum EdStudGuardColumn : int
	{
		/// <summary>
		/// EdStudGuardId : 
		/// </summary>
		[EnumTextValue("ED_STUD_GUARD_ID")]
		[ColumnEnum("ED_STUD_GUARD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		EdStudGuardId = 1,
		/// <summary>
		/// GsCodeRelationId : صلة القرابة
		/// </summary>
		[EnumTextValue("GS_CODE_RELATION_ID")]
		[ColumnEnum("GS_CODE_RELATION_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		GsCodeRelationId = 2,
		/// <summary>
		/// SeUserPrntId : 
		/// </summary>
		[EnumTextValue("SE_USER_PRNT_ID")]
		[ColumnEnum("SE_USER_PRNT_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserPrntId = 3,
		/// <summary>
		/// EdStudId : 
		/// </summary>
		[EnumTextValue("ED_STUD_ID")]
		[ColumnEnum("ED_STUD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudId = 4,
		/// <summary>
		/// EdGuardId : 
		/// </summary>
		[EnumTextValue("ED_GUARD_ID")]
		[ColumnEnum("ED_GUARD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdGuardId = 5,
		/// <summary>
		/// AdmApplicantId : 
		/// </summary>
		[EnumTextValue("ADM_APPLICANT_ID")]
		[ColumnEnum("ADM_APPLICANT_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmApplicantId = 6,
		/// <summary>
		/// MainFlg : 
		/// </summary>
		[EnumTextValue("MAIN_FLG")]
		[ColumnEnum("MAIN_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		MainFlg = 7,
		/// <summary>
		/// OrderOfStud : 
		/// </summary>
		[EnumTextValue("ORDER_OF_STUD")]
		[ColumnEnum("ORDER_OF_STUD", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		OrderOfStud = 8,
		/// <summary>
		/// FeesFlg : مسؤل عن المصروفات
		/// </summary>
		[EnumTextValue("FEES_FLG")]
		[ColumnEnum("FEES_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		FeesFlg = 9,
		/// <summary>
		/// EmrgncyFlg : 
		/// </summary>
		[EnumTextValue("EMRGNCY_FLG")]
		[ColumnEnum("EMRGNCY_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		EmrgncyFlg = 10,
		/// <summary>
		/// GuardOrdr : 
		/// </summary>
		[EnumTextValue("GUARD_ORDR")]
		[ColumnEnum("GUARD_ORDR", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		GuardOrdr = 11,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 12,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 13
	}//End enum

	#endregion EdStudGuardColumn Enum

} // end namespace
