
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file AdmAppRegHistory.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ADM_APP_REG_HISTORY' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class AdmAppRegHistoryBase : EntityBase, IAdmAppRegHistory, IEntityId<AdmAppRegHistoryKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private AdmAppRegHistoryEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private AdmAppRegHistoryEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private AdmAppRegHistoryEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<AdmAppRegHistory> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AdmAppRegHistoryEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AdmAppRegHistoryEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="AdmAppRegHistoryBase"/> instance.
		///</summary>
		public AdmAppRegHistoryBase()
		{
			this.entityData = new AdmAppRegHistoryEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="AdmAppRegHistoryBase"/> instance.
		///</summary>
		///<param name="_admAppRegHistoryId"></param>
		///<param name="_admApplicantId"></param>
		///<param name="_appDate">تاريخ ادخال طلب الالتحاق</param>
		///<param name="_admCdeAppTypeId"></param>
		///<param name="_currentFlg"></param>
		///<param name="_asCodeDegreeId"></param>
		///<param name="_asCodeDegreeClassId"></param>
		///<param name="_comptativeRate"></param>
		///<param name="_admOpenAcadSemesterId">عام وفصل طلب الالتحاق</param>
		///<param name="_seUserId"></param>
		///<param name="_admCdeStatusId"></param>
		///<param name="_overAllAcceptanceFlg"></param>
		///<param name="_orintationFlg">oriented -provisonal</param>
		///<param name="_admAdmissionBandId"></param>
		///<param name="_distributionFlg"></param>
		///<param name="_enrolledFlg"></param>
		///<param name="_autoDistrFlg"></param>
		///<param name="_fullTimeFlg"></param>
		///<param name="_onlneFlg"></param>
		///<param name="_feeCdeDiscTypeId">منحة تفوق مؤهل</param>
		///<param name="_lmsUsr"></param>
		///<param name="_lmsPwd"></param>
		///<param name="_admAppHstryCode">كود المتقدم</param>
		///<param name="_busFlg">هل يريد الاشتراك بالأتوبيس</param>
		///<param name="_feeCdeSchshipTypeId">XXNU:انواع المنح الدراسية</param>
		///<param name="_schshipNote">in case of other</param>
		///<param name="_spoSponsorId">الجهة المانحة</param>
		///<param name="_submitFlg">submit طلب الالتحاق</param>
		///<param name="_feeCdeDiscCatId"></param>
		///<param name="_schshipTypeFlg">NU</param>
		///<param name="_fincaidTypeFlg">xx NU</param>
		///<param name="_hasRa">XXNUApplicant has a RA</param>
		///<param name="_submitDate">تاريخ submit طلب الالتحاق</param>
		///<param name="_lastDate">تاريخ اخر تعديل</param>
		///<param name="_admCdeStatusRsnId">XXسبب الرفضXX</param>
		///<param name="_termcondFlg">Terms & condition Tabs check box</param>
		///<param name="_dormFlg">housing yes/no</param>
		///<param name="_engNativeFlg">if=1 > exempt english certifacate even  required
		/// 		/// 2- native English   > exempted</param>
		///<param name="_engGradChkFlg"></param>
		///<param name="_waitFlg">XXXXX</param>
		///<param name="_edAcadYearId">عام الالتحاق الفعلى</param>
		///<param name="_edCodeSemesterId">فصل الالتحاق الفعلى</param>
		///<param name="_masterPhdFlg"></param>
		///<param name="_edCodeLevelId"></param>
		///<param name="_spoSponsorTypeId">Ejust نوع الكفيل حكومى-خاص-جامعة....</param>
		///<param name="_urlReference"></param>
		///<param name="_admCdeStatusOldId"></param>
		///<param name="_provisionalFlg">Ejust >PG_PROVISIONAL_FLG</param>
		///<param name="_admCdeAppStatusId">حالة المتقدم</param>
		///<param name="_tansikFlg"></param>
		///<param name="_admDecisionStatusId"></param>
		///<param name="_partTimeFlg"></param>
		///<param name="_dataSentFlg"></param>
		///<param name="_covidFlg"></param>
		public AdmAppRegHistoryBase(System.Decimal _admAppRegHistoryId, System.Decimal? _admApplicantId, 
			System.DateTime? _appDate, System.Decimal? _admCdeAppTypeId, System.Decimal? _currentFlg, 
			System.Decimal? _asCodeDegreeId, System.Decimal? _asCodeDegreeClassId, System.Decimal? _comptativeRate, 
			System.Decimal? _admOpenAcadSemesterId, System.Decimal? _seUserId, System.Decimal? _admCdeStatusId, 
			System.Decimal _overAllAcceptanceFlg, System.Decimal _orintationFlg, System.Decimal? _admAdmissionBandId, 
			System.Decimal _distributionFlg, System.Decimal _enrolledFlg, System.Decimal _autoDistrFlg, 
			System.Decimal? _fullTimeFlg, System.Boolean? _onlneFlg, System.Decimal? _feeCdeDiscTypeId, 
			System.String _lmsUsr, System.String _lmsPwd, System.String _admAppHstryCode, 
			System.Boolean? _busFlg, System.Int32? _feeCdeSchshipTypeId, System.String _schshipNote, 
			System.Decimal? _spoSponsorId, System.Boolean? _submitFlg, System.Int32? _feeCdeDiscCatId, 
			System.Boolean? _schshipTypeFlg, System.Boolean? _fincaidTypeFlg, System.Boolean? _hasRa, 
			System.DateTime? _submitDate, System.DateTime? _lastDate, System.Int32? _admCdeStatusRsnId, 
			System.Boolean? _termcondFlg, System.Boolean? _dormFlg, System.Decimal? _engNativeFlg, 
			System.Boolean? _engGradChkFlg, System.Boolean? _waitFlg, System.Decimal? _edAcadYearId, 
			System.Decimal? _edCodeSemesterId, System.Boolean? _masterPhdFlg, System.Decimal? _edCodeLevelId, 
			System.Decimal? _spoSponsorTypeId, System.String _urlReference, System.Decimal? _admCdeStatusOldId, 
			System.Boolean? _provisionalFlg, System.Decimal? _admCdeAppStatusId, System.Boolean? _tansikFlg, 
			System.Decimal? _admDecisionStatusId, System.Boolean? _partTimeFlg, System.Boolean? _dataSentFlg, 
			System.Boolean? _covidFlg)
		{
			this.entityData = new AdmAppRegHistoryEntityData();
			this.backupData = null;

			this.AdmAppRegHistoryId = _admAppRegHistoryId;
			this.AdmApplicantId = _admApplicantId;
			this.AppDate = _appDate;
			this.AdmCdeAppTypeId = _admCdeAppTypeId;
			this.CurrentFlg = _currentFlg;
			this.AsCodeDegreeId = _asCodeDegreeId;
			this.AsCodeDegreeClassId = _asCodeDegreeClassId;
			this.ComptativeRate = _comptativeRate;
			this.AdmOpenAcadSemesterId = _admOpenAcadSemesterId;
			this.SeUserId = _seUserId;
			this.AdmCdeStatusId = _admCdeStatusId;
			this.OverAllAcceptanceFlg = _overAllAcceptanceFlg;
			this.OrintationFlg = _orintationFlg;
			this.AdmAdmissionBandId = _admAdmissionBandId;
			this.DistributionFlg = _distributionFlg;
			this.EnrolledFlg = _enrolledFlg;
			this.AutoDistrFlg = _autoDistrFlg;
			this.FullTimeFlg = _fullTimeFlg;
			this.OnlneFlg = _onlneFlg;
			this.FeeCdeDiscTypeId = _feeCdeDiscTypeId;
			this.LmsUsr = _lmsUsr;
			this.LmsPwd = _lmsPwd;
			this.AdmAppHstryCode = _admAppHstryCode;
			this.BusFlg = _busFlg;
			this.FeeCdeSchshipTypeId = _feeCdeSchshipTypeId;
			this.SchshipNote = _schshipNote;
			this.SpoSponsorId = _spoSponsorId;
			this.SubmitFlg = _submitFlg;
			this.FeeCdeDiscCatId = _feeCdeDiscCatId;
			this.SchshipTypeFlg = _schshipTypeFlg;
			this.FincaidTypeFlg = _fincaidTypeFlg;
			this.HasRa = _hasRa;
			this.SubmitDate = _submitDate;
			this.LastDate = _lastDate;
			this.AdmCdeStatusRsnId = _admCdeStatusRsnId;
			this.TermcondFlg = _termcondFlg;
			this.DormFlg = _dormFlg;
			this.EngNativeFlg = _engNativeFlg;
			this.EngGradChkFlg = _engGradChkFlg;
			this.WaitFlg = _waitFlg;
			this.EdAcadYearId = _edAcadYearId;
			this.EdCodeSemesterId = _edCodeSemesterId;
			this.MasterPhdFlg = _masterPhdFlg;
			this.EdCodeLevelId = _edCodeLevelId;
			this.SpoSponsorTypeId = _spoSponsorTypeId;
			this.UrlReference = _urlReference;
			this.AdmCdeStatusOldId = _admCdeStatusOldId;
			this.ProvisionalFlg = _provisionalFlg;
			this.AdmCdeAppStatusId = _admCdeAppStatusId;
			this.TansikFlg = _tansikFlg;
			this.AdmDecisionStatusId = _admDecisionStatusId;
			this.PartTimeFlg = _partTimeFlg;
			this.DataSentFlg = _dataSentFlg;
			this.CovidFlg = _covidFlg;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="AdmAppRegHistory"/> instance.
		///</summary>
		///<param name="_admAppRegHistoryId"></param>
		///<param name="_admApplicantId"></param>
		///<param name="_appDate">تاريخ ادخال طلب الالتحاق</param>
		///<param name="_admCdeAppTypeId"></param>
		///<param name="_currentFlg"></param>
		///<param name="_asCodeDegreeId"></param>
		///<param name="_asCodeDegreeClassId"></param>
		///<param name="_comptativeRate"></param>
		///<param name="_admOpenAcadSemesterId">عام وفصل طلب الالتحاق</param>
		///<param name="_seUserId"></param>
		///<param name="_admCdeStatusId"></param>
		///<param name="_overAllAcceptanceFlg"></param>
		///<param name="_orintationFlg">oriented -provisonal</param>
		///<param name="_admAdmissionBandId"></param>
		///<param name="_distributionFlg"></param>
		///<param name="_enrolledFlg"></param>
		///<param name="_autoDistrFlg"></param>
		///<param name="_fullTimeFlg"></param>
		///<param name="_onlneFlg"></param>
		///<param name="_feeCdeDiscTypeId">منحة تفوق مؤهل</param>
		///<param name="_lmsUsr"></param>
		///<param name="_lmsPwd"></param>
		///<param name="_admAppHstryCode">كود المتقدم</param>
		///<param name="_busFlg">هل يريد الاشتراك بالأتوبيس</param>
		///<param name="_feeCdeSchshipTypeId">XXNU:انواع المنح الدراسية</param>
		///<param name="_schshipNote">in case of other</param>
		///<param name="_spoSponsorId">الجهة المانحة</param>
		///<param name="_submitFlg">submit طلب الالتحاق</param>
		///<param name="_feeCdeDiscCatId"></param>
		///<param name="_schshipTypeFlg">NU</param>
		///<param name="_fincaidTypeFlg">xx NU</param>
		///<param name="_hasRa">XXNUApplicant has a RA</param>
		///<param name="_submitDate">تاريخ submit طلب الالتحاق</param>
		///<param name="_lastDate">تاريخ اخر تعديل</param>
		///<param name="_admCdeStatusRsnId">XXسبب الرفضXX</param>
		///<param name="_termcondFlg">Terms & condition Tabs check box</param>
		///<param name="_dormFlg">housing yes/no</param>
		///<param name="_engNativeFlg">if=1 > exempt english certifacate even  required
		/// 		/// 2- native English   > exempted</param>
		///<param name="_engGradChkFlg"></param>
		///<param name="_waitFlg">XXXXX</param>
		///<param name="_edAcadYearId">عام الالتحاق الفعلى</param>
		///<param name="_edCodeSemesterId">فصل الالتحاق الفعلى</param>
		///<param name="_masterPhdFlg"></param>
		///<param name="_edCodeLevelId"></param>
		///<param name="_spoSponsorTypeId">Ejust نوع الكفيل حكومى-خاص-جامعة....</param>
		///<param name="_urlReference"></param>
		///<param name="_admCdeStatusOldId"></param>
		///<param name="_provisionalFlg">Ejust >PG_PROVISIONAL_FLG</param>
		///<param name="_admCdeAppStatusId">حالة المتقدم</param>
		///<param name="_tansikFlg"></param>
		///<param name="_admDecisionStatusId"></param>
		///<param name="_partTimeFlg"></param>
		///<param name="_dataSentFlg"></param>
		///<param name="_covidFlg"></param>
		public static AdmAppRegHistory CreateAdmAppRegHistory(System.Decimal _admAppRegHistoryId, System.Decimal? _admApplicantId, 
			System.DateTime? _appDate, System.Decimal? _admCdeAppTypeId, System.Decimal? _currentFlg, 
			System.Decimal? _asCodeDegreeId, System.Decimal? _asCodeDegreeClassId, System.Decimal? _comptativeRate, 
			System.Decimal? _admOpenAcadSemesterId, System.Decimal? _seUserId, System.Decimal? _admCdeStatusId, 
			System.Decimal _overAllAcceptanceFlg, System.Decimal _orintationFlg, System.Decimal? _admAdmissionBandId, 
			System.Decimal _distributionFlg, System.Decimal _enrolledFlg, System.Decimal _autoDistrFlg, 
			System.Decimal? _fullTimeFlg, System.Boolean? _onlneFlg, System.Decimal? _feeCdeDiscTypeId, 
			System.String _lmsUsr, System.String _lmsPwd, System.String _admAppHstryCode, 
			System.Boolean? _busFlg, System.Int32? _feeCdeSchshipTypeId, System.String _schshipNote, 
			System.Decimal? _spoSponsorId, System.Boolean? _submitFlg, System.Int32? _feeCdeDiscCatId, 
			System.Boolean? _schshipTypeFlg, System.Boolean? _fincaidTypeFlg, System.Boolean? _hasRa, 
			System.DateTime? _submitDate, System.DateTime? _lastDate, System.Int32? _admCdeStatusRsnId, 
			System.Boolean? _termcondFlg, System.Boolean? _dormFlg, System.Decimal? _engNativeFlg, 
			System.Boolean? _engGradChkFlg, System.Boolean? _waitFlg, System.Decimal? _edAcadYearId, 
			System.Decimal? _edCodeSemesterId, System.Boolean? _masterPhdFlg, System.Decimal? _edCodeLevelId, 
			System.Decimal? _spoSponsorTypeId, System.String _urlReference, System.Decimal? _admCdeStatusOldId, 
			System.Boolean? _provisionalFlg, System.Decimal? _admCdeAppStatusId, System.Boolean? _tansikFlg, 
			System.Decimal? _admDecisionStatusId, System.Boolean? _partTimeFlg, System.Boolean? _dataSentFlg, 
			System.Boolean? _covidFlg)
		{
			AdmAppRegHistory newAdmAppRegHistory = new AdmAppRegHistory();
			newAdmAppRegHistory.AdmAppRegHistoryId = _admAppRegHistoryId;
			newAdmAppRegHistory.AdmApplicantId = _admApplicantId;
			newAdmAppRegHistory.AppDate = _appDate;
			newAdmAppRegHistory.AdmCdeAppTypeId = _admCdeAppTypeId;
			newAdmAppRegHistory.CurrentFlg = _currentFlg;
			newAdmAppRegHistory.AsCodeDegreeId = _asCodeDegreeId;
			newAdmAppRegHistory.AsCodeDegreeClassId = _asCodeDegreeClassId;
			newAdmAppRegHistory.ComptativeRate = _comptativeRate;
			newAdmAppRegHistory.AdmOpenAcadSemesterId = _admOpenAcadSemesterId;
			newAdmAppRegHistory.SeUserId = _seUserId;
			newAdmAppRegHistory.AdmCdeStatusId = _admCdeStatusId;
			newAdmAppRegHistory.OverAllAcceptanceFlg = _overAllAcceptanceFlg;
			newAdmAppRegHistory.OrintationFlg = _orintationFlg;
			newAdmAppRegHistory.AdmAdmissionBandId = _admAdmissionBandId;
			newAdmAppRegHistory.DistributionFlg = _distributionFlg;
			newAdmAppRegHistory.EnrolledFlg = _enrolledFlg;
			newAdmAppRegHistory.AutoDistrFlg = _autoDistrFlg;
			newAdmAppRegHistory.FullTimeFlg = _fullTimeFlg;
			newAdmAppRegHistory.OnlneFlg = _onlneFlg;
			newAdmAppRegHistory.FeeCdeDiscTypeId = _feeCdeDiscTypeId;
			newAdmAppRegHistory.LmsUsr = _lmsUsr;
			newAdmAppRegHistory.LmsPwd = _lmsPwd;
			newAdmAppRegHistory.AdmAppHstryCode = _admAppHstryCode;
			newAdmAppRegHistory.BusFlg = _busFlg;
			newAdmAppRegHistory.FeeCdeSchshipTypeId = _feeCdeSchshipTypeId;
			newAdmAppRegHistory.SchshipNote = _schshipNote;
			newAdmAppRegHistory.SpoSponsorId = _spoSponsorId;
			newAdmAppRegHistory.SubmitFlg = _submitFlg;
			newAdmAppRegHistory.FeeCdeDiscCatId = _feeCdeDiscCatId;
			newAdmAppRegHistory.SchshipTypeFlg = _schshipTypeFlg;
			newAdmAppRegHistory.FincaidTypeFlg = _fincaidTypeFlg;
			newAdmAppRegHistory.HasRa = _hasRa;
			newAdmAppRegHistory.SubmitDate = _submitDate;
			newAdmAppRegHistory.LastDate = _lastDate;
			newAdmAppRegHistory.AdmCdeStatusRsnId = _admCdeStatusRsnId;
			newAdmAppRegHistory.TermcondFlg = _termcondFlg;
			newAdmAppRegHistory.DormFlg = _dormFlg;
			newAdmAppRegHistory.EngNativeFlg = _engNativeFlg;
			newAdmAppRegHistory.EngGradChkFlg = _engGradChkFlg;
			newAdmAppRegHistory.WaitFlg = _waitFlg;
			newAdmAppRegHistory.EdAcadYearId = _edAcadYearId;
			newAdmAppRegHistory.EdCodeSemesterId = _edCodeSemesterId;
			newAdmAppRegHistory.MasterPhdFlg = _masterPhdFlg;
			newAdmAppRegHistory.EdCodeLevelId = _edCodeLevelId;
			newAdmAppRegHistory.SpoSponsorTypeId = _spoSponsorTypeId;
			newAdmAppRegHistory.UrlReference = _urlReference;
			newAdmAppRegHistory.AdmCdeStatusOldId = _admCdeStatusOldId;
			newAdmAppRegHistory.ProvisionalFlg = _provisionalFlg;
			newAdmAppRegHistory.AdmCdeAppStatusId = _admCdeAppStatusId;
			newAdmAppRegHistory.TansikFlg = _tansikFlg;
			newAdmAppRegHistory.AdmDecisionStatusId = _admDecisionStatusId;
			newAdmAppRegHistory.PartTimeFlg = _partTimeFlg;
			newAdmAppRegHistory.DataSentFlg = _dataSentFlg;
			newAdmAppRegHistory.CovidFlg = _covidFlg;
			return newAdmAppRegHistory;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the AdmAppRegHistoryId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal AdmAppRegHistoryId
		{
			get
			{
				return this.entityData.AdmAppRegHistoryId; 
			}
			
			set
			{
				if (this.entityData.AdmAppRegHistoryId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AdmAppRegHistoryId, this.entityData.AdmAppRegHistoryId);
				this.entityData.AdmAppRegHistoryId = value;
				this.EntityId.AdmAppRegHistoryId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AdmAppRegHistoryId, this.entityData.AdmAppRegHistoryId);
				OnPropertyChanged("AdmAppRegHistoryId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ADM_APP_REG_HISTORY_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the ADM_APP_REG_HISTORY_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalAdmAppRegHistoryId
		{
			get { return this.entityData.OriginalAdmAppRegHistoryId; }
			set { this.entityData.OriginalAdmAppRegHistoryId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the AdmApplicantId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmApplicantIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmApplicantId
		{
			get
			{
				return this.entityData.AdmApplicantId; 
			}
			
			set
			{
				if (this.entityData.AdmApplicantId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AdmApplicantId, this.entityData.AdmApplicantId);
				this.entityData.AdmApplicantId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AdmApplicantId, this.entityData.AdmApplicantId);
				OnPropertyChanged("AdmApplicantId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AppDate property. 
		///		تاريخ ادخال طلب الالتحاق
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsAppDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"تاريخ ادخال طلب الالتحاق"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? AppDate
		{
			get
			{
				return this.entityData.AppDate; 
			}
			
			set
			{
				if (this.entityData.AppDate == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AppDate, this.entityData.AppDate);
				this.entityData.AppDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AppDate, this.entityData.AppDate);
				OnPropertyChanged("AppDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmCdeAppTypeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmCdeAppTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmCdeAppTypeId
		{
			get
			{
				return this.entityData.AdmCdeAppTypeId; 
			}
			
			set
			{
				if (this.entityData.AdmCdeAppTypeId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AdmCdeAppTypeId, this.entityData.AdmCdeAppTypeId);
				this.entityData.AdmCdeAppTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AdmCdeAppTypeId, this.entityData.AdmCdeAppTypeId);
				OnPropertyChanged("AdmCdeAppTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CurrentFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCurrentFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? CurrentFlg
		{
			get
			{
				return this.entityData.CurrentFlg; 
			}
			
			set
			{
				if (this.entityData.CurrentFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.CurrentFlg, this.entityData.CurrentFlg);
				this.entityData.CurrentFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.CurrentFlg, this.entityData.CurrentFlg);
				OnPropertyChanged("CurrentFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AsCodeDegreeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAsCodeDegreeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AsCodeDegreeId
		{
			get
			{
				return this.entityData.AsCodeDegreeId; 
			}
			
			set
			{
				if (this.entityData.AsCodeDegreeId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AsCodeDegreeId, this.entityData.AsCodeDegreeId);
				this.entityData.AsCodeDegreeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AsCodeDegreeId, this.entityData.AsCodeDegreeId);
				OnPropertyChanged("AsCodeDegreeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AsCodeDegreeClassId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAsCodeDegreeClassIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AsCodeDegreeClassId
		{
			get
			{
				return this.entityData.AsCodeDegreeClassId; 
			}
			
			set
			{
				if (this.entityData.AsCodeDegreeClassId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AsCodeDegreeClassId, this.entityData.AsCodeDegreeClassId);
				this.entityData.AsCodeDegreeClassId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AsCodeDegreeClassId, this.entityData.AsCodeDegreeClassId);
				OnPropertyChanged("AsCodeDegreeClassId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ComptativeRate property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsComptativeRateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ComptativeRate
		{
			get
			{
				return this.entityData.ComptativeRate; 
			}
			
			set
			{
				if (this.entityData.ComptativeRate == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.ComptativeRate, this.entityData.ComptativeRate);
				this.entityData.ComptativeRate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.ComptativeRate, this.entityData.ComptativeRate);
				OnPropertyChanged("ComptativeRate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmOpenAcadSemesterId property. 
		///		عام وفصل طلب الالتحاق
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmOpenAcadSemesterIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"عام وفصل طلب الالتحاق"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmOpenAcadSemesterId
		{
			get
			{
				return this.entityData.AdmOpenAcadSemesterId; 
			}
			
			set
			{
				if (this.entityData.AdmOpenAcadSemesterId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AdmOpenAcadSemesterId, this.entityData.AdmOpenAcadSemesterId);
				this.entityData.AdmOpenAcadSemesterId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AdmOpenAcadSemesterId, this.entityData.AdmOpenAcadSemesterId);
				OnPropertyChanged("AdmOpenAcadSemesterId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmCdeStatusId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmCdeStatusIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmCdeStatusId
		{
			get
			{
				return this.entityData.AdmCdeStatusId; 
			}
			
			set
			{
				if (this.entityData.AdmCdeStatusId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AdmCdeStatusId, this.entityData.AdmCdeStatusId);
				this.entityData.AdmCdeStatusId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AdmCdeStatusId, this.entityData.AdmCdeStatusId);
				OnPropertyChanged("AdmCdeStatusId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OverAllAcceptanceFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal OverAllAcceptanceFlg
		{
			get
			{
				return this.entityData.OverAllAcceptanceFlg; 
			}
			
			set
			{
				if (this.entityData.OverAllAcceptanceFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.OverAllAcceptanceFlg, this.entityData.OverAllAcceptanceFlg);
				this.entityData.OverAllAcceptanceFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.OverAllAcceptanceFlg, this.entityData.OverAllAcceptanceFlg);
				OnPropertyChanged("OverAllAcceptanceFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OrintationFlg property. 
		///		oriented -provisonal
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"oriented -provisonal"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal OrintationFlg
		{
			get
			{
				return this.entityData.OrintationFlg; 
			}
			
			set
			{
				if (this.entityData.OrintationFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.OrintationFlg, this.entityData.OrintationFlg);
				this.entityData.OrintationFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.OrintationFlg, this.entityData.OrintationFlg);
				OnPropertyChanged("OrintationFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmAdmissionBandId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmAdmissionBandIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmAdmissionBandId
		{
			get
			{
				return this.entityData.AdmAdmissionBandId; 
			}
			
			set
			{
				if (this.entityData.AdmAdmissionBandId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AdmAdmissionBandId, this.entityData.AdmAdmissionBandId);
				this.entityData.AdmAdmissionBandId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AdmAdmissionBandId, this.entityData.AdmAdmissionBandId);
				OnPropertyChanged("AdmAdmissionBandId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DistributionFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal DistributionFlg
		{
			get
			{
				return this.entityData.DistributionFlg; 
			}
			
			set
			{
				if (this.entityData.DistributionFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.DistributionFlg, this.entityData.DistributionFlg);
				this.entityData.DistributionFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.DistributionFlg, this.entityData.DistributionFlg);
				OnPropertyChanged("DistributionFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EnrolledFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EnrolledFlg
		{
			get
			{
				return this.entityData.EnrolledFlg; 
			}
			
			set
			{
				if (this.entityData.EnrolledFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.EnrolledFlg, this.entityData.EnrolledFlg);
				this.entityData.EnrolledFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.EnrolledFlg, this.entityData.EnrolledFlg);
				OnPropertyChanged("EnrolledFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AutoDistrFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal AutoDistrFlg
		{
			get
			{
				return this.entityData.AutoDistrFlg; 
			}
			
			set
			{
				if (this.entityData.AutoDistrFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AutoDistrFlg, this.entityData.AutoDistrFlg);
				this.entityData.AutoDistrFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AutoDistrFlg, this.entityData.AutoDistrFlg);
				OnPropertyChanged("AutoDistrFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FullTimeFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFullTimeFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FullTimeFlg
		{
			get
			{
				return this.entityData.FullTimeFlg; 
			}
			
			set
			{
				if (this.entityData.FullTimeFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.FullTimeFlg, this.entityData.FullTimeFlg);
				this.entityData.FullTimeFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.FullTimeFlg, this.entityData.FullTimeFlg);
				OnPropertyChanged("FullTimeFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OnlneFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsOnlneFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? OnlneFlg
		{
			get
			{
				return this.entityData.OnlneFlg; 
			}
			
			set
			{
				if (this.entityData.OnlneFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.OnlneFlg, this.entityData.OnlneFlg);
				this.entityData.OnlneFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.OnlneFlg, this.entityData.OnlneFlg);
				OnPropertyChanged("OnlneFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeCdeDiscTypeId property. 
		///		منحة تفوق مؤهل
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFeeCdeDiscTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"منحة تفوق مؤهل"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FeeCdeDiscTypeId
		{
			get
			{
				return this.entityData.FeeCdeDiscTypeId; 
			}
			
			set
			{
				if (this.entityData.FeeCdeDiscTypeId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.FeeCdeDiscTypeId, this.entityData.FeeCdeDiscTypeId);
				this.entityData.FeeCdeDiscTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.FeeCdeDiscTypeId, this.entityData.FeeCdeDiscTypeId);
				OnPropertyChanged("FeeCdeDiscTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LmsUsr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String LmsUsr
		{
			get
			{
				return this.entityData.LmsUsr; 
			}
			
			set
			{
				if (this.entityData.LmsUsr == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.LmsUsr, this.entityData.LmsUsr);
				this.entityData.LmsUsr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.LmsUsr, this.entityData.LmsUsr);
				OnPropertyChanged("LmsUsr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LmsPwd property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String LmsPwd
		{
			get
			{
				return this.entityData.LmsPwd; 
			}
			
			set
			{
				if (this.entityData.LmsPwd == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.LmsPwd, this.entityData.LmsPwd);
				this.entityData.LmsPwd = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.LmsPwd, this.entityData.LmsPwd);
				OnPropertyChanged("LmsPwd");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmAppHstryCode property. 
		///		كود المتقدم
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"كود المتقدم"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String AdmAppHstryCode
		{
			get
			{
				return this.entityData.AdmAppHstryCode; 
			}
			
			set
			{
				if (this.entityData.AdmAppHstryCode == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AdmAppHstryCode, this.entityData.AdmAppHstryCode);
				this.entityData.AdmAppHstryCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AdmAppHstryCode, this.entityData.AdmAppHstryCode);
				OnPropertyChanged("AdmAppHstryCode");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BusFlg property. 
		///		هل يريد الاشتراك بالأتوبيس
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsBusFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"هل يريد الاشتراك بالأتوبيس"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? BusFlg
		{
			get
			{
				return this.entityData.BusFlg; 
			}
			
			set
			{
				if (this.entityData.BusFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.BusFlg, this.entityData.BusFlg);
				this.entityData.BusFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.BusFlg, this.entityData.BusFlg);
				OnPropertyChanged("BusFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeCdeSchshipTypeId property. 
		///		XXNU:انواع المنح الدراسية
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsFeeCdeSchshipTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXNU:انواع المنح الدراسية"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? FeeCdeSchshipTypeId
		{
			get
			{
				return this.entityData.FeeCdeSchshipTypeId; 
			}
			
			set
			{
				if (this.entityData.FeeCdeSchshipTypeId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.FeeCdeSchshipTypeId, this.entityData.FeeCdeSchshipTypeId);
				this.entityData.FeeCdeSchshipTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.FeeCdeSchshipTypeId, this.entityData.FeeCdeSchshipTypeId);
				OnPropertyChanged("FeeCdeSchshipTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SchshipNote property. 
		///		in case of other
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"in case of other"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String SchshipNote
		{
			get
			{
				return this.entityData.SchshipNote; 
			}
			
			set
			{
				if (this.entityData.SchshipNote == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.SchshipNote, this.entityData.SchshipNote);
				this.entityData.SchshipNote = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.SchshipNote, this.entityData.SchshipNote);
				OnPropertyChanged("SchshipNote");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SpoSponsorId property. 
		///		الجهة المانحة
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSpoSponsorIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"الجهة المانحة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SpoSponsorId
		{
			get
			{
				return this.entityData.SpoSponsorId; 
			}
			
			set
			{
				if (this.entityData.SpoSponsorId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.SpoSponsorId, this.entityData.SpoSponsorId);
				this.entityData.SpoSponsorId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.SpoSponsorId, this.entityData.SpoSponsorId);
				OnPropertyChanged("SpoSponsorId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SubmitFlg property. 
		///		submit طلب الالتحاق
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsSubmitFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"submit طلب الالتحاق"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? SubmitFlg
		{
			get
			{
				return this.entityData.SubmitFlg; 
			}
			
			set
			{
				if (this.entityData.SubmitFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.SubmitFlg, this.entityData.SubmitFlg);
				this.entityData.SubmitFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.SubmitFlg, this.entityData.SubmitFlg);
				OnPropertyChanged("SubmitFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeCdeDiscCatId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsFeeCdeDiscCatIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? FeeCdeDiscCatId
		{
			get
			{
				return this.entityData.FeeCdeDiscCatId; 
			}
			
			set
			{
				if (this.entityData.FeeCdeDiscCatId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.FeeCdeDiscCatId, this.entityData.FeeCdeDiscCatId);
				this.entityData.FeeCdeDiscCatId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.FeeCdeDiscCatId, this.entityData.FeeCdeDiscCatId);
				OnPropertyChanged("FeeCdeDiscCatId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SchshipTypeFlg property. 
		///		NU
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsSchshipTypeFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"NU"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? SchshipTypeFlg
		{
			get
			{
				return this.entityData.SchshipTypeFlg; 
			}
			
			set
			{
				if (this.entityData.SchshipTypeFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.SchshipTypeFlg, this.entityData.SchshipTypeFlg);
				this.entityData.SchshipTypeFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.SchshipTypeFlg, this.entityData.SchshipTypeFlg);
				OnPropertyChanged("SchshipTypeFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FincaidTypeFlg property. 
		///		xx NU
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsFincaidTypeFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"xx NU"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? FincaidTypeFlg
		{
			get
			{
				return this.entityData.FincaidTypeFlg; 
			}
			
			set
			{
				if (this.entityData.FincaidTypeFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.FincaidTypeFlg, this.entityData.FincaidTypeFlg);
				this.entityData.FincaidTypeFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.FincaidTypeFlg, this.entityData.FincaidTypeFlg);
				OnPropertyChanged("FincaidTypeFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HasRa property. 
		///		XXNUApplicant has a RA
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsHasRaNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXNUApplicant has a RA"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? HasRa
		{
			get
			{
				return this.entityData.HasRa; 
			}
			
			set
			{
				if (this.entityData.HasRa == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.HasRa, this.entityData.HasRa);
				this.entityData.HasRa = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.HasRa, this.entityData.HasRa);
				OnPropertyChanged("HasRa");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SubmitDate property. 
		///		تاريخ submit طلب الالتحاق
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsSubmitDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"تاريخ submit طلب الالتحاق"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? SubmitDate
		{
			get
			{
				return this.entityData.SubmitDate; 
			}
			
			set
			{
				if (this.entityData.SubmitDate == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.SubmitDate, this.entityData.SubmitDate);
				this.entityData.SubmitDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.SubmitDate, this.entityData.SubmitDate);
				OnPropertyChanged("SubmitDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		تاريخ اخر تعديل
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"تاريخ اخر تعديل"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmCdeStatusRsnId property. 
		///		XXسبب الرفضXX
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsAdmCdeStatusRsnIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXسبب الرفضXX"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? AdmCdeStatusRsnId
		{
			get
			{
				return this.entityData.AdmCdeStatusRsnId; 
			}
			
			set
			{
				if (this.entityData.AdmCdeStatusRsnId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AdmCdeStatusRsnId, this.entityData.AdmCdeStatusRsnId);
				this.entityData.AdmCdeStatusRsnId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AdmCdeStatusRsnId, this.entityData.AdmCdeStatusRsnId);
				OnPropertyChanged("AdmCdeStatusRsnId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TermcondFlg property. 
		///		Terms & condition Tabs check box
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsTermcondFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"Terms & condition Tabs check box"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? TermcondFlg
		{
			get
			{
				return this.entityData.TermcondFlg; 
			}
			
			set
			{
				if (this.entityData.TermcondFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.TermcondFlg, this.entityData.TermcondFlg);
				this.entityData.TermcondFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.TermcondFlg, this.entityData.TermcondFlg);
				OnPropertyChanged("TermcondFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DormFlg property. 
		///		housing yes/no
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsDormFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"housing yes/no"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? DormFlg
		{
			get
			{
				return this.entityData.DormFlg; 
			}
			
			set
			{
				if (this.entityData.DormFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.DormFlg, this.entityData.DormFlg);
				this.entityData.DormFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.DormFlg, this.entityData.DormFlg);
				OnPropertyChanged("DormFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EngNativeFlg property. 
		///		if=1 > exempt english certifacate even  required
		/// 		/// 2- native English   > exempted
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEngNativeFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"if=1 > exempt english certifacate even  required 2- native English   > exempted"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EngNativeFlg
		{
			get
			{
				return this.entityData.EngNativeFlg; 
			}
			
			set
			{
				if (this.entityData.EngNativeFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.EngNativeFlg, this.entityData.EngNativeFlg);
				this.entityData.EngNativeFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.EngNativeFlg, this.entityData.EngNativeFlg);
				OnPropertyChanged("EngNativeFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EngGradChkFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsEngGradChkFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? EngGradChkFlg
		{
			get
			{
				return this.entityData.EngGradChkFlg; 
			}
			
			set
			{
				if (this.entityData.EngGradChkFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.EngGradChkFlg, this.entityData.EngGradChkFlg);
				this.entityData.EngGradChkFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.EngGradChkFlg, this.entityData.EngGradChkFlg);
				OnPropertyChanged("EngGradChkFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WaitFlg property. 
		///		XXXXX
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsWaitFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXXXX"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? WaitFlg
		{
			get
			{
				return this.entityData.WaitFlg; 
			}
			
			set
			{
				if (this.entityData.WaitFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.WaitFlg, this.entityData.WaitFlg);
				this.entityData.WaitFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.WaitFlg, this.entityData.WaitFlg);
				OnPropertyChanged("WaitFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdAcadYearId property. 
		///		عام الالتحاق الفعلى
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdAcadYearIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"عام الالتحاق الفعلى"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdAcadYearId
		{
			get
			{
				return this.entityData.EdAcadYearId; 
			}
			
			set
			{
				if (this.entityData.EdAcadYearId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.EdAcadYearId, this.entityData.EdAcadYearId);
				this.entityData.EdAcadYearId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.EdAcadYearId, this.entityData.EdAcadYearId);
				OnPropertyChanged("EdAcadYearId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeSemesterId property. 
		///		فصل الالتحاق الفعلى
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeSemesterIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"فصل الالتحاق الفعلى"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCodeSemesterId
		{
			get
			{
				return this.entityData.EdCodeSemesterId; 
			}
			
			set
			{
				if (this.entityData.EdCodeSemesterId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.EdCodeSemesterId, this.entityData.EdCodeSemesterId);
				this.entityData.EdCodeSemesterId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.EdCodeSemesterId, this.entityData.EdCodeSemesterId);
				OnPropertyChanged("EdCodeSemesterId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MasterPhdFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsMasterPhdFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? MasterPhdFlg
		{
			get
			{
				return this.entityData.MasterPhdFlg; 
			}
			
			set
			{
				if (this.entityData.MasterPhdFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.MasterPhdFlg, this.entityData.MasterPhdFlg);
				this.entityData.MasterPhdFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.MasterPhdFlg, this.entityData.MasterPhdFlg);
				OnPropertyChanged("MasterPhdFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeLevelId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeLevelIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCodeLevelId
		{
			get
			{
				return this.entityData.EdCodeLevelId; 
			}
			
			set
			{
				if (this.entityData.EdCodeLevelId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.EdCodeLevelId, this.entityData.EdCodeLevelId);
				this.entityData.EdCodeLevelId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.EdCodeLevelId, this.entityData.EdCodeLevelId);
				OnPropertyChanged("EdCodeLevelId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SpoSponsorTypeId property. 
		///		Ejust نوع الكفيل حكومى-خاص-جامعة....
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSpoSponsorTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"Ejust نوع الكفيل حكومى-خاص-جامعة...."), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SpoSponsorTypeId
		{
			get
			{
				return this.entityData.SpoSponsorTypeId; 
			}
			
			set
			{
				if (this.entityData.SpoSponsorTypeId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.SpoSponsorTypeId, this.entityData.SpoSponsorTypeId);
				this.entityData.SpoSponsorTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.SpoSponsorTypeId, this.entityData.SpoSponsorTypeId);
				OnPropertyChanged("SpoSponsorTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the UrlReference property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String UrlReference
		{
			get
			{
				return this.entityData.UrlReference; 
			}
			
			set
			{
				if (this.entityData.UrlReference == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.UrlReference, this.entityData.UrlReference);
				this.entityData.UrlReference = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.UrlReference, this.entityData.UrlReference);
				OnPropertyChanged("UrlReference");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmCdeStatusOldId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmCdeStatusOldIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmCdeStatusOldId
		{
			get
			{
				return this.entityData.AdmCdeStatusOldId; 
			}
			
			set
			{
				if (this.entityData.AdmCdeStatusOldId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AdmCdeStatusOldId, this.entityData.AdmCdeStatusOldId);
				this.entityData.AdmCdeStatusOldId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AdmCdeStatusOldId, this.entityData.AdmCdeStatusOldId);
				OnPropertyChanged("AdmCdeStatusOldId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ProvisionalFlg property. 
		///		Ejust >PG_PROVISIONAL_FLG
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsProvisionalFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"Ejust >PG_PROVISIONAL_FLG"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? ProvisionalFlg
		{
			get
			{
				return this.entityData.ProvisionalFlg; 
			}
			
			set
			{
				if (this.entityData.ProvisionalFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.ProvisionalFlg, this.entityData.ProvisionalFlg);
				this.entityData.ProvisionalFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.ProvisionalFlg, this.entityData.ProvisionalFlg);
				OnPropertyChanged("ProvisionalFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmCdeAppStatusId property. 
		///		حالة المتقدم
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmCdeAppStatusIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"حالة المتقدم"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmCdeAppStatusId
		{
			get
			{
				return this.entityData.AdmCdeAppStatusId; 
			}
			
			set
			{
				if (this.entityData.AdmCdeAppStatusId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AdmCdeAppStatusId, this.entityData.AdmCdeAppStatusId);
				this.entityData.AdmCdeAppStatusId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AdmCdeAppStatusId, this.entityData.AdmCdeAppStatusId);
				OnPropertyChanged("AdmCdeAppStatusId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TansikFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsTansikFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? TansikFlg
		{
			get
			{
				return this.entityData.TansikFlg; 
			}
			
			set
			{
				if (this.entityData.TansikFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.TansikFlg, this.entityData.TansikFlg);
				this.entityData.TansikFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.TansikFlg, this.entityData.TansikFlg);
				OnPropertyChanged("TansikFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmDecisionStatusId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmDecisionStatusIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmDecisionStatusId
		{
			get
			{
				return this.entityData.AdmDecisionStatusId; 
			}
			
			set
			{
				if (this.entityData.AdmDecisionStatusId == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.AdmDecisionStatusId, this.entityData.AdmDecisionStatusId);
				this.entityData.AdmDecisionStatusId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.AdmDecisionStatusId, this.entityData.AdmDecisionStatusId);
				OnPropertyChanged("AdmDecisionStatusId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PartTimeFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsPartTimeFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? PartTimeFlg
		{
			get
			{
				return this.entityData.PartTimeFlg; 
			}
			
			set
			{
				if (this.entityData.PartTimeFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.PartTimeFlg, this.entityData.PartTimeFlg);
				this.entityData.PartTimeFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.PartTimeFlg, this.entityData.PartTimeFlg);
				OnPropertyChanged("PartTimeFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DataSentFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsDataSentFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? DataSentFlg
		{
			get
			{
				return this.entityData.DataSentFlg; 
			}
			
			set
			{
				if (this.entityData.DataSentFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.DataSentFlg, this.entityData.DataSentFlg);
				this.entityData.DataSentFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.DataSentFlg, this.entityData.DataSentFlg);
				OnPropertyChanged("DataSentFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CovidFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsCovidFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? CovidFlg
		{
			get
			{
				return this.entityData.CovidFlg; 
			}
			
			set
			{
				if (this.entityData.CovidFlg == value)
					return;
					
				OnColumnChanging(AdmAppRegHistoryColumn.CovidFlg, this.entityData.CovidFlg);
				this.entityData.CovidFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppRegHistoryColumn.CovidFlg, this.entityData.CovidFlg);
				OnPropertyChanged("CovidFlg");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="AdmAdmissionBand"/>.
		/// </summary>
		/// <value>The source AdmAdmissionBand for AdmAdmissionBandId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmAdmissionBand AdmAdmissionBandIdSource
      	{
            get { return entityData.AdmAdmissionBandIdSource; }
            set { entityData.AdmAdmissionBandIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeAppStatus"/>.
		/// </summary>
		/// <value>The source AdmCdeAppStatus for AdmCdeAppStatusId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmCdeAppStatus AdmCdeAppStatusIdSource
      	{
            get { return entityData.AdmCdeAppStatusIdSource; }
            set { entityData.AdmCdeAppStatusIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeAppType"/>.
		/// </summary>
		/// <value>The source AdmCdeAppType for AdmCdeAppTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmCdeAppType AdmCdeAppTypeIdSource
      	{
            get { return entityData.AdmCdeAppTypeIdSource; }
            set { entityData.AdmCdeAppTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeStatus"/>.
		/// </summary>
		/// <value>The source AdmCdeStatus for AdmCdeStatusId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmCdeStatus AdmCdeStatusIdSource
      	{
            get { return entityData.AdmCdeStatusIdSource; }
            set { entityData.AdmCdeStatusIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeStatusRsn"/>.
		/// </summary>
		/// <value>The source AdmCdeStatusRsn for AdmCdeStatusRsnId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmCdeStatusRsn AdmCdeStatusRsnIdSource
      	{
            get { return entityData.AdmCdeStatusRsnIdSource; }
            set { entityData.AdmCdeStatusRsnIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeStatus"/>.
		/// </summary>
		/// <value>The source AdmCdeStatus for AdmCdeStatusOldId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmCdeStatus AdmCdeStatusOldIdSource
      	{
            get { return entityData.AdmCdeStatusOldIdSource; }
            set { entityData.AdmCdeStatusOldIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmDecisionStatus"/>.
		/// </summary>
		/// <value>The source AdmDecisionStatus for AdmDecisionStatusId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmDecisionStatus AdmDecisionStatusIdSource
      	{
            get { return entityData.AdmDecisionStatusIdSource; }
            set { entityData.AdmDecisionStatusIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmApplicant"/>.
		/// </summary>
		/// <value>The source AdmApplicant for AdmApplicantId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmApplicant AdmApplicantIdSource
      	{
            get { return entityData.AdmApplicantIdSource; }
            set { entityData.AdmApplicantIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmOpenAcadSemester"/>.
		/// </summary>
		/// <value>The source AdmOpenAcadSemester for AdmOpenAcadSemesterId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmOpenAcadSemester AdmOpenAcadSemesterIdSource
      	{
            get { return entityData.AdmOpenAcadSemesterIdSource; }
            set { entityData.AdmOpenAcadSemesterIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AsCodeDegree"/>.
		/// </summary>
		/// <value>The source AsCodeDegree for AsCodeDegreeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AsCodeDegree AsCodeDegreeIdSource
      	{
            get { return entityData.AsCodeDegreeIdSource; }
            set { entityData.AsCodeDegreeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AsCodeDegreeClass"/>.
		/// </summary>
		/// <value>The source AsCodeDegreeClass for AsCodeDegreeClassId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AsCodeDegreeClass AsCodeDegreeClassIdSource
      	{
            get { return entityData.AsCodeDegreeClassIdSource; }
            set { entityData.AsCodeDegreeClassIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdAcadYear"/>.
		/// </summary>
		/// <value>The source EdAcadYear for EdAcadYearId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdAcadYear EdAcadYearIdSource
      	{
            get { return entityData.EdAcadYearIdSource; }
            set { entityData.EdAcadYearIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeLevel"/>.
		/// </summary>
		/// <value>The source EdCodeLevel for EdCodeLevelId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeLevel EdCodeLevelIdSource
      	{
            get { return entityData.EdCodeLevelIdSource; }
            set { entityData.EdCodeLevelIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeSemester"/>.
		/// </summary>
		/// <value>The source EdCodeSemester for EdCodeSemesterId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeSemester EdCodeSemesterIdSource
      	{
            get { return entityData.EdCodeSemesterIdSource; }
            set { entityData.EdCodeSemesterIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="FeeCdeDiscCat"/>.
		/// </summary>
		/// <value>The source FeeCdeDiscCat for FeeCdeDiscCatId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeCdeDiscCat FeeCdeDiscCatIdSource
      	{
            get { return entityData.FeeCdeDiscCatIdSource; }
            set { entityData.FeeCdeDiscCatIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="FeeCdeDiscType"/>.
		/// </summary>
		/// <value>The source FeeCdeDiscType for FeeCdeDiscTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeCdeDiscType FeeCdeDiscTypeIdSource
      	{
            get { return entityData.FeeCdeDiscTypeIdSource; }
            set { entityData.FeeCdeDiscTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="FeeCdeSchshipType"/>.
		/// </summary>
		/// <value>The source FeeCdeSchshipType for FeeCdeSchshipTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeCdeSchshipType FeeCdeSchshipTypeIdSource
      	{
            get { return entityData.FeeCdeSchshipTypeIdSource; }
            set { entityData.FeeCdeSchshipTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SeUser"/>.
		/// </summary>
		/// <value>The source SeUser for SeUserId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SeUser SeUserIdSource
      	{
            get { return entityData.SeUserIdSource; }
            set { entityData.SeUserIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SpoSponsor"/>.
		/// </summary>
		/// <value>The source SpoSponsor for SpoSponsorId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SpoSponsor SpoSponsorIdSource
      	{
            get { return entityData.SpoSponsorIdSource; }
            set { entityData.SpoSponsorIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SpoSponsorType"/>.
		/// </summary>
		/// <value>The source SpoSponsorType for SpoSponsorTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SpoSponsorType SpoSponsorTypeIdSource
      	{
            get { return entityData.SpoSponsorTypeIdSource; }
            set { entityData.SpoSponsorTypeIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of SpoSponsorStud objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_STUD_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorStud> SpoSponsorStudCollection
		{
			get { return entityData.SpoSponsorStudCollection; }
			set { entityData.SpoSponsorStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmApplicantAcceptance objects
		///	which are related to this object through the relation FK_ADM_APPLICANT_ACCEPTANCE_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmApplicantAcceptance> AdmApplicantAcceptanceCollection
		{
			get { return entityData.AdmApplicantAcceptanceCollection; }
			set { entityData.AdmApplicantAcceptanceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppInterviewExam objects
		///	which are related to this object through the relation FK_ADM_APP_INTERVIEW_EXAM_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppInterviewExam> AdmAppInterviewExamCollection
		{
			get { return entityData.AdmAppInterviewExamCollection; }
			set { entityData.AdmAppInterviewExamCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppPlaceExamCourse objects
		///	which are related to this object through the relation FK_ADM_APP_PLACE_EXAM_COURSE_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppPlaceExamCourse> AdmAppPlaceExamCourseCollection
		{
			get { return entityData.AdmAppPlaceExamCourseCollection; }
			set { entityData.AdmAppPlaceExamCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppHonor objects
		///	which are related to this object through the relation FK_ADM_APP_HONOR_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppHonor> AdmAppHonorCollection
		{
			get { return entityData.AdmAppHonorCollection; }
			set { entityData.AdmAppHonorCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppDoc objects
		///	which are related to this object through the relation FK_ADM_APP_DOC_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppDoc> AdmAppDocCollection
		{
			get { return entityData.AdmAppDocCollection; }
			set { entityData.AdmAppDocCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppExmptCourse objects
		///	which are related to this object through the relation FK_ADM_APP_EXMPT_COURSE_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppExmptCourse> AdmAppExmptCourseCollection
		{
			get { return entityData.AdmAppExmptCourseCollection; }
			set { entityData.AdmAppExmptCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppFeePromocode objects
		///	which are related to this object through the relation FK_ADM_APP_FEE_PROMOCODE_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppFeePromocode> AdmAppFeePromocodeCollection
		{
			get { return entityData.AdmAppFeePromocodeCollection; }
			set { entityData.AdmAppFeePromocodeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudDisc objects
		///	which are related to this object through the relation FK_FEE_STUD_DISC_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudDisc> FeeStudDiscCollection
		{
			get { return entityData.FeeStudDiscCollection; }
			set { entityData.FeeStudDiscCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppInfo objects
		///	which are related to this object through the relation FK_ADM_APP_INFO_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppInfo> AdmAppInfoCollection
		{
			get { return entityData.AdmAppInfoCollection; }
			set { entityData.AdmAppInfoCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppPref objects
		///	which are related to this object through the relation FK_ADM_APP_PREF_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppPref> AdmAppPrefCollection
		{
			get { return entityData.AdmAppPrefCollection; }
			set { entityData.AdmAppPrefCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppPlacementExam objects
		///	which are related to this object through the relation FK_ADM_APP_PLACEMENT_EXAM_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppPlacementExam> AdmAppPlacementExamCollection
		{
			get { return entityData.AdmAppPlacementExamCollection; }
			set { entityData.AdmAppPlacementExamCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudQual objects
		///	which are related to this object through the relation FK_ED_STUD_QUAL_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudQual> EdStudQualCollection
		{
			get { return entityData.EdStudQualCollection; }
			set { entityData.EdStudQualCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmTansikAppCodes objects
		///	which are related to this object through the relation FK_ADM_Tansik_App_Codes_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmTansikAppCodes> AdmTansikAppCodesCollection
		{
			get { return entityData.AdmTansikAppCodesCollection; }
			set { entityData.AdmTansikAppCodesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudMilitaryState objects
		///	which are related to this object through the relation FK_ED_STUD_MILITARY_STATE_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudMilitaryState> EdStudMilitaryStateCollection
		{
			get { return entityData.EdStudMilitaryStateCollection; }
			set { entityData.EdStudMilitaryStateCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppGuardian objects
		///	which are related to this object through the relation FK_ADM_APP_GUARDIAN_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppGuardian> AdmAppGuardianCollection
		{
			get { return entityData.AdmAppGuardianCollection; }
			set { entityData.AdmAppGuardianCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudMilitaryInfo objects
		///	which are related to this object through the relation FK_ED_STUD_MILITARY_INFO_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudMilitaryInfo> EdStudMilitaryInfoCollection
		{
			get { return entityData.EdStudMilitaryInfoCollection; }
			set { entityData.EdStudMilitaryInfoCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppProcSteps objects
		///	which are related to this object through the relation FK_ADM_APP_PROC_STEPS_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppProcSteps> AdmAppProcStepsCollection
		{
			get { return entityData.AdmAppProcStepsCollection; }
			set { entityData.AdmAppProcStepsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppEssay objects
		///	which are related to this object through the relation FK_ADM_APP_ESSAY_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppEssay> AdmAppEssayCollection
		{
			get { return entityData.AdmAppEssayCollection; }
			set { entityData.AdmAppEssayCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppLanguages objects
		///	which are related to this object through the relation FK_ADM_APP_LANGUAGES_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppLanguages> AdmAppLanguagesCollection
		{
			get { return entityData.AdmAppLanguagesCollection; }
			set { entityData.AdmAppLanguagesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppAlumniPref objects
		///	which are related to this object through the relation FK_ADM_APP_ALUMNI_PREF_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppAlumniPref> AdmAppAlumniPrefCollection
		{
			get { return entityData.AdmAppAlumniPrefCollection; }
			set { entityData.AdmAppAlumniPrefCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppMedia objects
		///	which are related to this object through the relation FK_ADM_APP_MEDIA_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppMedia> AdmAppMediaCollection
		{
			get { return entityData.AdmAppMediaCollection; }
			set { entityData.AdmAppMediaCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppSponsor objects
		///	which are related to this object through the relation FK_ADM_APP_SPONSOR_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppSponsor> AdmAppSponsorCollection
		{
			get { return entityData.AdmAppSponsorCollection; }
			set { entityData.AdmAppSponsorCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmEnglishProficiency objects
		///	which are related to this object through the relation FK_ADM_ENGLISH_PROFICIENCY_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmEnglishProficiency> AdmEnglishProficiencyCollection
		{
			get { return entityData.AdmEnglishProficiencyCollection; }
			set { entityData.AdmEnglishProficiencyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppTransReq objects
		///	which are related to this object through the relation FK_ADM_APP_TRANS_REQ_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppTransReq> AdmAppTransReqCollection
		{
			get { return entityData.AdmAppTransReqCollection; }
			set { entityData.AdmAppTransReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppWorkExper objects
		///	which are related to this object through the relation FK_ADM_APP_WORK_EXPER_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppWorkExper> AdmAppWorkExperCollection
		{
			get { return entityData.AdmAppWorkExperCollection; }
			set { entityData.AdmAppWorkExperCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppLtrRecom objects
		///	which are related to this object through the relation FK_ADM_APP_LTR_RECOM_ADM_APP_REG_HISTORY
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppLtrRecom> AdmAppLtrRecomCollection
		{
			get { return entityData.AdmAppLtrRecomCollection; }
			set { entityData.AdmAppLtrRecomCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LmsUsr", "Lms Usr", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LmsPwd", "Lms Pwd", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("AdmAppHstryCode", "Adm App Hstry Code", 30));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SchshipNote", "Schship Note", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("UrlReference", "Url Reference", 50));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ADM_APP_REG_HISTORY"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ADM_APP_REG_HISTORY_ID", "ADM_APPLICANT_ID", "APP_DATE", "ADM_CDE_APP_TYPE_ID", "CURRENT_FLG", "AS_CODE_DEGREE_ID", "AS_CODE_DEGREE_CLASS_ID", "COMPTATIVE_RATE", "ADM_OPEN_ACAD_SEMESTER_ID", "SE_USER_ID", "ADM_CDE_STATUS_ID", "OVER_ALL_ACCEPTANCE_FLG", "ORINTATION_FLG", "ADM_ADMISSION_BAND_ID", "DISTRIBUTION_FLG", "ENROLLED_FLG", "AUTO_DISTR_FLG", "FULL_TIME_FLG", "ONLNE_FLG", "FEE_CDE_DISC_TYPE_ID", "LMS_USR", "LMS_PWD", "ADM_APP_HSTRY_CODE", "BUS_FLG", "FEE_CDE_SCHSHIP_TYPE_ID", "SCHSHIP_NOTE", "SPO_SPONSOR_ID", "SUBMIT_FLG", "FEE_CDE_DISC_CAT_ID", "SCHSHIP_TYPE_FLG", "FINCAID_TYPE_FLG", "HAS_RA", "SUBMIT_DATE", "LAST_DATE", "ADM_CDE_STATUS_RSN_ID", "TERMCOND_FLG", "DORM_FLG", "ENG_NATIVE_FLG", "ENG_GRAD_CHK_FLG", "WAIT_FLG", "ED_ACAD_YEAR_ID", "ED_CODE_SEMESTER_ID", "MASTER_PHD_FLG", "ED_CODE_LEVEL_ID", "SPO_SPONSOR_TYPE_ID", "URL_REFERENCE", "ADM_CDE_STATUS_OLD_ID", "PROVISIONAL_FLG", "ADM_CDE_APP_STATUS_ID", "TansiK_FLG", "Adm_Decision_Status_Id", "PART_TIME_FLG", "DATA_SENT_FLG", "COVID_FLG"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as AdmAppRegHistoryEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (AdmAppRegHistory) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<AdmAppRegHistory>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as AdmAppRegHistory);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed AdmAppRegHistory Entity 
		///</summary>
		protected virtual AdmAppRegHistory Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			AdmAppRegHistory copy = new AdmAppRegHistory();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.AdmAppRegHistoryId = this.AdmAppRegHistoryId;
					copy.OriginalAdmAppRegHistoryId = this.OriginalAdmAppRegHistoryId;
				copy.AdmApplicantId = this.AdmApplicantId;
				copy.AppDate = this.AppDate;
				copy.AdmCdeAppTypeId = this.AdmCdeAppTypeId;
				copy.CurrentFlg = this.CurrentFlg;
				copy.AsCodeDegreeId = this.AsCodeDegreeId;
				copy.AsCodeDegreeClassId = this.AsCodeDegreeClassId;
				copy.ComptativeRate = this.ComptativeRate;
				copy.AdmOpenAcadSemesterId = this.AdmOpenAcadSemesterId;
				copy.SeUserId = this.SeUserId;
				copy.AdmCdeStatusId = this.AdmCdeStatusId;
				copy.OverAllAcceptanceFlg = this.OverAllAcceptanceFlg;
				copy.OrintationFlg = this.OrintationFlg;
				copy.AdmAdmissionBandId = this.AdmAdmissionBandId;
				copy.DistributionFlg = this.DistributionFlg;
				copy.EnrolledFlg = this.EnrolledFlg;
				copy.AutoDistrFlg = this.AutoDistrFlg;
				copy.FullTimeFlg = this.FullTimeFlg;
				copy.OnlneFlg = this.OnlneFlg;
				copy.FeeCdeDiscTypeId = this.FeeCdeDiscTypeId;
				copy.LmsUsr = this.LmsUsr;
				copy.LmsPwd = this.LmsPwd;
				copy.AdmAppHstryCode = this.AdmAppHstryCode;
				copy.BusFlg = this.BusFlg;
				copy.FeeCdeSchshipTypeId = this.FeeCdeSchshipTypeId;
				copy.SchshipNote = this.SchshipNote;
				copy.SpoSponsorId = this.SpoSponsorId;
				copy.SubmitFlg = this.SubmitFlg;
				copy.FeeCdeDiscCatId = this.FeeCdeDiscCatId;
				copy.SchshipTypeFlg = this.SchshipTypeFlg;
				copy.FincaidTypeFlg = this.FincaidTypeFlg;
				copy.HasRa = this.HasRa;
				copy.SubmitDate = this.SubmitDate;
				copy.LastDate = this.LastDate;
				copy.AdmCdeStatusRsnId = this.AdmCdeStatusRsnId;
				copy.TermcondFlg = this.TermcondFlg;
				copy.DormFlg = this.DormFlg;
				copy.EngNativeFlg = this.EngNativeFlg;
				copy.EngGradChkFlg = this.EngGradChkFlg;
				copy.WaitFlg = this.WaitFlg;
				copy.EdAcadYearId = this.EdAcadYearId;
				copy.EdCodeSemesterId = this.EdCodeSemesterId;
				copy.MasterPhdFlg = this.MasterPhdFlg;
				copy.EdCodeLevelId = this.EdCodeLevelId;
				copy.SpoSponsorTypeId = this.SpoSponsorTypeId;
				copy.UrlReference = this.UrlReference;
				copy.AdmCdeStatusOldId = this.AdmCdeStatusOldId;
				copy.ProvisionalFlg = this.ProvisionalFlg;
				copy.AdmCdeAppStatusId = this.AdmCdeAppStatusId;
				copy.TansikFlg = this.TansikFlg;
				copy.AdmDecisionStatusId = this.AdmDecisionStatusId;
				copy.PartTimeFlg = this.PartTimeFlg;
				copy.DataSentFlg = this.DataSentFlg;
				copy.CovidFlg = this.CovidFlg;
			
			if (this.AdmAdmissionBandIdSource != null && existingCopies.Contains(this.AdmAdmissionBandIdSource))
				copy.AdmAdmissionBandIdSource = existingCopies[this.AdmAdmissionBandIdSource] as AdmAdmissionBand;
			else
				copy.AdmAdmissionBandIdSource = MakeCopyOf(this.AdmAdmissionBandIdSource, existingCopies) as AdmAdmissionBand;
			if (this.AdmCdeAppStatusIdSource != null && existingCopies.Contains(this.AdmCdeAppStatusIdSource))
				copy.AdmCdeAppStatusIdSource = existingCopies[this.AdmCdeAppStatusIdSource] as AdmCdeAppStatus;
			else
				copy.AdmCdeAppStatusIdSource = MakeCopyOf(this.AdmCdeAppStatusIdSource, existingCopies) as AdmCdeAppStatus;
			if (this.AdmCdeAppTypeIdSource != null && existingCopies.Contains(this.AdmCdeAppTypeIdSource))
				copy.AdmCdeAppTypeIdSource = existingCopies[this.AdmCdeAppTypeIdSource] as AdmCdeAppType;
			else
				copy.AdmCdeAppTypeIdSource = MakeCopyOf(this.AdmCdeAppTypeIdSource, existingCopies) as AdmCdeAppType;
			if (this.AdmCdeStatusIdSource != null && existingCopies.Contains(this.AdmCdeStatusIdSource))
				copy.AdmCdeStatusIdSource = existingCopies[this.AdmCdeStatusIdSource] as AdmCdeStatus;
			else
				copy.AdmCdeStatusIdSource = MakeCopyOf(this.AdmCdeStatusIdSource, existingCopies) as AdmCdeStatus;
			if (this.AdmCdeStatusRsnIdSource != null && existingCopies.Contains(this.AdmCdeStatusRsnIdSource))
				copy.AdmCdeStatusRsnIdSource = existingCopies[this.AdmCdeStatusRsnIdSource] as AdmCdeStatusRsn;
			else
				copy.AdmCdeStatusRsnIdSource = MakeCopyOf(this.AdmCdeStatusRsnIdSource, existingCopies) as AdmCdeStatusRsn;
			if (this.AdmCdeStatusOldIdSource != null && existingCopies.Contains(this.AdmCdeStatusOldIdSource))
				copy.AdmCdeStatusOldIdSource = existingCopies[this.AdmCdeStatusOldIdSource] as AdmCdeStatus;
			else
				copy.AdmCdeStatusOldIdSource = MakeCopyOf(this.AdmCdeStatusOldIdSource, existingCopies) as AdmCdeStatus;
			if (this.AdmDecisionStatusIdSource != null && existingCopies.Contains(this.AdmDecisionStatusIdSource))
				copy.AdmDecisionStatusIdSource = existingCopies[this.AdmDecisionStatusIdSource] as AdmDecisionStatus;
			else
				copy.AdmDecisionStatusIdSource = MakeCopyOf(this.AdmDecisionStatusIdSource, existingCopies) as AdmDecisionStatus;
			if (this.AdmApplicantIdSource != null && existingCopies.Contains(this.AdmApplicantIdSource))
				copy.AdmApplicantIdSource = existingCopies[this.AdmApplicantIdSource] as AdmApplicant;
			else
				copy.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource, existingCopies) as AdmApplicant;
			if (this.AdmOpenAcadSemesterIdSource != null && existingCopies.Contains(this.AdmOpenAcadSemesterIdSource))
				copy.AdmOpenAcadSemesterIdSource = existingCopies[this.AdmOpenAcadSemesterIdSource] as AdmOpenAcadSemester;
			else
				copy.AdmOpenAcadSemesterIdSource = MakeCopyOf(this.AdmOpenAcadSemesterIdSource, existingCopies) as AdmOpenAcadSemester;
			if (this.AsCodeDegreeIdSource != null && existingCopies.Contains(this.AsCodeDegreeIdSource))
				copy.AsCodeDegreeIdSource = existingCopies[this.AsCodeDegreeIdSource] as AsCodeDegree;
			else
				copy.AsCodeDegreeIdSource = MakeCopyOf(this.AsCodeDegreeIdSource, existingCopies) as AsCodeDegree;
			if (this.AsCodeDegreeClassIdSource != null && existingCopies.Contains(this.AsCodeDegreeClassIdSource))
				copy.AsCodeDegreeClassIdSource = existingCopies[this.AsCodeDegreeClassIdSource] as AsCodeDegreeClass;
			else
				copy.AsCodeDegreeClassIdSource = MakeCopyOf(this.AsCodeDegreeClassIdSource, existingCopies) as AsCodeDegreeClass;
			if (this.EdAcadYearIdSource != null && existingCopies.Contains(this.EdAcadYearIdSource))
				copy.EdAcadYearIdSource = existingCopies[this.EdAcadYearIdSource] as EdAcadYear;
			else
				copy.EdAcadYearIdSource = MakeCopyOf(this.EdAcadYearIdSource, existingCopies) as EdAcadYear;
			if (this.EdCodeLevelIdSource != null && existingCopies.Contains(this.EdCodeLevelIdSource))
				copy.EdCodeLevelIdSource = existingCopies[this.EdCodeLevelIdSource] as EdCodeLevel;
			else
				copy.EdCodeLevelIdSource = MakeCopyOf(this.EdCodeLevelIdSource, existingCopies) as EdCodeLevel;
			if (this.EdCodeSemesterIdSource != null && existingCopies.Contains(this.EdCodeSemesterIdSource))
				copy.EdCodeSemesterIdSource = existingCopies[this.EdCodeSemesterIdSource] as EdCodeSemester;
			else
				copy.EdCodeSemesterIdSource = MakeCopyOf(this.EdCodeSemesterIdSource, existingCopies) as EdCodeSemester;
			if (this.FeeCdeDiscCatIdSource != null && existingCopies.Contains(this.FeeCdeDiscCatIdSource))
				copy.FeeCdeDiscCatIdSource = existingCopies[this.FeeCdeDiscCatIdSource] as FeeCdeDiscCat;
			else
				copy.FeeCdeDiscCatIdSource = MakeCopyOf(this.FeeCdeDiscCatIdSource, existingCopies) as FeeCdeDiscCat;
			if (this.FeeCdeDiscTypeIdSource != null && existingCopies.Contains(this.FeeCdeDiscTypeIdSource))
				copy.FeeCdeDiscTypeIdSource = existingCopies[this.FeeCdeDiscTypeIdSource] as FeeCdeDiscType;
			else
				copy.FeeCdeDiscTypeIdSource = MakeCopyOf(this.FeeCdeDiscTypeIdSource, existingCopies) as FeeCdeDiscType;
			if (this.FeeCdeSchshipTypeIdSource != null && existingCopies.Contains(this.FeeCdeSchshipTypeIdSource))
				copy.FeeCdeSchshipTypeIdSource = existingCopies[this.FeeCdeSchshipTypeIdSource] as FeeCdeSchshipType;
			else
				copy.FeeCdeSchshipTypeIdSource = MakeCopyOf(this.FeeCdeSchshipTypeIdSource, existingCopies) as FeeCdeSchshipType;
			if (this.SeUserIdSource != null && existingCopies.Contains(this.SeUserIdSource))
				copy.SeUserIdSource = existingCopies[this.SeUserIdSource] as SeUser;
			else
				copy.SeUserIdSource = MakeCopyOf(this.SeUserIdSource, existingCopies) as SeUser;
			if (this.SpoSponsorIdSource != null && existingCopies.Contains(this.SpoSponsorIdSource))
				copy.SpoSponsorIdSource = existingCopies[this.SpoSponsorIdSource] as SpoSponsor;
			else
				copy.SpoSponsorIdSource = MakeCopyOf(this.SpoSponsorIdSource, existingCopies) as SpoSponsor;
			if (this.SpoSponsorTypeIdSource != null && existingCopies.Contains(this.SpoSponsorTypeIdSource))
				copy.SpoSponsorTypeIdSource = existingCopies[this.SpoSponsorTypeIdSource] as SpoSponsorType;
			else
				copy.SpoSponsorTypeIdSource = MakeCopyOf(this.SpoSponsorTypeIdSource, existingCopies) as SpoSponsorType;
		
			//deep copy nested objects
			copy.SpoSponsorStudCollection = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollection, existingCopies); 
			copy.AdmApplicantAcceptanceCollection = (TList<AdmApplicantAcceptance>) MakeCopyOf(this.AdmApplicantAcceptanceCollection, existingCopies); 
			copy.AdmAppInterviewExamCollection = (TList<AdmAppInterviewExam>) MakeCopyOf(this.AdmAppInterviewExamCollection, existingCopies); 
			copy.AdmAppPlaceExamCourseCollection = (TList<AdmAppPlaceExamCourse>) MakeCopyOf(this.AdmAppPlaceExamCourseCollection, existingCopies); 
			copy.AdmAppHonorCollection = (TList<AdmAppHonor>) MakeCopyOf(this.AdmAppHonorCollection, existingCopies); 
			copy.AdmAppDocCollection = (TList<AdmAppDoc>) MakeCopyOf(this.AdmAppDocCollection, existingCopies); 
			copy.AdmAppExmptCourseCollection = (TList<AdmAppExmptCourse>) MakeCopyOf(this.AdmAppExmptCourseCollection, existingCopies); 
			copy.AdmAppFeePromocodeCollection = (TList<AdmAppFeePromocode>) MakeCopyOf(this.AdmAppFeePromocodeCollection, existingCopies); 
			copy.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection, existingCopies); 
			copy.AdmAppInfoCollection = (TList<AdmAppInfo>) MakeCopyOf(this.AdmAppInfoCollection, existingCopies); 
			copy.AdmAppPrefCollection = (TList<AdmAppPref>) MakeCopyOf(this.AdmAppPrefCollection, existingCopies); 
			copy.AdmAppPlacementExamCollection = (TList<AdmAppPlacementExam>) MakeCopyOf(this.AdmAppPlacementExamCollection, existingCopies); 
			copy.EdStudQualCollection = (TList<EdStudQual>) MakeCopyOf(this.EdStudQualCollection, existingCopies); 
			copy.AdmTansikAppCodesCollection = (TList<AdmTansikAppCodes>) MakeCopyOf(this.AdmTansikAppCodesCollection, existingCopies); 
			copy.EdStudMilitaryStateCollection = (TList<EdStudMilitaryState>) MakeCopyOf(this.EdStudMilitaryStateCollection, existingCopies); 
			copy.AdmAppGuardianCollection = (TList<AdmAppGuardian>) MakeCopyOf(this.AdmAppGuardianCollection, existingCopies); 
			copy.EdStudMilitaryInfoCollection = (TList<EdStudMilitaryInfo>) MakeCopyOf(this.EdStudMilitaryInfoCollection, existingCopies); 
			copy.AdmAppProcStepsCollection = (TList<AdmAppProcSteps>) MakeCopyOf(this.AdmAppProcStepsCollection, existingCopies); 
			copy.AdmAppEssayCollection = (TList<AdmAppEssay>) MakeCopyOf(this.AdmAppEssayCollection, existingCopies); 
			copy.AdmAppLanguagesCollection = (TList<AdmAppLanguages>) MakeCopyOf(this.AdmAppLanguagesCollection, existingCopies); 
			copy.AdmAppAlumniPrefCollection = (TList<AdmAppAlumniPref>) MakeCopyOf(this.AdmAppAlumniPrefCollection, existingCopies); 
			copy.AdmAppMediaCollection = (TList<AdmAppMedia>) MakeCopyOf(this.AdmAppMediaCollection, existingCopies); 
			copy.AdmAppSponsorCollection = (TList<AdmAppSponsor>) MakeCopyOf(this.AdmAppSponsorCollection, existingCopies); 
			copy.AdmEnglishProficiencyCollection = (TList<AdmEnglishProficiency>) MakeCopyOf(this.AdmEnglishProficiencyCollection, existingCopies); 
			copy.AdmAppTransReqCollection = (TList<AdmAppTransReq>) MakeCopyOf(this.AdmAppTransReqCollection, existingCopies); 
			copy.AdmAppWorkExperCollection = (TList<AdmAppWorkExper>) MakeCopyOf(this.AdmAppWorkExperCollection, existingCopies); 
			copy.AdmAppLtrRecomCollection = (TList<AdmAppLtrRecom>) MakeCopyOf(this.AdmAppLtrRecomCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed AdmAppRegHistory Entity 
		///</summary>
		public virtual AdmAppRegHistory Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed AdmAppRegHistory Entity which is a deep copy of the current entity.
		///</summary>
		public virtual AdmAppRegHistory DeepCopy()
		{
			return EntityHelper.Clone<AdmAppRegHistory>(this as AdmAppRegHistory);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as AdmAppRegHistoryEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new AdmAppRegHistoryEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as AdmAppRegHistoryEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(AdmAppRegHistoryColumn column)
		{
			switch(column)
			{
					case AdmAppRegHistoryColumn.AdmAppRegHistoryId:
					return entityData.AdmAppRegHistoryId != _originalData.AdmAppRegHistoryId;
					case AdmAppRegHistoryColumn.AdmApplicantId:
					return entityData.AdmApplicantId != _originalData.AdmApplicantId;
					case AdmAppRegHistoryColumn.AppDate:
					return entityData.AppDate != _originalData.AppDate;
					case AdmAppRegHistoryColumn.AdmCdeAppTypeId:
					return entityData.AdmCdeAppTypeId != _originalData.AdmCdeAppTypeId;
					case AdmAppRegHistoryColumn.CurrentFlg:
					return entityData.CurrentFlg != _originalData.CurrentFlg;
					case AdmAppRegHistoryColumn.AsCodeDegreeId:
					return entityData.AsCodeDegreeId != _originalData.AsCodeDegreeId;
					case AdmAppRegHistoryColumn.AsCodeDegreeClassId:
					return entityData.AsCodeDegreeClassId != _originalData.AsCodeDegreeClassId;
					case AdmAppRegHistoryColumn.ComptativeRate:
					return entityData.ComptativeRate != _originalData.ComptativeRate;
					case AdmAppRegHistoryColumn.AdmOpenAcadSemesterId:
					return entityData.AdmOpenAcadSemesterId != _originalData.AdmOpenAcadSemesterId;
					case AdmAppRegHistoryColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
					case AdmAppRegHistoryColumn.AdmCdeStatusId:
					return entityData.AdmCdeStatusId != _originalData.AdmCdeStatusId;
					case AdmAppRegHistoryColumn.OverAllAcceptanceFlg:
					return entityData.OverAllAcceptanceFlg != _originalData.OverAllAcceptanceFlg;
					case AdmAppRegHistoryColumn.OrintationFlg:
					return entityData.OrintationFlg != _originalData.OrintationFlg;
					case AdmAppRegHistoryColumn.AdmAdmissionBandId:
					return entityData.AdmAdmissionBandId != _originalData.AdmAdmissionBandId;
					case AdmAppRegHistoryColumn.DistributionFlg:
					return entityData.DistributionFlg != _originalData.DistributionFlg;
					case AdmAppRegHistoryColumn.EnrolledFlg:
					return entityData.EnrolledFlg != _originalData.EnrolledFlg;
					case AdmAppRegHistoryColumn.AutoDistrFlg:
					return entityData.AutoDistrFlg != _originalData.AutoDistrFlg;
					case AdmAppRegHistoryColumn.FullTimeFlg:
					return entityData.FullTimeFlg != _originalData.FullTimeFlg;
					case AdmAppRegHistoryColumn.OnlneFlg:
					return entityData.OnlneFlg != _originalData.OnlneFlg;
					case AdmAppRegHistoryColumn.FeeCdeDiscTypeId:
					return entityData.FeeCdeDiscTypeId != _originalData.FeeCdeDiscTypeId;
					case AdmAppRegHistoryColumn.LmsUsr:
					return entityData.LmsUsr != _originalData.LmsUsr;
					case AdmAppRegHistoryColumn.LmsPwd:
					return entityData.LmsPwd != _originalData.LmsPwd;
					case AdmAppRegHistoryColumn.AdmAppHstryCode:
					return entityData.AdmAppHstryCode != _originalData.AdmAppHstryCode;
					case AdmAppRegHistoryColumn.BusFlg:
					return entityData.BusFlg != _originalData.BusFlg;
					case AdmAppRegHistoryColumn.FeeCdeSchshipTypeId:
					return entityData.FeeCdeSchshipTypeId != _originalData.FeeCdeSchshipTypeId;
					case AdmAppRegHistoryColumn.SchshipNote:
					return entityData.SchshipNote != _originalData.SchshipNote;
					case AdmAppRegHistoryColumn.SpoSponsorId:
					return entityData.SpoSponsorId != _originalData.SpoSponsorId;
					case AdmAppRegHistoryColumn.SubmitFlg:
					return entityData.SubmitFlg != _originalData.SubmitFlg;
					case AdmAppRegHistoryColumn.FeeCdeDiscCatId:
					return entityData.FeeCdeDiscCatId != _originalData.FeeCdeDiscCatId;
					case AdmAppRegHistoryColumn.SchshipTypeFlg:
					return entityData.SchshipTypeFlg != _originalData.SchshipTypeFlg;
					case AdmAppRegHistoryColumn.FincaidTypeFlg:
					return entityData.FincaidTypeFlg != _originalData.FincaidTypeFlg;
					case AdmAppRegHistoryColumn.HasRa:
					return entityData.HasRa != _originalData.HasRa;
					case AdmAppRegHistoryColumn.SubmitDate:
					return entityData.SubmitDate != _originalData.SubmitDate;
					case AdmAppRegHistoryColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
					case AdmAppRegHistoryColumn.AdmCdeStatusRsnId:
					return entityData.AdmCdeStatusRsnId != _originalData.AdmCdeStatusRsnId;
					case AdmAppRegHistoryColumn.TermcondFlg:
					return entityData.TermcondFlg != _originalData.TermcondFlg;
					case AdmAppRegHistoryColumn.DormFlg:
					return entityData.DormFlg != _originalData.DormFlg;
					case AdmAppRegHistoryColumn.EngNativeFlg:
					return entityData.EngNativeFlg != _originalData.EngNativeFlg;
					case AdmAppRegHistoryColumn.EngGradChkFlg:
					return entityData.EngGradChkFlg != _originalData.EngGradChkFlg;
					case AdmAppRegHistoryColumn.WaitFlg:
					return entityData.WaitFlg != _originalData.WaitFlg;
					case AdmAppRegHistoryColumn.EdAcadYearId:
					return entityData.EdAcadYearId != _originalData.EdAcadYearId;
					case AdmAppRegHistoryColumn.EdCodeSemesterId:
					return entityData.EdCodeSemesterId != _originalData.EdCodeSemesterId;
					case AdmAppRegHistoryColumn.MasterPhdFlg:
					return entityData.MasterPhdFlg != _originalData.MasterPhdFlg;
					case AdmAppRegHistoryColumn.EdCodeLevelId:
					return entityData.EdCodeLevelId != _originalData.EdCodeLevelId;
					case AdmAppRegHistoryColumn.SpoSponsorTypeId:
					return entityData.SpoSponsorTypeId != _originalData.SpoSponsorTypeId;
					case AdmAppRegHistoryColumn.UrlReference:
					return entityData.UrlReference != _originalData.UrlReference;
					case AdmAppRegHistoryColumn.AdmCdeStatusOldId:
					return entityData.AdmCdeStatusOldId != _originalData.AdmCdeStatusOldId;
					case AdmAppRegHistoryColumn.ProvisionalFlg:
					return entityData.ProvisionalFlg != _originalData.ProvisionalFlg;
					case AdmAppRegHistoryColumn.AdmCdeAppStatusId:
					return entityData.AdmCdeAppStatusId != _originalData.AdmCdeAppStatusId;
					case AdmAppRegHistoryColumn.TansikFlg:
					return entityData.TansikFlg != _originalData.TansikFlg;
					case AdmAppRegHistoryColumn.AdmDecisionStatusId:
					return entityData.AdmDecisionStatusId != _originalData.AdmDecisionStatusId;
					case AdmAppRegHistoryColumn.PartTimeFlg:
					return entityData.PartTimeFlg != _originalData.PartTimeFlg;
					case AdmAppRegHistoryColumn.DataSentFlg:
					return entityData.DataSentFlg != _originalData.DataSentFlg;
					case AdmAppRegHistoryColumn.CovidFlg:
					return entityData.CovidFlg != _originalData.CovidFlg;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< AdmAppRegHistoryColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.AdmAppRegHistoryId != _originalData.AdmAppRegHistoryId;
			result = result || entityData.AdmApplicantId != _originalData.AdmApplicantId;
			result = result || entityData.AppDate != _originalData.AppDate;
			result = result || entityData.AdmCdeAppTypeId != _originalData.AdmCdeAppTypeId;
			result = result || entityData.CurrentFlg != _originalData.CurrentFlg;
			result = result || entityData.AsCodeDegreeId != _originalData.AsCodeDegreeId;
			result = result || entityData.AsCodeDegreeClassId != _originalData.AsCodeDegreeClassId;
			result = result || entityData.ComptativeRate != _originalData.ComptativeRate;
			result = result || entityData.AdmOpenAcadSemesterId != _originalData.AdmOpenAcadSemesterId;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			result = result || entityData.AdmCdeStatusId != _originalData.AdmCdeStatusId;
			result = result || entityData.OverAllAcceptanceFlg != _originalData.OverAllAcceptanceFlg;
			result = result || entityData.OrintationFlg != _originalData.OrintationFlg;
			result = result || entityData.AdmAdmissionBandId != _originalData.AdmAdmissionBandId;
			result = result || entityData.DistributionFlg != _originalData.DistributionFlg;
			result = result || entityData.EnrolledFlg != _originalData.EnrolledFlg;
			result = result || entityData.AutoDistrFlg != _originalData.AutoDistrFlg;
			result = result || entityData.FullTimeFlg != _originalData.FullTimeFlg;
			result = result || entityData.OnlneFlg != _originalData.OnlneFlg;
			result = result || entityData.FeeCdeDiscTypeId != _originalData.FeeCdeDiscTypeId;
			result = result || entityData.LmsUsr != _originalData.LmsUsr;
			result = result || entityData.LmsPwd != _originalData.LmsPwd;
			result = result || entityData.AdmAppHstryCode != _originalData.AdmAppHstryCode;
			result = result || entityData.BusFlg != _originalData.BusFlg;
			result = result || entityData.FeeCdeSchshipTypeId != _originalData.FeeCdeSchshipTypeId;
			result = result || entityData.SchshipNote != _originalData.SchshipNote;
			result = result || entityData.SpoSponsorId != _originalData.SpoSponsorId;
			result = result || entityData.SubmitFlg != _originalData.SubmitFlg;
			result = result || entityData.FeeCdeDiscCatId != _originalData.FeeCdeDiscCatId;
			result = result || entityData.SchshipTypeFlg != _originalData.SchshipTypeFlg;
			result = result || entityData.FincaidTypeFlg != _originalData.FincaidTypeFlg;
			result = result || entityData.HasRa != _originalData.HasRa;
			result = result || entityData.SubmitDate != _originalData.SubmitDate;
			result = result || entityData.LastDate != _originalData.LastDate;
			result = result || entityData.AdmCdeStatusRsnId != _originalData.AdmCdeStatusRsnId;
			result = result || entityData.TermcondFlg != _originalData.TermcondFlg;
			result = result || entityData.DormFlg != _originalData.DormFlg;
			result = result || entityData.EngNativeFlg != _originalData.EngNativeFlg;
			result = result || entityData.EngGradChkFlg != _originalData.EngGradChkFlg;
			result = result || entityData.WaitFlg != _originalData.WaitFlg;
			result = result || entityData.EdAcadYearId != _originalData.EdAcadYearId;
			result = result || entityData.EdCodeSemesterId != _originalData.EdCodeSemesterId;
			result = result || entityData.MasterPhdFlg != _originalData.MasterPhdFlg;
			result = result || entityData.EdCodeLevelId != _originalData.EdCodeLevelId;
			result = result || entityData.SpoSponsorTypeId != _originalData.SpoSponsorTypeId;
			result = result || entityData.UrlReference != _originalData.UrlReference;
			result = result || entityData.AdmCdeStatusOldId != _originalData.AdmCdeStatusOldId;
			result = result || entityData.ProvisionalFlg != _originalData.ProvisionalFlg;
			result = result || entityData.AdmCdeAppStatusId != _originalData.AdmCdeAppStatusId;
			result = result || entityData.TansikFlg != _originalData.TansikFlg;
			result = result || entityData.AdmDecisionStatusId != _originalData.AdmDecisionStatusId;
			result = result || entityData.PartTimeFlg != _originalData.PartTimeFlg;
			result = result || entityData.DataSentFlg != _originalData.DataSentFlg;
			result = result || entityData.CovidFlg != _originalData.CovidFlg;
			return result;
		}	
		
		///<summary>
		///  Returns a AdmAppRegHistory Entity with the original data.
		///</summary>
		public AdmAppRegHistory GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateAdmAppRegHistory(
				_originalData.AdmAppRegHistoryId,
				_originalData.AdmApplicantId,
				_originalData.AppDate,
				_originalData.AdmCdeAppTypeId,
				_originalData.CurrentFlg,
				_originalData.AsCodeDegreeId,
				_originalData.AsCodeDegreeClassId,
				_originalData.ComptativeRate,
				_originalData.AdmOpenAcadSemesterId,
				_originalData.SeUserId,
				_originalData.AdmCdeStatusId,
				_originalData.OverAllAcceptanceFlg,
				_originalData.OrintationFlg,
				_originalData.AdmAdmissionBandId,
				_originalData.DistributionFlg,
				_originalData.EnrolledFlg,
				_originalData.AutoDistrFlg,
				_originalData.FullTimeFlg,
				_originalData.OnlneFlg,
				_originalData.FeeCdeDiscTypeId,
				_originalData.LmsUsr,
				_originalData.LmsPwd,
				_originalData.AdmAppHstryCode,
				_originalData.BusFlg,
				_originalData.FeeCdeSchshipTypeId,
				_originalData.SchshipNote,
				_originalData.SpoSponsorId,
				_originalData.SubmitFlg,
				_originalData.FeeCdeDiscCatId,
				_originalData.SchshipTypeFlg,
				_originalData.FincaidTypeFlg,
				_originalData.HasRa,
				_originalData.SubmitDate,
				_originalData.LastDate,
				_originalData.AdmCdeStatusRsnId,
				_originalData.TermcondFlg,
				_originalData.DormFlg,
				_originalData.EngNativeFlg,
				_originalData.EngGradChkFlg,
				_originalData.WaitFlg,
				_originalData.EdAcadYearId,
				_originalData.EdCodeSemesterId,
				_originalData.MasterPhdFlg,
				_originalData.EdCodeLevelId,
				_originalData.SpoSponsorTypeId,
				_originalData.UrlReference,
				_originalData.AdmCdeStatusOldId,
				_originalData.ProvisionalFlg,
				_originalData.AdmCdeAppStatusId,
				_originalData.TansikFlg,
				_originalData.AdmDecisionStatusId,
				_originalData.PartTimeFlg,
				_originalData.DataSentFlg,
				_originalData.CovidFlg
				);
				
			return (AdmAppRegHistory)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="AdmAppRegHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is AdmAppRegHistoryBase)
				return ValueEquals(this, (AdmAppRegHistoryBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="AdmAppRegHistoryBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.AdmAppRegHistoryId.GetHashCode() ^ 
					((this.AdmApplicantId == null) ? string.Empty : this.AdmApplicantId.ToString()).GetHashCode() ^ 
					((this.AppDate == null) ? string.Empty : this.AppDate.ToString()).GetHashCode() ^ 
					((this.AdmCdeAppTypeId == null) ? string.Empty : this.AdmCdeAppTypeId.ToString()).GetHashCode() ^ 
					((this.CurrentFlg == null) ? string.Empty : this.CurrentFlg.ToString()).GetHashCode() ^ 
					((this.AsCodeDegreeId == null) ? string.Empty : this.AsCodeDegreeId.ToString()).GetHashCode() ^ 
					((this.AsCodeDegreeClassId == null) ? string.Empty : this.AsCodeDegreeClassId.ToString()).GetHashCode() ^ 
					((this.ComptativeRate == null) ? string.Empty : this.ComptativeRate.ToString()).GetHashCode() ^ 
					((this.AdmOpenAcadSemesterId == null) ? string.Empty : this.AdmOpenAcadSemesterId.ToString()).GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode() ^ 
					((this.AdmCdeStatusId == null) ? string.Empty : this.AdmCdeStatusId.ToString()).GetHashCode() ^ 
					this.OverAllAcceptanceFlg.GetHashCode() ^ 
					this.OrintationFlg.GetHashCode() ^ 
					((this.AdmAdmissionBandId == null) ? string.Empty : this.AdmAdmissionBandId.ToString()).GetHashCode() ^ 
					this.DistributionFlg.GetHashCode() ^ 
					this.EnrolledFlg.GetHashCode() ^ 
					this.AutoDistrFlg.GetHashCode() ^ 
					((this.FullTimeFlg == null) ? string.Empty : this.FullTimeFlg.ToString()).GetHashCode() ^ 
					((this.OnlneFlg == null) ? string.Empty : this.OnlneFlg.ToString()).GetHashCode() ^ 
					((this.FeeCdeDiscTypeId == null) ? string.Empty : this.FeeCdeDiscTypeId.ToString()).GetHashCode() ^ 
					((this.LmsUsr == null) ? string.Empty : this.LmsUsr.ToString()).GetHashCode() ^ 
					((this.LmsPwd == null) ? string.Empty : this.LmsPwd.ToString()).GetHashCode() ^ 
					((this.AdmAppHstryCode == null) ? string.Empty : this.AdmAppHstryCode.ToString()).GetHashCode() ^ 
					((this.BusFlg == null) ? string.Empty : this.BusFlg.ToString()).GetHashCode() ^ 
					((this.FeeCdeSchshipTypeId == null) ? string.Empty : this.FeeCdeSchshipTypeId.ToString()).GetHashCode() ^ 
					((this.SchshipNote == null) ? string.Empty : this.SchshipNote.ToString()).GetHashCode() ^ 
					((this.SpoSponsorId == null) ? string.Empty : this.SpoSponsorId.ToString()).GetHashCode() ^ 
					((this.SubmitFlg == null) ? string.Empty : this.SubmitFlg.ToString()).GetHashCode() ^ 
					((this.FeeCdeDiscCatId == null) ? string.Empty : this.FeeCdeDiscCatId.ToString()).GetHashCode() ^ 
					((this.SchshipTypeFlg == null) ? string.Empty : this.SchshipTypeFlg.ToString()).GetHashCode() ^ 
					((this.FincaidTypeFlg == null) ? string.Empty : this.FincaidTypeFlg.ToString()).GetHashCode() ^ 
					((this.HasRa == null) ? string.Empty : this.HasRa.ToString()).GetHashCode() ^ 
					((this.SubmitDate == null) ? string.Empty : this.SubmitDate.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode() ^ 
					((this.AdmCdeStatusRsnId == null) ? string.Empty : this.AdmCdeStatusRsnId.ToString()).GetHashCode() ^ 
					((this.TermcondFlg == null) ? string.Empty : this.TermcondFlg.ToString()).GetHashCode() ^ 
					((this.DormFlg == null) ? string.Empty : this.DormFlg.ToString()).GetHashCode() ^ 
					((this.EngNativeFlg == null) ? string.Empty : this.EngNativeFlg.ToString()).GetHashCode() ^ 
					((this.EngGradChkFlg == null) ? string.Empty : this.EngGradChkFlg.ToString()).GetHashCode() ^ 
					((this.WaitFlg == null) ? string.Empty : this.WaitFlg.ToString()).GetHashCode() ^ 
					((this.EdAcadYearId == null) ? string.Empty : this.EdAcadYearId.ToString()).GetHashCode() ^ 
					((this.EdCodeSemesterId == null) ? string.Empty : this.EdCodeSemesterId.ToString()).GetHashCode() ^ 
					((this.MasterPhdFlg == null) ? string.Empty : this.MasterPhdFlg.ToString()).GetHashCode() ^ 
					((this.EdCodeLevelId == null) ? string.Empty : this.EdCodeLevelId.ToString()).GetHashCode() ^ 
					((this.SpoSponsorTypeId == null) ? string.Empty : this.SpoSponsorTypeId.ToString()).GetHashCode() ^ 
					((this.UrlReference == null) ? string.Empty : this.UrlReference.ToString()).GetHashCode() ^ 
					((this.AdmCdeStatusOldId == null) ? string.Empty : this.AdmCdeStatusOldId.ToString()).GetHashCode() ^ 
					((this.ProvisionalFlg == null) ? string.Empty : this.ProvisionalFlg.ToString()).GetHashCode() ^ 
					((this.AdmCdeAppStatusId == null) ? string.Empty : this.AdmCdeAppStatusId.ToString()).GetHashCode() ^ 
					((this.TansikFlg == null) ? string.Empty : this.TansikFlg.ToString()).GetHashCode() ^ 
					((this.AdmDecisionStatusId == null) ? string.Empty : this.AdmDecisionStatusId.ToString()).GetHashCode() ^ 
					((this.PartTimeFlg == null) ? string.Empty : this.PartTimeFlg.ToString()).GetHashCode() ^ 
					((this.DataSentFlg == null) ? string.Empty : this.DataSentFlg.ToString()).GetHashCode() ^ 
					((this.CovidFlg == null) ? string.Empty : this.CovidFlg.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="AdmAppRegHistoryBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(AdmAppRegHistoryBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="AdmAppRegHistoryBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="AdmAppRegHistoryBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="AdmAppRegHistoryBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(AdmAppRegHistoryBase Object1, AdmAppRegHistoryBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.AdmAppRegHistoryId != Object2.AdmAppRegHistoryId)
				equal = false;
			if ( Object1.AdmApplicantId != null && Object2.AdmApplicantId != null )
			{
				if (Object1.AdmApplicantId != Object2.AdmApplicantId)
					equal = false;
			}
			else if (Object1.AdmApplicantId == null ^ Object2.AdmApplicantId == null )
			{
				equal = false;
			}
			if ( Object1.AppDate != null && Object2.AppDate != null )
			{
				if (Object1.AppDate != Object2.AppDate)
					equal = false;
			}
			else if (Object1.AppDate == null ^ Object2.AppDate == null )
			{
				equal = false;
			}
			if ( Object1.AdmCdeAppTypeId != null && Object2.AdmCdeAppTypeId != null )
			{
				if (Object1.AdmCdeAppTypeId != Object2.AdmCdeAppTypeId)
					equal = false;
			}
			else if (Object1.AdmCdeAppTypeId == null ^ Object2.AdmCdeAppTypeId == null )
			{
				equal = false;
			}
			if ( Object1.CurrentFlg != null && Object2.CurrentFlg != null )
			{
				if (Object1.CurrentFlg != Object2.CurrentFlg)
					equal = false;
			}
			else if (Object1.CurrentFlg == null ^ Object2.CurrentFlg == null )
			{
				equal = false;
			}
			if ( Object1.AsCodeDegreeId != null && Object2.AsCodeDegreeId != null )
			{
				if (Object1.AsCodeDegreeId != Object2.AsCodeDegreeId)
					equal = false;
			}
			else if (Object1.AsCodeDegreeId == null ^ Object2.AsCodeDegreeId == null )
			{
				equal = false;
			}
			if ( Object1.AsCodeDegreeClassId != null && Object2.AsCodeDegreeClassId != null )
			{
				if (Object1.AsCodeDegreeClassId != Object2.AsCodeDegreeClassId)
					equal = false;
			}
			else if (Object1.AsCodeDegreeClassId == null ^ Object2.AsCodeDegreeClassId == null )
			{
				equal = false;
			}
			if ( Object1.ComptativeRate != null && Object2.ComptativeRate != null )
			{
				if (Object1.ComptativeRate != Object2.ComptativeRate)
					equal = false;
			}
			else if (Object1.ComptativeRate == null ^ Object2.ComptativeRate == null )
			{
				equal = false;
			}
			if ( Object1.AdmOpenAcadSemesterId != null && Object2.AdmOpenAcadSemesterId != null )
			{
				if (Object1.AdmOpenAcadSemesterId != Object2.AdmOpenAcadSemesterId)
					equal = false;
			}
			else if (Object1.AdmOpenAcadSemesterId == null ^ Object2.AdmOpenAcadSemesterId == null )
			{
				equal = false;
			}
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
			if ( Object1.AdmCdeStatusId != null && Object2.AdmCdeStatusId != null )
			{
				if (Object1.AdmCdeStatusId != Object2.AdmCdeStatusId)
					equal = false;
			}
			else if (Object1.AdmCdeStatusId == null ^ Object2.AdmCdeStatusId == null )
			{
				equal = false;
			}
			if (Object1.OverAllAcceptanceFlg != Object2.OverAllAcceptanceFlg)
				equal = false;
			if (Object1.OrintationFlg != Object2.OrintationFlg)
				equal = false;
			if ( Object1.AdmAdmissionBandId != null && Object2.AdmAdmissionBandId != null )
			{
				if (Object1.AdmAdmissionBandId != Object2.AdmAdmissionBandId)
					equal = false;
			}
			else if (Object1.AdmAdmissionBandId == null ^ Object2.AdmAdmissionBandId == null )
			{
				equal = false;
			}
			if (Object1.DistributionFlg != Object2.DistributionFlg)
				equal = false;
			if (Object1.EnrolledFlg != Object2.EnrolledFlg)
				equal = false;
			if (Object1.AutoDistrFlg != Object2.AutoDistrFlg)
				equal = false;
			if ( Object1.FullTimeFlg != null && Object2.FullTimeFlg != null )
			{
				if (Object1.FullTimeFlg != Object2.FullTimeFlg)
					equal = false;
			}
			else if (Object1.FullTimeFlg == null ^ Object2.FullTimeFlg == null )
			{
				equal = false;
			}
			if ( Object1.OnlneFlg != null && Object2.OnlneFlg != null )
			{
				if (Object1.OnlneFlg != Object2.OnlneFlg)
					equal = false;
			}
			else if (Object1.OnlneFlg == null ^ Object2.OnlneFlg == null )
			{
				equal = false;
			}
			if ( Object1.FeeCdeDiscTypeId != null && Object2.FeeCdeDiscTypeId != null )
			{
				if (Object1.FeeCdeDiscTypeId != Object2.FeeCdeDiscTypeId)
					equal = false;
			}
			else if (Object1.FeeCdeDiscTypeId == null ^ Object2.FeeCdeDiscTypeId == null )
			{
				equal = false;
			}
			if ( Object1.LmsUsr != null && Object2.LmsUsr != null )
			{
				if (Object1.LmsUsr != Object2.LmsUsr)
					equal = false;
			}
			else if (Object1.LmsUsr == null ^ Object2.LmsUsr == null )
			{
				equal = false;
			}
			if ( Object1.LmsPwd != null && Object2.LmsPwd != null )
			{
				if (Object1.LmsPwd != Object2.LmsPwd)
					equal = false;
			}
			else if (Object1.LmsPwd == null ^ Object2.LmsPwd == null )
			{
				equal = false;
			}
			if ( Object1.AdmAppHstryCode != null && Object2.AdmAppHstryCode != null )
			{
				if (Object1.AdmAppHstryCode != Object2.AdmAppHstryCode)
					equal = false;
			}
			else if (Object1.AdmAppHstryCode == null ^ Object2.AdmAppHstryCode == null )
			{
				equal = false;
			}
			if ( Object1.BusFlg != null && Object2.BusFlg != null )
			{
				if (Object1.BusFlg != Object2.BusFlg)
					equal = false;
			}
			else if (Object1.BusFlg == null ^ Object2.BusFlg == null )
			{
				equal = false;
			}
			if ( Object1.FeeCdeSchshipTypeId != null && Object2.FeeCdeSchshipTypeId != null )
			{
				if (Object1.FeeCdeSchshipTypeId != Object2.FeeCdeSchshipTypeId)
					equal = false;
			}
			else if (Object1.FeeCdeSchshipTypeId == null ^ Object2.FeeCdeSchshipTypeId == null )
			{
				equal = false;
			}
			if ( Object1.SchshipNote != null && Object2.SchshipNote != null )
			{
				if (Object1.SchshipNote != Object2.SchshipNote)
					equal = false;
			}
			else if (Object1.SchshipNote == null ^ Object2.SchshipNote == null )
			{
				equal = false;
			}
			if ( Object1.SpoSponsorId != null && Object2.SpoSponsorId != null )
			{
				if (Object1.SpoSponsorId != Object2.SpoSponsorId)
					equal = false;
			}
			else if (Object1.SpoSponsorId == null ^ Object2.SpoSponsorId == null )
			{
				equal = false;
			}
			if ( Object1.SubmitFlg != null && Object2.SubmitFlg != null )
			{
				if (Object1.SubmitFlg != Object2.SubmitFlg)
					equal = false;
			}
			else if (Object1.SubmitFlg == null ^ Object2.SubmitFlg == null )
			{
				equal = false;
			}
			if ( Object1.FeeCdeDiscCatId != null && Object2.FeeCdeDiscCatId != null )
			{
				if (Object1.FeeCdeDiscCatId != Object2.FeeCdeDiscCatId)
					equal = false;
			}
			else if (Object1.FeeCdeDiscCatId == null ^ Object2.FeeCdeDiscCatId == null )
			{
				equal = false;
			}
			if ( Object1.SchshipTypeFlg != null && Object2.SchshipTypeFlg != null )
			{
				if (Object1.SchshipTypeFlg != Object2.SchshipTypeFlg)
					equal = false;
			}
			else if (Object1.SchshipTypeFlg == null ^ Object2.SchshipTypeFlg == null )
			{
				equal = false;
			}
			if ( Object1.FincaidTypeFlg != null && Object2.FincaidTypeFlg != null )
			{
				if (Object1.FincaidTypeFlg != Object2.FincaidTypeFlg)
					equal = false;
			}
			else if (Object1.FincaidTypeFlg == null ^ Object2.FincaidTypeFlg == null )
			{
				equal = false;
			}
			if ( Object1.HasRa != null && Object2.HasRa != null )
			{
				if (Object1.HasRa != Object2.HasRa)
					equal = false;
			}
			else if (Object1.HasRa == null ^ Object2.HasRa == null )
			{
				equal = false;
			}
			if ( Object1.SubmitDate != null && Object2.SubmitDate != null )
			{
				if (Object1.SubmitDate != Object2.SubmitDate)
					equal = false;
			}
			else if (Object1.SubmitDate == null ^ Object2.SubmitDate == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
			if ( Object1.AdmCdeStatusRsnId != null && Object2.AdmCdeStatusRsnId != null )
			{
				if (Object1.AdmCdeStatusRsnId != Object2.AdmCdeStatusRsnId)
					equal = false;
			}
			else if (Object1.AdmCdeStatusRsnId == null ^ Object2.AdmCdeStatusRsnId == null )
			{
				equal = false;
			}
			if ( Object1.TermcondFlg != null && Object2.TermcondFlg != null )
			{
				if (Object1.TermcondFlg != Object2.TermcondFlg)
					equal = false;
			}
			else if (Object1.TermcondFlg == null ^ Object2.TermcondFlg == null )
			{
				equal = false;
			}
			if ( Object1.DormFlg != null && Object2.DormFlg != null )
			{
				if (Object1.DormFlg != Object2.DormFlg)
					equal = false;
			}
			else if (Object1.DormFlg == null ^ Object2.DormFlg == null )
			{
				equal = false;
			}
			if ( Object1.EngNativeFlg != null && Object2.EngNativeFlg != null )
			{
				if (Object1.EngNativeFlg != Object2.EngNativeFlg)
					equal = false;
			}
			else if (Object1.EngNativeFlg == null ^ Object2.EngNativeFlg == null )
			{
				equal = false;
			}
			if ( Object1.EngGradChkFlg != null && Object2.EngGradChkFlg != null )
			{
				if (Object1.EngGradChkFlg != Object2.EngGradChkFlg)
					equal = false;
			}
			else if (Object1.EngGradChkFlg == null ^ Object2.EngGradChkFlg == null )
			{
				equal = false;
			}
			if ( Object1.WaitFlg != null && Object2.WaitFlg != null )
			{
				if (Object1.WaitFlg != Object2.WaitFlg)
					equal = false;
			}
			else if (Object1.WaitFlg == null ^ Object2.WaitFlg == null )
			{
				equal = false;
			}
			if ( Object1.EdAcadYearId != null && Object2.EdAcadYearId != null )
			{
				if (Object1.EdAcadYearId != Object2.EdAcadYearId)
					equal = false;
			}
			else if (Object1.EdAcadYearId == null ^ Object2.EdAcadYearId == null )
			{
				equal = false;
			}
			if ( Object1.EdCodeSemesterId != null && Object2.EdCodeSemesterId != null )
			{
				if (Object1.EdCodeSemesterId != Object2.EdCodeSemesterId)
					equal = false;
			}
			else if (Object1.EdCodeSemesterId == null ^ Object2.EdCodeSemesterId == null )
			{
				equal = false;
			}
			if ( Object1.MasterPhdFlg != null && Object2.MasterPhdFlg != null )
			{
				if (Object1.MasterPhdFlg != Object2.MasterPhdFlg)
					equal = false;
			}
			else if (Object1.MasterPhdFlg == null ^ Object2.MasterPhdFlg == null )
			{
				equal = false;
			}
			if ( Object1.EdCodeLevelId != null && Object2.EdCodeLevelId != null )
			{
				if (Object1.EdCodeLevelId != Object2.EdCodeLevelId)
					equal = false;
			}
			else if (Object1.EdCodeLevelId == null ^ Object2.EdCodeLevelId == null )
			{
				equal = false;
			}
			if ( Object1.SpoSponsorTypeId != null && Object2.SpoSponsorTypeId != null )
			{
				if (Object1.SpoSponsorTypeId != Object2.SpoSponsorTypeId)
					equal = false;
			}
			else if (Object1.SpoSponsorTypeId == null ^ Object2.SpoSponsorTypeId == null )
			{
				equal = false;
			}
			if ( Object1.UrlReference != null && Object2.UrlReference != null )
			{
				if (Object1.UrlReference != Object2.UrlReference)
					equal = false;
			}
			else if (Object1.UrlReference == null ^ Object2.UrlReference == null )
			{
				equal = false;
			}
			if ( Object1.AdmCdeStatusOldId != null && Object2.AdmCdeStatusOldId != null )
			{
				if (Object1.AdmCdeStatusOldId != Object2.AdmCdeStatusOldId)
					equal = false;
			}
			else if (Object1.AdmCdeStatusOldId == null ^ Object2.AdmCdeStatusOldId == null )
			{
				equal = false;
			}
			if ( Object1.ProvisionalFlg != null && Object2.ProvisionalFlg != null )
			{
				if (Object1.ProvisionalFlg != Object2.ProvisionalFlg)
					equal = false;
			}
			else if (Object1.ProvisionalFlg == null ^ Object2.ProvisionalFlg == null )
			{
				equal = false;
			}
			if ( Object1.AdmCdeAppStatusId != null && Object2.AdmCdeAppStatusId != null )
			{
				if (Object1.AdmCdeAppStatusId != Object2.AdmCdeAppStatusId)
					equal = false;
			}
			else if (Object1.AdmCdeAppStatusId == null ^ Object2.AdmCdeAppStatusId == null )
			{
				equal = false;
			}
			if ( Object1.TansikFlg != null && Object2.TansikFlg != null )
			{
				if (Object1.TansikFlg != Object2.TansikFlg)
					equal = false;
			}
			else if (Object1.TansikFlg == null ^ Object2.TansikFlg == null )
			{
				equal = false;
			}
			if ( Object1.AdmDecisionStatusId != null && Object2.AdmDecisionStatusId != null )
			{
				if (Object1.AdmDecisionStatusId != Object2.AdmDecisionStatusId)
					equal = false;
			}
			else if (Object1.AdmDecisionStatusId == null ^ Object2.AdmDecisionStatusId == null )
			{
				equal = false;
			}
			if ( Object1.PartTimeFlg != null && Object2.PartTimeFlg != null )
			{
				if (Object1.PartTimeFlg != Object2.PartTimeFlg)
					equal = false;
			}
			else if (Object1.PartTimeFlg == null ^ Object2.PartTimeFlg == null )
			{
				equal = false;
			}
			if ( Object1.DataSentFlg != null && Object2.DataSentFlg != null )
			{
				if (Object1.DataSentFlg != Object2.DataSentFlg)
					equal = false;
			}
			else if (Object1.DataSentFlg == null ^ Object2.DataSentFlg == null )
			{
				equal = false;
			}
			if ( Object1.CovidFlg != null && Object2.CovidFlg != null )
			{
				if (Object1.CovidFlg != Object2.CovidFlg)
					equal = false;
			}
			else if (Object1.CovidFlg == null ^ Object2.CovidFlg == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((AdmAppRegHistoryBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static AdmAppRegHistoryComparer GetComparer()
        {
            return new AdmAppRegHistoryComparer();
        }
        */

        // Comparer delegates back to AdmAppRegHistory
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(AdmAppRegHistory rhs, AdmAppRegHistoryColumn which)
        {
            switch (which)
            {
            	
            	
            	case AdmAppRegHistoryColumn.AdmAppRegHistoryId:
            		return this.AdmAppRegHistoryId.CompareTo(rhs.AdmAppRegHistoryId);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.AdmApplicantId:
            		return this.AdmApplicantId.Value.CompareTo(rhs.AdmApplicantId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.AppDate:
            		return this.AppDate.Value.CompareTo(rhs.AppDate.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.AdmCdeAppTypeId:
            		return this.AdmCdeAppTypeId.Value.CompareTo(rhs.AdmCdeAppTypeId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.CurrentFlg:
            		return this.CurrentFlg.Value.CompareTo(rhs.CurrentFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.AsCodeDegreeId:
            		return this.AsCodeDegreeId.Value.CompareTo(rhs.AsCodeDegreeId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.AsCodeDegreeClassId:
            		return this.AsCodeDegreeClassId.Value.CompareTo(rhs.AsCodeDegreeClassId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.ComptativeRate:
            		return this.ComptativeRate.Value.CompareTo(rhs.ComptativeRate.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.AdmOpenAcadSemesterId:
            		return this.AdmOpenAcadSemesterId.Value.CompareTo(rhs.AdmOpenAcadSemesterId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.AdmCdeStatusId:
            		return this.AdmCdeStatusId.Value.CompareTo(rhs.AdmCdeStatusId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.OverAllAcceptanceFlg:
            		return this.OverAllAcceptanceFlg.CompareTo(rhs.OverAllAcceptanceFlg);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.OrintationFlg:
            		return this.OrintationFlg.CompareTo(rhs.OrintationFlg);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.AdmAdmissionBandId:
            		return this.AdmAdmissionBandId.Value.CompareTo(rhs.AdmAdmissionBandId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.DistributionFlg:
            		return this.DistributionFlg.CompareTo(rhs.DistributionFlg);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.EnrolledFlg:
            		return this.EnrolledFlg.CompareTo(rhs.EnrolledFlg);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.AutoDistrFlg:
            		return this.AutoDistrFlg.CompareTo(rhs.AutoDistrFlg);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.FullTimeFlg:
            		return this.FullTimeFlg.Value.CompareTo(rhs.FullTimeFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.OnlneFlg:
            		return this.OnlneFlg.Value.CompareTo(rhs.OnlneFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.FeeCdeDiscTypeId:
            		return this.FeeCdeDiscTypeId.Value.CompareTo(rhs.FeeCdeDiscTypeId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.LmsUsr:
            		return this.LmsUsr.CompareTo(rhs.LmsUsr);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.LmsPwd:
            		return this.LmsPwd.CompareTo(rhs.LmsPwd);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.AdmAppHstryCode:
            		return this.AdmAppHstryCode.CompareTo(rhs.AdmAppHstryCode);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.BusFlg:
            		return this.BusFlg.Value.CompareTo(rhs.BusFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.FeeCdeSchshipTypeId:
            		return this.FeeCdeSchshipTypeId.Value.CompareTo(rhs.FeeCdeSchshipTypeId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.SchshipNote:
            		return this.SchshipNote.CompareTo(rhs.SchshipNote);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.SpoSponsorId:
            		return this.SpoSponsorId.Value.CompareTo(rhs.SpoSponsorId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.SubmitFlg:
            		return this.SubmitFlg.Value.CompareTo(rhs.SubmitFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.FeeCdeDiscCatId:
            		return this.FeeCdeDiscCatId.Value.CompareTo(rhs.FeeCdeDiscCatId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.SchshipTypeFlg:
            		return this.SchshipTypeFlg.Value.CompareTo(rhs.SchshipTypeFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.FincaidTypeFlg:
            		return this.FincaidTypeFlg.Value.CompareTo(rhs.FincaidTypeFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.HasRa:
            		return this.HasRa.Value.CompareTo(rhs.HasRa.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.SubmitDate:
            		return this.SubmitDate.Value.CompareTo(rhs.SubmitDate.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.AdmCdeStatusRsnId:
            		return this.AdmCdeStatusRsnId.Value.CompareTo(rhs.AdmCdeStatusRsnId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.TermcondFlg:
            		return this.TermcondFlg.Value.CompareTo(rhs.TermcondFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.DormFlg:
            		return this.DormFlg.Value.CompareTo(rhs.DormFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.EngNativeFlg:
            		return this.EngNativeFlg.Value.CompareTo(rhs.EngNativeFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.EngGradChkFlg:
            		return this.EngGradChkFlg.Value.CompareTo(rhs.EngGradChkFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.WaitFlg:
            		return this.WaitFlg.Value.CompareTo(rhs.WaitFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.EdAcadYearId:
            		return this.EdAcadYearId.Value.CompareTo(rhs.EdAcadYearId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.EdCodeSemesterId:
            		return this.EdCodeSemesterId.Value.CompareTo(rhs.EdCodeSemesterId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.MasterPhdFlg:
            		return this.MasterPhdFlg.Value.CompareTo(rhs.MasterPhdFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.EdCodeLevelId:
            		return this.EdCodeLevelId.Value.CompareTo(rhs.EdCodeLevelId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.SpoSponsorTypeId:
            		return this.SpoSponsorTypeId.Value.CompareTo(rhs.SpoSponsorTypeId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.UrlReference:
            		return this.UrlReference.CompareTo(rhs.UrlReference);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.AdmCdeStatusOldId:
            		return this.AdmCdeStatusOldId.Value.CompareTo(rhs.AdmCdeStatusOldId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.ProvisionalFlg:
            		return this.ProvisionalFlg.Value.CompareTo(rhs.ProvisionalFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.AdmCdeAppStatusId:
            		return this.AdmCdeAppStatusId.Value.CompareTo(rhs.AdmCdeAppStatusId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.TansikFlg:
            		return this.TansikFlg.Value.CompareTo(rhs.TansikFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.AdmDecisionStatusId:
            		return this.AdmDecisionStatusId.Value.CompareTo(rhs.AdmDecisionStatusId.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.PartTimeFlg:
            		return this.PartTimeFlg.Value.CompareTo(rhs.PartTimeFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.DataSentFlg:
            		return this.DataSentFlg.Value.CompareTo(rhs.DataSentFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppRegHistoryColumn.CovidFlg:
            		return this.CovidFlg.Value.CompareTo(rhs.CovidFlg.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<AdmAppRegHistoryKey> Members
		
		// member variable for the EntityId property
		private AdmAppRegHistoryKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual AdmAppRegHistoryKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new AdmAppRegHistoryKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("AdmAppRegHistory")
					.Append("|").Append( this.AdmAppRegHistoryId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{55}{54}- AdmAppRegHistoryId: {0}{54}- AdmApplicantId: {1}{54}- AppDate: {2}{54}- AdmCdeAppTypeId: {3}{54}- CurrentFlg: {4}{54}- AsCodeDegreeId: {5}{54}- AsCodeDegreeClassId: {6}{54}- ComptativeRate: {7}{54}- AdmOpenAcadSemesterId: {8}{54}- SeUserId: {9}{54}- AdmCdeStatusId: {10}{54}- OverAllAcceptanceFlg: {11}{54}- OrintationFlg: {12}{54}- AdmAdmissionBandId: {13}{54}- DistributionFlg: {14}{54}- EnrolledFlg: {15}{54}- AutoDistrFlg: {16}{54}- FullTimeFlg: {17}{54}- OnlneFlg: {18}{54}- FeeCdeDiscTypeId: {19}{54}- LmsUsr: {20}{54}- LmsPwd: {21}{54}- AdmAppHstryCode: {22}{54}- BusFlg: {23}{54}- FeeCdeSchshipTypeId: {24}{54}- SchshipNote: {25}{54}- SpoSponsorId: {26}{54}- SubmitFlg: {27}{54}- FeeCdeDiscCatId: {28}{54}- SchshipTypeFlg: {29}{54}- FincaidTypeFlg: {30}{54}- HasRa: {31}{54}- SubmitDate: {32}{54}- LastDate: {33}{54}- AdmCdeStatusRsnId: {34}{54}- TermcondFlg: {35}{54}- DormFlg: {36}{54}- EngNativeFlg: {37}{54}- EngGradChkFlg: {38}{54}- WaitFlg: {39}{54}- EdAcadYearId: {40}{54}- EdCodeSemesterId: {41}{54}- MasterPhdFlg: {42}{54}- EdCodeLevelId: {43}{54}- SpoSponsorTypeId: {44}{54}- UrlReference: {45}{54}- AdmCdeStatusOldId: {46}{54}- ProvisionalFlg: {47}{54}- AdmCdeAppStatusId: {48}{54}- TansikFlg: {49}{54}- AdmDecisionStatusId: {50}{54}- PartTimeFlg: {51}{54}- DataSentFlg: {52}{54}- CovidFlg: {53}{54}{56}", 
				this.AdmAppRegHistoryId,
				(this.AdmApplicantId == null) ? string.Empty : this.AdmApplicantId.ToString(),
				(this.AppDate == null) ? string.Empty : this.AppDate.ToString(),
				(this.AdmCdeAppTypeId == null) ? string.Empty : this.AdmCdeAppTypeId.ToString(),
				(this.CurrentFlg == null) ? string.Empty : this.CurrentFlg.ToString(),
				(this.AsCodeDegreeId == null) ? string.Empty : this.AsCodeDegreeId.ToString(),
				(this.AsCodeDegreeClassId == null) ? string.Empty : this.AsCodeDegreeClassId.ToString(),
				(this.ComptativeRate == null) ? string.Empty : this.ComptativeRate.ToString(),
				(this.AdmOpenAcadSemesterId == null) ? string.Empty : this.AdmOpenAcadSemesterId.ToString(),
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				(this.AdmCdeStatusId == null) ? string.Empty : this.AdmCdeStatusId.ToString(),
				this.OverAllAcceptanceFlg,
				this.OrintationFlg,
				(this.AdmAdmissionBandId == null) ? string.Empty : this.AdmAdmissionBandId.ToString(),
				this.DistributionFlg,
				this.EnrolledFlg,
				this.AutoDistrFlg,
				(this.FullTimeFlg == null) ? string.Empty : this.FullTimeFlg.ToString(),
				(this.OnlneFlg == null) ? string.Empty : this.OnlneFlg.ToString(),
				(this.FeeCdeDiscTypeId == null) ? string.Empty : this.FeeCdeDiscTypeId.ToString(),
				(this.LmsUsr == null) ? string.Empty : this.LmsUsr.ToString(),
				(this.LmsPwd == null) ? string.Empty : this.LmsPwd.ToString(),
				(this.AdmAppHstryCode == null) ? string.Empty : this.AdmAppHstryCode.ToString(),
				(this.BusFlg == null) ? string.Empty : this.BusFlg.ToString(),
				(this.FeeCdeSchshipTypeId == null) ? string.Empty : this.FeeCdeSchshipTypeId.ToString(),
				(this.SchshipNote == null) ? string.Empty : this.SchshipNote.ToString(),
				(this.SpoSponsorId == null) ? string.Empty : this.SpoSponsorId.ToString(),
				(this.SubmitFlg == null) ? string.Empty : this.SubmitFlg.ToString(),
				(this.FeeCdeDiscCatId == null) ? string.Empty : this.FeeCdeDiscCatId.ToString(),
				(this.SchshipTypeFlg == null) ? string.Empty : this.SchshipTypeFlg.ToString(),
				(this.FincaidTypeFlg == null) ? string.Empty : this.FincaidTypeFlg.ToString(),
				(this.HasRa == null) ? string.Empty : this.HasRa.ToString(),
				(this.SubmitDate == null) ? string.Empty : this.SubmitDate.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				(this.AdmCdeStatusRsnId == null) ? string.Empty : this.AdmCdeStatusRsnId.ToString(),
				(this.TermcondFlg == null) ? string.Empty : this.TermcondFlg.ToString(),
				(this.DormFlg == null) ? string.Empty : this.DormFlg.ToString(),
				(this.EngNativeFlg == null) ? string.Empty : this.EngNativeFlg.ToString(),
				(this.EngGradChkFlg == null) ? string.Empty : this.EngGradChkFlg.ToString(),
				(this.WaitFlg == null) ? string.Empty : this.WaitFlg.ToString(),
				(this.EdAcadYearId == null) ? string.Empty : this.EdAcadYearId.ToString(),
				(this.EdCodeSemesterId == null) ? string.Empty : this.EdCodeSemesterId.ToString(),
				(this.MasterPhdFlg == null) ? string.Empty : this.MasterPhdFlg.ToString(),
				(this.EdCodeLevelId == null) ? string.Empty : this.EdCodeLevelId.ToString(),
				(this.SpoSponsorTypeId == null) ? string.Empty : this.SpoSponsorTypeId.ToString(),
				(this.UrlReference == null) ? string.Empty : this.UrlReference.ToString(),
				(this.AdmCdeStatusOldId == null) ? string.Empty : this.AdmCdeStatusOldId.ToString(),
				(this.ProvisionalFlg == null) ? string.Empty : this.ProvisionalFlg.ToString(),
				(this.AdmCdeAppStatusId == null) ? string.Empty : this.AdmCdeAppStatusId.ToString(),
				(this.TansikFlg == null) ? string.Empty : this.TansikFlg.ToString(),
				(this.AdmDecisionStatusId == null) ? string.Empty : this.AdmDecisionStatusId.ToString(),
				(this.PartTimeFlg == null) ? string.Empty : this.PartTimeFlg.ToString(),
				(this.DataSentFlg == null) ? string.Empty : this.DataSentFlg.ToString(),
				(this.CovidFlg == null) ? string.Empty : this.CovidFlg.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ADM_APP_REG_HISTORY' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class AdmAppRegHistoryEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ADM_APP_REG_HISTORY_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ADM_APP_REG_HISTORY"</remarks>
		public System.Decimal AdmAppRegHistoryId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalAdmAppRegHistoryId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// ADM_APPLICANT_ID : 
		/// </summary>
		public System.Decimal?		  AdmApplicantId = null;
		
		/// <summary>
		/// APP_DATE : تاريخ ادخال طلب الالتحاق
		/// </summary>
		public System.DateTime?		  AppDate = null;
		
		/// <summary>
		/// ADM_CDE_APP_TYPE_ID : 
		/// </summary>
		public System.Decimal?		  AdmCdeAppTypeId = null;
		
		/// <summary>
		/// CURRENT_FLG : 
		/// </summary>
		public System.Decimal?		  CurrentFlg = null;
		
		/// <summary>
		/// AS_CODE_DEGREE_ID : 
		/// </summary>
		public System.Decimal?		  AsCodeDegreeId = null;
		
		/// <summary>
		/// AS_CODE_DEGREE_CLASS_ID : 
		/// </summary>
		public System.Decimal?		  AsCodeDegreeClassId = null;
		
		/// <summary>
		/// COMPTATIVE_RATE : 
		/// </summary>
		public System.Decimal?		  ComptativeRate = null;
		
		/// <summary>
		/// ADM_OPEN_ACAD_SEMESTER_ID : عام وفصل طلب الالتحاق
		/// </summary>
		public System.Decimal?		  AdmOpenAcadSemesterId = null;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		
		/// <summary>
		/// ADM_CDE_STATUS_ID : 
		/// </summary>
		public System.Decimal?		  AdmCdeStatusId = null;
		
		/// <summary>
		/// OVER_ALL_ACCEPTANCE_FLG : 
		/// </summary>
		public System.Decimal		  OverAllAcceptanceFlg = 0.0m;
		
		/// <summary>
		/// ORINTATION_FLG : oriented -provisonal
		/// </summary>
		public System.Decimal		  OrintationFlg = 0.0m;
		
		/// <summary>
		/// ADM_ADMISSION_BAND_ID : 
		/// </summary>
		public System.Decimal?		  AdmAdmissionBandId = null;
		
		/// <summary>
		/// DISTRIBUTION_FLG : 
		/// </summary>
		public System.Decimal		  DistributionFlg = 0.0m;
		
		/// <summary>
		/// ENROLLED_FLG : 
		/// </summary>
		public System.Decimal		  EnrolledFlg = 0.0m;
		
		/// <summary>
		/// AUTO_DISTR_FLG : 
		/// </summary>
		public System.Decimal		  AutoDistrFlg = 0.0m;
		
		/// <summary>
		/// FULL_TIME_FLG : 
		/// </summary>
		public System.Decimal?		  FullTimeFlg = null;
		
		/// <summary>
		/// ONLNE_FLG : 
		/// </summary>
		public System.Boolean?		  OnlneFlg = null;
		
		/// <summary>
		/// FEE_CDE_DISC_TYPE_ID : منحة تفوق مؤهل
		/// </summary>
		public System.Decimal?		  FeeCdeDiscTypeId = null;
		
		/// <summary>
		/// LMS_USR : 
		/// </summary>
		public System.String		  LmsUsr = null;
		
		/// <summary>
		/// LMS_PWD : 
		/// </summary>
		public System.String		  LmsPwd = null;
		
		/// <summary>
		/// ADM_APP_HSTRY_CODE : كود المتقدم
		/// </summary>
		public System.String		  AdmAppHstryCode = null;
		
		/// <summary>
		/// BUS_FLG : هل يريد الاشتراك بالأتوبيس
		/// </summary>
		public System.Boolean?		  BusFlg = null;
		
		/// <summary>
		/// FEE_CDE_SCHSHIP_TYPE_ID : XXNU:انواع المنح الدراسية
		/// </summary>
		public System.Int32?		  FeeCdeSchshipTypeId = null;
		
		/// <summary>
		/// SCHSHIP_NOTE : in case of other
		/// </summary>
		public System.String		  SchshipNote = null;
		
		/// <summary>
		/// SPO_SPONSOR_ID : الجهة المانحة
		/// </summary>
		public System.Decimal?		  SpoSponsorId = null;
		
		/// <summary>
		/// SUBMIT_FLG : submit طلب الالتحاق
		/// </summary>
		public System.Boolean?		  SubmitFlg = null;
		
		/// <summary>
		/// FEE_CDE_DISC_CAT_ID : 
		/// </summary>
		public System.Int32?		  FeeCdeDiscCatId = null;
		
		/// <summary>
		/// SCHSHIP_TYPE_FLG : NU
		/// </summary>
		public System.Boolean?		  SchshipTypeFlg = null;
		
		/// <summary>
		/// FINCAID_TYPE_FLG : xx NU
		/// </summary>
		public System.Boolean?		  FincaidTypeFlg = null;
		
		/// <summary>
		/// HAS_RA : XXNUApplicant has a RA
		/// </summary>
		public System.Boolean?		  HasRa = null;
		
		/// <summary>
		/// SUBMIT_DATE : تاريخ submit طلب الالتحاق
		/// </summary>
		public System.DateTime?		  SubmitDate = null;
		
		/// <summary>
		/// LAST_DATE : تاريخ اخر تعديل
		/// </summary>
		public System.DateTime?		  LastDate = null;
		
		/// <summary>
		/// ADM_CDE_STATUS_RSN_ID : XXسبب الرفضXX
		/// </summary>
		public System.Int32?		  AdmCdeStatusRsnId = null;
		
		/// <summary>
		/// TERMCOND_FLG : Terms & condition Tabs check box
		/// </summary>
		public System.Boolean?		  TermcondFlg = null;
		
		/// <summary>
		/// DORM_FLG : housing yes/no
		/// </summary>
		public System.Boolean?		  DormFlg = null;
		
		/// <summary>
		/// ENG_NATIVE_FLG : if=1 > exempt english certifacate even  required
		/// 		/// 2- native English   > exempted
		/// </summary>
		public System.Decimal?		  EngNativeFlg = null;
		
		/// <summary>
		/// ENG_GRAD_CHK_FLG : 
		/// </summary>
		public System.Boolean?		  EngGradChkFlg = null;
		
		/// <summary>
		/// WAIT_FLG : XXXXX
		/// </summary>
		public System.Boolean?		  WaitFlg = null;
		
		/// <summary>
		/// ED_ACAD_YEAR_ID : عام الالتحاق الفعلى
		/// </summary>
		public System.Decimal?		  EdAcadYearId = null;
		
		/// <summary>
		/// ED_CODE_SEMESTER_ID : فصل الالتحاق الفعلى
		/// </summary>
		public System.Decimal?		  EdCodeSemesterId = null;
		
		/// <summary>
		/// MASTER_PHD_FLG : 
		/// </summary>
		public System.Boolean?		  MasterPhdFlg = null;
		
		/// <summary>
		/// ED_CODE_LEVEL_ID : 
		/// </summary>
		public System.Decimal?		  EdCodeLevelId = null;
		
		/// <summary>
		/// SPO_SPONSOR_TYPE_ID : Ejust نوع الكفيل حكومى-خاص-جامعة....
		/// </summary>
		public System.Decimal?		  SpoSponsorTypeId = null;
		
		/// <summary>
		/// URL_REFERENCE : 
		/// </summary>
		public System.String		  UrlReference = null;
		
		/// <summary>
		/// ADM_CDE_STATUS_OLD_ID : 
		/// </summary>
		public System.Decimal?		  AdmCdeStatusOldId = null;
		
		/// <summary>
		/// PROVISIONAL_FLG : Ejust >PG_PROVISIONAL_FLG
		/// </summary>
		public System.Boolean?		  ProvisionalFlg = null;
		
		/// <summary>
		/// ADM_CDE_APP_STATUS_ID : حالة المتقدم
		/// </summary>
		public System.Decimal?		  AdmCdeAppStatusId = null;
		
		/// <summary>
		/// TansiK_FLG : 
		/// </summary>
		public System.Boolean?		  TansikFlg = null;
		
		/// <summary>
		/// Adm_Decision_Status_Id : 
		/// </summary>
		public System.Decimal?		  AdmDecisionStatusId = null;
		
		/// <summary>
		/// PART_TIME_FLG : 
		/// </summary>
		public System.Boolean?		  PartTimeFlg = null;
		
		/// <summary>
		/// DATA_SENT_FLG : 
		/// </summary>
		public System.Boolean?		  DataSentFlg = null;
		
		/// <summary>
		/// COVID_FLG : 
		/// </summary>
		public System.Boolean?		  CovidFlg = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private AdmAdmissionBand _admAdmissionBandIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmAdmissionBand"/>.
		/// </summary>
		/// <value>The source AdmAdmissionBand for AdmAdmissionBandId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmAdmissionBand AdmAdmissionBandIdSource
      	{
            get { return this._admAdmissionBandIdSource; }
            set { this._admAdmissionBandIdSource = value; }
      	}
		private AdmCdeAppStatus _admCdeAppStatusIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeAppStatus"/>.
		/// </summary>
		/// <value>The source AdmCdeAppStatus for AdmCdeAppStatusId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmCdeAppStatus AdmCdeAppStatusIdSource
      	{
            get { return this._admCdeAppStatusIdSource; }
            set { this._admCdeAppStatusIdSource = value; }
      	}
		private AdmCdeAppType _admCdeAppTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeAppType"/>.
		/// </summary>
		/// <value>The source AdmCdeAppType for AdmCdeAppTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmCdeAppType AdmCdeAppTypeIdSource
      	{
            get { return this._admCdeAppTypeIdSource; }
            set { this._admCdeAppTypeIdSource = value; }
      	}
		private AdmCdeStatus _admCdeStatusIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeStatus"/>.
		/// </summary>
		/// <value>The source AdmCdeStatus for AdmCdeStatusId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmCdeStatus AdmCdeStatusIdSource
      	{
            get { return this._admCdeStatusIdSource; }
            set { this._admCdeStatusIdSource = value; }
      	}
		private AdmCdeStatusRsn _admCdeStatusRsnIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeStatusRsn"/>.
		/// </summary>
		/// <value>The source AdmCdeStatusRsn for AdmCdeStatusRsnId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmCdeStatusRsn AdmCdeStatusRsnIdSource
      	{
            get { return this._admCdeStatusRsnIdSource; }
            set { this._admCdeStatusRsnIdSource = value; }
      	}
		private AdmCdeStatus _admCdeStatusOldIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeStatus"/>.
		/// </summary>
		/// <value>The source AdmCdeStatus for AdmCdeStatusOldId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmCdeStatus AdmCdeStatusOldIdSource
      	{
            get { return this._admCdeStatusOldIdSource; }
            set { this._admCdeStatusOldIdSource = value; }
      	}
		private AdmDecisionStatus _admDecisionStatusIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmDecisionStatus"/>.
		/// </summary>
		/// <value>The source AdmDecisionStatus for AdmDecisionStatusId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmDecisionStatus AdmDecisionStatusIdSource
      	{
            get { return this._admDecisionStatusIdSource; }
            set { this._admDecisionStatusIdSource = value; }
      	}
		private AdmApplicant _admApplicantIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmApplicant"/>.
		/// </summary>
		/// <value>The source AdmApplicant for AdmApplicantId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmApplicant AdmApplicantIdSource
      	{
            get { return this._admApplicantIdSource; }
            set { this._admApplicantIdSource = value; }
      	}
		private AdmOpenAcadSemester _admOpenAcadSemesterIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmOpenAcadSemester"/>.
		/// </summary>
		/// <value>The source AdmOpenAcadSemester for AdmOpenAcadSemesterId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmOpenAcadSemester AdmOpenAcadSemesterIdSource
      	{
            get { return this._admOpenAcadSemesterIdSource; }
            set { this._admOpenAcadSemesterIdSource = value; }
      	}
		private AsCodeDegree _asCodeDegreeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AsCodeDegree"/>.
		/// </summary>
		/// <value>The source AsCodeDegree for AsCodeDegreeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AsCodeDegree AsCodeDegreeIdSource
      	{
            get { return this._asCodeDegreeIdSource; }
            set { this._asCodeDegreeIdSource = value; }
      	}
		private AsCodeDegreeClass _asCodeDegreeClassIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AsCodeDegreeClass"/>.
		/// </summary>
		/// <value>The source AsCodeDegreeClass for AsCodeDegreeClassId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AsCodeDegreeClass AsCodeDegreeClassIdSource
      	{
            get { return this._asCodeDegreeClassIdSource; }
            set { this._asCodeDegreeClassIdSource = value; }
      	}
		private EdAcadYear _edAcadYearIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdAcadYear"/>.
		/// </summary>
		/// <value>The source EdAcadYear for EdAcadYearId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdAcadYear EdAcadYearIdSource
      	{
            get { return this._edAcadYearIdSource; }
            set { this._edAcadYearIdSource = value; }
      	}
		private EdCodeLevel _edCodeLevelIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeLevel"/>.
		/// </summary>
		/// <value>The source EdCodeLevel for EdCodeLevelId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeLevel EdCodeLevelIdSource
      	{
            get { return this._edCodeLevelIdSource; }
            set { this._edCodeLevelIdSource = value; }
      	}
		private EdCodeSemester _edCodeSemesterIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeSemester"/>.
		/// </summary>
		/// <value>The source EdCodeSemester for EdCodeSemesterId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeSemester EdCodeSemesterIdSource
      	{
            get { return this._edCodeSemesterIdSource; }
            set { this._edCodeSemesterIdSource = value; }
      	}
		private FeeCdeDiscCat _feeCdeDiscCatIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeCdeDiscCat"/>.
		/// </summary>
		/// <value>The source FeeCdeDiscCat for FeeCdeDiscCatId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeCdeDiscCat FeeCdeDiscCatIdSource
      	{
            get { return this._feeCdeDiscCatIdSource; }
            set { this._feeCdeDiscCatIdSource = value; }
      	}
		private FeeCdeDiscType _feeCdeDiscTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeCdeDiscType"/>.
		/// </summary>
		/// <value>The source FeeCdeDiscType for FeeCdeDiscTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeCdeDiscType FeeCdeDiscTypeIdSource
      	{
            get { return this._feeCdeDiscTypeIdSource; }
            set { this._feeCdeDiscTypeIdSource = value; }
      	}
		private FeeCdeSchshipType _feeCdeSchshipTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeCdeSchshipType"/>.
		/// </summary>
		/// <value>The source FeeCdeSchshipType for FeeCdeSchshipTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeCdeSchshipType FeeCdeSchshipTypeIdSource
      	{
            get { return this._feeCdeSchshipTypeIdSource; }
            set { this._feeCdeSchshipTypeIdSource = value; }
      	}
		private SeUser _seUserIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SeUser"/>.
		/// </summary>
		/// <value>The source SeUser for SeUserId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SeUser SeUserIdSource
      	{
            get { return this._seUserIdSource; }
            set { this._seUserIdSource = value; }
      	}
		private SpoSponsor _spoSponsorIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SpoSponsor"/>.
		/// </summary>
		/// <value>The source SpoSponsor for SpoSponsorId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SpoSponsor SpoSponsorIdSource
      	{
            get { return this._spoSponsorIdSource; }
            set { this._spoSponsorIdSource = value; }
      	}
		private SpoSponsorType _spoSponsorTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SpoSponsorType"/>.
		/// </summary>
		/// <value>The source SpoSponsorType for SpoSponsorTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SpoSponsorType SpoSponsorTypeIdSource
      	{
            get { return this._spoSponsorTypeIdSource; }
            set { this._spoSponsorTypeIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region SpoSponsorStudCollection
		
		private TList<SpoSponsorStud> _spoSponsorStudAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorStudAdmAppRegHistoryId
		/// </summary>
		
		public TList<SpoSponsorStud> SpoSponsorStudCollection
		{
			get
			{
				if (_spoSponsorStudAdmAppRegHistoryId == null)
				{
				_spoSponsorStudAdmAppRegHistoryId = new TList<SpoSponsorStud>();
				}
	
				return _spoSponsorStudAdmAppRegHistoryId;
			}
			set { _spoSponsorStudAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmApplicantAcceptanceCollection
		
		private TList<AdmApplicantAcceptance> _admApplicantAcceptanceAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admApplicantAcceptanceAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmApplicantAcceptance> AdmApplicantAcceptanceCollection
		{
			get
			{
				if (_admApplicantAcceptanceAdmAppRegHistoryId == null)
				{
				_admApplicantAcceptanceAdmAppRegHistoryId = new TList<AdmApplicantAcceptance>();
				}
	
				return _admApplicantAcceptanceAdmAppRegHistoryId;
			}
			set { _admApplicantAcceptanceAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppInterviewExamCollection
		
		private TList<AdmAppInterviewExam> _admAppInterviewExamAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppInterviewExamAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppInterviewExam> AdmAppInterviewExamCollection
		{
			get
			{
				if (_admAppInterviewExamAdmAppRegHistoryId == null)
				{
				_admAppInterviewExamAdmAppRegHistoryId = new TList<AdmAppInterviewExam>();
				}
	
				return _admAppInterviewExamAdmAppRegHistoryId;
			}
			set { _admAppInterviewExamAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppPlaceExamCourseCollection
		
		private TList<AdmAppPlaceExamCourse> _admAppPlaceExamCourseAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppPlaceExamCourseAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppPlaceExamCourse> AdmAppPlaceExamCourseCollection
		{
			get
			{
				if (_admAppPlaceExamCourseAdmAppRegHistoryId == null)
				{
				_admAppPlaceExamCourseAdmAppRegHistoryId = new TList<AdmAppPlaceExamCourse>();
				}
	
				return _admAppPlaceExamCourseAdmAppRegHistoryId;
			}
			set { _admAppPlaceExamCourseAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppHonorCollection
		
		private TList<AdmAppHonor> _admAppHonorAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppHonorAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppHonor> AdmAppHonorCollection
		{
			get
			{
				if (_admAppHonorAdmAppRegHistoryId == null)
				{
				_admAppHonorAdmAppRegHistoryId = new TList<AdmAppHonor>();
				}
	
				return _admAppHonorAdmAppRegHistoryId;
			}
			set { _admAppHonorAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppDocCollection
		
		private TList<AdmAppDoc> _admAppDocAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppDocAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppDoc> AdmAppDocCollection
		{
			get
			{
				if (_admAppDocAdmAppRegHistoryId == null)
				{
				_admAppDocAdmAppRegHistoryId = new TList<AdmAppDoc>();
				}
	
				return _admAppDocAdmAppRegHistoryId;
			}
			set { _admAppDocAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppExmptCourseCollection
		
		private TList<AdmAppExmptCourse> _admAppExmptCourseAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppExmptCourseAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppExmptCourse> AdmAppExmptCourseCollection
		{
			get
			{
				if (_admAppExmptCourseAdmAppRegHistoryId == null)
				{
				_admAppExmptCourseAdmAppRegHistoryId = new TList<AdmAppExmptCourse>();
				}
	
				return _admAppExmptCourseAdmAppRegHistoryId;
			}
			set { _admAppExmptCourseAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppFeePromocodeCollection
		
		private TList<AdmAppFeePromocode> _admAppFeePromocodeAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppFeePromocodeAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppFeePromocode> AdmAppFeePromocodeCollection
		{
			get
			{
				if (_admAppFeePromocodeAdmAppRegHistoryId == null)
				{
				_admAppFeePromocodeAdmAppRegHistoryId = new TList<AdmAppFeePromocode>();
				}
	
				return _admAppFeePromocodeAdmAppRegHistoryId;
			}
			set { _admAppFeePromocodeAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region FeeStudDiscCollection
		
		private TList<FeeStudDisc> _feeStudDiscAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudDiscAdmAppRegHistoryId
		/// </summary>
		
		public TList<FeeStudDisc> FeeStudDiscCollection
		{
			get
			{
				if (_feeStudDiscAdmAppRegHistoryId == null)
				{
				_feeStudDiscAdmAppRegHistoryId = new TList<FeeStudDisc>();
				}
	
				return _feeStudDiscAdmAppRegHistoryId;
			}
			set { _feeStudDiscAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppInfoCollection
		
		private TList<AdmAppInfo> _admAppInfoAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppInfoAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppInfo> AdmAppInfoCollection
		{
			get
			{
				if (_admAppInfoAdmAppRegHistoryId == null)
				{
				_admAppInfoAdmAppRegHistoryId = new TList<AdmAppInfo>();
				}
	
				return _admAppInfoAdmAppRegHistoryId;
			}
			set { _admAppInfoAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppPrefCollection
		
		private TList<AdmAppPref> _admAppPrefAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppPrefAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppPref> AdmAppPrefCollection
		{
			get
			{
				if (_admAppPrefAdmAppRegHistoryId == null)
				{
				_admAppPrefAdmAppRegHistoryId = new TList<AdmAppPref>();
				}
	
				return _admAppPrefAdmAppRegHistoryId;
			}
			set { _admAppPrefAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppPlacementExamCollection
		
		private TList<AdmAppPlacementExam> _admAppPlacementExamAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppPlacementExamAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppPlacementExam> AdmAppPlacementExamCollection
		{
			get
			{
				if (_admAppPlacementExamAdmAppRegHistoryId == null)
				{
				_admAppPlacementExamAdmAppRegHistoryId = new TList<AdmAppPlacementExam>();
				}
	
				return _admAppPlacementExamAdmAppRegHistoryId;
			}
			set { _admAppPlacementExamAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region EdStudQualCollection
		
		private TList<EdStudQual> _edStudQualAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudQualAdmAppRegHistoryId
		/// </summary>
		
		public TList<EdStudQual> EdStudQualCollection
		{
			get
			{
				if (_edStudQualAdmAppRegHistoryId == null)
				{
				_edStudQualAdmAppRegHistoryId = new TList<EdStudQual>();
				}
	
				return _edStudQualAdmAppRegHistoryId;
			}
			set { _edStudQualAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmTansikAppCodesCollection
		
		private TList<AdmTansikAppCodes> _admTansikAppCodesAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admTansikAppCodesAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmTansikAppCodes> AdmTansikAppCodesCollection
		{
			get
			{
				if (_admTansikAppCodesAdmAppRegHistoryId == null)
				{
				_admTansikAppCodesAdmAppRegHistoryId = new TList<AdmTansikAppCodes>();
				}
	
				return _admTansikAppCodesAdmAppRegHistoryId;
			}
			set { _admTansikAppCodesAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region EdStudMilitaryStateCollection
		
		private TList<EdStudMilitaryState> _edStudMilitaryStateAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudMilitaryStateAdmAppRegHistoryId
		/// </summary>
		
		public TList<EdStudMilitaryState> EdStudMilitaryStateCollection
		{
			get
			{
				if (_edStudMilitaryStateAdmAppRegHistoryId == null)
				{
				_edStudMilitaryStateAdmAppRegHistoryId = new TList<EdStudMilitaryState>();
				}
	
				return _edStudMilitaryStateAdmAppRegHistoryId;
			}
			set { _edStudMilitaryStateAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppGuardianCollection
		
		private TList<AdmAppGuardian> _admAppGuardianAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppGuardianAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppGuardian> AdmAppGuardianCollection
		{
			get
			{
				if (_admAppGuardianAdmAppRegHistoryId == null)
				{
				_admAppGuardianAdmAppRegHistoryId = new TList<AdmAppGuardian>();
				}
	
				return _admAppGuardianAdmAppRegHistoryId;
			}
			set { _admAppGuardianAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region EdStudMilitaryInfoCollection
		
		private TList<EdStudMilitaryInfo> _edStudMilitaryInfoAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudMilitaryInfoAdmAppRegHistoryId
		/// </summary>
		
		public TList<EdStudMilitaryInfo> EdStudMilitaryInfoCollection
		{
			get
			{
				if (_edStudMilitaryInfoAdmAppRegHistoryId == null)
				{
				_edStudMilitaryInfoAdmAppRegHistoryId = new TList<EdStudMilitaryInfo>();
				}
	
				return _edStudMilitaryInfoAdmAppRegHistoryId;
			}
			set { _edStudMilitaryInfoAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppProcStepsCollection
		
		private TList<AdmAppProcSteps> _admAppProcStepsAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppProcStepsAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppProcSteps> AdmAppProcStepsCollection
		{
			get
			{
				if (_admAppProcStepsAdmAppRegHistoryId == null)
				{
				_admAppProcStepsAdmAppRegHistoryId = new TList<AdmAppProcSteps>();
				}
	
				return _admAppProcStepsAdmAppRegHistoryId;
			}
			set { _admAppProcStepsAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppEssayCollection
		
		private TList<AdmAppEssay> _admAppEssayAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppEssayAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppEssay> AdmAppEssayCollection
		{
			get
			{
				if (_admAppEssayAdmAppRegHistoryId == null)
				{
				_admAppEssayAdmAppRegHistoryId = new TList<AdmAppEssay>();
				}
	
				return _admAppEssayAdmAppRegHistoryId;
			}
			set { _admAppEssayAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppLanguagesCollection
		
		private TList<AdmAppLanguages> _admAppLanguagesAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppLanguagesAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppLanguages> AdmAppLanguagesCollection
		{
			get
			{
				if (_admAppLanguagesAdmAppRegHistoryId == null)
				{
				_admAppLanguagesAdmAppRegHistoryId = new TList<AdmAppLanguages>();
				}
	
				return _admAppLanguagesAdmAppRegHistoryId;
			}
			set { _admAppLanguagesAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppAlumniPrefCollection
		
		private TList<AdmAppAlumniPref> _admAppAlumniPrefAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppAlumniPrefAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppAlumniPref> AdmAppAlumniPrefCollection
		{
			get
			{
				if (_admAppAlumniPrefAdmAppRegHistoryId == null)
				{
				_admAppAlumniPrefAdmAppRegHistoryId = new TList<AdmAppAlumniPref>();
				}
	
				return _admAppAlumniPrefAdmAppRegHistoryId;
			}
			set { _admAppAlumniPrefAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppMediaCollection
		
		private TList<AdmAppMedia> _admAppMediaAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppMediaAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppMedia> AdmAppMediaCollection
		{
			get
			{
				if (_admAppMediaAdmAppRegHistoryId == null)
				{
				_admAppMediaAdmAppRegHistoryId = new TList<AdmAppMedia>();
				}
	
				return _admAppMediaAdmAppRegHistoryId;
			}
			set { _admAppMediaAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppSponsorCollection
		
		private TList<AdmAppSponsor> _admAppSponsorAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppSponsorAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppSponsor> AdmAppSponsorCollection
		{
			get
			{
				if (_admAppSponsorAdmAppRegHistoryId == null)
				{
				_admAppSponsorAdmAppRegHistoryId = new TList<AdmAppSponsor>();
				}
	
				return _admAppSponsorAdmAppRegHistoryId;
			}
			set { _admAppSponsorAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmEnglishProficiencyCollection
		
		private TList<AdmEnglishProficiency> _admEnglishProficiencyAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admEnglishProficiencyAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmEnglishProficiency> AdmEnglishProficiencyCollection
		{
			get
			{
				if (_admEnglishProficiencyAdmAppRegHistoryId == null)
				{
				_admEnglishProficiencyAdmAppRegHistoryId = new TList<AdmEnglishProficiency>();
				}
	
				return _admEnglishProficiencyAdmAppRegHistoryId;
			}
			set { _admEnglishProficiencyAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppTransReqCollection
		
		private TList<AdmAppTransReq> _admAppTransReqAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppTransReqAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppTransReq> AdmAppTransReqCollection
		{
			get
			{
				if (_admAppTransReqAdmAppRegHistoryId == null)
				{
				_admAppTransReqAdmAppRegHistoryId = new TList<AdmAppTransReq>();
				}
	
				return _admAppTransReqAdmAppRegHistoryId;
			}
			set { _admAppTransReqAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppWorkExperCollection
		
		private TList<AdmAppWorkExper> _admAppWorkExperAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppWorkExperAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppWorkExper> AdmAppWorkExperCollection
		{
			get
			{
				if (_admAppWorkExperAdmAppRegHistoryId == null)
				{
				_admAppWorkExperAdmAppRegHistoryId = new TList<AdmAppWorkExper>();
				}
	
				return _admAppWorkExperAdmAppRegHistoryId;
			}
			set { _admAppWorkExperAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#region AdmAppLtrRecomCollection
		
		private TList<AdmAppLtrRecom> _admAppLtrRecomAdmAppRegHistoryId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppLtrRecomAdmAppRegHistoryId
		/// </summary>
		
		public TList<AdmAppLtrRecom> AdmAppLtrRecomCollection
		{
			get
			{
				if (_admAppLtrRecomAdmAppRegHistoryId == null)
				{
				_admAppLtrRecomAdmAppRegHistoryId = new TList<AdmAppLtrRecom>();
				}
	
				return _admAppLtrRecomAdmAppRegHistoryId;
			}
			set { _admAppLtrRecomAdmAppRegHistoryId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			AdmAppRegHistoryEntityData _tmp = new AdmAppRegHistoryEntityData();
						
			_tmp.AdmAppRegHistoryId = this.AdmAppRegHistoryId;
			_tmp.OriginalAdmAppRegHistoryId = this.OriginalAdmAppRegHistoryId;
			
			_tmp.AdmApplicantId = this.AdmApplicantId;
			_tmp.AppDate = this.AppDate;
			_tmp.AdmCdeAppTypeId = this.AdmCdeAppTypeId;
			_tmp.CurrentFlg = this.CurrentFlg;
			_tmp.AsCodeDegreeId = this.AsCodeDegreeId;
			_tmp.AsCodeDegreeClassId = this.AsCodeDegreeClassId;
			_tmp.ComptativeRate = this.ComptativeRate;
			_tmp.AdmOpenAcadSemesterId = this.AdmOpenAcadSemesterId;
			_tmp.SeUserId = this.SeUserId;
			_tmp.AdmCdeStatusId = this.AdmCdeStatusId;
			_tmp.OverAllAcceptanceFlg = this.OverAllAcceptanceFlg;
			_tmp.OrintationFlg = this.OrintationFlg;
			_tmp.AdmAdmissionBandId = this.AdmAdmissionBandId;
			_tmp.DistributionFlg = this.DistributionFlg;
			_tmp.EnrolledFlg = this.EnrolledFlg;
			_tmp.AutoDistrFlg = this.AutoDistrFlg;
			_tmp.FullTimeFlg = this.FullTimeFlg;
			_tmp.OnlneFlg = this.OnlneFlg;
			_tmp.FeeCdeDiscTypeId = this.FeeCdeDiscTypeId;
			_tmp.LmsUsr = this.LmsUsr;
			_tmp.LmsPwd = this.LmsPwd;
			_tmp.AdmAppHstryCode = this.AdmAppHstryCode;
			_tmp.BusFlg = this.BusFlg;
			_tmp.FeeCdeSchshipTypeId = this.FeeCdeSchshipTypeId;
			_tmp.SchshipNote = this.SchshipNote;
			_tmp.SpoSponsorId = this.SpoSponsorId;
			_tmp.SubmitFlg = this.SubmitFlg;
			_tmp.FeeCdeDiscCatId = this.FeeCdeDiscCatId;
			_tmp.SchshipTypeFlg = this.SchshipTypeFlg;
			_tmp.FincaidTypeFlg = this.FincaidTypeFlg;
			_tmp.HasRa = this.HasRa;
			_tmp.SubmitDate = this.SubmitDate;
			_tmp.LastDate = this.LastDate;
			_tmp.AdmCdeStatusRsnId = this.AdmCdeStatusRsnId;
			_tmp.TermcondFlg = this.TermcondFlg;
			_tmp.DormFlg = this.DormFlg;
			_tmp.EngNativeFlg = this.EngNativeFlg;
			_tmp.EngGradChkFlg = this.EngGradChkFlg;
			_tmp.WaitFlg = this.WaitFlg;
			_tmp.EdAcadYearId = this.EdAcadYearId;
			_tmp.EdCodeSemesterId = this.EdCodeSemesterId;
			_tmp.MasterPhdFlg = this.MasterPhdFlg;
			_tmp.EdCodeLevelId = this.EdCodeLevelId;
			_tmp.SpoSponsorTypeId = this.SpoSponsorTypeId;
			_tmp.UrlReference = this.UrlReference;
			_tmp.AdmCdeStatusOldId = this.AdmCdeStatusOldId;
			_tmp.ProvisionalFlg = this.ProvisionalFlg;
			_tmp.AdmCdeAppStatusId = this.AdmCdeAppStatusId;
			_tmp.TansikFlg = this.TansikFlg;
			_tmp.AdmDecisionStatusId = this.AdmDecisionStatusId;
			_tmp.PartTimeFlg = this.PartTimeFlg;
			_tmp.DataSentFlg = this.DataSentFlg;
			_tmp.CovidFlg = this.CovidFlg;
			
			#region Source Parent Composite Entities
			if (this.AdmAdmissionBandIdSource != null)
				_tmp.AdmAdmissionBandIdSource = MakeCopyOf(this.AdmAdmissionBandIdSource) as AdmAdmissionBand;
			if (this.AdmCdeAppStatusIdSource != null)
				_tmp.AdmCdeAppStatusIdSource = MakeCopyOf(this.AdmCdeAppStatusIdSource) as AdmCdeAppStatus;
			if (this.AdmCdeAppTypeIdSource != null)
				_tmp.AdmCdeAppTypeIdSource = MakeCopyOf(this.AdmCdeAppTypeIdSource) as AdmCdeAppType;
			if (this.AdmCdeStatusIdSource != null)
				_tmp.AdmCdeStatusIdSource = MakeCopyOf(this.AdmCdeStatusIdSource) as AdmCdeStatus;
			if (this.AdmCdeStatusRsnIdSource != null)
				_tmp.AdmCdeStatusRsnIdSource = MakeCopyOf(this.AdmCdeStatusRsnIdSource) as AdmCdeStatusRsn;
			if (this.AdmCdeStatusOldIdSource != null)
				_tmp.AdmCdeStatusOldIdSource = MakeCopyOf(this.AdmCdeStatusOldIdSource) as AdmCdeStatus;
			if (this.AdmDecisionStatusIdSource != null)
				_tmp.AdmDecisionStatusIdSource = MakeCopyOf(this.AdmDecisionStatusIdSource) as AdmDecisionStatus;
			if (this.AdmApplicantIdSource != null)
				_tmp.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource) as AdmApplicant;
			if (this.AdmOpenAcadSemesterIdSource != null)
				_tmp.AdmOpenAcadSemesterIdSource = MakeCopyOf(this.AdmOpenAcadSemesterIdSource) as AdmOpenAcadSemester;
			if (this.AsCodeDegreeIdSource != null)
				_tmp.AsCodeDegreeIdSource = MakeCopyOf(this.AsCodeDegreeIdSource) as AsCodeDegree;
			if (this.AsCodeDegreeClassIdSource != null)
				_tmp.AsCodeDegreeClassIdSource = MakeCopyOf(this.AsCodeDegreeClassIdSource) as AsCodeDegreeClass;
			if (this.EdAcadYearIdSource != null)
				_tmp.EdAcadYearIdSource = MakeCopyOf(this.EdAcadYearIdSource) as EdAcadYear;
			if (this.EdCodeLevelIdSource != null)
				_tmp.EdCodeLevelIdSource = MakeCopyOf(this.EdCodeLevelIdSource) as EdCodeLevel;
			if (this.EdCodeSemesterIdSource != null)
				_tmp.EdCodeSemesterIdSource = MakeCopyOf(this.EdCodeSemesterIdSource) as EdCodeSemester;
			if (this.FeeCdeDiscCatIdSource != null)
				_tmp.FeeCdeDiscCatIdSource = MakeCopyOf(this.FeeCdeDiscCatIdSource) as FeeCdeDiscCat;
			if (this.FeeCdeDiscTypeIdSource != null)
				_tmp.FeeCdeDiscTypeIdSource = MakeCopyOf(this.FeeCdeDiscTypeIdSource) as FeeCdeDiscType;
			if (this.FeeCdeSchshipTypeIdSource != null)
				_tmp.FeeCdeSchshipTypeIdSource = MakeCopyOf(this.FeeCdeSchshipTypeIdSource) as FeeCdeSchshipType;
			if (this.SeUserIdSource != null)
				_tmp.SeUserIdSource = MakeCopyOf(this.SeUserIdSource) as SeUser;
			if (this.SpoSponsorIdSource != null)
				_tmp.SpoSponsorIdSource = MakeCopyOf(this.SpoSponsorIdSource) as SpoSponsor;
			if (this.SpoSponsorTypeIdSource != null)
				_tmp.SpoSponsorTypeIdSource = MakeCopyOf(this.SpoSponsorTypeIdSource) as SpoSponsorType;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._spoSponsorStudAdmAppRegHistoryId != null)
				_tmp.SpoSponsorStudCollection = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollection); 
			if (this._admApplicantAcceptanceAdmAppRegHistoryId != null)
				_tmp.AdmApplicantAcceptanceCollection = (TList<AdmApplicantAcceptance>) MakeCopyOf(this.AdmApplicantAcceptanceCollection); 
			if (this._admAppInterviewExamAdmAppRegHistoryId != null)
				_tmp.AdmAppInterviewExamCollection = (TList<AdmAppInterviewExam>) MakeCopyOf(this.AdmAppInterviewExamCollection); 
			if (this._admAppPlaceExamCourseAdmAppRegHistoryId != null)
				_tmp.AdmAppPlaceExamCourseCollection = (TList<AdmAppPlaceExamCourse>) MakeCopyOf(this.AdmAppPlaceExamCourseCollection); 
			if (this._admAppHonorAdmAppRegHistoryId != null)
				_tmp.AdmAppHonorCollection = (TList<AdmAppHonor>) MakeCopyOf(this.AdmAppHonorCollection); 
			if (this._admAppDocAdmAppRegHistoryId != null)
				_tmp.AdmAppDocCollection = (TList<AdmAppDoc>) MakeCopyOf(this.AdmAppDocCollection); 
			if (this._admAppExmptCourseAdmAppRegHistoryId != null)
				_tmp.AdmAppExmptCourseCollection = (TList<AdmAppExmptCourse>) MakeCopyOf(this.AdmAppExmptCourseCollection); 
			if (this._admAppFeePromocodeAdmAppRegHistoryId != null)
				_tmp.AdmAppFeePromocodeCollection = (TList<AdmAppFeePromocode>) MakeCopyOf(this.AdmAppFeePromocodeCollection); 
			if (this._feeStudDiscAdmAppRegHistoryId != null)
				_tmp.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection); 
			if (this._admAppInfoAdmAppRegHistoryId != null)
				_tmp.AdmAppInfoCollection = (TList<AdmAppInfo>) MakeCopyOf(this.AdmAppInfoCollection); 
			if (this._admAppPrefAdmAppRegHistoryId != null)
				_tmp.AdmAppPrefCollection = (TList<AdmAppPref>) MakeCopyOf(this.AdmAppPrefCollection); 
			if (this._admAppPlacementExamAdmAppRegHistoryId != null)
				_tmp.AdmAppPlacementExamCollection = (TList<AdmAppPlacementExam>) MakeCopyOf(this.AdmAppPlacementExamCollection); 
			if (this._edStudQualAdmAppRegHistoryId != null)
				_tmp.EdStudQualCollection = (TList<EdStudQual>) MakeCopyOf(this.EdStudQualCollection); 
			if (this._admTansikAppCodesAdmAppRegHistoryId != null)
				_tmp.AdmTansikAppCodesCollection = (TList<AdmTansikAppCodes>) MakeCopyOf(this.AdmTansikAppCodesCollection); 
			if (this._edStudMilitaryStateAdmAppRegHistoryId != null)
				_tmp.EdStudMilitaryStateCollection = (TList<EdStudMilitaryState>) MakeCopyOf(this.EdStudMilitaryStateCollection); 
			if (this._admAppGuardianAdmAppRegHistoryId != null)
				_tmp.AdmAppGuardianCollection = (TList<AdmAppGuardian>) MakeCopyOf(this.AdmAppGuardianCollection); 
			if (this._edStudMilitaryInfoAdmAppRegHistoryId != null)
				_tmp.EdStudMilitaryInfoCollection = (TList<EdStudMilitaryInfo>) MakeCopyOf(this.EdStudMilitaryInfoCollection); 
			if (this._admAppProcStepsAdmAppRegHistoryId != null)
				_tmp.AdmAppProcStepsCollection = (TList<AdmAppProcSteps>) MakeCopyOf(this.AdmAppProcStepsCollection); 
			if (this._admAppEssayAdmAppRegHistoryId != null)
				_tmp.AdmAppEssayCollection = (TList<AdmAppEssay>) MakeCopyOf(this.AdmAppEssayCollection); 
			if (this._admAppLanguagesAdmAppRegHistoryId != null)
				_tmp.AdmAppLanguagesCollection = (TList<AdmAppLanguages>) MakeCopyOf(this.AdmAppLanguagesCollection); 
			if (this._admAppAlumniPrefAdmAppRegHistoryId != null)
				_tmp.AdmAppAlumniPrefCollection = (TList<AdmAppAlumniPref>) MakeCopyOf(this.AdmAppAlumniPrefCollection); 
			if (this._admAppMediaAdmAppRegHistoryId != null)
				_tmp.AdmAppMediaCollection = (TList<AdmAppMedia>) MakeCopyOf(this.AdmAppMediaCollection); 
			if (this._admAppSponsorAdmAppRegHistoryId != null)
				_tmp.AdmAppSponsorCollection = (TList<AdmAppSponsor>) MakeCopyOf(this.AdmAppSponsorCollection); 
			if (this._admEnglishProficiencyAdmAppRegHistoryId != null)
				_tmp.AdmEnglishProficiencyCollection = (TList<AdmEnglishProficiency>) MakeCopyOf(this.AdmEnglishProficiencyCollection); 
			if (this._admAppTransReqAdmAppRegHistoryId != null)
				_tmp.AdmAppTransReqCollection = (TList<AdmAppTransReq>) MakeCopyOf(this.AdmAppTransReqCollection); 
			if (this._admAppWorkExperAdmAppRegHistoryId != null)
				_tmp.AdmAppWorkExperCollection = (TList<AdmAppWorkExper>) MakeCopyOf(this.AdmAppWorkExperCollection); 
			if (this._admAppLtrRecomAdmAppRegHistoryId != null)
				_tmp.AdmAppLtrRecomCollection = (TList<AdmAppLtrRecom>) MakeCopyOf(this.AdmAppLtrRecomCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			AdmAppRegHistoryEntityData _tmp = new AdmAppRegHistoryEntityData();
						
			_tmp.AdmAppRegHistoryId = this.AdmAppRegHistoryId;
			_tmp.OriginalAdmAppRegHistoryId = this.OriginalAdmAppRegHistoryId;
			
			_tmp.AdmApplicantId = this.AdmApplicantId;
			_tmp.AppDate = this.AppDate;
			_tmp.AdmCdeAppTypeId = this.AdmCdeAppTypeId;
			_tmp.CurrentFlg = this.CurrentFlg;
			_tmp.AsCodeDegreeId = this.AsCodeDegreeId;
			_tmp.AsCodeDegreeClassId = this.AsCodeDegreeClassId;
			_tmp.ComptativeRate = this.ComptativeRate;
			_tmp.AdmOpenAcadSemesterId = this.AdmOpenAcadSemesterId;
			_tmp.SeUserId = this.SeUserId;
			_tmp.AdmCdeStatusId = this.AdmCdeStatusId;
			_tmp.OverAllAcceptanceFlg = this.OverAllAcceptanceFlg;
			_tmp.OrintationFlg = this.OrintationFlg;
			_tmp.AdmAdmissionBandId = this.AdmAdmissionBandId;
			_tmp.DistributionFlg = this.DistributionFlg;
			_tmp.EnrolledFlg = this.EnrolledFlg;
			_tmp.AutoDistrFlg = this.AutoDistrFlg;
			_tmp.FullTimeFlg = this.FullTimeFlg;
			_tmp.OnlneFlg = this.OnlneFlg;
			_tmp.FeeCdeDiscTypeId = this.FeeCdeDiscTypeId;
			_tmp.LmsUsr = this.LmsUsr;
			_tmp.LmsPwd = this.LmsPwd;
			_tmp.AdmAppHstryCode = this.AdmAppHstryCode;
			_tmp.BusFlg = this.BusFlg;
			_tmp.FeeCdeSchshipTypeId = this.FeeCdeSchshipTypeId;
			_tmp.SchshipNote = this.SchshipNote;
			_tmp.SpoSponsorId = this.SpoSponsorId;
			_tmp.SubmitFlg = this.SubmitFlg;
			_tmp.FeeCdeDiscCatId = this.FeeCdeDiscCatId;
			_tmp.SchshipTypeFlg = this.SchshipTypeFlg;
			_tmp.FincaidTypeFlg = this.FincaidTypeFlg;
			_tmp.HasRa = this.HasRa;
			_tmp.SubmitDate = this.SubmitDate;
			_tmp.LastDate = this.LastDate;
			_tmp.AdmCdeStatusRsnId = this.AdmCdeStatusRsnId;
			_tmp.TermcondFlg = this.TermcondFlg;
			_tmp.DormFlg = this.DormFlg;
			_tmp.EngNativeFlg = this.EngNativeFlg;
			_tmp.EngGradChkFlg = this.EngGradChkFlg;
			_tmp.WaitFlg = this.WaitFlg;
			_tmp.EdAcadYearId = this.EdAcadYearId;
			_tmp.EdCodeSemesterId = this.EdCodeSemesterId;
			_tmp.MasterPhdFlg = this.MasterPhdFlg;
			_tmp.EdCodeLevelId = this.EdCodeLevelId;
			_tmp.SpoSponsorTypeId = this.SpoSponsorTypeId;
			_tmp.UrlReference = this.UrlReference;
			_tmp.AdmCdeStatusOldId = this.AdmCdeStatusOldId;
			_tmp.ProvisionalFlg = this.ProvisionalFlg;
			_tmp.AdmCdeAppStatusId = this.AdmCdeAppStatusId;
			_tmp.TansikFlg = this.TansikFlg;
			_tmp.AdmDecisionStatusId = this.AdmDecisionStatusId;
			_tmp.PartTimeFlg = this.PartTimeFlg;
			_tmp.DataSentFlg = this.DataSentFlg;
			_tmp.CovidFlg = this.CovidFlg;
			
			#region Source Parent Composite Entities
			if (this.AdmAdmissionBandIdSource != null && existingCopies.Contains(this.AdmAdmissionBandIdSource))
				_tmp.AdmAdmissionBandIdSource = existingCopies[this.AdmAdmissionBandIdSource] as AdmAdmissionBand;
			else
				_tmp.AdmAdmissionBandIdSource = MakeCopyOf(this.AdmAdmissionBandIdSource, existingCopies) as AdmAdmissionBand;
			if (this.AdmCdeAppStatusIdSource != null && existingCopies.Contains(this.AdmCdeAppStatusIdSource))
				_tmp.AdmCdeAppStatusIdSource = existingCopies[this.AdmCdeAppStatusIdSource] as AdmCdeAppStatus;
			else
				_tmp.AdmCdeAppStatusIdSource = MakeCopyOf(this.AdmCdeAppStatusIdSource, existingCopies) as AdmCdeAppStatus;
			if (this.AdmCdeAppTypeIdSource != null && existingCopies.Contains(this.AdmCdeAppTypeIdSource))
				_tmp.AdmCdeAppTypeIdSource = existingCopies[this.AdmCdeAppTypeIdSource] as AdmCdeAppType;
			else
				_tmp.AdmCdeAppTypeIdSource = MakeCopyOf(this.AdmCdeAppTypeIdSource, existingCopies) as AdmCdeAppType;
			if (this.AdmCdeStatusIdSource != null && existingCopies.Contains(this.AdmCdeStatusIdSource))
				_tmp.AdmCdeStatusIdSource = existingCopies[this.AdmCdeStatusIdSource] as AdmCdeStatus;
			else
				_tmp.AdmCdeStatusIdSource = MakeCopyOf(this.AdmCdeStatusIdSource, existingCopies) as AdmCdeStatus;
			if (this.AdmCdeStatusRsnIdSource != null && existingCopies.Contains(this.AdmCdeStatusRsnIdSource))
				_tmp.AdmCdeStatusRsnIdSource = existingCopies[this.AdmCdeStatusRsnIdSource] as AdmCdeStatusRsn;
			else
				_tmp.AdmCdeStatusRsnIdSource = MakeCopyOf(this.AdmCdeStatusRsnIdSource, existingCopies) as AdmCdeStatusRsn;
			if (this.AdmCdeStatusOldIdSource != null && existingCopies.Contains(this.AdmCdeStatusOldIdSource))
				_tmp.AdmCdeStatusOldIdSource = existingCopies[this.AdmCdeStatusOldIdSource] as AdmCdeStatus;
			else
				_tmp.AdmCdeStatusOldIdSource = MakeCopyOf(this.AdmCdeStatusOldIdSource, existingCopies) as AdmCdeStatus;
			if (this.AdmDecisionStatusIdSource != null && existingCopies.Contains(this.AdmDecisionStatusIdSource))
				_tmp.AdmDecisionStatusIdSource = existingCopies[this.AdmDecisionStatusIdSource] as AdmDecisionStatus;
			else
				_tmp.AdmDecisionStatusIdSource = MakeCopyOf(this.AdmDecisionStatusIdSource, existingCopies) as AdmDecisionStatus;
			if (this.AdmApplicantIdSource != null && existingCopies.Contains(this.AdmApplicantIdSource))
				_tmp.AdmApplicantIdSource = existingCopies[this.AdmApplicantIdSource] as AdmApplicant;
			else
				_tmp.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource, existingCopies) as AdmApplicant;
			if (this.AdmOpenAcadSemesterIdSource != null && existingCopies.Contains(this.AdmOpenAcadSemesterIdSource))
				_tmp.AdmOpenAcadSemesterIdSource = existingCopies[this.AdmOpenAcadSemesterIdSource] as AdmOpenAcadSemester;
			else
				_tmp.AdmOpenAcadSemesterIdSource = MakeCopyOf(this.AdmOpenAcadSemesterIdSource, existingCopies) as AdmOpenAcadSemester;
			if (this.AsCodeDegreeIdSource != null && existingCopies.Contains(this.AsCodeDegreeIdSource))
				_tmp.AsCodeDegreeIdSource = existingCopies[this.AsCodeDegreeIdSource] as AsCodeDegree;
			else
				_tmp.AsCodeDegreeIdSource = MakeCopyOf(this.AsCodeDegreeIdSource, existingCopies) as AsCodeDegree;
			if (this.AsCodeDegreeClassIdSource != null && existingCopies.Contains(this.AsCodeDegreeClassIdSource))
				_tmp.AsCodeDegreeClassIdSource = existingCopies[this.AsCodeDegreeClassIdSource] as AsCodeDegreeClass;
			else
				_tmp.AsCodeDegreeClassIdSource = MakeCopyOf(this.AsCodeDegreeClassIdSource, existingCopies) as AsCodeDegreeClass;
			if (this.EdAcadYearIdSource != null && existingCopies.Contains(this.EdAcadYearIdSource))
				_tmp.EdAcadYearIdSource = existingCopies[this.EdAcadYearIdSource] as EdAcadYear;
			else
				_tmp.EdAcadYearIdSource = MakeCopyOf(this.EdAcadYearIdSource, existingCopies) as EdAcadYear;
			if (this.EdCodeLevelIdSource != null && existingCopies.Contains(this.EdCodeLevelIdSource))
				_tmp.EdCodeLevelIdSource = existingCopies[this.EdCodeLevelIdSource] as EdCodeLevel;
			else
				_tmp.EdCodeLevelIdSource = MakeCopyOf(this.EdCodeLevelIdSource, existingCopies) as EdCodeLevel;
			if (this.EdCodeSemesterIdSource != null && existingCopies.Contains(this.EdCodeSemesterIdSource))
				_tmp.EdCodeSemesterIdSource = existingCopies[this.EdCodeSemesterIdSource] as EdCodeSemester;
			else
				_tmp.EdCodeSemesterIdSource = MakeCopyOf(this.EdCodeSemesterIdSource, existingCopies) as EdCodeSemester;
			if (this.FeeCdeDiscCatIdSource != null && existingCopies.Contains(this.FeeCdeDiscCatIdSource))
				_tmp.FeeCdeDiscCatIdSource = existingCopies[this.FeeCdeDiscCatIdSource] as FeeCdeDiscCat;
			else
				_tmp.FeeCdeDiscCatIdSource = MakeCopyOf(this.FeeCdeDiscCatIdSource, existingCopies) as FeeCdeDiscCat;
			if (this.FeeCdeDiscTypeIdSource != null && existingCopies.Contains(this.FeeCdeDiscTypeIdSource))
				_tmp.FeeCdeDiscTypeIdSource = existingCopies[this.FeeCdeDiscTypeIdSource] as FeeCdeDiscType;
			else
				_tmp.FeeCdeDiscTypeIdSource = MakeCopyOf(this.FeeCdeDiscTypeIdSource, existingCopies) as FeeCdeDiscType;
			if (this.FeeCdeSchshipTypeIdSource != null && existingCopies.Contains(this.FeeCdeSchshipTypeIdSource))
				_tmp.FeeCdeSchshipTypeIdSource = existingCopies[this.FeeCdeSchshipTypeIdSource] as FeeCdeSchshipType;
			else
				_tmp.FeeCdeSchshipTypeIdSource = MakeCopyOf(this.FeeCdeSchshipTypeIdSource, existingCopies) as FeeCdeSchshipType;
			if (this.SeUserIdSource != null && existingCopies.Contains(this.SeUserIdSource))
				_tmp.SeUserIdSource = existingCopies[this.SeUserIdSource] as SeUser;
			else
				_tmp.SeUserIdSource = MakeCopyOf(this.SeUserIdSource, existingCopies) as SeUser;
			if (this.SpoSponsorIdSource != null && existingCopies.Contains(this.SpoSponsorIdSource))
				_tmp.SpoSponsorIdSource = existingCopies[this.SpoSponsorIdSource] as SpoSponsor;
			else
				_tmp.SpoSponsorIdSource = MakeCopyOf(this.SpoSponsorIdSource, existingCopies) as SpoSponsor;
			if (this.SpoSponsorTypeIdSource != null && existingCopies.Contains(this.SpoSponsorTypeIdSource))
				_tmp.SpoSponsorTypeIdSource = existingCopies[this.SpoSponsorTypeIdSource] as SpoSponsorType;
			else
				_tmp.SpoSponsorTypeIdSource = MakeCopyOf(this.SpoSponsorTypeIdSource, existingCopies) as SpoSponsorType;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.SpoSponsorStudCollection = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollection, existingCopies); 
			_tmp.AdmApplicantAcceptanceCollection = (TList<AdmApplicantAcceptance>) MakeCopyOf(this.AdmApplicantAcceptanceCollection, existingCopies); 
			_tmp.AdmAppInterviewExamCollection = (TList<AdmAppInterviewExam>) MakeCopyOf(this.AdmAppInterviewExamCollection, existingCopies); 
			_tmp.AdmAppPlaceExamCourseCollection = (TList<AdmAppPlaceExamCourse>) MakeCopyOf(this.AdmAppPlaceExamCourseCollection, existingCopies); 
			_tmp.AdmAppHonorCollection = (TList<AdmAppHonor>) MakeCopyOf(this.AdmAppHonorCollection, existingCopies); 
			_tmp.AdmAppDocCollection = (TList<AdmAppDoc>) MakeCopyOf(this.AdmAppDocCollection, existingCopies); 
			_tmp.AdmAppExmptCourseCollection = (TList<AdmAppExmptCourse>) MakeCopyOf(this.AdmAppExmptCourseCollection, existingCopies); 
			_tmp.AdmAppFeePromocodeCollection = (TList<AdmAppFeePromocode>) MakeCopyOf(this.AdmAppFeePromocodeCollection, existingCopies); 
			_tmp.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection, existingCopies); 
			_tmp.AdmAppInfoCollection = (TList<AdmAppInfo>) MakeCopyOf(this.AdmAppInfoCollection, existingCopies); 
			_tmp.AdmAppPrefCollection = (TList<AdmAppPref>) MakeCopyOf(this.AdmAppPrefCollection, existingCopies); 
			_tmp.AdmAppPlacementExamCollection = (TList<AdmAppPlacementExam>) MakeCopyOf(this.AdmAppPlacementExamCollection, existingCopies); 
			_tmp.EdStudQualCollection = (TList<EdStudQual>) MakeCopyOf(this.EdStudQualCollection, existingCopies); 
			_tmp.AdmTansikAppCodesCollection = (TList<AdmTansikAppCodes>) MakeCopyOf(this.AdmTansikAppCodesCollection, existingCopies); 
			_tmp.EdStudMilitaryStateCollection = (TList<EdStudMilitaryState>) MakeCopyOf(this.EdStudMilitaryStateCollection, existingCopies); 
			_tmp.AdmAppGuardianCollection = (TList<AdmAppGuardian>) MakeCopyOf(this.AdmAppGuardianCollection, existingCopies); 
			_tmp.EdStudMilitaryInfoCollection = (TList<EdStudMilitaryInfo>) MakeCopyOf(this.EdStudMilitaryInfoCollection, existingCopies); 
			_tmp.AdmAppProcStepsCollection = (TList<AdmAppProcSteps>) MakeCopyOf(this.AdmAppProcStepsCollection, existingCopies); 
			_tmp.AdmAppEssayCollection = (TList<AdmAppEssay>) MakeCopyOf(this.AdmAppEssayCollection, existingCopies); 
			_tmp.AdmAppLanguagesCollection = (TList<AdmAppLanguages>) MakeCopyOf(this.AdmAppLanguagesCollection, existingCopies); 
			_tmp.AdmAppAlumniPrefCollection = (TList<AdmAppAlumniPref>) MakeCopyOf(this.AdmAppAlumniPrefCollection, existingCopies); 
			_tmp.AdmAppMediaCollection = (TList<AdmAppMedia>) MakeCopyOf(this.AdmAppMediaCollection, existingCopies); 
			_tmp.AdmAppSponsorCollection = (TList<AdmAppSponsor>) MakeCopyOf(this.AdmAppSponsorCollection, existingCopies); 
			_tmp.AdmEnglishProficiencyCollection = (TList<AdmEnglishProficiency>) MakeCopyOf(this.AdmEnglishProficiencyCollection, existingCopies); 
			_tmp.AdmAppTransReqCollection = (TList<AdmAppTransReq>) MakeCopyOf(this.AdmAppTransReqCollection, existingCopies); 
			_tmp.AdmAppWorkExperCollection = (TList<AdmAppWorkExper>) MakeCopyOf(this.AdmAppWorkExperCollection, existingCopies); 
			_tmp.AdmAppLtrRecomCollection = (TList<AdmAppLtrRecom>) MakeCopyOf(this.AdmAppLtrRecomCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmAppRegHistoryColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(AdmAppRegHistoryColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmAppRegHistoryColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(AdmAppRegHistoryColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmAppRegHistoryColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(AdmAppRegHistoryColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				AdmAppRegHistoryEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new AdmAppRegHistoryEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmAppRegHistoryColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(AdmAppRegHistoryColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				AdmAppRegHistoryEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new AdmAppRegHistoryEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region AdmAppRegHistoryEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="AdmAppRegHistory"/> object.
	/// </remarks>
	public class AdmAppRegHistoryEventArgs : System.EventArgs
	{
		private AdmAppRegHistoryColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the AdmAppRegHistoryEventArgs class.
		///</summary>
		public AdmAppRegHistoryEventArgs(AdmAppRegHistoryColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the AdmAppRegHistoryEventArgs class.
		///</summary>
		public AdmAppRegHistoryEventArgs(AdmAppRegHistoryColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The AdmAppRegHistoryColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="AdmAppRegHistoryColumn" />
		public AdmAppRegHistoryColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all AdmAppRegHistory related events.
	///</summary>
	public delegate void AdmAppRegHistoryEventHandler(object sender, AdmAppRegHistoryEventArgs e);
	
	#region AdmAppRegHistoryComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class AdmAppRegHistoryComparer : System.Collections.Generic.IComparer<AdmAppRegHistory>
	{
		AdmAppRegHistoryColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:AdmAppRegHistoryComparer"/> class.
        /// </summary>
		public AdmAppRegHistoryComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:AdmAppRegHistoryComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public AdmAppRegHistoryComparer(AdmAppRegHistoryColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="AdmAppRegHistory"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="AdmAppRegHistory"/> to compare.</param>
        /// <param name="b">The second <c>AdmAppRegHistory</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(AdmAppRegHistory a, AdmAppRegHistory b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(AdmAppRegHistory entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(AdmAppRegHistory a, AdmAppRegHistory b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public AdmAppRegHistoryColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region AdmAppRegHistoryKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="AdmAppRegHistory"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class AdmAppRegHistoryKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the AdmAppRegHistoryKey class.
		/// </summary>
		public AdmAppRegHistoryKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the AdmAppRegHistoryKey class.
		/// </summary>
		public AdmAppRegHistoryKey(AdmAppRegHistoryBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.AdmAppRegHistoryId = entity.AdmAppRegHistoryId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the AdmAppRegHistoryKey class.
		/// </summary>
		public AdmAppRegHistoryKey(System.Decimal _admAppRegHistoryId)
		{
			#region Init Properties

			this.AdmAppRegHistoryId = _admAppRegHistoryId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private AdmAppRegHistoryBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public AdmAppRegHistoryBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the AdmAppRegHistoryId property
		private System.Decimal _admAppRegHistoryId;
		
		/// <summary>
		/// Gets or sets the AdmAppRegHistoryId property.
		/// </summary>
		public System.Decimal AdmAppRegHistoryId
		{
			get { return _admAppRegHistoryId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.AdmAppRegHistoryId = value;
				
				_admAppRegHistoryId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				AdmAppRegHistoryId = ( values["AdmAppRegHistoryId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["AdmAppRegHistoryId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("AdmAppRegHistoryId", AdmAppRegHistoryId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("AdmAppRegHistoryId: {0}{1}",
								AdmAppRegHistoryId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region AdmAppRegHistoryColumn Enum
	
	/// <summary>
	/// Enumerate the AdmAppRegHistory columns.
	/// </summary>
	[Serializable]
	public enum AdmAppRegHistoryColumn : int
	{
		/// <summary>
		/// AdmAppRegHistoryId : 
		/// </summary>
		[EnumTextValue("ADM_APP_REG_HISTORY_ID")]
		[ColumnEnum("ADM_APP_REG_HISTORY_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		AdmAppRegHistoryId = 1,
		/// <summary>
		/// AdmApplicantId : 
		/// </summary>
		[EnumTextValue("ADM_APPLICANT_ID")]
		[ColumnEnum("ADM_APPLICANT_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmApplicantId = 2,
		/// <summary>
		/// AppDate : تاريخ ادخال طلب الالتحاق
		/// </summary>
		[EnumTextValue("APP_DATE")]
		[ColumnEnum("APP_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		AppDate = 3,
		/// <summary>
		/// AdmCdeAppTypeId : 
		/// </summary>
		[EnumTextValue("ADM_CDE_APP_TYPE_ID")]
		[ColumnEnum("ADM_CDE_APP_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmCdeAppTypeId = 4,
		/// <summary>
		/// CurrentFlg : 
		/// </summary>
		[EnumTextValue("CURRENT_FLG")]
		[ColumnEnum("CURRENT_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CurrentFlg = 5,
		/// <summary>
		/// AsCodeDegreeId : 
		/// </summary>
		[EnumTextValue("AS_CODE_DEGREE_ID")]
		[ColumnEnum("AS_CODE_DEGREE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AsCodeDegreeId = 6,
		/// <summary>
		/// AsCodeDegreeClassId : 
		/// </summary>
		[EnumTextValue("AS_CODE_DEGREE_CLASS_ID")]
		[ColumnEnum("AS_CODE_DEGREE_CLASS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AsCodeDegreeClassId = 7,
		/// <summary>
		/// ComptativeRate : 
		/// </summary>
		[EnumTextValue("COMPTATIVE_RATE")]
		[ColumnEnum("COMPTATIVE_RATE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ComptativeRate = 8,
		/// <summary>
		/// AdmOpenAcadSemesterId : عام وفصل طلب الالتحاق
		/// </summary>
		[EnumTextValue("ADM_OPEN_ACAD_SEMESTER_ID")]
		[ColumnEnum("ADM_OPEN_ACAD_SEMESTER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmOpenAcadSemesterId = 9,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 10,
		/// <summary>
		/// AdmCdeStatusId : 
		/// </summary>
		[EnumTextValue("ADM_CDE_STATUS_ID")]
		[ColumnEnum("ADM_CDE_STATUS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmCdeStatusId = 11,
		/// <summary>
		/// OverAllAcceptanceFlg : 
		/// </summary>
		[EnumTextValue("OVER_ALL_ACCEPTANCE_FLG")]
		[ColumnEnum("OVER_ALL_ACCEPTANCE_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		OverAllAcceptanceFlg = 12,
		/// <summary>
		/// OrintationFlg : oriented -provisonal
		/// </summary>
		[EnumTextValue("ORINTATION_FLG")]
		[ColumnEnum("ORINTATION_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		OrintationFlg = 13,
		/// <summary>
		/// AdmAdmissionBandId : 
		/// </summary>
		[EnumTextValue("ADM_ADMISSION_BAND_ID")]
		[ColumnEnum("ADM_ADMISSION_BAND_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmAdmissionBandId = 14,
		/// <summary>
		/// DistributionFlg : 
		/// </summary>
		[EnumTextValue("DISTRIBUTION_FLG")]
		[ColumnEnum("DISTRIBUTION_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		DistributionFlg = 15,
		/// <summary>
		/// EnrolledFlg : 
		/// </summary>
		[EnumTextValue("ENROLLED_FLG")]
		[ColumnEnum("ENROLLED_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EnrolledFlg = 16,
		/// <summary>
		/// AutoDistrFlg : 
		/// </summary>
		[EnumTextValue("AUTO_DISTR_FLG")]
		[ColumnEnum("AUTO_DISTR_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		AutoDistrFlg = 17,
		/// <summary>
		/// FullTimeFlg : 
		/// </summary>
		[EnumTextValue("FULL_TIME_FLG")]
		[ColumnEnum("FULL_TIME_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FullTimeFlg = 18,
		/// <summary>
		/// OnlneFlg : 
		/// </summary>
		[EnumTextValue("ONLNE_FLG")]
		[ColumnEnum("ONLNE_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		OnlneFlg = 19,
		/// <summary>
		/// FeeCdeDiscTypeId : منحة تفوق مؤهل
		/// </summary>
		[EnumTextValue("FEE_CDE_DISC_TYPE_ID")]
		[ColumnEnum("FEE_CDE_DISC_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FeeCdeDiscTypeId = 20,
		/// <summary>
		/// LmsUsr : 
		/// </summary>
		[EnumTextValue("LMS_USR")]
		[ColumnEnum("LMS_USR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		LmsUsr = 21,
		/// <summary>
		/// LmsPwd : 
		/// </summary>
		[EnumTextValue("LMS_PWD")]
		[ColumnEnum("LMS_PWD", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		LmsPwd = 22,
		/// <summary>
		/// AdmAppHstryCode : كود المتقدم
		/// </summary>
		[EnumTextValue("ADM_APP_HSTRY_CODE")]
		[ColumnEnum("ADM_APP_HSTRY_CODE", typeof(System.String), System.Data.DbType.String, false, false, true, 30)]
		AdmAppHstryCode = 23,
		/// <summary>
		/// BusFlg : هل يريد الاشتراك بالأتوبيس
		/// </summary>
		[EnumTextValue("BUS_FLG")]
		[ColumnEnum("BUS_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		BusFlg = 24,
		/// <summary>
		/// FeeCdeSchshipTypeId : XXNU:انواع المنح الدراسية
		/// </summary>
		[EnumTextValue("FEE_CDE_SCHSHIP_TYPE_ID")]
		[ColumnEnum("FEE_CDE_SCHSHIP_TYPE_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		FeeCdeSchshipTypeId = 25,
		/// <summary>
		/// SchshipNote : in case of other
		/// </summary>
		[EnumTextValue("SCHSHIP_NOTE")]
		[ColumnEnum("SCHSHIP_NOTE", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		SchshipNote = 26,
		/// <summary>
		/// SpoSponsorId : الجهة المانحة
		/// </summary>
		[EnumTextValue("SPO_SPONSOR_ID")]
		[ColumnEnum("SPO_SPONSOR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SpoSponsorId = 27,
		/// <summary>
		/// SubmitFlg : submit طلب الالتحاق
		/// </summary>
		[EnumTextValue("SUBMIT_FLG")]
		[ColumnEnum("SUBMIT_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		SubmitFlg = 28,
		/// <summary>
		/// FeeCdeDiscCatId : 
		/// </summary>
		[EnumTextValue("FEE_CDE_DISC_CAT_ID")]
		[ColumnEnum("FEE_CDE_DISC_CAT_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		FeeCdeDiscCatId = 29,
		/// <summary>
		/// SchshipTypeFlg : NU
		/// </summary>
		[EnumTextValue("SCHSHIP_TYPE_FLG")]
		[ColumnEnum("SCHSHIP_TYPE_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		SchshipTypeFlg = 30,
		/// <summary>
		/// FincaidTypeFlg : xx NU
		/// </summary>
		[EnumTextValue("FINCAID_TYPE_FLG")]
		[ColumnEnum("FINCAID_TYPE_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		FincaidTypeFlg = 31,
		/// <summary>
		/// HasRa : XXNUApplicant has a RA
		/// </summary>
		[EnumTextValue("HAS_RA")]
		[ColumnEnum("HAS_RA", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		HasRa = 32,
		/// <summary>
		/// SubmitDate : تاريخ submit طلب الالتحاق
		/// </summary>
		[EnumTextValue("SUBMIT_DATE")]
		[ColumnEnum("SUBMIT_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		SubmitDate = 33,
		/// <summary>
		/// LastDate : تاريخ اخر تعديل
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 34,
		/// <summary>
		/// AdmCdeStatusRsnId : XXسبب الرفضXX
		/// </summary>
		[EnumTextValue("ADM_CDE_STATUS_RSN_ID")]
		[ColumnEnum("ADM_CDE_STATUS_RSN_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		AdmCdeStatusRsnId = 35,
		/// <summary>
		/// TermcondFlg : Terms & condition Tabs check box
		/// </summary>
		[EnumTextValue("TERMCOND_FLG")]
		[ColumnEnum("TERMCOND_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		TermcondFlg = 36,
		/// <summary>
		/// DormFlg : housing yes/no
		/// </summary>
		[EnumTextValue("DORM_FLG")]
		[ColumnEnum("DORM_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		DormFlg = 37,
		/// <summary>
		/// EngNativeFlg : if=1 > exempt english certifacate even  required
		/// 		/// 2- native English   > exempted
		/// </summary>
		[EnumTextValue("ENG_NATIVE_FLG")]
		[ColumnEnum("ENG_NATIVE_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EngNativeFlg = 38,
		/// <summary>
		/// EngGradChkFlg : 
		/// </summary>
		[EnumTextValue("ENG_GRAD_CHK_FLG")]
		[ColumnEnum("ENG_GRAD_CHK_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		EngGradChkFlg = 39,
		/// <summary>
		/// WaitFlg : XXXXX
		/// </summary>
		[EnumTextValue("WAIT_FLG")]
		[ColumnEnum("WAIT_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		WaitFlg = 40,
		/// <summary>
		/// EdAcadYearId : عام الالتحاق الفعلى
		/// </summary>
		[EnumTextValue("ED_ACAD_YEAR_ID")]
		[ColumnEnum("ED_ACAD_YEAR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdAcadYearId = 41,
		/// <summary>
		/// EdCodeSemesterId : فصل الالتحاق الفعلى
		/// </summary>
		[EnumTextValue("ED_CODE_SEMESTER_ID")]
		[ColumnEnum("ED_CODE_SEMESTER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeSemesterId = 42,
		/// <summary>
		/// MasterPhdFlg : 
		/// </summary>
		[EnumTextValue("MASTER_PHD_FLG")]
		[ColumnEnum("MASTER_PHD_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		MasterPhdFlg = 43,
		/// <summary>
		/// EdCodeLevelId : 
		/// </summary>
		[EnumTextValue("ED_CODE_LEVEL_ID")]
		[ColumnEnum("ED_CODE_LEVEL_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeLevelId = 44,
		/// <summary>
		/// SpoSponsorTypeId : Ejust نوع الكفيل حكومى-خاص-جامعة....
		/// </summary>
		[EnumTextValue("SPO_SPONSOR_TYPE_ID")]
		[ColumnEnum("SPO_SPONSOR_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SpoSponsorTypeId = 45,
		/// <summary>
		/// UrlReference : 
		/// </summary>
		[EnumTextValue("URL_REFERENCE")]
		[ColumnEnum("URL_REFERENCE", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		UrlReference = 46,
		/// <summary>
		/// AdmCdeStatusOldId : 
		/// </summary>
		[EnumTextValue("ADM_CDE_STATUS_OLD_ID")]
		[ColumnEnum("ADM_CDE_STATUS_OLD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmCdeStatusOldId = 47,
		/// <summary>
		/// ProvisionalFlg : Ejust >PG_PROVISIONAL_FLG
		/// </summary>
		[EnumTextValue("PROVISIONAL_FLG")]
		[ColumnEnum("PROVISIONAL_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		ProvisionalFlg = 48,
		/// <summary>
		/// AdmCdeAppStatusId : حالة المتقدم
		/// </summary>
		[EnumTextValue("ADM_CDE_APP_STATUS_ID")]
		[ColumnEnum("ADM_CDE_APP_STATUS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmCdeAppStatusId = 49,
		/// <summary>
		/// TansikFlg : 
		/// </summary>
		[EnumTextValue("TansiK_FLG")]
		[ColumnEnum("TansiK_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		TansikFlg = 50,
		/// <summary>
		/// AdmDecisionStatusId : 
		/// </summary>
		[EnumTextValue("Adm_Decision_Status_Id")]
		[ColumnEnum("Adm_Decision_Status_Id", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmDecisionStatusId = 51,
		/// <summary>
		/// PartTimeFlg : 
		/// </summary>
		[EnumTextValue("PART_TIME_FLG")]
		[ColumnEnum("PART_TIME_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		PartTimeFlg = 52,
		/// <summary>
		/// DataSentFlg : 
		/// </summary>
		[EnumTextValue("DATA_SENT_FLG")]
		[ColumnEnum("DATA_SENT_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		DataSentFlg = 53,
		/// <summary>
		/// CovidFlg : 
		/// </summary>
		[EnumTextValue("COVID_FLG")]
		[ColumnEnum("COVID_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		CovidFlg = 54
	}//End enum

	#endregion AdmAppRegHistoryColumn Enum

} // end namespace
