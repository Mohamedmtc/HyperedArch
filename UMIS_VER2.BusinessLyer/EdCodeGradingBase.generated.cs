
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file EdCodeGrading.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ED_CODE_GRADING' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class EdCodeGradingBase : EntityBase, IEdCodeGrading, IEntityId<EdCodeGradingKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private EdCodeGradingEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private EdCodeGradingEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private EdCodeGradingEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<EdCodeGrading> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdCodeGradingEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdCodeGradingEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="EdCodeGradingBase"/> instance.
		///</summary>
		public EdCodeGradingBase()
		{
			this.entityData = new EdCodeGradingEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="EdCodeGradingBase"/> instance.
		///</summary>
		///<param name="_edCodeGradingId"></param>
		///<param name="_descrAr"></param>
		///<param name="_descrEn"></param>
		///<param name="_symbolAr"></param>
		///<param name="_symbolEn"></param>
		///<param name="_gradOrder"></param>
		///<param name="_gradCode"></param>
		///<param name="_showFlg"></param>
		public EdCodeGradingBase(System.Decimal _edCodeGradingId, System.String _descrAr, 
			System.String _descrEn, System.String _symbolAr, System.String _symbolEn, System.String _gradOrder, 
			System.String _gradCode, System.Decimal? _showFlg)
		{
			this.entityData = new EdCodeGradingEntityData();
			this.backupData = null;

			this.EdCodeGradingId = _edCodeGradingId;
			this.DescrAr = _descrAr;
			this.DescrEn = _descrEn;
			this.SymbolAr = _symbolAr;
			this.SymbolEn = _symbolEn;
			this.GradOrder = _gradOrder;
			this.GradCode = _gradCode;
			this.ShowFlg = _showFlg;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="EdCodeGrading"/> instance.
		///</summary>
		///<param name="_edCodeGradingId"></param>
		///<param name="_descrAr"></param>
		///<param name="_descrEn"></param>
		///<param name="_symbolAr"></param>
		///<param name="_symbolEn"></param>
		///<param name="_gradOrder"></param>
		///<param name="_gradCode"></param>
		///<param name="_showFlg"></param>
		public static EdCodeGrading CreateEdCodeGrading(System.Decimal _edCodeGradingId, System.String _descrAr, 
			System.String _descrEn, System.String _symbolAr, System.String _symbolEn, System.String _gradOrder, 
			System.String _gradCode, System.Decimal? _showFlg)
		{
			EdCodeGrading newEdCodeGrading = new EdCodeGrading();
			newEdCodeGrading.EdCodeGradingId = _edCodeGradingId;
			newEdCodeGrading.DescrAr = _descrAr;
			newEdCodeGrading.DescrEn = _descrEn;
			newEdCodeGrading.SymbolAr = _symbolAr;
			newEdCodeGrading.SymbolEn = _symbolEn;
			newEdCodeGrading.GradOrder = _gradOrder;
			newEdCodeGrading.GradCode = _gradCode;
			newEdCodeGrading.ShowFlg = _showFlg;
			return newEdCodeGrading;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the EdCodeGradingId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal EdCodeGradingId
		{
			get
			{
				return this.entityData.EdCodeGradingId; 
			}
			
			set
			{
				if (this.entityData.EdCodeGradingId == value)
					return;
					
				OnColumnChanging(EdCodeGradingColumn.EdCodeGradingId, this.entityData.EdCodeGradingId);
				this.entityData.EdCodeGradingId = value;
				this.EntityId.EdCodeGradingId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCodeGradingColumn.EdCodeGradingId, this.entityData.EdCodeGradingId);
				OnPropertyChanged("EdCodeGradingId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ED_CODE_GRADING_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the ED_CODE_GRADING_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalEdCodeGradingId
		{
			get { return this.entityData.OriginalEdCodeGradingId; }
			set { this.entityData.OriginalEdCodeGradingId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the DescrAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 50)]
		public virtual System.String DescrAr
		{
			get
			{
				return this.entityData.DescrAr; 
			}
			
			set
			{
				if (this.entityData.DescrAr == value)
					return;
					
				OnColumnChanging(EdCodeGradingColumn.DescrAr, this.entityData.DescrAr);
				this.entityData.DescrAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCodeGradingColumn.DescrAr, this.entityData.DescrAr);
				OnPropertyChanged("DescrAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DescrEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String DescrEn
		{
			get
			{
				return this.entityData.DescrEn; 
			}
			
			set
			{
				if (this.entityData.DescrEn == value)
					return;
					
				OnColumnChanging(EdCodeGradingColumn.DescrEn, this.entityData.DescrEn);
				this.entityData.DescrEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCodeGradingColumn.DescrEn, this.entityData.DescrEn);
				OnPropertyChanged("DescrEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SymbolAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String SymbolAr
		{
			get
			{
				return this.entityData.SymbolAr; 
			}
			
			set
			{
				if (this.entityData.SymbolAr == value)
					return;
					
				OnColumnChanging(EdCodeGradingColumn.SymbolAr, this.entityData.SymbolAr);
				this.entityData.SymbolAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCodeGradingColumn.SymbolAr, this.entityData.SymbolAr);
				OnPropertyChanged("SymbolAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SymbolEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String SymbolEn
		{
			get
			{
				return this.entityData.SymbolEn; 
			}
			
			set
			{
				if (this.entityData.SymbolEn == value)
					return;
					
				OnColumnChanging(EdCodeGradingColumn.SymbolEn, this.entityData.SymbolEn);
				this.entityData.SymbolEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCodeGradingColumn.SymbolEn, this.entityData.SymbolEn);
				OnPropertyChanged("SymbolEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GradOrder property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 3)]
		public virtual System.String GradOrder
		{
			get
			{
				return this.entityData.GradOrder; 
			}
			
			set
			{
				if (this.entityData.GradOrder == value)
					return;
					
				OnColumnChanging(EdCodeGradingColumn.GradOrder, this.entityData.GradOrder);
				this.entityData.GradOrder = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCodeGradingColumn.GradOrder, this.entityData.GradOrder);
				OnPropertyChanged("GradOrder");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GradCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String GradCode
		{
			get
			{
				return this.entityData.GradCode; 
			}
			
			set
			{
				if (this.entityData.GradCode == value)
					return;
					
				OnColumnChanging(EdCodeGradingColumn.GradCode, this.entityData.GradCode);
				this.entityData.GradCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCodeGradingColumn.GradCode, this.entityData.GradCode);
				OnPropertyChanged("GradCode");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ShowFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsShowFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ShowFlg
		{
			get
			{
				return this.entityData.ShowFlg; 
			}
			
			set
			{
				if (this.entityData.ShowFlg == value)
					return;
					
				OnColumnChanging(EdCodeGradingColumn.ShowFlg, this.entityData.ShowFlg);
				this.entityData.ShowFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCodeGradingColumn.ShowFlg, this.entityData.ShowFlg);
				OnPropertyChanged("ShowFlg");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsCourseFrom objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRANS_COURSE_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsCourseFrom> EdStudIntTrnsCourseFromCollection
		{
			get { return entityData.EdStudIntTrnsCourseFromCollection; }
			set { entityData.EdStudIntTrnsCourseFromCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppTransToCourse objects
		///	which are related to this object through the relation FK_ADM_APP_TRANS_BALANCE_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppTransToCourse> AdmAppTransToCourseCollection
		{
			get { return entityData.AdmAppTransToCourseCollection; }
			set { entityData.AdmAppTransToCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntPolicyCourseRepeat objects
		///	which are related to this object through the relation FK_ENT_POLICY_COURSE_REPEAT_ED_CODE_GRADING1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntPolicyCourseRepeat> EntPolicyCourseRepeatCollectionGetByEdCodeMinGradId
		{
			get { return entityData.EntPolicyCourseRepeatCollectionGetByEdCodeMinGradId; }
			set { entityData.EntPolicyCourseRepeatCollectionGetByEdCodeMinGradId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRegAdd objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_ADD_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRegAdd> EdStudCourseRegAddCollectionGetByActualEdCodeGradingId
		{
			get { return entityData.EdStudCourseRegAddCollectionGetByActualEdCodeGradingId; }
			set { entityData.EdStudCourseRegAddCollectionGetByActualEdCodeGradingId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgThesisStud objects
		///	which are related to this object through the relation FK_PG_THESIS_STUD_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisStud> PgThesisStudCollection
		{
			get { return entityData.PgThesisStudCollection; }
			set { entityData.PgThesisStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntPolicyAccumHonor objects
		///	which are related to this object through the relation FK_ENT_POLICY_ACCUM_HONOR_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntPolicyAccumHonor> EntPolicyAccumHonorCollection
		{
			get { return entityData.EntPolicyAccumHonorCollection; }
			set { entityData.EntPolicyAccumHonorCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudSemesterExt objects
		///	which are related to this object through the relation FK_ED_STUD_SEMESTER_EXT_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudSemesterExt> EdStudSemesterExtCollectionGetByEdCodeGradingId
		{
			get { return entityData.EdStudSemesterExtCollectionGetByEdCodeGradingId; }
			set { entityData.EdStudSemesterExtCollectionGetByEdCodeGradingId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseExpDtl objects
		///	which are related to this object through the relation FK_ED_COURSE_EXPRESSION_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseExpDtl> EdCourseExpDtlCollection
		{
			get { return entityData.EdCourseExpDtlCollection; }
			set { entityData.EdCourseExpDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntPolcyGrdngHdr objects
		///	which are related to this object through the relation FK_ENT_POLCY_GRDNG_HDR_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntPolcyGrdngHdr> EntPolcyGrdngHdrCollection
		{
			get { return entityData.EntPolcyGrdngHdrCollection; }
			set { entityData.EntPolcyGrdngHdrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStdCrsExam objects
		///	which are related to this object through the relation FK_ED_STD_CRS_EXAM_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStdCrsExam> EdStdCrsExamCollectionGetByEdCodeGradingOldId
		{
			get { return entityData.EdStdCrsExamCollectionGetByEdCodeGradingOldId; }
			set { entityData.EdStdCrsExamCollectionGetByEdCodeGradingOldId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseGrdChng objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_GRD_CHNG_ED_CODE_GRADING1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseGrdChng> EdStudCourseGrdChngCollectionGetByEdCodeGradingNewId
		{
			get { return entityData.EdStudCourseGrdChngCollectionGetByEdCodeGradingNewId; }
			set { entityData.EdStudCourseGrdChngCollectionGetByEdCodeGradingNewId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStdExamSemester objects
		///	which are related to this object through the relation FK_ED_STD_EXAM_SEMESTER_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStdExamSemester> EdStdExamSemesterCollection
		{
			get { return entityData.EdStdExamSemesterCollection; }
			set { entityData.EdStdExamSemesterCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStdCrsExam objects
		///	which are related to this object through the relation FK_ED_STD_CRS_EXAM_ED_CODE_GRADING1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStdCrsExam> EdStdCrsExamCollectionGetByEdCodeGradingNewId
		{
			get { return entityData.EdStdCrsExamCollectionGetByEdCodeGradingNewId; }
			set { entityData.EdStdCrsExamCollectionGetByEdCodeGradingNewId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseReg objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseReg> EdStudCourseRegCollection
		{
			get { return entityData.EdStudCourseRegCollection; }
			set { entityData.EdStudCourseRegCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntPolicyCourseRepeat objects
		///	which are related to this object through the relation FK_ENT_POLICY_COURSE_REPEAT_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntPolicyCourseRepeat> EntPolicyCourseRepeatCollectionGetByEdCodeGradingId
		{
			get { return entityData.EntPolicyCourseRepeatCollectionGetByEdCodeGradingId; }
			set { entityData.EntPolicyCourseRepeatCollectionGetByEdCodeGradingId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsCourseTo objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_COURSE_TO_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsCourseTo> EdStudIntTrnsCourseToCollection
		{
			get { return entityData.EdStudIntTrnsCourseToCollection; }
			set { entityData.EdStudIntTrnsCourseToCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudFaculty objects
		///	which are related to this object through the relation FK_ED_STUD_FACULTY_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudFaculty> EdStudFacultyCollection
		{
			get { return entityData.EdStudFacultyCollection; }
			set { entityData.EdStudFacultyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntPolicyGradingDtl objects
		///	which are related to this object through the relation FK_ENT_POLICY_GRADING_DTL_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntPolicyGradingDtl> EntPolicyGradingDtlCollection
		{
			get { return entityData.EntPolicyGradingDtlCollection; }
			set { entityData.EntPolicyGradingDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgThesisGrantStud objects
		///	which are related to this object through the relation FK_PG_THESIS_GRANT_STUD_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisGrantStud> PgThesisGrantStudCollection
		{
			get { return entityData.PgThesisGrantStudCollection; }
			set { entityData.PgThesisGrantStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseGrdChng objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_GRD_CHNG_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseGrdChng> EdStudCourseGrdChngCollectionGetByEdCodeGradingOldId
		{
			get { return entityData.EdStudCourseGrdChngCollectionGetByEdCodeGradingOldId; }
			set { entityData.EdStudCourseGrdChngCollectionGetByEdCodeGradingOldId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudSemesterExt objects
		///	which are related to this object through the relation FK_ED_STUD_SEMESTER_EXT_ED_CODE_GRADING1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudSemesterExt> EdStudSemesterExtCollectionGetByEdCodeAccumGradingId
		{
			get { return entityData.EdStudSemesterExtCollectionGetByEdCodeAccumGradingId; }
			set { entityData.EdStudSemesterExtCollectionGetByEdCodeAccumGradingId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRegTemp objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_TEMP_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRegTemp> EdStudCourseRegTempCollection
		{
			get { return entityData.EdStudCourseRegTempCollection; }
			set { entityData.EdStudCourseRegTempCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntPolicyCourseRepeat objects
		///	which are related to this object through the relation FK_ENT_POLICY_COURSE_REPEAT_ED_CODE_GRADING2
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntPolicyCourseRepeat> EntPolicyCourseRepeatCollectionGetByGradingMoreThanOneId
		{
			get { return entityData.EntPolicyCourseRepeatCollectionGetByGradingMoreThanOneId; }
			set { entityData.EntPolicyCourseRepeatCollectionGetByGradingMoreThanOneId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntCourseMdData objects
		///	which are related to this object through the relation FK_ENT_COURSE_MD_DATA_ED_CODE_GRADING
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntCourseMdData> EntCourseMdDataCollection
		{
			get { return entityData.EntCourseMdDataCollection; }
			set { entityData.EntCourseMdDataCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRegAdd objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_ADD_ED_CODE_GRADING1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRegAdd> EdStudCourseRegAddCollectionGetByFinalEdCodeGradingId
		{
			get { return entityData.EdStudCourseRegAddCollectionGetByFinalEdCodeGradingId; }
			set { entityData.EdStudCourseRegAddCollectionGetByFinalEdCodeGradingId = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("DescrAr", "Descr Ar"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DescrAr", "Descr Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DescrEn", "Descr En", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SymbolAr", "Symbol Ar", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SymbolEn", "Symbol En", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("GradOrder", "Grad Order", 3));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("GradCode", "Grad Code", 20));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ED_CODE_GRADING"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ED_CODE_GRADING_ID", "DESCR_AR", "DESCR_EN", "SYMBOL_AR", "SYMBOL_EN", "GRAD_ORDER", "GRAD_CODE", "SHOW_FLG"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as EdCodeGradingEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (EdCodeGrading) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<EdCodeGrading>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as EdCodeGrading);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed EdCodeGrading Entity 
		///</summary>
		protected virtual EdCodeGrading Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			EdCodeGrading copy = new EdCodeGrading();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.EdCodeGradingId = this.EdCodeGradingId;
					copy.OriginalEdCodeGradingId = this.OriginalEdCodeGradingId;
				copy.DescrAr = this.DescrAr;
				copy.DescrEn = this.DescrEn;
				copy.SymbolAr = this.SymbolAr;
				copy.SymbolEn = this.SymbolEn;
				copy.GradOrder = this.GradOrder;
				copy.GradCode = this.GradCode;
				copy.ShowFlg = this.ShowFlg;
			
		
			//deep copy nested objects
			copy.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection, existingCopies); 
			copy.AdmAppTransToCourseCollection = (TList<AdmAppTransToCourse>) MakeCopyOf(this.AdmAppTransToCourseCollection, existingCopies); 
			copy.EntPolicyCourseRepeatCollectionGetByEdCodeMinGradId = (TList<EntPolicyCourseRepeat>) MakeCopyOf(this.EntPolicyCourseRepeatCollectionGetByEdCodeMinGradId, existingCopies); 
			copy.EdStudCourseRegAddCollectionGetByActualEdCodeGradingId = (TList<EdStudCourseRegAdd>) MakeCopyOf(this.EdStudCourseRegAddCollectionGetByActualEdCodeGradingId, existingCopies); 
			copy.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection, existingCopies); 
			copy.EntPolicyAccumHonorCollection = (TList<EntPolicyAccumHonor>) MakeCopyOf(this.EntPolicyAccumHonorCollection, existingCopies); 
			copy.EdStudSemesterExtCollectionGetByEdCodeGradingId = (TList<EdStudSemesterExt>) MakeCopyOf(this.EdStudSemesterExtCollectionGetByEdCodeGradingId, existingCopies); 
			copy.EdCourseExpDtlCollection = (TList<EdCourseExpDtl>) MakeCopyOf(this.EdCourseExpDtlCollection, existingCopies); 
			copy.EntPolcyGrdngHdrCollection = (TList<EntPolcyGrdngHdr>) MakeCopyOf(this.EntPolcyGrdngHdrCollection, existingCopies); 
			copy.EdStdCrsExamCollectionGetByEdCodeGradingOldId = (TList<EdStdCrsExam>) MakeCopyOf(this.EdStdCrsExamCollectionGetByEdCodeGradingOldId, existingCopies); 
			copy.EdStudCourseGrdChngCollectionGetByEdCodeGradingNewId = (TList<EdStudCourseGrdChng>) MakeCopyOf(this.EdStudCourseGrdChngCollectionGetByEdCodeGradingNewId, existingCopies); 
			copy.EdStdExamSemesterCollection = (TList<EdStdExamSemester>) MakeCopyOf(this.EdStdExamSemesterCollection, existingCopies); 
			copy.EdStdCrsExamCollectionGetByEdCodeGradingNewId = (TList<EdStdCrsExam>) MakeCopyOf(this.EdStdCrsExamCollectionGetByEdCodeGradingNewId, existingCopies); 
			copy.EdStudCourseRegCollection = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollection, existingCopies); 
			copy.EntPolicyCourseRepeatCollectionGetByEdCodeGradingId = (TList<EntPolicyCourseRepeat>) MakeCopyOf(this.EntPolicyCourseRepeatCollectionGetByEdCodeGradingId, existingCopies); 
			copy.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection, existingCopies); 
			copy.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection, existingCopies); 
			copy.EntPolicyGradingDtlCollection = (TList<EntPolicyGradingDtl>) MakeCopyOf(this.EntPolicyGradingDtlCollection, existingCopies); 
			copy.PgThesisGrantStudCollection = (TList<PgThesisGrantStud>) MakeCopyOf(this.PgThesisGrantStudCollection, existingCopies); 
			copy.EdStudCourseGrdChngCollectionGetByEdCodeGradingOldId = (TList<EdStudCourseGrdChng>) MakeCopyOf(this.EdStudCourseGrdChngCollectionGetByEdCodeGradingOldId, existingCopies); 
			copy.EdStudSemesterExtCollectionGetByEdCodeAccumGradingId = (TList<EdStudSemesterExt>) MakeCopyOf(this.EdStudSemesterExtCollectionGetByEdCodeAccumGradingId, existingCopies); 
			copy.EdStudCourseRegTempCollection = (TList<EdStudCourseRegTemp>) MakeCopyOf(this.EdStudCourseRegTempCollection, existingCopies); 
			copy.EntPolicyCourseRepeatCollectionGetByGradingMoreThanOneId = (TList<EntPolicyCourseRepeat>) MakeCopyOf(this.EntPolicyCourseRepeatCollectionGetByGradingMoreThanOneId, existingCopies); 
			copy.EntCourseMdDataCollection = (TList<EntCourseMdData>) MakeCopyOf(this.EntCourseMdDataCollection, existingCopies); 
			copy.EdStudCourseRegAddCollectionGetByFinalEdCodeGradingId = (TList<EdStudCourseRegAdd>) MakeCopyOf(this.EdStudCourseRegAddCollectionGetByFinalEdCodeGradingId, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed EdCodeGrading Entity 
		///</summary>
		public virtual EdCodeGrading Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed EdCodeGrading Entity which is a deep copy of the current entity.
		///</summary>
		public virtual EdCodeGrading DeepCopy()
		{
			return EntityHelper.Clone<EdCodeGrading>(this as EdCodeGrading);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as EdCodeGradingEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new EdCodeGradingEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as EdCodeGradingEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(EdCodeGradingColumn column)
		{
			switch(column)
			{
					case EdCodeGradingColumn.EdCodeGradingId:
					return entityData.EdCodeGradingId != _originalData.EdCodeGradingId;
					case EdCodeGradingColumn.DescrAr:
					return entityData.DescrAr != _originalData.DescrAr;
					case EdCodeGradingColumn.DescrEn:
					return entityData.DescrEn != _originalData.DescrEn;
					case EdCodeGradingColumn.SymbolAr:
					return entityData.SymbolAr != _originalData.SymbolAr;
					case EdCodeGradingColumn.SymbolEn:
					return entityData.SymbolEn != _originalData.SymbolEn;
					case EdCodeGradingColumn.GradOrder:
					return entityData.GradOrder != _originalData.GradOrder;
					case EdCodeGradingColumn.GradCode:
					return entityData.GradCode != _originalData.GradCode;
					case EdCodeGradingColumn.ShowFlg:
					return entityData.ShowFlg != _originalData.ShowFlg;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< EdCodeGradingColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.EdCodeGradingId != _originalData.EdCodeGradingId;
			result = result || entityData.DescrAr != _originalData.DescrAr;
			result = result || entityData.DescrEn != _originalData.DescrEn;
			result = result || entityData.SymbolAr != _originalData.SymbolAr;
			result = result || entityData.SymbolEn != _originalData.SymbolEn;
			result = result || entityData.GradOrder != _originalData.GradOrder;
			result = result || entityData.GradCode != _originalData.GradCode;
			result = result || entityData.ShowFlg != _originalData.ShowFlg;
			return result;
		}	
		
		///<summary>
		///  Returns a EdCodeGrading Entity with the original data.
		///</summary>
		public EdCodeGrading GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateEdCodeGrading(
				_originalData.EdCodeGradingId,
				_originalData.DescrAr,
				_originalData.DescrEn,
				_originalData.SymbolAr,
				_originalData.SymbolEn,
				_originalData.GradOrder,
				_originalData.GradCode,
				_originalData.ShowFlg
				);
				
			return (EdCodeGrading)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="EdCodeGradingBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is EdCodeGradingBase)
				return ValueEquals(this, (EdCodeGradingBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="EdCodeGradingBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.EdCodeGradingId.GetHashCode() ^ 
					this.DescrAr.GetHashCode() ^ 
					((this.DescrEn == null) ? string.Empty : this.DescrEn.ToString()).GetHashCode() ^ 
					((this.SymbolAr == null) ? string.Empty : this.SymbolAr.ToString()).GetHashCode() ^ 
					((this.SymbolEn == null) ? string.Empty : this.SymbolEn.ToString()).GetHashCode() ^ 
					((this.GradOrder == null) ? string.Empty : this.GradOrder.ToString()).GetHashCode() ^ 
					((this.GradCode == null) ? string.Empty : this.GradCode.ToString()).GetHashCode() ^ 
					((this.ShowFlg == null) ? string.Empty : this.ShowFlg.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="EdCodeGradingBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(EdCodeGradingBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="EdCodeGradingBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="EdCodeGradingBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="EdCodeGradingBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(EdCodeGradingBase Object1, EdCodeGradingBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.EdCodeGradingId != Object2.EdCodeGradingId)
				equal = false;
			if (Object1.DescrAr != Object2.DescrAr)
				equal = false;
			if ( Object1.DescrEn != null && Object2.DescrEn != null )
			{
				if (Object1.DescrEn != Object2.DescrEn)
					equal = false;
			}
			else if (Object1.DescrEn == null ^ Object2.DescrEn == null )
			{
				equal = false;
			}
			if ( Object1.SymbolAr != null && Object2.SymbolAr != null )
			{
				if (Object1.SymbolAr != Object2.SymbolAr)
					equal = false;
			}
			else if (Object1.SymbolAr == null ^ Object2.SymbolAr == null )
			{
				equal = false;
			}
			if ( Object1.SymbolEn != null && Object2.SymbolEn != null )
			{
				if (Object1.SymbolEn != Object2.SymbolEn)
					equal = false;
			}
			else if (Object1.SymbolEn == null ^ Object2.SymbolEn == null )
			{
				equal = false;
			}
			if ( Object1.GradOrder != null && Object2.GradOrder != null )
			{
				if (Object1.GradOrder != Object2.GradOrder)
					equal = false;
			}
			else if (Object1.GradOrder == null ^ Object2.GradOrder == null )
			{
				equal = false;
			}
			if ( Object1.GradCode != null && Object2.GradCode != null )
			{
				if (Object1.GradCode != Object2.GradCode)
					equal = false;
			}
			else if (Object1.GradCode == null ^ Object2.GradCode == null )
			{
				equal = false;
			}
			if ( Object1.ShowFlg != null && Object2.ShowFlg != null )
			{
				if (Object1.ShowFlg != Object2.ShowFlg)
					equal = false;
			}
			else if (Object1.ShowFlg == null ^ Object2.ShowFlg == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((EdCodeGradingBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static EdCodeGradingComparer GetComparer()
        {
            return new EdCodeGradingComparer();
        }
        */

        // Comparer delegates back to EdCodeGrading
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(EdCodeGrading rhs, EdCodeGradingColumn which)
        {
            switch (which)
            {
            	
            	
            	case EdCodeGradingColumn.EdCodeGradingId:
            		return this.EdCodeGradingId.CompareTo(rhs.EdCodeGradingId);
            		
            		                 
            	
            	
            	case EdCodeGradingColumn.DescrAr:
            		return this.DescrAr.CompareTo(rhs.DescrAr);
            		
            		                 
            	
            	
            	case EdCodeGradingColumn.DescrEn:
            		return this.DescrEn.CompareTo(rhs.DescrEn);
            		
            		                 
            	
            	
            	case EdCodeGradingColumn.SymbolAr:
            		return this.SymbolAr.CompareTo(rhs.SymbolAr);
            		
            		                 
            	
            	
            	case EdCodeGradingColumn.SymbolEn:
            		return this.SymbolEn.CompareTo(rhs.SymbolEn);
            		
            		                 
            	
            	
            	case EdCodeGradingColumn.GradOrder:
            		return this.GradOrder.CompareTo(rhs.GradOrder);
            		
            		                 
            	
            	
            	case EdCodeGradingColumn.GradCode:
            		return this.GradCode.CompareTo(rhs.GradCode);
            		
            		                 
            	
            	
            	case EdCodeGradingColumn.ShowFlg:
            		return this.ShowFlg.Value.CompareTo(rhs.ShowFlg.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<EdCodeGradingKey> Members
		
		// member variable for the EntityId property
		private EdCodeGradingKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual EdCodeGradingKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new EdCodeGradingKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("EdCodeGrading")
					.Append("|").Append( this.EdCodeGradingId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{9}{8}- EdCodeGradingId: {0}{8}- DescrAr: {1}{8}- DescrEn: {2}{8}- SymbolAr: {3}{8}- SymbolEn: {4}{8}- GradOrder: {5}{8}- GradCode: {6}{8}- ShowFlg: {7}{8}{10}", 
				this.EdCodeGradingId,
				this.DescrAr,
				(this.DescrEn == null) ? string.Empty : this.DescrEn.ToString(),
				(this.SymbolAr == null) ? string.Empty : this.SymbolAr.ToString(),
				(this.SymbolEn == null) ? string.Empty : this.SymbolEn.ToString(),
				(this.GradOrder == null) ? string.Empty : this.GradOrder.ToString(),
				(this.GradCode == null) ? string.Empty : this.GradCode.ToString(),
				(this.ShowFlg == null) ? string.Empty : this.ShowFlg.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ED_CODE_GRADING' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class EdCodeGradingEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ED_CODE_GRADING_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ED_CODE_GRADING"</remarks>
		public System.Decimal EdCodeGradingId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalEdCodeGradingId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// DESCR_AR : 
		/// </summary>
		public System.String		  DescrAr = string.Empty;
		
		/// <summary>
		/// DESCR_EN : 
		/// </summary>
		public System.String		  DescrEn = null;
		
		/// <summary>
		/// SYMBOL_AR : 
		/// </summary>
		public System.String		  SymbolAr = null;
		
		/// <summary>
		/// SYMBOL_EN : 
		/// </summary>
		public System.String		  SymbolEn = null;
		
		/// <summary>
		/// GRAD_ORDER : 
		/// </summary>
		public System.String		  GradOrder = null;
		
		/// <summary>
		/// GRAD_CODE : 
		/// </summary>
		public System.String		  GradCode = null;
		
		/// <summary>
		/// SHOW_FLG : 
		/// </summary>
		public System.Decimal?		  ShowFlg = null;
		#endregion
			
		#region Source Foreign Key Property
				
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region EdStudIntTrnsCourseFromCollection
		
		private TList<EdStudIntTrnsCourseFrom> _edStudIntTrnsCourseFromEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsCourseFromEdCodeGradingId
		/// </summary>
		
		public TList<EdStudIntTrnsCourseFrom> EdStudIntTrnsCourseFromCollection
		{
			get
			{
				if (_edStudIntTrnsCourseFromEdCodeGradingId == null)
				{
				_edStudIntTrnsCourseFromEdCodeGradingId = new TList<EdStudIntTrnsCourseFrom>();
				}
	
				return _edStudIntTrnsCourseFromEdCodeGradingId;
			}
			set { _edStudIntTrnsCourseFromEdCodeGradingId = value; }
		}
		
		#endregion

		#region AdmAppTransToCourseCollection
		
		private TList<AdmAppTransToCourse> _admAppTransToCourseEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppTransToCourseEdCodeGradingId
		/// </summary>
		
		public TList<AdmAppTransToCourse> AdmAppTransToCourseCollection
		{
			get
			{
				if (_admAppTransToCourseEdCodeGradingId == null)
				{
				_admAppTransToCourseEdCodeGradingId = new TList<AdmAppTransToCourse>();
				}
	
				return _admAppTransToCourseEdCodeGradingId;
			}
			set { _admAppTransToCourseEdCodeGradingId = value; }
		}
		
		#endregion

		#region EntPolicyCourseRepeatCollectionGetByEdCodeMinGradId
		
		private TList<EntPolicyCourseRepeat> _entPolicyCourseRepeatEdCodeMinGradIdGetByEdCodeMinGradId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entPolicyCourseRepeatEdCodeMinGradIdGetByEdCodeMinGradId
		/// </summary>
		
		public TList<EntPolicyCourseRepeat> EntPolicyCourseRepeatCollectionGetByEdCodeMinGradId
		{
			get
			{
				if (_entPolicyCourseRepeatEdCodeMinGradIdGetByEdCodeMinGradId == null)
				{
				_entPolicyCourseRepeatEdCodeMinGradIdGetByEdCodeMinGradId = new TList<EntPolicyCourseRepeat>();
				}
	
				return _entPolicyCourseRepeatEdCodeMinGradIdGetByEdCodeMinGradId;
			}
			set { _entPolicyCourseRepeatEdCodeMinGradIdGetByEdCodeMinGradId = value; }
		}
		
		#endregion

		#region EdStudCourseRegAddCollectionGetByActualEdCodeGradingId
		
		private TList<EdStudCourseRegAdd> _edStudCourseRegAddFinalEdCodeGradingIdGetByActualEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegAddFinalEdCodeGradingIdGetByActualEdCodeGradingId
		/// </summary>
		
		public TList<EdStudCourseRegAdd> EdStudCourseRegAddCollectionGetByActualEdCodeGradingId
		{
			get
			{
				if (_edStudCourseRegAddFinalEdCodeGradingIdGetByActualEdCodeGradingId == null)
				{
				_edStudCourseRegAddFinalEdCodeGradingIdGetByActualEdCodeGradingId = new TList<EdStudCourseRegAdd>();
				}
	
				return _edStudCourseRegAddFinalEdCodeGradingIdGetByActualEdCodeGradingId;
			}
			set { _edStudCourseRegAddFinalEdCodeGradingIdGetByActualEdCodeGradingId = value; }
		}
		
		#endregion

		#region PgThesisStudCollection
		
		private TList<PgThesisStud> _pgThesisStudEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisStudEdCodeGradingId
		/// </summary>
		
		public TList<PgThesisStud> PgThesisStudCollection
		{
			get
			{
				if (_pgThesisStudEdCodeGradingId == null)
				{
				_pgThesisStudEdCodeGradingId = new TList<PgThesisStud>();
				}
	
				return _pgThesisStudEdCodeGradingId;
			}
			set { _pgThesisStudEdCodeGradingId = value; }
		}
		
		#endregion

		#region EntPolicyAccumHonorCollection
		
		private TList<EntPolicyAccumHonor> _entPolicyAccumHonorMinLvlGradeId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entPolicyAccumHonorMinLvlGradeId
		/// </summary>
		
		public TList<EntPolicyAccumHonor> EntPolicyAccumHonorCollection
		{
			get
			{
				if (_entPolicyAccumHonorMinLvlGradeId == null)
				{
				_entPolicyAccumHonorMinLvlGradeId = new TList<EntPolicyAccumHonor>();
				}
	
				return _entPolicyAccumHonorMinLvlGradeId;
			}
			set { _entPolicyAccumHonorMinLvlGradeId = value; }
		}
		
		#endregion

		#region EdStudSemesterExtCollectionGetByEdCodeGradingId
		
		private TList<EdStudSemesterExt> _edStudSemesterExtEdCodeAccumGradingIdGetByEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudSemesterExtEdCodeAccumGradingIdGetByEdCodeGradingId
		/// </summary>
		
		public TList<EdStudSemesterExt> EdStudSemesterExtCollectionGetByEdCodeGradingId
		{
			get
			{
				if (_edStudSemesterExtEdCodeAccumGradingIdGetByEdCodeGradingId == null)
				{
				_edStudSemesterExtEdCodeAccumGradingIdGetByEdCodeGradingId = new TList<EdStudSemesterExt>();
				}
	
				return _edStudSemesterExtEdCodeAccumGradingIdGetByEdCodeGradingId;
			}
			set { _edStudSemesterExtEdCodeAccumGradingIdGetByEdCodeGradingId = value; }
		}
		
		#endregion

		#region EdCourseExpDtlCollection
		
		private TList<EdCourseExpDtl> _edCourseExpDtlEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseExpDtlEdCodeGradingId
		/// </summary>
		
		public TList<EdCourseExpDtl> EdCourseExpDtlCollection
		{
			get
			{
				if (_edCourseExpDtlEdCodeGradingId == null)
				{
				_edCourseExpDtlEdCodeGradingId = new TList<EdCourseExpDtl>();
				}
	
				return _edCourseExpDtlEdCodeGradingId;
			}
			set { _edCourseExpDtlEdCodeGradingId = value; }
		}
		
		#endregion

		#region EntPolcyGrdngHdrCollection
		
		private TList<EntPolcyGrdngHdr> _entPolcyGrdngHdrEdCodeMaxGradId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entPolcyGrdngHdrEdCodeMaxGradId
		/// </summary>
		
		public TList<EntPolcyGrdngHdr> EntPolcyGrdngHdrCollection
		{
			get
			{
				if (_entPolcyGrdngHdrEdCodeMaxGradId == null)
				{
				_entPolcyGrdngHdrEdCodeMaxGradId = new TList<EntPolcyGrdngHdr>();
				}
	
				return _entPolcyGrdngHdrEdCodeMaxGradId;
			}
			set { _entPolcyGrdngHdrEdCodeMaxGradId = value; }
		}
		
		#endregion

		#region EdStdCrsExamCollectionGetByEdCodeGradingOldId
		
		private TList<EdStdCrsExam> _edStdCrsExamEdCodeGradingNewIdGetByEdCodeGradingOldId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStdCrsExamEdCodeGradingNewIdGetByEdCodeGradingOldId
		/// </summary>
		
		public TList<EdStdCrsExam> EdStdCrsExamCollectionGetByEdCodeGradingOldId
		{
			get
			{
				if (_edStdCrsExamEdCodeGradingNewIdGetByEdCodeGradingOldId == null)
				{
				_edStdCrsExamEdCodeGradingNewIdGetByEdCodeGradingOldId = new TList<EdStdCrsExam>();
				}
	
				return _edStdCrsExamEdCodeGradingNewIdGetByEdCodeGradingOldId;
			}
			set { _edStdCrsExamEdCodeGradingNewIdGetByEdCodeGradingOldId = value; }
		}
		
		#endregion

		#region EdStudCourseGrdChngCollectionGetByEdCodeGradingNewId
		
		private TList<EdStudCourseGrdChng> _edStudCourseGrdChngEdCodeGradingNewIdGetByEdCodeGradingNewId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseGrdChngEdCodeGradingNewIdGetByEdCodeGradingNewId
		/// </summary>
		
		public TList<EdStudCourseGrdChng> EdStudCourseGrdChngCollectionGetByEdCodeGradingNewId
		{
			get
			{
				if (_edStudCourseGrdChngEdCodeGradingNewIdGetByEdCodeGradingNewId == null)
				{
				_edStudCourseGrdChngEdCodeGradingNewIdGetByEdCodeGradingNewId = new TList<EdStudCourseGrdChng>();
				}
	
				return _edStudCourseGrdChngEdCodeGradingNewIdGetByEdCodeGradingNewId;
			}
			set { _edStudCourseGrdChngEdCodeGradingNewIdGetByEdCodeGradingNewId = value; }
		}
		
		#endregion

		#region EdStdExamSemesterCollection
		
		private TList<EdStdExamSemester> _edStdExamSemesterEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStdExamSemesterEdCodeGradingId
		/// </summary>
		
		public TList<EdStdExamSemester> EdStdExamSemesterCollection
		{
			get
			{
				if (_edStdExamSemesterEdCodeGradingId == null)
				{
				_edStdExamSemesterEdCodeGradingId = new TList<EdStdExamSemester>();
				}
	
				return _edStdExamSemesterEdCodeGradingId;
			}
			set { _edStdExamSemesterEdCodeGradingId = value; }
		}
		
		#endregion

		#region EdStdCrsExamCollectionGetByEdCodeGradingNewId
		
		private TList<EdStdCrsExam> _edStdCrsExamEdCodeGradingNewIdGetByEdCodeGradingNewId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStdCrsExamEdCodeGradingNewIdGetByEdCodeGradingNewId
		/// </summary>
		
		public TList<EdStdCrsExam> EdStdCrsExamCollectionGetByEdCodeGradingNewId
		{
			get
			{
				if (_edStdCrsExamEdCodeGradingNewIdGetByEdCodeGradingNewId == null)
				{
				_edStdCrsExamEdCodeGradingNewIdGetByEdCodeGradingNewId = new TList<EdStdCrsExam>();
				}
	
				return _edStdCrsExamEdCodeGradingNewIdGetByEdCodeGradingNewId;
			}
			set { _edStdCrsExamEdCodeGradingNewIdGetByEdCodeGradingNewId = value; }
		}
		
		#endregion

		#region EdStudCourseRegCollection
		
		private TList<EdStudCourseReg> _edStudCourseRegEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegEdCodeGradingId
		/// </summary>
		
		public TList<EdStudCourseReg> EdStudCourseRegCollection
		{
			get
			{
				if (_edStudCourseRegEdCodeGradingId == null)
				{
				_edStudCourseRegEdCodeGradingId = new TList<EdStudCourseReg>();
				}
	
				return _edStudCourseRegEdCodeGradingId;
			}
			set { _edStudCourseRegEdCodeGradingId = value; }
		}
		
		#endregion

		#region EntPolicyCourseRepeatCollectionGetByEdCodeGradingId
		
		private TList<EntPolicyCourseRepeat> _entPolicyCourseRepeatGradingMoreThanOneIdGetByEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entPolicyCourseRepeatGradingMoreThanOneIdGetByEdCodeGradingId
		/// </summary>
		
		public TList<EntPolicyCourseRepeat> EntPolicyCourseRepeatCollectionGetByEdCodeGradingId
		{
			get
			{
				if (_entPolicyCourseRepeatGradingMoreThanOneIdGetByEdCodeGradingId == null)
				{
				_entPolicyCourseRepeatGradingMoreThanOneIdGetByEdCodeGradingId = new TList<EntPolicyCourseRepeat>();
				}
	
				return _entPolicyCourseRepeatGradingMoreThanOneIdGetByEdCodeGradingId;
			}
			set { _entPolicyCourseRepeatGradingMoreThanOneIdGetByEdCodeGradingId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsCourseToCollection
		
		private TList<EdStudIntTrnsCourseTo> _edStudIntTrnsCourseToEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsCourseToEdCodeGradingId
		/// </summary>
		
		public TList<EdStudIntTrnsCourseTo> EdStudIntTrnsCourseToCollection
		{
			get
			{
				if (_edStudIntTrnsCourseToEdCodeGradingId == null)
				{
				_edStudIntTrnsCourseToEdCodeGradingId = new TList<EdStudIntTrnsCourseTo>();
				}
	
				return _edStudIntTrnsCourseToEdCodeGradingId;
			}
			set { _edStudIntTrnsCourseToEdCodeGradingId = value; }
		}
		
		#endregion

		#region EdStudFacultyCollection
		
		private TList<EdStudFaculty> _edStudFacultyEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudFacultyEdCodeGradingId
		/// </summary>
		
		public TList<EdStudFaculty> EdStudFacultyCollection
		{
			get
			{
				if (_edStudFacultyEdCodeGradingId == null)
				{
				_edStudFacultyEdCodeGradingId = new TList<EdStudFaculty>();
				}
	
				return _edStudFacultyEdCodeGradingId;
			}
			set { _edStudFacultyEdCodeGradingId = value; }
		}
		
		#endregion

		#region EntPolicyGradingDtlCollection
		
		private TList<EntPolicyGradingDtl> _entPolicyGradingDtlEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entPolicyGradingDtlEdCodeGradingId
		/// </summary>
		
		public TList<EntPolicyGradingDtl> EntPolicyGradingDtlCollection
		{
			get
			{
				if (_entPolicyGradingDtlEdCodeGradingId == null)
				{
				_entPolicyGradingDtlEdCodeGradingId = new TList<EntPolicyGradingDtl>();
				}
	
				return _entPolicyGradingDtlEdCodeGradingId;
			}
			set { _entPolicyGradingDtlEdCodeGradingId = value; }
		}
		
		#endregion

		#region PgThesisGrantStudCollection
		
		private TList<PgThesisGrantStud> _pgThesisGrantStudEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisGrantStudEdCodeGradingId
		/// </summary>
		
		public TList<PgThesisGrantStud> PgThesisGrantStudCollection
		{
			get
			{
				if (_pgThesisGrantStudEdCodeGradingId == null)
				{
				_pgThesisGrantStudEdCodeGradingId = new TList<PgThesisGrantStud>();
				}
	
				return _pgThesisGrantStudEdCodeGradingId;
			}
			set { _pgThesisGrantStudEdCodeGradingId = value; }
		}
		
		#endregion

		#region EdStudCourseGrdChngCollectionGetByEdCodeGradingOldId
		
		private TList<EdStudCourseGrdChng> _edStudCourseGrdChngEdCodeGradingNewIdGetByEdCodeGradingOldId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseGrdChngEdCodeGradingNewIdGetByEdCodeGradingOldId
		/// </summary>
		
		public TList<EdStudCourseGrdChng> EdStudCourseGrdChngCollectionGetByEdCodeGradingOldId
		{
			get
			{
				if (_edStudCourseGrdChngEdCodeGradingNewIdGetByEdCodeGradingOldId == null)
				{
				_edStudCourseGrdChngEdCodeGradingNewIdGetByEdCodeGradingOldId = new TList<EdStudCourseGrdChng>();
				}
	
				return _edStudCourseGrdChngEdCodeGradingNewIdGetByEdCodeGradingOldId;
			}
			set { _edStudCourseGrdChngEdCodeGradingNewIdGetByEdCodeGradingOldId = value; }
		}
		
		#endregion

		#region EdStudSemesterExtCollectionGetByEdCodeAccumGradingId
		
		private TList<EdStudSemesterExt> _edStudSemesterExtEdCodeAccumGradingIdGetByEdCodeAccumGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudSemesterExtEdCodeAccumGradingIdGetByEdCodeAccumGradingId
		/// </summary>
		
		public TList<EdStudSemesterExt> EdStudSemesterExtCollectionGetByEdCodeAccumGradingId
		{
			get
			{
				if (_edStudSemesterExtEdCodeAccumGradingIdGetByEdCodeAccumGradingId == null)
				{
				_edStudSemesterExtEdCodeAccumGradingIdGetByEdCodeAccumGradingId = new TList<EdStudSemesterExt>();
				}
	
				return _edStudSemesterExtEdCodeAccumGradingIdGetByEdCodeAccumGradingId;
			}
			set { _edStudSemesterExtEdCodeAccumGradingIdGetByEdCodeAccumGradingId = value; }
		}
		
		#endregion

		#region EdStudCourseRegTempCollection
		
		private TList<EdStudCourseRegTemp> _edStudCourseRegTempEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegTempEdCodeGradingId
		/// </summary>
		
		public TList<EdStudCourseRegTemp> EdStudCourseRegTempCollection
		{
			get
			{
				if (_edStudCourseRegTempEdCodeGradingId == null)
				{
				_edStudCourseRegTempEdCodeGradingId = new TList<EdStudCourseRegTemp>();
				}
	
				return _edStudCourseRegTempEdCodeGradingId;
			}
			set { _edStudCourseRegTempEdCodeGradingId = value; }
		}
		
		#endregion

		#region EntPolicyCourseRepeatCollectionGetByGradingMoreThanOneId
		
		private TList<EntPolicyCourseRepeat> _entPolicyCourseRepeatGradingMoreThanOneIdGetByGradingMoreThanOneId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entPolicyCourseRepeatGradingMoreThanOneIdGetByGradingMoreThanOneId
		/// </summary>
		
		public TList<EntPolicyCourseRepeat> EntPolicyCourseRepeatCollectionGetByGradingMoreThanOneId
		{
			get
			{
				if (_entPolicyCourseRepeatGradingMoreThanOneIdGetByGradingMoreThanOneId == null)
				{
				_entPolicyCourseRepeatGradingMoreThanOneIdGetByGradingMoreThanOneId = new TList<EntPolicyCourseRepeat>();
				}
	
				return _entPolicyCourseRepeatGradingMoreThanOneIdGetByGradingMoreThanOneId;
			}
			set { _entPolicyCourseRepeatGradingMoreThanOneIdGetByGradingMoreThanOneId = value; }
		}
		
		#endregion

		#region EntCourseMdDataCollection
		
		private TList<EntCourseMdData> _entCourseMdDataEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entCourseMdDataEdCodeGradingId
		/// </summary>
		
		public TList<EntCourseMdData> EntCourseMdDataCollection
		{
			get
			{
				if (_entCourseMdDataEdCodeGradingId == null)
				{
				_entCourseMdDataEdCodeGradingId = new TList<EntCourseMdData>();
				}
	
				return _entCourseMdDataEdCodeGradingId;
			}
			set { _entCourseMdDataEdCodeGradingId = value; }
		}
		
		#endregion

		#region EdStudCourseRegAddCollectionGetByFinalEdCodeGradingId
		
		private TList<EdStudCourseRegAdd> _edStudCourseRegAddFinalEdCodeGradingIdGetByFinalEdCodeGradingId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegAddFinalEdCodeGradingIdGetByFinalEdCodeGradingId
		/// </summary>
		
		public TList<EdStudCourseRegAdd> EdStudCourseRegAddCollectionGetByFinalEdCodeGradingId
		{
			get
			{
				if (_edStudCourseRegAddFinalEdCodeGradingIdGetByFinalEdCodeGradingId == null)
				{
				_edStudCourseRegAddFinalEdCodeGradingIdGetByFinalEdCodeGradingId = new TList<EdStudCourseRegAdd>();
				}
	
				return _edStudCourseRegAddFinalEdCodeGradingIdGetByFinalEdCodeGradingId;
			}
			set { _edStudCourseRegAddFinalEdCodeGradingIdGetByFinalEdCodeGradingId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			EdCodeGradingEntityData _tmp = new EdCodeGradingEntityData();
						
			_tmp.EdCodeGradingId = this.EdCodeGradingId;
			_tmp.OriginalEdCodeGradingId = this.OriginalEdCodeGradingId;
			
			_tmp.DescrAr = this.DescrAr;
			_tmp.DescrEn = this.DescrEn;
			_tmp.SymbolAr = this.SymbolAr;
			_tmp.SymbolEn = this.SymbolEn;
			_tmp.GradOrder = this.GradOrder;
			_tmp.GradCode = this.GradCode;
			_tmp.ShowFlg = this.ShowFlg;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._edStudIntTrnsCourseFromEdCodeGradingId != null)
				_tmp.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection); 
			if (this._admAppTransToCourseEdCodeGradingId != null)
				_tmp.AdmAppTransToCourseCollection = (TList<AdmAppTransToCourse>) MakeCopyOf(this.AdmAppTransToCourseCollection); 
			if (this._entPolicyCourseRepeatEdCodeMinGradIdGetByEdCodeMinGradId != null)
				_tmp.EntPolicyCourseRepeatCollectionGetByEdCodeMinGradId = (TList<EntPolicyCourseRepeat>) MakeCopyOf(this.EntPolicyCourseRepeatCollectionGetByEdCodeMinGradId); 
			if (this._edStudCourseRegAddFinalEdCodeGradingIdGetByActualEdCodeGradingId != null)
				_tmp.EdStudCourseRegAddCollectionGetByActualEdCodeGradingId = (TList<EdStudCourseRegAdd>) MakeCopyOf(this.EdStudCourseRegAddCollectionGetByActualEdCodeGradingId); 
			if (this._pgThesisStudEdCodeGradingId != null)
				_tmp.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection); 
			if (this._entPolicyAccumHonorMinLvlGradeId != null)
				_tmp.EntPolicyAccumHonorCollection = (TList<EntPolicyAccumHonor>) MakeCopyOf(this.EntPolicyAccumHonorCollection); 
			if (this._edStudSemesterExtEdCodeAccumGradingIdGetByEdCodeGradingId != null)
				_tmp.EdStudSemesterExtCollectionGetByEdCodeGradingId = (TList<EdStudSemesterExt>) MakeCopyOf(this.EdStudSemesterExtCollectionGetByEdCodeGradingId); 
			if (this._edCourseExpDtlEdCodeGradingId != null)
				_tmp.EdCourseExpDtlCollection = (TList<EdCourseExpDtl>) MakeCopyOf(this.EdCourseExpDtlCollection); 
			if (this._entPolcyGrdngHdrEdCodeMaxGradId != null)
				_tmp.EntPolcyGrdngHdrCollection = (TList<EntPolcyGrdngHdr>) MakeCopyOf(this.EntPolcyGrdngHdrCollection); 
			if (this._edStdCrsExamEdCodeGradingNewIdGetByEdCodeGradingOldId != null)
				_tmp.EdStdCrsExamCollectionGetByEdCodeGradingOldId = (TList<EdStdCrsExam>) MakeCopyOf(this.EdStdCrsExamCollectionGetByEdCodeGradingOldId); 
			if (this._edStudCourseGrdChngEdCodeGradingNewIdGetByEdCodeGradingNewId != null)
				_tmp.EdStudCourseGrdChngCollectionGetByEdCodeGradingNewId = (TList<EdStudCourseGrdChng>) MakeCopyOf(this.EdStudCourseGrdChngCollectionGetByEdCodeGradingNewId); 
			if (this._edStdExamSemesterEdCodeGradingId != null)
				_tmp.EdStdExamSemesterCollection = (TList<EdStdExamSemester>) MakeCopyOf(this.EdStdExamSemesterCollection); 
			if (this._edStdCrsExamEdCodeGradingNewIdGetByEdCodeGradingNewId != null)
				_tmp.EdStdCrsExamCollectionGetByEdCodeGradingNewId = (TList<EdStdCrsExam>) MakeCopyOf(this.EdStdCrsExamCollectionGetByEdCodeGradingNewId); 
			if (this._edStudCourseRegEdCodeGradingId != null)
				_tmp.EdStudCourseRegCollection = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollection); 
			if (this._entPolicyCourseRepeatGradingMoreThanOneIdGetByEdCodeGradingId != null)
				_tmp.EntPolicyCourseRepeatCollectionGetByEdCodeGradingId = (TList<EntPolicyCourseRepeat>) MakeCopyOf(this.EntPolicyCourseRepeatCollectionGetByEdCodeGradingId); 
			if (this._edStudIntTrnsCourseToEdCodeGradingId != null)
				_tmp.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection); 
			if (this._edStudFacultyEdCodeGradingId != null)
				_tmp.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection); 
			if (this._entPolicyGradingDtlEdCodeGradingId != null)
				_tmp.EntPolicyGradingDtlCollection = (TList<EntPolicyGradingDtl>) MakeCopyOf(this.EntPolicyGradingDtlCollection); 
			if (this._pgThesisGrantStudEdCodeGradingId != null)
				_tmp.PgThesisGrantStudCollection = (TList<PgThesisGrantStud>) MakeCopyOf(this.PgThesisGrantStudCollection); 
			if (this._edStudCourseGrdChngEdCodeGradingNewIdGetByEdCodeGradingOldId != null)
				_tmp.EdStudCourseGrdChngCollectionGetByEdCodeGradingOldId = (TList<EdStudCourseGrdChng>) MakeCopyOf(this.EdStudCourseGrdChngCollectionGetByEdCodeGradingOldId); 
			if (this._edStudSemesterExtEdCodeAccumGradingIdGetByEdCodeAccumGradingId != null)
				_tmp.EdStudSemesterExtCollectionGetByEdCodeAccumGradingId = (TList<EdStudSemesterExt>) MakeCopyOf(this.EdStudSemesterExtCollectionGetByEdCodeAccumGradingId); 
			if (this._edStudCourseRegTempEdCodeGradingId != null)
				_tmp.EdStudCourseRegTempCollection = (TList<EdStudCourseRegTemp>) MakeCopyOf(this.EdStudCourseRegTempCollection); 
			if (this._entPolicyCourseRepeatGradingMoreThanOneIdGetByGradingMoreThanOneId != null)
				_tmp.EntPolicyCourseRepeatCollectionGetByGradingMoreThanOneId = (TList<EntPolicyCourseRepeat>) MakeCopyOf(this.EntPolicyCourseRepeatCollectionGetByGradingMoreThanOneId); 
			if (this._entCourseMdDataEdCodeGradingId != null)
				_tmp.EntCourseMdDataCollection = (TList<EntCourseMdData>) MakeCopyOf(this.EntCourseMdDataCollection); 
			if (this._edStudCourseRegAddFinalEdCodeGradingIdGetByFinalEdCodeGradingId != null)
				_tmp.EdStudCourseRegAddCollectionGetByFinalEdCodeGradingId = (TList<EdStudCourseRegAdd>) MakeCopyOf(this.EdStudCourseRegAddCollectionGetByFinalEdCodeGradingId); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			EdCodeGradingEntityData _tmp = new EdCodeGradingEntityData();
						
			_tmp.EdCodeGradingId = this.EdCodeGradingId;
			_tmp.OriginalEdCodeGradingId = this.OriginalEdCodeGradingId;
			
			_tmp.DescrAr = this.DescrAr;
			_tmp.DescrEn = this.DescrEn;
			_tmp.SymbolAr = this.SymbolAr;
			_tmp.SymbolEn = this.SymbolEn;
			_tmp.GradOrder = this.GradOrder;
			_tmp.GradCode = this.GradCode;
			_tmp.ShowFlg = this.ShowFlg;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection, existingCopies); 
			_tmp.AdmAppTransToCourseCollection = (TList<AdmAppTransToCourse>) MakeCopyOf(this.AdmAppTransToCourseCollection, existingCopies); 
			_tmp.EntPolicyCourseRepeatCollectionGetByEdCodeMinGradId = (TList<EntPolicyCourseRepeat>) MakeCopyOf(this.EntPolicyCourseRepeatCollectionGetByEdCodeMinGradId, existingCopies); 
			_tmp.EdStudCourseRegAddCollectionGetByActualEdCodeGradingId = (TList<EdStudCourseRegAdd>) MakeCopyOf(this.EdStudCourseRegAddCollectionGetByActualEdCodeGradingId, existingCopies); 
			_tmp.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection, existingCopies); 
			_tmp.EntPolicyAccumHonorCollection = (TList<EntPolicyAccumHonor>) MakeCopyOf(this.EntPolicyAccumHonorCollection, existingCopies); 
			_tmp.EdStudSemesterExtCollectionGetByEdCodeGradingId = (TList<EdStudSemesterExt>) MakeCopyOf(this.EdStudSemesterExtCollectionGetByEdCodeGradingId, existingCopies); 
			_tmp.EdCourseExpDtlCollection = (TList<EdCourseExpDtl>) MakeCopyOf(this.EdCourseExpDtlCollection, existingCopies); 
			_tmp.EntPolcyGrdngHdrCollection = (TList<EntPolcyGrdngHdr>) MakeCopyOf(this.EntPolcyGrdngHdrCollection, existingCopies); 
			_tmp.EdStdCrsExamCollectionGetByEdCodeGradingOldId = (TList<EdStdCrsExam>) MakeCopyOf(this.EdStdCrsExamCollectionGetByEdCodeGradingOldId, existingCopies); 
			_tmp.EdStudCourseGrdChngCollectionGetByEdCodeGradingNewId = (TList<EdStudCourseGrdChng>) MakeCopyOf(this.EdStudCourseGrdChngCollectionGetByEdCodeGradingNewId, existingCopies); 
			_tmp.EdStdExamSemesterCollection = (TList<EdStdExamSemester>) MakeCopyOf(this.EdStdExamSemesterCollection, existingCopies); 
			_tmp.EdStdCrsExamCollectionGetByEdCodeGradingNewId = (TList<EdStdCrsExam>) MakeCopyOf(this.EdStdCrsExamCollectionGetByEdCodeGradingNewId, existingCopies); 
			_tmp.EdStudCourseRegCollection = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollection, existingCopies); 
			_tmp.EntPolicyCourseRepeatCollectionGetByEdCodeGradingId = (TList<EntPolicyCourseRepeat>) MakeCopyOf(this.EntPolicyCourseRepeatCollectionGetByEdCodeGradingId, existingCopies); 
			_tmp.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection, existingCopies); 
			_tmp.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection, existingCopies); 
			_tmp.EntPolicyGradingDtlCollection = (TList<EntPolicyGradingDtl>) MakeCopyOf(this.EntPolicyGradingDtlCollection, existingCopies); 
			_tmp.PgThesisGrantStudCollection = (TList<PgThesisGrantStud>) MakeCopyOf(this.PgThesisGrantStudCollection, existingCopies); 
			_tmp.EdStudCourseGrdChngCollectionGetByEdCodeGradingOldId = (TList<EdStudCourseGrdChng>) MakeCopyOf(this.EdStudCourseGrdChngCollectionGetByEdCodeGradingOldId, existingCopies); 
			_tmp.EdStudSemesterExtCollectionGetByEdCodeAccumGradingId = (TList<EdStudSemesterExt>) MakeCopyOf(this.EdStudSemesterExtCollectionGetByEdCodeAccumGradingId, existingCopies); 
			_tmp.EdStudCourseRegTempCollection = (TList<EdStudCourseRegTemp>) MakeCopyOf(this.EdStudCourseRegTempCollection, existingCopies); 
			_tmp.EntPolicyCourseRepeatCollectionGetByGradingMoreThanOneId = (TList<EntPolicyCourseRepeat>) MakeCopyOf(this.EntPolicyCourseRepeatCollectionGetByGradingMoreThanOneId, existingCopies); 
			_tmp.EntCourseMdDataCollection = (TList<EntCourseMdData>) MakeCopyOf(this.EntCourseMdDataCollection, existingCopies); 
			_tmp.EdStudCourseRegAddCollectionGetByFinalEdCodeGradingId = (TList<EdStudCourseRegAdd>) MakeCopyOf(this.EdStudCourseRegAddCollectionGetByFinalEdCodeGradingId, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdCodeGradingColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(EdCodeGradingColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdCodeGradingColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(EdCodeGradingColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdCodeGradingColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(EdCodeGradingColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				EdCodeGradingEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new EdCodeGradingEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdCodeGradingColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(EdCodeGradingColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				EdCodeGradingEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new EdCodeGradingEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region EdCodeGradingEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="EdCodeGrading"/> object.
	/// </remarks>
	public class EdCodeGradingEventArgs : System.EventArgs
	{
		private EdCodeGradingColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the EdCodeGradingEventArgs class.
		///</summary>
		public EdCodeGradingEventArgs(EdCodeGradingColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the EdCodeGradingEventArgs class.
		///</summary>
		public EdCodeGradingEventArgs(EdCodeGradingColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The EdCodeGradingColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="EdCodeGradingColumn" />
		public EdCodeGradingColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all EdCodeGrading related events.
	///</summary>
	public delegate void EdCodeGradingEventHandler(object sender, EdCodeGradingEventArgs e);
	
	#region EdCodeGradingComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class EdCodeGradingComparer : System.Collections.Generic.IComparer<EdCodeGrading>
	{
		EdCodeGradingColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:EdCodeGradingComparer"/> class.
        /// </summary>
		public EdCodeGradingComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:EdCodeGradingComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public EdCodeGradingComparer(EdCodeGradingColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="EdCodeGrading"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="EdCodeGrading"/> to compare.</param>
        /// <param name="b">The second <c>EdCodeGrading</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(EdCodeGrading a, EdCodeGrading b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(EdCodeGrading entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(EdCodeGrading a, EdCodeGrading b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public EdCodeGradingColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region EdCodeGradingKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="EdCodeGrading"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class EdCodeGradingKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the EdCodeGradingKey class.
		/// </summary>
		public EdCodeGradingKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the EdCodeGradingKey class.
		/// </summary>
		public EdCodeGradingKey(EdCodeGradingBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.EdCodeGradingId = entity.EdCodeGradingId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the EdCodeGradingKey class.
		/// </summary>
		public EdCodeGradingKey(System.Decimal _edCodeGradingId)
		{
			#region Init Properties

			this.EdCodeGradingId = _edCodeGradingId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private EdCodeGradingBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public EdCodeGradingBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the EdCodeGradingId property
		private System.Decimal _edCodeGradingId;
		
		/// <summary>
		/// Gets or sets the EdCodeGradingId property.
		/// </summary>
		public System.Decimal EdCodeGradingId
		{
			get { return _edCodeGradingId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.EdCodeGradingId = value;
				
				_edCodeGradingId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				EdCodeGradingId = ( values["EdCodeGradingId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["EdCodeGradingId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("EdCodeGradingId", EdCodeGradingId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("EdCodeGradingId: {0}{1}",
								EdCodeGradingId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region EdCodeGradingColumn Enum
	
	/// <summary>
	/// Enumerate the EdCodeGrading columns.
	/// </summary>
	[Serializable]
	public enum EdCodeGradingColumn : int
	{
		/// <summary>
		/// EdCodeGradingId : 
		/// </summary>
		[EnumTextValue("ED_CODE_GRADING_ID")]
		[ColumnEnum("ED_CODE_GRADING_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		EdCodeGradingId = 1,
		/// <summary>
		/// DescrAr : 
		/// </summary>
		[EnumTextValue("DESCR_AR")]
		[ColumnEnum("DESCR_AR", typeof(System.String), System.Data.DbType.String, false, false, false, 50)]
		DescrAr = 2,
		/// <summary>
		/// DescrEn : 
		/// </summary>
		[EnumTextValue("DESCR_EN")]
		[ColumnEnum("DESCR_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		DescrEn = 3,
		/// <summary>
		/// SymbolAr : 
		/// </summary>
		[EnumTextValue("SYMBOL_AR")]
		[ColumnEnum("SYMBOL_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 20)]
		SymbolAr = 4,
		/// <summary>
		/// SymbolEn : 
		/// </summary>
		[EnumTextValue("SYMBOL_EN")]
		[ColumnEnum("SYMBOL_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 20)]
		SymbolEn = 5,
		/// <summary>
		/// GradOrder : 
		/// </summary>
		[EnumTextValue("GRAD_ORDER")]
		[ColumnEnum("GRAD_ORDER", typeof(System.String), System.Data.DbType.String, false, false, true, 3)]
		GradOrder = 6,
		/// <summary>
		/// GradCode : 
		/// </summary>
		[EnumTextValue("GRAD_CODE")]
		[ColumnEnum("GRAD_CODE", typeof(System.String), System.Data.DbType.String, false, false, true, 20)]
		GradCode = 7,
		/// <summary>
		/// ShowFlg : 
		/// </summary>
		[EnumTextValue("SHOW_FLG")]
		[ColumnEnum("SHOW_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ShowFlg = 8
	}//End enum

	#endregion EdCodeGradingColumn Enum

} // end namespace
