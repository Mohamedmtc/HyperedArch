
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file GsAttchdDoc.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'GS_ATTCHD_DOC' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class GsAttchdDocBase : EntityBase, IGsAttchdDoc, IEntityId<GsAttchdDocKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private GsAttchdDocEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private GsAttchdDocEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private GsAttchdDocEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<GsAttchdDoc> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event GsAttchdDocEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event GsAttchdDocEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="GsAttchdDocBase"/> instance.
		///</summary>
		public GsAttchdDocBase()
		{
			this.entityData = new GsAttchdDocEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="GsAttchdDocBase"/> instance.
		///</summary>
		///<param name="_gsAttchdDocId"></param>
		///<param name="_edStudEnrollChangeId">مسلسل تغيير حالة قيد طالب</param>
		///<param name="_edStudCheatId"></param>
		///<param name="_admAppPlacementExamId">XX</param>
		///<param name="_admAppHonorId">XX</param>
		///<param name="_admAppInfoId"></param>
		///<param name="_svMessageId"></param>
		///<param name="_edStudCourseRegId"></param>
		///<param name="_feeStudDiscId"></param>
		///<param name="_edExamStudAbsenceId"></param>
		///<param name="_edStudCourseChngId"></param>
		///<param name="_edStudCourseGrdChngId"></param>
		///<param name="_edStudClrncReqId"></param>
		///<param name="_edStudViolId">المخالفة</param>
		///<param name="_edStudViolInvestId">مجلس التأديب</param>
		///<param name="_edStudViolAppealId">التظلم</param>
		///<param name="_attchdDocPath">XXXالمرفق مسار المستند</param>
		///<param name="_docNotes"></param>
		///<param name="_seUserId"></param>
		///<param name="_lastDate"></param>
		///<param name="_orgDocAttached">تم تسليم أصل الوثيقه </param>
		///<param name="_pgThesisStudId"></param>
		///<param name="_edGraduationAwardId"></param>
		public GsAttchdDocBase(System.Decimal _gsAttchdDocId, System.Decimal? _edStudEnrollChangeId, 
			System.Decimal? _edStudCheatId, System.Decimal? _admAppPlacementExamId, System.Decimal? _admAppHonorId, 
			System.Decimal? _admAppInfoId, System.Decimal? _svMessageId, System.Decimal? _edStudCourseRegId, 
			System.Decimal? _feeStudDiscId, System.Decimal? _edExamStudAbsenceId, System.Decimal? _edStudCourseChngId, 
			System.Decimal? _edStudCourseGrdChngId, System.Decimal? _edStudClrncReqId, System.Decimal? _edStudViolId, 
			System.Decimal? _edStudViolInvestId, System.Decimal? _edStudViolAppealId, System.String _attchdDocPath, 
			System.String _docNotes, System.Decimal? _seUserId, System.DateTime? _lastDate, System.Boolean? _orgDocAttached, 
			System.Decimal? _pgThesisStudId, System.Decimal? _edGraduationAwardId)
		{
			this.entityData = new GsAttchdDocEntityData();
			this.backupData = null;

			this.GsAttchdDocId = _gsAttchdDocId;
			this.EdStudEnrollChangeId = _edStudEnrollChangeId;
			this.EdStudCheatId = _edStudCheatId;
			this.AdmAppPlacementExamId = _admAppPlacementExamId;
			this.AdmAppHonorId = _admAppHonorId;
			this.AdmAppInfoId = _admAppInfoId;
			this.SvMessageId = _svMessageId;
			this.EdStudCourseRegId = _edStudCourseRegId;
			this.FeeStudDiscId = _feeStudDiscId;
			this.EdExamStudAbsenceId = _edExamStudAbsenceId;
			this.EdStudCourseChngId = _edStudCourseChngId;
			this.EdStudCourseGrdChngId = _edStudCourseGrdChngId;
			this.EdStudClrncReqId = _edStudClrncReqId;
			this.EdStudViolId = _edStudViolId;
			this.EdStudViolInvestId = _edStudViolInvestId;
			this.EdStudViolAppealId = _edStudViolAppealId;
			this.AttchdDocPath = _attchdDocPath;
			this.DocNotes = _docNotes;
			this.SeUserId = _seUserId;
			this.LastDate = _lastDate;
			this.OrgDocAttached = _orgDocAttached;
			this.PgThesisStudId = _pgThesisStudId;
			this.EdGraduationAwardId = _edGraduationAwardId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="GsAttchdDoc"/> instance.
		///</summary>
		///<param name="_gsAttchdDocId"></param>
		///<param name="_edStudEnrollChangeId">مسلسل تغيير حالة قيد طالب</param>
		///<param name="_edStudCheatId"></param>
		///<param name="_admAppPlacementExamId">XX</param>
		///<param name="_admAppHonorId">XX</param>
		///<param name="_admAppInfoId"></param>
		///<param name="_svMessageId"></param>
		///<param name="_edStudCourseRegId"></param>
		///<param name="_feeStudDiscId"></param>
		///<param name="_edExamStudAbsenceId"></param>
		///<param name="_edStudCourseChngId"></param>
		///<param name="_edStudCourseGrdChngId"></param>
		///<param name="_edStudClrncReqId"></param>
		///<param name="_edStudViolId">المخالفة</param>
		///<param name="_edStudViolInvestId">مجلس التأديب</param>
		///<param name="_edStudViolAppealId">التظلم</param>
		///<param name="_attchdDocPath">XXXالمرفق مسار المستند</param>
		///<param name="_docNotes"></param>
		///<param name="_seUserId"></param>
		///<param name="_lastDate"></param>
		///<param name="_orgDocAttached">تم تسليم أصل الوثيقه </param>
		///<param name="_pgThesisStudId"></param>
		///<param name="_edGraduationAwardId"></param>
		public static GsAttchdDoc CreateGsAttchdDoc(System.Decimal _gsAttchdDocId, System.Decimal? _edStudEnrollChangeId, 
			System.Decimal? _edStudCheatId, System.Decimal? _admAppPlacementExamId, System.Decimal? _admAppHonorId, 
			System.Decimal? _admAppInfoId, System.Decimal? _svMessageId, System.Decimal? _edStudCourseRegId, 
			System.Decimal? _feeStudDiscId, System.Decimal? _edExamStudAbsenceId, System.Decimal? _edStudCourseChngId, 
			System.Decimal? _edStudCourseGrdChngId, System.Decimal? _edStudClrncReqId, System.Decimal? _edStudViolId, 
			System.Decimal? _edStudViolInvestId, System.Decimal? _edStudViolAppealId, System.String _attchdDocPath, 
			System.String _docNotes, System.Decimal? _seUserId, System.DateTime? _lastDate, System.Boolean? _orgDocAttached, 
			System.Decimal? _pgThesisStudId, System.Decimal? _edGraduationAwardId)
		{
			GsAttchdDoc newGsAttchdDoc = new GsAttchdDoc();
			newGsAttchdDoc.GsAttchdDocId = _gsAttchdDocId;
			newGsAttchdDoc.EdStudEnrollChangeId = _edStudEnrollChangeId;
			newGsAttchdDoc.EdStudCheatId = _edStudCheatId;
			newGsAttchdDoc.AdmAppPlacementExamId = _admAppPlacementExamId;
			newGsAttchdDoc.AdmAppHonorId = _admAppHonorId;
			newGsAttchdDoc.AdmAppInfoId = _admAppInfoId;
			newGsAttchdDoc.SvMessageId = _svMessageId;
			newGsAttchdDoc.EdStudCourseRegId = _edStudCourseRegId;
			newGsAttchdDoc.FeeStudDiscId = _feeStudDiscId;
			newGsAttchdDoc.EdExamStudAbsenceId = _edExamStudAbsenceId;
			newGsAttchdDoc.EdStudCourseChngId = _edStudCourseChngId;
			newGsAttchdDoc.EdStudCourseGrdChngId = _edStudCourseGrdChngId;
			newGsAttchdDoc.EdStudClrncReqId = _edStudClrncReqId;
			newGsAttchdDoc.EdStudViolId = _edStudViolId;
			newGsAttchdDoc.EdStudViolInvestId = _edStudViolInvestId;
			newGsAttchdDoc.EdStudViolAppealId = _edStudViolAppealId;
			newGsAttchdDoc.AttchdDocPath = _attchdDocPath;
			newGsAttchdDoc.DocNotes = _docNotes;
			newGsAttchdDoc.SeUserId = _seUserId;
			newGsAttchdDoc.LastDate = _lastDate;
			newGsAttchdDoc.OrgDocAttached = _orgDocAttached;
			newGsAttchdDoc.PgThesisStudId = _pgThesisStudId;
			newGsAttchdDoc.EdGraduationAwardId = _edGraduationAwardId;
			return newGsAttchdDoc;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the GsAttchdDocId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal GsAttchdDocId
		{
			get
			{
				return this.entityData.GsAttchdDocId; 
			}
			
			set
			{
				if (this.entityData.GsAttchdDocId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.GsAttchdDocId, this.entityData.GsAttchdDocId);
				this.entityData.GsAttchdDocId = value;
				this.EntityId.GsAttchdDocId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.GsAttchdDocId, this.entityData.GsAttchdDocId);
				OnPropertyChanged("GsAttchdDocId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the GS_ATTCHD_DOC_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the GS_ATTCHD_DOC_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalGsAttchdDocId
		{
			get { return this.entityData.OriginalGsAttchdDocId; }
			set { this.entityData.OriginalGsAttchdDocId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudEnrollChangeId property. 
		///		مسلسل تغيير حالة قيد طالب
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudEnrollChangeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"مسلسل تغيير حالة قيد طالب"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudEnrollChangeId
		{
			get
			{
				return this.entityData.EdStudEnrollChangeId; 
			}
			
			set
			{
				if (this.entityData.EdStudEnrollChangeId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.EdStudEnrollChangeId, this.entityData.EdStudEnrollChangeId);
				this.entityData.EdStudEnrollChangeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.EdStudEnrollChangeId, this.entityData.EdStudEnrollChangeId);
				OnPropertyChanged("EdStudEnrollChangeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudCheatId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudCheatIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudCheatId
		{
			get
			{
				return this.entityData.EdStudCheatId; 
			}
			
			set
			{
				if (this.entityData.EdStudCheatId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.EdStudCheatId, this.entityData.EdStudCheatId);
				this.entityData.EdStudCheatId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.EdStudCheatId, this.entityData.EdStudCheatId);
				OnPropertyChanged("EdStudCheatId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmAppPlacementExamId property. 
		///		XX
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmAppPlacementExamIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XX"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmAppPlacementExamId
		{
			get
			{
				return this.entityData.AdmAppPlacementExamId; 
			}
			
			set
			{
				if (this.entityData.AdmAppPlacementExamId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.AdmAppPlacementExamId, this.entityData.AdmAppPlacementExamId);
				this.entityData.AdmAppPlacementExamId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.AdmAppPlacementExamId, this.entityData.AdmAppPlacementExamId);
				OnPropertyChanged("AdmAppPlacementExamId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmAppHonorId property. 
		///		XX
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmAppHonorIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XX"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmAppHonorId
		{
			get
			{
				return this.entityData.AdmAppHonorId; 
			}
			
			set
			{
				if (this.entityData.AdmAppHonorId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.AdmAppHonorId, this.entityData.AdmAppHonorId);
				this.entityData.AdmAppHonorId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.AdmAppHonorId, this.entityData.AdmAppHonorId);
				OnPropertyChanged("AdmAppHonorId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmAppInfoId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmAppInfoIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmAppInfoId
		{
			get
			{
				return this.entityData.AdmAppInfoId; 
			}
			
			set
			{
				if (this.entityData.AdmAppInfoId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.AdmAppInfoId, this.entityData.AdmAppInfoId);
				this.entityData.AdmAppInfoId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.AdmAppInfoId, this.entityData.AdmAppInfoId);
				OnPropertyChanged("AdmAppInfoId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SvMessageId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSvMessageIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SvMessageId
		{
			get
			{
				return this.entityData.SvMessageId; 
			}
			
			set
			{
				if (this.entityData.SvMessageId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.SvMessageId, this.entityData.SvMessageId);
				this.entityData.SvMessageId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.SvMessageId, this.entityData.SvMessageId);
				OnPropertyChanged("SvMessageId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudCourseRegId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudCourseRegIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudCourseRegId
		{
			get
			{
				return this.entityData.EdStudCourseRegId; 
			}
			
			set
			{
				if (this.entityData.EdStudCourseRegId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.EdStudCourseRegId, this.entityData.EdStudCourseRegId);
				this.entityData.EdStudCourseRegId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.EdStudCourseRegId, this.entityData.EdStudCourseRegId);
				OnPropertyChanged("EdStudCourseRegId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeStudDiscId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFeeStudDiscIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FeeStudDiscId
		{
			get
			{
				return this.entityData.FeeStudDiscId; 
			}
			
			set
			{
				if (this.entityData.FeeStudDiscId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.FeeStudDiscId, this.entityData.FeeStudDiscId);
				this.entityData.FeeStudDiscId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.FeeStudDiscId, this.entityData.FeeStudDiscId);
				OnPropertyChanged("FeeStudDiscId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdExamStudAbsenceId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdExamStudAbsenceIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdExamStudAbsenceId
		{
			get
			{
				return this.entityData.EdExamStudAbsenceId; 
			}
			
			set
			{
				if (this.entityData.EdExamStudAbsenceId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.EdExamStudAbsenceId, this.entityData.EdExamStudAbsenceId);
				this.entityData.EdExamStudAbsenceId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.EdExamStudAbsenceId, this.entityData.EdExamStudAbsenceId);
				OnPropertyChanged("EdExamStudAbsenceId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudCourseChngId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudCourseChngIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudCourseChngId
		{
			get
			{
				return this.entityData.EdStudCourseChngId; 
			}
			
			set
			{
				if (this.entityData.EdStudCourseChngId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.EdStudCourseChngId, this.entityData.EdStudCourseChngId);
				this.entityData.EdStudCourseChngId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.EdStudCourseChngId, this.entityData.EdStudCourseChngId);
				OnPropertyChanged("EdStudCourseChngId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudCourseGrdChngId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudCourseGrdChngIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudCourseGrdChngId
		{
			get
			{
				return this.entityData.EdStudCourseGrdChngId; 
			}
			
			set
			{
				if (this.entityData.EdStudCourseGrdChngId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.EdStudCourseGrdChngId, this.entityData.EdStudCourseGrdChngId);
				this.entityData.EdStudCourseGrdChngId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.EdStudCourseGrdChngId, this.entityData.EdStudCourseGrdChngId);
				OnPropertyChanged("EdStudCourseGrdChngId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudClrncReqId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudClrncReqIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudClrncReqId
		{
			get
			{
				return this.entityData.EdStudClrncReqId; 
			}
			
			set
			{
				if (this.entityData.EdStudClrncReqId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.EdStudClrncReqId, this.entityData.EdStudClrncReqId);
				this.entityData.EdStudClrncReqId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.EdStudClrncReqId, this.entityData.EdStudClrncReqId);
				OnPropertyChanged("EdStudClrncReqId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudViolId property. 
		///		المخالفة
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudViolIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"المخالفة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudViolId
		{
			get
			{
				return this.entityData.EdStudViolId; 
			}
			
			set
			{
				if (this.entityData.EdStudViolId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.EdStudViolId, this.entityData.EdStudViolId);
				this.entityData.EdStudViolId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.EdStudViolId, this.entityData.EdStudViolId);
				OnPropertyChanged("EdStudViolId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudViolInvestId property. 
		///		مجلس التأديب
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudViolInvestIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"مجلس التأديب"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudViolInvestId
		{
			get
			{
				return this.entityData.EdStudViolInvestId; 
			}
			
			set
			{
				if (this.entityData.EdStudViolInvestId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.EdStudViolInvestId, this.entityData.EdStudViolInvestId);
				this.entityData.EdStudViolInvestId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.EdStudViolInvestId, this.entityData.EdStudViolInvestId);
				OnPropertyChanged("EdStudViolInvestId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudViolAppealId property. 
		///		التظلم
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudViolAppealIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"التظلم"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudViolAppealId
		{
			get
			{
				return this.entityData.EdStudViolAppealId; 
			}
			
			set
			{
				if (this.entityData.EdStudViolAppealId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.EdStudViolAppealId, this.entityData.EdStudViolAppealId);
				this.entityData.EdStudViolAppealId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.EdStudViolAppealId, this.entityData.EdStudViolAppealId);
				OnPropertyChanged("EdStudViolAppealId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AttchdDocPath property. 
		///		XXXالمرفق مسار المستند
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@"XXXالمرفق مسار المستند"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.String AttchdDocPath
		{
			get
			{
				return this.entityData.AttchdDocPath; 
			}
			
			set
			{
				if (this.entityData.AttchdDocPath == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.AttchdDocPath, this.entityData.AttchdDocPath);
				this.entityData.AttchdDocPath = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.AttchdDocPath, this.entityData.AttchdDocPath);
				OnPropertyChanged("AttchdDocPath");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DocNotes property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String DocNotes
		{
			get
			{
				return this.entityData.DocNotes; 
			}
			
			set
			{
				if (this.entityData.DocNotes == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.DocNotes, this.entityData.DocNotes);
				this.entityData.DocNotes = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.DocNotes, this.entityData.DocNotes);
				OnPropertyChanged("DocNotes");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OrgDocAttached property. 
		///		تم تسليم أصل الوثيقه 
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsOrgDocAttachedNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"تم تسليم أصل الوثيقه "), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? OrgDocAttached
		{
			get
			{
				return this.entityData.OrgDocAttached; 
			}
			
			set
			{
				if (this.entityData.OrgDocAttached == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.OrgDocAttached, this.entityData.OrgDocAttached);
				this.entityData.OrgDocAttached = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.OrgDocAttached, this.entityData.OrgDocAttached);
				OnPropertyChanged("OrgDocAttached");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PgThesisStudId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPgThesisStudIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? PgThesisStudId
		{
			get
			{
				return this.entityData.PgThesisStudId; 
			}
			
			set
			{
				if (this.entityData.PgThesisStudId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.PgThesisStudId, this.entityData.PgThesisStudId);
				this.entityData.PgThesisStudId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.PgThesisStudId, this.entityData.PgThesisStudId);
				OnPropertyChanged("PgThesisStudId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdGraduationAwardId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdGraduationAwardIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdGraduationAwardId
		{
			get
			{
				return this.entityData.EdGraduationAwardId; 
			}
			
			set
			{
				if (this.entityData.EdGraduationAwardId == value)
					return;
					
				OnColumnChanging(GsAttchdDocColumn.EdGraduationAwardId, this.entityData.EdGraduationAwardId);
				this.entityData.EdGraduationAwardId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(GsAttchdDocColumn.EdGraduationAwardId, this.entityData.EdGraduationAwardId);
				OnPropertyChanged("EdGraduationAwardId");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="AdmAppHonor"/>.
		/// </summary>
		/// <value>The source AdmAppHonor for AdmAppHonorId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmAppHonor AdmAppHonorIdSource
      	{
            get { return entityData.AdmAppHonorIdSource; }
            set { entityData.AdmAppHonorIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmAppInfo"/>.
		/// </summary>
		/// <value>The source AdmAppInfo for AdmAppInfoId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmAppInfo AdmAppInfoIdSource
      	{
            get { return entityData.AdmAppInfoIdSource; }
            set { entityData.AdmAppInfoIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmAppPlacementExam"/>.
		/// </summary>
		/// <value>The source AdmAppPlacementExam for AdmAppPlacementExamId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmAppPlacementExam AdmAppPlacementExamIdSource
      	{
            get { return entityData.AdmAppPlacementExamIdSource; }
            set { entityData.AdmAppPlacementExamIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdExamStudAbsence"/>.
		/// </summary>
		/// <value>The source EdExamStudAbsence for EdExamStudAbsenceId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdExamStudAbsence EdExamStudAbsenceIdSource
      	{
            get { return entityData.EdExamStudAbsenceIdSource; }
            set { entityData.EdExamStudAbsenceIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdGraduationAward"/>.
		/// </summary>
		/// <value>The source EdGraduationAward for EdGraduationAwardId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdGraduationAward EdGraduationAwardIdSource
      	{
            get { return entityData.EdGraduationAwardIdSource; }
            set { entityData.EdGraduationAwardIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStudCheat"/>.
		/// </summary>
		/// <value>The source EdStudCheat for EdStudCheatId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStudCheat EdStudCheatIdSource
      	{
            get { return entityData.EdStudCheatIdSource; }
            set { entityData.EdStudCheatIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStudClrncReq"/>.
		/// </summary>
		/// <value>The source EdStudClrncReq for EdStudClrncReqId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStudClrncReq EdStudClrncReqIdSource
      	{
            get { return entityData.EdStudClrncReqIdSource; }
            set { entityData.EdStudClrncReqIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStudCourseChng"/>.
		/// </summary>
		/// <value>The source EdStudCourseChng for EdStudCourseChngId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStudCourseChng EdStudCourseChngIdSource
      	{
            get { return entityData.EdStudCourseChngIdSource; }
            set { entityData.EdStudCourseChngIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStudCourseGrdChng"/>.
		/// </summary>
		/// <value>The source EdStudCourseGrdChng for EdStudCourseGrdChngId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStudCourseGrdChng EdStudCourseGrdChngIdSource
      	{
            get { return entityData.EdStudCourseGrdChngIdSource; }
            set { entityData.EdStudCourseGrdChngIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStudCourseReg"/>.
		/// </summary>
		/// <value>The source EdStudCourseReg for EdStudCourseRegId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStudCourseReg EdStudCourseRegIdSource
      	{
            get { return entityData.EdStudCourseRegIdSource; }
            set { entityData.EdStudCourseRegIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStudEnrollChange"/>.
		/// </summary>
		/// <value>The source EdStudEnrollChange for EdStudEnrollChangeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStudEnrollChange EdStudEnrollChangeIdSource
      	{
            get { return entityData.EdStudEnrollChangeIdSource; }
            set { entityData.EdStudEnrollChangeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStudViol"/>.
		/// </summary>
		/// <value>The source EdStudViol for EdStudViolId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStudViol EdStudViolIdSource
      	{
            get { return entityData.EdStudViolIdSource; }
            set { entityData.EdStudViolIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStudViolAppeal"/>.
		/// </summary>
		/// <value>The source EdStudViolAppeal for EdStudViolAppealId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStudViolAppeal EdStudViolAppealIdSource
      	{
            get { return entityData.EdStudViolAppealIdSource; }
            set { entityData.EdStudViolAppealIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStudViol"/>.
		/// </summary>
		/// <value>The source EdStudViol for EdStudViolInvestId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStudViol EdStudViolInvestIdSource
      	{
            get { return entityData.EdStudViolInvestIdSource; }
            set { entityData.EdStudViolInvestIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="FeeStudDisc"/>.
		/// </summary>
		/// <value>The source FeeStudDisc for FeeStudDiscId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeStudDisc FeeStudDiscIdSource
      	{
            get { return entityData.FeeStudDiscIdSource; }
            set { entityData.FeeStudDiscIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="PgThesisStud"/>.
		/// </summary>
		/// <value>The source PgThesisStud for PgThesisStudId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual PgThesisStud PgThesisStudIdSource
      	{
            get { return entityData.PgThesisStudIdSource; }
            set { entityData.PgThesisStudIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SvMessage"/>.
		/// </summary>
		/// <value>The source SvMessage for SvMessageId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SvMessage SvMessageIdSource
      	{
            get { return entityData.SvMessageIdSource; }
            set { entityData.SvMessageIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("AttchdDocPath", "Attchd Doc Path"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DocNotes", "Doc Notes", 250));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "GS_ATTCHD_DOC"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"GS_ATTCHD_DOC_ID", "ED_STUD_ENROLL_CHANGE_ID", "ED_STUD_CHEAT_ID", "ADM_APP_PLACEMENT_EXAM_ID", "ADM_APP_HONOR_ID", "ADM_APP_INFO_ID", "SV_MESSAGE_ID", "ED_STUD_COURSE_REG_ID", "FEE_STUD_DISC_ID", "ED_EXAM_STUD_ABSENCE_ID", "ED_STUD_COURSE_CHNG_ID", "ED_STUD_COURSE_GRD_CHNG_ID", "ED_STUD_CLRNC_REQ_ID", "ED_STUD_VIOL_ID", "ED_STUD_VIOL_INVEST_ID", "ED_STUD_VIOL_APPEAL_ID", "ATTCHD_DOC_PATH", "DOC_NOTES", "SE_USER_ID", "LAST_DATE", "ORG_DOC_ATTACHED", "PG_THESIS_STUD_ID", "ED_GRADUATION_AWARD_ID"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as GsAttchdDocEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (GsAttchdDoc) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<GsAttchdDoc>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as GsAttchdDoc);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed GsAttchdDoc Entity 
		///</summary>
		protected virtual GsAttchdDoc Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			GsAttchdDoc copy = new GsAttchdDoc();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.GsAttchdDocId = this.GsAttchdDocId;
					copy.OriginalGsAttchdDocId = this.OriginalGsAttchdDocId;
				copy.EdStudEnrollChangeId = this.EdStudEnrollChangeId;
				copy.EdStudCheatId = this.EdStudCheatId;
				copy.AdmAppPlacementExamId = this.AdmAppPlacementExamId;
				copy.AdmAppHonorId = this.AdmAppHonorId;
				copy.AdmAppInfoId = this.AdmAppInfoId;
				copy.SvMessageId = this.SvMessageId;
				copy.EdStudCourseRegId = this.EdStudCourseRegId;
				copy.FeeStudDiscId = this.FeeStudDiscId;
				copy.EdExamStudAbsenceId = this.EdExamStudAbsenceId;
				copy.EdStudCourseChngId = this.EdStudCourseChngId;
				copy.EdStudCourseGrdChngId = this.EdStudCourseGrdChngId;
				copy.EdStudClrncReqId = this.EdStudClrncReqId;
				copy.EdStudViolId = this.EdStudViolId;
				copy.EdStudViolInvestId = this.EdStudViolInvestId;
				copy.EdStudViolAppealId = this.EdStudViolAppealId;
				copy.AttchdDocPath = this.AttchdDocPath;
				copy.DocNotes = this.DocNotes;
				copy.SeUserId = this.SeUserId;
				copy.LastDate = this.LastDate;
				copy.OrgDocAttached = this.OrgDocAttached;
				copy.PgThesisStudId = this.PgThesisStudId;
				copy.EdGraduationAwardId = this.EdGraduationAwardId;
			
			if (this.AdmAppHonorIdSource != null && existingCopies.Contains(this.AdmAppHonorIdSource))
				copy.AdmAppHonorIdSource = existingCopies[this.AdmAppHonorIdSource] as AdmAppHonor;
			else
				copy.AdmAppHonorIdSource = MakeCopyOf(this.AdmAppHonorIdSource, existingCopies) as AdmAppHonor;
			if (this.AdmAppInfoIdSource != null && existingCopies.Contains(this.AdmAppInfoIdSource))
				copy.AdmAppInfoIdSource = existingCopies[this.AdmAppInfoIdSource] as AdmAppInfo;
			else
				copy.AdmAppInfoIdSource = MakeCopyOf(this.AdmAppInfoIdSource, existingCopies) as AdmAppInfo;
			if (this.AdmAppPlacementExamIdSource != null && existingCopies.Contains(this.AdmAppPlacementExamIdSource))
				copy.AdmAppPlacementExamIdSource = existingCopies[this.AdmAppPlacementExamIdSource] as AdmAppPlacementExam;
			else
				copy.AdmAppPlacementExamIdSource = MakeCopyOf(this.AdmAppPlacementExamIdSource, existingCopies) as AdmAppPlacementExam;
			if (this.EdExamStudAbsenceIdSource != null && existingCopies.Contains(this.EdExamStudAbsenceIdSource))
				copy.EdExamStudAbsenceIdSource = existingCopies[this.EdExamStudAbsenceIdSource] as EdExamStudAbsence;
			else
				copy.EdExamStudAbsenceIdSource = MakeCopyOf(this.EdExamStudAbsenceIdSource, existingCopies) as EdExamStudAbsence;
			if (this.EdGraduationAwardIdSource != null && existingCopies.Contains(this.EdGraduationAwardIdSource))
				copy.EdGraduationAwardIdSource = existingCopies[this.EdGraduationAwardIdSource] as EdGraduationAward;
			else
				copy.EdGraduationAwardIdSource = MakeCopyOf(this.EdGraduationAwardIdSource, existingCopies) as EdGraduationAward;
			if (this.EdStudCheatIdSource != null && existingCopies.Contains(this.EdStudCheatIdSource))
				copy.EdStudCheatIdSource = existingCopies[this.EdStudCheatIdSource] as EdStudCheat;
			else
				copy.EdStudCheatIdSource = MakeCopyOf(this.EdStudCheatIdSource, existingCopies) as EdStudCheat;
			if (this.EdStudClrncReqIdSource != null && existingCopies.Contains(this.EdStudClrncReqIdSource))
				copy.EdStudClrncReqIdSource = existingCopies[this.EdStudClrncReqIdSource] as EdStudClrncReq;
			else
				copy.EdStudClrncReqIdSource = MakeCopyOf(this.EdStudClrncReqIdSource, existingCopies) as EdStudClrncReq;
			if (this.EdStudCourseChngIdSource != null && existingCopies.Contains(this.EdStudCourseChngIdSource))
				copy.EdStudCourseChngIdSource = existingCopies[this.EdStudCourseChngIdSource] as EdStudCourseChng;
			else
				copy.EdStudCourseChngIdSource = MakeCopyOf(this.EdStudCourseChngIdSource, existingCopies) as EdStudCourseChng;
			if (this.EdStudCourseGrdChngIdSource != null && existingCopies.Contains(this.EdStudCourseGrdChngIdSource))
				copy.EdStudCourseGrdChngIdSource = existingCopies[this.EdStudCourseGrdChngIdSource] as EdStudCourseGrdChng;
			else
				copy.EdStudCourseGrdChngIdSource = MakeCopyOf(this.EdStudCourseGrdChngIdSource, existingCopies) as EdStudCourseGrdChng;
			if (this.EdStudCourseRegIdSource != null && existingCopies.Contains(this.EdStudCourseRegIdSource))
				copy.EdStudCourseRegIdSource = existingCopies[this.EdStudCourseRegIdSource] as EdStudCourseReg;
			else
				copy.EdStudCourseRegIdSource = MakeCopyOf(this.EdStudCourseRegIdSource, existingCopies) as EdStudCourseReg;
			if (this.EdStudEnrollChangeIdSource != null && existingCopies.Contains(this.EdStudEnrollChangeIdSource))
				copy.EdStudEnrollChangeIdSource = existingCopies[this.EdStudEnrollChangeIdSource] as EdStudEnrollChange;
			else
				copy.EdStudEnrollChangeIdSource = MakeCopyOf(this.EdStudEnrollChangeIdSource, existingCopies) as EdStudEnrollChange;
			if (this.EdStudViolIdSource != null && existingCopies.Contains(this.EdStudViolIdSource))
				copy.EdStudViolIdSource = existingCopies[this.EdStudViolIdSource] as EdStudViol;
			else
				copy.EdStudViolIdSource = MakeCopyOf(this.EdStudViolIdSource, existingCopies) as EdStudViol;
			if (this.EdStudViolAppealIdSource != null && existingCopies.Contains(this.EdStudViolAppealIdSource))
				copy.EdStudViolAppealIdSource = existingCopies[this.EdStudViolAppealIdSource] as EdStudViolAppeal;
			else
				copy.EdStudViolAppealIdSource = MakeCopyOf(this.EdStudViolAppealIdSource, existingCopies) as EdStudViolAppeal;
			if (this.EdStudViolInvestIdSource != null && existingCopies.Contains(this.EdStudViolInvestIdSource))
				copy.EdStudViolInvestIdSource = existingCopies[this.EdStudViolInvestIdSource] as EdStudViol;
			else
				copy.EdStudViolInvestIdSource = MakeCopyOf(this.EdStudViolInvestIdSource, existingCopies) as EdStudViol;
			if (this.FeeStudDiscIdSource != null && existingCopies.Contains(this.FeeStudDiscIdSource))
				copy.FeeStudDiscIdSource = existingCopies[this.FeeStudDiscIdSource] as FeeStudDisc;
			else
				copy.FeeStudDiscIdSource = MakeCopyOf(this.FeeStudDiscIdSource, existingCopies) as FeeStudDisc;
			if (this.PgThesisStudIdSource != null && existingCopies.Contains(this.PgThesisStudIdSource))
				copy.PgThesisStudIdSource = existingCopies[this.PgThesisStudIdSource] as PgThesisStud;
			else
				copy.PgThesisStudIdSource = MakeCopyOf(this.PgThesisStudIdSource, existingCopies) as PgThesisStud;
			if (this.SvMessageIdSource != null && existingCopies.Contains(this.SvMessageIdSource))
				copy.SvMessageIdSource = existingCopies[this.SvMessageIdSource] as SvMessage;
			else
				copy.SvMessageIdSource = MakeCopyOf(this.SvMessageIdSource, existingCopies) as SvMessage;
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed GsAttchdDoc Entity 
		///</summary>
		public virtual GsAttchdDoc Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed GsAttchdDoc Entity which is a deep copy of the current entity.
		///</summary>
		public virtual GsAttchdDoc DeepCopy()
		{
			return EntityHelper.Clone<GsAttchdDoc>(this as GsAttchdDoc);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as GsAttchdDocEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new GsAttchdDocEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as GsAttchdDocEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(GsAttchdDocColumn column)
		{
			switch(column)
			{
					case GsAttchdDocColumn.GsAttchdDocId:
					return entityData.GsAttchdDocId != _originalData.GsAttchdDocId;
					case GsAttchdDocColumn.EdStudEnrollChangeId:
					return entityData.EdStudEnrollChangeId != _originalData.EdStudEnrollChangeId;
					case GsAttchdDocColumn.EdStudCheatId:
					return entityData.EdStudCheatId != _originalData.EdStudCheatId;
					case GsAttchdDocColumn.AdmAppPlacementExamId:
					return entityData.AdmAppPlacementExamId != _originalData.AdmAppPlacementExamId;
					case GsAttchdDocColumn.AdmAppHonorId:
					return entityData.AdmAppHonorId != _originalData.AdmAppHonorId;
					case GsAttchdDocColumn.AdmAppInfoId:
					return entityData.AdmAppInfoId != _originalData.AdmAppInfoId;
					case GsAttchdDocColumn.SvMessageId:
					return entityData.SvMessageId != _originalData.SvMessageId;
					case GsAttchdDocColumn.EdStudCourseRegId:
					return entityData.EdStudCourseRegId != _originalData.EdStudCourseRegId;
					case GsAttchdDocColumn.FeeStudDiscId:
					return entityData.FeeStudDiscId != _originalData.FeeStudDiscId;
					case GsAttchdDocColumn.EdExamStudAbsenceId:
					return entityData.EdExamStudAbsenceId != _originalData.EdExamStudAbsenceId;
					case GsAttchdDocColumn.EdStudCourseChngId:
					return entityData.EdStudCourseChngId != _originalData.EdStudCourseChngId;
					case GsAttchdDocColumn.EdStudCourseGrdChngId:
					return entityData.EdStudCourseGrdChngId != _originalData.EdStudCourseGrdChngId;
					case GsAttchdDocColumn.EdStudClrncReqId:
					return entityData.EdStudClrncReqId != _originalData.EdStudClrncReqId;
					case GsAttchdDocColumn.EdStudViolId:
					return entityData.EdStudViolId != _originalData.EdStudViolId;
					case GsAttchdDocColumn.EdStudViolInvestId:
					return entityData.EdStudViolInvestId != _originalData.EdStudViolInvestId;
					case GsAttchdDocColumn.EdStudViolAppealId:
					return entityData.EdStudViolAppealId != _originalData.EdStudViolAppealId;
					case GsAttchdDocColumn.AttchdDocPath:
					return entityData.AttchdDocPath != _originalData.AttchdDocPath;
					case GsAttchdDocColumn.DocNotes:
					return entityData.DocNotes != _originalData.DocNotes;
					case GsAttchdDocColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
					case GsAttchdDocColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
					case GsAttchdDocColumn.OrgDocAttached:
					return entityData.OrgDocAttached != _originalData.OrgDocAttached;
					case GsAttchdDocColumn.PgThesisStudId:
					return entityData.PgThesisStudId != _originalData.PgThesisStudId;
					case GsAttchdDocColumn.EdGraduationAwardId:
					return entityData.EdGraduationAwardId != _originalData.EdGraduationAwardId;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< GsAttchdDocColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.GsAttchdDocId != _originalData.GsAttchdDocId;
			result = result || entityData.EdStudEnrollChangeId != _originalData.EdStudEnrollChangeId;
			result = result || entityData.EdStudCheatId != _originalData.EdStudCheatId;
			result = result || entityData.AdmAppPlacementExamId != _originalData.AdmAppPlacementExamId;
			result = result || entityData.AdmAppHonorId != _originalData.AdmAppHonorId;
			result = result || entityData.AdmAppInfoId != _originalData.AdmAppInfoId;
			result = result || entityData.SvMessageId != _originalData.SvMessageId;
			result = result || entityData.EdStudCourseRegId != _originalData.EdStudCourseRegId;
			result = result || entityData.FeeStudDiscId != _originalData.FeeStudDiscId;
			result = result || entityData.EdExamStudAbsenceId != _originalData.EdExamStudAbsenceId;
			result = result || entityData.EdStudCourseChngId != _originalData.EdStudCourseChngId;
			result = result || entityData.EdStudCourseGrdChngId != _originalData.EdStudCourseGrdChngId;
			result = result || entityData.EdStudClrncReqId != _originalData.EdStudClrncReqId;
			result = result || entityData.EdStudViolId != _originalData.EdStudViolId;
			result = result || entityData.EdStudViolInvestId != _originalData.EdStudViolInvestId;
			result = result || entityData.EdStudViolAppealId != _originalData.EdStudViolAppealId;
			result = result || entityData.AttchdDocPath != _originalData.AttchdDocPath;
			result = result || entityData.DocNotes != _originalData.DocNotes;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			result = result || entityData.LastDate != _originalData.LastDate;
			result = result || entityData.OrgDocAttached != _originalData.OrgDocAttached;
			result = result || entityData.PgThesisStudId != _originalData.PgThesisStudId;
			result = result || entityData.EdGraduationAwardId != _originalData.EdGraduationAwardId;
			return result;
		}	
		
		///<summary>
		///  Returns a GsAttchdDoc Entity with the original data.
		///</summary>
		public GsAttchdDoc GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateGsAttchdDoc(
				_originalData.GsAttchdDocId,
				_originalData.EdStudEnrollChangeId,
				_originalData.EdStudCheatId,
				_originalData.AdmAppPlacementExamId,
				_originalData.AdmAppHonorId,
				_originalData.AdmAppInfoId,
				_originalData.SvMessageId,
				_originalData.EdStudCourseRegId,
				_originalData.FeeStudDiscId,
				_originalData.EdExamStudAbsenceId,
				_originalData.EdStudCourseChngId,
				_originalData.EdStudCourseGrdChngId,
				_originalData.EdStudClrncReqId,
				_originalData.EdStudViolId,
				_originalData.EdStudViolInvestId,
				_originalData.EdStudViolAppealId,
				_originalData.AttchdDocPath,
				_originalData.DocNotes,
				_originalData.SeUserId,
				_originalData.LastDate,
				_originalData.OrgDocAttached,
				_originalData.PgThesisStudId,
				_originalData.EdGraduationAwardId
				);
				
			return (GsAttchdDoc)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="GsAttchdDocBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is GsAttchdDocBase)
				return ValueEquals(this, (GsAttchdDocBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="GsAttchdDocBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.GsAttchdDocId.GetHashCode() ^ 
					((this.EdStudEnrollChangeId == null) ? string.Empty : this.EdStudEnrollChangeId.ToString()).GetHashCode() ^ 
					((this.EdStudCheatId == null) ? string.Empty : this.EdStudCheatId.ToString()).GetHashCode() ^ 
					((this.AdmAppPlacementExamId == null) ? string.Empty : this.AdmAppPlacementExamId.ToString()).GetHashCode() ^ 
					((this.AdmAppHonorId == null) ? string.Empty : this.AdmAppHonorId.ToString()).GetHashCode() ^ 
					((this.AdmAppInfoId == null) ? string.Empty : this.AdmAppInfoId.ToString()).GetHashCode() ^ 
					((this.SvMessageId == null) ? string.Empty : this.SvMessageId.ToString()).GetHashCode() ^ 
					((this.EdStudCourseRegId == null) ? string.Empty : this.EdStudCourseRegId.ToString()).GetHashCode() ^ 
					((this.FeeStudDiscId == null) ? string.Empty : this.FeeStudDiscId.ToString()).GetHashCode() ^ 
					((this.EdExamStudAbsenceId == null) ? string.Empty : this.EdExamStudAbsenceId.ToString()).GetHashCode() ^ 
					((this.EdStudCourseChngId == null) ? string.Empty : this.EdStudCourseChngId.ToString()).GetHashCode() ^ 
					((this.EdStudCourseGrdChngId == null) ? string.Empty : this.EdStudCourseGrdChngId.ToString()).GetHashCode() ^ 
					((this.EdStudClrncReqId == null) ? string.Empty : this.EdStudClrncReqId.ToString()).GetHashCode() ^ 
					((this.EdStudViolId == null) ? string.Empty : this.EdStudViolId.ToString()).GetHashCode() ^ 
					((this.EdStudViolInvestId == null) ? string.Empty : this.EdStudViolInvestId.ToString()).GetHashCode() ^ 
					((this.EdStudViolAppealId == null) ? string.Empty : this.EdStudViolAppealId.ToString()).GetHashCode() ^ 
					this.AttchdDocPath.GetHashCode() ^ 
					((this.DocNotes == null) ? string.Empty : this.DocNotes.ToString()).GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode() ^ 
					((this.OrgDocAttached == null) ? string.Empty : this.OrgDocAttached.ToString()).GetHashCode() ^ 
					((this.PgThesisStudId == null) ? string.Empty : this.PgThesisStudId.ToString()).GetHashCode() ^ 
					((this.EdGraduationAwardId == null) ? string.Empty : this.EdGraduationAwardId.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="GsAttchdDocBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(GsAttchdDocBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="GsAttchdDocBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="GsAttchdDocBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="GsAttchdDocBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(GsAttchdDocBase Object1, GsAttchdDocBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.GsAttchdDocId != Object2.GsAttchdDocId)
				equal = false;
			if ( Object1.EdStudEnrollChangeId != null && Object2.EdStudEnrollChangeId != null )
			{
				if (Object1.EdStudEnrollChangeId != Object2.EdStudEnrollChangeId)
					equal = false;
			}
			else if (Object1.EdStudEnrollChangeId == null ^ Object2.EdStudEnrollChangeId == null )
			{
				equal = false;
			}
			if ( Object1.EdStudCheatId != null && Object2.EdStudCheatId != null )
			{
				if (Object1.EdStudCheatId != Object2.EdStudCheatId)
					equal = false;
			}
			else if (Object1.EdStudCheatId == null ^ Object2.EdStudCheatId == null )
			{
				equal = false;
			}
			if ( Object1.AdmAppPlacementExamId != null && Object2.AdmAppPlacementExamId != null )
			{
				if (Object1.AdmAppPlacementExamId != Object2.AdmAppPlacementExamId)
					equal = false;
			}
			else if (Object1.AdmAppPlacementExamId == null ^ Object2.AdmAppPlacementExamId == null )
			{
				equal = false;
			}
			if ( Object1.AdmAppHonorId != null && Object2.AdmAppHonorId != null )
			{
				if (Object1.AdmAppHonorId != Object2.AdmAppHonorId)
					equal = false;
			}
			else if (Object1.AdmAppHonorId == null ^ Object2.AdmAppHonorId == null )
			{
				equal = false;
			}
			if ( Object1.AdmAppInfoId != null && Object2.AdmAppInfoId != null )
			{
				if (Object1.AdmAppInfoId != Object2.AdmAppInfoId)
					equal = false;
			}
			else if (Object1.AdmAppInfoId == null ^ Object2.AdmAppInfoId == null )
			{
				equal = false;
			}
			if ( Object1.SvMessageId != null && Object2.SvMessageId != null )
			{
				if (Object1.SvMessageId != Object2.SvMessageId)
					equal = false;
			}
			else if (Object1.SvMessageId == null ^ Object2.SvMessageId == null )
			{
				equal = false;
			}
			if ( Object1.EdStudCourseRegId != null && Object2.EdStudCourseRegId != null )
			{
				if (Object1.EdStudCourseRegId != Object2.EdStudCourseRegId)
					equal = false;
			}
			else if (Object1.EdStudCourseRegId == null ^ Object2.EdStudCourseRegId == null )
			{
				equal = false;
			}
			if ( Object1.FeeStudDiscId != null && Object2.FeeStudDiscId != null )
			{
				if (Object1.FeeStudDiscId != Object2.FeeStudDiscId)
					equal = false;
			}
			else if (Object1.FeeStudDiscId == null ^ Object2.FeeStudDiscId == null )
			{
				equal = false;
			}
			if ( Object1.EdExamStudAbsenceId != null && Object2.EdExamStudAbsenceId != null )
			{
				if (Object1.EdExamStudAbsenceId != Object2.EdExamStudAbsenceId)
					equal = false;
			}
			else if (Object1.EdExamStudAbsenceId == null ^ Object2.EdExamStudAbsenceId == null )
			{
				equal = false;
			}
			if ( Object1.EdStudCourseChngId != null && Object2.EdStudCourseChngId != null )
			{
				if (Object1.EdStudCourseChngId != Object2.EdStudCourseChngId)
					equal = false;
			}
			else if (Object1.EdStudCourseChngId == null ^ Object2.EdStudCourseChngId == null )
			{
				equal = false;
			}
			if ( Object1.EdStudCourseGrdChngId != null && Object2.EdStudCourseGrdChngId != null )
			{
				if (Object1.EdStudCourseGrdChngId != Object2.EdStudCourseGrdChngId)
					equal = false;
			}
			else if (Object1.EdStudCourseGrdChngId == null ^ Object2.EdStudCourseGrdChngId == null )
			{
				equal = false;
			}
			if ( Object1.EdStudClrncReqId != null && Object2.EdStudClrncReqId != null )
			{
				if (Object1.EdStudClrncReqId != Object2.EdStudClrncReqId)
					equal = false;
			}
			else if (Object1.EdStudClrncReqId == null ^ Object2.EdStudClrncReqId == null )
			{
				equal = false;
			}
			if ( Object1.EdStudViolId != null && Object2.EdStudViolId != null )
			{
				if (Object1.EdStudViolId != Object2.EdStudViolId)
					equal = false;
			}
			else if (Object1.EdStudViolId == null ^ Object2.EdStudViolId == null )
			{
				equal = false;
			}
			if ( Object1.EdStudViolInvestId != null && Object2.EdStudViolInvestId != null )
			{
				if (Object1.EdStudViolInvestId != Object2.EdStudViolInvestId)
					equal = false;
			}
			else if (Object1.EdStudViolInvestId == null ^ Object2.EdStudViolInvestId == null )
			{
				equal = false;
			}
			if ( Object1.EdStudViolAppealId != null && Object2.EdStudViolAppealId != null )
			{
				if (Object1.EdStudViolAppealId != Object2.EdStudViolAppealId)
					equal = false;
			}
			else if (Object1.EdStudViolAppealId == null ^ Object2.EdStudViolAppealId == null )
			{
				equal = false;
			}
			if (Object1.AttchdDocPath != Object2.AttchdDocPath)
				equal = false;
			if ( Object1.DocNotes != null && Object2.DocNotes != null )
			{
				if (Object1.DocNotes != Object2.DocNotes)
					equal = false;
			}
			else if (Object1.DocNotes == null ^ Object2.DocNotes == null )
			{
				equal = false;
			}
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
			if ( Object1.OrgDocAttached != null && Object2.OrgDocAttached != null )
			{
				if (Object1.OrgDocAttached != Object2.OrgDocAttached)
					equal = false;
			}
			else if (Object1.OrgDocAttached == null ^ Object2.OrgDocAttached == null )
			{
				equal = false;
			}
			if ( Object1.PgThesisStudId != null && Object2.PgThesisStudId != null )
			{
				if (Object1.PgThesisStudId != Object2.PgThesisStudId)
					equal = false;
			}
			else if (Object1.PgThesisStudId == null ^ Object2.PgThesisStudId == null )
			{
				equal = false;
			}
			if ( Object1.EdGraduationAwardId != null && Object2.EdGraduationAwardId != null )
			{
				if (Object1.EdGraduationAwardId != Object2.EdGraduationAwardId)
					equal = false;
			}
			else if (Object1.EdGraduationAwardId == null ^ Object2.EdGraduationAwardId == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((GsAttchdDocBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static GsAttchdDocComparer GetComparer()
        {
            return new GsAttchdDocComparer();
        }
        */

        // Comparer delegates back to GsAttchdDoc
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(GsAttchdDoc rhs, GsAttchdDocColumn which)
        {
            switch (which)
            {
            	
            	
            	case GsAttchdDocColumn.GsAttchdDocId:
            		return this.GsAttchdDocId.CompareTo(rhs.GsAttchdDocId);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.EdStudEnrollChangeId:
            		return this.EdStudEnrollChangeId.Value.CompareTo(rhs.EdStudEnrollChangeId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.EdStudCheatId:
            		return this.EdStudCheatId.Value.CompareTo(rhs.EdStudCheatId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.AdmAppPlacementExamId:
            		return this.AdmAppPlacementExamId.Value.CompareTo(rhs.AdmAppPlacementExamId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.AdmAppHonorId:
            		return this.AdmAppHonorId.Value.CompareTo(rhs.AdmAppHonorId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.AdmAppInfoId:
            		return this.AdmAppInfoId.Value.CompareTo(rhs.AdmAppInfoId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.SvMessageId:
            		return this.SvMessageId.Value.CompareTo(rhs.SvMessageId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.EdStudCourseRegId:
            		return this.EdStudCourseRegId.Value.CompareTo(rhs.EdStudCourseRegId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.FeeStudDiscId:
            		return this.FeeStudDiscId.Value.CompareTo(rhs.FeeStudDiscId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.EdExamStudAbsenceId:
            		return this.EdExamStudAbsenceId.Value.CompareTo(rhs.EdExamStudAbsenceId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.EdStudCourseChngId:
            		return this.EdStudCourseChngId.Value.CompareTo(rhs.EdStudCourseChngId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.EdStudCourseGrdChngId:
            		return this.EdStudCourseGrdChngId.Value.CompareTo(rhs.EdStudCourseGrdChngId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.EdStudClrncReqId:
            		return this.EdStudClrncReqId.Value.CompareTo(rhs.EdStudClrncReqId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.EdStudViolId:
            		return this.EdStudViolId.Value.CompareTo(rhs.EdStudViolId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.EdStudViolInvestId:
            		return this.EdStudViolInvestId.Value.CompareTo(rhs.EdStudViolInvestId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.EdStudViolAppealId:
            		return this.EdStudViolAppealId.Value.CompareTo(rhs.EdStudViolAppealId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.AttchdDocPath:
            		return this.AttchdDocPath.CompareTo(rhs.AttchdDocPath);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.DocNotes:
            		return this.DocNotes.CompareTo(rhs.DocNotes);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.OrgDocAttached:
            		return this.OrgDocAttached.Value.CompareTo(rhs.OrgDocAttached.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.PgThesisStudId:
            		return this.PgThesisStudId.Value.CompareTo(rhs.PgThesisStudId.Value);
            		
            		                 
            	
            	
            	case GsAttchdDocColumn.EdGraduationAwardId:
            		return this.EdGraduationAwardId.Value.CompareTo(rhs.EdGraduationAwardId.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<GsAttchdDocKey> Members
		
		// member variable for the EntityId property
		private GsAttchdDocKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual GsAttchdDocKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new GsAttchdDocKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("GsAttchdDoc")
					.Append("|").Append( this.GsAttchdDocId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{24}{23}- GsAttchdDocId: {0}{23}- EdStudEnrollChangeId: {1}{23}- EdStudCheatId: {2}{23}- AdmAppPlacementExamId: {3}{23}- AdmAppHonorId: {4}{23}- AdmAppInfoId: {5}{23}- SvMessageId: {6}{23}- EdStudCourseRegId: {7}{23}- FeeStudDiscId: {8}{23}- EdExamStudAbsenceId: {9}{23}- EdStudCourseChngId: {10}{23}- EdStudCourseGrdChngId: {11}{23}- EdStudClrncReqId: {12}{23}- EdStudViolId: {13}{23}- EdStudViolInvestId: {14}{23}- EdStudViolAppealId: {15}{23}- AttchdDocPath: {16}{23}- DocNotes: {17}{23}- SeUserId: {18}{23}- LastDate: {19}{23}- OrgDocAttached: {20}{23}- PgThesisStudId: {21}{23}- EdGraduationAwardId: {22}{23}{25}", 
				this.GsAttchdDocId,
				(this.EdStudEnrollChangeId == null) ? string.Empty : this.EdStudEnrollChangeId.ToString(),
				(this.EdStudCheatId == null) ? string.Empty : this.EdStudCheatId.ToString(),
				(this.AdmAppPlacementExamId == null) ? string.Empty : this.AdmAppPlacementExamId.ToString(),
				(this.AdmAppHonorId == null) ? string.Empty : this.AdmAppHonorId.ToString(),
				(this.AdmAppInfoId == null) ? string.Empty : this.AdmAppInfoId.ToString(),
				(this.SvMessageId == null) ? string.Empty : this.SvMessageId.ToString(),
				(this.EdStudCourseRegId == null) ? string.Empty : this.EdStudCourseRegId.ToString(),
				(this.FeeStudDiscId == null) ? string.Empty : this.FeeStudDiscId.ToString(),
				(this.EdExamStudAbsenceId == null) ? string.Empty : this.EdExamStudAbsenceId.ToString(),
				(this.EdStudCourseChngId == null) ? string.Empty : this.EdStudCourseChngId.ToString(),
				(this.EdStudCourseGrdChngId == null) ? string.Empty : this.EdStudCourseGrdChngId.ToString(),
				(this.EdStudClrncReqId == null) ? string.Empty : this.EdStudClrncReqId.ToString(),
				(this.EdStudViolId == null) ? string.Empty : this.EdStudViolId.ToString(),
				(this.EdStudViolInvestId == null) ? string.Empty : this.EdStudViolInvestId.ToString(),
				(this.EdStudViolAppealId == null) ? string.Empty : this.EdStudViolAppealId.ToString(),
				this.AttchdDocPath,
				(this.DocNotes == null) ? string.Empty : this.DocNotes.ToString(),
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				(this.OrgDocAttached == null) ? string.Empty : this.OrgDocAttached.ToString(),
				(this.PgThesisStudId == null) ? string.Empty : this.PgThesisStudId.ToString(),
				(this.EdGraduationAwardId == null) ? string.Empty : this.EdGraduationAwardId.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'GS_ATTCHD_DOC' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class GsAttchdDocEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// GS_ATTCHD_DOC_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "GS_ATTCHD_DOC"</remarks>
		public System.Decimal GsAttchdDocId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalGsAttchdDocId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// ED_STUD_ENROLL_CHANGE_ID : مسلسل تغيير حالة قيد طالب
		/// </summary>
		public System.Decimal?		  EdStudEnrollChangeId = null;
		
		/// <summary>
		/// ED_STUD_CHEAT_ID : 
		/// </summary>
		public System.Decimal?		  EdStudCheatId = null;
		
		/// <summary>
		/// ADM_APP_PLACEMENT_EXAM_ID : XX
		/// </summary>
		public System.Decimal?		  AdmAppPlacementExamId = null;
		
		/// <summary>
		/// ADM_APP_HONOR_ID : XX
		/// </summary>
		public System.Decimal?		  AdmAppHonorId = null;
		
		/// <summary>
		/// ADM_APP_INFO_ID : 
		/// </summary>
		public System.Decimal?		  AdmAppInfoId = null;
		
		/// <summary>
		/// SV_MESSAGE_ID : 
		/// </summary>
		public System.Decimal?		  SvMessageId = null;
		
		/// <summary>
		/// ED_STUD_COURSE_REG_ID : 
		/// </summary>
		public System.Decimal?		  EdStudCourseRegId = null;
		
		/// <summary>
		/// FEE_STUD_DISC_ID : 
		/// </summary>
		public System.Decimal?		  FeeStudDiscId = null;
		
		/// <summary>
		/// ED_EXAM_STUD_ABSENCE_ID : 
		/// </summary>
		public System.Decimal?		  EdExamStudAbsenceId = null;
		
		/// <summary>
		/// ED_STUD_COURSE_CHNG_ID : 
		/// </summary>
		public System.Decimal?		  EdStudCourseChngId = null;
		
		/// <summary>
		/// ED_STUD_COURSE_GRD_CHNG_ID : 
		/// </summary>
		public System.Decimal?		  EdStudCourseGrdChngId = null;
		
		/// <summary>
		/// ED_STUD_CLRNC_REQ_ID : 
		/// </summary>
		public System.Decimal?		  EdStudClrncReqId = null;
		
		/// <summary>
		/// ED_STUD_VIOL_ID : المخالفة
		/// </summary>
		public System.Decimal?		  EdStudViolId = null;
		
		/// <summary>
		/// ED_STUD_VIOL_INVEST_ID : مجلس التأديب
		/// </summary>
		public System.Decimal?		  EdStudViolInvestId = null;
		
		/// <summary>
		/// ED_STUD_VIOL_APPEAL_ID : التظلم
		/// </summary>
		public System.Decimal?		  EdStudViolAppealId = null;
		
		/// <summary>
		/// ATTCHD_DOC_PATH : XXXالمرفق مسار المستند
		/// </summary>
		public System.String		  AttchdDocPath = string.Empty;
		
		/// <summary>
		/// DOC_NOTES : 
		/// </summary>
		public System.String		  DocNotes = null;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		
		/// <summary>
		/// ORG_DOC_ATTACHED : تم تسليم أصل الوثيقه 
		/// </summary>
		public System.Boolean?		  OrgDocAttached = null;
		
		/// <summary>
		/// PG_THESIS_STUD_ID : 
		/// </summary>
		public System.Decimal?		  PgThesisStudId = null;
		
		/// <summary>
		/// ED_GRADUATION_AWARD_ID : 
		/// </summary>
		public System.Decimal?		  EdGraduationAwardId = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private AdmAppHonor _admAppHonorIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmAppHonor"/>.
		/// </summary>
		/// <value>The source AdmAppHonor for AdmAppHonorId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmAppHonor AdmAppHonorIdSource
      	{
            get { return this._admAppHonorIdSource; }
            set { this._admAppHonorIdSource = value; }
      	}
		private AdmAppInfo _admAppInfoIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmAppInfo"/>.
		/// </summary>
		/// <value>The source AdmAppInfo for AdmAppInfoId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmAppInfo AdmAppInfoIdSource
      	{
            get { return this._admAppInfoIdSource; }
            set { this._admAppInfoIdSource = value; }
      	}
		private AdmAppPlacementExam _admAppPlacementExamIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmAppPlacementExam"/>.
		/// </summary>
		/// <value>The source AdmAppPlacementExam for AdmAppPlacementExamId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmAppPlacementExam AdmAppPlacementExamIdSource
      	{
            get { return this._admAppPlacementExamIdSource; }
            set { this._admAppPlacementExamIdSource = value; }
      	}
		private EdExamStudAbsence _edExamStudAbsenceIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdExamStudAbsence"/>.
		/// </summary>
		/// <value>The source EdExamStudAbsence for EdExamStudAbsenceId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdExamStudAbsence EdExamStudAbsenceIdSource
      	{
            get { return this._edExamStudAbsenceIdSource; }
            set { this._edExamStudAbsenceIdSource = value; }
      	}
		private EdGraduationAward _edGraduationAwardIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdGraduationAward"/>.
		/// </summary>
		/// <value>The source EdGraduationAward for EdGraduationAwardId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdGraduationAward EdGraduationAwardIdSource
      	{
            get { return this._edGraduationAwardIdSource; }
            set { this._edGraduationAwardIdSource = value; }
      	}
		private EdStudCheat _edStudCheatIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStudCheat"/>.
		/// </summary>
		/// <value>The source EdStudCheat for EdStudCheatId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStudCheat EdStudCheatIdSource
      	{
            get { return this._edStudCheatIdSource; }
            set { this._edStudCheatIdSource = value; }
      	}
		private EdStudClrncReq _edStudClrncReqIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStudClrncReq"/>.
		/// </summary>
		/// <value>The source EdStudClrncReq for EdStudClrncReqId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStudClrncReq EdStudClrncReqIdSource
      	{
            get { return this._edStudClrncReqIdSource; }
            set { this._edStudClrncReqIdSource = value; }
      	}
		private EdStudCourseChng _edStudCourseChngIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStudCourseChng"/>.
		/// </summary>
		/// <value>The source EdStudCourseChng for EdStudCourseChngId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStudCourseChng EdStudCourseChngIdSource
      	{
            get { return this._edStudCourseChngIdSource; }
            set { this._edStudCourseChngIdSource = value; }
      	}
		private EdStudCourseGrdChng _edStudCourseGrdChngIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStudCourseGrdChng"/>.
		/// </summary>
		/// <value>The source EdStudCourseGrdChng for EdStudCourseGrdChngId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStudCourseGrdChng EdStudCourseGrdChngIdSource
      	{
            get { return this._edStudCourseGrdChngIdSource; }
            set { this._edStudCourseGrdChngIdSource = value; }
      	}
		private EdStudCourseReg _edStudCourseRegIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStudCourseReg"/>.
		/// </summary>
		/// <value>The source EdStudCourseReg for EdStudCourseRegId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStudCourseReg EdStudCourseRegIdSource
      	{
            get { return this._edStudCourseRegIdSource; }
            set { this._edStudCourseRegIdSource = value; }
      	}
		private EdStudEnrollChange _edStudEnrollChangeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStudEnrollChange"/>.
		/// </summary>
		/// <value>The source EdStudEnrollChange for EdStudEnrollChangeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStudEnrollChange EdStudEnrollChangeIdSource
      	{
            get { return this._edStudEnrollChangeIdSource; }
            set { this._edStudEnrollChangeIdSource = value; }
      	}
		private EdStudViol _edStudViolIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStudViol"/>.
		/// </summary>
		/// <value>The source EdStudViol for EdStudViolId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStudViol EdStudViolIdSource
      	{
            get { return this._edStudViolIdSource; }
            set { this._edStudViolIdSource = value; }
      	}
		private EdStudViolAppeal _edStudViolAppealIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStudViolAppeal"/>.
		/// </summary>
		/// <value>The source EdStudViolAppeal for EdStudViolAppealId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStudViolAppeal EdStudViolAppealIdSource
      	{
            get { return this._edStudViolAppealIdSource; }
            set { this._edStudViolAppealIdSource = value; }
      	}
		private EdStudViol _edStudViolInvestIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStudViol"/>.
		/// </summary>
		/// <value>The source EdStudViol for EdStudViolInvestId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStudViol EdStudViolInvestIdSource
      	{
            get { return this._edStudViolInvestIdSource; }
            set { this._edStudViolInvestIdSource = value; }
      	}
		private FeeStudDisc _feeStudDiscIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeStudDisc"/>.
		/// </summary>
		/// <value>The source FeeStudDisc for FeeStudDiscId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeStudDisc FeeStudDiscIdSource
      	{
            get { return this._feeStudDiscIdSource; }
            set { this._feeStudDiscIdSource = value; }
      	}
		private PgThesisStud _pgThesisStudIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="PgThesisStud"/>.
		/// </summary>
		/// <value>The source PgThesisStud for PgThesisStudId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual PgThesisStud PgThesisStudIdSource
      	{
            get { return this._pgThesisStudIdSource; }
            set { this._pgThesisStudIdSource = value; }
      	}
		private SvMessage _svMessageIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SvMessage"/>.
		/// </summary>
		/// <value>The source SvMessage for SvMessageId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SvMessage SvMessageIdSource
      	{
            get { return this._svMessageIdSource; }
            set { this._svMessageIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			GsAttchdDocEntityData _tmp = new GsAttchdDocEntityData();
						
			_tmp.GsAttchdDocId = this.GsAttchdDocId;
			_tmp.OriginalGsAttchdDocId = this.OriginalGsAttchdDocId;
			
			_tmp.EdStudEnrollChangeId = this.EdStudEnrollChangeId;
			_tmp.EdStudCheatId = this.EdStudCheatId;
			_tmp.AdmAppPlacementExamId = this.AdmAppPlacementExamId;
			_tmp.AdmAppHonorId = this.AdmAppHonorId;
			_tmp.AdmAppInfoId = this.AdmAppInfoId;
			_tmp.SvMessageId = this.SvMessageId;
			_tmp.EdStudCourseRegId = this.EdStudCourseRegId;
			_tmp.FeeStudDiscId = this.FeeStudDiscId;
			_tmp.EdExamStudAbsenceId = this.EdExamStudAbsenceId;
			_tmp.EdStudCourseChngId = this.EdStudCourseChngId;
			_tmp.EdStudCourseGrdChngId = this.EdStudCourseGrdChngId;
			_tmp.EdStudClrncReqId = this.EdStudClrncReqId;
			_tmp.EdStudViolId = this.EdStudViolId;
			_tmp.EdStudViolInvestId = this.EdStudViolInvestId;
			_tmp.EdStudViolAppealId = this.EdStudViolAppealId;
			_tmp.AttchdDocPath = this.AttchdDocPath;
			_tmp.DocNotes = this.DocNotes;
			_tmp.SeUserId = this.SeUserId;
			_tmp.LastDate = this.LastDate;
			_tmp.OrgDocAttached = this.OrgDocAttached;
			_tmp.PgThesisStudId = this.PgThesisStudId;
			_tmp.EdGraduationAwardId = this.EdGraduationAwardId;
			
			#region Source Parent Composite Entities
			if (this.AdmAppHonorIdSource != null)
				_tmp.AdmAppHonorIdSource = MakeCopyOf(this.AdmAppHonorIdSource) as AdmAppHonor;
			if (this.AdmAppInfoIdSource != null)
				_tmp.AdmAppInfoIdSource = MakeCopyOf(this.AdmAppInfoIdSource) as AdmAppInfo;
			if (this.AdmAppPlacementExamIdSource != null)
				_tmp.AdmAppPlacementExamIdSource = MakeCopyOf(this.AdmAppPlacementExamIdSource) as AdmAppPlacementExam;
			if (this.EdExamStudAbsenceIdSource != null)
				_tmp.EdExamStudAbsenceIdSource = MakeCopyOf(this.EdExamStudAbsenceIdSource) as EdExamStudAbsence;
			if (this.EdGraduationAwardIdSource != null)
				_tmp.EdGraduationAwardIdSource = MakeCopyOf(this.EdGraduationAwardIdSource) as EdGraduationAward;
			if (this.EdStudCheatIdSource != null)
				_tmp.EdStudCheatIdSource = MakeCopyOf(this.EdStudCheatIdSource) as EdStudCheat;
			if (this.EdStudClrncReqIdSource != null)
				_tmp.EdStudClrncReqIdSource = MakeCopyOf(this.EdStudClrncReqIdSource) as EdStudClrncReq;
			if (this.EdStudCourseChngIdSource != null)
				_tmp.EdStudCourseChngIdSource = MakeCopyOf(this.EdStudCourseChngIdSource) as EdStudCourseChng;
			if (this.EdStudCourseGrdChngIdSource != null)
				_tmp.EdStudCourseGrdChngIdSource = MakeCopyOf(this.EdStudCourseGrdChngIdSource) as EdStudCourseGrdChng;
			if (this.EdStudCourseRegIdSource != null)
				_tmp.EdStudCourseRegIdSource = MakeCopyOf(this.EdStudCourseRegIdSource) as EdStudCourseReg;
			if (this.EdStudEnrollChangeIdSource != null)
				_tmp.EdStudEnrollChangeIdSource = MakeCopyOf(this.EdStudEnrollChangeIdSource) as EdStudEnrollChange;
			if (this.EdStudViolIdSource != null)
				_tmp.EdStudViolIdSource = MakeCopyOf(this.EdStudViolIdSource) as EdStudViol;
			if (this.EdStudViolAppealIdSource != null)
				_tmp.EdStudViolAppealIdSource = MakeCopyOf(this.EdStudViolAppealIdSource) as EdStudViolAppeal;
			if (this.EdStudViolInvestIdSource != null)
				_tmp.EdStudViolInvestIdSource = MakeCopyOf(this.EdStudViolInvestIdSource) as EdStudViol;
			if (this.FeeStudDiscIdSource != null)
				_tmp.FeeStudDiscIdSource = MakeCopyOf(this.FeeStudDiscIdSource) as FeeStudDisc;
			if (this.PgThesisStudIdSource != null)
				_tmp.PgThesisStudIdSource = MakeCopyOf(this.PgThesisStudIdSource) as PgThesisStud;
			if (this.SvMessageIdSource != null)
				_tmp.SvMessageIdSource = MakeCopyOf(this.SvMessageIdSource) as SvMessage;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			GsAttchdDocEntityData _tmp = new GsAttchdDocEntityData();
						
			_tmp.GsAttchdDocId = this.GsAttchdDocId;
			_tmp.OriginalGsAttchdDocId = this.OriginalGsAttchdDocId;
			
			_tmp.EdStudEnrollChangeId = this.EdStudEnrollChangeId;
			_tmp.EdStudCheatId = this.EdStudCheatId;
			_tmp.AdmAppPlacementExamId = this.AdmAppPlacementExamId;
			_tmp.AdmAppHonorId = this.AdmAppHonorId;
			_tmp.AdmAppInfoId = this.AdmAppInfoId;
			_tmp.SvMessageId = this.SvMessageId;
			_tmp.EdStudCourseRegId = this.EdStudCourseRegId;
			_tmp.FeeStudDiscId = this.FeeStudDiscId;
			_tmp.EdExamStudAbsenceId = this.EdExamStudAbsenceId;
			_tmp.EdStudCourseChngId = this.EdStudCourseChngId;
			_tmp.EdStudCourseGrdChngId = this.EdStudCourseGrdChngId;
			_tmp.EdStudClrncReqId = this.EdStudClrncReqId;
			_tmp.EdStudViolId = this.EdStudViolId;
			_tmp.EdStudViolInvestId = this.EdStudViolInvestId;
			_tmp.EdStudViolAppealId = this.EdStudViolAppealId;
			_tmp.AttchdDocPath = this.AttchdDocPath;
			_tmp.DocNotes = this.DocNotes;
			_tmp.SeUserId = this.SeUserId;
			_tmp.LastDate = this.LastDate;
			_tmp.OrgDocAttached = this.OrgDocAttached;
			_tmp.PgThesisStudId = this.PgThesisStudId;
			_tmp.EdGraduationAwardId = this.EdGraduationAwardId;
			
			#region Source Parent Composite Entities
			if (this.AdmAppHonorIdSource != null && existingCopies.Contains(this.AdmAppHonorIdSource))
				_tmp.AdmAppHonorIdSource = existingCopies[this.AdmAppHonorIdSource] as AdmAppHonor;
			else
				_tmp.AdmAppHonorIdSource = MakeCopyOf(this.AdmAppHonorIdSource, existingCopies) as AdmAppHonor;
			if (this.AdmAppInfoIdSource != null && existingCopies.Contains(this.AdmAppInfoIdSource))
				_tmp.AdmAppInfoIdSource = existingCopies[this.AdmAppInfoIdSource] as AdmAppInfo;
			else
				_tmp.AdmAppInfoIdSource = MakeCopyOf(this.AdmAppInfoIdSource, existingCopies) as AdmAppInfo;
			if (this.AdmAppPlacementExamIdSource != null && existingCopies.Contains(this.AdmAppPlacementExamIdSource))
				_tmp.AdmAppPlacementExamIdSource = existingCopies[this.AdmAppPlacementExamIdSource] as AdmAppPlacementExam;
			else
				_tmp.AdmAppPlacementExamIdSource = MakeCopyOf(this.AdmAppPlacementExamIdSource, existingCopies) as AdmAppPlacementExam;
			if (this.EdExamStudAbsenceIdSource != null && existingCopies.Contains(this.EdExamStudAbsenceIdSource))
				_tmp.EdExamStudAbsenceIdSource = existingCopies[this.EdExamStudAbsenceIdSource] as EdExamStudAbsence;
			else
				_tmp.EdExamStudAbsenceIdSource = MakeCopyOf(this.EdExamStudAbsenceIdSource, existingCopies) as EdExamStudAbsence;
			if (this.EdGraduationAwardIdSource != null && existingCopies.Contains(this.EdGraduationAwardIdSource))
				_tmp.EdGraduationAwardIdSource = existingCopies[this.EdGraduationAwardIdSource] as EdGraduationAward;
			else
				_tmp.EdGraduationAwardIdSource = MakeCopyOf(this.EdGraduationAwardIdSource, existingCopies) as EdGraduationAward;
			if (this.EdStudCheatIdSource != null && existingCopies.Contains(this.EdStudCheatIdSource))
				_tmp.EdStudCheatIdSource = existingCopies[this.EdStudCheatIdSource] as EdStudCheat;
			else
				_tmp.EdStudCheatIdSource = MakeCopyOf(this.EdStudCheatIdSource, existingCopies) as EdStudCheat;
			if (this.EdStudClrncReqIdSource != null && existingCopies.Contains(this.EdStudClrncReqIdSource))
				_tmp.EdStudClrncReqIdSource = existingCopies[this.EdStudClrncReqIdSource] as EdStudClrncReq;
			else
				_tmp.EdStudClrncReqIdSource = MakeCopyOf(this.EdStudClrncReqIdSource, existingCopies) as EdStudClrncReq;
			if (this.EdStudCourseChngIdSource != null && existingCopies.Contains(this.EdStudCourseChngIdSource))
				_tmp.EdStudCourseChngIdSource = existingCopies[this.EdStudCourseChngIdSource] as EdStudCourseChng;
			else
				_tmp.EdStudCourseChngIdSource = MakeCopyOf(this.EdStudCourseChngIdSource, existingCopies) as EdStudCourseChng;
			if (this.EdStudCourseGrdChngIdSource != null && existingCopies.Contains(this.EdStudCourseGrdChngIdSource))
				_tmp.EdStudCourseGrdChngIdSource = existingCopies[this.EdStudCourseGrdChngIdSource] as EdStudCourseGrdChng;
			else
				_tmp.EdStudCourseGrdChngIdSource = MakeCopyOf(this.EdStudCourseGrdChngIdSource, existingCopies) as EdStudCourseGrdChng;
			if (this.EdStudCourseRegIdSource != null && existingCopies.Contains(this.EdStudCourseRegIdSource))
				_tmp.EdStudCourseRegIdSource = existingCopies[this.EdStudCourseRegIdSource] as EdStudCourseReg;
			else
				_tmp.EdStudCourseRegIdSource = MakeCopyOf(this.EdStudCourseRegIdSource, existingCopies) as EdStudCourseReg;
			if (this.EdStudEnrollChangeIdSource != null && existingCopies.Contains(this.EdStudEnrollChangeIdSource))
				_tmp.EdStudEnrollChangeIdSource = existingCopies[this.EdStudEnrollChangeIdSource] as EdStudEnrollChange;
			else
				_tmp.EdStudEnrollChangeIdSource = MakeCopyOf(this.EdStudEnrollChangeIdSource, existingCopies) as EdStudEnrollChange;
			if (this.EdStudViolIdSource != null && existingCopies.Contains(this.EdStudViolIdSource))
				_tmp.EdStudViolIdSource = existingCopies[this.EdStudViolIdSource] as EdStudViol;
			else
				_tmp.EdStudViolIdSource = MakeCopyOf(this.EdStudViolIdSource, existingCopies) as EdStudViol;
			if (this.EdStudViolAppealIdSource != null && existingCopies.Contains(this.EdStudViolAppealIdSource))
				_tmp.EdStudViolAppealIdSource = existingCopies[this.EdStudViolAppealIdSource] as EdStudViolAppeal;
			else
				_tmp.EdStudViolAppealIdSource = MakeCopyOf(this.EdStudViolAppealIdSource, existingCopies) as EdStudViolAppeal;
			if (this.EdStudViolInvestIdSource != null && existingCopies.Contains(this.EdStudViolInvestIdSource))
				_tmp.EdStudViolInvestIdSource = existingCopies[this.EdStudViolInvestIdSource] as EdStudViol;
			else
				_tmp.EdStudViolInvestIdSource = MakeCopyOf(this.EdStudViolInvestIdSource, existingCopies) as EdStudViol;
			if (this.FeeStudDiscIdSource != null && existingCopies.Contains(this.FeeStudDiscIdSource))
				_tmp.FeeStudDiscIdSource = existingCopies[this.FeeStudDiscIdSource] as FeeStudDisc;
			else
				_tmp.FeeStudDiscIdSource = MakeCopyOf(this.FeeStudDiscIdSource, existingCopies) as FeeStudDisc;
			if (this.PgThesisStudIdSource != null && existingCopies.Contains(this.PgThesisStudIdSource))
				_tmp.PgThesisStudIdSource = existingCopies[this.PgThesisStudIdSource] as PgThesisStud;
			else
				_tmp.PgThesisStudIdSource = MakeCopyOf(this.PgThesisStudIdSource, existingCopies) as PgThesisStud;
			if (this.SvMessageIdSource != null && existingCopies.Contains(this.SvMessageIdSource))
				_tmp.SvMessageIdSource = existingCopies[this.SvMessageIdSource] as SvMessage;
			else
				_tmp.SvMessageIdSource = MakeCopyOf(this.SvMessageIdSource, existingCopies) as SvMessage;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GsAttchdDocColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(GsAttchdDocColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GsAttchdDocColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(GsAttchdDocColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GsAttchdDocColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(GsAttchdDocColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				GsAttchdDocEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new GsAttchdDocEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="GsAttchdDocColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(GsAttchdDocColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				GsAttchdDocEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new GsAttchdDocEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region GsAttchdDocEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="GsAttchdDoc"/> object.
	/// </remarks>
	public class GsAttchdDocEventArgs : System.EventArgs
	{
		private GsAttchdDocColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the GsAttchdDocEventArgs class.
		///</summary>
		public GsAttchdDocEventArgs(GsAttchdDocColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the GsAttchdDocEventArgs class.
		///</summary>
		public GsAttchdDocEventArgs(GsAttchdDocColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The GsAttchdDocColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="GsAttchdDocColumn" />
		public GsAttchdDocColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all GsAttchdDoc related events.
	///</summary>
	public delegate void GsAttchdDocEventHandler(object sender, GsAttchdDocEventArgs e);
	
	#region GsAttchdDocComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class GsAttchdDocComparer : System.Collections.Generic.IComparer<GsAttchdDoc>
	{
		GsAttchdDocColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:GsAttchdDocComparer"/> class.
        /// </summary>
		public GsAttchdDocComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:GsAttchdDocComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public GsAttchdDocComparer(GsAttchdDocColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="GsAttchdDoc"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="GsAttchdDoc"/> to compare.</param>
        /// <param name="b">The second <c>GsAttchdDoc</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(GsAttchdDoc a, GsAttchdDoc b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(GsAttchdDoc entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(GsAttchdDoc a, GsAttchdDoc b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public GsAttchdDocColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region GsAttchdDocKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="GsAttchdDoc"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class GsAttchdDocKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the GsAttchdDocKey class.
		/// </summary>
		public GsAttchdDocKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the GsAttchdDocKey class.
		/// </summary>
		public GsAttchdDocKey(GsAttchdDocBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.GsAttchdDocId = entity.GsAttchdDocId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the GsAttchdDocKey class.
		/// </summary>
		public GsAttchdDocKey(System.Decimal _gsAttchdDocId)
		{
			#region Init Properties

			this.GsAttchdDocId = _gsAttchdDocId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private GsAttchdDocBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public GsAttchdDocBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the GsAttchdDocId property
		private System.Decimal _gsAttchdDocId;
		
		/// <summary>
		/// Gets or sets the GsAttchdDocId property.
		/// </summary>
		public System.Decimal GsAttchdDocId
		{
			get { return _gsAttchdDocId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.GsAttchdDocId = value;
				
				_gsAttchdDocId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				GsAttchdDocId = ( values["GsAttchdDocId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["GsAttchdDocId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("GsAttchdDocId", GsAttchdDocId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("GsAttchdDocId: {0}{1}",
								GsAttchdDocId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region GsAttchdDocColumn Enum
	
	/// <summary>
	/// Enumerate the GsAttchdDoc columns.
	/// </summary>
	[Serializable]
	public enum GsAttchdDocColumn : int
	{
		/// <summary>
		/// GsAttchdDocId : 
		/// </summary>
		[EnumTextValue("GS_ATTCHD_DOC_ID")]
		[ColumnEnum("GS_ATTCHD_DOC_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		GsAttchdDocId = 1,
		/// <summary>
		/// EdStudEnrollChangeId : مسلسل تغيير حالة قيد طالب
		/// </summary>
		[EnumTextValue("ED_STUD_ENROLL_CHANGE_ID")]
		[ColumnEnum("ED_STUD_ENROLL_CHANGE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudEnrollChangeId = 2,
		/// <summary>
		/// EdStudCheatId : 
		/// </summary>
		[EnumTextValue("ED_STUD_CHEAT_ID")]
		[ColumnEnum("ED_STUD_CHEAT_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudCheatId = 3,
		/// <summary>
		/// AdmAppPlacementExamId : XX
		/// </summary>
		[EnumTextValue("ADM_APP_PLACEMENT_EXAM_ID")]
		[ColumnEnum("ADM_APP_PLACEMENT_EXAM_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmAppPlacementExamId = 4,
		/// <summary>
		/// AdmAppHonorId : XX
		/// </summary>
		[EnumTextValue("ADM_APP_HONOR_ID")]
		[ColumnEnum("ADM_APP_HONOR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmAppHonorId = 5,
		/// <summary>
		/// AdmAppInfoId : 
		/// </summary>
		[EnumTextValue("ADM_APP_INFO_ID")]
		[ColumnEnum("ADM_APP_INFO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmAppInfoId = 6,
		/// <summary>
		/// SvMessageId : 
		/// </summary>
		[EnumTextValue("SV_MESSAGE_ID")]
		[ColumnEnum("SV_MESSAGE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SvMessageId = 7,
		/// <summary>
		/// EdStudCourseRegId : 
		/// </summary>
		[EnumTextValue("ED_STUD_COURSE_REG_ID")]
		[ColumnEnum("ED_STUD_COURSE_REG_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudCourseRegId = 8,
		/// <summary>
		/// FeeStudDiscId : 
		/// </summary>
		[EnumTextValue("FEE_STUD_DISC_ID")]
		[ColumnEnum("FEE_STUD_DISC_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FeeStudDiscId = 9,
		/// <summary>
		/// EdExamStudAbsenceId : 
		/// </summary>
		[EnumTextValue("ED_EXAM_STUD_ABSENCE_ID")]
		[ColumnEnum("ED_EXAM_STUD_ABSENCE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdExamStudAbsenceId = 10,
		/// <summary>
		/// EdStudCourseChngId : 
		/// </summary>
		[EnumTextValue("ED_STUD_COURSE_CHNG_ID")]
		[ColumnEnum("ED_STUD_COURSE_CHNG_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudCourseChngId = 11,
		/// <summary>
		/// EdStudCourseGrdChngId : 
		/// </summary>
		[EnumTextValue("ED_STUD_COURSE_GRD_CHNG_ID")]
		[ColumnEnum("ED_STUD_COURSE_GRD_CHNG_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudCourseGrdChngId = 12,
		/// <summary>
		/// EdStudClrncReqId : 
		/// </summary>
		[EnumTextValue("ED_STUD_CLRNC_REQ_ID")]
		[ColumnEnum("ED_STUD_CLRNC_REQ_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudClrncReqId = 13,
		/// <summary>
		/// EdStudViolId : المخالفة
		/// </summary>
		[EnumTextValue("ED_STUD_VIOL_ID")]
		[ColumnEnum("ED_STUD_VIOL_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudViolId = 14,
		/// <summary>
		/// EdStudViolInvestId : مجلس التأديب
		/// </summary>
		[EnumTextValue("ED_STUD_VIOL_INVEST_ID")]
		[ColumnEnum("ED_STUD_VIOL_INVEST_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudViolInvestId = 15,
		/// <summary>
		/// EdStudViolAppealId : التظلم
		/// </summary>
		[EnumTextValue("ED_STUD_VIOL_APPEAL_ID")]
		[ColumnEnum("ED_STUD_VIOL_APPEAL_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudViolAppealId = 16,
		/// <summary>
		/// AttchdDocPath : XXXالمرفق مسار المستند
		/// </summary>
		[EnumTextValue("ATTCHD_DOC_PATH")]
		[ColumnEnum("ATTCHD_DOC_PATH", typeof(System.String), System.Data.DbType.String, false, false, false)]
		AttchdDocPath = 17,
		/// <summary>
		/// DocNotes : 
		/// </summary>
		[EnumTextValue("DOC_NOTES")]
		[ColumnEnum("DOC_NOTES", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		DocNotes = 18,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 19,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 20,
		/// <summary>
		/// OrgDocAttached : تم تسليم أصل الوثيقه 
		/// </summary>
		[EnumTextValue("ORG_DOC_ATTACHED")]
		[ColumnEnum("ORG_DOC_ATTACHED", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		OrgDocAttached = 21,
		/// <summary>
		/// PgThesisStudId : 
		/// </summary>
		[EnumTextValue("PG_THESIS_STUD_ID")]
		[ColumnEnum("PG_THESIS_STUD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PgThesisStudId = 22,
		/// <summary>
		/// EdGraduationAwardId : 
		/// </summary>
		[EnumTextValue("ED_GRADUATION_AWARD_ID")]
		[ColumnEnum("ED_GRADUATION_AWARD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdGraduationAwardId = 23
	}//End enum

	#endregion GsAttchdDocColumn Enum

} // end namespace
