
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file PgExtMember.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// بيانات المشرفين / المحكمين الخارجيين	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class PgExtMemberBase : EntityBase, IPgExtMember, IEntityId<PgExtMemberKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private PgExtMemberEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private PgExtMemberEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private PgExtMemberEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<PgExtMember> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event PgExtMemberEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event PgExtMemberEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="PgExtMemberBase"/> instance.
		///</summary>
		public PgExtMemberBase()
		{
			this.entityData = new PgExtMemberEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="PgExtMemberBase"/> instance.
		///</summary>
		///<param name="_pgExtMemberId">مسلسل مشرف/محكم خارجى</param>
		///<param name="_memberCode">كود  المشرف الخارجي</param>
		///<param name="_memberNameAr">اسم  المشرف الخارجي</param>
		///<param name="_memberNameEn">اسم  المشرف الخارجي</param>
		///<param name="_gsCodeGenderId">النوع (ذكر أو انثى)</param>
		///<param name="_memberJob">المسمى الوظيفي</param>
		///<param name="_memberHireDate">تاريخ التعيين للعضو</param>
		///<param name="_workPlaceType">نوع جهة العمل جامعة = 0 / جهة = 1</param>
		///<param name="_saCodeScDegId">الدرجة العلمية</param>
		///<param name="_saCodeOrgId">XXX'جهة العمل'XX</param>
		///<param name="_gsCdeUniversitiesId">اسم الجامعه</param>
		///<param name="_gsCountryInfoId">الجنسية</param>
		///<param name="_address">العنوان</param>
		///<param name="_eMail">البريد الاكترونى</param>
		///<param name="_mobNum">رقم الموبيل</param>
		///<param name="_gsCodeIdentTypeId">نوع تحقيق الشخصية</param>
		///<param name="_identNumber">رقم تحقيق الشخصية</param>
		///<param name="_memberQualMajorAr">والمؤهل التخصص</param>
		///<param name="_notes"></param>
		///<param name="_isActive">default=1</param>
		///<param name="_lastDate"></param>
		///<param name="_seUserId"></param>
		public PgExtMemberBase(System.Decimal _pgExtMemberId, System.String _memberCode, 
			System.String _memberNameAr, System.String _memberNameEn, System.Decimal _gsCodeGenderId, 
			System.String _memberJob, System.DateTime? _memberHireDate, System.Decimal _workPlaceType, 
			System.Decimal _saCodeScDegId, System.Decimal? _saCodeOrgId, System.Decimal? _gsCdeUniversitiesId, 
			System.Decimal? _gsCountryInfoId, System.String _address, System.String _eMail, System.String _mobNum, 
			System.Decimal? _gsCodeIdentTypeId, System.String _identNumber, System.String _memberQualMajorAr, 
			System.String _notes, System.Boolean? _isActive, System.DateTime? _lastDate, System.Decimal? _seUserId)
		{
			this.entityData = new PgExtMemberEntityData();
			this.backupData = null;

			this.PgExtMemberId = _pgExtMemberId;
			this.MemberCode = _memberCode;
			this.MemberNameAr = _memberNameAr;
			this.MemberNameEn = _memberNameEn;
			this.GsCodeGenderId = _gsCodeGenderId;
			this.MemberJob = _memberJob;
			this.MemberHireDate = _memberHireDate;
			this.WorkPlaceType = _workPlaceType;
			this.SaCodeScDegId = _saCodeScDegId;
			this.SaCodeOrgId = _saCodeOrgId;
			this.GsCdeUniversitiesId = _gsCdeUniversitiesId;
			this.GsCountryInfoId = _gsCountryInfoId;
			this.Address = _address;
			this.EMail = _eMail;
			this.MobNum = _mobNum;
			this.GsCodeIdentTypeId = _gsCodeIdentTypeId;
			this.IdentNumber = _identNumber;
			this.MemberQualMajorAr = _memberQualMajorAr;
			this.Notes = _notes;
			this.IsActive = _isActive;
			this.LastDate = _lastDate;
			this.SeUserId = _seUserId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="PgExtMember"/> instance.
		///</summary>
		///<param name="_pgExtMemberId">مسلسل مشرف/محكم خارجى</param>
		///<param name="_memberCode">كود  المشرف الخارجي</param>
		///<param name="_memberNameAr">اسم  المشرف الخارجي</param>
		///<param name="_memberNameEn">اسم  المشرف الخارجي</param>
		///<param name="_gsCodeGenderId">النوع (ذكر أو انثى)</param>
		///<param name="_memberJob">المسمى الوظيفي</param>
		///<param name="_memberHireDate">تاريخ التعيين للعضو</param>
		///<param name="_workPlaceType">نوع جهة العمل جامعة = 0 / جهة = 1</param>
		///<param name="_saCodeScDegId">الدرجة العلمية</param>
		///<param name="_saCodeOrgId">XXX'جهة العمل'XX</param>
		///<param name="_gsCdeUniversitiesId">اسم الجامعه</param>
		///<param name="_gsCountryInfoId">الجنسية</param>
		///<param name="_address">العنوان</param>
		///<param name="_eMail">البريد الاكترونى</param>
		///<param name="_mobNum">رقم الموبيل</param>
		///<param name="_gsCodeIdentTypeId">نوع تحقيق الشخصية</param>
		///<param name="_identNumber">رقم تحقيق الشخصية</param>
		///<param name="_memberQualMajorAr">والمؤهل التخصص</param>
		///<param name="_notes"></param>
		///<param name="_isActive">default=1</param>
		///<param name="_lastDate"></param>
		///<param name="_seUserId"></param>
		public static PgExtMember CreatePgExtMember(System.Decimal _pgExtMemberId, System.String _memberCode, 
			System.String _memberNameAr, System.String _memberNameEn, System.Decimal _gsCodeGenderId, 
			System.String _memberJob, System.DateTime? _memberHireDate, System.Decimal _workPlaceType, 
			System.Decimal _saCodeScDegId, System.Decimal? _saCodeOrgId, System.Decimal? _gsCdeUniversitiesId, 
			System.Decimal? _gsCountryInfoId, System.String _address, System.String _eMail, System.String _mobNum, 
			System.Decimal? _gsCodeIdentTypeId, System.String _identNumber, System.String _memberQualMajorAr, 
			System.String _notes, System.Boolean? _isActive, System.DateTime? _lastDate, System.Decimal? _seUserId)
		{
			PgExtMember newPgExtMember = new PgExtMember();
			newPgExtMember.PgExtMemberId = _pgExtMemberId;
			newPgExtMember.MemberCode = _memberCode;
			newPgExtMember.MemberNameAr = _memberNameAr;
			newPgExtMember.MemberNameEn = _memberNameEn;
			newPgExtMember.GsCodeGenderId = _gsCodeGenderId;
			newPgExtMember.MemberJob = _memberJob;
			newPgExtMember.MemberHireDate = _memberHireDate;
			newPgExtMember.WorkPlaceType = _workPlaceType;
			newPgExtMember.SaCodeScDegId = _saCodeScDegId;
			newPgExtMember.SaCodeOrgId = _saCodeOrgId;
			newPgExtMember.GsCdeUniversitiesId = _gsCdeUniversitiesId;
			newPgExtMember.GsCountryInfoId = _gsCountryInfoId;
			newPgExtMember.Address = _address;
			newPgExtMember.EMail = _eMail;
			newPgExtMember.MobNum = _mobNum;
			newPgExtMember.GsCodeIdentTypeId = _gsCodeIdentTypeId;
			newPgExtMember.IdentNumber = _identNumber;
			newPgExtMember.MemberQualMajorAr = _memberQualMajorAr;
			newPgExtMember.Notes = _notes;
			newPgExtMember.IsActive = _isActive;
			newPgExtMember.LastDate = _lastDate;
			newPgExtMember.SeUserId = _seUserId;
			return newPgExtMember;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the PgExtMemberId property. 
		///		مسلسل مشرف/محكم خارجى
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"مسلسل مشرف/محكم خارجى"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal PgExtMemberId
		{
			get
			{
				return this.entityData.PgExtMemberId; 
			}
			
			set
			{
				if (this.entityData.PgExtMemberId == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.PgExtMemberId, this.entityData.PgExtMemberId);
				this.entityData.PgExtMemberId = value;
				this.EntityId.PgExtMemberId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.PgExtMemberId, this.entityData.PgExtMemberId);
				OnPropertyChanged("PgExtMemberId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the PG_EXT_MEMBER_ID property.
		///		مسلسل مشرف/محكم خارجى
		/// </summary>
		/// <remarks>This is the original value of the PG_EXT_MEMBER_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalPgExtMemberId
		{
			get { return this.entityData.OriginalPgExtMemberId; }
			set { this.entityData.OriginalPgExtMemberId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the MemberCode property. 
		///		كود  المشرف الخارجي
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"كود  المشرف الخارجي"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String MemberCode
		{
			get
			{
				return this.entityData.MemberCode; 
			}
			
			set
			{
				if (this.entityData.MemberCode == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.MemberCode, this.entityData.MemberCode);
				this.entityData.MemberCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.MemberCode, this.entityData.MemberCode);
				OnPropertyChanged("MemberCode");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MemberNameAr property. 
		///		اسم  المشرف الخارجي
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@"اسم  المشرف الخارجي"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 150)]
		public virtual System.String MemberNameAr
		{
			get
			{
				return this.entityData.MemberNameAr; 
			}
			
			set
			{
				if (this.entityData.MemberNameAr == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.MemberNameAr, this.entityData.MemberNameAr);
				this.entityData.MemberNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.MemberNameAr, this.entityData.MemberNameAr);
				OnPropertyChanged("MemberNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MemberNameEn property. 
		///		اسم  المشرف الخارجي
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"اسم  المشرف الخارجي"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String MemberNameEn
		{
			get
			{
				return this.entityData.MemberNameEn; 
			}
			
			set
			{
				if (this.entityData.MemberNameEn == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.MemberNameEn, this.entityData.MemberNameEn);
				this.entityData.MemberNameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.MemberNameEn, this.entityData.MemberNameEn);
				OnPropertyChanged("MemberNameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeGenderId property. 
		///		النوع (ذكر أو انثى)
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"النوع (ذكر أو انثى)"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal GsCodeGenderId
		{
			get
			{
				return this.entityData.GsCodeGenderId; 
			}
			
			set
			{
				if (this.entityData.GsCodeGenderId == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.GsCodeGenderId, this.entityData.GsCodeGenderId);
				this.entityData.GsCodeGenderId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.GsCodeGenderId, this.entityData.GsCodeGenderId);
				OnPropertyChanged("GsCodeGenderId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MemberJob property. 
		///		المسمى الوظيفي
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@"المسمى الوظيفي"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 250)]
		public virtual System.String MemberJob
		{
			get
			{
				return this.entityData.MemberJob; 
			}
			
			set
			{
				if (this.entityData.MemberJob == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.MemberJob, this.entityData.MemberJob);
				this.entityData.MemberJob = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.MemberJob, this.entityData.MemberJob);
				OnPropertyChanged("MemberJob");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MemberHireDate property. 
		///		تاريخ التعيين للعضو
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsMemberHireDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"تاريخ التعيين للعضو"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? MemberHireDate
		{
			get
			{
				return this.entityData.MemberHireDate; 
			}
			
			set
			{
				if (this.entityData.MemberHireDate == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.MemberHireDate, this.entityData.MemberHireDate);
				this.entityData.MemberHireDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.MemberHireDate, this.entityData.MemberHireDate);
				OnPropertyChanged("MemberHireDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WorkPlaceType property. 
		///		نوع جهة العمل جامعة = 0 / جهة = 1
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"نوع جهة العمل جامعة = 0 / جهة = 1"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal WorkPlaceType
		{
			get
			{
				return this.entityData.WorkPlaceType; 
			}
			
			set
			{
				if (this.entityData.WorkPlaceType == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.WorkPlaceType, this.entityData.WorkPlaceType);
				this.entityData.WorkPlaceType = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.WorkPlaceType, this.entityData.WorkPlaceType);
				OnPropertyChanged("WorkPlaceType");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SaCodeScDegId property. 
		///		الدرجة العلمية
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"الدرجة العلمية"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal SaCodeScDegId
		{
			get
			{
				return this.entityData.SaCodeScDegId; 
			}
			
			set
			{
				if (this.entityData.SaCodeScDegId == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.SaCodeScDegId, this.entityData.SaCodeScDegId);
				this.entityData.SaCodeScDegId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.SaCodeScDegId, this.entityData.SaCodeScDegId);
				OnPropertyChanged("SaCodeScDegId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SaCodeOrgId property. 
		///		XXX'جهة العمل'XX
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSaCodeOrgIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXX'جهة العمل'XX"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SaCodeOrgId
		{
			get
			{
				return this.entityData.SaCodeOrgId; 
			}
			
			set
			{
				if (this.entityData.SaCodeOrgId == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.SaCodeOrgId, this.entityData.SaCodeOrgId);
				this.entityData.SaCodeOrgId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.SaCodeOrgId, this.entityData.SaCodeOrgId);
				OnPropertyChanged("SaCodeOrgId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCdeUniversitiesId property. 
		///		اسم الجامعه
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCdeUniversitiesIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"اسم الجامعه"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCdeUniversitiesId
		{
			get
			{
				return this.entityData.GsCdeUniversitiesId; 
			}
			
			set
			{
				if (this.entityData.GsCdeUniversitiesId == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.GsCdeUniversitiesId, this.entityData.GsCdeUniversitiesId);
				this.entityData.GsCdeUniversitiesId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.GsCdeUniversitiesId, this.entityData.GsCdeUniversitiesId);
				OnPropertyChanged("GsCdeUniversitiesId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCountryInfoId property. 
		///		الجنسية
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCountryInfoIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"الجنسية"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCountryInfoId
		{
			get
			{
				return this.entityData.GsCountryInfoId; 
			}
			
			set
			{
				if (this.entityData.GsCountryInfoId == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.GsCountryInfoId, this.entityData.GsCountryInfoId);
				this.entityData.GsCountryInfoId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.GsCountryInfoId, this.entityData.GsCountryInfoId);
				OnPropertyChanged("GsCountryInfoId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Address property. 
		///		العنوان
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"العنوان"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 500)]
		public virtual System.String Address
		{
			get
			{
				return this.entityData.Address; 
			}
			
			set
			{
				if (this.entityData.Address == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.Address, this.entityData.Address);
				this.entityData.Address = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.Address, this.entityData.Address);
				OnPropertyChanged("Address");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EMail property. 
		///		البريد الاكترونى
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"البريد الاكترونى"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String EMail
		{
			get
			{
				return this.entityData.EMail; 
			}
			
			set
			{
				if (this.entityData.EMail == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.EMail, this.entityData.EMail);
				this.entityData.EMail = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.EMail, this.entityData.EMail);
				OnPropertyChanged("EMail");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MobNum property. 
		///		رقم الموبيل
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"رقم الموبيل"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String MobNum
		{
			get
			{
				return this.entityData.MobNum; 
			}
			
			set
			{
				if (this.entityData.MobNum == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.MobNum, this.entityData.MobNum);
				this.entityData.MobNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.MobNum, this.entityData.MobNum);
				OnPropertyChanged("MobNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeIdentTypeId property. 
		///		نوع تحقيق الشخصية
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeIdentTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"نوع تحقيق الشخصية"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeIdentTypeId
		{
			get
			{
				return this.entityData.GsCodeIdentTypeId; 
			}
			
			set
			{
				if (this.entityData.GsCodeIdentTypeId == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.GsCodeIdentTypeId, this.entityData.GsCodeIdentTypeId);
				this.entityData.GsCodeIdentTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.GsCodeIdentTypeId, this.entityData.GsCodeIdentTypeId);
				OnPropertyChanged("GsCodeIdentTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdentNumber property. 
		///		رقم تحقيق الشخصية
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"رقم تحقيق الشخصية"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String IdentNumber
		{
			get
			{
				return this.entityData.IdentNumber; 
			}
			
			set
			{
				if (this.entityData.IdentNumber == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.IdentNumber, this.entityData.IdentNumber);
				this.entityData.IdentNumber = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.IdentNumber, this.entityData.IdentNumber);
				OnPropertyChanged("IdentNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MemberQualMajorAr property. 
		///		والمؤهل التخصص
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"والمؤهل التخصص"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String MemberQualMajorAr
		{
			get
			{
				return this.entityData.MemberQualMajorAr; 
			}
			
			set
			{
				if (this.entityData.MemberQualMajorAr == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.MemberQualMajorAr, this.entityData.MemberQualMajorAr);
				this.entityData.MemberQualMajorAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.MemberQualMajorAr, this.entityData.MemberQualMajorAr);
				OnPropertyChanged("MemberQualMajorAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Notes property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String Notes
		{
			get
			{
				return this.entityData.Notes; 
			}
			
			set
			{
				if (this.entityData.Notes == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.Notes, this.entityData.Notes);
				this.entityData.Notes = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.Notes, this.entityData.Notes);
				OnPropertyChanged("Notes");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IsActive property. 
		///		default=1
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsIsActiveNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"default=1"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? IsActive
		{
			get
			{
				return this.entityData.IsActive; 
			}
			
			set
			{
				if (this.entityData.IsActive == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.IsActive, this.entityData.IsActive);
				this.entityData.IsActive = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.IsActive, this.entityData.IsActive);
				OnPropertyChanged("IsActive");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(PgExtMemberColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgExtMemberColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="SaCodeScDeg"/>.
		/// </summary>
		/// <value>The source SaCodeScDeg for SaCodeScDegId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SaCodeScDeg SaCodeScDegIdSource
      	{
            get { return entityData.SaCodeScDegIdSource; }
            set { entityData.SaCodeScDegIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeUniversities"/>.
		/// </summary>
		/// <value>The source GsCdeUniversities for GsCdeUniversitiesId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeUniversities GsCdeUniversitiesIdSource
      	{
            get { return entityData.GsCdeUniversitiesIdSource; }
            set { entityData.GsCdeUniversitiesIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeGender"/>.
		/// </summary>
		/// <value>The source GsCodeGender for GsCodeGenderId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeGender GsCodeGenderIdSource
      	{
            get { return entityData.GsCodeGenderIdSource; }
            set { entityData.GsCodeGenderIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeIdentType"/>.
		/// </summary>
		/// <value>The source GsCodeIdentType for GsCodeIdentTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeIdentType GsCodeIdentTypeIdSource
      	{
            get { return entityData.GsCodeIdentTypeIdSource; }
            set { entityData.GsCodeIdentTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryInfoId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCountryNode GsCountryInfoIdSource
      	{
            get { return entityData.GsCountryInfoIdSource; }
            set { entityData.GsCountryInfoIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SaCodeOrg"/>.
		/// </summary>
		/// <value>The source SaCodeOrg for SaCodeOrgId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SaCodeOrg SaCodeOrgIdSource
      	{
            get { return entityData.SaCodeOrgIdSource; }
            set { entityData.SaCodeOrgIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of PgThesisStaff objects
		///	which are related to this object through the relation FK_PG_THESIS_STAFF_PG_EXT_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisStaff> PgThesisStaffCollection
		{
			get { return entityData.PgThesisStaffCollection; }
			set { entityData.PgThesisStaffCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgThesisCommMember objects
		///	which are related to this object through the relation FK_PG_THESIS_COMM_MEMBER_PG_EXT_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisCommMember> PgThesisCommMemberCollection
		{
			get { return entityData.PgThesisCommMemberCollection; }
			set { entityData.PgThesisCommMemberCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MemberCode", "Member Code", 10));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("MemberNameAr", "Member Name Ar"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MemberNameAr", "Member Name Ar", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MemberNameEn", "Member Name En", 150));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("MemberJob", "Member Job"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MemberJob", "Member Job", 250));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Address", "Address", 500));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("EMail", "E Mail", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MobNum", "Mob Num", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("IdentNumber", "Ident Number", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MemberQualMajorAr", "Member Qual Major Ar", 250));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Notes", "Notes", 250));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "PG_EXT_MEMBER"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"PG_EXT_MEMBER_ID", "MEMBER_CODE", "MEMBER_NAME_AR", "MEMBER_NAME_EN", "GS_CODE_GENDER_ID", "MEMBER_JOB", "MEMBER_HIRE_DATE", "WORK_PLACE_TYPE", "SA_CODE_SC_DEG_ID", "SA_CODE_ORG_ID", "GS_CDE_UNIVERSITIES_ID", "GS_COUNTRY_INFO_ID", "ADDRESS", "E_MAIL", "MOB_NUM", "GS_CODE_IDENT_TYPE_ID", "IDENT_NUMBER", "MEMBER_QUAL_MAJOR_AR", "NOTES", "IS_ACTIVE", "LAST_DATE", "SE_USER_ID"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as PgExtMemberEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (PgExtMember) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<PgExtMember>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as PgExtMember);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed PgExtMember Entity 
		///</summary>
		protected virtual PgExtMember Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			PgExtMember copy = new PgExtMember();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.PgExtMemberId = this.PgExtMemberId;
					copy.OriginalPgExtMemberId = this.OriginalPgExtMemberId;
				copy.MemberCode = this.MemberCode;
				copy.MemberNameAr = this.MemberNameAr;
				copy.MemberNameEn = this.MemberNameEn;
				copy.GsCodeGenderId = this.GsCodeGenderId;
				copy.MemberJob = this.MemberJob;
				copy.MemberHireDate = this.MemberHireDate;
				copy.WorkPlaceType = this.WorkPlaceType;
				copy.SaCodeScDegId = this.SaCodeScDegId;
				copy.SaCodeOrgId = this.SaCodeOrgId;
				copy.GsCdeUniversitiesId = this.GsCdeUniversitiesId;
				copy.GsCountryInfoId = this.GsCountryInfoId;
				copy.Address = this.Address;
				copy.EMail = this.EMail;
				copy.MobNum = this.MobNum;
				copy.GsCodeIdentTypeId = this.GsCodeIdentTypeId;
				copy.IdentNumber = this.IdentNumber;
				copy.MemberQualMajorAr = this.MemberQualMajorAr;
				copy.Notes = this.Notes;
				copy.IsActive = this.IsActive;
				copy.LastDate = this.LastDate;
				copy.SeUserId = this.SeUserId;
			
			if (this.SaCodeScDegIdSource != null && existingCopies.Contains(this.SaCodeScDegIdSource))
				copy.SaCodeScDegIdSource = existingCopies[this.SaCodeScDegIdSource] as SaCodeScDeg;
			else
				copy.SaCodeScDegIdSource = MakeCopyOf(this.SaCodeScDegIdSource, existingCopies) as SaCodeScDeg;
			if (this.GsCdeUniversitiesIdSource != null && existingCopies.Contains(this.GsCdeUniversitiesIdSource))
				copy.GsCdeUniversitiesIdSource = existingCopies[this.GsCdeUniversitiesIdSource] as GsCdeUniversities;
			else
				copy.GsCdeUniversitiesIdSource = MakeCopyOf(this.GsCdeUniversitiesIdSource, existingCopies) as GsCdeUniversities;
			if (this.GsCodeGenderIdSource != null && existingCopies.Contains(this.GsCodeGenderIdSource))
				copy.GsCodeGenderIdSource = existingCopies[this.GsCodeGenderIdSource] as GsCodeGender;
			else
				copy.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource, existingCopies) as GsCodeGender;
			if (this.GsCodeIdentTypeIdSource != null && existingCopies.Contains(this.GsCodeIdentTypeIdSource))
				copy.GsCodeIdentTypeIdSource = existingCopies[this.GsCodeIdentTypeIdSource] as GsCodeIdentType;
			else
				copy.GsCodeIdentTypeIdSource = MakeCopyOf(this.GsCodeIdentTypeIdSource, existingCopies) as GsCodeIdentType;
			if (this.GsCountryInfoIdSource != null && existingCopies.Contains(this.GsCountryInfoIdSource))
				copy.GsCountryInfoIdSource = existingCopies[this.GsCountryInfoIdSource] as GsCountryNode;
			else
				copy.GsCountryInfoIdSource = MakeCopyOf(this.GsCountryInfoIdSource, existingCopies) as GsCountryNode;
			if (this.SaCodeOrgIdSource != null && existingCopies.Contains(this.SaCodeOrgIdSource))
				copy.SaCodeOrgIdSource = existingCopies[this.SaCodeOrgIdSource] as SaCodeOrg;
			else
				copy.SaCodeOrgIdSource = MakeCopyOf(this.SaCodeOrgIdSource, existingCopies) as SaCodeOrg;
		
			//deep copy nested objects
			copy.PgThesisStaffCollection = (TList<PgThesisStaff>) MakeCopyOf(this.PgThesisStaffCollection, existingCopies); 
			copy.PgThesisCommMemberCollection = (TList<PgThesisCommMember>) MakeCopyOf(this.PgThesisCommMemberCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed PgExtMember Entity 
		///</summary>
		public virtual PgExtMember Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed PgExtMember Entity which is a deep copy of the current entity.
		///</summary>
		public virtual PgExtMember DeepCopy()
		{
			return EntityHelper.Clone<PgExtMember>(this as PgExtMember);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as PgExtMemberEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new PgExtMemberEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as PgExtMemberEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(PgExtMemberColumn column)
		{
			switch(column)
			{
					case PgExtMemberColumn.PgExtMemberId:
					return entityData.PgExtMemberId != _originalData.PgExtMemberId;
					case PgExtMemberColumn.MemberCode:
					return entityData.MemberCode != _originalData.MemberCode;
					case PgExtMemberColumn.MemberNameAr:
					return entityData.MemberNameAr != _originalData.MemberNameAr;
					case PgExtMemberColumn.MemberNameEn:
					return entityData.MemberNameEn != _originalData.MemberNameEn;
					case PgExtMemberColumn.GsCodeGenderId:
					return entityData.GsCodeGenderId != _originalData.GsCodeGenderId;
					case PgExtMemberColumn.MemberJob:
					return entityData.MemberJob != _originalData.MemberJob;
					case PgExtMemberColumn.MemberHireDate:
					return entityData.MemberHireDate != _originalData.MemberHireDate;
					case PgExtMemberColumn.WorkPlaceType:
					return entityData.WorkPlaceType != _originalData.WorkPlaceType;
					case PgExtMemberColumn.SaCodeScDegId:
					return entityData.SaCodeScDegId != _originalData.SaCodeScDegId;
					case PgExtMemberColumn.SaCodeOrgId:
					return entityData.SaCodeOrgId != _originalData.SaCodeOrgId;
					case PgExtMemberColumn.GsCdeUniversitiesId:
					return entityData.GsCdeUniversitiesId != _originalData.GsCdeUniversitiesId;
					case PgExtMemberColumn.GsCountryInfoId:
					return entityData.GsCountryInfoId != _originalData.GsCountryInfoId;
					case PgExtMemberColumn.Address:
					return entityData.Address != _originalData.Address;
					case PgExtMemberColumn.EMail:
					return entityData.EMail != _originalData.EMail;
					case PgExtMemberColumn.MobNum:
					return entityData.MobNum != _originalData.MobNum;
					case PgExtMemberColumn.GsCodeIdentTypeId:
					return entityData.GsCodeIdentTypeId != _originalData.GsCodeIdentTypeId;
					case PgExtMemberColumn.IdentNumber:
					return entityData.IdentNumber != _originalData.IdentNumber;
					case PgExtMemberColumn.MemberQualMajorAr:
					return entityData.MemberQualMajorAr != _originalData.MemberQualMajorAr;
					case PgExtMemberColumn.Notes:
					return entityData.Notes != _originalData.Notes;
					case PgExtMemberColumn.IsActive:
					return entityData.IsActive != _originalData.IsActive;
					case PgExtMemberColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
					case PgExtMemberColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< PgExtMemberColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.PgExtMemberId != _originalData.PgExtMemberId;
			result = result || entityData.MemberCode != _originalData.MemberCode;
			result = result || entityData.MemberNameAr != _originalData.MemberNameAr;
			result = result || entityData.MemberNameEn != _originalData.MemberNameEn;
			result = result || entityData.GsCodeGenderId != _originalData.GsCodeGenderId;
			result = result || entityData.MemberJob != _originalData.MemberJob;
			result = result || entityData.MemberHireDate != _originalData.MemberHireDate;
			result = result || entityData.WorkPlaceType != _originalData.WorkPlaceType;
			result = result || entityData.SaCodeScDegId != _originalData.SaCodeScDegId;
			result = result || entityData.SaCodeOrgId != _originalData.SaCodeOrgId;
			result = result || entityData.GsCdeUniversitiesId != _originalData.GsCdeUniversitiesId;
			result = result || entityData.GsCountryInfoId != _originalData.GsCountryInfoId;
			result = result || entityData.Address != _originalData.Address;
			result = result || entityData.EMail != _originalData.EMail;
			result = result || entityData.MobNum != _originalData.MobNum;
			result = result || entityData.GsCodeIdentTypeId != _originalData.GsCodeIdentTypeId;
			result = result || entityData.IdentNumber != _originalData.IdentNumber;
			result = result || entityData.MemberQualMajorAr != _originalData.MemberQualMajorAr;
			result = result || entityData.Notes != _originalData.Notes;
			result = result || entityData.IsActive != _originalData.IsActive;
			result = result || entityData.LastDate != _originalData.LastDate;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			return result;
		}	
		
		///<summary>
		///  Returns a PgExtMember Entity with the original data.
		///</summary>
		public PgExtMember GetOriginalEntity()
		{
			if (_originalData != null)
				return CreatePgExtMember(
				_originalData.PgExtMemberId,
				_originalData.MemberCode,
				_originalData.MemberNameAr,
				_originalData.MemberNameEn,
				_originalData.GsCodeGenderId,
				_originalData.MemberJob,
				_originalData.MemberHireDate,
				_originalData.WorkPlaceType,
				_originalData.SaCodeScDegId,
				_originalData.SaCodeOrgId,
				_originalData.GsCdeUniversitiesId,
				_originalData.GsCountryInfoId,
				_originalData.Address,
				_originalData.EMail,
				_originalData.MobNum,
				_originalData.GsCodeIdentTypeId,
				_originalData.IdentNumber,
				_originalData.MemberQualMajorAr,
				_originalData.Notes,
				_originalData.IsActive,
				_originalData.LastDate,
				_originalData.SeUserId
				);
				
			return (PgExtMember)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="PgExtMemberBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is PgExtMemberBase)
				return ValueEquals(this, (PgExtMemberBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="PgExtMemberBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.PgExtMemberId.GetHashCode() ^ 
					((this.MemberCode == null) ? string.Empty : this.MemberCode.ToString()).GetHashCode() ^ 
					this.MemberNameAr.GetHashCode() ^ 
					((this.MemberNameEn == null) ? string.Empty : this.MemberNameEn.ToString()).GetHashCode() ^ 
					this.GsCodeGenderId.GetHashCode() ^ 
					this.MemberJob.GetHashCode() ^ 
					((this.MemberHireDate == null) ? string.Empty : this.MemberHireDate.ToString()).GetHashCode() ^ 
					this.WorkPlaceType.GetHashCode() ^ 
					this.SaCodeScDegId.GetHashCode() ^ 
					((this.SaCodeOrgId == null) ? string.Empty : this.SaCodeOrgId.ToString()).GetHashCode() ^ 
					((this.GsCdeUniversitiesId == null) ? string.Empty : this.GsCdeUniversitiesId.ToString()).GetHashCode() ^ 
					((this.GsCountryInfoId == null) ? string.Empty : this.GsCountryInfoId.ToString()).GetHashCode() ^ 
					((this.Address == null) ? string.Empty : this.Address.ToString()).GetHashCode() ^ 
					((this.EMail == null) ? string.Empty : this.EMail.ToString()).GetHashCode() ^ 
					((this.MobNum == null) ? string.Empty : this.MobNum.ToString()).GetHashCode() ^ 
					((this.GsCodeIdentTypeId == null) ? string.Empty : this.GsCodeIdentTypeId.ToString()).GetHashCode() ^ 
					((this.IdentNumber == null) ? string.Empty : this.IdentNumber.ToString()).GetHashCode() ^ 
					((this.MemberQualMajorAr == null) ? string.Empty : this.MemberQualMajorAr.ToString()).GetHashCode() ^ 
					((this.Notes == null) ? string.Empty : this.Notes.ToString()).GetHashCode() ^ 
					((this.IsActive == null) ? string.Empty : this.IsActive.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="PgExtMemberBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(PgExtMemberBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="PgExtMemberBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="PgExtMemberBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="PgExtMemberBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(PgExtMemberBase Object1, PgExtMemberBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.PgExtMemberId != Object2.PgExtMemberId)
				equal = false;
			if ( Object1.MemberCode != null && Object2.MemberCode != null )
			{
				if (Object1.MemberCode != Object2.MemberCode)
					equal = false;
			}
			else if (Object1.MemberCode == null ^ Object2.MemberCode == null )
			{
				equal = false;
			}
			if (Object1.MemberNameAr != Object2.MemberNameAr)
				equal = false;
			if ( Object1.MemberNameEn != null && Object2.MemberNameEn != null )
			{
				if (Object1.MemberNameEn != Object2.MemberNameEn)
					equal = false;
			}
			else if (Object1.MemberNameEn == null ^ Object2.MemberNameEn == null )
			{
				equal = false;
			}
			if (Object1.GsCodeGenderId != Object2.GsCodeGenderId)
				equal = false;
			if (Object1.MemberJob != Object2.MemberJob)
				equal = false;
			if ( Object1.MemberHireDate != null && Object2.MemberHireDate != null )
			{
				if (Object1.MemberHireDate != Object2.MemberHireDate)
					equal = false;
			}
			else if (Object1.MemberHireDate == null ^ Object2.MemberHireDate == null )
			{
				equal = false;
			}
			if (Object1.WorkPlaceType != Object2.WorkPlaceType)
				equal = false;
			if (Object1.SaCodeScDegId != Object2.SaCodeScDegId)
				equal = false;
			if ( Object1.SaCodeOrgId != null && Object2.SaCodeOrgId != null )
			{
				if (Object1.SaCodeOrgId != Object2.SaCodeOrgId)
					equal = false;
			}
			else if (Object1.SaCodeOrgId == null ^ Object2.SaCodeOrgId == null )
			{
				equal = false;
			}
			if ( Object1.GsCdeUniversitiesId != null && Object2.GsCdeUniversitiesId != null )
			{
				if (Object1.GsCdeUniversitiesId != Object2.GsCdeUniversitiesId)
					equal = false;
			}
			else if (Object1.GsCdeUniversitiesId == null ^ Object2.GsCdeUniversitiesId == null )
			{
				equal = false;
			}
			if ( Object1.GsCountryInfoId != null && Object2.GsCountryInfoId != null )
			{
				if (Object1.GsCountryInfoId != Object2.GsCountryInfoId)
					equal = false;
			}
			else if (Object1.GsCountryInfoId == null ^ Object2.GsCountryInfoId == null )
			{
				equal = false;
			}
			if ( Object1.Address != null && Object2.Address != null )
			{
				if (Object1.Address != Object2.Address)
					equal = false;
			}
			else if (Object1.Address == null ^ Object2.Address == null )
			{
				equal = false;
			}
			if ( Object1.EMail != null && Object2.EMail != null )
			{
				if (Object1.EMail != Object2.EMail)
					equal = false;
			}
			else if (Object1.EMail == null ^ Object2.EMail == null )
			{
				equal = false;
			}
			if ( Object1.MobNum != null && Object2.MobNum != null )
			{
				if (Object1.MobNum != Object2.MobNum)
					equal = false;
			}
			else if (Object1.MobNum == null ^ Object2.MobNum == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeIdentTypeId != null && Object2.GsCodeIdentTypeId != null )
			{
				if (Object1.GsCodeIdentTypeId != Object2.GsCodeIdentTypeId)
					equal = false;
			}
			else if (Object1.GsCodeIdentTypeId == null ^ Object2.GsCodeIdentTypeId == null )
			{
				equal = false;
			}
			if ( Object1.IdentNumber != null && Object2.IdentNumber != null )
			{
				if (Object1.IdentNumber != Object2.IdentNumber)
					equal = false;
			}
			else if (Object1.IdentNumber == null ^ Object2.IdentNumber == null )
			{
				equal = false;
			}
			if ( Object1.MemberQualMajorAr != null && Object2.MemberQualMajorAr != null )
			{
				if (Object1.MemberQualMajorAr != Object2.MemberQualMajorAr)
					equal = false;
			}
			else if (Object1.MemberQualMajorAr == null ^ Object2.MemberQualMajorAr == null )
			{
				equal = false;
			}
			if ( Object1.Notes != null && Object2.Notes != null )
			{
				if (Object1.Notes != Object2.Notes)
					equal = false;
			}
			else if (Object1.Notes == null ^ Object2.Notes == null )
			{
				equal = false;
			}
			if ( Object1.IsActive != null && Object2.IsActive != null )
			{
				if (Object1.IsActive != Object2.IsActive)
					equal = false;
			}
			else if (Object1.IsActive == null ^ Object2.IsActive == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((PgExtMemberBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static PgExtMemberComparer GetComparer()
        {
            return new PgExtMemberComparer();
        }
        */

        // Comparer delegates back to PgExtMember
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(PgExtMember rhs, PgExtMemberColumn which)
        {
            switch (which)
            {
            	
            	
            	case PgExtMemberColumn.PgExtMemberId:
            		return this.PgExtMemberId.CompareTo(rhs.PgExtMemberId);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.MemberCode:
            		return this.MemberCode.CompareTo(rhs.MemberCode);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.MemberNameAr:
            		return this.MemberNameAr.CompareTo(rhs.MemberNameAr);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.MemberNameEn:
            		return this.MemberNameEn.CompareTo(rhs.MemberNameEn);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.GsCodeGenderId:
            		return this.GsCodeGenderId.CompareTo(rhs.GsCodeGenderId);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.MemberJob:
            		return this.MemberJob.CompareTo(rhs.MemberJob);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.MemberHireDate:
            		return this.MemberHireDate.Value.CompareTo(rhs.MemberHireDate.Value);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.WorkPlaceType:
            		return this.WorkPlaceType.CompareTo(rhs.WorkPlaceType);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.SaCodeScDegId:
            		return this.SaCodeScDegId.CompareTo(rhs.SaCodeScDegId);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.SaCodeOrgId:
            		return this.SaCodeOrgId.Value.CompareTo(rhs.SaCodeOrgId.Value);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.GsCdeUniversitiesId:
            		return this.GsCdeUniversitiesId.Value.CompareTo(rhs.GsCdeUniversitiesId.Value);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.GsCountryInfoId:
            		return this.GsCountryInfoId.Value.CompareTo(rhs.GsCountryInfoId.Value);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.Address:
            		return this.Address.CompareTo(rhs.Address);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.EMail:
            		return this.EMail.CompareTo(rhs.EMail);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.MobNum:
            		return this.MobNum.CompareTo(rhs.MobNum);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.GsCodeIdentTypeId:
            		return this.GsCodeIdentTypeId.Value.CompareTo(rhs.GsCodeIdentTypeId.Value);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.IdentNumber:
            		return this.IdentNumber.CompareTo(rhs.IdentNumber);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.MemberQualMajorAr:
            		return this.MemberQualMajorAr.CompareTo(rhs.MemberQualMajorAr);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.Notes:
            		return this.Notes.CompareTo(rhs.Notes);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.IsActive:
            		return this.IsActive.Value.CompareTo(rhs.IsActive.Value);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            	
            	
            	case PgExtMemberColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<PgExtMemberKey> Members
		
		// member variable for the EntityId property
		private PgExtMemberKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual PgExtMemberKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new PgExtMemberKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("PgExtMember")
					.Append("|").Append( this.PgExtMemberId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{23}{22}- PgExtMemberId: {0}{22}- MemberCode: {1}{22}- MemberNameAr: {2}{22}- MemberNameEn: {3}{22}- GsCodeGenderId: {4}{22}- MemberJob: {5}{22}- MemberHireDate: {6}{22}- WorkPlaceType: {7}{22}- SaCodeScDegId: {8}{22}- SaCodeOrgId: {9}{22}- GsCdeUniversitiesId: {10}{22}- GsCountryInfoId: {11}{22}- Address: {12}{22}- EMail: {13}{22}- MobNum: {14}{22}- GsCodeIdentTypeId: {15}{22}- IdentNumber: {16}{22}- MemberQualMajorAr: {17}{22}- Notes: {18}{22}- IsActive: {19}{22}- LastDate: {20}{22}- SeUserId: {21}{22}{24}", 
				this.PgExtMemberId,
				(this.MemberCode == null) ? string.Empty : this.MemberCode.ToString(),
				this.MemberNameAr,
				(this.MemberNameEn == null) ? string.Empty : this.MemberNameEn.ToString(),
				this.GsCodeGenderId,
				this.MemberJob,
				(this.MemberHireDate == null) ? string.Empty : this.MemberHireDate.ToString(),
				this.WorkPlaceType,
				this.SaCodeScDegId,
				(this.SaCodeOrgId == null) ? string.Empty : this.SaCodeOrgId.ToString(),
				(this.GsCdeUniversitiesId == null) ? string.Empty : this.GsCdeUniversitiesId.ToString(),
				(this.GsCountryInfoId == null) ? string.Empty : this.GsCountryInfoId.ToString(),
				(this.Address == null) ? string.Empty : this.Address.ToString(),
				(this.EMail == null) ? string.Empty : this.EMail.ToString(),
				(this.MobNum == null) ? string.Empty : this.MobNum.ToString(),
				(this.GsCodeIdentTypeId == null) ? string.Empty : this.GsCodeIdentTypeId.ToString(),
				(this.IdentNumber == null) ? string.Empty : this.IdentNumber.ToString(),
				(this.MemberQualMajorAr == null) ? string.Empty : this.MemberQualMajorAr.ToString(),
				(this.Notes == null) ? string.Empty : this.Notes.ToString(),
				(this.IsActive == null) ? string.Empty : this.IsActive.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'PG_EXT_MEMBER' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class PgExtMemberEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// PG_EXT_MEMBER_ID : مسلسل مشرف/محكم خارجى
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "PG_EXT_MEMBER"</remarks>
		public System.Decimal PgExtMemberId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalPgExtMemberId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// MEMBER_CODE : كود  المشرف الخارجي
		/// </summary>
		public System.String		  MemberCode = null;
		
		/// <summary>
		/// MEMBER_NAME_AR : اسم  المشرف الخارجي
		/// </summary>
		public System.String		  MemberNameAr = string.Empty;
		
		/// <summary>
		/// MEMBER_NAME_EN : اسم  المشرف الخارجي
		/// </summary>
		public System.String		  MemberNameEn = null;
		
		/// <summary>
		/// GS_CODE_GENDER_ID : النوع (ذكر أو انثى)
		/// </summary>
		public System.Decimal		  GsCodeGenderId = 0.0m;
		
		/// <summary>
		/// MEMBER_JOB : المسمى الوظيفي
		/// </summary>
		public System.String		  MemberJob = string.Empty;
		
		/// <summary>
		/// MEMBER_HIRE_DATE : تاريخ التعيين للعضو
		/// </summary>
		public System.DateTime?		  MemberHireDate = null;
		
		/// <summary>
		/// WORK_PLACE_TYPE : نوع جهة العمل جامعة = 0 / جهة = 1
		/// </summary>
		public System.Decimal		  WorkPlaceType = 0.0m;
		
		/// <summary>
		/// SA_CODE_SC_DEG_ID : الدرجة العلمية
		/// </summary>
		public System.Decimal		  SaCodeScDegId = 0.0m;
		
		/// <summary>
		/// SA_CODE_ORG_ID : XXX'جهة العمل'XX
		/// </summary>
		public System.Decimal?		  SaCodeOrgId = null;
		
		/// <summary>
		/// GS_CDE_UNIVERSITIES_ID : اسم الجامعه
		/// </summary>
		public System.Decimal?		  GsCdeUniversitiesId = null;
		
		/// <summary>
		/// GS_COUNTRY_INFO_ID : الجنسية
		/// </summary>
		public System.Decimal?		  GsCountryInfoId = null;
		
		/// <summary>
		/// ADDRESS : العنوان
		/// </summary>
		public System.String		  Address = null;
		
		/// <summary>
		/// E_MAIL : البريد الاكترونى
		/// </summary>
		public System.String		  EMail = null;
		
		/// <summary>
		/// MOB_NUM : رقم الموبيل
		/// </summary>
		public System.String		  MobNum = null;
		
		/// <summary>
		/// GS_CODE_IDENT_TYPE_ID : نوع تحقيق الشخصية
		/// </summary>
		public System.Decimal?		  GsCodeIdentTypeId = null;
		
		/// <summary>
		/// IDENT_NUMBER : رقم تحقيق الشخصية
		/// </summary>
		public System.String		  IdentNumber = null;
		
		/// <summary>
		/// MEMBER_QUAL_MAJOR_AR : والمؤهل التخصص
		/// </summary>
		public System.String		  MemberQualMajorAr = null;
		
		/// <summary>
		/// NOTES : 
		/// </summary>
		public System.String		  Notes = null;
		
		/// <summary>
		/// IS_ACTIVE : default=1
		/// </summary>
		public System.Boolean?		  IsActive = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private SaCodeScDeg _saCodeScDegIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SaCodeScDeg"/>.
		/// </summary>
		/// <value>The source SaCodeScDeg for SaCodeScDegId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SaCodeScDeg SaCodeScDegIdSource
      	{
            get { return this._saCodeScDegIdSource; }
            set { this._saCodeScDegIdSource = value; }
      	}
		private GsCdeUniversities _gsCdeUniversitiesIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeUniversities"/>.
		/// </summary>
		/// <value>The source GsCdeUniversities for GsCdeUniversitiesId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeUniversities GsCdeUniversitiesIdSource
      	{
            get { return this._gsCdeUniversitiesIdSource; }
            set { this._gsCdeUniversitiesIdSource = value; }
      	}
		private GsCodeGender _gsCodeGenderIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeGender"/>.
		/// </summary>
		/// <value>The source GsCodeGender for GsCodeGenderId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeGender GsCodeGenderIdSource
      	{
            get { return this._gsCodeGenderIdSource; }
            set { this._gsCodeGenderIdSource = value; }
      	}
		private GsCodeIdentType _gsCodeIdentTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeIdentType"/>.
		/// </summary>
		/// <value>The source GsCodeIdentType for GsCodeIdentTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeIdentType GsCodeIdentTypeIdSource
      	{
            get { return this._gsCodeIdentTypeIdSource; }
            set { this._gsCodeIdentTypeIdSource = value; }
      	}
		private GsCountryNode _gsCountryInfoIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryInfoId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCountryNode GsCountryInfoIdSource
      	{
            get { return this._gsCountryInfoIdSource; }
            set { this._gsCountryInfoIdSource = value; }
      	}
		private SaCodeOrg _saCodeOrgIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SaCodeOrg"/>.
		/// </summary>
		/// <value>The source SaCodeOrg for SaCodeOrgId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SaCodeOrg SaCodeOrgIdSource
      	{
            get { return this._saCodeOrgIdSource; }
            set { this._saCodeOrgIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region PgThesisStaffCollection
		
		private TList<PgThesisStaff> _pgThesisStaffPgExtMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisStaffPgExtMemberId
		/// </summary>
		
		public TList<PgThesisStaff> PgThesisStaffCollection
		{
			get
			{
				if (_pgThesisStaffPgExtMemberId == null)
				{
				_pgThesisStaffPgExtMemberId = new TList<PgThesisStaff>();
				}
	
				return _pgThesisStaffPgExtMemberId;
			}
			set { _pgThesisStaffPgExtMemberId = value; }
		}
		
		#endregion

		#region PgThesisCommMemberCollection
		
		private TList<PgThesisCommMember> _pgThesisCommMemberPgExtMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisCommMemberPgExtMemberId
		/// </summary>
		
		public TList<PgThesisCommMember> PgThesisCommMemberCollection
		{
			get
			{
				if (_pgThesisCommMemberPgExtMemberId == null)
				{
				_pgThesisCommMemberPgExtMemberId = new TList<PgThesisCommMember>();
				}
	
				return _pgThesisCommMemberPgExtMemberId;
			}
			set { _pgThesisCommMemberPgExtMemberId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			PgExtMemberEntityData _tmp = new PgExtMemberEntityData();
						
			_tmp.PgExtMemberId = this.PgExtMemberId;
			_tmp.OriginalPgExtMemberId = this.OriginalPgExtMemberId;
			
			_tmp.MemberCode = this.MemberCode;
			_tmp.MemberNameAr = this.MemberNameAr;
			_tmp.MemberNameEn = this.MemberNameEn;
			_tmp.GsCodeGenderId = this.GsCodeGenderId;
			_tmp.MemberJob = this.MemberJob;
			_tmp.MemberHireDate = this.MemberHireDate;
			_tmp.WorkPlaceType = this.WorkPlaceType;
			_tmp.SaCodeScDegId = this.SaCodeScDegId;
			_tmp.SaCodeOrgId = this.SaCodeOrgId;
			_tmp.GsCdeUniversitiesId = this.GsCdeUniversitiesId;
			_tmp.GsCountryInfoId = this.GsCountryInfoId;
			_tmp.Address = this.Address;
			_tmp.EMail = this.EMail;
			_tmp.MobNum = this.MobNum;
			_tmp.GsCodeIdentTypeId = this.GsCodeIdentTypeId;
			_tmp.IdentNumber = this.IdentNumber;
			_tmp.MemberQualMajorAr = this.MemberQualMajorAr;
			_tmp.Notes = this.Notes;
			_tmp.IsActive = this.IsActive;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserId = this.SeUserId;
			
			#region Source Parent Composite Entities
			if (this.SaCodeScDegIdSource != null)
				_tmp.SaCodeScDegIdSource = MakeCopyOf(this.SaCodeScDegIdSource) as SaCodeScDeg;
			if (this.GsCdeUniversitiesIdSource != null)
				_tmp.GsCdeUniversitiesIdSource = MakeCopyOf(this.GsCdeUniversitiesIdSource) as GsCdeUniversities;
			if (this.GsCodeGenderIdSource != null)
				_tmp.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource) as GsCodeGender;
			if (this.GsCodeIdentTypeIdSource != null)
				_tmp.GsCodeIdentTypeIdSource = MakeCopyOf(this.GsCodeIdentTypeIdSource) as GsCodeIdentType;
			if (this.GsCountryInfoIdSource != null)
				_tmp.GsCountryInfoIdSource = MakeCopyOf(this.GsCountryInfoIdSource) as GsCountryNode;
			if (this.SaCodeOrgIdSource != null)
				_tmp.SaCodeOrgIdSource = MakeCopyOf(this.SaCodeOrgIdSource) as SaCodeOrg;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._pgThesisStaffPgExtMemberId != null)
				_tmp.PgThesisStaffCollection = (TList<PgThesisStaff>) MakeCopyOf(this.PgThesisStaffCollection); 
			if (this._pgThesisCommMemberPgExtMemberId != null)
				_tmp.PgThesisCommMemberCollection = (TList<PgThesisCommMember>) MakeCopyOf(this.PgThesisCommMemberCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			PgExtMemberEntityData _tmp = new PgExtMemberEntityData();
						
			_tmp.PgExtMemberId = this.PgExtMemberId;
			_tmp.OriginalPgExtMemberId = this.OriginalPgExtMemberId;
			
			_tmp.MemberCode = this.MemberCode;
			_tmp.MemberNameAr = this.MemberNameAr;
			_tmp.MemberNameEn = this.MemberNameEn;
			_tmp.GsCodeGenderId = this.GsCodeGenderId;
			_tmp.MemberJob = this.MemberJob;
			_tmp.MemberHireDate = this.MemberHireDate;
			_tmp.WorkPlaceType = this.WorkPlaceType;
			_tmp.SaCodeScDegId = this.SaCodeScDegId;
			_tmp.SaCodeOrgId = this.SaCodeOrgId;
			_tmp.GsCdeUniversitiesId = this.GsCdeUniversitiesId;
			_tmp.GsCountryInfoId = this.GsCountryInfoId;
			_tmp.Address = this.Address;
			_tmp.EMail = this.EMail;
			_tmp.MobNum = this.MobNum;
			_tmp.GsCodeIdentTypeId = this.GsCodeIdentTypeId;
			_tmp.IdentNumber = this.IdentNumber;
			_tmp.MemberQualMajorAr = this.MemberQualMajorAr;
			_tmp.Notes = this.Notes;
			_tmp.IsActive = this.IsActive;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserId = this.SeUserId;
			
			#region Source Parent Composite Entities
			if (this.SaCodeScDegIdSource != null && existingCopies.Contains(this.SaCodeScDegIdSource))
				_tmp.SaCodeScDegIdSource = existingCopies[this.SaCodeScDegIdSource] as SaCodeScDeg;
			else
				_tmp.SaCodeScDegIdSource = MakeCopyOf(this.SaCodeScDegIdSource, existingCopies) as SaCodeScDeg;
			if (this.GsCdeUniversitiesIdSource != null && existingCopies.Contains(this.GsCdeUniversitiesIdSource))
				_tmp.GsCdeUniversitiesIdSource = existingCopies[this.GsCdeUniversitiesIdSource] as GsCdeUniversities;
			else
				_tmp.GsCdeUniversitiesIdSource = MakeCopyOf(this.GsCdeUniversitiesIdSource, existingCopies) as GsCdeUniversities;
			if (this.GsCodeGenderIdSource != null && existingCopies.Contains(this.GsCodeGenderIdSource))
				_tmp.GsCodeGenderIdSource = existingCopies[this.GsCodeGenderIdSource] as GsCodeGender;
			else
				_tmp.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource, existingCopies) as GsCodeGender;
			if (this.GsCodeIdentTypeIdSource != null && existingCopies.Contains(this.GsCodeIdentTypeIdSource))
				_tmp.GsCodeIdentTypeIdSource = existingCopies[this.GsCodeIdentTypeIdSource] as GsCodeIdentType;
			else
				_tmp.GsCodeIdentTypeIdSource = MakeCopyOf(this.GsCodeIdentTypeIdSource, existingCopies) as GsCodeIdentType;
			if (this.GsCountryInfoIdSource != null && existingCopies.Contains(this.GsCountryInfoIdSource))
				_tmp.GsCountryInfoIdSource = existingCopies[this.GsCountryInfoIdSource] as GsCountryNode;
			else
				_tmp.GsCountryInfoIdSource = MakeCopyOf(this.GsCountryInfoIdSource, existingCopies) as GsCountryNode;
			if (this.SaCodeOrgIdSource != null && existingCopies.Contains(this.SaCodeOrgIdSource))
				_tmp.SaCodeOrgIdSource = existingCopies[this.SaCodeOrgIdSource] as SaCodeOrg;
			else
				_tmp.SaCodeOrgIdSource = MakeCopyOf(this.SaCodeOrgIdSource, existingCopies) as SaCodeOrg;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.PgThesisStaffCollection = (TList<PgThesisStaff>) MakeCopyOf(this.PgThesisStaffCollection, existingCopies); 
			_tmp.PgThesisCommMemberCollection = (TList<PgThesisCommMember>) MakeCopyOf(this.PgThesisCommMemberCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PgExtMemberColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(PgExtMemberColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PgExtMemberColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(PgExtMemberColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PgExtMemberColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(PgExtMemberColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				PgExtMemberEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new PgExtMemberEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PgExtMemberColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(PgExtMemberColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				PgExtMemberEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new PgExtMemberEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region PgExtMemberEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="PgExtMember"/> object.
	/// </remarks>
	public class PgExtMemberEventArgs : System.EventArgs
	{
		private PgExtMemberColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the PgExtMemberEventArgs class.
		///</summary>
		public PgExtMemberEventArgs(PgExtMemberColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the PgExtMemberEventArgs class.
		///</summary>
		public PgExtMemberEventArgs(PgExtMemberColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The PgExtMemberColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="PgExtMemberColumn" />
		public PgExtMemberColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all PgExtMember related events.
	///</summary>
	public delegate void PgExtMemberEventHandler(object sender, PgExtMemberEventArgs e);
	
	#region PgExtMemberComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class PgExtMemberComparer : System.Collections.Generic.IComparer<PgExtMember>
	{
		PgExtMemberColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:PgExtMemberComparer"/> class.
        /// </summary>
		public PgExtMemberComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:PgExtMemberComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public PgExtMemberComparer(PgExtMemberColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="PgExtMember"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="PgExtMember"/> to compare.</param>
        /// <param name="b">The second <c>PgExtMember</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(PgExtMember a, PgExtMember b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(PgExtMember entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(PgExtMember a, PgExtMember b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public PgExtMemberColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region PgExtMemberKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="PgExtMember"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class PgExtMemberKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the PgExtMemberKey class.
		/// </summary>
		public PgExtMemberKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the PgExtMemberKey class.
		/// </summary>
		public PgExtMemberKey(PgExtMemberBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.PgExtMemberId = entity.PgExtMemberId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the PgExtMemberKey class.
		/// </summary>
		public PgExtMemberKey(System.Decimal _pgExtMemberId)
		{
			#region Init Properties

			this.PgExtMemberId = _pgExtMemberId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private PgExtMemberBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public PgExtMemberBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the PgExtMemberId property
		private System.Decimal _pgExtMemberId;
		
		/// <summary>
		/// Gets or sets the PgExtMemberId property.
		/// </summary>
		public System.Decimal PgExtMemberId
		{
			get { return _pgExtMemberId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.PgExtMemberId = value;
				
				_pgExtMemberId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				PgExtMemberId = ( values["PgExtMemberId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["PgExtMemberId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("PgExtMemberId", PgExtMemberId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("PgExtMemberId: {0}{1}",
								PgExtMemberId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region PgExtMemberColumn Enum
	
	/// <summary>
	/// Enumerate the PgExtMember columns.
	/// </summary>
	[Serializable]
	public enum PgExtMemberColumn : int
	{
		/// <summary>
		/// PgExtMemberId : مسلسل مشرف/محكم خارجى
		/// </summary>
		[EnumTextValue("PG_EXT_MEMBER_ID")]
		[ColumnEnum("PG_EXT_MEMBER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		PgExtMemberId = 1,
		/// <summary>
		/// MemberCode : كود  المشرف الخارجي
		/// </summary>
		[EnumTextValue("MEMBER_CODE")]
		[ColumnEnum("MEMBER_CODE", typeof(System.String), System.Data.DbType.String, false, false, true, 10)]
		MemberCode = 2,
		/// <summary>
		/// MemberNameAr : اسم  المشرف الخارجي
		/// </summary>
		[EnumTextValue("MEMBER_NAME_AR")]
		[ColumnEnum("MEMBER_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, false, 150)]
		MemberNameAr = 3,
		/// <summary>
		/// MemberNameEn : اسم  المشرف الخارجي
		/// </summary>
		[EnumTextValue("MEMBER_NAME_EN")]
		[ColumnEnum("MEMBER_NAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		MemberNameEn = 4,
		/// <summary>
		/// GsCodeGenderId : النوع (ذكر أو انثى)
		/// </summary>
		[EnumTextValue("GS_CODE_GENDER_ID")]
		[ColumnEnum("GS_CODE_GENDER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		GsCodeGenderId = 5,
		/// <summary>
		/// MemberJob : المسمى الوظيفي
		/// </summary>
		[EnumTextValue("MEMBER_JOB")]
		[ColumnEnum("MEMBER_JOB", typeof(System.String), System.Data.DbType.String, false, false, false, 250)]
		MemberJob = 6,
		/// <summary>
		/// MemberHireDate : تاريخ التعيين للعضو
		/// </summary>
		[EnumTextValue("MEMBER_HIRE_DATE")]
		[ColumnEnum("MEMBER_HIRE_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		MemberHireDate = 7,
		/// <summary>
		/// WorkPlaceType : نوع جهة العمل جامعة = 0 / جهة = 1
		/// </summary>
		[EnumTextValue("WORK_PLACE_TYPE")]
		[ColumnEnum("WORK_PLACE_TYPE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		WorkPlaceType = 8,
		/// <summary>
		/// SaCodeScDegId : الدرجة العلمية
		/// </summary>
		[EnumTextValue("SA_CODE_SC_DEG_ID")]
		[ColumnEnum("SA_CODE_SC_DEG_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		SaCodeScDegId = 9,
		/// <summary>
		/// SaCodeOrgId : XXX'جهة العمل'XX
		/// </summary>
		[EnumTextValue("SA_CODE_ORG_ID")]
		[ColumnEnum("SA_CODE_ORG_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SaCodeOrgId = 10,
		/// <summary>
		/// GsCdeUniversitiesId : اسم الجامعه
		/// </summary>
		[EnumTextValue("GS_CDE_UNIVERSITIES_ID")]
		[ColumnEnum("GS_CDE_UNIVERSITIES_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCdeUniversitiesId = 11,
		/// <summary>
		/// GsCountryInfoId : الجنسية
		/// </summary>
		[EnumTextValue("GS_COUNTRY_INFO_ID")]
		[ColumnEnum("GS_COUNTRY_INFO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCountryInfoId = 12,
		/// <summary>
		/// Address : العنوان
		/// </summary>
		[EnumTextValue("ADDRESS")]
		[ColumnEnum("ADDRESS", typeof(System.String), System.Data.DbType.String, false, false, true, 500)]
		Address = 13,
		/// <summary>
		/// EMail : البريد الاكترونى
		/// </summary>
		[EnumTextValue("E_MAIL")]
		[ColumnEnum("E_MAIL", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		EMail = 14,
		/// <summary>
		/// MobNum : رقم الموبيل
		/// </summary>
		[EnumTextValue("MOB_NUM")]
		[ColumnEnum("MOB_NUM", typeof(System.String), System.Data.DbType.String, false, false, true, 20)]
		MobNum = 15,
		/// <summary>
		/// GsCodeIdentTypeId : نوع تحقيق الشخصية
		/// </summary>
		[EnumTextValue("GS_CODE_IDENT_TYPE_ID")]
		[ColumnEnum("GS_CODE_IDENT_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeIdentTypeId = 16,
		/// <summary>
		/// IdentNumber : رقم تحقيق الشخصية
		/// </summary>
		[EnumTextValue("IDENT_NUMBER")]
		[ColumnEnum("IDENT_NUMBER", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		IdentNumber = 17,
		/// <summary>
		/// MemberQualMajorAr : والمؤهل التخصص
		/// </summary>
		[EnumTextValue("MEMBER_QUAL_MAJOR_AR")]
		[ColumnEnum("MEMBER_QUAL_MAJOR_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		MemberQualMajorAr = 18,
		/// <summary>
		/// Notes : 
		/// </summary>
		[EnumTextValue("NOTES")]
		[ColumnEnum("NOTES", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		Notes = 19,
		/// <summary>
		/// IsActive : default=1
		/// </summary>
		[EnumTextValue("IS_ACTIVE")]
		[ColumnEnum("IS_ACTIVE", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		IsActive = 20,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 21,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 22
	}//End enum

	#endregion PgExtMemberColumn Enum

} // end namespace
