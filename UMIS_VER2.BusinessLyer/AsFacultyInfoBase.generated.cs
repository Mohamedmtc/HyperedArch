
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file AsFacultyInfo.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'AS_FACULTY_INFO' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class AsFacultyInfoBase : EntityBase, IAsFacultyInfo, IEntityId<AsFacultyInfoKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private AsFacultyInfoEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private AsFacultyInfoEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private AsFacultyInfoEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<AsFacultyInfo> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AsFacultyInfoEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AsFacultyInfoEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="AsFacultyInfoBase"/> instance.
		///</summary>
		public AsFacultyInfoBase()
		{
			this.entityData = new AsFacultyInfoEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="AsFacultyInfoBase"/> instance.
		///</summary>
		///<param name="_asFacultyInfoId"></param>
		///<param name="_gsCountryNodeId"></param>
		///<param name="_facultyAddress"></param>
		///<param name="_facultyDescrAr"></param>
		///<param name="_facultyDescrEn"></param>
		///<param name="_conDate"></param>
		///<param name="_facultyLogo"></param>
		///<param name="_notation"></param>
		///<param name="_facultyCode"></param>
		public AsFacultyInfoBase(System.Decimal _asFacultyInfoId, System.Decimal? _gsCountryNodeId, 
			System.String _facultyAddress, System.String _facultyDescrAr, System.String _facultyDescrEn, 
			System.DateTime? _conDate, System.String _facultyLogo, System.Int32? _notation, 
			System.String _facultyCode)
		{
			this.entityData = new AsFacultyInfoEntityData();
			this.backupData = null;

			this.AsFacultyInfoId = _asFacultyInfoId;
			this.GsCountryNodeId = _gsCountryNodeId;
			this.FacultyAddress = _facultyAddress;
			this.FacultyDescrAr = _facultyDescrAr;
			this.FacultyDescrEn = _facultyDescrEn;
			this.ConDate = _conDate;
			this.FacultyLogo = _facultyLogo;
			this.Notation = _notation;
			this.FacultyCode = _facultyCode;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="AsFacultyInfo"/> instance.
		///</summary>
		///<param name="_asFacultyInfoId"></param>
		///<param name="_gsCountryNodeId"></param>
		///<param name="_facultyAddress"></param>
		///<param name="_facultyDescrAr"></param>
		///<param name="_facultyDescrEn"></param>
		///<param name="_conDate"></param>
		///<param name="_facultyLogo"></param>
		///<param name="_notation"></param>
		///<param name="_facultyCode"></param>
		public static AsFacultyInfo CreateAsFacultyInfo(System.Decimal _asFacultyInfoId, System.Decimal? _gsCountryNodeId, 
			System.String _facultyAddress, System.String _facultyDescrAr, System.String _facultyDescrEn, 
			System.DateTime? _conDate, System.String _facultyLogo, System.Int32? _notation, 
			System.String _facultyCode)
		{
			AsFacultyInfo newAsFacultyInfo = new AsFacultyInfo();
			newAsFacultyInfo.AsFacultyInfoId = _asFacultyInfoId;
			newAsFacultyInfo.GsCountryNodeId = _gsCountryNodeId;
			newAsFacultyInfo.FacultyAddress = _facultyAddress;
			newAsFacultyInfo.FacultyDescrAr = _facultyDescrAr;
			newAsFacultyInfo.FacultyDescrEn = _facultyDescrEn;
			newAsFacultyInfo.ConDate = _conDate;
			newAsFacultyInfo.FacultyLogo = _facultyLogo;
			newAsFacultyInfo.Notation = _notation;
			newAsFacultyInfo.FacultyCode = _facultyCode;
			return newAsFacultyInfo;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the AsFacultyInfoId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal AsFacultyInfoId
		{
			get
			{
				return this.entityData.AsFacultyInfoId; 
			}
			
			set
			{
				if (this.entityData.AsFacultyInfoId == value)
					return;
					
				OnColumnChanging(AsFacultyInfoColumn.AsFacultyInfoId, this.entityData.AsFacultyInfoId);
				this.entityData.AsFacultyInfoId = value;
				this.EntityId.AsFacultyInfoId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AsFacultyInfoColumn.AsFacultyInfoId, this.entityData.AsFacultyInfoId);
				OnPropertyChanged("AsFacultyInfoId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the AS_FACULTY_INFO_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the AS_FACULTY_INFO_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalAsFacultyInfoId
		{
			get { return this.entityData.OriginalAsFacultyInfoId; }
			set { this.entityData.OriginalAsFacultyInfoId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the GsCountryNodeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCountryNodeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCountryNodeId
		{
			get
			{
				return this.entityData.GsCountryNodeId; 
			}
			
			set
			{
				if (this.entityData.GsCountryNodeId == value)
					return;
					
				OnColumnChanging(AsFacultyInfoColumn.GsCountryNodeId, this.entityData.GsCountryNodeId);
				this.entityData.GsCountryNodeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AsFacultyInfoColumn.GsCountryNodeId, this.entityData.GsCountryNodeId);
				OnPropertyChanged("GsCountryNodeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FacultyAddress property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 256)]
		public virtual System.String FacultyAddress
		{
			get
			{
				return this.entityData.FacultyAddress; 
			}
			
			set
			{
				if (this.entityData.FacultyAddress == value)
					return;
					
				OnColumnChanging(AsFacultyInfoColumn.FacultyAddress, this.entityData.FacultyAddress);
				this.entityData.FacultyAddress = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AsFacultyInfoColumn.FacultyAddress, this.entityData.FacultyAddress);
				OnPropertyChanged("FacultyAddress");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FacultyDescrAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String FacultyDescrAr
		{
			get
			{
				return this.entityData.FacultyDescrAr; 
			}
			
			set
			{
				if (this.entityData.FacultyDescrAr == value)
					return;
					
				OnColumnChanging(AsFacultyInfoColumn.FacultyDescrAr, this.entityData.FacultyDescrAr);
				this.entityData.FacultyDescrAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AsFacultyInfoColumn.FacultyDescrAr, this.entityData.FacultyDescrAr);
				OnPropertyChanged("FacultyDescrAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FacultyDescrEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String FacultyDescrEn
		{
			get
			{
				return this.entityData.FacultyDescrEn; 
			}
			
			set
			{
				if (this.entityData.FacultyDescrEn == value)
					return;
					
				OnColumnChanging(AsFacultyInfoColumn.FacultyDescrEn, this.entityData.FacultyDescrEn);
				this.entityData.FacultyDescrEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AsFacultyInfoColumn.FacultyDescrEn, this.entityData.FacultyDescrEn);
				OnPropertyChanged("FacultyDescrEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ConDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsConDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? ConDate
		{
			get
			{
				return this.entityData.ConDate; 
			}
			
			set
			{
				if (this.entityData.ConDate == value)
					return;
					
				OnColumnChanging(AsFacultyInfoColumn.ConDate, this.entityData.ConDate);
				this.entityData.ConDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AsFacultyInfoColumn.ConDate, this.entityData.ConDate);
				OnPropertyChanged("ConDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FacultyLogo property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 350)]
		public virtual System.String FacultyLogo
		{
			get
			{
				return this.entityData.FacultyLogo; 
			}
			
			set
			{
				if (this.entityData.FacultyLogo == value)
					return;
					
				OnColumnChanging(AsFacultyInfoColumn.FacultyLogo, this.entityData.FacultyLogo);
				this.entityData.FacultyLogo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AsFacultyInfoColumn.FacultyLogo, this.entityData.FacultyLogo);
				OnPropertyChanged("FacultyLogo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Notation property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsNotationNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? Notation
		{
			get
			{
				return this.entityData.Notation; 
			}
			
			set
			{
				if (this.entityData.Notation == value)
					return;
					
				OnColumnChanging(AsFacultyInfoColumn.Notation, this.entityData.Notation);
				this.entityData.Notation = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AsFacultyInfoColumn.Notation, this.entityData.Notation);
				OnPropertyChanged("Notation");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FacultyCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 15)]
		public virtual System.String FacultyCode
		{
			get
			{
				return this.entityData.FacultyCode; 
			}
			
			set
			{
				if (this.entityData.FacultyCode == value)
					return;
					
				OnColumnChanging(AsFacultyInfoColumn.FacultyCode, this.entityData.FacultyCode);
				this.entityData.FacultyCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AsFacultyInfoColumn.FacultyCode, this.entityData.FacultyCode);
				OnPropertyChanged("FacultyCode");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryNodeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCountryNode GsCountryNodeIdSource
      	{
            get { return entityData.GsCountryNodeIdSource; }
            set { entityData.GsCountryNodeIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of EdBranchRule objects
		///	which are related to this object through the relation FK_ED_BRANCH_RULE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdBranchRule> EdBranchRuleCollection
		{
			get { return entityData.EdBranchRuleCollection; }
			set { entityData.EdBranchRuleCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaMilitaryStatus objects
		///	which are related to this object through the relation FK_AUTO_001b
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaMilitaryStatus> SaMilitaryStatusCollection
		{
			get { return entityData.SaMilitaryStatusCollection; }
			set { entityData.SaMilitaryStatusCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScStudGroup objects
		///	which are related to this object through the relation FK_SC_STUD_GROUP_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScStudGroup> ScStudGroupCollection
		{
			get { return entityData.ScStudGroupCollection; }
			set { entityData.ScStudGroupCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaRelative objects
		///	which are related to this object through the relation FK_SA_RELATIVE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaRelative> SaRelativeCollection
		{
			get { return entityData.SaRelativeCollection; }
			set { entityData.SaRelativeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SeBlockTrans objects
		///	which are related to this object through the relation FK_SE_BLOCK_TRANS_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SeBlockTrans> SeBlockTransCollection
		{
			get { return entityData.SeBlockTransCollection; }
			set { entityData.SeBlockTransCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoSponsorStud objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_STUD_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorStud> SpoSponsorStudCollection
		{
			get { return entityData.SpoSponsorStudCollection; }
			set { entityData.SpoSponsorStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCodeCourseAssess objects
		///	which are related to this object through the relation FK_ED_CODE_COURSE_ASSESS_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCodeCourseAssess> EdCodeCourseAssessCollection
		{
			get { return entityData.EdCodeCourseAssessCollection; }
			set { entityData.EdCodeCourseAssessCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCodeDischargeH objects
		///	which are related to this object through the relation FK_AUTO_0005
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCodeDischargeH> EdCodeDischargeHCollection
		{
			get { return entityData.EdCodeDischargeHCollection; }
			set { entityData.EdCodeDischargeHCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaCdeAcadLoad objects
		///	which are related to this object through the relation FK_SA_CDE_ACAD_LOAD_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaCdeAcadLoad> SaCdeAcadLoadCollection
		{
			get { return entityData.SaCdeAcadLoadCollection; }
			set { entityData.SaCdeAcadLoadCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaEmpHierarchy objects
		///	which are related to this object through the relation FK_SA_EMP_HIERARCHY_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaEmpHierarchy> SaEmpHierarchyCollection
		{
			get { return entityData.SaEmpHierarchyCollection; }
			set { entityData.SaEmpHierarchyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCodeCourseTeaching objects
		///	which are related to this object through the relation FK_ED_CODE_COURSE_TEACHING_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCodeCourseTeaching> EdCodeCourseTeachingCollection
		{
			get { return entityData.EdCodeCourseTeachingCollection; }
			set { entityData.EdCodeCourseTeachingCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRegPre objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_PRE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRegPre> EdStudCourseRegPreCollection
		{
			get { return entityData.EdStudCourseRegPreCollection; }
			set { entityData.EdStudCourseRegPreCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudExcuse objects
		///	which are related to this object through the relation FK_ED_STUD_EXCUSE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudExcuse> EdStudExcuseCollection
		{
			get { return entityData.EdStudExcuseCollection; }
			set { entityData.EdStudExcuseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GsComm objects
		///	which are related to this object through the relation FK_GS_COMM_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GsComm> GsCommCollection
		{
			get { return entityData.GsCommCollection; }
			set { entityData.GsCommCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaJobStartStatment objects
		///	which are related to this object through the relation FK_AUTO_0019
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaJobStartStatment> SaJobStartStatmentCollection
		{
			get { return entityData.SaJobStartStatmentCollection; }
			set { entityData.SaJobStartStatmentCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAcadWarn objects
		///	which are related to this object through the relation FK_ED_STUD_ACAD_WARN_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAcadWarn> EdStudAcadWarnCollection
		{
			get { return entityData.EdStudAcadWarnCollection; }
			set { entityData.EdStudAcadWarnCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgThesisGrantDegree objects
		///	which are related to this object through the relation FK_PG_THESIS_GRANT_DEGREE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisGrantDegree> PgThesisGrantDegreeCollection
		{
			get { return entityData.PgThesisGrantDegreeCollection; }
			set { entityData.PgThesisGrantDegreeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseTopic objects
		///	which are related to this object through the relation FK_ED_COURSE_TOPIC_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseTopic> EdCourseTopicCollection
		{
			get { return entityData.EdCourseTopicCollection; }
			set { entityData.EdCourseTopicCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeFine objects
		///	which are related to this object through the relation FK_FEE_FINE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeFine> FeeFineCollection
		{
			get { return entityData.FeeFineCollection; }
			set { entityData.FeeFineCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudQualSubject objects
		///	which are related to this object through the relation FK_ED_STUD_QUAL_SUBJECT_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudQualSubject> EdStudQualSubjectCollection
		{
			get { return entityData.EdStudQualSubjectCollection; }
			set { entityData.EdStudQualSubjectCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsCourseTo objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_COURSE_TO_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsCourseTo> EdStudIntTrnsCourseToCollection
		{
			get { return entityData.EdStudIntTrnsCourseToCollection; }
			set { entityData.EdStudIntTrnsCourseToCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudNatSimilarityRequest objects
		///	which are related to this object through the relation FK_FEE_STUD_NAT_SIMILARITY_REQUEST_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudNatSimilarityRequest> FeeStudNatSimilarityRequestCollection
		{
			get { return entityData.FeeStudNatSimilarityRequestCollection; }
			set { entityData.FeeStudNatSimilarityRequestCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaJobStoppage objects
		///	which are related to this object through the relation FK_SA_JOB_STOPPAGE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaJobStoppage> SaJobStoppageCollection
		{
			get { return entityData.SaJobStoppageCollection; }
			set { entityData.SaJobStoppageCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaPromotionRequest objects
		///	which are related to this object through the relation FK_SA_PROMOTION_REQUEST_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaPromotionRequest> SaPromotionRequestCollection
		{
			get { return entityData.SaPromotionRequestCollection; }
			set { entityData.SaPromotionRequestCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoScheduleDetail objects
		///	which are related to this object through the relation FK_AUTO_0186
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoScheduleDetail> CoScheduleDetailCollection
		{
			get { return entityData.CoScheduleDetailCollection; }
			set { entityData.CoScheduleDetailCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaVacationBalanceH objects
		///	which are related to this object through the relation FK_AUTO_0030
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaVacationBalanceH> SaVacationBalanceHCollection
		{
			get { return entityData.SaVacationBalanceHCollection; }
			set { entityData.SaVacationBalanceHCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaPublication objects
		///	which are related to this object through the relation FK_AUTO_0023
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaPublication> SaPublicationCollection
		{
			get { return entityData.SaPublicationCollection; }
			set { entityData.SaPublicationCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeFacultyRule objects
		///	which are related to this object through the relation FK_FEE_FACULTY_RULE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeFacultyRule> FeeFacultyRuleCollection
		{
			get { return entityData.FeeFacultyRuleCollection; }
			set { entityData.FeeFacultyRuleCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvPollHdr objects
		///	which are related to this object through the relation FK_SV_POLL_HDR_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvPollHdr> SvPollHdrCollection
		{
			get { return entityData.SvPollHdrCollection; }
			set { entityData.SvPollHdrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudVoucher objects
		///	which are related to this object through the relation FK_FEE_STUD_VOUCHER_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudVoucher> FeeStudVoucherCollection
		{
			get { return entityData.FeeStudVoucherCollection; }
			set { entityData.FeeStudVoucherCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdAcadYearFaculty objects
		///	which are related to this object through the relation FK_ED_ACAD_YEAR_FACULTY_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdAcadYearFaculty> EdAcadYearFacultyCollection
		{
			get { return entityData.EdAcadYearFacultyCollection; }
			set { entityData.EdAcadYearFacultyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of RsrchStudPostponeReq objects
		///	which are related to this object through the relation FK_RSRCH_STUD_POSTPONE_REQ_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<RsrchStudPostponeReq> RsrchStudPostponeReqCollection
		{
			get { return entityData.RsrchStudPostponeReqCollection; }
			set { entityData.RsrchStudPostponeReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SeUserCrsAssess objects
		///	which are related to this object through the relation FK_SE_USER_CRS_ASSESS_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SeUserCrsAssess> SeUserCrsAssessCollection
		{
			get { return entityData.SeUserCrsAssessCollection; }
			set { entityData.SeUserCrsAssessCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudTransFromReq objects
		///	which are related to this object through the relation FK_ED_STUD_TRANS_FROM_REQ_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudTransFromReq> EdStudTransFromReqCollection
		{
			get { return entityData.EdStudTransFromReqCollection; }
			set { entityData.EdStudTransFromReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GsCdeClrncItemFac objects
		///	which are related to this object through the relation FK_GS_CDE_CLRNC_ITEM_FAC_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GsCdeClrncItemFac> GsCdeClrncItemFacCollection
		{
			get { return entityData.GsCdeClrncItemFacCollection; }
			set { entityData.GsCdeClrncItemFacCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaRaise objects
		///	which are related to this object through the relation FK_SA_RAISE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaRaise> SaRaiseCollection
		{
			get { return entityData.SaRaiseCollection; }
			set { entityData.SaRaiseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsStateTo objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_STATE_TO_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsStateTo> EdStudIntTrnsStateToCollection
		{
			get { return entityData.EdStudIntTrnsStateToCollection; }
			set { entityData.EdStudIntTrnsStateToCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmPrecondQual objects
		///	which are related to this object through the relation FK_ADM_PRECOND_QUAL_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmPrecondQual> AdmPrecondQualCollection
		{
			get { return entityData.AdmPrecondQualCollection; }
			set { entityData.AdmPrecondQualCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmRatingParametersMajors objects
		///	which are related to this object through the relation FK_ADM_RATING_PARAMETERS_MAJORS_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmRatingParametersMajors> AdmRatingParametersMajorsCollection
		{
			get { return entityData.AdmRatingParametersMajorsCollection; }
			set { entityData.AdmRatingParametersMajorsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScSchdlPeriod objects
		///	which are related to this object through the relation FK_SC_SCHDL_PERIOD_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScSchdlPeriod> ScSchdlPeriodCollection
		{
			get { return entityData.ScSchdlPeriodCollection; }
			set { entityData.ScSchdlPeriodCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudRetrieveRequest objects
		///	which are related to this object through the relation FK_FEE_STUD_RETRIEVE_REQUEST_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudRetrieveRequest> FeeStudRetrieveRequestCollection
		{
			get { return entityData.FeeStudRetrieveRequestCollection; }
			set { entityData.FeeStudRetrieveRequestCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaExtDel objects
		///	which are related to this object through the relation FK_SA_EXT_DEL_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaExtDel> SaExtDelCollection
		{
			get { return entityData.SaExtDelCollection; }
			set { entityData.SaExtDelCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScHallRsrv objects
		///	which are related to this object through the relation FK_SC_HALL_RSRV_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScHallRsrv> ScHallRsrvCollection
		{
			get { return entityData.ScHallRsrvCollection; }
			set { entityData.ScHallRsrvCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdResidencyStud objects
		///	which are related to this object through the relation FK_ED_RESIDENCY_STUD_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdResidencyStud> EdResidencyStudCollection
		{
			get { return entityData.EdResidencyStudCollection; }
			set { entityData.EdResidencyStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseChng objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_CHNG_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseChng> EdStudCourseChngCollection
		{
			get { return entityData.EdStudCourseChngCollection; }
			set { entityData.EdStudCourseChngCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourse objects
		///	which are related to this object through the relation FK_ED_COURSE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourse> EdCourseCollection
		{
			get { return entityData.EdCourseCollection; }
			set { entityData.EdCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvAutoMsgTmplt objects
		///	which are related to this object through the relation FK_SV_AUTO_MSG_TMPLT_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvAutoMsgTmplt> SvAutoMsgTmpltCollection
		{
			get { return entityData.SvAutoMsgTmpltCollection; }
			set { entityData.SvAutoMsgTmpltCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScScheduleRsrv objects
		///	which are related to this object through the relation FK_SC_SCHEDULE_RSRV_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScScheduleRsrv> ScScheduleRsrvCollection
		{
			get { return entityData.ScScheduleRsrvCollection; }
			set { entityData.ScScheduleRsrvCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaScCommDecision objects
		///	which are related to this object through the relation FK_SA_SC_COMM_DECISION_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaScCommDecision> SaScCommDecisionCollection
		{
			get { return entityData.SaScCommDecisionCollection; }
			set { entityData.SaScCommDecisionCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTransPref objects
		///	which are related to this object through the relation FK_ED_STUD_IntTrans_PREF_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTransPref> EdStudIntTransPrefCollection
		{
			get { return entityData.EdStudIntTransPrefCollection; }
			set { entityData.EdStudIntTransPrefCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaTrainingCourse objects
		///	which are related to this object through the relation FK_SA_TRAINING_COURSE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaTrainingCourse> SaTrainingCourseCollection
		{
			get { return entityData.SaTrainingCourseCollection; }
			set { entityData.SaTrainingCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaMiltary objects
		///	which are related to this object through the relation FK_AUTO_001d
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaMiltary> SaMiltaryCollection
		{
			get { return entityData.SaMiltaryCollection; }
			set { entityData.SaMiltaryCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeInstlmntRule objects
		///	which are related to this object through the relation FK_FEE_INSTLMNT_RULE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeInstlmntRule> FeeInstlmntRuleCollection
		{
			get { return entityData.FeeInstlmntRuleCollection; }
			set { entityData.FeeInstlmntRuleCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmCompetitiveAvg objects
		///	which are related to this object through the relation FK_ADM_COMPETITIVE_AVG_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmCompetitiveAvg> AdmCompetitiveAvgCollection
		{
			get { return entityData.AdmCompetitiveAvgCollection; }
			set { entityData.AdmCompetitiveAvgCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of RsrchStudRegister objects
		///	which are related to this object through the relation FK_RSRCH_STUD_REGISTER_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<RsrchStudRegister> RsrchStudRegisterCollection
		{
			get { return entityData.RsrchStudRegisterCollection; }
			set { entityData.RsrchStudRegisterCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SeForm objects
		///	which are related to this object through the relation FK_SE_FORM_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SeForm> SeFormCollection
		{
			get { return entityData.SeFormCollection; }
			set { entityData.SeFormCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdOfferingCourse objects
		///	which are related to this object through the relation FK_ED_OFFERING_COURSE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdOfferingCourse> EdOfferingCourseCollection
		{
			get { return entityData.EdOfferingCourseCollection; }
			set { entityData.EdOfferingCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeLimitRule objects
		///	which are related to this object through the relation FK_FEE_LIMIT_RULE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeLimitRule> FeeLimitRuleCollection
		{
			get { return entityData.FeeLimitRuleCollection; }
			set { entityData.FeeLimitRuleCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaExperience objects
		///	which are related to this object through the relation FK_SA_EXPERIENCE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaExperience> SaExperienceCollection
		{
			get { return entityData.SaExperienceCollection; }
			set { entityData.SaExperienceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaServTermin objects
		///	which are related to this object through the relation FK_SA_SERV_TERMIN_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaServTermin> SaServTerminCollection
		{
			get { return entityData.SaServTerminCollection; }
			set { entityData.SaServTerminCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdOffering objects
		///	which are related to this object through the relation FK_ED_OFFERING_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdOffering> EdOfferingCollection
		{
			get { return entityData.EdOfferingCollection; }
			set { entityData.EdOfferingCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppPref objects
		///	which are related to this object through the relation FK_ADM_APP_PREF_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppPref> AdmAppPrefCollection
		{
			get { return entityData.AdmAppPrefCollection; }
			set { entityData.AdmAppPrefCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAbsence objects
		///	which are related to this object through the relation FK_ED_STUD_ABSENCE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAbsence> EdStudAbsenceCollection
		{
			get { return entityData.EdStudAbsenceCollection; }
			set { entityData.EdStudAbsenceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaWarning objects
		///	which are related to this object through the relation FK_SA_WARNING_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaWarning> SaWarningCollection
		{
			get { return entityData.SaWarningCollection; }
			set { entityData.SaWarningCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudStateTemp objects
		///	which are related to this object through the relation FK_ED_STUD_STATE_TEMP_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudStateTemp> EdStudStateTempCollection
		{
			get { return entityData.EdStudStateTempCollection; }
			set { entityData.EdStudStateTempCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaPromotion objects
		///	which are related to this object through the relation FK_AUTO_0021
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaPromotion> SaPromotionCollection
		{
			get { return entityData.SaPromotionCollection; }
			set { entityData.SaPromotionCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStaffEvl objects
		///	which are related to this object through the relation FK_SV_STAFF_EVL_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStaffEvl> SvStaffEvlCollection
		{
			get { return entityData.SvStaffEvlCollection; }
			set { entityData.SvStaffEvlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoSponsorOffer objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_OFFER_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorOffer> SpoSponsorOfferCollection
		{
			get { return entityData.SpoSponsorOfferCollection; }
			set { entityData.SpoSponsorOfferCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudAskAdv objects
		///	which are related to this object through the relation FK_SV_STUD_ASK_ADV_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudAskAdv> SvStudAskAdvCollection
		{
			get { return entityData.SvStudAskAdvCollection; }
			set { entityData.SvStudAskAdvCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaVacation objects
		///	which are related to this object through the relation FK_AUTO_002e
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaVacation> SaVacationCollection
		{
			get { return entityData.SaVacationCollection; }
			set { entityData.SaVacationCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaEmployment objects
		///	which are related to this object through the relation FK_AUTO_0015
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaEmployment> SaEmploymentCollection
		{
			get { return entityData.SaEmploymentCollection; }
			set { entityData.SaEmploymentCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaFinStatment objects
		///	which are related to this object through the relation FK_SA_FIN_STATMENT_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaFinStatment> SaFinStatmentCollection
		{
			get { return entityData.SaFinStatmentCollection; }
			set { entityData.SaFinStatmentCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseOutcomesTopics objects
		///	which are related to this object through the relation FK_ED_Course_Outcomes_Topics_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseOutcomesTopics> EdCourseOutcomesTopicsCollection
		{
			get { return entityData.EdCourseOutcomesTopicsCollection; }
			set { entityData.EdCourseOutcomesTopicsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdPrintReq objects
		///	which are related to this object through the relation FK_ED_PRINT_REQ_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdPrintReq> EdPrintReqCollection
		{
			get { return entityData.EdPrintReqCollection; }
			set { entityData.EdPrintReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudFeeItem objects
		///	which are related to this object through the relation FK_FEE_STUD_FEE_ITEM_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudFeeItem> FeeStudFeeItemCollection
		{
			get { return entityData.FeeStudFeeItemCollection; }
			set { entityData.FeeStudFeeItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCodeLevel objects
		///	which are related to this object through the relation FK_ED_CODE_LEVEL_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCodeLevel> EdCodeLevelCollection
		{
			get { return entityData.EdCodeLevelCollection; }
			set { entityData.EdCodeLevelCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScGroupInfo objects
		///	which are related to this object through the relation FK_SC_GROUP_INFO_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScGroupInfo> ScGroupInfoCollection
		{
			get { return entityData.ScGroupInfoCollection; }
			set { entityData.ScGroupInfoCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaPersonId objects
		///	which are related to this object through the relation FK_AUTO_001f
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaPersonId> SaPersonIdCollection
		{
			get { return entityData.SaPersonIdCollection; }
			set { entityData.SaPersonIdCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaStfMember objects
		///	which are related to this object through the relation FK_SA_STF_MEMBER_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaStfMember> SaStfMemberCollection
		{
			get { return entityData.SaStfMemberCollection; }
			set { entityData.SaStfMemberCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmCodeEngTest objects
		///	which are related to this object through the relation FK_ADM_CODE_ENG_TEST_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmCodeEngTest> AdmCodeEngTestCollection
		{
			get { return entityData.AdmCodeEngTestCollection; }
			set { entityData.AdmCodeEngTestCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeRefndStdReq objects
		///	which are related to this object through the relation FK_REFUND_STUD_REQ_MASTER_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeRefndStdReq> FeeRefndStdReqCollection
		{
			get { return entityData.FeeRefndStdReqCollection; }
			set { entityData.FeeRefndStdReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsCourseFrom objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_COURSE_FROM_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsCourseFrom> EdStudIntTrnsCourseFromCollection
		{
			get { return entityData.EdStudIntTrnsCourseFromCollection; }
			set { entityData.EdStudIntTrnsCourseFromCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoControlRoom objects
		///	which are related to this object through the relation FK_AUTO_0042
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoControlRoom> CoControlRoomCollection
		{
			get { return entityData.CoControlRoomCollection; }
			set { entityData.CoControlRoomCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudBranchPref objects
		///	which are related to this object through the relation FK_ED_STUD_BRANCH_PREF_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudBranchPref> EdStudBranchPrefCollection
		{
			get { return entityData.EdStudBranchPrefCollection; }
			set { entityData.EdStudBranchPrefCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudDiscContinue objects
		///	which are related to this object through the relation FK_FEE_STUD_DISC_CONTINUE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudDiscContinue> FeeStudDiscContinueCollection
		{
			get { return entityData.FeeStudDiscContinueCollection; }
			set { entityData.FeeStudDiscContinueCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudInstallment objects
		///	which are related to this object through the relation FEE_STUD_INSTALLMENT_fk4
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudInstallment> FeeStudInstallmentCollection
		{
			get { return entityData.FeeStudInstallmentCollection; }
			set { entityData.FeeStudInstallmentCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudGroup objects
		///	which are related to this object through the relation FK_AUTO_0009
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudGroup> EdStudGroupCollection
		{
			get { return entityData.EdStudGroupCollection; }
			set { entityData.EdStudGroupCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseReg objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseReg> EdStudCourseRegCollection
		{
			get { return entityData.EdStudCourseRegCollection; }
			set { entityData.EdStudCourseRegCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaScQual objects
		///	which are related to this object through the relation FK_SA_SC_QUAL_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaScQual> SaScQualCollection
		{
			get { return entityData.SaScQualCollection; }
			set { entityData.SaScQualCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MltOrgTree objects
		///	which are related to this object through the relation FK_MLT_ORG_TREE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MltOrgTree> MltOrgTreeCollection
		{
			get { return entityData.MltOrgTreeCollection; }
			set { entityData.MltOrgTreeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaSupervisingJobs objects
		///	which are related to this object through the relation FK_SA_SUPERVISING_JOBS_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaSupervisingJobs> SaSupervisingJobsCollection
		{
			get { return entityData.SaSupervisingJobsCollection; }
			set { entityData.SaSupervisingJobsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdExamSchdl objects
		///	which are related to this object through the relation FK_AUTO_0048
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdExamSchdl> EdExamSchdlCollection
		{
			get { return entityData.EdExamSchdlCollection; }
			set { entityData.EdExamSchdlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GsCodeApprovalFaculty objects
		///	which are related to this object through the relation FK_AUTO_0011
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GsCodeApprovalFaculty> GsCodeApprovalFacultyCollection
		{
			get { return entityData.GsCodeApprovalFacultyCollection; }
			set { entityData.GsCodeApprovalFacultyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAcadmicAdv objects
		///	which are related to this object through the relation FK_ED_STUD_ACADMIC_ADV_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAcadmicAdv> EdStudAcadmicAdvCollection
		{
			get { return entityData.EdStudAcadmicAdvCollection; }
			set { entityData.EdStudAcadmicAdvCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaJobActivity objects
		///	which are related to this object through the relation FK_SA_JOB_ACTIVITY_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaJobActivity> SaJobActivityCollection
		{
			get { return entityData.SaJobActivityCollection; }
			set { entityData.SaJobActivityCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudSemesterTemp objects
		///	which are related to this object through the relation FK_ED_STUD_SEMESTER_OLD_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudSemesterTemp> EdStudSemesterTempCollection
		{
			get { return entityData.EdStudSemesterTempCollection; }
			set { entityData.EdStudSemesterTempCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GsCodeApproval objects
		///	which are related to this object through the relation FK_AUTO_0010
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GsCodeApproval> GsCodeApprovalCollection
		{
			get { return entityData.GsCodeApprovalCollection; }
			set { entityData.GsCodeApprovalCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntityMain objects
		///	which are related to this object through the relation FK_ENTITY_MAIN_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntityMain> EntityMainCollection
		{
			get { return entityData.EntityMainCollection; }
			set { entityData.EntityMainCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudInstallmentRequest objects
		///	which are related to this object through the relation FK_FEE_STUD_INSTALLMENT_REQUEST_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudInstallmentRequest> FeeStudInstallmentRequestCollection
		{
			get { return entityData.FeeStudInstallmentRequestCollection; }
			set { entityData.FeeStudInstallmentRequestCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRegAssess objects
		///	which are related to this object through the relation FK_ED_STUD_STATE_COURSE_ASSESS_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRegAssess> EdStudCourseRegAssessCollection
		{
			get { return entityData.EdStudCourseRegAssessCollection; }
			set { entityData.EdStudCourseRegAssessCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaCandRelease objects
		///	which are related to this object through the relation FK_AUTO_0025
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaCandRelease> SaCandReleaseCollection
		{
			get { return entityData.SaCandReleaseCollection; }
			set { entityData.SaCandReleaseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntPolcyGrdngHdr objects
		///	which are related to this object through the relation FK_ENT_POLCY_GRDNG_HDR_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntPolcyGrdngHdr> EntPolcyGrdngHdrCollection
		{
			get { return entityData.EntPolcyGrdngHdrCollection; }
			set { entityData.EntPolcyGrdngHdrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudSemester objects
		///	which are related to this object through the relation FK_ED_STUD_SEMESTER_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudSemester> EdStudSemesterCollection
		{
			get { return entityData.EdStudSemesterCollection; }
			set { entityData.EdStudSemesterCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaScResearch objects
		///	which are related to this object through the relation FK_SA_SC_RESEARCH_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaScResearch> SaScResearchCollection
		{
			get { return entityData.SaScResearchCollection; }
			set { entityData.SaScResearchCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdResultApprove objects
		///	which are related to this object through the relation FK_ED_RESULT_APPROVE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdResultApprove> EdResultApproveCollection
		{
			get { return entityData.EdResultApproveCollection; }
			set { entityData.EdResultApproveCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoSponsorStudSemester objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_STUD_SEMESTER_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorStudSemester> SpoSponsorStudSemesterCollection
		{
			get { return entityData.SpoSponsorStudSemesterCollection; }
			set { entityData.SpoSponsorStudSemesterCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdProject objects
		///	which are related to this object through the relation FK_ED_PROJECT_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdProject> EdProjectCollection
		{
			get { return entityData.EdProjectCollection; }
			set { entityData.EdProjectCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoCrsRsltRaise objects
		///	which are related to this object through the relation FK_CO_CRS_RSLT_RAISE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoCrsRsltRaise> CoCrsRsltRaiseCollection
		{
			get { return entityData.CoCrsRsltRaiseCollection; }
			set { entityData.CoCrsRsltRaiseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScScheduleDtl objects
		///	which are related to this object through the relation FK_SC_SCHEDULE_DTL_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScScheduleDtl> ScScheduleDtlCollection
		{
			get { return entityData.ScScheduleDtlCollection; }
			set { entityData.ScScheduleDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudFaculty objects
		///	which are related to this object through the relation FK_ED_STUD_FACULTY_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudFaculty> EdStudFacultyCollection
		{
			get { return entityData.EdStudFacultyCollection; }
			set { entityData.EdStudFacultyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScSectionGroupHdr objects
		///	which are related to this object through the relation FK_SC_SECTION_GROUP_HDR_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScSectionGroupHdr> ScSectionGroupHdrCollection
		{
			get { return entityData.ScSectionGroupHdrCollection; }
			set { entityData.ScSectionGroupHdrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsStateFrom objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRANS_STATE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsStateFrom> EdStudIntTrnsStateFromCollection
		{
			get { return entityData.EdStudIntTrnsStateFromCollection; }
			set { entityData.EdStudIntTrnsStateFromCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeCdeDiscType objects
		///	which are related to this object through the relation FK_FEE_CDE_DISC_TYPE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeCdeDiscType> FeeCdeDiscTypeCollection
		{
			get { return entityData.FeeCdeDiscTypeCollection; }
			set { entityData.FeeCdeDiscTypeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdGraduationAward objects
		///	which are related to this object through the relation FK_ED_GRADUATION_AWARD_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdGraduationAward> EdGraduationAwardCollection
		{
			get { return entityData.EdGraduationAwardCollection; }
			set { entityData.EdGraduationAwardCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScBuilding objects
		///	which are related to this object through the relation FK_AUTO_0032
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScBuilding> ScBuildingCollection
		{
			get { return entityData.ScBuildingCollection; }
			set { entityData.ScBuildingCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudGrantTemp objects
		///	which are related to this object through the relation FK_ED_STUD_GRANT_TEMP_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudGrantTemp> EdStudGrantTempCollection
		{
			get { return entityData.EdStudGrantTempCollection; }
			set { entityData.EdStudGrantTempCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdInttransRule objects
		///	which are related to this object through the relation FK_ED_Int_Trans_RULE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdInttransRule> EdInttransRuleCollection
		{
			get { return entityData.EdInttransRuleCollection; }
			set { entityData.EdInttransRuleCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgOffering objects
		///	which are related to this object through the relation FK_PG_OFFERING_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgOffering> PgOfferingCollection
		{
			get { return entityData.PgOfferingCollection; }
			set { entityData.PgOfferingCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudState objects
		///	which are related to this object through the relation FK_ED_STUD_STATE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudState> EdStudStateCollection
		{
			get { return entityData.EdStudStateCollection; }
			set { entityData.EdStudStateCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaPunishment objects
		///	which are related to this object through the relation FK_SA_PUNISHMENT_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaPunishment> SaPunishmentCollection
		{
			get { return entityData.SaPunishmentCollection; }
			set { entityData.SaPunishmentCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaVacationRenew objects
		///	which are related to this object through the relation FK_AUTO_0031
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaVacationRenew> SaVacationRenewCollection
		{
			get { return entityData.SaVacationRenewCollection; }
			set { entityData.SaVacationRenewCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdBylaw objects
		///	which are related to this object through the relation FK_ED_BYLAW_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdBylaw> EdBylawCollection
		{
			get { return entityData.EdBylawCollection; }
			set { entityData.EdBylawCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaPromotionCondStsf objects
		///	which are related to this object through the relation FK_SA_PROMOTION_COND_STSF_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaPromotionCondStsf> SaPromotionCondStsfCollection
		{
			get { return entityData.SaPromotionCondStsfCollection; }
			set { entityData.SaPromotionCondStsfCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaCandReleaseDetail objects
		///	which are related to this object through the relation FK_SA_CAND_RELEASE_DETAIL_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaCandReleaseDetail> SaCandReleaseDetailCollection
		{
			get { return entityData.SaCandReleaseDetailCollection; }
			set { entityData.SaCandReleaseDetailCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GsApprovalH objects
		///	which are related to this object through the relation FK_AUTO_000f
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GsApprovalH> GsApprovalHCollection
		{
			get { return entityData.GsApprovalHCollection; }
			set { entityData.GsApprovalHCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAbsFw objects
		///	which are related to this object through the relation FK_ED_STUD_ABS_FW_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAbsFw> EdStudAbsFwCollection
		{
			get { return entityData.EdStudAbsFwCollection; }
			set { entityData.EdStudAbsFwCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaTransfer objects
		///	which are related to this object through the relation FK_AUTO_002d
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaTransfer> SaTransferCollection
		{
			get { return entityData.SaTransferCollection; }
			set { entityData.SaTransferCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrns objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrns> EdStudIntTrnsCollection
		{
			get { return entityData.EdStudIntTrnsCollection; }
			set { entityData.EdStudIntTrnsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaCodeSuperviseJob objects
		///	which are related to this object through the relation FK_AUTO_0012
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaCodeSuperviseJob> SaCodeSuperviseJobCollection
		{
			get { return entityData.SaCodeSuperviseJobCollection; }
			set { entityData.SaCodeSuperviseJobCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudDisc objects
		///	which are related to this object through the relation FK_FEE_STUD_DISC_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudDisc> FeeStudDiscCollection
		{
			get { return entityData.FeeStudDiscCollection; }
			set { entityData.FeeStudDiscCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseComp objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_COMP_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseComp> EdStudCourseCompCollection
		{
			get { return entityData.EdStudCourseCompCollection; }
			set { entityData.EdStudCourseCompCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudNote objects
		///	which are related to this object through the relation FK_ED_STUD_NOTE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudNote> EdStudNoteCollection
		{
			get { return entityData.EdStudNoteCollection; }
			set { entityData.EdStudNoteCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaDocOfFile objects
		///	which are related to this object through the relation FK_AUTO_0033
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaDocOfFile> SaDocOfFileCollection
		{
			get { return entityData.SaDocOfFileCollection; }
			set { entityData.SaDocOfFileCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudAskAdvRe objects
		///	which are related to this object through the relation FK_SV_STUD_ASK_ADV_RE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudAskAdvRe> SvStudAskAdvReCollection
		{
			get { return entityData.SvStudAskAdvReCollection; }
			set { entityData.SvStudAskAdvReCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAcceptanceCategory objects
		///	which are related to this object through the relation FK_ADM_ACCEPTANCE_CATEGORY_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAcceptanceCategory> AdmAcceptanceCategoryCollection
		{
			get { return entityData.AdmAcceptanceCategoryCollection; }
			set { entityData.AdmAcceptanceCategoryCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaVacationBalance objects
		///	which are related to this object through the relation FK_AUTO_002f
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaVacationBalance> SaVacationBalanceCollection
		{
			get { return entityData.SaVacationBalanceCollection; }
			set { entityData.SaVacationBalanceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudItemCncl objects
		///	which are related to this object through the relation FK_FEE_STUD_ITEM_CNCL_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudItemCncl> FeeStudItemCnclCollection
		{
			get { return entityData.FeeStudItemCnclCollection; }
			set { entityData.FeeStudItemCnclCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgThesisStud objects
		///	which are related to this object through the relation FK_PG_THESIS_STUD_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisStud> PgThesisStudCollection
		{
			get { return entityData.PgThesisStudCollection; }
			set { entityData.PgThesisStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GsApprovalD objects
		///	which are related to this object through the relation FK_AUTO_000d
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GsApprovalD> GsApprovalDCollection
		{
			get { return entityData.GsApprovalDCollection; }
			set { entityData.GsApprovalDCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudLateness objects
		///	which are related to this object through the relation FK_Ed_Stud_Lateness_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudLateness> EdStudLatenessCollection
		{
			get { return entityData.EdStudLatenessCollection; }
			set { entityData.EdStudLatenessCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GsCodeRptSignature objects
		///	which are related to this object through the relation FK_GS_CODE_RPT_SIGNATURE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GsCodeRptSignature> GsCodeRptSignatureCollection
		{
			get { return entityData.GsCodeRptSignatureCollection; }
			set { entityData.GsCodeRptSignatureCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaResearchTeam objects
		///	which are related to this object through the relation FK_SA_RESEARCH_TEAM_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaResearchTeam> SaResearchTeamCollection
		{
			get { return entityData.SaResearchTeamCollection; }
			set { entityData.SaResearchTeamCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppTransReq objects
		///	which are related to this object through the relation FK_ADM_APP_TRANS_REQ_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppTransReq> AdmAppTransReqCollection
		{
			get { return entityData.AdmAppTransReqCollection; }
			set { entityData.AdmAppTransReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdSemAgendaDtl objects
		///	which are related to this object through the relation FK_ED_SEM_AGENDA_DTL_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdSemAgendaDtl> EdSemAgendaDtlCollection
		{
			get { return entityData.EdSemAgendaDtlCollection; }
			set { entityData.EdSemAgendaDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCrsFreeRstrctd objects
		///	which are related to this object through the relation FK_ED_CRS_FREE_RSTRCTD_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCrsFreeRstrctd> EdCrsFreeRstrctdCollection
		{
			get { return entityData.EdCrsFreeRstrctdCollection; }
			set { entityData.EdCrsFreeRstrctdCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudGrantDegree objects
		///	which are related to this object through the relation FK_ED_STUD_GRANT_DEGREE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudGrantDegree> EdStudGrantDegreeCollection
		{
			get { return entityData.EdStudGrantDegreeCollection; }
			set { entityData.EdStudGrantDegreeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudGroupPre objects
		///	which are related to this object through the relation FK_RD_STUD_GROUP_PRE_AS_FACULTY_INFO
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudGroupPre> EdStudGroupPreCollection
		{
			get { return entityData.EdStudGroupPreCollection; }
			set { entityData.EdStudGroupPreCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FacultyAddress", "Faculty Address", 256));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FacultyDescrAr", "Faculty Descr Ar", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FacultyDescrEn", "Faculty Descr En", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FacultyLogo", "Faculty Logo", 350));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FacultyCode", "Faculty Code", 15));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "AS_FACULTY_INFO"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"AS_FACULTY_INFO_ID", "GS_COUNTRY_NODE_ID", "FACULTY_ADDRESS", "FACULTY_DESCR_AR", "FACULTY_DESCR_EN", "CON_DATE", "FACULTY_LOGO", "NOTATION", "FACULTY_CODE"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as AsFacultyInfoEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (AsFacultyInfo) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<AsFacultyInfo>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as AsFacultyInfo);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed AsFacultyInfo Entity 
		///</summary>
		protected virtual AsFacultyInfo Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			AsFacultyInfo copy = new AsFacultyInfo();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.AsFacultyInfoId = this.AsFacultyInfoId;
					copy.OriginalAsFacultyInfoId = this.OriginalAsFacultyInfoId;
				copy.GsCountryNodeId = this.GsCountryNodeId;
				copy.FacultyAddress = this.FacultyAddress;
				copy.FacultyDescrAr = this.FacultyDescrAr;
				copy.FacultyDescrEn = this.FacultyDescrEn;
				copy.ConDate = this.ConDate;
				copy.FacultyLogo = this.FacultyLogo;
				copy.Notation = this.Notation;
				copy.FacultyCode = this.FacultyCode;
			
			if (this.GsCountryNodeIdSource != null && existingCopies.Contains(this.GsCountryNodeIdSource))
				copy.GsCountryNodeIdSource = existingCopies[this.GsCountryNodeIdSource] as GsCountryNode;
			else
				copy.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource, existingCopies) as GsCountryNode;
		
			//deep copy nested objects
			copy.EdBranchRuleCollection = (TList<EdBranchRule>) MakeCopyOf(this.EdBranchRuleCollection, existingCopies); 
			copy.SaMilitaryStatusCollection = (TList<SaMilitaryStatus>) MakeCopyOf(this.SaMilitaryStatusCollection, existingCopies); 
			copy.ScStudGroupCollection = (TList<ScStudGroup>) MakeCopyOf(this.ScStudGroupCollection, existingCopies); 
			copy.SaRelativeCollection = (TList<SaRelative>) MakeCopyOf(this.SaRelativeCollection, existingCopies); 
			copy.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection, existingCopies); 
			copy.SpoSponsorStudCollection = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollection, existingCopies); 
			copy.EdCodeCourseAssessCollection = (TList<EdCodeCourseAssess>) MakeCopyOf(this.EdCodeCourseAssessCollection, existingCopies); 
			copy.EdCodeDischargeHCollection = (TList<EdCodeDischargeH>) MakeCopyOf(this.EdCodeDischargeHCollection, existingCopies); 
			copy.SaCdeAcadLoadCollection = (TList<SaCdeAcadLoad>) MakeCopyOf(this.SaCdeAcadLoadCollection, existingCopies); 
			copy.SaEmpHierarchyCollection = (TList<SaEmpHierarchy>) MakeCopyOf(this.SaEmpHierarchyCollection, existingCopies); 
			copy.EdCodeCourseTeachingCollection = (TList<EdCodeCourseTeaching>) MakeCopyOf(this.EdCodeCourseTeachingCollection, existingCopies); 
			copy.EdStudCourseRegPreCollection = (TList<EdStudCourseRegPre>) MakeCopyOf(this.EdStudCourseRegPreCollection, existingCopies); 
			copy.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection, existingCopies); 
			copy.GsCommCollection = (TList<GsComm>) MakeCopyOf(this.GsCommCollection, existingCopies); 
			copy.SaJobStartStatmentCollection = (TList<SaJobStartStatment>) MakeCopyOf(this.SaJobStartStatmentCollection, existingCopies); 
			copy.EdStudAcadWarnCollection = (TList<EdStudAcadWarn>) MakeCopyOf(this.EdStudAcadWarnCollection, existingCopies); 
			copy.PgThesisGrantDegreeCollection = (TList<PgThesisGrantDegree>) MakeCopyOf(this.PgThesisGrantDegreeCollection, existingCopies); 
			copy.EdCourseTopicCollection = (TList<EdCourseTopic>) MakeCopyOf(this.EdCourseTopicCollection, existingCopies); 
			copy.FeeFineCollection = (TList<FeeFine>) MakeCopyOf(this.FeeFineCollection, existingCopies); 
			copy.EdStudQualSubjectCollection = (TList<EdStudQualSubject>) MakeCopyOf(this.EdStudQualSubjectCollection, existingCopies); 
			copy.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection, existingCopies); 
			copy.FeeStudNatSimilarityRequestCollection = (TList<FeeStudNatSimilarityRequest>) MakeCopyOf(this.FeeStudNatSimilarityRequestCollection, existingCopies); 
			copy.SaJobStoppageCollection = (TList<SaJobStoppage>) MakeCopyOf(this.SaJobStoppageCollection, existingCopies); 
			copy.SaPromotionRequestCollection = (TList<SaPromotionRequest>) MakeCopyOf(this.SaPromotionRequestCollection, existingCopies); 
			copy.CoScheduleDetailCollection = (TList<CoScheduleDetail>) MakeCopyOf(this.CoScheduleDetailCollection, existingCopies); 
			copy.SaVacationBalanceHCollection = (TList<SaVacationBalanceH>) MakeCopyOf(this.SaVacationBalanceHCollection, existingCopies); 
			copy.SaPublicationCollection = (TList<SaPublication>) MakeCopyOf(this.SaPublicationCollection, existingCopies); 
			copy.FeeFacultyRuleCollection = (TList<FeeFacultyRule>) MakeCopyOf(this.FeeFacultyRuleCollection, existingCopies); 
			copy.SvPollHdrCollection = (TList<SvPollHdr>) MakeCopyOf(this.SvPollHdrCollection, existingCopies); 
			copy.FeeStudVoucherCollection = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollection, existingCopies); 
			copy.EdAcadYearFacultyCollection = (TList<EdAcadYearFaculty>) MakeCopyOf(this.EdAcadYearFacultyCollection, existingCopies); 
			copy.RsrchStudPostponeReqCollection = (TList<RsrchStudPostponeReq>) MakeCopyOf(this.RsrchStudPostponeReqCollection, existingCopies); 
			copy.SeUserCrsAssessCollection = (TList<SeUserCrsAssess>) MakeCopyOf(this.SeUserCrsAssessCollection, existingCopies); 
			copy.EdStudTransFromReqCollection = (TList<EdStudTransFromReq>) MakeCopyOf(this.EdStudTransFromReqCollection, existingCopies); 
			copy.GsCdeClrncItemFacCollection = (TList<GsCdeClrncItemFac>) MakeCopyOf(this.GsCdeClrncItemFacCollection, existingCopies); 
			copy.SaRaiseCollection = (TList<SaRaise>) MakeCopyOf(this.SaRaiseCollection, existingCopies); 
			copy.EdStudIntTrnsStateToCollection = (TList<EdStudIntTrnsStateTo>) MakeCopyOf(this.EdStudIntTrnsStateToCollection, existingCopies); 
			copy.AdmPrecondQualCollection = (TList<AdmPrecondQual>) MakeCopyOf(this.AdmPrecondQualCollection, existingCopies); 
			copy.AdmRatingParametersMajorsCollection = (TList<AdmRatingParametersMajors>) MakeCopyOf(this.AdmRatingParametersMajorsCollection, existingCopies); 
			copy.ScSchdlPeriodCollection = (TList<ScSchdlPeriod>) MakeCopyOf(this.ScSchdlPeriodCollection, existingCopies); 
			copy.FeeStudRetrieveRequestCollection = (TList<FeeStudRetrieveRequest>) MakeCopyOf(this.FeeStudRetrieveRequestCollection, existingCopies); 
			copy.SaExtDelCollection = (TList<SaExtDel>) MakeCopyOf(this.SaExtDelCollection, existingCopies); 
			copy.ScHallRsrvCollection = (TList<ScHallRsrv>) MakeCopyOf(this.ScHallRsrvCollection, existingCopies); 
			copy.EdResidencyStudCollection = (TList<EdResidencyStud>) MakeCopyOf(this.EdResidencyStudCollection, existingCopies); 
			copy.EdStudCourseChngCollection = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollection, existingCopies); 
			copy.EdCourseCollection = (TList<EdCourse>) MakeCopyOf(this.EdCourseCollection, existingCopies); 
			copy.SvAutoMsgTmpltCollection = (TList<SvAutoMsgTmplt>) MakeCopyOf(this.SvAutoMsgTmpltCollection, existingCopies); 
			copy.ScScheduleRsrvCollection = (TList<ScScheduleRsrv>) MakeCopyOf(this.ScScheduleRsrvCollection, existingCopies); 
			copy.SaScCommDecisionCollection = (TList<SaScCommDecision>) MakeCopyOf(this.SaScCommDecisionCollection, existingCopies); 
			copy.EdStudIntTransPrefCollection = (TList<EdStudIntTransPref>) MakeCopyOf(this.EdStudIntTransPrefCollection, existingCopies); 
			copy.SaTrainingCourseCollection = (TList<SaTrainingCourse>) MakeCopyOf(this.SaTrainingCourseCollection, existingCopies); 
			copy.SaMiltaryCollection = (TList<SaMiltary>) MakeCopyOf(this.SaMiltaryCollection, existingCopies); 
			copy.FeeInstlmntRuleCollection = (TList<FeeInstlmntRule>) MakeCopyOf(this.FeeInstlmntRuleCollection, existingCopies); 
			copy.AdmCompetitiveAvgCollection = (TList<AdmCompetitiveAvg>) MakeCopyOf(this.AdmCompetitiveAvgCollection, existingCopies); 
			copy.RsrchStudRegisterCollection = (TList<RsrchStudRegister>) MakeCopyOf(this.RsrchStudRegisterCollection, existingCopies); 
			copy.SeFormCollection = (TList<SeForm>) MakeCopyOf(this.SeFormCollection, existingCopies); 
			copy.EdOfferingCourseCollection = (TList<EdOfferingCourse>) MakeCopyOf(this.EdOfferingCourseCollection, existingCopies); 
			copy.FeeLimitRuleCollection = (TList<FeeLimitRule>) MakeCopyOf(this.FeeLimitRuleCollection, existingCopies); 
			copy.SaExperienceCollection = (TList<SaExperience>) MakeCopyOf(this.SaExperienceCollection, existingCopies); 
			copy.SaServTerminCollection = (TList<SaServTermin>) MakeCopyOf(this.SaServTerminCollection, existingCopies); 
			copy.EdOfferingCollection = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollection, existingCopies); 
			copy.AdmAppPrefCollection = (TList<AdmAppPref>) MakeCopyOf(this.AdmAppPrefCollection, existingCopies); 
			copy.EdStudAbsenceCollection = (TList<EdStudAbsence>) MakeCopyOf(this.EdStudAbsenceCollection, existingCopies); 
			copy.SaWarningCollection = (TList<SaWarning>) MakeCopyOf(this.SaWarningCollection, existingCopies); 
			copy.EdStudStateTempCollection = (TList<EdStudStateTemp>) MakeCopyOf(this.EdStudStateTempCollection, existingCopies); 
			copy.SaPromotionCollection = (TList<SaPromotion>) MakeCopyOf(this.SaPromotionCollection, existingCopies); 
			copy.SvStaffEvlCollection = (TList<SvStaffEvl>) MakeCopyOf(this.SvStaffEvlCollection, existingCopies); 
			copy.SpoSponsorOfferCollection = (TList<SpoSponsorOffer>) MakeCopyOf(this.SpoSponsorOfferCollection, existingCopies); 
			copy.SvStudAskAdvCollection = (TList<SvStudAskAdv>) MakeCopyOf(this.SvStudAskAdvCollection, existingCopies); 
			copy.SaVacationCollection = (TList<SaVacation>) MakeCopyOf(this.SaVacationCollection, existingCopies); 
			copy.SaEmploymentCollection = (TList<SaEmployment>) MakeCopyOf(this.SaEmploymentCollection, existingCopies); 
			copy.SaFinStatmentCollection = (TList<SaFinStatment>) MakeCopyOf(this.SaFinStatmentCollection, existingCopies); 
			copy.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection, existingCopies); 
			copy.EdPrintReqCollection = (TList<EdPrintReq>) MakeCopyOf(this.EdPrintReqCollection, existingCopies); 
			copy.FeeStudFeeItemCollection = (TList<FeeStudFeeItem>) MakeCopyOf(this.FeeStudFeeItemCollection, existingCopies); 
			copy.EdCodeLevelCollection = (TList<EdCodeLevel>) MakeCopyOf(this.EdCodeLevelCollection, existingCopies); 
			copy.ScGroupInfoCollection = (TList<ScGroupInfo>) MakeCopyOf(this.ScGroupInfoCollection, existingCopies); 
			copy.SaPersonIdCollection = (TList<SaPersonId>) MakeCopyOf(this.SaPersonIdCollection, existingCopies); 
			copy.SaStfMemberCollection = (TList<SaStfMember>) MakeCopyOf(this.SaStfMemberCollection, existingCopies); 
			copy.AdmCodeEngTestCollection = (TList<AdmCodeEngTest>) MakeCopyOf(this.AdmCodeEngTestCollection, existingCopies); 
			copy.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection, existingCopies); 
			copy.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection, existingCopies); 
			copy.CoControlRoomCollection = (TList<CoControlRoom>) MakeCopyOf(this.CoControlRoomCollection, existingCopies); 
			copy.EdStudBranchPrefCollection = (TList<EdStudBranchPref>) MakeCopyOf(this.EdStudBranchPrefCollection, existingCopies); 
			copy.FeeStudDiscContinueCollection = (TList<FeeStudDiscContinue>) MakeCopyOf(this.FeeStudDiscContinueCollection, existingCopies); 
			copy.FeeStudInstallmentCollection = (TList<FeeStudInstallment>) MakeCopyOf(this.FeeStudInstallmentCollection, existingCopies); 
			copy.EdStudGroupCollection = (TList<EdStudGroup>) MakeCopyOf(this.EdStudGroupCollection, existingCopies); 
			copy.EdStudCourseRegCollection = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollection, existingCopies); 
			copy.SaScQualCollection = (TList<SaScQual>) MakeCopyOf(this.SaScQualCollection, existingCopies); 
			copy.MltOrgTreeCollection = (TList<MltOrgTree>) MakeCopyOf(this.MltOrgTreeCollection, existingCopies); 
			copy.SaSupervisingJobsCollection = (TList<SaSupervisingJobs>) MakeCopyOf(this.SaSupervisingJobsCollection, existingCopies); 
			copy.EdExamSchdlCollection = (TList<EdExamSchdl>) MakeCopyOf(this.EdExamSchdlCollection, existingCopies); 
			copy.GsCodeApprovalFacultyCollection = (TList<GsCodeApprovalFaculty>) MakeCopyOf(this.GsCodeApprovalFacultyCollection, existingCopies); 
			copy.EdStudAcadmicAdvCollection = (TList<EdStudAcadmicAdv>) MakeCopyOf(this.EdStudAcadmicAdvCollection, existingCopies); 
			copy.SaJobActivityCollection = (TList<SaJobActivity>) MakeCopyOf(this.SaJobActivityCollection, existingCopies); 
			copy.EdStudSemesterTempCollection = (TList<EdStudSemesterTemp>) MakeCopyOf(this.EdStudSemesterTempCollection, existingCopies); 
			copy.GsCodeApprovalCollection = (TList<GsCodeApproval>) MakeCopyOf(this.GsCodeApprovalCollection, existingCopies); 
			copy.EntityMainCollection = (TList<EntityMain>) MakeCopyOf(this.EntityMainCollection, existingCopies); 
			copy.FeeStudInstallmentRequestCollection = (TList<FeeStudInstallmentRequest>) MakeCopyOf(this.FeeStudInstallmentRequestCollection, existingCopies); 
			copy.EdStudCourseRegAssessCollection = (TList<EdStudCourseRegAssess>) MakeCopyOf(this.EdStudCourseRegAssessCollection, existingCopies); 
			copy.SaCandReleaseCollection = (TList<SaCandRelease>) MakeCopyOf(this.SaCandReleaseCollection, existingCopies); 
			copy.EntPolcyGrdngHdrCollection = (TList<EntPolcyGrdngHdr>) MakeCopyOf(this.EntPolcyGrdngHdrCollection, existingCopies); 
			copy.EdStudSemesterCollection = (TList<EdStudSemester>) MakeCopyOf(this.EdStudSemesterCollection, existingCopies); 
			copy.SaScResearchCollection = (TList<SaScResearch>) MakeCopyOf(this.SaScResearchCollection, existingCopies); 
			copy.EdResultApproveCollection = (TList<EdResultApprove>) MakeCopyOf(this.EdResultApproveCollection, existingCopies); 
			copy.SpoSponsorStudSemesterCollection = (TList<SpoSponsorStudSemester>) MakeCopyOf(this.SpoSponsorStudSemesterCollection, existingCopies); 
			copy.EdProjectCollection = (TList<EdProject>) MakeCopyOf(this.EdProjectCollection, existingCopies); 
			copy.CoCrsRsltRaiseCollection = (TList<CoCrsRsltRaise>) MakeCopyOf(this.CoCrsRsltRaiseCollection, existingCopies); 
			copy.ScScheduleDtlCollection = (TList<ScScheduleDtl>) MakeCopyOf(this.ScScheduleDtlCollection, existingCopies); 
			copy.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection, existingCopies); 
			copy.ScSectionGroupHdrCollection = (TList<ScSectionGroupHdr>) MakeCopyOf(this.ScSectionGroupHdrCollection, existingCopies); 
			copy.EdStudIntTrnsStateFromCollection = (TList<EdStudIntTrnsStateFrom>) MakeCopyOf(this.EdStudIntTrnsStateFromCollection, existingCopies); 
			copy.FeeCdeDiscTypeCollection = (TList<FeeCdeDiscType>) MakeCopyOf(this.FeeCdeDiscTypeCollection, existingCopies); 
			copy.EdGraduationAwardCollection = (TList<EdGraduationAward>) MakeCopyOf(this.EdGraduationAwardCollection, existingCopies); 
			copy.ScBuildingCollection = (TList<ScBuilding>) MakeCopyOf(this.ScBuildingCollection, existingCopies); 
			copy.EdStudGrantTempCollection = (TList<EdStudGrantTemp>) MakeCopyOf(this.EdStudGrantTempCollection, existingCopies); 
			copy.EdInttransRuleCollection = (TList<EdInttransRule>) MakeCopyOf(this.EdInttransRuleCollection, existingCopies); 
			copy.PgOfferingCollection = (TList<PgOffering>) MakeCopyOf(this.PgOfferingCollection, existingCopies); 
			copy.EdStudStateCollection = (TList<EdStudState>) MakeCopyOf(this.EdStudStateCollection, existingCopies); 
			copy.SaPunishmentCollection = (TList<SaPunishment>) MakeCopyOf(this.SaPunishmentCollection, existingCopies); 
			copy.SaVacationRenewCollection = (TList<SaVacationRenew>) MakeCopyOf(this.SaVacationRenewCollection, existingCopies); 
			copy.EdBylawCollection = (TList<EdBylaw>) MakeCopyOf(this.EdBylawCollection, existingCopies); 
			copy.SaPromotionCondStsfCollection = (TList<SaPromotionCondStsf>) MakeCopyOf(this.SaPromotionCondStsfCollection, existingCopies); 
			copy.SaCandReleaseDetailCollection = (TList<SaCandReleaseDetail>) MakeCopyOf(this.SaCandReleaseDetailCollection, existingCopies); 
			copy.GsApprovalHCollection = (TList<GsApprovalH>) MakeCopyOf(this.GsApprovalHCollection, existingCopies); 
			copy.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection, existingCopies); 
			copy.SaTransferCollection = (TList<SaTransfer>) MakeCopyOf(this.SaTransferCollection, existingCopies); 
			copy.EdStudIntTrnsCollection = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollection, existingCopies); 
			copy.SaCodeSuperviseJobCollection = (TList<SaCodeSuperviseJob>) MakeCopyOf(this.SaCodeSuperviseJobCollection, existingCopies); 
			copy.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection, existingCopies); 
			copy.EdStudCourseCompCollection = (TList<EdStudCourseComp>) MakeCopyOf(this.EdStudCourseCompCollection, existingCopies); 
			copy.EdStudNoteCollection = (TList<EdStudNote>) MakeCopyOf(this.EdStudNoteCollection, existingCopies); 
			copy.SaDocOfFileCollection = (TList<SaDocOfFile>) MakeCopyOf(this.SaDocOfFileCollection, existingCopies); 
			copy.SvStudAskAdvReCollection = (TList<SvStudAskAdvRe>) MakeCopyOf(this.SvStudAskAdvReCollection, existingCopies); 
			copy.AdmAcceptanceCategoryCollection = (TList<AdmAcceptanceCategory>) MakeCopyOf(this.AdmAcceptanceCategoryCollection, existingCopies); 
			copy.SaVacationBalanceCollection = (TList<SaVacationBalance>) MakeCopyOf(this.SaVacationBalanceCollection, existingCopies); 
			copy.FeeStudItemCnclCollection = (TList<FeeStudItemCncl>) MakeCopyOf(this.FeeStudItemCnclCollection, existingCopies); 
			copy.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection, existingCopies); 
			copy.GsApprovalDCollection = (TList<GsApprovalD>) MakeCopyOf(this.GsApprovalDCollection, existingCopies); 
			copy.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection, existingCopies); 
			copy.GsCodeRptSignatureCollection = (TList<GsCodeRptSignature>) MakeCopyOf(this.GsCodeRptSignatureCollection, existingCopies); 
			copy.SaResearchTeamCollection = (TList<SaResearchTeam>) MakeCopyOf(this.SaResearchTeamCollection, existingCopies); 
			copy.AdmAppTransReqCollection = (TList<AdmAppTransReq>) MakeCopyOf(this.AdmAppTransReqCollection, existingCopies); 
			copy.EdSemAgendaDtlCollection = (TList<EdSemAgendaDtl>) MakeCopyOf(this.EdSemAgendaDtlCollection, existingCopies); 
			copy.EdCrsFreeRstrctdCollection = (TList<EdCrsFreeRstrctd>) MakeCopyOf(this.EdCrsFreeRstrctdCollection, existingCopies); 
			copy.EdStudGrantDegreeCollection = (TList<EdStudGrantDegree>) MakeCopyOf(this.EdStudGrantDegreeCollection, existingCopies); 
			copy.EdStudGroupPreCollection = (TList<EdStudGroupPre>) MakeCopyOf(this.EdStudGroupPreCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed AsFacultyInfo Entity 
		///</summary>
		public virtual AsFacultyInfo Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed AsFacultyInfo Entity which is a deep copy of the current entity.
		///</summary>
		public virtual AsFacultyInfo DeepCopy()
		{
			return EntityHelper.Clone<AsFacultyInfo>(this as AsFacultyInfo);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as AsFacultyInfoEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new AsFacultyInfoEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as AsFacultyInfoEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(AsFacultyInfoColumn column)
		{
			switch(column)
			{
					case AsFacultyInfoColumn.AsFacultyInfoId:
					return entityData.AsFacultyInfoId != _originalData.AsFacultyInfoId;
					case AsFacultyInfoColumn.GsCountryNodeId:
					return entityData.GsCountryNodeId != _originalData.GsCountryNodeId;
					case AsFacultyInfoColumn.FacultyAddress:
					return entityData.FacultyAddress != _originalData.FacultyAddress;
					case AsFacultyInfoColumn.FacultyDescrAr:
					return entityData.FacultyDescrAr != _originalData.FacultyDescrAr;
					case AsFacultyInfoColumn.FacultyDescrEn:
					return entityData.FacultyDescrEn != _originalData.FacultyDescrEn;
					case AsFacultyInfoColumn.ConDate:
					return entityData.ConDate != _originalData.ConDate;
					case AsFacultyInfoColumn.FacultyLogo:
					return entityData.FacultyLogo != _originalData.FacultyLogo;
					case AsFacultyInfoColumn.Notation:
					return entityData.Notation != _originalData.Notation;
					case AsFacultyInfoColumn.FacultyCode:
					return entityData.FacultyCode != _originalData.FacultyCode;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< AsFacultyInfoColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.AsFacultyInfoId != _originalData.AsFacultyInfoId;
			result = result || entityData.GsCountryNodeId != _originalData.GsCountryNodeId;
			result = result || entityData.FacultyAddress != _originalData.FacultyAddress;
			result = result || entityData.FacultyDescrAr != _originalData.FacultyDescrAr;
			result = result || entityData.FacultyDescrEn != _originalData.FacultyDescrEn;
			result = result || entityData.ConDate != _originalData.ConDate;
			result = result || entityData.FacultyLogo != _originalData.FacultyLogo;
			result = result || entityData.Notation != _originalData.Notation;
			result = result || entityData.FacultyCode != _originalData.FacultyCode;
			return result;
		}	
		
		///<summary>
		///  Returns a AsFacultyInfo Entity with the original data.
		///</summary>
		public AsFacultyInfo GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateAsFacultyInfo(
				_originalData.AsFacultyInfoId,
				_originalData.GsCountryNodeId,
				_originalData.FacultyAddress,
				_originalData.FacultyDescrAr,
				_originalData.FacultyDescrEn,
				_originalData.ConDate,
				_originalData.FacultyLogo,
				_originalData.Notation,
				_originalData.FacultyCode
				);
				
			return (AsFacultyInfo)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="AsFacultyInfoBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is AsFacultyInfoBase)
				return ValueEquals(this, (AsFacultyInfoBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="AsFacultyInfoBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.AsFacultyInfoId.GetHashCode() ^ 
					((this.GsCountryNodeId == null) ? string.Empty : this.GsCountryNodeId.ToString()).GetHashCode() ^ 
					((this.FacultyAddress == null) ? string.Empty : this.FacultyAddress.ToString()).GetHashCode() ^ 
					((this.FacultyDescrAr == null) ? string.Empty : this.FacultyDescrAr.ToString()).GetHashCode() ^ 
					((this.FacultyDescrEn == null) ? string.Empty : this.FacultyDescrEn.ToString()).GetHashCode() ^ 
					((this.ConDate == null) ? string.Empty : this.ConDate.ToString()).GetHashCode() ^ 
					((this.FacultyLogo == null) ? string.Empty : this.FacultyLogo.ToString()).GetHashCode() ^ 
					((this.Notation == null) ? string.Empty : this.Notation.ToString()).GetHashCode() ^ 
					((this.FacultyCode == null) ? string.Empty : this.FacultyCode.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="AsFacultyInfoBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(AsFacultyInfoBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="AsFacultyInfoBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="AsFacultyInfoBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="AsFacultyInfoBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(AsFacultyInfoBase Object1, AsFacultyInfoBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.AsFacultyInfoId != Object2.AsFacultyInfoId)
				equal = false;
			if ( Object1.GsCountryNodeId != null && Object2.GsCountryNodeId != null )
			{
				if (Object1.GsCountryNodeId != Object2.GsCountryNodeId)
					equal = false;
			}
			else if (Object1.GsCountryNodeId == null ^ Object2.GsCountryNodeId == null )
			{
				equal = false;
			}
			if ( Object1.FacultyAddress != null && Object2.FacultyAddress != null )
			{
				if (Object1.FacultyAddress != Object2.FacultyAddress)
					equal = false;
			}
			else if (Object1.FacultyAddress == null ^ Object2.FacultyAddress == null )
			{
				equal = false;
			}
			if ( Object1.FacultyDescrAr != null && Object2.FacultyDescrAr != null )
			{
				if (Object1.FacultyDescrAr != Object2.FacultyDescrAr)
					equal = false;
			}
			else if (Object1.FacultyDescrAr == null ^ Object2.FacultyDescrAr == null )
			{
				equal = false;
			}
			if ( Object1.FacultyDescrEn != null && Object2.FacultyDescrEn != null )
			{
				if (Object1.FacultyDescrEn != Object2.FacultyDescrEn)
					equal = false;
			}
			else if (Object1.FacultyDescrEn == null ^ Object2.FacultyDescrEn == null )
			{
				equal = false;
			}
			if ( Object1.ConDate != null && Object2.ConDate != null )
			{
				if (Object1.ConDate != Object2.ConDate)
					equal = false;
			}
			else if (Object1.ConDate == null ^ Object2.ConDate == null )
			{
				equal = false;
			}
			if ( Object1.FacultyLogo != null && Object2.FacultyLogo != null )
			{
				if (Object1.FacultyLogo != Object2.FacultyLogo)
					equal = false;
			}
			else if (Object1.FacultyLogo == null ^ Object2.FacultyLogo == null )
			{
				equal = false;
			}
			if ( Object1.Notation != null && Object2.Notation != null )
			{
				if (Object1.Notation != Object2.Notation)
					equal = false;
			}
			else if (Object1.Notation == null ^ Object2.Notation == null )
			{
				equal = false;
			}
			if ( Object1.FacultyCode != null && Object2.FacultyCode != null )
			{
				if (Object1.FacultyCode != Object2.FacultyCode)
					equal = false;
			}
			else if (Object1.FacultyCode == null ^ Object2.FacultyCode == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((AsFacultyInfoBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static AsFacultyInfoComparer GetComparer()
        {
            return new AsFacultyInfoComparer();
        }
        */

        // Comparer delegates back to AsFacultyInfo
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(AsFacultyInfo rhs, AsFacultyInfoColumn which)
        {
            switch (which)
            {
            	
            	
            	case AsFacultyInfoColumn.AsFacultyInfoId:
            		return this.AsFacultyInfoId.CompareTo(rhs.AsFacultyInfoId);
            		
            		                 
            	
            	
            	case AsFacultyInfoColumn.GsCountryNodeId:
            		return this.GsCountryNodeId.Value.CompareTo(rhs.GsCountryNodeId.Value);
            		
            		                 
            	
            	
            	case AsFacultyInfoColumn.FacultyAddress:
            		return this.FacultyAddress.CompareTo(rhs.FacultyAddress);
            		
            		                 
            	
            	
            	case AsFacultyInfoColumn.FacultyDescrAr:
            		return this.FacultyDescrAr.CompareTo(rhs.FacultyDescrAr);
            		
            		                 
            	
            	
            	case AsFacultyInfoColumn.FacultyDescrEn:
            		return this.FacultyDescrEn.CompareTo(rhs.FacultyDescrEn);
            		
            		                 
            	
            	
            	case AsFacultyInfoColumn.ConDate:
            		return this.ConDate.Value.CompareTo(rhs.ConDate.Value);
            		
            		                 
            	
            	
            	case AsFacultyInfoColumn.FacultyLogo:
            		return this.FacultyLogo.CompareTo(rhs.FacultyLogo);
            		
            		                 
            	
            	
            	case AsFacultyInfoColumn.Notation:
            		return this.Notation.Value.CompareTo(rhs.Notation.Value);
            		
            		                 
            	
            	
            	case AsFacultyInfoColumn.FacultyCode:
            		return this.FacultyCode.CompareTo(rhs.FacultyCode);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<AsFacultyInfoKey> Members
		
		// member variable for the EntityId property
		private AsFacultyInfoKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual AsFacultyInfoKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new AsFacultyInfoKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("AsFacultyInfo")
					.Append("|").Append( this.AsFacultyInfoId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{10}{9}- AsFacultyInfoId: {0}{9}- GsCountryNodeId: {1}{9}- FacultyAddress: {2}{9}- FacultyDescrAr: {3}{9}- FacultyDescrEn: {4}{9}- ConDate: {5}{9}- FacultyLogo: {6}{9}- Notation: {7}{9}- FacultyCode: {8}{9}{11}", 
				this.AsFacultyInfoId,
				(this.GsCountryNodeId == null) ? string.Empty : this.GsCountryNodeId.ToString(),
				(this.FacultyAddress == null) ? string.Empty : this.FacultyAddress.ToString(),
				(this.FacultyDescrAr == null) ? string.Empty : this.FacultyDescrAr.ToString(),
				(this.FacultyDescrEn == null) ? string.Empty : this.FacultyDescrEn.ToString(),
				(this.ConDate == null) ? string.Empty : this.ConDate.ToString(),
				(this.FacultyLogo == null) ? string.Empty : this.FacultyLogo.ToString(),
				(this.Notation == null) ? string.Empty : this.Notation.ToString(),
				(this.FacultyCode == null) ? string.Empty : this.FacultyCode.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'AS_FACULTY_INFO' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class AsFacultyInfoEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// AS_FACULTY_INFO_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "AS_FACULTY_INFO"</remarks>
		public System.Decimal AsFacultyInfoId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalAsFacultyInfoId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// GS_COUNTRY_NODE_ID : 
		/// </summary>
		public System.Decimal?		  GsCountryNodeId = null;
		
		/// <summary>
		/// FACULTY_ADDRESS : 
		/// </summary>
		public System.String		  FacultyAddress = null;
		
		/// <summary>
		/// FACULTY_DESCR_AR : 
		/// </summary>
		public System.String		  FacultyDescrAr = null;
		
		/// <summary>
		/// FACULTY_DESCR_EN : 
		/// </summary>
		public System.String		  FacultyDescrEn = null;
		
		/// <summary>
		/// CON_DATE : 
		/// </summary>
		public System.DateTime?		  ConDate = null;
		
		/// <summary>
		/// FACULTY_LOGO : 
		/// </summary>
		public System.String		  FacultyLogo = null;
		
		/// <summary>
		/// NOTATION : 
		/// </summary>
		public System.Int32?		  Notation = null;
		
		/// <summary>
		/// FACULTY_CODE : 
		/// </summary>
		public System.String		  FacultyCode = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private GsCountryNode _gsCountryNodeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryNodeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCountryNode GsCountryNodeIdSource
      	{
            get { return this._gsCountryNodeIdSource; }
            set { this._gsCountryNodeIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region EdBranchRuleCollection
		
		private TList<EdBranchRule> _edBranchRuleAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edBranchRuleAsFacultyInfoId
		/// </summary>
		
		public TList<EdBranchRule> EdBranchRuleCollection
		{
			get
			{
				if (_edBranchRuleAsFacultyInfoId == null)
				{
				_edBranchRuleAsFacultyInfoId = new TList<EdBranchRule>();
				}
	
				return _edBranchRuleAsFacultyInfoId;
			}
			set { _edBranchRuleAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaMilitaryStatusCollection
		
		private TList<SaMilitaryStatus> _saMilitaryStatusAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saMilitaryStatusAsFacultyInfoId
		/// </summary>
		
		public TList<SaMilitaryStatus> SaMilitaryStatusCollection
		{
			get
			{
				if (_saMilitaryStatusAsFacultyInfoId == null)
				{
				_saMilitaryStatusAsFacultyInfoId = new TList<SaMilitaryStatus>();
				}
	
				return _saMilitaryStatusAsFacultyInfoId;
			}
			set { _saMilitaryStatusAsFacultyInfoId = value; }
		}
		
		#endregion

		#region ScStudGroupCollection
		
		private TList<ScStudGroup> _scStudGroupAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scStudGroupAsFacultyInfoId
		/// </summary>
		
		public TList<ScStudGroup> ScStudGroupCollection
		{
			get
			{
				if (_scStudGroupAsFacultyInfoId == null)
				{
				_scStudGroupAsFacultyInfoId = new TList<ScStudGroup>();
				}
	
				return _scStudGroupAsFacultyInfoId;
			}
			set { _scStudGroupAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaRelativeCollection
		
		private TList<SaRelative> _saRelativeAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saRelativeAsFacultyInfoId
		/// </summary>
		
		public TList<SaRelative> SaRelativeCollection
		{
			get
			{
				if (_saRelativeAsFacultyInfoId == null)
				{
				_saRelativeAsFacultyInfoId = new TList<SaRelative>();
				}
	
				return _saRelativeAsFacultyInfoId;
			}
			set { _saRelativeAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SeBlockTransCollection
		
		private TList<SeBlockTrans> _seBlockTransAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _seBlockTransAsFacultyInfoId
		/// </summary>
		
		public TList<SeBlockTrans> SeBlockTransCollection
		{
			get
			{
				if (_seBlockTransAsFacultyInfoId == null)
				{
				_seBlockTransAsFacultyInfoId = new TList<SeBlockTrans>();
				}
	
				return _seBlockTransAsFacultyInfoId;
			}
			set { _seBlockTransAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SpoSponsorStudCollection
		
		private TList<SpoSponsorStud> _spoSponsorStudAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorStudAsFacultyInfoId
		/// </summary>
		
		public TList<SpoSponsorStud> SpoSponsorStudCollection
		{
			get
			{
				if (_spoSponsorStudAsFacultyInfoId == null)
				{
				_spoSponsorStudAsFacultyInfoId = new TList<SpoSponsorStud>();
				}
	
				return _spoSponsorStudAsFacultyInfoId;
			}
			set { _spoSponsorStudAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdCodeCourseAssessCollection
		
		private TList<EdCodeCourseAssess> _edCodeCourseAssessAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCodeCourseAssessAsFacultyInfoId
		/// </summary>
		
		public TList<EdCodeCourseAssess> EdCodeCourseAssessCollection
		{
			get
			{
				if (_edCodeCourseAssessAsFacultyInfoId == null)
				{
				_edCodeCourseAssessAsFacultyInfoId = new TList<EdCodeCourseAssess>();
				}
	
				return _edCodeCourseAssessAsFacultyInfoId;
			}
			set { _edCodeCourseAssessAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdCodeDischargeHCollection
		
		private TList<EdCodeDischargeH> _edCodeDischargeHAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCodeDischargeHAsFacultyInfoId
		/// </summary>
		
		public TList<EdCodeDischargeH> EdCodeDischargeHCollection
		{
			get
			{
				if (_edCodeDischargeHAsFacultyInfoId == null)
				{
				_edCodeDischargeHAsFacultyInfoId = new TList<EdCodeDischargeH>();
				}
	
				return _edCodeDischargeHAsFacultyInfoId;
			}
			set { _edCodeDischargeHAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaCdeAcadLoadCollection
		
		private TList<SaCdeAcadLoad> _saCdeAcadLoadAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saCdeAcadLoadAsFacultyInfoId
		/// </summary>
		
		public TList<SaCdeAcadLoad> SaCdeAcadLoadCollection
		{
			get
			{
				if (_saCdeAcadLoadAsFacultyInfoId == null)
				{
				_saCdeAcadLoadAsFacultyInfoId = new TList<SaCdeAcadLoad>();
				}
	
				return _saCdeAcadLoadAsFacultyInfoId;
			}
			set { _saCdeAcadLoadAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaEmpHierarchyCollection
		
		private TList<SaEmpHierarchy> _saEmpHierarchyAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saEmpHierarchyAsFacultyInfoId
		/// </summary>
		
		public TList<SaEmpHierarchy> SaEmpHierarchyCollection
		{
			get
			{
				if (_saEmpHierarchyAsFacultyInfoId == null)
				{
				_saEmpHierarchyAsFacultyInfoId = new TList<SaEmpHierarchy>();
				}
	
				return _saEmpHierarchyAsFacultyInfoId;
			}
			set { _saEmpHierarchyAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdCodeCourseTeachingCollection
		
		private TList<EdCodeCourseTeaching> _edCodeCourseTeachingAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCodeCourseTeachingAsFacultyInfoId
		/// </summary>
		
		public TList<EdCodeCourseTeaching> EdCodeCourseTeachingCollection
		{
			get
			{
				if (_edCodeCourseTeachingAsFacultyInfoId == null)
				{
				_edCodeCourseTeachingAsFacultyInfoId = new TList<EdCodeCourseTeaching>();
				}
	
				return _edCodeCourseTeachingAsFacultyInfoId;
			}
			set { _edCodeCourseTeachingAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudCourseRegPreCollection
		
		private TList<EdStudCourseRegPre> _edStudCourseRegPreAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegPreAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudCourseRegPre> EdStudCourseRegPreCollection
		{
			get
			{
				if (_edStudCourseRegPreAsFacultyInfoId == null)
				{
				_edStudCourseRegPreAsFacultyInfoId = new TList<EdStudCourseRegPre>();
				}
	
				return _edStudCourseRegPreAsFacultyInfoId;
			}
			set { _edStudCourseRegPreAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudExcuseCollection
		
		private TList<EdStudExcuse> _edStudExcuseAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudExcuseAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudExcuse> EdStudExcuseCollection
		{
			get
			{
				if (_edStudExcuseAsFacultyInfoId == null)
				{
				_edStudExcuseAsFacultyInfoId = new TList<EdStudExcuse>();
				}
	
				return _edStudExcuseAsFacultyInfoId;
			}
			set { _edStudExcuseAsFacultyInfoId = value; }
		}
		
		#endregion

		#region GsCommCollection
		
		private TList<GsComm> _gsCommAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _gsCommAsFacultyInfoId
		/// </summary>
		
		public TList<GsComm> GsCommCollection
		{
			get
			{
				if (_gsCommAsFacultyInfoId == null)
				{
				_gsCommAsFacultyInfoId = new TList<GsComm>();
				}
	
				return _gsCommAsFacultyInfoId;
			}
			set { _gsCommAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaJobStartStatmentCollection
		
		private TList<SaJobStartStatment> _saJobStartStatmentAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saJobStartStatmentAsFacultyInfoId
		/// </summary>
		
		public TList<SaJobStartStatment> SaJobStartStatmentCollection
		{
			get
			{
				if (_saJobStartStatmentAsFacultyInfoId == null)
				{
				_saJobStartStatmentAsFacultyInfoId = new TList<SaJobStartStatment>();
				}
	
				return _saJobStartStatmentAsFacultyInfoId;
			}
			set { _saJobStartStatmentAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudAcadWarnCollection
		
		private TList<EdStudAcadWarn> _edStudAcadWarnAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAcadWarnAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudAcadWarn> EdStudAcadWarnCollection
		{
			get
			{
				if (_edStudAcadWarnAsFacultyInfoId == null)
				{
				_edStudAcadWarnAsFacultyInfoId = new TList<EdStudAcadWarn>();
				}
	
				return _edStudAcadWarnAsFacultyInfoId;
			}
			set { _edStudAcadWarnAsFacultyInfoId = value; }
		}
		
		#endregion

		#region PgThesisGrantDegreeCollection
		
		private TList<PgThesisGrantDegree> _pgThesisGrantDegreeAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisGrantDegreeAsFacultyInfoId
		/// </summary>
		
		public TList<PgThesisGrantDegree> PgThesisGrantDegreeCollection
		{
			get
			{
				if (_pgThesisGrantDegreeAsFacultyInfoId == null)
				{
				_pgThesisGrantDegreeAsFacultyInfoId = new TList<PgThesisGrantDegree>();
				}
	
				return _pgThesisGrantDegreeAsFacultyInfoId;
			}
			set { _pgThesisGrantDegreeAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdCourseTopicCollection
		
		private TList<EdCourseTopic> _edCourseTopicAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseTopicAsFacultyInfoId
		/// </summary>
		
		public TList<EdCourseTopic> EdCourseTopicCollection
		{
			get
			{
				if (_edCourseTopicAsFacultyInfoId == null)
				{
				_edCourseTopicAsFacultyInfoId = new TList<EdCourseTopic>();
				}
	
				return _edCourseTopicAsFacultyInfoId;
			}
			set { _edCourseTopicAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeFineCollection
		
		private TList<FeeFine> _feeFineAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeFineAsFacultyInfoId
		/// </summary>
		
		public TList<FeeFine> FeeFineCollection
		{
			get
			{
				if (_feeFineAsFacultyInfoId == null)
				{
				_feeFineAsFacultyInfoId = new TList<FeeFine>();
				}
	
				return _feeFineAsFacultyInfoId;
			}
			set { _feeFineAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudQualSubjectCollection
		
		private TList<EdStudQualSubject> _edStudQualSubjectAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudQualSubjectAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudQualSubject> EdStudQualSubjectCollection
		{
			get
			{
				if (_edStudQualSubjectAsFacultyInfoId == null)
				{
				_edStudQualSubjectAsFacultyInfoId = new TList<EdStudQualSubject>();
				}
	
				return _edStudQualSubjectAsFacultyInfoId;
			}
			set { _edStudQualSubjectAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsCourseToCollection
		
		private TList<EdStudIntTrnsCourseTo> _edStudIntTrnsCourseToAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsCourseToAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudIntTrnsCourseTo> EdStudIntTrnsCourseToCollection
		{
			get
			{
				if (_edStudIntTrnsCourseToAsFacultyInfoId == null)
				{
				_edStudIntTrnsCourseToAsFacultyInfoId = new TList<EdStudIntTrnsCourseTo>();
				}
	
				return _edStudIntTrnsCourseToAsFacultyInfoId;
			}
			set { _edStudIntTrnsCourseToAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeStudNatSimilarityRequestCollection
		
		private TList<FeeStudNatSimilarityRequest> _feeStudNatSimilarityRequestAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudNatSimilarityRequestAsFacultyInfoId
		/// </summary>
		
		public TList<FeeStudNatSimilarityRequest> FeeStudNatSimilarityRequestCollection
		{
			get
			{
				if (_feeStudNatSimilarityRequestAsFacultyInfoId == null)
				{
				_feeStudNatSimilarityRequestAsFacultyInfoId = new TList<FeeStudNatSimilarityRequest>();
				}
	
				return _feeStudNatSimilarityRequestAsFacultyInfoId;
			}
			set { _feeStudNatSimilarityRequestAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaJobStoppageCollection
		
		private TList<SaJobStoppage> _saJobStoppageAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saJobStoppageAsFacultyInfoId
		/// </summary>
		
		public TList<SaJobStoppage> SaJobStoppageCollection
		{
			get
			{
				if (_saJobStoppageAsFacultyInfoId == null)
				{
				_saJobStoppageAsFacultyInfoId = new TList<SaJobStoppage>();
				}
	
				return _saJobStoppageAsFacultyInfoId;
			}
			set { _saJobStoppageAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaPromotionRequestCollection
		
		private TList<SaPromotionRequest> _saPromotionRequestAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saPromotionRequestAsFacultyInfoId
		/// </summary>
		
		public TList<SaPromotionRequest> SaPromotionRequestCollection
		{
			get
			{
				if (_saPromotionRequestAsFacultyInfoId == null)
				{
				_saPromotionRequestAsFacultyInfoId = new TList<SaPromotionRequest>();
				}
	
				return _saPromotionRequestAsFacultyInfoId;
			}
			set { _saPromotionRequestAsFacultyInfoId = value; }
		}
		
		#endregion

		#region CoScheduleDetailCollection
		
		private TList<CoScheduleDetail> _coScheduleDetailAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coScheduleDetailAsFacultyInfoId
		/// </summary>
		
		public TList<CoScheduleDetail> CoScheduleDetailCollection
		{
			get
			{
				if (_coScheduleDetailAsFacultyInfoId == null)
				{
				_coScheduleDetailAsFacultyInfoId = new TList<CoScheduleDetail>();
				}
	
				return _coScheduleDetailAsFacultyInfoId;
			}
			set { _coScheduleDetailAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaVacationBalanceHCollection
		
		private TList<SaVacationBalanceH> _saVacationBalanceHAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saVacationBalanceHAsFacultyInfoId
		/// </summary>
		
		public TList<SaVacationBalanceH> SaVacationBalanceHCollection
		{
			get
			{
				if (_saVacationBalanceHAsFacultyInfoId == null)
				{
				_saVacationBalanceHAsFacultyInfoId = new TList<SaVacationBalanceH>();
				}
	
				return _saVacationBalanceHAsFacultyInfoId;
			}
			set { _saVacationBalanceHAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaPublicationCollection
		
		private TList<SaPublication> _saPublicationAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saPublicationAsFacultyInfoId
		/// </summary>
		
		public TList<SaPublication> SaPublicationCollection
		{
			get
			{
				if (_saPublicationAsFacultyInfoId == null)
				{
				_saPublicationAsFacultyInfoId = new TList<SaPublication>();
				}
	
				return _saPublicationAsFacultyInfoId;
			}
			set { _saPublicationAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeFacultyRuleCollection
		
		private TList<FeeFacultyRule> _feeFacultyRuleAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeFacultyRuleAsFacultyInfoId
		/// </summary>
		
		public TList<FeeFacultyRule> FeeFacultyRuleCollection
		{
			get
			{
				if (_feeFacultyRuleAsFacultyInfoId == null)
				{
				_feeFacultyRuleAsFacultyInfoId = new TList<FeeFacultyRule>();
				}
	
				return _feeFacultyRuleAsFacultyInfoId;
			}
			set { _feeFacultyRuleAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SvPollHdrCollection
		
		private TList<SvPollHdr> _svPollHdrAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svPollHdrAsFacultyInfoId
		/// </summary>
		
		public TList<SvPollHdr> SvPollHdrCollection
		{
			get
			{
				if (_svPollHdrAsFacultyInfoId == null)
				{
				_svPollHdrAsFacultyInfoId = new TList<SvPollHdr>();
				}
	
				return _svPollHdrAsFacultyInfoId;
			}
			set { _svPollHdrAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeStudVoucherCollection
		
		private TList<FeeStudVoucher> _feeStudVoucherAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudVoucherAsFacultyInfoId
		/// </summary>
		
		public TList<FeeStudVoucher> FeeStudVoucherCollection
		{
			get
			{
				if (_feeStudVoucherAsFacultyInfoId == null)
				{
				_feeStudVoucherAsFacultyInfoId = new TList<FeeStudVoucher>();
				}
	
				return _feeStudVoucherAsFacultyInfoId;
			}
			set { _feeStudVoucherAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdAcadYearFacultyCollection
		
		private TList<EdAcadYearFaculty> _edAcadYearFacultyAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edAcadYearFacultyAsFacultyInfoId
		/// </summary>
		
		public TList<EdAcadYearFaculty> EdAcadYearFacultyCollection
		{
			get
			{
				if (_edAcadYearFacultyAsFacultyInfoId == null)
				{
				_edAcadYearFacultyAsFacultyInfoId = new TList<EdAcadYearFaculty>();
				}
	
				return _edAcadYearFacultyAsFacultyInfoId;
			}
			set { _edAcadYearFacultyAsFacultyInfoId = value; }
		}
		
		#endregion

		#region RsrchStudPostponeReqCollection
		
		private TList<RsrchStudPostponeReq> _rsrchStudPostponeReqAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _rsrchStudPostponeReqAsFacultyInfoId
		/// </summary>
		
		public TList<RsrchStudPostponeReq> RsrchStudPostponeReqCollection
		{
			get
			{
				if (_rsrchStudPostponeReqAsFacultyInfoId == null)
				{
				_rsrchStudPostponeReqAsFacultyInfoId = new TList<RsrchStudPostponeReq>();
				}
	
				return _rsrchStudPostponeReqAsFacultyInfoId;
			}
			set { _rsrchStudPostponeReqAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SeUserCrsAssessCollection
		
		private TList<SeUserCrsAssess> _seUserCrsAssessAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _seUserCrsAssessAsFacultyInfoId
		/// </summary>
		
		public TList<SeUserCrsAssess> SeUserCrsAssessCollection
		{
			get
			{
				if (_seUserCrsAssessAsFacultyInfoId == null)
				{
				_seUserCrsAssessAsFacultyInfoId = new TList<SeUserCrsAssess>();
				}
	
				return _seUserCrsAssessAsFacultyInfoId;
			}
			set { _seUserCrsAssessAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudTransFromReqCollection
		
		private TList<EdStudTransFromReq> _edStudTransFromReqAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudTransFromReqAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudTransFromReq> EdStudTransFromReqCollection
		{
			get
			{
				if (_edStudTransFromReqAsFacultyInfoId == null)
				{
				_edStudTransFromReqAsFacultyInfoId = new TList<EdStudTransFromReq>();
				}
	
				return _edStudTransFromReqAsFacultyInfoId;
			}
			set { _edStudTransFromReqAsFacultyInfoId = value; }
		}
		
		#endregion

		#region GsCdeClrncItemFacCollection
		
		private TList<GsCdeClrncItemFac> _gsCdeClrncItemFacAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _gsCdeClrncItemFacAsFacultyInfoId
		/// </summary>
		
		public TList<GsCdeClrncItemFac> GsCdeClrncItemFacCollection
		{
			get
			{
				if (_gsCdeClrncItemFacAsFacultyInfoId == null)
				{
				_gsCdeClrncItemFacAsFacultyInfoId = new TList<GsCdeClrncItemFac>();
				}
	
				return _gsCdeClrncItemFacAsFacultyInfoId;
			}
			set { _gsCdeClrncItemFacAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaRaiseCollection
		
		private TList<SaRaise> _saRaiseAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saRaiseAsFacultyInfoId
		/// </summary>
		
		public TList<SaRaise> SaRaiseCollection
		{
			get
			{
				if (_saRaiseAsFacultyInfoId == null)
				{
				_saRaiseAsFacultyInfoId = new TList<SaRaise>();
				}
	
				return _saRaiseAsFacultyInfoId;
			}
			set { _saRaiseAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsStateToCollection
		
		private TList<EdStudIntTrnsStateTo> _edStudIntTrnsStateToAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsStateToAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudIntTrnsStateTo> EdStudIntTrnsStateToCollection
		{
			get
			{
				if (_edStudIntTrnsStateToAsFacultyInfoId == null)
				{
				_edStudIntTrnsStateToAsFacultyInfoId = new TList<EdStudIntTrnsStateTo>();
				}
	
				return _edStudIntTrnsStateToAsFacultyInfoId;
			}
			set { _edStudIntTrnsStateToAsFacultyInfoId = value; }
		}
		
		#endregion

		#region AdmPrecondQualCollection
		
		private TList<AdmPrecondQual> _admPrecondQualAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admPrecondQualAsFacultyInfoId
		/// </summary>
		
		public TList<AdmPrecondQual> AdmPrecondQualCollection
		{
			get
			{
				if (_admPrecondQualAsFacultyInfoId == null)
				{
				_admPrecondQualAsFacultyInfoId = new TList<AdmPrecondQual>();
				}
	
				return _admPrecondQualAsFacultyInfoId;
			}
			set { _admPrecondQualAsFacultyInfoId = value; }
		}
		
		#endregion

		#region AdmRatingParametersMajorsCollection
		
		private TList<AdmRatingParametersMajors> _admRatingParametersMajorsAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admRatingParametersMajorsAsFacultyInfoId
		/// </summary>
		
		public TList<AdmRatingParametersMajors> AdmRatingParametersMajorsCollection
		{
			get
			{
				if (_admRatingParametersMajorsAsFacultyInfoId == null)
				{
				_admRatingParametersMajorsAsFacultyInfoId = new TList<AdmRatingParametersMajors>();
				}
	
				return _admRatingParametersMajorsAsFacultyInfoId;
			}
			set { _admRatingParametersMajorsAsFacultyInfoId = value; }
		}
		
		#endregion

		#region ScSchdlPeriodCollection
		
		private TList<ScSchdlPeriod> _scSchdlPeriodAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scSchdlPeriodAsFacultyInfoId
		/// </summary>
		
		public TList<ScSchdlPeriod> ScSchdlPeriodCollection
		{
			get
			{
				if (_scSchdlPeriodAsFacultyInfoId == null)
				{
				_scSchdlPeriodAsFacultyInfoId = new TList<ScSchdlPeriod>();
				}
	
				return _scSchdlPeriodAsFacultyInfoId;
			}
			set { _scSchdlPeriodAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeStudRetrieveRequestCollection
		
		private TList<FeeStudRetrieveRequest> _feeStudRetrieveRequestAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudRetrieveRequestAsFacultyInfoId
		/// </summary>
		
		public TList<FeeStudRetrieveRequest> FeeStudRetrieveRequestCollection
		{
			get
			{
				if (_feeStudRetrieveRequestAsFacultyInfoId == null)
				{
				_feeStudRetrieveRequestAsFacultyInfoId = new TList<FeeStudRetrieveRequest>();
				}
	
				return _feeStudRetrieveRequestAsFacultyInfoId;
			}
			set { _feeStudRetrieveRequestAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaExtDelCollection
		
		private TList<SaExtDel> _saExtDelAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saExtDelAsFacultyInfoId
		/// </summary>
		
		public TList<SaExtDel> SaExtDelCollection
		{
			get
			{
				if (_saExtDelAsFacultyInfoId == null)
				{
				_saExtDelAsFacultyInfoId = new TList<SaExtDel>();
				}
	
				return _saExtDelAsFacultyInfoId;
			}
			set { _saExtDelAsFacultyInfoId = value; }
		}
		
		#endregion

		#region ScHallRsrvCollection
		
		private TList<ScHallRsrv> _scHallRsrvAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scHallRsrvAsFacultyInfoId
		/// </summary>
		
		public TList<ScHallRsrv> ScHallRsrvCollection
		{
			get
			{
				if (_scHallRsrvAsFacultyInfoId == null)
				{
				_scHallRsrvAsFacultyInfoId = new TList<ScHallRsrv>();
				}
	
				return _scHallRsrvAsFacultyInfoId;
			}
			set { _scHallRsrvAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdResidencyStudCollection
		
		private TList<EdResidencyStud> _edResidencyStudAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edResidencyStudAsFacultyInfoId
		/// </summary>
		
		public TList<EdResidencyStud> EdResidencyStudCollection
		{
			get
			{
				if (_edResidencyStudAsFacultyInfoId == null)
				{
				_edResidencyStudAsFacultyInfoId = new TList<EdResidencyStud>();
				}
	
				return _edResidencyStudAsFacultyInfoId;
			}
			set { _edResidencyStudAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudCourseChngCollection
		
		private TList<EdStudCourseChng> _edStudCourseChngAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseChngAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudCourseChng> EdStudCourseChngCollection
		{
			get
			{
				if (_edStudCourseChngAsFacultyInfoId == null)
				{
				_edStudCourseChngAsFacultyInfoId = new TList<EdStudCourseChng>();
				}
	
				return _edStudCourseChngAsFacultyInfoId;
			}
			set { _edStudCourseChngAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdCourseCollection
		
		private TList<EdCourse> _edCourseAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseAsFacultyInfoId
		/// </summary>
		
		public TList<EdCourse> EdCourseCollection
		{
			get
			{
				if (_edCourseAsFacultyInfoId == null)
				{
				_edCourseAsFacultyInfoId = new TList<EdCourse>();
				}
	
				return _edCourseAsFacultyInfoId;
			}
			set { _edCourseAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SvAutoMsgTmpltCollection
		
		private TList<SvAutoMsgTmplt> _svAutoMsgTmpltAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svAutoMsgTmpltAsFacultyInfoId
		/// </summary>
		
		public TList<SvAutoMsgTmplt> SvAutoMsgTmpltCollection
		{
			get
			{
				if (_svAutoMsgTmpltAsFacultyInfoId == null)
				{
				_svAutoMsgTmpltAsFacultyInfoId = new TList<SvAutoMsgTmplt>();
				}
	
				return _svAutoMsgTmpltAsFacultyInfoId;
			}
			set { _svAutoMsgTmpltAsFacultyInfoId = value; }
		}
		
		#endregion

		#region ScScheduleRsrvCollection
		
		private TList<ScScheduleRsrv> _scScheduleRsrvAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scScheduleRsrvAsFacultyInfoId
		/// </summary>
		
		public TList<ScScheduleRsrv> ScScheduleRsrvCollection
		{
			get
			{
				if (_scScheduleRsrvAsFacultyInfoId == null)
				{
				_scScheduleRsrvAsFacultyInfoId = new TList<ScScheduleRsrv>();
				}
	
				return _scScheduleRsrvAsFacultyInfoId;
			}
			set { _scScheduleRsrvAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaScCommDecisionCollection
		
		private TList<SaScCommDecision> _saScCommDecisionAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saScCommDecisionAsFacultyInfoId
		/// </summary>
		
		public TList<SaScCommDecision> SaScCommDecisionCollection
		{
			get
			{
				if (_saScCommDecisionAsFacultyInfoId == null)
				{
				_saScCommDecisionAsFacultyInfoId = new TList<SaScCommDecision>();
				}
	
				return _saScCommDecisionAsFacultyInfoId;
			}
			set { _saScCommDecisionAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudIntTransPrefCollection
		
		private TList<EdStudIntTransPref> _edStudIntTransPrefAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTransPrefAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudIntTransPref> EdStudIntTransPrefCollection
		{
			get
			{
				if (_edStudIntTransPrefAsFacultyInfoId == null)
				{
				_edStudIntTransPrefAsFacultyInfoId = new TList<EdStudIntTransPref>();
				}
	
				return _edStudIntTransPrefAsFacultyInfoId;
			}
			set { _edStudIntTransPrefAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaTrainingCourseCollection
		
		private TList<SaTrainingCourse> _saTrainingCourseAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saTrainingCourseAsFacultyInfoId
		/// </summary>
		
		public TList<SaTrainingCourse> SaTrainingCourseCollection
		{
			get
			{
				if (_saTrainingCourseAsFacultyInfoId == null)
				{
				_saTrainingCourseAsFacultyInfoId = new TList<SaTrainingCourse>();
				}
	
				return _saTrainingCourseAsFacultyInfoId;
			}
			set { _saTrainingCourseAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaMiltaryCollection
		
		private TList<SaMiltary> _saMiltaryAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saMiltaryAsFacultyInfoId
		/// </summary>
		
		public TList<SaMiltary> SaMiltaryCollection
		{
			get
			{
				if (_saMiltaryAsFacultyInfoId == null)
				{
				_saMiltaryAsFacultyInfoId = new TList<SaMiltary>();
				}
	
				return _saMiltaryAsFacultyInfoId;
			}
			set { _saMiltaryAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeInstlmntRuleCollection
		
		private TList<FeeInstlmntRule> _feeInstlmntRuleAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeInstlmntRuleAsFacultyInfoId
		/// </summary>
		
		public TList<FeeInstlmntRule> FeeInstlmntRuleCollection
		{
			get
			{
				if (_feeInstlmntRuleAsFacultyInfoId == null)
				{
				_feeInstlmntRuleAsFacultyInfoId = new TList<FeeInstlmntRule>();
				}
	
				return _feeInstlmntRuleAsFacultyInfoId;
			}
			set { _feeInstlmntRuleAsFacultyInfoId = value; }
		}
		
		#endregion

		#region AdmCompetitiveAvgCollection
		
		private TList<AdmCompetitiveAvg> _admCompetitiveAvgAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admCompetitiveAvgAsFacultyInfoId
		/// </summary>
		
		public TList<AdmCompetitiveAvg> AdmCompetitiveAvgCollection
		{
			get
			{
				if (_admCompetitiveAvgAsFacultyInfoId == null)
				{
				_admCompetitiveAvgAsFacultyInfoId = new TList<AdmCompetitiveAvg>();
				}
	
				return _admCompetitiveAvgAsFacultyInfoId;
			}
			set { _admCompetitiveAvgAsFacultyInfoId = value; }
		}
		
		#endregion

		#region RsrchStudRegisterCollection
		
		private TList<RsrchStudRegister> _rsrchStudRegisterAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _rsrchStudRegisterAsFacultyInfoId
		/// </summary>
		
		public TList<RsrchStudRegister> RsrchStudRegisterCollection
		{
			get
			{
				if (_rsrchStudRegisterAsFacultyInfoId == null)
				{
				_rsrchStudRegisterAsFacultyInfoId = new TList<RsrchStudRegister>();
				}
	
				return _rsrchStudRegisterAsFacultyInfoId;
			}
			set { _rsrchStudRegisterAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SeFormCollection
		
		private TList<SeForm> _seFormAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _seFormAsFacultyInfoId
		/// </summary>
		
		public TList<SeForm> SeFormCollection
		{
			get
			{
				if (_seFormAsFacultyInfoId == null)
				{
				_seFormAsFacultyInfoId = new TList<SeForm>();
				}
	
				return _seFormAsFacultyInfoId;
			}
			set { _seFormAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdOfferingCourseCollection
		
		private TList<EdOfferingCourse> _edOfferingCourseAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edOfferingCourseAsFacultyInfoId
		/// </summary>
		
		public TList<EdOfferingCourse> EdOfferingCourseCollection
		{
			get
			{
				if (_edOfferingCourseAsFacultyInfoId == null)
				{
				_edOfferingCourseAsFacultyInfoId = new TList<EdOfferingCourse>();
				}
	
				return _edOfferingCourseAsFacultyInfoId;
			}
			set { _edOfferingCourseAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeLimitRuleCollection
		
		private TList<FeeLimitRule> _feeLimitRuleAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeLimitRuleAsFacultyInfoId
		/// </summary>
		
		public TList<FeeLimitRule> FeeLimitRuleCollection
		{
			get
			{
				if (_feeLimitRuleAsFacultyInfoId == null)
				{
				_feeLimitRuleAsFacultyInfoId = new TList<FeeLimitRule>();
				}
	
				return _feeLimitRuleAsFacultyInfoId;
			}
			set { _feeLimitRuleAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaExperienceCollection
		
		private TList<SaExperience> _saExperienceAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saExperienceAsFacultyInfoId
		/// </summary>
		
		public TList<SaExperience> SaExperienceCollection
		{
			get
			{
				if (_saExperienceAsFacultyInfoId == null)
				{
				_saExperienceAsFacultyInfoId = new TList<SaExperience>();
				}
	
				return _saExperienceAsFacultyInfoId;
			}
			set { _saExperienceAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaServTerminCollection
		
		private TList<SaServTermin> _saServTerminAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saServTerminAsFacultyInfoId
		/// </summary>
		
		public TList<SaServTermin> SaServTerminCollection
		{
			get
			{
				if (_saServTerminAsFacultyInfoId == null)
				{
				_saServTerminAsFacultyInfoId = new TList<SaServTermin>();
				}
	
				return _saServTerminAsFacultyInfoId;
			}
			set { _saServTerminAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdOfferingCollection
		
		private TList<EdOffering> _edOfferingAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edOfferingAsFacultyInfoId
		/// </summary>
		
		public TList<EdOffering> EdOfferingCollection
		{
			get
			{
				if (_edOfferingAsFacultyInfoId == null)
				{
				_edOfferingAsFacultyInfoId = new TList<EdOffering>();
				}
	
				return _edOfferingAsFacultyInfoId;
			}
			set { _edOfferingAsFacultyInfoId = value; }
		}
		
		#endregion

		#region AdmAppPrefCollection
		
		private TList<AdmAppPref> _admAppPrefAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppPrefAsFacultyInfoId
		/// </summary>
		
		public TList<AdmAppPref> AdmAppPrefCollection
		{
			get
			{
				if (_admAppPrefAsFacultyInfoId == null)
				{
				_admAppPrefAsFacultyInfoId = new TList<AdmAppPref>();
				}
	
				return _admAppPrefAsFacultyInfoId;
			}
			set { _admAppPrefAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudAbsenceCollection
		
		private TList<EdStudAbsence> _edStudAbsenceAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAbsenceAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudAbsence> EdStudAbsenceCollection
		{
			get
			{
				if (_edStudAbsenceAsFacultyInfoId == null)
				{
				_edStudAbsenceAsFacultyInfoId = new TList<EdStudAbsence>();
				}
	
				return _edStudAbsenceAsFacultyInfoId;
			}
			set { _edStudAbsenceAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaWarningCollection
		
		private TList<SaWarning> _saWarningAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saWarningAsFacultyInfoId
		/// </summary>
		
		public TList<SaWarning> SaWarningCollection
		{
			get
			{
				if (_saWarningAsFacultyInfoId == null)
				{
				_saWarningAsFacultyInfoId = new TList<SaWarning>();
				}
	
				return _saWarningAsFacultyInfoId;
			}
			set { _saWarningAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudStateTempCollection
		
		private TList<EdStudStateTemp> _edStudStateTempAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudStateTempAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudStateTemp> EdStudStateTempCollection
		{
			get
			{
				if (_edStudStateTempAsFacultyInfoId == null)
				{
				_edStudStateTempAsFacultyInfoId = new TList<EdStudStateTemp>();
				}
	
				return _edStudStateTempAsFacultyInfoId;
			}
			set { _edStudStateTempAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaPromotionCollection
		
		private TList<SaPromotion> _saPromotionAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saPromotionAsFacultyInfoId
		/// </summary>
		
		public TList<SaPromotion> SaPromotionCollection
		{
			get
			{
				if (_saPromotionAsFacultyInfoId == null)
				{
				_saPromotionAsFacultyInfoId = new TList<SaPromotion>();
				}
	
				return _saPromotionAsFacultyInfoId;
			}
			set { _saPromotionAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SvStaffEvlCollection
		
		private TList<SvStaffEvl> _svStaffEvlAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStaffEvlAsFacultyInfoId
		/// </summary>
		
		public TList<SvStaffEvl> SvStaffEvlCollection
		{
			get
			{
				if (_svStaffEvlAsFacultyInfoId == null)
				{
				_svStaffEvlAsFacultyInfoId = new TList<SvStaffEvl>();
				}
	
				return _svStaffEvlAsFacultyInfoId;
			}
			set { _svStaffEvlAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SpoSponsorOfferCollection
		
		private TList<SpoSponsorOffer> _spoSponsorOfferAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorOfferAsFacultyInfoId
		/// </summary>
		
		public TList<SpoSponsorOffer> SpoSponsorOfferCollection
		{
			get
			{
				if (_spoSponsorOfferAsFacultyInfoId == null)
				{
				_spoSponsorOfferAsFacultyInfoId = new TList<SpoSponsorOffer>();
				}
	
				return _spoSponsorOfferAsFacultyInfoId;
			}
			set { _spoSponsorOfferAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SvStudAskAdvCollection
		
		private TList<SvStudAskAdv> _svStudAskAdvAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudAskAdvAsFacultyInfoId
		/// </summary>
		
		public TList<SvStudAskAdv> SvStudAskAdvCollection
		{
			get
			{
				if (_svStudAskAdvAsFacultyInfoId == null)
				{
				_svStudAskAdvAsFacultyInfoId = new TList<SvStudAskAdv>();
				}
	
				return _svStudAskAdvAsFacultyInfoId;
			}
			set { _svStudAskAdvAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaVacationCollection
		
		private TList<SaVacation> _saVacationAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saVacationAsFacultyInfoId
		/// </summary>
		
		public TList<SaVacation> SaVacationCollection
		{
			get
			{
				if (_saVacationAsFacultyInfoId == null)
				{
				_saVacationAsFacultyInfoId = new TList<SaVacation>();
				}
	
				return _saVacationAsFacultyInfoId;
			}
			set { _saVacationAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaEmploymentCollection
		
		private TList<SaEmployment> _saEmploymentAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saEmploymentAsFacultyInfoId
		/// </summary>
		
		public TList<SaEmployment> SaEmploymentCollection
		{
			get
			{
				if (_saEmploymentAsFacultyInfoId == null)
				{
				_saEmploymentAsFacultyInfoId = new TList<SaEmployment>();
				}
	
				return _saEmploymentAsFacultyInfoId;
			}
			set { _saEmploymentAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaFinStatmentCollection
		
		private TList<SaFinStatment> _saFinStatmentAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saFinStatmentAsFacultyInfoId
		/// </summary>
		
		public TList<SaFinStatment> SaFinStatmentCollection
		{
			get
			{
				if (_saFinStatmentAsFacultyInfoId == null)
				{
				_saFinStatmentAsFacultyInfoId = new TList<SaFinStatment>();
				}
	
				return _saFinStatmentAsFacultyInfoId;
			}
			set { _saFinStatmentAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdCourseOutcomesTopicsCollection
		
		private TList<EdCourseOutcomesTopics> _edCourseOutcomesTopicsAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseOutcomesTopicsAsFacultyInfoId
		/// </summary>
		
		public TList<EdCourseOutcomesTopics> EdCourseOutcomesTopicsCollection
		{
			get
			{
				if (_edCourseOutcomesTopicsAsFacultyInfoId == null)
				{
				_edCourseOutcomesTopicsAsFacultyInfoId = new TList<EdCourseOutcomesTopics>();
				}
	
				return _edCourseOutcomesTopicsAsFacultyInfoId;
			}
			set { _edCourseOutcomesTopicsAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdPrintReqCollection
		
		private TList<EdPrintReq> _edPrintReqAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edPrintReqAsFacultyInfoId
		/// </summary>
		
		public TList<EdPrintReq> EdPrintReqCollection
		{
			get
			{
				if (_edPrintReqAsFacultyInfoId == null)
				{
				_edPrintReqAsFacultyInfoId = new TList<EdPrintReq>();
				}
	
				return _edPrintReqAsFacultyInfoId;
			}
			set { _edPrintReqAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeStudFeeItemCollection
		
		private TList<FeeStudFeeItem> _feeStudFeeItemAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudFeeItemAsFacultyInfoId
		/// </summary>
		
		public TList<FeeStudFeeItem> FeeStudFeeItemCollection
		{
			get
			{
				if (_feeStudFeeItemAsFacultyInfoId == null)
				{
				_feeStudFeeItemAsFacultyInfoId = new TList<FeeStudFeeItem>();
				}
	
				return _feeStudFeeItemAsFacultyInfoId;
			}
			set { _feeStudFeeItemAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdCodeLevelCollection
		
		private TList<EdCodeLevel> _edCodeLevelAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCodeLevelAsFacultyInfoId
		/// </summary>
		
		public TList<EdCodeLevel> EdCodeLevelCollection
		{
			get
			{
				if (_edCodeLevelAsFacultyInfoId == null)
				{
				_edCodeLevelAsFacultyInfoId = new TList<EdCodeLevel>();
				}
	
				return _edCodeLevelAsFacultyInfoId;
			}
			set { _edCodeLevelAsFacultyInfoId = value; }
		}
		
		#endregion

		#region ScGroupInfoCollection
		
		private TList<ScGroupInfo> _scGroupInfoAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scGroupInfoAsFacultyInfoId
		/// </summary>
		
		public TList<ScGroupInfo> ScGroupInfoCollection
		{
			get
			{
				if (_scGroupInfoAsFacultyInfoId == null)
				{
				_scGroupInfoAsFacultyInfoId = new TList<ScGroupInfo>();
				}
	
				return _scGroupInfoAsFacultyInfoId;
			}
			set { _scGroupInfoAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaPersonIdCollection
		
		private TList<SaPersonId> _saPersonIdAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saPersonIdAsFacultyInfoId
		/// </summary>
		
		public TList<SaPersonId> SaPersonIdCollection
		{
			get
			{
				if (_saPersonIdAsFacultyInfoId == null)
				{
				_saPersonIdAsFacultyInfoId = new TList<SaPersonId>();
				}
	
				return _saPersonIdAsFacultyInfoId;
			}
			set { _saPersonIdAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaStfMemberCollection
		
		private TList<SaStfMember> _saStfMemberAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saStfMemberAsFacultyInfoId
		/// </summary>
		
		public TList<SaStfMember> SaStfMemberCollection
		{
			get
			{
				if (_saStfMemberAsFacultyInfoId == null)
				{
				_saStfMemberAsFacultyInfoId = new TList<SaStfMember>();
				}
	
				return _saStfMemberAsFacultyInfoId;
			}
			set { _saStfMemberAsFacultyInfoId = value; }
		}
		
		#endregion

		#region AdmCodeEngTestCollection
		
		private TList<AdmCodeEngTest> _admCodeEngTestAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admCodeEngTestAsFacultyInfoId
		/// </summary>
		
		public TList<AdmCodeEngTest> AdmCodeEngTestCollection
		{
			get
			{
				if (_admCodeEngTestAsFacultyInfoId == null)
				{
				_admCodeEngTestAsFacultyInfoId = new TList<AdmCodeEngTest>();
				}
	
				return _admCodeEngTestAsFacultyInfoId;
			}
			set { _admCodeEngTestAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeRefndStdReqCollection
		
		private TList<FeeRefndStdReq> _feeRefndStdReqAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeRefndStdReqAsFacultyInfoId
		/// </summary>
		
		public TList<FeeRefndStdReq> FeeRefndStdReqCollection
		{
			get
			{
				if (_feeRefndStdReqAsFacultyInfoId == null)
				{
				_feeRefndStdReqAsFacultyInfoId = new TList<FeeRefndStdReq>();
				}
	
				return _feeRefndStdReqAsFacultyInfoId;
			}
			set { _feeRefndStdReqAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsCourseFromCollection
		
		private TList<EdStudIntTrnsCourseFrom> _edStudIntTrnsCourseFromAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsCourseFromAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudIntTrnsCourseFrom> EdStudIntTrnsCourseFromCollection
		{
			get
			{
				if (_edStudIntTrnsCourseFromAsFacultyInfoId == null)
				{
				_edStudIntTrnsCourseFromAsFacultyInfoId = new TList<EdStudIntTrnsCourseFrom>();
				}
	
				return _edStudIntTrnsCourseFromAsFacultyInfoId;
			}
			set { _edStudIntTrnsCourseFromAsFacultyInfoId = value; }
		}
		
		#endregion

		#region CoControlRoomCollection
		
		private TList<CoControlRoom> _coControlRoomAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coControlRoomAsFacultyInfoId
		/// </summary>
		
		public TList<CoControlRoom> CoControlRoomCollection
		{
			get
			{
				if (_coControlRoomAsFacultyInfoId == null)
				{
				_coControlRoomAsFacultyInfoId = new TList<CoControlRoom>();
				}
	
				return _coControlRoomAsFacultyInfoId;
			}
			set { _coControlRoomAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudBranchPrefCollection
		
		private TList<EdStudBranchPref> _edStudBranchPrefAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudBranchPrefAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudBranchPref> EdStudBranchPrefCollection
		{
			get
			{
				if (_edStudBranchPrefAsFacultyInfoId == null)
				{
				_edStudBranchPrefAsFacultyInfoId = new TList<EdStudBranchPref>();
				}
	
				return _edStudBranchPrefAsFacultyInfoId;
			}
			set { _edStudBranchPrefAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeStudDiscContinueCollection
		
		private TList<FeeStudDiscContinue> _feeStudDiscContinueAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudDiscContinueAsFacultyInfoId
		/// </summary>
		
		public TList<FeeStudDiscContinue> FeeStudDiscContinueCollection
		{
			get
			{
				if (_feeStudDiscContinueAsFacultyInfoId == null)
				{
				_feeStudDiscContinueAsFacultyInfoId = new TList<FeeStudDiscContinue>();
				}
	
				return _feeStudDiscContinueAsFacultyInfoId;
			}
			set { _feeStudDiscContinueAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeStudInstallmentCollection
		
		private TList<FeeStudInstallment> _feeStudInstallmentAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudInstallmentAsFacultyInfoId
		/// </summary>
		
		public TList<FeeStudInstallment> FeeStudInstallmentCollection
		{
			get
			{
				if (_feeStudInstallmentAsFacultyInfoId == null)
				{
				_feeStudInstallmentAsFacultyInfoId = new TList<FeeStudInstallment>();
				}
	
				return _feeStudInstallmentAsFacultyInfoId;
			}
			set { _feeStudInstallmentAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudGroupCollection
		
		private TList<EdStudGroup> _edStudGroupAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudGroupAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudGroup> EdStudGroupCollection
		{
			get
			{
				if (_edStudGroupAsFacultyInfoId == null)
				{
				_edStudGroupAsFacultyInfoId = new TList<EdStudGroup>();
				}
	
				return _edStudGroupAsFacultyInfoId;
			}
			set { _edStudGroupAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudCourseRegCollection
		
		private TList<EdStudCourseReg> _edStudCourseRegAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudCourseReg> EdStudCourseRegCollection
		{
			get
			{
				if (_edStudCourseRegAsFacultyInfoId == null)
				{
				_edStudCourseRegAsFacultyInfoId = new TList<EdStudCourseReg>();
				}
	
				return _edStudCourseRegAsFacultyInfoId;
			}
			set { _edStudCourseRegAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaScQualCollection
		
		private TList<SaScQual> _saScQualAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saScQualAsFacultyInfoId
		/// </summary>
		
		public TList<SaScQual> SaScQualCollection
		{
			get
			{
				if (_saScQualAsFacultyInfoId == null)
				{
				_saScQualAsFacultyInfoId = new TList<SaScQual>();
				}
	
				return _saScQualAsFacultyInfoId;
			}
			set { _saScQualAsFacultyInfoId = value; }
		}
		
		#endregion

		#region MltOrgTreeCollection
		
		private TList<MltOrgTree> _mltOrgTreeAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mltOrgTreeAsFacultyInfoId
		/// </summary>
		
		public TList<MltOrgTree> MltOrgTreeCollection
		{
			get
			{
				if (_mltOrgTreeAsFacultyInfoId == null)
				{
				_mltOrgTreeAsFacultyInfoId = new TList<MltOrgTree>();
				}
	
				return _mltOrgTreeAsFacultyInfoId;
			}
			set { _mltOrgTreeAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaSupervisingJobsCollection
		
		private TList<SaSupervisingJobs> _saSupervisingJobsAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saSupervisingJobsAsFacultyInfoId
		/// </summary>
		
		public TList<SaSupervisingJobs> SaSupervisingJobsCollection
		{
			get
			{
				if (_saSupervisingJobsAsFacultyInfoId == null)
				{
				_saSupervisingJobsAsFacultyInfoId = new TList<SaSupervisingJobs>();
				}
	
				return _saSupervisingJobsAsFacultyInfoId;
			}
			set { _saSupervisingJobsAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdExamSchdlCollection
		
		private TList<EdExamSchdl> _edExamSchdlAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edExamSchdlAsFacultyInfoId
		/// </summary>
		
		public TList<EdExamSchdl> EdExamSchdlCollection
		{
			get
			{
				if (_edExamSchdlAsFacultyInfoId == null)
				{
				_edExamSchdlAsFacultyInfoId = new TList<EdExamSchdl>();
				}
	
				return _edExamSchdlAsFacultyInfoId;
			}
			set { _edExamSchdlAsFacultyInfoId = value; }
		}
		
		#endregion

		#region GsCodeApprovalFacultyCollection
		
		private TList<GsCodeApprovalFaculty> _gsCodeApprovalFacultyAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _gsCodeApprovalFacultyAsFacultyInfoId
		/// </summary>
		
		public TList<GsCodeApprovalFaculty> GsCodeApprovalFacultyCollection
		{
			get
			{
				if (_gsCodeApprovalFacultyAsFacultyInfoId == null)
				{
				_gsCodeApprovalFacultyAsFacultyInfoId = new TList<GsCodeApprovalFaculty>();
				}
	
				return _gsCodeApprovalFacultyAsFacultyInfoId;
			}
			set { _gsCodeApprovalFacultyAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudAcadmicAdvCollection
		
		private TList<EdStudAcadmicAdv> _edStudAcadmicAdvAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAcadmicAdvAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudAcadmicAdv> EdStudAcadmicAdvCollection
		{
			get
			{
				if (_edStudAcadmicAdvAsFacultyInfoId == null)
				{
				_edStudAcadmicAdvAsFacultyInfoId = new TList<EdStudAcadmicAdv>();
				}
	
				return _edStudAcadmicAdvAsFacultyInfoId;
			}
			set { _edStudAcadmicAdvAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaJobActivityCollection
		
		private TList<SaJobActivity> _saJobActivityAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saJobActivityAsFacultyInfoId
		/// </summary>
		
		public TList<SaJobActivity> SaJobActivityCollection
		{
			get
			{
				if (_saJobActivityAsFacultyInfoId == null)
				{
				_saJobActivityAsFacultyInfoId = new TList<SaJobActivity>();
				}
	
				return _saJobActivityAsFacultyInfoId;
			}
			set { _saJobActivityAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudSemesterTempCollection
		
		private TList<EdStudSemesterTemp> _edStudSemesterTempAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudSemesterTempAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudSemesterTemp> EdStudSemesterTempCollection
		{
			get
			{
				if (_edStudSemesterTempAsFacultyInfoId == null)
				{
				_edStudSemesterTempAsFacultyInfoId = new TList<EdStudSemesterTemp>();
				}
	
				return _edStudSemesterTempAsFacultyInfoId;
			}
			set { _edStudSemesterTempAsFacultyInfoId = value; }
		}
		
		#endregion

		#region GsCodeApprovalCollection
		
		private TList<GsCodeApproval> _gsCodeApprovalAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _gsCodeApprovalAsFacultyInfoId
		/// </summary>
		
		public TList<GsCodeApproval> GsCodeApprovalCollection
		{
			get
			{
				if (_gsCodeApprovalAsFacultyInfoId == null)
				{
				_gsCodeApprovalAsFacultyInfoId = new TList<GsCodeApproval>();
				}
	
				return _gsCodeApprovalAsFacultyInfoId;
			}
			set { _gsCodeApprovalAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EntityMainCollection
		
		private TList<EntityMain> _entityMainAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entityMainAsFacultyInfoId
		/// </summary>
		
		public TList<EntityMain> EntityMainCollection
		{
			get
			{
				if (_entityMainAsFacultyInfoId == null)
				{
				_entityMainAsFacultyInfoId = new TList<EntityMain>();
				}
	
				return _entityMainAsFacultyInfoId;
			}
			set { _entityMainAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeStudInstallmentRequestCollection
		
		private TList<FeeStudInstallmentRequest> _feeStudInstallmentRequestAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudInstallmentRequestAsFacultyInfoId
		/// </summary>
		
		public TList<FeeStudInstallmentRequest> FeeStudInstallmentRequestCollection
		{
			get
			{
				if (_feeStudInstallmentRequestAsFacultyInfoId == null)
				{
				_feeStudInstallmentRequestAsFacultyInfoId = new TList<FeeStudInstallmentRequest>();
				}
	
				return _feeStudInstallmentRequestAsFacultyInfoId;
			}
			set { _feeStudInstallmentRequestAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudCourseRegAssessCollection
		
		private TList<EdStudCourseRegAssess> _edStudCourseRegAssessAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegAssessAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudCourseRegAssess> EdStudCourseRegAssessCollection
		{
			get
			{
				if (_edStudCourseRegAssessAsFacultyInfoId == null)
				{
				_edStudCourseRegAssessAsFacultyInfoId = new TList<EdStudCourseRegAssess>();
				}
	
				return _edStudCourseRegAssessAsFacultyInfoId;
			}
			set { _edStudCourseRegAssessAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaCandReleaseCollection
		
		private TList<SaCandRelease> _saCandReleaseAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saCandReleaseAsFacultyInfoId
		/// </summary>
		
		public TList<SaCandRelease> SaCandReleaseCollection
		{
			get
			{
				if (_saCandReleaseAsFacultyInfoId == null)
				{
				_saCandReleaseAsFacultyInfoId = new TList<SaCandRelease>();
				}
	
				return _saCandReleaseAsFacultyInfoId;
			}
			set { _saCandReleaseAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EntPolcyGrdngHdrCollection
		
		private TList<EntPolcyGrdngHdr> _entPolcyGrdngHdrAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entPolcyGrdngHdrAsFacultyInfoId
		/// </summary>
		
		public TList<EntPolcyGrdngHdr> EntPolcyGrdngHdrCollection
		{
			get
			{
				if (_entPolcyGrdngHdrAsFacultyInfoId == null)
				{
				_entPolcyGrdngHdrAsFacultyInfoId = new TList<EntPolcyGrdngHdr>();
				}
	
				return _entPolcyGrdngHdrAsFacultyInfoId;
			}
			set { _entPolcyGrdngHdrAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudSemesterCollection
		
		private TList<EdStudSemester> _edStudSemesterAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudSemesterAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudSemester> EdStudSemesterCollection
		{
			get
			{
				if (_edStudSemesterAsFacultyInfoId == null)
				{
				_edStudSemesterAsFacultyInfoId = new TList<EdStudSemester>();
				}
	
				return _edStudSemesterAsFacultyInfoId;
			}
			set { _edStudSemesterAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaScResearchCollection
		
		private TList<SaScResearch> _saScResearchAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saScResearchAsFacultyInfoId
		/// </summary>
		
		public TList<SaScResearch> SaScResearchCollection
		{
			get
			{
				if (_saScResearchAsFacultyInfoId == null)
				{
				_saScResearchAsFacultyInfoId = new TList<SaScResearch>();
				}
	
				return _saScResearchAsFacultyInfoId;
			}
			set { _saScResearchAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdResultApproveCollection
		
		private TList<EdResultApprove> _edResultApproveAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edResultApproveAsFacultyInfoId
		/// </summary>
		
		public TList<EdResultApprove> EdResultApproveCollection
		{
			get
			{
				if (_edResultApproveAsFacultyInfoId == null)
				{
				_edResultApproveAsFacultyInfoId = new TList<EdResultApprove>();
				}
	
				return _edResultApproveAsFacultyInfoId;
			}
			set { _edResultApproveAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SpoSponsorStudSemesterCollection
		
		private TList<SpoSponsorStudSemester> _spoSponsorStudSemesterAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorStudSemesterAsFacultyInfoId
		/// </summary>
		
		public TList<SpoSponsorStudSemester> SpoSponsorStudSemesterCollection
		{
			get
			{
				if (_spoSponsorStudSemesterAsFacultyInfoId == null)
				{
				_spoSponsorStudSemesterAsFacultyInfoId = new TList<SpoSponsorStudSemester>();
				}
	
				return _spoSponsorStudSemesterAsFacultyInfoId;
			}
			set { _spoSponsorStudSemesterAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdProjectCollection
		
		private TList<EdProject> _edProjectAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edProjectAsFacultyInfoId
		/// </summary>
		
		public TList<EdProject> EdProjectCollection
		{
			get
			{
				if (_edProjectAsFacultyInfoId == null)
				{
				_edProjectAsFacultyInfoId = new TList<EdProject>();
				}
	
				return _edProjectAsFacultyInfoId;
			}
			set { _edProjectAsFacultyInfoId = value; }
		}
		
		#endregion

		#region CoCrsRsltRaiseCollection
		
		private TList<CoCrsRsltRaise> _coCrsRsltRaiseAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coCrsRsltRaiseAsFacultyInfoId
		/// </summary>
		
		public TList<CoCrsRsltRaise> CoCrsRsltRaiseCollection
		{
			get
			{
				if (_coCrsRsltRaiseAsFacultyInfoId == null)
				{
				_coCrsRsltRaiseAsFacultyInfoId = new TList<CoCrsRsltRaise>();
				}
	
				return _coCrsRsltRaiseAsFacultyInfoId;
			}
			set { _coCrsRsltRaiseAsFacultyInfoId = value; }
		}
		
		#endregion

		#region ScScheduleDtlCollection
		
		private TList<ScScheduleDtl> _scScheduleDtlAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scScheduleDtlAsFacultyInfoId
		/// </summary>
		
		public TList<ScScheduleDtl> ScScheduleDtlCollection
		{
			get
			{
				if (_scScheduleDtlAsFacultyInfoId == null)
				{
				_scScheduleDtlAsFacultyInfoId = new TList<ScScheduleDtl>();
				}
	
				return _scScheduleDtlAsFacultyInfoId;
			}
			set { _scScheduleDtlAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudFacultyCollection
		
		private TList<EdStudFaculty> _edStudFacultyAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudFacultyAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudFaculty> EdStudFacultyCollection
		{
			get
			{
				if (_edStudFacultyAsFacultyInfoId == null)
				{
				_edStudFacultyAsFacultyInfoId = new TList<EdStudFaculty>();
				}
	
				return _edStudFacultyAsFacultyInfoId;
			}
			set { _edStudFacultyAsFacultyInfoId = value; }
		}
		
		#endregion

		#region ScSectionGroupHdrCollection
		
		private TList<ScSectionGroupHdr> _scSectionGroupHdrAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scSectionGroupHdrAsFacultyInfoId
		/// </summary>
		
		public TList<ScSectionGroupHdr> ScSectionGroupHdrCollection
		{
			get
			{
				if (_scSectionGroupHdrAsFacultyInfoId == null)
				{
				_scSectionGroupHdrAsFacultyInfoId = new TList<ScSectionGroupHdr>();
				}
	
				return _scSectionGroupHdrAsFacultyInfoId;
			}
			set { _scSectionGroupHdrAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsStateFromCollection
		
		private TList<EdStudIntTrnsStateFrom> _edStudIntTrnsStateFromAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsStateFromAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudIntTrnsStateFrom> EdStudIntTrnsStateFromCollection
		{
			get
			{
				if (_edStudIntTrnsStateFromAsFacultyInfoId == null)
				{
				_edStudIntTrnsStateFromAsFacultyInfoId = new TList<EdStudIntTrnsStateFrom>();
				}
	
				return _edStudIntTrnsStateFromAsFacultyInfoId;
			}
			set { _edStudIntTrnsStateFromAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeCdeDiscTypeCollection
		
		private TList<FeeCdeDiscType> _feeCdeDiscTypeAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeCdeDiscTypeAsFacultyInfoId
		/// </summary>
		
		public TList<FeeCdeDiscType> FeeCdeDiscTypeCollection
		{
			get
			{
				if (_feeCdeDiscTypeAsFacultyInfoId == null)
				{
				_feeCdeDiscTypeAsFacultyInfoId = new TList<FeeCdeDiscType>();
				}
	
				return _feeCdeDiscTypeAsFacultyInfoId;
			}
			set { _feeCdeDiscTypeAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdGraduationAwardCollection
		
		private TList<EdGraduationAward> _edGraduationAwardAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edGraduationAwardAsFacultyInfoId
		/// </summary>
		
		public TList<EdGraduationAward> EdGraduationAwardCollection
		{
			get
			{
				if (_edGraduationAwardAsFacultyInfoId == null)
				{
				_edGraduationAwardAsFacultyInfoId = new TList<EdGraduationAward>();
				}
	
				return _edGraduationAwardAsFacultyInfoId;
			}
			set { _edGraduationAwardAsFacultyInfoId = value; }
		}
		
		#endregion

		#region ScBuildingCollection
		
		private TList<ScBuilding> _scBuildingAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scBuildingAsFacultyInfoId
		/// </summary>
		
		public TList<ScBuilding> ScBuildingCollection
		{
			get
			{
				if (_scBuildingAsFacultyInfoId == null)
				{
				_scBuildingAsFacultyInfoId = new TList<ScBuilding>();
				}
	
				return _scBuildingAsFacultyInfoId;
			}
			set { _scBuildingAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudGrantTempCollection
		
		private TList<EdStudGrantTemp> _edStudGrantTempAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudGrantTempAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudGrantTemp> EdStudGrantTempCollection
		{
			get
			{
				if (_edStudGrantTempAsFacultyInfoId == null)
				{
				_edStudGrantTempAsFacultyInfoId = new TList<EdStudGrantTemp>();
				}
	
				return _edStudGrantTempAsFacultyInfoId;
			}
			set { _edStudGrantTempAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdInttransRuleCollection
		
		private TList<EdInttransRule> _edInttransRuleAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edInttransRuleAsFacultyInfoId
		/// </summary>
		
		public TList<EdInttransRule> EdInttransRuleCollection
		{
			get
			{
				if (_edInttransRuleAsFacultyInfoId == null)
				{
				_edInttransRuleAsFacultyInfoId = new TList<EdInttransRule>();
				}
	
				return _edInttransRuleAsFacultyInfoId;
			}
			set { _edInttransRuleAsFacultyInfoId = value; }
		}
		
		#endregion

		#region PgOfferingCollection
		
		private TList<PgOffering> _pgOfferingAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgOfferingAsFacultyInfoId
		/// </summary>
		
		public TList<PgOffering> PgOfferingCollection
		{
			get
			{
				if (_pgOfferingAsFacultyInfoId == null)
				{
				_pgOfferingAsFacultyInfoId = new TList<PgOffering>();
				}
	
				return _pgOfferingAsFacultyInfoId;
			}
			set { _pgOfferingAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudStateCollection
		
		private TList<EdStudState> _edStudStateAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudStateAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudState> EdStudStateCollection
		{
			get
			{
				if (_edStudStateAsFacultyInfoId == null)
				{
				_edStudStateAsFacultyInfoId = new TList<EdStudState>();
				}
	
				return _edStudStateAsFacultyInfoId;
			}
			set { _edStudStateAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaPunishmentCollection
		
		private TList<SaPunishment> _saPunishmentAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saPunishmentAsFacultyInfoId
		/// </summary>
		
		public TList<SaPunishment> SaPunishmentCollection
		{
			get
			{
				if (_saPunishmentAsFacultyInfoId == null)
				{
				_saPunishmentAsFacultyInfoId = new TList<SaPunishment>();
				}
	
				return _saPunishmentAsFacultyInfoId;
			}
			set { _saPunishmentAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaVacationRenewCollection
		
		private TList<SaVacationRenew> _saVacationRenewAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saVacationRenewAsFacultyInfoId
		/// </summary>
		
		public TList<SaVacationRenew> SaVacationRenewCollection
		{
			get
			{
				if (_saVacationRenewAsFacultyInfoId == null)
				{
				_saVacationRenewAsFacultyInfoId = new TList<SaVacationRenew>();
				}
	
				return _saVacationRenewAsFacultyInfoId;
			}
			set { _saVacationRenewAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdBylawCollection
		
		private TList<EdBylaw> _edBylawAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edBylawAsFacultyInfoId
		/// </summary>
		
		public TList<EdBylaw> EdBylawCollection
		{
			get
			{
				if (_edBylawAsFacultyInfoId == null)
				{
				_edBylawAsFacultyInfoId = new TList<EdBylaw>();
				}
	
				return _edBylawAsFacultyInfoId;
			}
			set { _edBylawAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaPromotionCondStsfCollection
		
		private TList<SaPromotionCondStsf> _saPromotionCondStsfAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saPromotionCondStsfAsFacultyInfoId
		/// </summary>
		
		public TList<SaPromotionCondStsf> SaPromotionCondStsfCollection
		{
			get
			{
				if (_saPromotionCondStsfAsFacultyInfoId == null)
				{
				_saPromotionCondStsfAsFacultyInfoId = new TList<SaPromotionCondStsf>();
				}
	
				return _saPromotionCondStsfAsFacultyInfoId;
			}
			set { _saPromotionCondStsfAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaCandReleaseDetailCollection
		
		private TList<SaCandReleaseDetail> _saCandReleaseDetailAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saCandReleaseDetailAsFacultyInfoId
		/// </summary>
		
		public TList<SaCandReleaseDetail> SaCandReleaseDetailCollection
		{
			get
			{
				if (_saCandReleaseDetailAsFacultyInfoId == null)
				{
				_saCandReleaseDetailAsFacultyInfoId = new TList<SaCandReleaseDetail>();
				}
	
				return _saCandReleaseDetailAsFacultyInfoId;
			}
			set { _saCandReleaseDetailAsFacultyInfoId = value; }
		}
		
		#endregion

		#region GsApprovalHCollection
		
		private TList<GsApprovalH> _gsApprovalHAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _gsApprovalHAsFacultyInfoId
		/// </summary>
		
		public TList<GsApprovalH> GsApprovalHCollection
		{
			get
			{
				if (_gsApprovalHAsFacultyInfoId == null)
				{
				_gsApprovalHAsFacultyInfoId = new TList<GsApprovalH>();
				}
	
				return _gsApprovalHAsFacultyInfoId;
			}
			set { _gsApprovalHAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudAbsFwCollection
		
		private TList<EdStudAbsFw> _edStudAbsFwAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAbsFwAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudAbsFw> EdStudAbsFwCollection
		{
			get
			{
				if (_edStudAbsFwAsFacultyInfoId == null)
				{
				_edStudAbsFwAsFacultyInfoId = new TList<EdStudAbsFw>();
				}
	
				return _edStudAbsFwAsFacultyInfoId;
			}
			set { _edStudAbsFwAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaTransferCollection
		
		private TList<SaTransfer> _saTransferAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saTransferAsFacultyInfoId
		/// </summary>
		
		public TList<SaTransfer> SaTransferCollection
		{
			get
			{
				if (_saTransferAsFacultyInfoId == null)
				{
				_saTransferAsFacultyInfoId = new TList<SaTransfer>();
				}
	
				return _saTransferAsFacultyInfoId;
			}
			set { _saTransferAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsCollection
		
		private TList<EdStudIntTrns> _edStudIntTrnsAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudIntTrns> EdStudIntTrnsCollection
		{
			get
			{
				if (_edStudIntTrnsAsFacultyInfoId == null)
				{
				_edStudIntTrnsAsFacultyInfoId = new TList<EdStudIntTrns>();
				}
	
				return _edStudIntTrnsAsFacultyInfoId;
			}
			set { _edStudIntTrnsAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaCodeSuperviseJobCollection
		
		private TList<SaCodeSuperviseJob> _saCodeSuperviseJobAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saCodeSuperviseJobAsFacultyInfoId
		/// </summary>
		
		public TList<SaCodeSuperviseJob> SaCodeSuperviseJobCollection
		{
			get
			{
				if (_saCodeSuperviseJobAsFacultyInfoId == null)
				{
				_saCodeSuperviseJobAsFacultyInfoId = new TList<SaCodeSuperviseJob>();
				}
	
				return _saCodeSuperviseJobAsFacultyInfoId;
			}
			set { _saCodeSuperviseJobAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeStudDiscCollection
		
		private TList<FeeStudDisc> _feeStudDiscAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudDiscAsFacultyInfoId
		/// </summary>
		
		public TList<FeeStudDisc> FeeStudDiscCollection
		{
			get
			{
				if (_feeStudDiscAsFacultyInfoId == null)
				{
				_feeStudDiscAsFacultyInfoId = new TList<FeeStudDisc>();
				}
	
				return _feeStudDiscAsFacultyInfoId;
			}
			set { _feeStudDiscAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudCourseCompCollection
		
		private TList<EdStudCourseComp> _edStudCourseCompAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseCompAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudCourseComp> EdStudCourseCompCollection
		{
			get
			{
				if (_edStudCourseCompAsFacultyInfoId == null)
				{
				_edStudCourseCompAsFacultyInfoId = new TList<EdStudCourseComp>();
				}
	
				return _edStudCourseCompAsFacultyInfoId;
			}
			set { _edStudCourseCompAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudNoteCollection
		
		private TList<EdStudNote> _edStudNoteAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudNoteAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudNote> EdStudNoteCollection
		{
			get
			{
				if (_edStudNoteAsFacultyInfoId == null)
				{
				_edStudNoteAsFacultyInfoId = new TList<EdStudNote>();
				}
	
				return _edStudNoteAsFacultyInfoId;
			}
			set { _edStudNoteAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaDocOfFileCollection
		
		private TList<SaDocOfFile> _saDocOfFileAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saDocOfFileAsFacultyInfoId
		/// </summary>
		
		public TList<SaDocOfFile> SaDocOfFileCollection
		{
			get
			{
				if (_saDocOfFileAsFacultyInfoId == null)
				{
				_saDocOfFileAsFacultyInfoId = new TList<SaDocOfFile>();
				}
	
				return _saDocOfFileAsFacultyInfoId;
			}
			set { _saDocOfFileAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SvStudAskAdvReCollection
		
		private TList<SvStudAskAdvRe> _svStudAskAdvReAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudAskAdvReAsFacultyInfoId
		/// </summary>
		
		public TList<SvStudAskAdvRe> SvStudAskAdvReCollection
		{
			get
			{
				if (_svStudAskAdvReAsFacultyInfoId == null)
				{
				_svStudAskAdvReAsFacultyInfoId = new TList<SvStudAskAdvRe>();
				}
	
				return _svStudAskAdvReAsFacultyInfoId;
			}
			set { _svStudAskAdvReAsFacultyInfoId = value; }
		}
		
		#endregion

		#region AdmAcceptanceCategoryCollection
		
		private TList<AdmAcceptanceCategory> _admAcceptanceCategoryAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAcceptanceCategoryAsFacultyInfoId
		/// </summary>
		
		public TList<AdmAcceptanceCategory> AdmAcceptanceCategoryCollection
		{
			get
			{
				if (_admAcceptanceCategoryAsFacultyInfoId == null)
				{
				_admAcceptanceCategoryAsFacultyInfoId = new TList<AdmAcceptanceCategory>();
				}
	
				return _admAcceptanceCategoryAsFacultyInfoId;
			}
			set { _admAcceptanceCategoryAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaVacationBalanceCollection
		
		private TList<SaVacationBalance> _saVacationBalanceAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saVacationBalanceAsFacultyInfoId
		/// </summary>
		
		public TList<SaVacationBalance> SaVacationBalanceCollection
		{
			get
			{
				if (_saVacationBalanceAsFacultyInfoId == null)
				{
				_saVacationBalanceAsFacultyInfoId = new TList<SaVacationBalance>();
				}
	
				return _saVacationBalanceAsFacultyInfoId;
			}
			set { _saVacationBalanceAsFacultyInfoId = value; }
		}
		
		#endregion

		#region FeeStudItemCnclCollection
		
		private TList<FeeStudItemCncl> _feeStudItemCnclAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudItemCnclAsFacultyInfoId
		/// </summary>
		
		public TList<FeeStudItemCncl> FeeStudItemCnclCollection
		{
			get
			{
				if (_feeStudItemCnclAsFacultyInfoId == null)
				{
				_feeStudItemCnclAsFacultyInfoId = new TList<FeeStudItemCncl>();
				}
	
				return _feeStudItemCnclAsFacultyInfoId;
			}
			set { _feeStudItemCnclAsFacultyInfoId = value; }
		}
		
		#endregion

		#region PgThesisStudCollection
		
		private TList<PgThesisStud> _pgThesisStudAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisStudAsFacultyInfoId
		/// </summary>
		
		public TList<PgThesisStud> PgThesisStudCollection
		{
			get
			{
				if (_pgThesisStudAsFacultyInfoId == null)
				{
				_pgThesisStudAsFacultyInfoId = new TList<PgThesisStud>();
				}
	
				return _pgThesisStudAsFacultyInfoId;
			}
			set { _pgThesisStudAsFacultyInfoId = value; }
		}
		
		#endregion

		#region GsApprovalDCollection
		
		private TList<GsApprovalD> _gsApprovalDAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _gsApprovalDAsFacultyInfoId
		/// </summary>
		
		public TList<GsApprovalD> GsApprovalDCollection
		{
			get
			{
				if (_gsApprovalDAsFacultyInfoId == null)
				{
				_gsApprovalDAsFacultyInfoId = new TList<GsApprovalD>();
				}
	
				return _gsApprovalDAsFacultyInfoId;
			}
			set { _gsApprovalDAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudLatenessCollection
		
		private TList<EdStudLateness> _edStudLatenessAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudLatenessAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudLateness> EdStudLatenessCollection
		{
			get
			{
				if (_edStudLatenessAsFacultyInfoId == null)
				{
				_edStudLatenessAsFacultyInfoId = new TList<EdStudLateness>();
				}
	
				return _edStudLatenessAsFacultyInfoId;
			}
			set { _edStudLatenessAsFacultyInfoId = value; }
		}
		
		#endregion

		#region GsCodeRptSignatureCollection
		
		private TList<GsCodeRptSignature> _gsCodeRptSignatureAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _gsCodeRptSignatureAsFacultyInfoId
		/// </summary>
		
		public TList<GsCodeRptSignature> GsCodeRptSignatureCollection
		{
			get
			{
				if (_gsCodeRptSignatureAsFacultyInfoId == null)
				{
				_gsCodeRptSignatureAsFacultyInfoId = new TList<GsCodeRptSignature>();
				}
	
				return _gsCodeRptSignatureAsFacultyInfoId;
			}
			set { _gsCodeRptSignatureAsFacultyInfoId = value; }
		}
		
		#endregion

		#region SaResearchTeamCollection
		
		private TList<SaResearchTeam> _saResearchTeamAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saResearchTeamAsFacultyInfoId
		/// </summary>
		
		public TList<SaResearchTeam> SaResearchTeamCollection
		{
			get
			{
				if (_saResearchTeamAsFacultyInfoId == null)
				{
				_saResearchTeamAsFacultyInfoId = new TList<SaResearchTeam>();
				}
	
				return _saResearchTeamAsFacultyInfoId;
			}
			set { _saResearchTeamAsFacultyInfoId = value; }
		}
		
		#endregion

		#region AdmAppTransReqCollection
		
		private TList<AdmAppTransReq> _admAppTransReqAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppTransReqAsFacultyInfoId
		/// </summary>
		
		public TList<AdmAppTransReq> AdmAppTransReqCollection
		{
			get
			{
				if (_admAppTransReqAsFacultyInfoId == null)
				{
				_admAppTransReqAsFacultyInfoId = new TList<AdmAppTransReq>();
				}
	
				return _admAppTransReqAsFacultyInfoId;
			}
			set { _admAppTransReqAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdSemAgendaDtlCollection
		
		private TList<EdSemAgendaDtl> _edSemAgendaDtlAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edSemAgendaDtlAsFacultyInfoId
		/// </summary>
		
		public TList<EdSemAgendaDtl> EdSemAgendaDtlCollection
		{
			get
			{
				if (_edSemAgendaDtlAsFacultyInfoId == null)
				{
				_edSemAgendaDtlAsFacultyInfoId = new TList<EdSemAgendaDtl>();
				}
	
				return _edSemAgendaDtlAsFacultyInfoId;
			}
			set { _edSemAgendaDtlAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdCrsFreeRstrctdCollection
		
		private TList<EdCrsFreeRstrctd> _edCrsFreeRstrctdAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCrsFreeRstrctdAsFacultyInfoId
		/// </summary>
		
		public TList<EdCrsFreeRstrctd> EdCrsFreeRstrctdCollection
		{
			get
			{
				if (_edCrsFreeRstrctdAsFacultyInfoId == null)
				{
				_edCrsFreeRstrctdAsFacultyInfoId = new TList<EdCrsFreeRstrctd>();
				}
	
				return _edCrsFreeRstrctdAsFacultyInfoId;
			}
			set { _edCrsFreeRstrctdAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudGrantDegreeCollection
		
		private TList<EdStudGrantDegree> _edStudGrantDegreeAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudGrantDegreeAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudGrantDegree> EdStudGrantDegreeCollection
		{
			get
			{
				if (_edStudGrantDegreeAsFacultyInfoId == null)
				{
				_edStudGrantDegreeAsFacultyInfoId = new TList<EdStudGrantDegree>();
				}
	
				return _edStudGrantDegreeAsFacultyInfoId;
			}
			set { _edStudGrantDegreeAsFacultyInfoId = value; }
		}
		
		#endregion

		#region EdStudGroupPreCollection
		
		private TList<EdStudGroupPre> _edStudGroupPreAsFacultyInfoId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudGroupPreAsFacultyInfoId
		/// </summary>
		
		public TList<EdStudGroupPre> EdStudGroupPreCollection
		{
			get
			{
				if (_edStudGroupPreAsFacultyInfoId == null)
				{
				_edStudGroupPreAsFacultyInfoId = new TList<EdStudGroupPre>();
				}
	
				return _edStudGroupPreAsFacultyInfoId;
			}
			set { _edStudGroupPreAsFacultyInfoId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			AsFacultyInfoEntityData _tmp = new AsFacultyInfoEntityData();
						
			_tmp.AsFacultyInfoId = this.AsFacultyInfoId;
			_tmp.OriginalAsFacultyInfoId = this.OriginalAsFacultyInfoId;
			
			_tmp.GsCountryNodeId = this.GsCountryNodeId;
			_tmp.FacultyAddress = this.FacultyAddress;
			_tmp.FacultyDescrAr = this.FacultyDescrAr;
			_tmp.FacultyDescrEn = this.FacultyDescrEn;
			_tmp.ConDate = this.ConDate;
			_tmp.FacultyLogo = this.FacultyLogo;
			_tmp.Notation = this.Notation;
			_tmp.FacultyCode = this.FacultyCode;
			
			#region Source Parent Composite Entities
			if (this.GsCountryNodeIdSource != null)
				_tmp.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource) as GsCountryNode;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._edBranchRuleAsFacultyInfoId != null)
				_tmp.EdBranchRuleCollection = (TList<EdBranchRule>) MakeCopyOf(this.EdBranchRuleCollection); 
			if (this._saMilitaryStatusAsFacultyInfoId != null)
				_tmp.SaMilitaryStatusCollection = (TList<SaMilitaryStatus>) MakeCopyOf(this.SaMilitaryStatusCollection); 
			if (this._scStudGroupAsFacultyInfoId != null)
				_tmp.ScStudGroupCollection = (TList<ScStudGroup>) MakeCopyOf(this.ScStudGroupCollection); 
			if (this._saRelativeAsFacultyInfoId != null)
				_tmp.SaRelativeCollection = (TList<SaRelative>) MakeCopyOf(this.SaRelativeCollection); 
			if (this._seBlockTransAsFacultyInfoId != null)
				_tmp.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection); 
			if (this._spoSponsorStudAsFacultyInfoId != null)
				_tmp.SpoSponsorStudCollection = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollection); 
			if (this._edCodeCourseAssessAsFacultyInfoId != null)
				_tmp.EdCodeCourseAssessCollection = (TList<EdCodeCourseAssess>) MakeCopyOf(this.EdCodeCourseAssessCollection); 
			if (this._edCodeDischargeHAsFacultyInfoId != null)
				_tmp.EdCodeDischargeHCollection = (TList<EdCodeDischargeH>) MakeCopyOf(this.EdCodeDischargeHCollection); 
			if (this._saCdeAcadLoadAsFacultyInfoId != null)
				_tmp.SaCdeAcadLoadCollection = (TList<SaCdeAcadLoad>) MakeCopyOf(this.SaCdeAcadLoadCollection); 
			if (this._saEmpHierarchyAsFacultyInfoId != null)
				_tmp.SaEmpHierarchyCollection = (TList<SaEmpHierarchy>) MakeCopyOf(this.SaEmpHierarchyCollection); 
			if (this._edCodeCourseTeachingAsFacultyInfoId != null)
				_tmp.EdCodeCourseTeachingCollection = (TList<EdCodeCourseTeaching>) MakeCopyOf(this.EdCodeCourseTeachingCollection); 
			if (this._edStudCourseRegPreAsFacultyInfoId != null)
				_tmp.EdStudCourseRegPreCollection = (TList<EdStudCourseRegPre>) MakeCopyOf(this.EdStudCourseRegPreCollection); 
			if (this._edStudExcuseAsFacultyInfoId != null)
				_tmp.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection); 
			if (this._gsCommAsFacultyInfoId != null)
				_tmp.GsCommCollection = (TList<GsComm>) MakeCopyOf(this.GsCommCollection); 
			if (this._saJobStartStatmentAsFacultyInfoId != null)
				_tmp.SaJobStartStatmentCollection = (TList<SaJobStartStatment>) MakeCopyOf(this.SaJobStartStatmentCollection); 
			if (this._edStudAcadWarnAsFacultyInfoId != null)
				_tmp.EdStudAcadWarnCollection = (TList<EdStudAcadWarn>) MakeCopyOf(this.EdStudAcadWarnCollection); 
			if (this._pgThesisGrantDegreeAsFacultyInfoId != null)
				_tmp.PgThesisGrantDegreeCollection = (TList<PgThesisGrantDegree>) MakeCopyOf(this.PgThesisGrantDegreeCollection); 
			if (this._edCourseTopicAsFacultyInfoId != null)
				_tmp.EdCourseTopicCollection = (TList<EdCourseTopic>) MakeCopyOf(this.EdCourseTopicCollection); 
			if (this._feeFineAsFacultyInfoId != null)
				_tmp.FeeFineCollection = (TList<FeeFine>) MakeCopyOf(this.FeeFineCollection); 
			if (this._edStudQualSubjectAsFacultyInfoId != null)
				_tmp.EdStudQualSubjectCollection = (TList<EdStudQualSubject>) MakeCopyOf(this.EdStudQualSubjectCollection); 
			if (this._edStudIntTrnsCourseToAsFacultyInfoId != null)
				_tmp.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection); 
			if (this._feeStudNatSimilarityRequestAsFacultyInfoId != null)
				_tmp.FeeStudNatSimilarityRequestCollection = (TList<FeeStudNatSimilarityRequest>) MakeCopyOf(this.FeeStudNatSimilarityRequestCollection); 
			if (this._saJobStoppageAsFacultyInfoId != null)
				_tmp.SaJobStoppageCollection = (TList<SaJobStoppage>) MakeCopyOf(this.SaJobStoppageCollection); 
			if (this._saPromotionRequestAsFacultyInfoId != null)
				_tmp.SaPromotionRequestCollection = (TList<SaPromotionRequest>) MakeCopyOf(this.SaPromotionRequestCollection); 
			if (this._coScheduleDetailAsFacultyInfoId != null)
				_tmp.CoScheduleDetailCollection = (TList<CoScheduleDetail>) MakeCopyOf(this.CoScheduleDetailCollection); 
			if (this._saVacationBalanceHAsFacultyInfoId != null)
				_tmp.SaVacationBalanceHCollection = (TList<SaVacationBalanceH>) MakeCopyOf(this.SaVacationBalanceHCollection); 
			if (this._saPublicationAsFacultyInfoId != null)
				_tmp.SaPublicationCollection = (TList<SaPublication>) MakeCopyOf(this.SaPublicationCollection); 
			if (this._feeFacultyRuleAsFacultyInfoId != null)
				_tmp.FeeFacultyRuleCollection = (TList<FeeFacultyRule>) MakeCopyOf(this.FeeFacultyRuleCollection); 
			if (this._svPollHdrAsFacultyInfoId != null)
				_tmp.SvPollHdrCollection = (TList<SvPollHdr>) MakeCopyOf(this.SvPollHdrCollection); 
			if (this._feeStudVoucherAsFacultyInfoId != null)
				_tmp.FeeStudVoucherCollection = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollection); 
			if (this._edAcadYearFacultyAsFacultyInfoId != null)
				_tmp.EdAcadYearFacultyCollection = (TList<EdAcadYearFaculty>) MakeCopyOf(this.EdAcadYearFacultyCollection); 
			if (this._rsrchStudPostponeReqAsFacultyInfoId != null)
				_tmp.RsrchStudPostponeReqCollection = (TList<RsrchStudPostponeReq>) MakeCopyOf(this.RsrchStudPostponeReqCollection); 
			if (this._seUserCrsAssessAsFacultyInfoId != null)
				_tmp.SeUserCrsAssessCollection = (TList<SeUserCrsAssess>) MakeCopyOf(this.SeUserCrsAssessCollection); 
			if (this._edStudTransFromReqAsFacultyInfoId != null)
				_tmp.EdStudTransFromReqCollection = (TList<EdStudTransFromReq>) MakeCopyOf(this.EdStudTransFromReqCollection); 
			if (this._gsCdeClrncItemFacAsFacultyInfoId != null)
				_tmp.GsCdeClrncItemFacCollection = (TList<GsCdeClrncItemFac>) MakeCopyOf(this.GsCdeClrncItemFacCollection); 
			if (this._saRaiseAsFacultyInfoId != null)
				_tmp.SaRaiseCollection = (TList<SaRaise>) MakeCopyOf(this.SaRaiseCollection); 
			if (this._edStudIntTrnsStateToAsFacultyInfoId != null)
				_tmp.EdStudIntTrnsStateToCollection = (TList<EdStudIntTrnsStateTo>) MakeCopyOf(this.EdStudIntTrnsStateToCollection); 
			if (this._admPrecondQualAsFacultyInfoId != null)
				_tmp.AdmPrecondQualCollection = (TList<AdmPrecondQual>) MakeCopyOf(this.AdmPrecondQualCollection); 
			if (this._admRatingParametersMajorsAsFacultyInfoId != null)
				_tmp.AdmRatingParametersMajorsCollection = (TList<AdmRatingParametersMajors>) MakeCopyOf(this.AdmRatingParametersMajorsCollection); 
			if (this._scSchdlPeriodAsFacultyInfoId != null)
				_tmp.ScSchdlPeriodCollection = (TList<ScSchdlPeriod>) MakeCopyOf(this.ScSchdlPeriodCollection); 
			if (this._feeStudRetrieveRequestAsFacultyInfoId != null)
				_tmp.FeeStudRetrieveRequestCollection = (TList<FeeStudRetrieveRequest>) MakeCopyOf(this.FeeStudRetrieveRequestCollection); 
			if (this._saExtDelAsFacultyInfoId != null)
				_tmp.SaExtDelCollection = (TList<SaExtDel>) MakeCopyOf(this.SaExtDelCollection); 
			if (this._scHallRsrvAsFacultyInfoId != null)
				_tmp.ScHallRsrvCollection = (TList<ScHallRsrv>) MakeCopyOf(this.ScHallRsrvCollection); 
			if (this._edResidencyStudAsFacultyInfoId != null)
				_tmp.EdResidencyStudCollection = (TList<EdResidencyStud>) MakeCopyOf(this.EdResidencyStudCollection); 
			if (this._edStudCourseChngAsFacultyInfoId != null)
				_tmp.EdStudCourseChngCollection = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollection); 
			if (this._edCourseAsFacultyInfoId != null)
				_tmp.EdCourseCollection = (TList<EdCourse>) MakeCopyOf(this.EdCourseCollection); 
			if (this._svAutoMsgTmpltAsFacultyInfoId != null)
				_tmp.SvAutoMsgTmpltCollection = (TList<SvAutoMsgTmplt>) MakeCopyOf(this.SvAutoMsgTmpltCollection); 
			if (this._scScheduleRsrvAsFacultyInfoId != null)
				_tmp.ScScheduleRsrvCollection = (TList<ScScheduleRsrv>) MakeCopyOf(this.ScScheduleRsrvCollection); 
			if (this._saScCommDecisionAsFacultyInfoId != null)
				_tmp.SaScCommDecisionCollection = (TList<SaScCommDecision>) MakeCopyOf(this.SaScCommDecisionCollection); 
			if (this._edStudIntTransPrefAsFacultyInfoId != null)
				_tmp.EdStudIntTransPrefCollection = (TList<EdStudIntTransPref>) MakeCopyOf(this.EdStudIntTransPrefCollection); 
			if (this._saTrainingCourseAsFacultyInfoId != null)
				_tmp.SaTrainingCourseCollection = (TList<SaTrainingCourse>) MakeCopyOf(this.SaTrainingCourseCollection); 
			if (this._saMiltaryAsFacultyInfoId != null)
				_tmp.SaMiltaryCollection = (TList<SaMiltary>) MakeCopyOf(this.SaMiltaryCollection); 
			if (this._feeInstlmntRuleAsFacultyInfoId != null)
				_tmp.FeeInstlmntRuleCollection = (TList<FeeInstlmntRule>) MakeCopyOf(this.FeeInstlmntRuleCollection); 
			if (this._admCompetitiveAvgAsFacultyInfoId != null)
				_tmp.AdmCompetitiveAvgCollection = (TList<AdmCompetitiveAvg>) MakeCopyOf(this.AdmCompetitiveAvgCollection); 
			if (this._rsrchStudRegisterAsFacultyInfoId != null)
				_tmp.RsrchStudRegisterCollection = (TList<RsrchStudRegister>) MakeCopyOf(this.RsrchStudRegisterCollection); 
			if (this._seFormAsFacultyInfoId != null)
				_tmp.SeFormCollection = (TList<SeForm>) MakeCopyOf(this.SeFormCollection); 
			if (this._edOfferingCourseAsFacultyInfoId != null)
				_tmp.EdOfferingCourseCollection = (TList<EdOfferingCourse>) MakeCopyOf(this.EdOfferingCourseCollection); 
			if (this._feeLimitRuleAsFacultyInfoId != null)
				_tmp.FeeLimitRuleCollection = (TList<FeeLimitRule>) MakeCopyOf(this.FeeLimitRuleCollection); 
			if (this._saExperienceAsFacultyInfoId != null)
				_tmp.SaExperienceCollection = (TList<SaExperience>) MakeCopyOf(this.SaExperienceCollection); 
			if (this._saServTerminAsFacultyInfoId != null)
				_tmp.SaServTerminCollection = (TList<SaServTermin>) MakeCopyOf(this.SaServTerminCollection); 
			if (this._edOfferingAsFacultyInfoId != null)
				_tmp.EdOfferingCollection = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollection); 
			if (this._admAppPrefAsFacultyInfoId != null)
				_tmp.AdmAppPrefCollection = (TList<AdmAppPref>) MakeCopyOf(this.AdmAppPrefCollection); 
			if (this._edStudAbsenceAsFacultyInfoId != null)
				_tmp.EdStudAbsenceCollection = (TList<EdStudAbsence>) MakeCopyOf(this.EdStudAbsenceCollection); 
			if (this._saWarningAsFacultyInfoId != null)
				_tmp.SaWarningCollection = (TList<SaWarning>) MakeCopyOf(this.SaWarningCollection); 
			if (this._edStudStateTempAsFacultyInfoId != null)
				_tmp.EdStudStateTempCollection = (TList<EdStudStateTemp>) MakeCopyOf(this.EdStudStateTempCollection); 
			if (this._saPromotionAsFacultyInfoId != null)
				_tmp.SaPromotionCollection = (TList<SaPromotion>) MakeCopyOf(this.SaPromotionCollection); 
			if (this._svStaffEvlAsFacultyInfoId != null)
				_tmp.SvStaffEvlCollection = (TList<SvStaffEvl>) MakeCopyOf(this.SvStaffEvlCollection); 
			if (this._spoSponsorOfferAsFacultyInfoId != null)
				_tmp.SpoSponsorOfferCollection = (TList<SpoSponsorOffer>) MakeCopyOf(this.SpoSponsorOfferCollection); 
			if (this._svStudAskAdvAsFacultyInfoId != null)
				_tmp.SvStudAskAdvCollection = (TList<SvStudAskAdv>) MakeCopyOf(this.SvStudAskAdvCollection); 
			if (this._saVacationAsFacultyInfoId != null)
				_tmp.SaVacationCollection = (TList<SaVacation>) MakeCopyOf(this.SaVacationCollection); 
			if (this._saEmploymentAsFacultyInfoId != null)
				_tmp.SaEmploymentCollection = (TList<SaEmployment>) MakeCopyOf(this.SaEmploymentCollection); 
			if (this._saFinStatmentAsFacultyInfoId != null)
				_tmp.SaFinStatmentCollection = (TList<SaFinStatment>) MakeCopyOf(this.SaFinStatmentCollection); 
			if (this._edCourseOutcomesTopicsAsFacultyInfoId != null)
				_tmp.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection); 
			if (this._edPrintReqAsFacultyInfoId != null)
				_tmp.EdPrintReqCollection = (TList<EdPrintReq>) MakeCopyOf(this.EdPrintReqCollection); 
			if (this._feeStudFeeItemAsFacultyInfoId != null)
				_tmp.FeeStudFeeItemCollection = (TList<FeeStudFeeItem>) MakeCopyOf(this.FeeStudFeeItemCollection); 
			if (this._edCodeLevelAsFacultyInfoId != null)
				_tmp.EdCodeLevelCollection = (TList<EdCodeLevel>) MakeCopyOf(this.EdCodeLevelCollection); 
			if (this._scGroupInfoAsFacultyInfoId != null)
				_tmp.ScGroupInfoCollection = (TList<ScGroupInfo>) MakeCopyOf(this.ScGroupInfoCollection); 
			if (this._saPersonIdAsFacultyInfoId != null)
				_tmp.SaPersonIdCollection = (TList<SaPersonId>) MakeCopyOf(this.SaPersonIdCollection); 
			if (this._saStfMemberAsFacultyInfoId != null)
				_tmp.SaStfMemberCollection = (TList<SaStfMember>) MakeCopyOf(this.SaStfMemberCollection); 
			if (this._admCodeEngTestAsFacultyInfoId != null)
				_tmp.AdmCodeEngTestCollection = (TList<AdmCodeEngTest>) MakeCopyOf(this.AdmCodeEngTestCollection); 
			if (this._feeRefndStdReqAsFacultyInfoId != null)
				_tmp.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection); 
			if (this._edStudIntTrnsCourseFromAsFacultyInfoId != null)
				_tmp.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection); 
			if (this._coControlRoomAsFacultyInfoId != null)
				_tmp.CoControlRoomCollection = (TList<CoControlRoom>) MakeCopyOf(this.CoControlRoomCollection); 
			if (this._edStudBranchPrefAsFacultyInfoId != null)
				_tmp.EdStudBranchPrefCollection = (TList<EdStudBranchPref>) MakeCopyOf(this.EdStudBranchPrefCollection); 
			if (this._feeStudDiscContinueAsFacultyInfoId != null)
				_tmp.FeeStudDiscContinueCollection = (TList<FeeStudDiscContinue>) MakeCopyOf(this.FeeStudDiscContinueCollection); 
			if (this._feeStudInstallmentAsFacultyInfoId != null)
				_tmp.FeeStudInstallmentCollection = (TList<FeeStudInstallment>) MakeCopyOf(this.FeeStudInstallmentCollection); 
			if (this._edStudGroupAsFacultyInfoId != null)
				_tmp.EdStudGroupCollection = (TList<EdStudGroup>) MakeCopyOf(this.EdStudGroupCollection); 
			if (this._edStudCourseRegAsFacultyInfoId != null)
				_tmp.EdStudCourseRegCollection = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollection); 
			if (this._saScQualAsFacultyInfoId != null)
				_tmp.SaScQualCollection = (TList<SaScQual>) MakeCopyOf(this.SaScQualCollection); 
			if (this._mltOrgTreeAsFacultyInfoId != null)
				_tmp.MltOrgTreeCollection = (TList<MltOrgTree>) MakeCopyOf(this.MltOrgTreeCollection); 
			if (this._saSupervisingJobsAsFacultyInfoId != null)
				_tmp.SaSupervisingJobsCollection = (TList<SaSupervisingJobs>) MakeCopyOf(this.SaSupervisingJobsCollection); 
			if (this._edExamSchdlAsFacultyInfoId != null)
				_tmp.EdExamSchdlCollection = (TList<EdExamSchdl>) MakeCopyOf(this.EdExamSchdlCollection); 
			if (this._gsCodeApprovalFacultyAsFacultyInfoId != null)
				_tmp.GsCodeApprovalFacultyCollection = (TList<GsCodeApprovalFaculty>) MakeCopyOf(this.GsCodeApprovalFacultyCollection); 
			if (this._edStudAcadmicAdvAsFacultyInfoId != null)
				_tmp.EdStudAcadmicAdvCollection = (TList<EdStudAcadmicAdv>) MakeCopyOf(this.EdStudAcadmicAdvCollection); 
			if (this._saJobActivityAsFacultyInfoId != null)
				_tmp.SaJobActivityCollection = (TList<SaJobActivity>) MakeCopyOf(this.SaJobActivityCollection); 
			if (this._edStudSemesterTempAsFacultyInfoId != null)
				_tmp.EdStudSemesterTempCollection = (TList<EdStudSemesterTemp>) MakeCopyOf(this.EdStudSemesterTempCollection); 
			if (this._gsCodeApprovalAsFacultyInfoId != null)
				_tmp.GsCodeApprovalCollection = (TList<GsCodeApproval>) MakeCopyOf(this.GsCodeApprovalCollection); 
			if (this._entityMainAsFacultyInfoId != null)
				_tmp.EntityMainCollection = (TList<EntityMain>) MakeCopyOf(this.EntityMainCollection); 
			if (this._feeStudInstallmentRequestAsFacultyInfoId != null)
				_tmp.FeeStudInstallmentRequestCollection = (TList<FeeStudInstallmentRequest>) MakeCopyOf(this.FeeStudInstallmentRequestCollection); 
			if (this._edStudCourseRegAssessAsFacultyInfoId != null)
				_tmp.EdStudCourseRegAssessCollection = (TList<EdStudCourseRegAssess>) MakeCopyOf(this.EdStudCourseRegAssessCollection); 
			if (this._saCandReleaseAsFacultyInfoId != null)
				_tmp.SaCandReleaseCollection = (TList<SaCandRelease>) MakeCopyOf(this.SaCandReleaseCollection); 
			if (this._entPolcyGrdngHdrAsFacultyInfoId != null)
				_tmp.EntPolcyGrdngHdrCollection = (TList<EntPolcyGrdngHdr>) MakeCopyOf(this.EntPolcyGrdngHdrCollection); 
			if (this._edStudSemesterAsFacultyInfoId != null)
				_tmp.EdStudSemesterCollection = (TList<EdStudSemester>) MakeCopyOf(this.EdStudSemesterCollection); 
			if (this._saScResearchAsFacultyInfoId != null)
				_tmp.SaScResearchCollection = (TList<SaScResearch>) MakeCopyOf(this.SaScResearchCollection); 
			if (this._edResultApproveAsFacultyInfoId != null)
				_tmp.EdResultApproveCollection = (TList<EdResultApprove>) MakeCopyOf(this.EdResultApproveCollection); 
			if (this._spoSponsorStudSemesterAsFacultyInfoId != null)
				_tmp.SpoSponsorStudSemesterCollection = (TList<SpoSponsorStudSemester>) MakeCopyOf(this.SpoSponsorStudSemesterCollection); 
			if (this._edProjectAsFacultyInfoId != null)
				_tmp.EdProjectCollection = (TList<EdProject>) MakeCopyOf(this.EdProjectCollection); 
			if (this._coCrsRsltRaiseAsFacultyInfoId != null)
				_tmp.CoCrsRsltRaiseCollection = (TList<CoCrsRsltRaise>) MakeCopyOf(this.CoCrsRsltRaiseCollection); 
			if (this._scScheduleDtlAsFacultyInfoId != null)
				_tmp.ScScheduleDtlCollection = (TList<ScScheduleDtl>) MakeCopyOf(this.ScScheduleDtlCollection); 
			if (this._edStudFacultyAsFacultyInfoId != null)
				_tmp.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection); 
			if (this._scSectionGroupHdrAsFacultyInfoId != null)
				_tmp.ScSectionGroupHdrCollection = (TList<ScSectionGroupHdr>) MakeCopyOf(this.ScSectionGroupHdrCollection); 
			if (this._edStudIntTrnsStateFromAsFacultyInfoId != null)
				_tmp.EdStudIntTrnsStateFromCollection = (TList<EdStudIntTrnsStateFrom>) MakeCopyOf(this.EdStudIntTrnsStateFromCollection); 
			if (this._feeCdeDiscTypeAsFacultyInfoId != null)
				_tmp.FeeCdeDiscTypeCollection = (TList<FeeCdeDiscType>) MakeCopyOf(this.FeeCdeDiscTypeCollection); 
			if (this._edGraduationAwardAsFacultyInfoId != null)
				_tmp.EdGraduationAwardCollection = (TList<EdGraduationAward>) MakeCopyOf(this.EdGraduationAwardCollection); 
			if (this._scBuildingAsFacultyInfoId != null)
				_tmp.ScBuildingCollection = (TList<ScBuilding>) MakeCopyOf(this.ScBuildingCollection); 
			if (this._edStudGrantTempAsFacultyInfoId != null)
				_tmp.EdStudGrantTempCollection = (TList<EdStudGrantTemp>) MakeCopyOf(this.EdStudGrantTempCollection); 
			if (this._edInttransRuleAsFacultyInfoId != null)
				_tmp.EdInttransRuleCollection = (TList<EdInttransRule>) MakeCopyOf(this.EdInttransRuleCollection); 
			if (this._pgOfferingAsFacultyInfoId != null)
				_tmp.PgOfferingCollection = (TList<PgOffering>) MakeCopyOf(this.PgOfferingCollection); 
			if (this._edStudStateAsFacultyInfoId != null)
				_tmp.EdStudStateCollection = (TList<EdStudState>) MakeCopyOf(this.EdStudStateCollection); 
			if (this._saPunishmentAsFacultyInfoId != null)
				_tmp.SaPunishmentCollection = (TList<SaPunishment>) MakeCopyOf(this.SaPunishmentCollection); 
			if (this._saVacationRenewAsFacultyInfoId != null)
				_tmp.SaVacationRenewCollection = (TList<SaVacationRenew>) MakeCopyOf(this.SaVacationRenewCollection); 
			if (this._edBylawAsFacultyInfoId != null)
				_tmp.EdBylawCollection = (TList<EdBylaw>) MakeCopyOf(this.EdBylawCollection); 
			if (this._saPromotionCondStsfAsFacultyInfoId != null)
				_tmp.SaPromotionCondStsfCollection = (TList<SaPromotionCondStsf>) MakeCopyOf(this.SaPromotionCondStsfCollection); 
			if (this._saCandReleaseDetailAsFacultyInfoId != null)
				_tmp.SaCandReleaseDetailCollection = (TList<SaCandReleaseDetail>) MakeCopyOf(this.SaCandReleaseDetailCollection); 
			if (this._gsApprovalHAsFacultyInfoId != null)
				_tmp.GsApprovalHCollection = (TList<GsApprovalH>) MakeCopyOf(this.GsApprovalHCollection); 
			if (this._edStudAbsFwAsFacultyInfoId != null)
				_tmp.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection); 
			if (this._saTransferAsFacultyInfoId != null)
				_tmp.SaTransferCollection = (TList<SaTransfer>) MakeCopyOf(this.SaTransferCollection); 
			if (this._edStudIntTrnsAsFacultyInfoId != null)
				_tmp.EdStudIntTrnsCollection = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollection); 
			if (this._saCodeSuperviseJobAsFacultyInfoId != null)
				_tmp.SaCodeSuperviseJobCollection = (TList<SaCodeSuperviseJob>) MakeCopyOf(this.SaCodeSuperviseJobCollection); 
			if (this._feeStudDiscAsFacultyInfoId != null)
				_tmp.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection); 
			if (this._edStudCourseCompAsFacultyInfoId != null)
				_tmp.EdStudCourseCompCollection = (TList<EdStudCourseComp>) MakeCopyOf(this.EdStudCourseCompCollection); 
			if (this._edStudNoteAsFacultyInfoId != null)
				_tmp.EdStudNoteCollection = (TList<EdStudNote>) MakeCopyOf(this.EdStudNoteCollection); 
			if (this._saDocOfFileAsFacultyInfoId != null)
				_tmp.SaDocOfFileCollection = (TList<SaDocOfFile>) MakeCopyOf(this.SaDocOfFileCollection); 
			if (this._svStudAskAdvReAsFacultyInfoId != null)
				_tmp.SvStudAskAdvReCollection = (TList<SvStudAskAdvRe>) MakeCopyOf(this.SvStudAskAdvReCollection); 
			if (this._admAcceptanceCategoryAsFacultyInfoId != null)
				_tmp.AdmAcceptanceCategoryCollection = (TList<AdmAcceptanceCategory>) MakeCopyOf(this.AdmAcceptanceCategoryCollection); 
			if (this._saVacationBalanceAsFacultyInfoId != null)
				_tmp.SaVacationBalanceCollection = (TList<SaVacationBalance>) MakeCopyOf(this.SaVacationBalanceCollection); 
			if (this._feeStudItemCnclAsFacultyInfoId != null)
				_tmp.FeeStudItemCnclCollection = (TList<FeeStudItemCncl>) MakeCopyOf(this.FeeStudItemCnclCollection); 
			if (this._pgThesisStudAsFacultyInfoId != null)
				_tmp.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection); 
			if (this._gsApprovalDAsFacultyInfoId != null)
				_tmp.GsApprovalDCollection = (TList<GsApprovalD>) MakeCopyOf(this.GsApprovalDCollection); 
			if (this._edStudLatenessAsFacultyInfoId != null)
				_tmp.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection); 
			if (this._gsCodeRptSignatureAsFacultyInfoId != null)
				_tmp.GsCodeRptSignatureCollection = (TList<GsCodeRptSignature>) MakeCopyOf(this.GsCodeRptSignatureCollection); 
			if (this._saResearchTeamAsFacultyInfoId != null)
				_tmp.SaResearchTeamCollection = (TList<SaResearchTeam>) MakeCopyOf(this.SaResearchTeamCollection); 
			if (this._admAppTransReqAsFacultyInfoId != null)
				_tmp.AdmAppTransReqCollection = (TList<AdmAppTransReq>) MakeCopyOf(this.AdmAppTransReqCollection); 
			if (this._edSemAgendaDtlAsFacultyInfoId != null)
				_tmp.EdSemAgendaDtlCollection = (TList<EdSemAgendaDtl>) MakeCopyOf(this.EdSemAgendaDtlCollection); 
			if (this._edCrsFreeRstrctdAsFacultyInfoId != null)
				_tmp.EdCrsFreeRstrctdCollection = (TList<EdCrsFreeRstrctd>) MakeCopyOf(this.EdCrsFreeRstrctdCollection); 
			if (this._edStudGrantDegreeAsFacultyInfoId != null)
				_tmp.EdStudGrantDegreeCollection = (TList<EdStudGrantDegree>) MakeCopyOf(this.EdStudGrantDegreeCollection); 
			if (this._edStudGroupPreAsFacultyInfoId != null)
				_tmp.EdStudGroupPreCollection = (TList<EdStudGroupPre>) MakeCopyOf(this.EdStudGroupPreCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			AsFacultyInfoEntityData _tmp = new AsFacultyInfoEntityData();
						
			_tmp.AsFacultyInfoId = this.AsFacultyInfoId;
			_tmp.OriginalAsFacultyInfoId = this.OriginalAsFacultyInfoId;
			
			_tmp.GsCountryNodeId = this.GsCountryNodeId;
			_tmp.FacultyAddress = this.FacultyAddress;
			_tmp.FacultyDescrAr = this.FacultyDescrAr;
			_tmp.FacultyDescrEn = this.FacultyDescrEn;
			_tmp.ConDate = this.ConDate;
			_tmp.FacultyLogo = this.FacultyLogo;
			_tmp.Notation = this.Notation;
			_tmp.FacultyCode = this.FacultyCode;
			
			#region Source Parent Composite Entities
			if (this.GsCountryNodeIdSource != null && existingCopies.Contains(this.GsCountryNodeIdSource))
				_tmp.GsCountryNodeIdSource = existingCopies[this.GsCountryNodeIdSource] as GsCountryNode;
			else
				_tmp.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource, existingCopies) as GsCountryNode;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.EdBranchRuleCollection = (TList<EdBranchRule>) MakeCopyOf(this.EdBranchRuleCollection, existingCopies); 
			_tmp.SaMilitaryStatusCollection = (TList<SaMilitaryStatus>) MakeCopyOf(this.SaMilitaryStatusCollection, existingCopies); 
			_tmp.ScStudGroupCollection = (TList<ScStudGroup>) MakeCopyOf(this.ScStudGroupCollection, existingCopies); 
			_tmp.SaRelativeCollection = (TList<SaRelative>) MakeCopyOf(this.SaRelativeCollection, existingCopies); 
			_tmp.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection, existingCopies); 
			_tmp.SpoSponsorStudCollection = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollection, existingCopies); 
			_tmp.EdCodeCourseAssessCollection = (TList<EdCodeCourseAssess>) MakeCopyOf(this.EdCodeCourseAssessCollection, existingCopies); 
			_tmp.EdCodeDischargeHCollection = (TList<EdCodeDischargeH>) MakeCopyOf(this.EdCodeDischargeHCollection, existingCopies); 
			_tmp.SaCdeAcadLoadCollection = (TList<SaCdeAcadLoad>) MakeCopyOf(this.SaCdeAcadLoadCollection, existingCopies); 
			_tmp.SaEmpHierarchyCollection = (TList<SaEmpHierarchy>) MakeCopyOf(this.SaEmpHierarchyCollection, existingCopies); 
			_tmp.EdCodeCourseTeachingCollection = (TList<EdCodeCourseTeaching>) MakeCopyOf(this.EdCodeCourseTeachingCollection, existingCopies); 
			_tmp.EdStudCourseRegPreCollection = (TList<EdStudCourseRegPre>) MakeCopyOf(this.EdStudCourseRegPreCollection, existingCopies); 
			_tmp.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection, existingCopies); 
			_tmp.GsCommCollection = (TList<GsComm>) MakeCopyOf(this.GsCommCollection, existingCopies); 
			_tmp.SaJobStartStatmentCollection = (TList<SaJobStartStatment>) MakeCopyOf(this.SaJobStartStatmentCollection, existingCopies); 
			_tmp.EdStudAcadWarnCollection = (TList<EdStudAcadWarn>) MakeCopyOf(this.EdStudAcadWarnCollection, existingCopies); 
			_tmp.PgThesisGrantDegreeCollection = (TList<PgThesisGrantDegree>) MakeCopyOf(this.PgThesisGrantDegreeCollection, existingCopies); 
			_tmp.EdCourseTopicCollection = (TList<EdCourseTopic>) MakeCopyOf(this.EdCourseTopicCollection, existingCopies); 
			_tmp.FeeFineCollection = (TList<FeeFine>) MakeCopyOf(this.FeeFineCollection, existingCopies); 
			_tmp.EdStudQualSubjectCollection = (TList<EdStudQualSubject>) MakeCopyOf(this.EdStudQualSubjectCollection, existingCopies); 
			_tmp.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection, existingCopies); 
			_tmp.FeeStudNatSimilarityRequestCollection = (TList<FeeStudNatSimilarityRequest>) MakeCopyOf(this.FeeStudNatSimilarityRequestCollection, existingCopies); 
			_tmp.SaJobStoppageCollection = (TList<SaJobStoppage>) MakeCopyOf(this.SaJobStoppageCollection, existingCopies); 
			_tmp.SaPromotionRequestCollection = (TList<SaPromotionRequest>) MakeCopyOf(this.SaPromotionRequestCollection, existingCopies); 
			_tmp.CoScheduleDetailCollection = (TList<CoScheduleDetail>) MakeCopyOf(this.CoScheduleDetailCollection, existingCopies); 
			_tmp.SaVacationBalanceHCollection = (TList<SaVacationBalanceH>) MakeCopyOf(this.SaVacationBalanceHCollection, existingCopies); 
			_tmp.SaPublicationCollection = (TList<SaPublication>) MakeCopyOf(this.SaPublicationCollection, existingCopies); 
			_tmp.FeeFacultyRuleCollection = (TList<FeeFacultyRule>) MakeCopyOf(this.FeeFacultyRuleCollection, existingCopies); 
			_tmp.SvPollHdrCollection = (TList<SvPollHdr>) MakeCopyOf(this.SvPollHdrCollection, existingCopies); 
			_tmp.FeeStudVoucherCollection = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollection, existingCopies); 
			_tmp.EdAcadYearFacultyCollection = (TList<EdAcadYearFaculty>) MakeCopyOf(this.EdAcadYearFacultyCollection, existingCopies); 
			_tmp.RsrchStudPostponeReqCollection = (TList<RsrchStudPostponeReq>) MakeCopyOf(this.RsrchStudPostponeReqCollection, existingCopies); 
			_tmp.SeUserCrsAssessCollection = (TList<SeUserCrsAssess>) MakeCopyOf(this.SeUserCrsAssessCollection, existingCopies); 
			_tmp.EdStudTransFromReqCollection = (TList<EdStudTransFromReq>) MakeCopyOf(this.EdStudTransFromReqCollection, existingCopies); 
			_tmp.GsCdeClrncItemFacCollection = (TList<GsCdeClrncItemFac>) MakeCopyOf(this.GsCdeClrncItemFacCollection, existingCopies); 
			_tmp.SaRaiseCollection = (TList<SaRaise>) MakeCopyOf(this.SaRaiseCollection, existingCopies); 
			_tmp.EdStudIntTrnsStateToCollection = (TList<EdStudIntTrnsStateTo>) MakeCopyOf(this.EdStudIntTrnsStateToCollection, existingCopies); 
			_tmp.AdmPrecondQualCollection = (TList<AdmPrecondQual>) MakeCopyOf(this.AdmPrecondQualCollection, existingCopies); 
			_tmp.AdmRatingParametersMajorsCollection = (TList<AdmRatingParametersMajors>) MakeCopyOf(this.AdmRatingParametersMajorsCollection, existingCopies); 
			_tmp.ScSchdlPeriodCollection = (TList<ScSchdlPeriod>) MakeCopyOf(this.ScSchdlPeriodCollection, existingCopies); 
			_tmp.FeeStudRetrieveRequestCollection = (TList<FeeStudRetrieveRequest>) MakeCopyOf(this.FeeStudRetrieveRequestCollection, existingCopies); 
			_tmp.SaExtDelCollection = (TList<SaExtDel>) MakeCopyOf(this.SaExtDelCollection, existingCopies); 
			_tmp.ScHallRsrvCollection = (TList<ScHallRsrv>) MakeCopyOf(this.ScHallRsrvCollection, existingCopies); 
			_tmp.EdResidencyStudCollection = (TList<EdResidencyStud>) MakeCopyOf(this.EdResidencyStudCollection, existingCopies); 
			_tmp.EdStudCourseChngCollection = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollection, existingCopies); 
			_tmp.EdCourseCollection = (TList<EdCourse>) MakeCopyOf(this.EdCourseCollection, existingCopies); 
			_tmp.SvAutoMsgTmpltCollection = (TList<SvAutoMsgTmplt>) MakeCopyOf(this.SvAutoMsgTmpltCollection, existingCopies); 
			_tmp.ScScheduleRsrvCollection = (TList<ScScheduleRsrv>) MakeCopyOf(this.ScScheduleRsrvCollection, existingCopies); 
			_tmp.SaScCommDecisionCollection = (TList<SaScCommDecision>) MakeCopyOf(this.SaScCommDecisionCollection, existingCopies); 
			_tmp.EdStudIntTransPrefCollection = (TList<EdStudIntTransPref>) MakeCopyOf(this.EdStudIntTransPrefCollection, existingCopies); 
			_tmp.SaTrainingCourseCollection = (TList<SaTrainingCourse>) MakeCopyOf(this.SaTrainingCourseCollection, existingCopies); 
			_tmp.SaMiltaryCollection = (TList<SaMiltary>) MakeCopyOf(this.SaMiltaryCollection, existingCopies); 
			_tmp.FeeInstlmntRuleCollection = (TList<FeeInstlmntRule>) MakeCopyOf(this.FeeInstlmntRuleCollection, existingCopies); 
			_tmp.AdmCompetitiveAvgCollection = (TList<AdmCompetitiveAvg>) MakeCopyOf(this.AdmCompetitiveAvgCollection, existingCopies); 
			_tmp.RsrchStudRegisterCollection = (TList<RsrchStudRegister>) MakeCopyOf(this.RsrchStudRegisterCollection, existingCopies); 
			_tmp.SeFormCollection = (TList<SeForm>) MakeCopyOf(this.SeFormCollection, existingCopies); 
			_tmp.EdOfferingCourseCollection = (TList<EdOfferingCourse>) MakeCopyOf(this.EdOfferingCourseCollection, existingCopies); 
			_tmp.FeeLimitRuleCollection = (TList<FeeLimitRule>) MakeCopyOf(this.FeeLimitRuleCollection, existingCopies); 
			_tmp.SaExperienceCollection = (TList<SaExperience>) MakeCopyOf(this.SaExperienceCollection, existingCopies); 
			_tmp.SaServTerminCollection = (TList<SaServTermin>) MakeCopyOf(this.SaServTerminCollection, existingCopies); 
			_tmp.EdOfferingCollection = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollection, existingCopies); 
			_tmp.AdmAppPrefCollection = (TList<AdmAppPref>) MakeCopyOf(this.AdmAppPrefCollection, existingCopies); 
			_tmp.EdStudAbsenceCollection = (TList<EdStudAbsence>) MakeCopyOf(this.EdStudAbsenceCollection, existingCopies); 
			_tmp.SaWarningCollection = (TList<SaWarning>) MakeCopyOf(this.SaWarningCollection, existingCopies); 
			_tmp.EdStudStateTempCollection = (TList<EdStudStateTemp>) MakeCopyOf(this.EdStudStateTempCollection, existingCopies); 
			_tmp.SaPromotionCollection = (TList<SaPromotion>) MakeCopyOf(this.SaPromotionCollection, existingCopies); 
			_tmp.SvStaffEvlCollection = (TList<SvStaffEvl>) MakeCopyOf(this.SvStaffEvlCollection, existingCopies); 
			_tmp.SpoSponsorOfferCollection = (TList<SpoSponsorOffer>) MakeCopyOf(this.SpoSponsorOfferCollection, existingCopies); 
			_tmp.SvStudAskAdvCollection = (TList<SvStudAskAdv>) MakeCopyOf(this.SvStudAskAdvCollection, existingCopies); 
			_tmp.SaVacationCollection = (TList<SaVacation>) MakeCopyOf(this.SaVacationCollection, existingCopies); 
			_tmp.SaEmploymentCollection = (TList<SaEmployment>) MakeCopyOf(this.SaEmploymentCollection, existingCopies); 
			_tmp.SaFinStatmentCollection = (TList<SaFinStatment>) MakeCopyOf(this.SaFinStatmentCollection, existingCopies); 
			_tmp.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection, existingCopies); 
			_tmp.EdPrintReqCollection = (TList<EdPrintReq>) MakeCopyOf(this.EdPrintReqCollection, existingCopies); 
			_tmp.FeeStudFeeItemCollection = (TList<FeeStudFeeItem>) MakeCopyOf(this.FeeStudFeeItemCollection, existingCopies); 
			_tmp.EdCodeLevelCollection = (TList<EdCodeLevel>) MakeCopyOf(this.EdCodeLevelCollection, existingCopies); 
			_tmp.ScGroupInfoCollection = (TList<ScGroupInfo>) MakeCopyOf(this.ScGroupInfoCollection, existingCopies); 
			_tmp.SaPersonIdCollection = (TList<SaPersonId>) MakeCopyOf(this.SaPersonIdCollection, existingCopies); 
			_tmp.SaStfMemberCollection = (TList<SaStfMember>) MakeCopyOf(this.SaStfMemberCollection, existingCopies); 
			_tmp.AdmCodeEngTestCollection = (TList<AdmCodeEngTest>) MakeCopyOf(this.AdmCodeEngTestCollection, existingCopies); 
			_tmp.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection, existingCopies); 
			_tmp.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection, existingCopies); 
			_tmp.CoControlRoomCollection = (TList<CoControlRoom>) MakeCopyOf(this.CoControlRoomCollection, existingCopies); 
			_tmp.EdStudBranchPrefCollection = (TList<EdStudBranchPref>) MakeCopyOf(this.EdStudBranchPrefCollection, existingCopies); 
			_tmp.FeeStudDiscContinueCollection = (TList<FeeStudDiscContinue>) MakeCopyOf(this.FeeStudDiscContinueCollection, existingCopies); 
			_tmp.FeeStudInstallmentCollection = (TList<FeeStudInstallment>) MakeCopyOf(this.FeeStudInstallmentCollection, existingCopies); 
			_tmp.EdStudGroupCollection = (TList<EdStudGroup>) MakeCopyOf(this.EdStudGroupCollection, existingCopies); 
			_tmp.EdStudCourseRegCollection = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollection, existingCopies); 
			_tmp.SaScQualCollection = (TList<SaScQual>) MakeCopyOf(this.SaScQualCollection, existingCopies); 
			_tmp.MltOrgTreeCollection = (TList<MltOrgTree>) MakeCopyOf(this.MltOrgTreeCollection, existingCopies); 
			_tmp.SaSupervisingJobsCollection = (TList<SaSupervisingJobs>) MakeCopyOf(this.SaSupervisingJobsCollection, existingCopies); 
			_tmp.EdExamSchdlCollection = (TList<EdExamSchdl>) MakeCopyOf(this.EdExamSchdlCollection, existingCopies); 
			_tmp.GsCodeApprovalFacultyCollection = (TList<GsCodeApprovalFaculty>) MakeCopyOf(this.GsCodeApprovalFacultyCollection, existingCopies); 
			_tmp.EdStudAcadmicAdvCollection = (TList<EdStudAcadmicAdv>) MakeCopyOf(this.EdStudAcadmicAdvCollection, existingCopies); 
			_tmp.SaJobActivityCollection = (TList<SaJobActivity>) MakeCopyOf(this.SaJobActivityCollection, existingCopies); 
			_tmp.EdStudSemesterTempCollection = (TList<EdStudSemesterTemp>) MakeCopyOf(this.EdStudSemesterTempCollection, existingCopies); 
			_tmp.GsCodeApprovalCollection = (TList<GsCodeApproval>) MakeCopyOf(this.GsCodeApprovalCollection, existingCopies); 
			_tmp.EntityMainCollection = (TList<EntityMain>) MakeCopyOf(this.EntityMainCollection, existingCopies); 
			_tmp.FeeStudInstallmentRequestCollection = (TList<FeeStudInstallmentRequest>) MakeCopyOf(this.FeeStudInstallmentRequestCollection, existingCopies); 
			_tmp.EdStudCourseRegAssessCollection = (TList<EdStudCourseRegAssess>) MakeCopyOf(this.EdStudCourseRegAssessCollection, existingCopies); 
			_tmp.SaCandReleaseCollection = (TList<SaCandRelease>) MakeCopyOf(this.SaCandReleaseCollection, existingCopies); 
			_tmp.EntPolcyGrdngHdrCollection = (TList<EntPolcyGrdngHdr>) MakeCopyOf(this.EntPolcyGrdngHdrCollection, existingCopies); 
			_tmp.EdStudSemesterCollection = (TList<EdStudSemester>) MakeCopyOf(this.EdStudSemesterCollection, existingCopies); 
			_tmp.SaScResearchCollection = (TList<SaScResearch>) MakeCopyOf(this.SaScResearchCollection, existingCopies); 
			_tmp.EdResultApproveCollection = (TList<EdResultApprove>) MakeCopyOf(this.EdResultApproveCollection, existingCopies); 
			_tmp.SpoSponsorStudSemesterCollection = (TList<SpoSponsorStudSemester>) MakeCopyOf(this.SpoSponsorStudSemesterCollection, existingCopies); 
			_tmp.EdProjectCollection = (TList<EdProject>) MakeCopyOf(this.EdProjectCollection, existingCopies); 
			_tmp.CoCrsRsltRaiseCollection = (TList<CoCrsRsltRaise>) MakeCopyOf(this.CoCrsRsltRaiseCollection, existingCopies); 
			_tmp.ScScheduleDtlCollection = (TList<ScScheduleDtl>) MakeCopyOf(this.ScScheduleDtlCollection, existingCopies); 
			_tmp.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection, existingCopies); 
			_tmp.ScSectionGroupHdrCollection = (TList<ScSectionGroupHdr>) MakeCopyOf(this.ScSectionGroupHdrCollection, existingCopies); 
			_tmp.EdStudIntTrnsStateFromCollection = (TList<EdStudIntTrnsStateFrom>) MakeCopyOf(this.EdStudIntTrnsStateFromCollection, existingCopies); 
			_tmp.FeeCdeDiscTypeCollection = (TList<FeeCdeDiscType>) MakeCopyOf(this.FeeCdeDiscTypeCollection, existingCopies); 
			_tmp.EdGraduationAwardCollection = (TList<EdGraduationAward>) MakeCopyOf(this.EdGraduationAwardCollection, existingCopies); 
			_tmp.ScBuildingCollection = (TList<ScBuilding>) MakeCopyOf(this.ScBuildingCollection, existingCopies); 
			_tmp.EdStudGrantTempCollection = (TList<EdStudGrantTemp>) MakeCopyOf(this.EdStudGrantTempCollection, existingCopies); 
			_tmp.EdInttransRuleCollection = (TList<EdInttransRule>) MakeCopyOf(this.EdInttransRuleCollection, existingCopies); 
			_tmp.PgOfferingCollection = (TList<PgOffering>) MakeCopyOf(this.PgOfferingCollection, existingCopies); 
			_tmp.EdStudStateCollection = (TList<EdStudState>) MakeCopyOf(this.EdStudStateCollection, existingCopies); 
			_tmp.SaPunishmentCollection = (TList<SaPunishment>) MakeCopyOf(this.SaPunishmentCollection, existingCopies); 
			_tmp.SaVacationRenewCollection = (TList<SaVacationRenew>) MakeCopyOf(this.SaVacationRenewCollection, existingCopies); 
			_tmp.EdBylawCollection = (TList<EdBylaw>) MakeCopyOf(this.EdBylawCollection, existingCopies); 
			_tmp.SaPromotionCondStsfCollection = (TList<SaPromotionCondStsf>) MakeCopyOf(this.SaPromotionCondStsfCollection, existingCopies); 
			_tmp.SaCandReleaseDetailCollection = (TList<SaCandReleaseDetail>) MakeCopyOf(this.SaCandReleaseDetailCollection, existingCopies); 
			_tmp.GsApprovalHCollection = (TList<GsApprovalH>) MakeCopyOf(this.GsApprovalHCollection, existingCopies); 
			_tmp.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection, existingCopies); 
			_tmp.SaTransferCollection = (TList<SaTransfer>) MakeCopyOf(this.SaTransferCollection, existingCopies); 
			_tmp.EdStudIntTrnsCollection = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollection, existingCopies); 
			_tmp.SaCodeSuperviseJobCollection = (TList<SaCodeSuperviseJob>) MakeCopyOf(this.SaCodeSuperviseJobCollection, existingCopies); 
			_tmp.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection, existingCopies); 
			_tmp.EdStudCourseCompCollection = (TList<EdStudCourseComp>) MakeCopyOf(this.EdStudCourseCompCollection, existingCopies); 
			_tmp.EdStudNoteCollection = (TList<EdStudNote>) MakeCopyOf(this.EdStudNoteCollection, existingCopies); 
			_tmp.SaDocOfFileCollection = (TList<SaDocOfFile>) MakeCopyOf(this.SaDocOfFileCollection, existingCopies); 
			_tmp.SvStudAskAdvReCollection = (TList<SvStudAskAdvRe>) MakeCopyOf(this.SvStudAskAdvReCollection, existingCopies); 
			_tmp.AdmAcceptanceCategoryCollection = (TList<AdmAcceptanceCategory>) MakeCopyOf(this.AdmAcceptanceCategoryCollection, existingCopies); 
			_tmp.SaVacationBalanceCollection = (TList<SaVacationBalance>) MakeCopyOf(this.SaVacationBalanceCollection, existingCopies); 
			_tmp.FeeStudItemCnclCollection = (TList<FeeStudItemCncl>) MakeCopyOf(this.FeeStudItemCnclCollection, existingCopies); 
			_tmp.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection, existingCopies); 
			_tmp.GsApprovalDCollection = (TList<GsApprovalD>) MakeCopyOf(this.GsApprovalDCollection, existingCopies); 
			_tmp.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection, existingCopies); 
			_tmp.GsCodeRptSignatureCollection = (TList<GsCodeRptSignature>) MakeCopyOf(this.GsCodeRptSignatureCollection, existingCopies); 
			_tmp.SaResearchTeamCollection = (TList<SaResearchTeam>) MakeCopyOf(this.SaResearchTeamCollection, existingCopies); 
			_tmp.AdmAppTransReqCollection = (TList<AdmAppTransReq>) MakeCopyOf(this.AdmAppTransReqCollection, existingCopies); 
			_tmp.EdSemAgendaDtlCollection = (TList<EdSemAgendaDtl>) MakeCopyOf(this.EdSemAgendaDtlCollection, existingCopies); 
			_tmp.EdCrsFreeRstrctdCollection = (TList<EdCrsFreeRstrctd>) MakeCopyOf(this.EdCrsFreeRstrctdCollection, existingCopies); 
			_tmp.EdStudGrantDegreeCollection = (TList<EdStudGrantDegree>) MakeCopyOf(this.EdStudGrantDegreeCollection, existingCopies); 
			_tmp.EdStudGroupPreCollection = (TList<EdStudGroupPre>) MakeCopyOf(this.EdStudGroupPreCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AsFacultyInfoColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(AsFacultyInfoColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AsFacultyInfoColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(AsFacultyInfoColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AsFacultyInfoColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(AsFacultyInfoColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				AsFacultyInfoEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new AsFacultyInfoEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AsFacultyInfoColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(AsFacultyInfoColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				AsFacultyInfoEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new AsFacultyInfoEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region AsFacultyInfoEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="AsFacultyInfo"/> object.
	/// </remarks>
	public class AsFacultyInfoEventArgs : System.EventArgs
	{
		private AsFacultyInfoColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the AsFacultyInfoEventArgs class.
		///</summary>
		public AsFacultyInfoEventArgs(AsFacultyInfoColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the AsFacultyInfoEventArgs class.
		///</summary>
		public AsFacultyInfoEventArgs(AsFacultyInfoColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The AsFacultyInfoColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="AsFacultyInfoColumn" />
		public AsFacultyInfoColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all AsFacultyInfo related events.
	///</summary>
	public delegate void AsFacultyInfoEventHandler(object sender, AsFacultyInfoEventArgs e);
	
	#region AsFacultyInfoComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class AsFacultyInfoComparer : System.Collections.Generic.IComparer<AsFacultyInfo>
	{
		AsFacultyInfoColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:AsFacultyInfoComparer"/> class.
        /// </summary>
		public AsFacultyInfoComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:AsFacultyInfoComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public AsFacultyInfoComparer(AsFacultyInfoColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="AsFacultyInfo"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="AsFacultyInfo"/> to compare.</param>
        /// <param name="b">The second <c>AsFacultyInfo</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(AsFacultyInfo a, AsFacultyInfo b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(AsFacultyInfo entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(AsFacultyInfo a, AsFacultyInfo b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public AsFacultyInfoColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region AsFacultyInfoKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="AsFacultyInfo"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class AsFacultyInfoKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the AsFacultyInfoKey class.
		/// </summary>
		public AsFacultyInfoKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the AsFacultyInfoKey class.
		/// </summary>
		public AsFacultyInfoKey(AsFacultyInfoBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.AsFacultyInfoId = entity.AsFacultyInfoId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the AsFacultyInfoKey class.
		/// </summary>
		public AsFacultyInfoKey(System.Decimal _asFacultyInfoId)
		{
			#region Init Properties

			this.AsFacultyInfoId = _asFacultyInfoId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private AsFacultyInfoBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public AsFacultyInfoBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the AsFacultyInfoId property
		private System.Decimal _asFacultyInfoId;
		
		/// <summary>
		/// Gets or sets the AsFacultyInfoId property.
		/// </summary>
		public System.Decimal AsFacultyInfoId
		{
			get { return _asFacultyInfoId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.AsFacultyInfoId = value;
				
				_asFacultyInfoId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				AsFacultyInfoId = ( values["AsFacultyInfoId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["AsFacultyInfoId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("AsFacultyInfoId", AsFacultyInfoId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("AsFacultyInfoId: {0}{1}",
								AsFacultyInfoId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region AsFacultyInfoColumn Enum
	
	/// <summary>
	/// Enumerate the AsFacultyInfo columns.
	/// </summary>
	[Serializable]
	public enum AsFacultyInfoColumn : int
	{
		/// <summary>
		/// AsFacultyInfoId : 
		/// </summary>
		[EnumTextValue("AS_FACULTY_INFO_ID")]
		[ColumnEnum("AS_FACULTY_INFO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		AsFacultyInfoId = 1,
		/// <summary>
		/// GsCountryNodeId : 
		/// </summary>
		[EnumTextValue("GS_COUNTRY_NODE_ID")]
		[ColumnEnum("GS_COUNTRY_NODE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCountryNodeId = 2,
		/// <summary>
		/// FacultyAddress : 
		/// </summary>
		[EnumTextValue("FACULTY_ADDRESS")]
		[ColumnEnum("FACULTY_ADDRESS", typeof(System.String), System.Data.DbType.String, false, false, true, 256)]
		FacultyAddress = 3,
		/// <summary>
		/// FacultyDescrAr : 
		/// </summary>
		[EnumTextValue("FACULTY_DESCR_AR")]
		[ColumnEnum("FACULTY_DESCR_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		FacultyDescrAr = 4,
		/// <summary>
		/// FacultyDescrEn : 
		/// </summary>
		[EnumTextValue("FACULTY_DESCR_EN")]
		[ColumnEnum("FACULTY_DESCR_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		FacultyDescrEn = 5,
		/// <summary>
		/// ConDate : 
		/// </summary>
		[EnumTextValue("CON_DATE")]
		[ColumnEnum("CON_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		ConDate = 6,
		/// <summary>
		/// FacultyLogo : 
		/// </summary>
		[EnumTextValue("FACULTY_LOGO")]
		[ColumnEnum("FACULTY_LOGO", typeof(System.String), System.Data.DbType.String, false, false, true, 350)]
		FacultyLogo = 7,
		/// <summary>
		/// Notation : 
		/// </summary>
		[EnumTextValue("NOTATION")]
		[ColumnEnum("NOTATION", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		Notation = 8,
		/// <summary>
		/// FacultyCode : 
		/// </summary>
		[EnumTextValue("FACULTY_CODE")]
		[ColumnEnum("FACULTY_CODE", typeof(System.String), System.Data.DbType.String, false, false, true, 15)]
		FacultyCode = 9
	}//End enum

	#endregion AsFacultyInfoColumn Enum

} // end namespace
