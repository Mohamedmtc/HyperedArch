
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file AdmAppWorkExper.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ADM_APP_WORK_EXPER' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class AdmAppWorkExperBase : EntityBase, IAdmAppWorkExper, IEntityId<AdmAppWorkExperKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private AdmAppWorkExperEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private AdmAppWorkExperEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private AdmAppWorkExperEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<AdmAppWorkExper> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AdmAppWorkExperEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AdmAppWorkExperEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="AdmAppWorkExperBase"/> instance.
		///</summary>
		public AdmAppWorkExperBase()
		{
			this.entityData = new AdmAppWorkExperEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="AdmAppWorkExperBase"/> instance.
		///</summary>
		///<param name="_admAppWorkExperId"></param>
		///<param name="_orgName"></param>
		///<param name="_orgAddress"></param>
		///<param name="_gsCountryNodeId">البلد- المحافظة</param>
		///<param name="_jobTitle"></param>
		///<param name="_jobDescr"></param>
		///<param name="_fromDate"></param>
		///<param name="_toDate"></param>
		///<param name="_currentFlg"></param>
		///<param name="_admApplicantId"></param>
		///<param name="_edStudId"></param>
		///<param name="_phoneNo"></param>
		///<param name="_mobNo"></param>
		///<param name="_eMail"></param>
		///<param name="_webSite"></param>
		///<param name="_gsCdeUniversitiesId">الجامعة- الكلية</param>
		///<param name="_workNotes">ملاحظات</param>
		///<param name="_deptDescrEn">الكلية/ القسم</param>
		///<param name="_admAppRegHistoryId"></param>
		///<param name="_awkafFlg">CSS</param>
		///<param name="_privFlg">KTECH حكومه- خاص</param>
		///<param name="_seUserId"></param>
		///<param name="_lastDate"></param>
		public AdmAppWorkExperBase(System.Decimal _admAppWorkExperId, System.String _orgName, 
			System.String _orgAddress, System.Decimal? _gsCountryNodeId, System.String _jobTitle, 
			System.String _jobDescr, System.DateTime _fromDate, System.DateTime? _toDate, 
			System.Boolean? _currentFlg, System.Decimal? _admApplicantId, System.Decimal? _edStudId, 
			System.Decimal? _phoneNo, System.Decimal? _mobNo, System.String _eMail, 
			System.String _webSite, System.Decimal? _gsCdeUniversitiesId, System.String _workNotes, 
			System.String _deptDescrEn, System.Decimal? _admAppRegHistoryId, System.Boolean? _awkafFlg, 
			System.Boolean? _privFlg, System.Decimal? _seUserId, System.DateTime? _lastDate)
		{
			this.entityData = new AdmAppWorkExperEntityData();
			this.backupData = null;

			this.AdmAppWorkExperId = _admAppWorkExperId;
			this.OrgName = _orgName;
			this.OrgAddress = _orgAddress;
			this.GsCountryNodeId = _gsCountryNodeId;
			this.JobTitle = _jobTitle;
			this.JobDescr = _jobDescr;
			this.FromDate = _fromDate;
			this.ToDate = _toDate;
			this.CurrentFlg = _currentFlg;
			this.AdmApplicantId = _admApplicantId;
			this.EdStudId = _edStudId;
			this.PhoneNo = _phoneNo;
			this.MobNo = _mobNo;
			this.EMail = _eMail;
			this.WebSite = _webSite;
			this.GsCdeUniversitiesId = _gsCdeUniversitiesId;
			this.WorkNotes = _workNotes;
			this.DeptDescrEn = _deptDescrEn;
			this.AdmAppRegHistoryId = _admAppRegHistoryId;
			this.AwkafFlg = _awkafFlg;
			this.PrivFlg = _privFlg;
			this.SeUserId = _seUserId;
			this.LastDate = _lastDate;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="AdmAppWorkExper"/> instance.
		///</summary>
		///<param name="_admAppWorkExperId"></param>
		///<param name="_orgName"></param>
		///<param name="_orgAddress"></param>
		///<param name="_gsCountryNodeId">البلد- المحافظة</param>
		///<param name="_jobTitle"></param>
		///<param name="_jobDescr"></param>
		///<param name="_fromDate"></param>
		///<param name="_toDate"></param>
		///<param name="_currentFlg"></param>
		///<param name="_admApplicantId"></param>
		///<param name="_edStudId"></param>
		///<param name="_phoneNo"></param>
		///<param name="_mobNo"></param>
		///<param name="_eMail"></param>
		///<param name="_webSite"></param>
		///<param name="_gsCdeUniversitiesId">الجامعة- الكلية</param>
		///<param name="_workNotes">ملاحظات</param>
		///<param name="_deptDescrEn">الكلية/ القسم</param>
		///<param name="_admAppRegHistoryId"></param>
		///<param name="_awkafFlg">CSS</param>
		///<param name="_privFlg">KTECH حكومه- خاص</param>
		///<param name="_seUserId"></param>
		///<param name="_lastDate"></param>
		public static AdmAppWorkExper CreateAdmAppWorkExper(System.Decimal _admAppWorkExperId, System.String _orgName, 
			System.String _orgAddress, System.Decimal? _gsCountryNodeId, System.String _jobTitle, 
			System.String _jobDescr, System.DateTime _fromDate, System.DateTime? _toDate, 
			System.Boolean? _currentFlg, System.Decimal? _admApplicantId, System.Decimal? _edStudId, 
			System.Decimal? _phoneNo, System.Decimal? _mobNo, System.String _eMail, 
			System.String _webSite, System.Decimal? _gsCdeUniversitiesId, System.String _workNotes, 
			System.String _deptDescrEn, System.Decimal? _admAppRegHistoryId, System.Boolean? _awkafFlg, 
			System.Boolean? _privFlg, System.Decimal? _seUserId, System.DateTime? _lastDate)
		{
			AdmAppWorkExper newAdmAppWorkExper = new AdmAppWorkExper();
			newAdmAppWorkExper.AdmAppWorkExperId = _admAppWorkExperId;
			newAdmAppWorkExper.OrgName = _orgName;
			newAdmAppWorkExper.OrgAddress = _orgAddress;
			newAdmAppWorkExper.GsCountryNodeId = _gsCountryNodeId;
			newAdmAppWorkExper.JobTitle = _jobTitle;
			newAdmAppWorkExper.JobDescr = _jobDescr;
			newAdmAppWorkExper.FromDate = _fromDate;
			newAdmAppWorkExper.ToDate = _toDate;
			newAdmAppWorkExper.CurrentFlg = _currentFlg;
			newAdmAppWorkExper.AdmApplicantId = _admApplicantId;
			newAdmAppWorkExper.EdStudId = _edStudId;
			newAdmAppWorkExper.PhoneNo = _phoneNo;
			newAdmAppWorkExper.MobNo = _mobNo;
			newAdmAppWorkExper.EMail = _eMail;
			newAdmAppWorkExper.WebSite = _webSite;
			newAdmAppWorkExper.GsCdeUniversitiesId = _gsCdeUniversitiesId;
			newAdmAppWorkExper.WorkNotes = _workNotes;
			newAdmAppWorkExper.DeptDescrEn = _deptDescrEn;
			newAdmAppWorkExper.AdmAppRegHistoryId = _admAppRegHistoryId;
			newAdmAppWorkExper.AwkafFlg = _awkafFlg;
			newAdmAppWorkExper.PrivFlg = _privFlg;
			newAdmAppWorkExper.SeUserId = _seUserId;
			newAdmAppWorkExper.LastDate = _lastDate;
			return newAdmAppWorkExper;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the AdmAppWorkExperId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal AdmAppWorkExperId
		{
			get
			{
				return this.entityData.AdmAppWorkExperId; 
			}
			
			set
			{
				if (this.entityData.AdmAppWorkExperId == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.AdmAppWorkExperId, this.entityData.AdmAppWorkExperId);
				this.entityData.AdmAppWorkExperId = value;
				this.EntityId.AdmAppWorkExperId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.AdmAppWorkExperId, this.entityData.AdmAppWorkExperId);
				OnPropertyChanged("AdmAppWorkExperId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ADM_APP_WORK_EXPER_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the ADM_APP_WORK_EXPER_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalAdmAppWorkExperId
		{
			get { return this.entityData.OriginalAdmAppWorkExperId; }
			set { this.entityData.OriginalAdmAppWorkExperId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the OrgName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String OrgName
		{
			get
			{
				return this.entityData.OrgName; 
			}
			
			set
			{
				if (this.entityData.OrgName == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.OrgName, this.entityData.OrgName);
				this.entityData.OrgName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.OrgName, this.entityData.OrgName);
				OnPropertyChanged("OrgName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OrgAddress property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String OrgAddress
		{
			get
			{
				return this.entityData.OrgAddress; 
			}
			
			set
			{
				if (this.entityData.OrgAddress == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.OrgAddress, this.entityData.OrgAddress);
				this.entityData.OrgAddress = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.OrgAddress, this.entityData.OrgAddress);
				OnPropertyChanged("OrgAddress");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCountryNodeId property. 
		///		البلد- المحافظة
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCountryNodeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"البلد- المحافظة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCountryNodeId
		{
			get
			{
				return this.entityData.GsCountryNodeId; 
			}
			
			set
			{
				if (this.entityData.GsCountryNodeId == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.GsCountryNodeId, this.entityData.GsCountryNodeId);
				this.entityData.GsCountryNodeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.GsCountryNodeId, this.entityData.GsCountryNodeId);
				OnPropertyChanged("GsCountryNodeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the JobTitle property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String JobTitle
		{
			get
			{
				return this.entityData.JobTitle; 
			}
			
			set
			{
				if (this.entityData.JobTitle == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.JobTitle, this.entityData.JobTitle);
				this.entityData.JobTitle = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.JobTitle, this.entityData.JobTitle);
				OnPropertyChanged("JobTitle");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the JobDescr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String JobDescr
		{
			get
			{
				return this.entityData.JobDescr; 
			}
			
			set
			{
				if (this.entityData.JobDescr == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.JobDescr, this.entityData.JobDescr);
				this.entityData.JobDescr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.JobDescr, this.entityData.JobDescr);
				OnPropertyChanged("JobDescr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FromDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.DateTime FromDate
		{
			get
			{
				return this.entityData.FromDate; 
			}
			
			set
			{
				if (this.entityData.FromDate == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.FromDate, this.entityData.FromDate);
				this.entityData.FromDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.FromDate, this.entityData.FromDate);
				OnPropertyChanged("FromDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ToDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsToDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? ToDate
		{
			get
			{
				return this.entityData.ToDate; 
			}
			
			set
			{
				if (this.entityData.ToDate == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.ToDate, this.entityData.ToDate);
				this.entityData.ToDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.ToDate, this.entityData.ToDate);
				OnPropertyChanged("ToDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CurrentFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsCurrentFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? CurrentFlg
		{
			get
			{
				return this.entityData.CurrentFlg; 
			}
			
			set
			{
				if (this.entityData.CurrentFlg == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.CurrentFlg, this.entityData.CurrentFlg);
				this.entityData.CurrentFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.CurrentFlg, this.entityData.CurrentFlg);
				OnPropertyChanged("CurrentFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmApplicantId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmApplicantIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmApplicantId
		{
			get
			{
				return this.entityData.AdmApplicantId; 
			}
			
			set
			{
				if (this.entityData.AdmApplicantId == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.AdmApplicantId, this.entityData.AdmApplicantId);
				this.entityData.AdmApplicantId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.AdmApplicantId, this.entityData.AdmApplicantId);
				OnPropertyChanged("AdmApplicantId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudId
		{
			get
			{
				return this.entityData.EdStudId; 
			}
			
			set
			{
				if (this.entityData.EdStudId == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.EdStudId, this.entityData.EdStudId);
				this.entityData.EdStudId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.EdStudId, this.entityData.EdStudId);
				OnPropertyChanged("EdStudId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PhoneNo property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPhoneNoNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? PhoneNo
		{
			get
			{
				return this.entityData.PhoneNo; 
			}
			
			set
			{
				if (this.entityData.PhoneNo == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.PhoneNo, this.entityData.PhoneNo);
				this.entityData.PhoneNo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.PhoneNo, this.entityData.PhoneNo);
				OnPropertyChanged("PhoneNo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MobNo property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsMobNoNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? MobNo
		{
			get
			{
				return this.entityData.MobNo; 
			}
			
			set
			{
				if (this.entityData.MobNo == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.MobNo, this.entityData.MobNo);
				this.entityData.MobNo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.MobNo, this.entityData.MobNo);
				OnPropertyChanged("MobNo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EMail property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String EMail
		{
			get
			{
				return this.entityData.EMail; 
			}
			
			set
			{
				if (this.entityData.EMail == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.EMail, this.entityData.EMail);
				this.entityData.EMail = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.EMail, this.entityData.EMail);
				OnPropertyChanged("EMail");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WebSite property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String WebSite
		{
			get
			{
				return this.entityData.WebSite; 
			}
			
			set
			{
				if (this.entityData.WebSite == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.WebSite, this.entityData.WebSite);
				this.entityData.WebSite = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.WebSite, this.entityData.WebSite);
				OnPropertyChanged("WebSite");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCdeUniversitiesId property. 
		///		الجامعة- الكلية
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCdeUniversitiesIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"الجامعة- الكلية"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCdeUniversitiesId
		{
			get
			{
				return this.entityData.GsCdeUniversitiesId; 
			}
			
			set
			{
				if (this.entityData.GsCdeUniversitiesId == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.GsCdeUniversitiesId, this.entityData.GsCdeUniversitiesId);
				this.entityData.GsCdeUniversitiesId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.GsCdeUniversitiesId, this.entityData.GsCdeUniversitiesId);
				OnPropertyChanged("GsCdeUniversitiesId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WorkNotes property. 
		///		ملاحظات
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"ملاحظات"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String WorkNotes
		{
			get
			{
				return this.entityData.WorkNotes; 
			}
			
			set
			{
				if (this.entityData.WorkNotes == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.WorkNotes, this.entityData.WorkNotes);
				this.entityData.WorkNotes = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.WorkNotes, this.entityData.WorkNotes);
				OnPropertyChanged("WorkNotes");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DeptDescrEn property. 
		///		الكلية/ القسم
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"الكلية/ القسم"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String DeptDescrEn
		{
			get
			{
				return this.entityData.DeptDescrEn; 
			}
			
			set
			{
				if (this.entityData.DeptDescrEn == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.DeptDescrEn, this.entityData.DeptDescrEn);
				this.entityData.DeptDescrEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.DeptDescrEn, this.entityData.DeptDescrEn);
				OnPropertyChanged("DeptDescrEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmAppRegHistoryId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmAppRegHistoryIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmAppRegHistoryId
		{
			get
			{
				return this.entityData.AdmAppRegHistoryId; 
			}
			
			set
			{
				if (this.entityData.AdmAppRegHistoryId == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.AdmAppRegHistoryId, this.entityData.AdmAppRegHistoryId);
				this.entityData.AdmAppRegHistoryId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.AdmAppRegHistoryId, this.entityData.AdmAppRegHistoryId);
				OnPropertyChanged("AdmAppRegHistoryId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AwkafFlg property. 
		///		CSS
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsAwkafFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"CSS"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? AwkafFlg
		{
			get
			{
				return this.entityData.AwkafFlg; 
			}
			
			set
			{
				if (this.entityData.AwkafFlg == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.AwkafFlg, this.entityData.AwkafFlg);
				this.entityData.AwkafFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.AwkafFlg, this.entityData.AwkafFlg);
				OnPropertyChanged("AwkafFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PrivFlg property. 
		///		KTECH حكومه- خاص
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsPrivFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"KTECH حكومه- خاص"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? PrivFlg
		{
			get
			{
				return this.entityData.PrivFlg; 
			}
			
			set
			{
				if (this.entityData.PrivFlg == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.PrivFlg, this.entityData.PrivFlg);
				this.entityData.PrivFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.PrivFlg, this.entityData.PrivFlg);
				OnPropertyChanged("PrivFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(AdmAppWorkExperColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmAppWorkExperColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="AdmAppRegHistory"/>.
		/// </summary>
		/// <value>The source AdmAppRegHistory for AdmAppRegHistoryId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmAppRegHistory AdmAppRegHistoryIdSource
      	{
            get { return entityData.AdmAppRegHistoryIdSource; }
            set { entityData.AdmAppRegHistoryIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmApplicant"/>.
		/// </summary>
		/// <value>The source AdmApplicant for AdmApplicantId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmApplicant AdmApplicantIdSource
      	{
            get { return entityData.AdmApplicantIdSource; }
            set { entityData.AdmApplicantIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStud"/>.
		/// </summary>
		/// <value>The source EdStud for EdStudId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStud EdStudIdSource
      	{
            get { return entityData.EdStudIdSource; }
            set { entityData.EdStudIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeUniversities"/>.
		/// </summary>
		/// <value>The source GsCdeUniversities for GsCdeUniversitiesId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeUniversities GsCdeUniversitiesIdSource
      	{
            get { return entityData.GsCdeUniversitiesIdSource; }
            set { entityData.GsCdeUniversitiesIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryNodeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCountryNode GsCountryNodeIdSource
      	{
            get { return entityData.GsCountryNodeIdSource; }
            set { entityData.GsCountryNodeIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("OrgName", "Org Name", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("OrgAddress", "Org Address", 250));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("JobTitle", "Job Title", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("JobDescr", "Job Descr", 250));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("EMail", "E Mail", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("WebSite", "Web Site", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("WorkNotes", "Work Notes", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DeptDescrEn", "Dept Descr En", 100));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ADM_APP_WORK_EXPER"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ADM_APP_WORK_EXPER_ID", "ORG_NAME", "ORG_ADDRESS", "GS_COUNTRY_NODE_ID", "JOB_TITLE", "JOB_DESCR", "FROM_DATE", "TO_DATE", "CURRENT_FLG", "ADM_APPLICANT_ID", "ED_STUD_ID", "PHONE_NO", "MOB_NO", "E_MAIL", "WEB_SITE", "GS_CDE_UNIVERSITIES_ID", "WORK_NOTES", "DEPT_DESCR_EN", "ADM_APP_REG_HISTORY_ID", "AWKAF_FLG", "PRIV_FLG", "SE_USER_ID", "LAST_DATE"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as AdmAppWorkExperEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (AdmAppWorkExper) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<AdmAppWorkExper>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as AdmAppWorkExper);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed AdmAppWorkExper Entity 
		///</summary>
		protected virtual AdmAppWorkExper Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			AdmAppWorkExper copy = new AdmAppWorkExper();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.AdmAppWorkExperId = this.AdmAppWorkExperId;
					copy.OriginalAdmAppWorkExperId = this.OriginalAdmAppWorkExperId;
				copy.OrgName = this.OrgName;
				copy.OrgAddress = this.OrgAddress;
				copy.GsCountryNodeId = this.GsCountryNodeId;
				copy.JobTitle = this.JobTitle;
				copy.JobDescr = this.JobDescr;
				copy.FromDate = this.FromDate;
				copy.ToDate = this.ToDate;
				copy.CurrentFlg = this.CurrentFlg;
				copy.AdmApplicantId = this.AdmApplicantId;
				copy.EdStudId = this.EdStudId;
				copy.PhoneNo = this.PhoneNo;
				copy.MobNo = this.MobNo;
				copy.EMail = this.EMail;
				copy.WebSite = this.WebSite;
				copy.GsCdeUniversitiesId = this.GsCdeUniversitiesId;
				copy.WorkNotes = this.WorkNotes;
				copy.DeptDescrEn = this.DeptDescrEn;
				copy.AdmAppRegHistoryId = this.AdmAppRegHistoryId;
				copy.AwkafFlg = this.AwkafFlg;
				copy.PrivFlg = this.PrivFlg;
				copy.SeUserId = this.SeUserId;
				copy.LastDate = this.LastDate;
			
			if (this.AdmAppRegHistoryIdSource != null && existingCopies.Contains(this.AdmAppRegHistoryIdSource))
				copy.AdmAppRegHistoryIdSource = existingCopies[this.AdmAppRegHistoryIdSource] as AdmAppRegHistory;
			else
				copy.AdmAppRegHistoryIdSource = MakeCopyOf(this.AdmAppRegHistoryIdSource, existingCopies) as AdmAppRegHistory;
			if (this.AdmApplicantIdSource != null && existingCopies.Contains(this.AdmApplicantIdSource))
				copy.AdmApplicantIdSource = existingCopies[this.AdmApplicantIdSource] as AdmApplicant;
			else
				copy.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource, existingCopies) as AdmApplicant;
			if (this.EdStudIdSource != null && existingCopies.Contains(this.EdStudIdSource))
				copy.EdStudIdSource = existingCopies[this.EdStudIdSource] as EdStud;
			else
				copy.EdStudIdSource = MakeCopyOf(this.EdStudIdSource, existingCopies) as EdStud;
			if (this.GsCdeUniversitiesIdSource != null && existingCopies.Contains(this.GsCdeUniversitiesIdSource))
				copy.GsCdeUniversitiesIdSource = existingCopies[this.GsCdeUniversitiesIdSource] as GsCdeUniversities;
			else
				copy.GsCdeUniversitiesIdSource = MakeCopyOf(this.GsCdeUniversitiesIdSource, existingCopies) as GsCdeUniversities;
			if (this.GsCountryNodeIdSource != null && existingCopies.Contains(this.GsCountryNodeIdSource))
				copy.GsCountryNodeIdSource = existingCopies[this.GsCountryNodeIdSource] as GsCountryNode;
			else
				copy.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource, existingCopies) as GsCountryNode;
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed AdmAppWorkExper Entity 
		///</summary>
		public virtual AdmAppWorkExper Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed AdmAppWorkExper Entity which is a deep copy of the current entity.
		///</summary>
		public virtual AdmAppWorkExper DeepCopy()
		{
			return EntityHelper.Clone<AdmAppWorkExper>(this as AdmAppWorkExper);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as AdmAppWorkExperEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new AdmAppWorkExperEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as AdmAppWorkExperEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(AdmAppWorkExperColumn column)
		{
			switch(column)
			{
					case AdmAppWorkExperColumn.AdmAppWorkExperId:
					return entityData.AdmAppWorkExperId != _originalData.AdmAppWorkExperId;
					case AdmAppWorkExperColumn.OrgName:
					return entityData.OrgName != _originalData.OrgName;
					case AdmAppWorkExperColumn.OrgAddress:
					return entityData.OrgAddress != _originalData.OrgAddress;
					case AdmAppWorkExperColumn.GsCountryNodeId:
					return entityData.GsCountryNodeId != _originalData.GsCountryNodeId;
					case AdmAppWorkExperColumn.JobTitle:
					return entityData.JobTitle != _originalData.JobTitle;
					case AdmAppWorkExperColumn.JobDescr:
					return entityData.JobDescr != _originalData.JobDescr;
					case AdmAppWorkExperColumn.FromDate:
					return entityData.FromDate != _originalData.FromDate;
					case AdmAppWorkExperColumn.ToDate:
					return entityData.ToDate != _originalData.ToDate;
					case AdmAppWorkExperColumn.CurrentFlg:
					return entityData.CurrentFlg != _originalData.CurrentFlg;
					case AdmAppWorkExperColumn.AdmApplicantId:
					return entityData.AdmApplicantId != _originalData.AdmApplicantId;
					case AdmAppWorkExperColumn.EdStudId:
					return entityData.EdStudId != _originalData.EdStudId;
					case AdmAppWorkExperColumn.PhoneNo:
					return entityData.PhoneNo != _originalData.PhoneNo;
					case AdmAppWorkExperColumn.MobNo:
					return entityData.MobNo != _originalData.MobNo;
					case AdmAppWorkExperColumn.EMail:
					return entityData.EMail != _originalData.EMail;
					case AdmAppWorkExperColumn.WebSite:
					return entityData.WebSite != _originalData.WebSite;
					case AdmAppWorkExperColumn.GsCdeUniversitiesId:
					return entityData.GsCdeUniversitiesId != _originalData.GsCdeUniversitiesId;
					case AdmAppWorkExperColumn.WorkNotes:
					return entityData.WorkNotes != _originalData.WorkNotes;
					case AdmAppWorkExperColumn.DeptDescrEn:
					return entityData.DeptDescrEn != _originalData.DeptDescrEn;
					case AdmAppWorkExperColumn.AdmAppRegHistoryId:
					return entityData.AdmAppRegHistoryId != _originalData.AdmAppRegHistoryId;
					case AdmAppWorkExperColumn.AwkafFlg:
					return entityData.AwkafFlg != _originalData.AwkafFlg;
					case AdmAppWorkExperColumn.PrivFlg:
					return entityData.PrivFlg != _originalData.PrivFlg;
					case AdmAppWorkExperColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
					case AdmAppWorkExperColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< AdmAppWorkExperColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.AdmAppWorkExperId != _originalData.AdmAppWorkExperId;
			result = result || entityData.OrgName != _originalData.OrgName;
			result = result || entityData.OrgAddress != _originalData.OrgAddress;
			result = result || entityData.GsCountryNodeId != _originalData.GsCountryNodeId;
			result = result || entityData.JobTitle != _originalData.JobTitle;
			result = result || entityData.JobDescr != _originalData.JobDescr;
			result = result || entityData.FromDate != _originalData.FromDate;
			result = result || entityData.ToDate != _originalData.ToDate;
			result = result || entityData.CurrentFlg != _originalData.CurrentFlg;
			result = result || entityData.AdmApplicantId != _originalData.AdmApplicantId;
			result = result || entityData.EdStudId != _originalData.EdStudId;
			result = result || entityData.PhoneNo != _originalData.PhoneNo;
			result = result || entityData.MobNo != _originalData.MobNo;
			result = result || entityData.EMail != _originalData.EMail;
			result = result || entityData.WebSite != _originalData.WebSite;
			result = result || entityData.GsCdeUniversitiesId != _originalData.GsCdeUniversitiesId;
			result = result || entityData.WorkNotes != _originalData.WorkNotes;
			result = result || entityData.DeptDescrEn != _originalData.DeptDescrEn;
			result = result || entityData.AdmAppRegHistoryId != _originalData.AdmAppRegHistoryId;
			result = result || entityData.AwkafFlg != _originalData.AwkafFlg;
			result = result || entityData.PrivFlg != _originalData.PrivFlg;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			result = result || entityData.LastDate != _originalData.LastDate;
			return result;
		}	
		
		///<summary>
		///  Returns a AdmAppWorkExper Entity with the original data.
		///</summary>
		public AdmAppWorkExper GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateAdmAppWorkExper(
				_originalData.AdmAppWorkExperId,
				_originalData.OrgName,
				_originalData.OrgAddress,
				_originalData.GsCountryNodeId,
				_originalData.JobTitle,
				_originalData.JobDescr,
				_originalData.FromDate,
				_originalData.ToDate,
				_originalData.CurrentFlg,
				_originalData.AdmApplicantId,
				_originalData.EdStudId,
				_originalData.PhoneNo,
				_originalData.MobNo,
				_originalData.EMail,
				_originalData.WebSite,
				_originalData.GsCdeUniversitiesId,
				_originalData.WorkNotes,
				_originalData.DeptDescrEn,
				_originalData.AdmAppRegHistoryId,
				_originalData.AwkafFlg,
				_originalData.PrivFlg,
				_originalData.SeUserId,
				_originalData.LastDate
				);
				
			return (AdmAppWorkExper)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="AdmAppWorkExperBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is AdmAppWorkExperBase)
				return ValueEquals(this, (AdmAppWorkExperBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="AdmAppWorkExperBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.AdmAppWorkExperId.GetHashCode() ^ 
					((this.OrgName == null) ? string.Empty : this.OrgName.ToString()).GetHashCode() ^ 
					((this.OrgAddress == null) ? string.Empty : this.OrgAddress.ToString()).GetHashCode() ^ 
					((this.GsCountryNodeId == null) ? string.Empty : this.GsCountryNodeId.ToString()).GetHashCode() ^ 
					((this.JobTitle == null) ? string.Empty : this.JobTitle.ToString()).GetHashCode() ^ 
					((this.JobDescr == null) ? string.Empty : this.JobDescr.ToString()).GetHashCode() ^ 
					this.FromDate.GetHashCode() ^ 
					((this.ToDate == null) ? string.Empty : this.ToDate.ToString()).GetHashCode() ^ 
					((this.CurrentFlg == null) ? string.Empty : this.CurrentFlg.ToString()).GetHashCode() ^ 
					((this.AdmApplicantId == null) ? string.Empty : this.AdmApplicantId.ToString()).GetHashCode() ^ 
					((this.EdStudId == null) ? string.Empty : this.EdStudId.ToString()).GetHashCode() ^ 
					((this.PhoneNo == null) ? string.Empty : this.PhoneNo.ToString()).GetHashCode() ^ 
					((this.MobNo == null) ? string.Empty : this.MobNo.ToString()).GetHashCode() ^ 
					((this.EMail == null) ? string.Empty : this.EMail.ToString()).GetHashCode() ^ 
					((this.WebSite == null) ? string.Empty : this.WebSite.ToString()).GetHashCode() ^ 
					((this.GsCdeUniversitiesId == null) ? string.Empty : this.GsCdeUniversitiesId.ToString()).GetHashCode() ^ 
					((this.WorkNotes == null) ? string.Empty : this.WorkNotes.ToString()).GetHashCode() ^ 
					((this.DeptDescrEn == null) ? string.Empty : this.DeptDescrEn.ToString()).GetHashCode() ^ 
					((this.AdmAppRegHistoryId == null) ? string.Empty : this.AdmAppRegHistoryId.ToString()).GetHashCode() ^ 
					((this.AwkafFlg == null) ? string.Empty : this.AwkafFlg.ToString()).GetHashCode() ^ 
					((this.PrivFlg == null) ? string.Empty : this.PrivFlg.ToString()).GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="AdmAppWorkExperBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(AdmAppWorkExperBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="AdmAppWorkExperBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="AdmAppWorkExperBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="AdmAppWorkExperBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(AdmAppWorkExperBase Object1, AdmAppWorkExperBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.AdmAppWorkExperId != Object2.AdmAppWorkExperId)
				equal = false;
			if ( Object1.OrgName != null && Object2.OrgName != null )
			{
				if (Object1.OrgName != Object2.OrgName)
					equal = false;
			}
			else if (Object1.OrgName == null ^ Object2.OrgName == null )
			{
				equal = false;
			}
			if ( Object1.OrgAddress != null && Object2.OrgAddress != null )
			{
				if (Object1.OrgAddress != Object2.OrgAddress)
					equal = false;
			}
			else if (Object1.OrgAddress == null ^ Object2.OrgAddress == null )
			{
				equal = false;
			}
			if ( Object1.GsCountryNodeId != null && Object2.GsCountryNodeId != null )
			{
				if (Object1.GsCountryNodeId != Object2.GsCountryNodeId)
					equal = false;
			}
			else if (Object1.GsCountryNodeId == null ^ Object2.GsCountryNodeId == null )
			{
				equal = false;
			}
			if ( Object1.JobTitle != null && Object2.JobTitle != null )
			{
				if (Object1.JobTitle != Object2.JobTitle)
					equal = false;
			}
			else if (Object1.JobTitle == null ^ Object2.JobTitle == null )
			{
				equal = false;
			}
			if ( Object1.JobDescr != null && Object2.JobDescr != null )
			{
				if (Object1.JobDescr != Object2.JobDescr)
					equal = false;
			}
			else if (Object1.JobDescr == null ^ Object2.JobDescr == null )
			{
				equal = false;
			}
			if (Object1.FromDate != Object2.FromDate)
				equal = false;
			if ( Object1.ToDate != null && Object2.ToDate != null )
			{
				if (Object1.ToDate != Object2.ToDate)
					equal = false;
			}
			else if (Object1.ToDate == null ^ Object2.ToDate == null )
			{
				equal = false;
			}
			if ( Object1.CurrentFlg != null && Object2.CurrentFlg != null )
			{
				if (Object1.CurrentFlg != Object2.CurrentFlg)
					equal = false;
			}
			else if (Object1.CurrentFlg == null ^ Object2.CurrentFlg == null )
			{
				equal = false;
			}
			if ( Object1.AdmApplicantId != null && Object2.AdmApplicantId != null )
			{
				if (Object1.AdmApplicantId != Object2.AdmApplicantId)
					equal = false;
			}
			else if (Object1.AdmApplicantId == null ^ Object2.AdmApplicantId == null )
			{
				equal = false;
			}
			if ( Object1.EdStudId != null && Object2.EdStudId != null )
			{
				if (Object1.EdStudId != Object2.EdStudId)
					equal = false;
			}
			else if (Object1.EdStudId == null ^ Object2.EdStudId == null )
			{
				equal = false;
			}
			if ( Object1.PhoneNo != null && Object2.PhoneNo != null )
			{
				if (Object1.PhoneNo != Object2.PhoneNo)
					equal = false;
			}
			else if (Object1.PhoneNo == null ^ Object2.PhoneNo == null )
			{
				equal = false;
			}
			if ( Object1.MobNo != null && Object2.MobNo != null )
			{
				if (Object1.MobNo != Object2.MobNo)
					equal = false;
			}
			else if (Object1.MobNo == null ^ Object2.MobNo == null )
			{
				equal = false;
			}
			if ( Object1.EMail != null && Object2.EMail != null )
			{
				if (Object1.EMail != Object2.EMail)
					equal = false;
			}
			else if (Object1.EMail == null ^ Object2.EMail == null )
			{
				equal = false;
			}
			if ( Object1.WebSite != null && Object2.WebSite != null )
			{
				if (Object1.WebSite != Object2.WebSite)
					equal = false;
			}
			else if (Object1.WebSite == null ^ Object2.WebSite == null )
			{
				equal = false;
			}
			if ( Object1.GsCdeUniversitiesId != null && Object2.GsCdeUniversitiesId != null )
			{
				if (Object1.GsCdeUniversitiesId != Object2.GsCdeUniversitiesId)
					equal = false;
			}
			else if (Object1.GsCdeUniversitiesId == null ^ Object2.GsCdeUniversitiesId == null )
			{
				equal = false;
			}
			if ( Object1.WorkNotes != null && Object2.WorkNotes != null )
			{
				if (Object1.WorkNotes != Object2.WorkNotes)
					equal = false;
			}
			else if (Object1.WorkNotes == null ^ Object2.WorkNotes == null )
			{
				equal = false;
			}
			if ( Object1.DeptDescrEn != null && Object2.DeptDescrEn != null )
			{
				if (Object1.DeptDescrEn != Object2.DeptDescrEn)
					equal = false;
			}
			else if (Object1.DeptDescrEn == null ^ Object2.DeptDescrEn == null )
			{
				equal = false;
			}
			if ( Object1.AdmAppRegHistoryId != null && Object2.AdmAppRegHistoryId != null )
			{
				if (Object1.AdmAppRegHistoryId != Object2.AdmAppRegHistoryId)
					equal = false;
			}
			else if (Object1.AdmAppRegHistoryId == null ^ Object2.AdmAppRegHistoryId == null )
			{
				equal = false;
			}
			if ( Object1.AwkafFlg != null && Object2.AwkafFlg != null )
			{
				if (Object1.AwkafFlg != Object2.AwkafFlg)
					equal = false;
			}
			else if (Object1.AwkafFlg == null ^ Object2.AwkafFlg == null )
			{
				equal = false;
			}
			if ( Object1.PrivFlg != null && Object2.PrivFlg != null )
			{
				if (Object1.PrivFlg != Object2.PrivFlg)
					equal = false;
			}
			else if (Object1.PrivFlg == null ^ Object2.PrivFlg == null )
			{
				equal = false;
			}
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((AdmAppWorkExperBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static AdmAppWorkExperComparer GetComparer()
        {
            return new AdmAppWorkExperComparer();
        }
        */

        // Comparer delegates back to AdmAppWorkExper
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(AdmAppWorkExper rhs, AdmAppWorkExperColumn which)
        {
            switch (which)
            {
            	
            	
            	case AdmAppWorkExperColumn.AdmAppWorkExperId:
            		return this.AdmAppWorkExperId.CompareTo(rhs.AdmAppWorkExperId);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.OrgName:
            		return this.OrgName.CompareTo(rhs.OrgName);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.OrgAddress:
            		return this.OrgAddress.CompareTo(rhs.OrgAddress);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.GsCountryNodeId:
            		return this.GsCountryNodeId.Value.CompareTo(rhs.GsCountryNodeId.Value);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.JobTitle:
            		return this.JobTitle.CompareTo(rhs.JobTitle);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.JobDescr:
            		return this.JobDescr.CompareTo(rhs.JobDescr);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.FromDate:
            		return this.FromDate.CompareTo(rhs.FromDate);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.ToDate:
            		return this.ToDate.Value.CompareTo(rhs.ToDate.Value);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.CurrentFlg:
            		return this.CurrentFlg.Value.CompareTo(rhs.CurrentFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.AdmApplicantId:
            		return this.AdmApplicantId.Value.CompareTo(rhs.AdmApplicantId.Value);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.EdStudId:
            		return this.EdStudId.Value.CompareTo(rhs.EdStudId.Value);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.PhoneNo:
            		return this.PhoneNo.Value.CompareTo(rhs.PhoneNo.Value);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.MobNo:
            		return this.MobNo.Value.CompareTo(rhs.MobNo.Value);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.EMail:
            		return this.EMail.CompareTo(rhs.EMail);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.WebSite:
            		return this.WebSite.CompareTo(rhs.WebSite);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.GsCdeUniversitiesId:
            		return this.GsCdeUniversitiesId.Value.CompareTo(rhs.GsCdeUniversitiesId.Value);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.WorkNotes:
            		return this.WorkNotes.CompareTo(rhs.WorkNotes);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.DeptDescrEn:
            		return this.DeptDescrEn.CompareTo(rhs.DeptDescrEn);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.AdmAppRegHistoryId:
            		return this.AdmAppRegHistoryId.Value.CompareTo(rhs.AdmAppRegHistoryId.Value);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.AwkafFlg:
            		return this.AwkafFlg.Value.CompareTo(rhs.AwkafFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.PrivFlg:
            		return this.PrivFlg.Value.CompareTo(rhs.PrivFlg.Value);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            	
            	
            	case AdmAppWorkExperColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<AdmAppWorkExperKey> Members
		
		// member variable for the EntityId property
		private AdmAppWorkExperKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual AdmAppWorkExperKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new AdmAppWorkExperKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("AdmAppWorkExper")
					.Append("|").Append( this.AdmAppWorkExperId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{24}{23}- AdmAppWorkExperId: {0}{23}- OrgName: {1}{23}- OrgAddress: {2}{23}- GsCountryNodeId: {3}{23}- JobTitle: {4}{23}- JobDescr: {5}{23}- FromDate: {6}{23}- ToDate: {7}{23}- CurrentFlg: {8}{23}- AdmApplicantId: {9}{23}- EdStudId: {10}{23}- PhoneNo: {11}{23}- MobNo: {12}{23}- EMail: {13}{23}- WebSite: {14}{23}- GsCdeUniversitiesId: {15}{23}- WorkNotes: {16}{23}- DeptDescrEn: {17}{23}- AdmAppRegHistoryId: {18}{23}- AwkafFlg: {19}{23}- PrivFlg: {20}{23}- SeUserId: {21}{23}- LastDate: {22}{23}{25}", 
				this.AdmAppWorkExperId,
				(this.OrgName == null) ? string.Empty : this.OrgName.ToString(),
				(this.OrgAddress == null) ? string.Empty : this.OrgAddress.ToString(),
				(this.GsCountryNodeId == null) ? string.Empty : this.GsCountryNodeId.ToString(),
				(this.JobTitle == null) ? string.Empty : this.JobTitle.ToString(),
				(this.JobDescr == null) ? string.Empty : this.JobDescr.ToString(),
				this.FromDate,
				(this.ToDate == null) ? string.Empty : this.ToDate.ToString(),
				(this.CurrentFlg == null) ? string.Empty : this.CurrentFlg.ToString(),
				(this.AdmApplicantId == null) ? string.Empty : this.AdmApplicantId.ToString(),
				(this.EdStudId == null) ? string.Empty : this.EdStudId.ToString(),
				(this.PhoneNo == null) ? string.Empty : this.PhoneNo.ToString(),
				(this.MobNo == null) ? string.Empty : this.MobNo.ToString(),
				(this.EMail == null) ? string.Empty : this.EMail.ToString(),
				(this.WebSite == null) ? string.Empty : this.WebSite.ToString(),
				(this.GsCdeUniversitiesId == null) ? string.Empty : this.GsCdeUniversitiesId.ToString(),
				(this.WorkNotes == null) ? string.Empty : this.WorkNotes.ToString(),
				(this.DeptDescrEn == null) ? string.Empty : this.DeptDescrEn.ToString(),
				(this.AdmAppRegHistoryId == null) ? string.Empty : this.AdmAppRegHistoryId.ToString(),
				(this.AwkafFlg == null) ? string.Empty : this.AwkafFlg.ToString(),
				(this.PrivFlg == null) ? string.Empty : this.PrivFlg.ToString(),
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ADM_APP_WORK_EXPER' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class AdmAppWorkExperEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ADM_APP_WORK_EXPER_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ADM_APP_WORK_EXPER"</remarks>
		public System.Decimal AdmAppWorkExperId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalAdmAppWorkExperId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// ORG_NAME : 
		/// </summary>
		public System.String		  OrgName = null;
		
		/// <summary>
		/// ORG_ADDRESS : 
		/// </summary>
		public System.String		  OrgAddress = null;
		
		/// <summary>
		/// GS_COUNTRY_NODE_ID : البلد- المحافظة
		/// </summary>
		public System.Decimal?		  GsCountryNodeId = null;
		
		/// <summary>
		/// JOB_TITLE : 
		/// </summary>
		public System.String		  JobTitle = null;
		
		/// <summary>
		/// JOB_DESCR : 
		/// </summary>
		public System.String		  JobDescr = null;
		
		/// <summary>
		/// FROM_DATE : 
		/// </summary>
		public System.DateTime		  FromDate = DateTime.MinValue;
		
		/// <summary>
		/// TO_DATE : 
		/// </summary>
		public System.DateTime?		  ToDate = null;
		
		/// <summary>
		/// CURRENT_FLG : 
		/// </summary>
		public System.Boolean?		  CurrentFlg = null;
		
		/// <summary>
		/// ADM_APPLICANT_ID : 
		/// </summary>
		public System.Decimal?		  AdmApplicantId = null;
		
		/// <summary>
		/// ED_STUD_ID : 
		/// </summary>
		public System.Decimal?		  EdStudId = null;
		
		/// <summary>
		/// PHONE_NO : 
		/// </summary>
		public System.Decimal?		  PhoneNo = null;
		
		/// <summary>
		/// MOB_NO : 
		/// </summary>
		public System.Decimal?		  MobNo = null;
		
		/// <summary>
		/// E_MAIL : 
		/// </summary>
		public System.String		  EMail = null;
		
		/// <summary>
		/// WEB_SITE : 
		/// </summary>
		public System.String		  WebSite = null;
		
		/// <summary>
		/// GS_CDE_UNIVERSITIES_ID : الجامعة- الكلية
		/// </summary>
		public System.Decimal?		  GsCdeUniversitiesId = null;
		
		/// <summary>
		/// WORK_NOTES : ملاحظات
		/// </summary>
		public System.String		  WorkNotes = null;
		
		/// <summary>
		/// DEPT_DESCR_EN : الكلية/ القسم
		/// </summary>
		public System.String		  DeptDescrEn = null;
		
		/// <summary>
		/// ADM_APP_REG_HISTORY_ID : 
		/// </summary>
		public System.Decimal?		  AdmAppRegHistoryId = null;
		
		/// <summary>
		/// AWKAF_FLG : CSS
		/// </summary>
		public System.Boolean?		  AwkafFlg = null;
		
		/// <summary>
		/// PRIV_FLG : KTECH حكومه- خاص
		/// </summary>
		public System.Boolean?		  PrivFlg = null;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private AdmAppRegHistory _admAppRegHistoryIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmAppRegHistory"/>.
		/// </summary>
		/// <value>The source AdmAppRegHistory for AdmAppRegHistoryId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmAppRegHistory AdmAppRegHistoryIdSource
      	{
            get { return this._admAppRegHistoryIdSource; }
            set { this._admAppRegHistoryIdSource = value; }
      	}
		private AdmApplicant _admApplicantIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmApplicant"/>.
		/// </summary>
		/// <value>The source AdmApplicant for AdmApplicantId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmApplicant AdmApplicantIdSource
      	{
            get { return this._admApplicantIdSource; }
            set { this._admApplicantIdSource = value; }
      	}
		private EdStud _edStudIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStud"/>.
		/// </summary>
		/// <value>The source EdStud for EdStudId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStud EdStudIdSource
      	{
            get { return this._edStudIdSource; }
            set { this._edStudIdSource = value; }
      	}
		private GsCdeUniversities _gsCdeUniversitiesIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeUniversities"/>.
		/// </summary>
		/// <value>The source GsCdeUniversities for GsCdeUniversitiesId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeUniversities GsCdeUniversitiesIdSource
      	{
            get { return this._gsCdeUniversitiesIdSource; }
            set { this._gsCdeUniversitiesIdSource = value; }
      	}
		private GsCountryNode _gsCountryNodeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryNodeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCountryNode GsCountryNodeIdSource
      	{
            get { return this._gsCountryNodeIdSource; }
            set { this._gsCountryNodeIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			AdmAppWorkExperEntityData _tmp = new AdmAppWorkExperEntityData();
						
			_tmp.AdmAppWorkExperId = this.AdmAppWorkExperId;
			_tmp.OriginalAdmAppWorkExperId = this.OriginalAdmAppWorkExperId;
			
			_tmp.OrgName = this.OrgName;
			_tmp.OrgAddress = this.OrgAddress;
			_tmp.GsCountryNodeId = this.GsCountryNodeId;
			_tmp.JobTitle = this.JobTitle;
			_tmp.JobDescr = this.JobDescr;
			_tmp.FromDate = this.FromDate;
			_tmp.ToDate = this.ToDate;
			_tmp.CurrentFlg = this.CurrentFlg;
			_tmp.AdmApplicantId = this.AdmApplicantId;
			_tmp.EdStudId = this.EdStudId;
			_tmp.PhoneNo = this.PhoneNo;
			_tmp.MobNo = this.MobNo;
			_tmp.EMail = this.EMail;
			_tmp.WebSite = this.WebSite;
			_tmp.GsCdeUniversitiesId = this.GsCdeUniversitiesId;
			_tmp.WorkNotes = this.WorkNotes;
			_tmp.DeptDescrEn = this.DeptDescrEn;
			_tmp.AdmAppRegHistoryId = this.AdmAppRegHistoryId;
			_tmp.AwkafFlg = this.AwkafFlg;
			_tmp.PrivFlg = this.PrivFlg;
			_tmp.SeUserId = this.SeUserId;
			_tmp.LastDate = this.LastDate;
			
			#region Source Parent Composite Entities
			if (this.AdmAppRegHistoryIdSource != null)
				_tmp.AdmAppRegHistoryIdSource = MakeCopyOf(this.AdmAppRegHistoryIdSource) as AdmAppRegHistory;
			if (this.AdmApplicantIdSource != null)
				_tmp.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource) as AdmApplicant;
			if (this.EdStudIdSource != null)
				_tmp.EdStudIdSource = MakeCopyOf(this.EdStudIdSource) as EdStud;
			if (this.GsCdeUniversitiesIdSource != null)
				_tmp.GsCdeUniversitiesIdSource = MakeCopyOf(this.GsCdeUniversitiesIdSource) as GsCdeUniversities;
			if (this.GsCountryNodeIdSource != null)
				_tmp.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource) as GsCountryNode;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			AdmAppWorkExperEntityData _tmp = new AdmAppWorkExperEntityData();
						
			_tmp.AdmAppWorkExperId = this.AdmAppWorkExperId;
			_tmp.OriginalAdmAppWorkExperId = this.OriginalAdmAppWorkExperId;
			
			_tmp.OrgName = this.OrgName;
			_tmp.OrgAddress = this.OrgAddress;
			_tmp.GsCountryNodeId = this.GsCountryNodeId;
			_tmp.JobTitle = this.JobTitle;
			_tmp.JobDescr = this.JobDescr;
			_tmp.FromDate = this.FromDate;
			_tmp.ToDate = this.ToDate;
			_tmp.CurrentFlg = this.CurrentFlg;
			_tmp.AdmApplicantId = this.AdmApplicantId;
			_tmp.EdStudId = this.EdStudId;
			_tmp.PhoneNo = this.PhoneNo;
			_tmp.MobNo = this.MobNo;
			_tmp.EMail = this.EMail;
			_tmp.WebSite = this.WebSite;
			_tmp.GsCdeUniversitiesId = this.GsCdeUniversitiesId;
			_tmp.WorkNotes = this.WorkNotes;
			_tmp.DeptDescrEn = this.DeptDescrEn;
			_tmp.AdmAppRegHistoryId = this.AdmAppRegHistoryId;
			_tmp.AwkafFlg = this.AwkafFlg;
			_tmp.PrivFlg = this.PrivFlg;
			_tmp.SeUserId = this.SeUserId;
			_tmp.LastDate = this.LastDate;
			
			#region Source Parent Composite Entities
			if (this.AdmAppRegHistoryIdSource != null && existingCopies.Contains(this.AdmAppRegHistoryIdSource))
				_tmp.AdmAppRegHistoryIdSource = existingCopies[this.AdmAppRegHistoryIdSource] as AdmAppRegHistory;
			else
				_tmp.AdmAppRegHistoryIdSource = MakeCopyOf(this.AdmAppRegHistoryIdSource, existingCopies) as AdmAppRegHistory;
			if (this.AdmApplicantIdSource != null && existingCopies.Contains(this.AdmApplicantIdSource))
				_tmp.AdmApplicantIdSource = existingCopies[this.AdmApplicantIdSource] as AdmApplicant;
			else
				_tmp.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource, existingCopies) as AdmApplicant;
			if (this.EdStudIdSource != null && existingCopies.Contains(this.EdStudIdSource))
				_tmp.EdStudIdSource = existingCopies[this.EdStudIdSource] as EdStud;
			else
				_tmp.EdStudIdSource = MakeCopyOf(this.EdStudIdSource, existingCopies) as EdStud;
			if (this.GsCdeUniversitiesIdSource != null && existingCopies.Contains(this.GsCdeUniversitiesIdSource))
				_tmp.GsCdeUniversitiesIdSource = existingCopies[this.GsCdeUniversitiesIdSource] as GsCdeUniversities;
			else
				_tmp.GsCdeUniversitiesIdSource = MakeCopyOf(this.GsCdeUniversitiesIdSource, existingCopies) as GsCdeUniversities;
			if (this.GsCountryNodeIdSource != null && existingCopies.Contains(this.GsCountryNodeIdSource))
				_tmp.GsCountryNodeIdSource = existingCopies[this.GsCountryNodeIdSource] as GsCountryNode;
			else
				_tmp.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource, existingCopies) as GsCountryNode;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmAppWorkExperColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(AdmAppWorkExperColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmAppWorkExperColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(AdmAppWorkExperColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmAppWorkExperColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(AdmAppWorkExperColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				AdmAppWorkExperEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new AdmAppWorkExperEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmAppWorkExperColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(AdmAppWorkExperColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				AdmAppWorkExperEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new AdmAppWorkExperEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region AdmAppWorkExperEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="AdmAppWorkExper"/> object.
	/// </remarks>
	public class AdmAppWorkExperEventArgs : System.EventArgs
	{
		private AdmAppWorkExperColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the AdmAppWorkExperEventArgs class.
		///</summary>
		public AdmAppWorkExperEventArgs(AdmAppWorkExperColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the AdmAppWorkExperEventArgs class.
		///</summary>
		public AdmAppWorkExperEventArgs(AdmAppWorkExperColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The AdmAppWorkExperColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="AdmAppWorkExperColumn" />
		public AdmAppWorkExperColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all AdmAppWorkExper related events.
	///</summary>
	public delegate void AdmAppWorkExperEventHandler(object sender, AdmAppWorkExperEventArgs e);
	
	#region AdmAppWorkExperComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class AdmAppWorkExperComparer : System.Collections.Generic.IComparer<AdmAppWorkExper>
	{
		AdmAppWorkExperColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:AdmAppWorkExperComparer"/> class.
        /// </summary>
		public AdmAppWorkExperComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:AdmAppWorkExperComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public AdmAppWorkExperComparer(AdmAppWorkExperColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="AdmAppWorkExper"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="AdmAppWorkExper"/> to compare.</param>
        /// <param name="b">The second <c>AdmAppWorkExper</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(AdmAppWorkExper a, AdmAppWorkExper b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(AdmAppWorkExper entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(AdmAppWorkExper a, AdmAppWorkExper b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public AdmAppWorkExperColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region AdmAppWorkExperKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="AdmAppWorkExper"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class AdmAppWorkExperKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the AdmAppWorkExperKey class.
		/// </summary>
		public AdmAppWorkExperKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the AdmAppWorkExperKey class.
		/// </summary>
		public AdmAppWorkExperKey(AdmAppWorkExperBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.AdmAppWorkExperId = entity.AdmAppWorkExperId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the AdmAppWorkExperKey class.
		/// </summary>
		public AdmAppWorkExperKey(System.Decimal _admAppWorkExperId)
		{
			#region Init Properties

			this.AdmAppWorkExperId = _admAppWorkExperId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private AdmAppWorkExperBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public AdmAppWorkExperBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the AdmAppWorkExperId property
		private System.Decimal _admAppWorkExperId;
		
		/// <summary>
		/// Gets or sets the AdmAppWorkExperId property.
		/// </summary>
		public System.Decimal AdmAppWorkExperId
		{
			get { return _admAppWorkExperId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.AdmAppWorkExperId = value;
				
				_admAppWorkExperId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				AdmAppWorkExperId = ( values["AdmAppWorkExperId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["AdmAppWorkExperId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("AdmAppWorkExperId", AdmAppWorkExperId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("AdmAppWorkExperId: {0}{1}",
								AdmAppWorkExperId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region AdmAppWorkExperColumn Enum
	
	/// <summary>
	/// Enumerate the AdmAppWorkExper columns.
	/// </summary>
	[Serializable]
	public enum AdmAppWorkExperColumn : int
	{
		/// <summary>
		/// AdmAppWorkExperId : 
		/// </summary>
		[EnumTextValue("ADM_APP_WORK_EXPER_ID")]
		[ColumnEnum("ADM_APP_WORK_EXPER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		AdmAppWorkExperId = 1,
		/// <summary>
		/// OrgName : 
		/// </summary>
		[EnumTextValue("ORG_NAME")]
		[ColumnEnum("ORG_NAME", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		OrgName = 2,
		/// <summary>
		/// OrgAddress : 
		/// </summary>
		[EnumTextValue("ORG_ADDRESS")]
		[ColumnEnum("ORG_ADDRESS", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		OrgAddress = 3,
		/// <summary>
		/// GsCountryNodeId : البلد- المحافظة
		/// </summary>
		[EnumTextValue("GS_COUNTRY_NODE_ID")]
		[ColumnEnum("GS_COUNTRY_NODE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCountryNodeId = 4,
		/// <summary>
		/// JobTitle : 
		/// </summary>
		[EnumTextValue("JOB_TITLE")]
		[ColumnEnum("JOB_TITLE", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		JobTitle = 5,
		/// <summary>
		/// JobDescr : 
		/// </summary>
		[EnumTextValue("JOB_DESCR")]
		[ColumnEnum("JOB_DESCR", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		JobDescr = 6,
		/// <summary>
		/// FromDate : 
		/// </summary>
		[EnumTextValue("FROM_DATE")]
		[ColumnEnum("FROM_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, false)]
		FromDate = 7,
		/// <summary>
		/// ToDate : 
		/// </summary>
		[EnumTextValue("TO_DATE")]
		[ColumnEnum("TO_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		ToDate = 8,
		/// <summary>
		/// CurrentFlg : 
		/// </summary>
		[EnumTextValue("CURRENT_FLG")]
		[ColumnEnum("CURRENT_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		CurrentFlg = 9,
		/// <summary>
		/// AdmApplicantId : 
		/// </summary>
		[EnumTextValue("ADM_APPLICANT_ID")]
		[ColumnEnum("ADM_APPLICANT_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmApplicantId = 10,
		/// <summary>
		/// EdStudId : 
		/// </summary>
		[EnumTextValue("ED_STUD_ID")]
		[ColumnEnum("ED_STUD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudId = 11,
		/// <summary>
		/// PhoneNo : 
		/// </summary>
		[EnumTextValue("PHONE_NO")]
		[ColumnEnum("PHONE_NO", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PhoneNo = 12,
		/// <summary>
		/// MobNo : 
		/// </summary>
		[EnumTextValue("MOB_NO")]
		[ColumnEnum("MOB_NO", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		MobNo = 13,
		/// <summary>
		/// EMail : 
		/// </summary>
		[EnumTextValue("E_MAIL")]
		[ColumnEnum("E_MAIL", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		EMail = 14,
		/// <summary>
		/// WebSite : 
		/// </summary>
		[EnumTextValue("WEB_SITE")]
		[ColumnEnum("WEB_SITE", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		WebSite = 15,
		/// <summary>
		/// GsCdeUniversitiesId : الجامعة- الكلية
		/// </summary>
		[EnumTextValue("GS_CDE_UNIVERSITIES_ID")]
		[ColumnEnum("GS_CDE_UNIVERSITIES_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCdeUniversitiesId = 16,
		/// <summary>
		/// WorkNotes : ملاحظات
		/// </summary>
		[EnumTextValue("WORK_NOTES")]
		[ColumnEnum("WORK_NOTES", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		WorkNotes = 17,
		/// <summary>
		/// DeptDescrEn : الكلية/ القسم
		/// </summary>
		[EnumTextValue("DEPT_DESCR_EN")]
		[ColumnEnum("DEPT_DESCR_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		DeptDescrEn = 18,
		/// <summary>
		/// AdmAppRegHistoryId : 
		/// </summary>
		[EnumTextValue("ADM_APP_REG_HISTORY_ID")]
		[ColumnEnum("ADM_APP_REG_HISTORY_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmAppRegHistoryId = 19,
		/// <summary>
		/// AwkafFlg : CSS
		/// </summary>
		[EnumTextValue("AWKAF_FLG")]
		[ColumnEnum("AWKAF_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		AwkafFlg = 20,
		/// <summary>
		/// PrivFlg : KTECH حكومه- خاص
		/// </summary>
		[EnumTextValue("PRIV_FLG")]
		[ColumnEnum("PRIV_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		PrivFlg = 21,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 22,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 23
	}//End enum

	#endregion AdmAppWorkExperColumn Enum

} // end namespace
