
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file AdmApplicant.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ADM_APPLICANT' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class AdmApplicantBase : EntityBase, IAdmApplicant, IEntityId<AdmApplicantKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private AdmApplicantEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private AdmApplicantEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private AdmApplicantEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<AdmApplicant> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AdmApplicantEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event AdmApplicantEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="AdmApplicantBase"/> instance.
		///</summary>
		public AdmApplicantBase()
		{
			this.entityData = new AdmApplicantEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="AdmApplicantBase"/> instance.
		///</summary>
		///<param name="_admApplicantId"></param>
		///<param name="_admAppCode"></param>
		///<param name="_username"></param>
		///<param name="_passwordSalt"></param>
		///<param name="_passwordHash"></param>
		///<param name="_securityQs"></param>
		///<param name="_securityQsAnsSalt"></param>
		///<param name="_securityQsAnsHash"></param>
		///<param name="_activationCode"></param>
		///<param name="_activationFlg"></param>
		///<param name="_regDate"></param>
		///<param name="_fnameAr"></param>
		///<param name="_fnameEn"></param>
		///<param name="_mnameAr"></param>
		///<param name="_mnameEn"></param>
		///<param name="_lnameAr"></param>
		///<param name="_lnameEn"></param>
		///<param name="_familyAr"></param>
		///<param name="_familyEn"></param>
		///<param name="_gsCodeReligionId"></param>
		///<param name="_cpr"></param>
		///<param name="_passporNo"></param>
		///<param name="_passporExpireDate"></param>
		///<param name="_birthdate"></param>
		///<param name="_photoPath"></param>
		///<param name="_gsCdeMaritalStatusId"></param>
		///<param name="_gsCodeGenderId"></param>
		///<param name="_workFlg"></param>
		///<param name="_gsCountryNodeId">الجنسية</param>
		///<param name="_fullNameAr"></param>
		///<param name="_fullNameEn"></param>
		///<param name="_residentId"></param>
		///<param name="_residentExpireDate"></param>
		///<param name="_gsBirthCountryNodeId">مكان الميلاد</param>
		///<param name="_edStudId"></param>
		///<param name="_loyaltyFlg"></param>
		///<param name="_gsCodeLanguageId">لغة التخصص</param>
		///<param name="_passporIssueDate"></param>
		///<param name="_specialNeedFlg"></param>
		///<param name="_identIssueDate"></param>
		///<param name="_identExpireDate"></param>
		///<param name="_identIssuePlc">مكان اصدار</param>
		///<param name="_visaNumber">رقم التأشيرة</param>
		///<param name="_visaIssueDate"></param>
		///<param name="_visaExpireDate"></param>
		///<param name="_lastDate"></param>
		///<param name="_seUserId"></param>
		///<param name="_edCdeSocialAffairId">نوع الشؤن الاجتماعية CSS</param>
		///<param name="_pucFlg">كفيل</param>
		///<param name="_noChild">PG Ejust</param>
		///<param name="_highQualFlg">Deraya UG طالب حاصل على بكالريوس</param>
		public AdmApplicantBase(System.Decimal _admApplicantId, System.String _admAppCode, 
			System.String _username, System.String _passwordSalt, System.String _passwordHash, 
			System.String _securityQs, System.String _securityQsAnsSalt, System.String _securityQsAnsHash, 
			System.String _activationCode, System.Decimal? _activationFlg, System.DateTime? _regDate, 
			System.String _fnameAr, System.String _fnameEn, System.String _mnameAr, System.String _mnameEn, 
			System.String _lnameAr, System.String _lnameEn, System.String _familyAr, System.String _familyEn, 
			System.Decimal? _gsCodeReligionId, System.String _cpr, System.String _passporNo, System.DateTime? _passporExpireDate, 
			System.DateTime? _birthdate, System.String _photoPath, System.Decimal? _gsCdeMaritalStatusId, 
			System.Decimal? _gsCodeGenderId, System.Decimal? _workFlg, System.Decimal? _gsCountryNodeId, 
			System.String _fullNameAr, System.String _fullNameEn, System.String _residentId, System.DateTime? _residentExpireDate, 
			System.Decimal? _gsBirthCountryNodeId, System.Decimal? _edStudId, System.Decimal? _loyaltyFlg, 
			System.Decimal? _gsCodeLanguageId, System.DateTime? _passporIssueDate, System.Boolean? _specialNeedFlg, 
			System.DateTime? _identIssueDate, System.DateTime? _identExpireDate, System.String _identIssuePlc, 
			System.String _visaNumber, System.DateTime? _visaIssueDate, System.DateTime? _visaExpireDate, 
			System.DateTime? _lastDate, System.Decimal? _seUserId, System.Int32? _edCdeSocialAffairId, 
			System.Boolean? _pucFlg, System.Int32? _noChild, System.Boolean? _highQualFlg)
		{
			this.entityData = new AdmApplicantEntityData();
			this.backupData = null;

			this.AdmApplicantId = _admApplicantId;
			this.AdmAppCode = _admAppCode;
			this.Username = _username;
			this.PasswordSalt = _passwordSalt;
			this.PasswordHash = _passwordHash;
			this.SecurityQs = _securityQs;
			this.SecurityQsAnsSalt = _securityQsAnsSalt;
			this.SecurityQsAnsHash = _securityQsAnsHash;
			this.ActivationCode = _activationCode;
			this.ActivationFlg = _activationFlg;
			this.RegDate = _regDate;
			this.FnameAr = _fnameAr;
			this.FnameEn = _fnameEn;
			this.MnameAr = _mnameAr;
			this.MnameEn = _mnameEn;
			this.LnameAr = _lnameAr;
			this.LnameEn = _lnameEn;
			this.FamilyAr = _familyAr;
			this.FamilyEn = _familyEn;
			this.GsCodeReligionId = _gsCodeReligionId;
			this.Cpr = _cpr;
			this.PassporNo = _passporNo;
			this.PassporExpireDate = _passporExpireDate;
			this.Birthdate = _birthdate;
			this.PhotoPath = _photoPath;
			this.GsCdeMaritalStatusId = _gsCdeMaritalStatusId;
			this.GsCodeGenderId = _gsCodeGenderId;
			this.WorkFlg = _workFlg;
			this.GsCountryNodeId = _gsCountryNodeId;
			this.FullNameAr = _fullNameAr;
			this.FullNameEn = _fullNameEn;
			this.ResidentId = _residentId;
			this.ResidentExpireDate = _residentExpireDate;
			this.GsBirthCountryNodeId = _gsBirthCountryNodeId;
			this.EdStudId = _edStudId;
			this.LoyaltyFlg = _loyaltyFlg;
			this.GsCodeLanguageId = _gsCodeLanguageId;
			this.PassporIssueDate = _passporIssueDate;
			this.SpecialNeedFlg = _specialNeedFlg;
			this.IdentIssueDate = _identIssueDate;
			this.IdentExpireDate = _identExpireDate;
			this.IdentIssuePlc = _identIssuePlc;
			this.VisaNumber = _visaNumber;
			this.VisaIssueDate = _visaIssueDate;
			this.VisaExpireDate = _visaExpireDate;
			this.LastDate = _lastDate;
			this.SeUserId = _seUserId;
			this.EdCdeSocialAffairId = _edCdeSocialAffairId;
			this.PucFlg = _pucFlg;
			this.NoChild = _noChild;
			this.HighQualFlg = _highQualFlg;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="AdmApplicant"/> instance.
		///</summary>
		///<param name="_admApplicantId"></param>
		///<param name="_admAppCode"></param>
		///<param name="_username"></param>
		///<param name="_passwordSalt"></param>
		///<param name="_passwordHash"></param>
		///<param name="_securityQs"></param>
		///<param name="_securityQsAnsSalt"></param>
		///<param name="_securityQsAnsHash"></param>
		///<param name="_activationCode"></param>
		///<param name="_activationFlg"></param>
		///<param name="_regDate"></param>
		///<param name="_fnameAr"></param>
		///<param name="_fnameEn"></param>
		///<param name="_mnameAr"></param>
		///<param name="_mnameEn"></param>
		///<param name="_lnameAr"></param>
		///<param name="_lnameEn"></param>
		///<param name="_familyAr"></param>
		///<param name="_familyEn"></param>
		///<param name="_gsCodeReligionId"></param>
		///<param name="_cpr"></param>
		///<param name="_passporNo"></param>
		///<param name="_passporExpireDate"></param>
		///<param name="_birthdate"></param>
		///<param name="_photoPath"></param>
		///<param name="_gsCdeMaritalStatusId"></param>
		///<param name="_gsCodeGenderId"></param>
		///<param name="_workFlg"></param>
		///<param name="_gsCountryNodeId">الجنسية</param>
		///<param name="_fullNameAr"></param>
		///<param name="_fullNameEn"></param>
		///<param name="_residentId"></param>
		///<param name="_residentExpireDate"></param>
		///<param name="_gsBirthCountryNodeId">مكان الميلاد</param>
		///<param name="_edStudId"></param>
		///<param name="_loyaltyFlg"></param>
		///<param name="_gsCodeLanguageId">لغة التخصص</param>
		///<param name="_passporIssueDate"></param>
		///<param name="_specialNeedFlg"></param>
		///<param name="_identIssueDate"></param>
		///<param name="_identExpireDate"></param>
		///<param name="_identIssuePlc">مكان اصدار</param>
		///<param name="_visaNumber">رقم التأشيرة</param>
		///<param name="_visaIssueDate"></param>
		///<param name="_visaExpireDate"></param>
		///<param name="_lastDate"></param>
		///<param name="_seUserId"></param>
		///<param name="_edCdeSocialAffairId">نوع الشؤن الاجتماعية CSS</param>
		///<param name="_pucFlg">كفيل</param>
		///<param name="_noChild">PG Ejust</param>
		///<param name="_highQualFlg">Deraya UG طالب حاصل على بكالريوس</param>
		public static AdmApplicant CreateAdmApplicant(System.Decimal _admApplicantId, System.String _admAppCode, 
			System.String _username, System.String _passwordSalt, System.String _passwordHash, 
			System.String _securityQs, System.String _securityQsAnsSalt, System.String _securityQsAnsHash, 
			System.String _activationCode, System.Decimal? _activationFlg, System.DateTime? _regDate, 
			System.String _fnameAr, System.String _fnameEn, System.String _mnameAr, System.String _mnameEn, 
			System.String _lnameAr, System.String _lnameEn, System.String _familyAr, System.String _familyEn, 
			System.Decimal? _gsCodeReligionId, System.String _cpr, System.String _passporNo, System.DateTime? _passporExpireDate, 
			System.DateTime? _birthdate, System.String _photoPath, System.Decimal? _gsCdeMaritalStatusId, 
			System.Decimal? _gsCodeGenderId, System.Decimal? _workFlg, System.Decimal? _gsCountryNodeId, 
			System.String _fullNameAr, System.String _fullNameEn, System.String _residentId, System.DateTime? _residentExpireDate, 
			System.Decimal? _gsBirthCountryNodeId, System.Decimal? _edStudId, System.Decimal? _loyaltyFlg, 
			System.Decimal? _gsCodeLanguageId, System.DateTime? _passporIssueDate, System.Boolean? _specialNeedFlg, 
			System.DateTime? _identIssueDate, System.DateTime? _identExpireDate, System.String _identIssuePlc, 
			System.String _visaNumber, System.DateTime? _visaIssueDate, System.DateTime? _visaExpireDate, 
			System.DateTime? _lastDate, System.Decimal? _seUserId, System.Int32? _edCdeSocialAffairId, 
			System.Boolean? _pucFlg, System.Int32? _noChild, System.Boolean? _highQualFlg)
		{
			AdmApplicant newAdmApplicant = new AdmApplicant();
			newAdmApplicant.AdmApplicantId = _admApplicantId;
			newAdmApplicant.AdmAppCode = _admAppCode;
			newAdmApplicant.Username = _username;
			newAdmApplicant.PasswordSalt = _passwordSalt;
			newAdmApplicant.PasswordHash = _passwordHash;
			newAdmApplicant.SecurityQs = _securityQs;
			newAdmApplicant.SecurityQsAnsSalt = _securityQsAnsSalt;
			newAdmApplicant.SecurityQsAnsHash = _securityQsAnsHash;
			newAdmApplicant.ActivationCode = _activationCode;
			newAdmApplicant.ActivationFlg = _activationFlg;
			newAdmApplicant.RegDate = _regDate;
			newAdmApplicant.FnameAr = _fnameAr;
			newAdmApplicant.FnameEn = _fnameEn;
			newAdmApplicant.MnameAr = _mnameAr;
			newAdmApplicant.MnameEn = _mnameEn;
			newAdmApplicant.LnameAr = _lnameAr;
			newAdmApplicant.LnameEn = _lnameEn;
			newAdmApplicant.FamilyAr = _familyAr;
			newAdmApplicant.FamilyEn = _familyEn;
			newAdmApplicant.GsCodeReligionId = _gsCodeReligionId;
			newAdmApplicant.Cpr = _cpr;
			newAdmApplicant.PassporNo = _passporNo;
			newAdmApplicant.PassporExpireDate = _passporExpireDate;
			newAdmApplicant.Birthdate = _birthdate;
			newAdmApplicant.PhotoPath = _photoPath;
			newAdmApplicant.GsCdeMaritalStatusId = _gsCdeMaritalStatusId;
			newAdmApplicant.GsCodeGenderId = _gsCodeGenderId;
			newAdmApplicant.WorkFlg = _workFlg;
			newAdmApplicant.GsCountryNodeId = _gsCountryNodeId;
			newAdmApplicant.FullNameAr = _fullNameAr;
			newAdmApplicant.FullNameEn = _fullNameEn;
			newAdmApplicant.ResidentId = _residentId;
			newAdmApplicant.ResidentExpireDate = _residentExpireDate;
			newAdmApplicant.GsBirthCountryNodeId = _gsBirthCountryNodeId;
			newAdmApplicant.EdStudId = _edStudId;
			newAdmApplicant.LoyaltyFlg = _loyaltyFlg;
			newAdmApplicant.GsCodeLanguageId = _gsCodeLanguageId;
			newAdmApplicant.PassporIssueDate = _passporIssueDate;
			newAdmApplicant.SpecialNeedFlg = _specialNeedFlg;
			newAdmApplicant.IdentIssueDate = _identIssueDate;
			newAdmApplicant.IdentExpireDate = _identExpireDate;
			newAdmApplicant.IdentIssuePlc = _identIssuePlc;
			newAdmApplicant.VisaNumber = _visaNumber;
			newAdmApplicant.VisaIssueDate = _visaIssueDate;
			newAdmApplicant.VisaExpireDate = _visaExpireDate;
			newAdmApplicant.LastDate = _lastDate;
			newAdmApplicant.SeUserId = _seUserId;
			newAdmApplicant.EdCdeSocialAffairId = _edCdeSocialAffairId;
			newAdmApplicant.PucFlg = _pucFlg;
			newAdmApplicant.NoChild = _noChild;
			newAdmApplicant.HighQualFlg = _highQualFlg;
			return newAdmApplicant;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the AdmApplicantId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal AdmApplicantId
		{
			get
			{
				return this.entityData.AdmApplicantId; 
			}
			
			set
			{
				if (this.entityData.AdmApplicantId == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.AdmApplicantId, this.entityData.AdmApplicantId);
				this.entityData.AdmApplicantId = value;
				this.EntityId.AdmApplicantId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.AdmApplicantId, this.entityData.AdmApplicantId);
				OnPropertyChanged("AdmApplicantId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ADM_APPLICANT_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the ADM_APPLICANT_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalAdmApplicantId
		{
			get { return this.entityData.OriginalAdmApplicantId; }
			set { this.entityData.OriginalAdmApplicantId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the AdmAppCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String AdmAppCode
		{
			get
			{
				return this.entityData.AdmAppCode; 
			}
			
			set
			{
				if (this.entityData.AdmAppCode == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.AdmAppCode, this.entityData.AdmAppCode);
				this.entityData.AdmAppCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.AdmAppCode, this.entityData.AdmAppCode);
				OnPropertyChanged("AdmAppCode");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Username property. 
		///		
		/// </summary>
		/// <value>This type is varchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Username
		{
			get
			{
				return this.entityData.Username; 
			}
			
			set
			{
				if (this.entityData.Username == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.Username, this.entityData.Username);
				this.entityData.Username = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.Username, this.entityData.Username);
				OnPropertyChanged("Username");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PasswordSalt property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String PasswordSalt
		{
			get
			{
				return this.entityData.PasswordSalt; 
			}
			
			set
			{
				if (this.entityData.PasswordSalt == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.PasswordSalt, this.entityData.PasswordSalt);
				this.entityData.PasswordSalt = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.PasswordSalt, this.entityData.PasswordSalt);
				OnPropertyChanged("PasswordSalt");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PasswordHash property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String PasswordHash
		{
			get
			{
				return this.entityData.PasswordHash; 
			}
			
			set
			{
				if (this.entityData.PasswordHash == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.PasswordHash, this.entityData.PasswordHash);
				this.entityData.PasswordHash = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.PasswordHash, this.entityData.PasswordHash);
				OnPropertyChanged("PasswordHash");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SecurityQs property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 350)]
		public virtual System.String SecurityQs
		{
			get
			{
				return this.entityData.SecurityQs; 
			}
			
			set
			{
				if (this.entityData.SecurityQs == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.SecurityQs, this.entityData.SecurityQs);
				this.entityData.SecurityQs = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.SecurityQs, this.entityData.SecurityQs);
				OnPropertyChanged("SecurityQs");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SecurityQsAnsSalt property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String SecurityQsAnsSalt
		{
			get
			{
				return this.entityData.SecurityQsAnsSalt; 
			}
			
			set
			{
				if (this.entityData.SecurityQsAnsSalt == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.SecurityQsAnsSalt, this.entityData.SecurityQsAnsSalt);
				this.entityData.SecurityQsAnsSalt = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.SecurityQsAnsSalt, this.entityData.SecurityQsAnsSalt);
				OnPropertyChanged("SecurityQsAnsSalt");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SecurityQsAnsHash property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String SecurityQsAnsHash
		{
			get
			{
				return this.entityData.SecurityQsAnsHash; 
			}
			
			set
			{
				if (this.entityData.SecurityQsAnsHash == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.SecurityQsAnsHash, this.entityData.SecurityQsAnsHash);
				this.entityData.SecurityQsAnsHash = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.SecurityQsAnsHash, this.entityData.SecurityQsAnsHash);
				OnPropertyChanged("SecurityQsAnsHash");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ActivationCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1000)]
		public virtual System.String ActivationCode
		{
			get
			{
				return this.entityData.ActivationCode; 
			}
			
			set
			{
				if (this.entityData.ActivationCode == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.ActivationCode, this.entityData.ActivationCode);
				this.entityData.ActivationCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.ActivationCode, this.entityData.ActivationCode);
				OnPropertyChanged("ActivationCode");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ActivationFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsActivationFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ActivationFlg
		{
			get
			{
				return this.entityData.ActivationFlg; 
			}
			
			set
			{
				if (this.entityData.ActivationFlg == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.ActivationFlg, this.entityData.ActivationFlg);
				this.entityData.ActivationFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.ActivationFlg, this.entityData.ActivationFlg);
				OnPropertyChanged("ActivationFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RegDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsRegDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? RegDate
		{
			get
			{
				return this.entityData.RegDate; 
			}
			
			set
			{
				if (this.entityData.RegDate == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.RegDate, this.entityData.RegDate);
				this.entityData.RegDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.RegDate, this.entityData.RegDate);
				OnPropertyChanged("RegDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FnameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String FnameAr
		{
			get
			{
				return this.entityData.FnameAr; 
			}
			
			set
			{
				if (this.entityData.FnameAr == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.FnameAr, this.entityData.FnameAr);
				this.entityData.FnameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.FnameAr, this.entityData.FnameAr);
				OnPropertyChanged("FnameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FnameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String FnameEn
		{
			get
			{
				return this.entityData.FnameEn; 
			}
			
			set
			{
				if (this.entityData.FnameEn == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.FnameEn, this.entityData.FnameEn);
				this.entityData.FnameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.FnameEn, this.entityData.FnameEn);
				OnPropertyChanged("FnameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MnameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String MnameAr
		{
			get
			{
				return this.entityData.MnameAr; 
			}
			
			set
			{
				if (this.entityData.MnameAr == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.MnameAr, this.entityData.MnameAr);
				this.entityData.MnameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.MnameAr, this.entityData.MnameAr);
				OnPropertyChanged("MnameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MnameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String MnameEn
		{
			get
			{
				return this.entityData.MnameEn; 
			}
			
			set
			{
				if (this.entityData.MnameEn == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.MnameEn, this.entityData.MnameEn);
				this.entityData.MnameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.MnameEn, this.entityData.MnameEn);
				OnPropertyChanged("MnameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LnameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String LnameAr
		{
			get
			{
				return this.entityData.LnameAr; 
			}
			
			set
			{
				if (this.entityData.LnameAr == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.LnameAr, this.entityData.LnameAr);
				this.entityData.LnameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.LnameAr, this.entityData.LnameAr);
				OnPropertyChanged("LnameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LnameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String LnameEn
		{
			get
			{
				return this.entityData.LnameEn; 
			}
			
			set
			{
				if (this.entityData.LnameEn == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.LnameEn, this.entityData.LnameEn);
				this.entityData.LnameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.LnameEn, this.entityData.LnameEn);
				OnPropertyChanged("LnameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FamilyAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String FamilyAr
		{
			get
			{
				return this.entityData.FamilyAr; 
			}
			
			set
			{
				if (this.entityData.FamilyAr == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.FamilyAr, this.entityData.FamilyAr);
				this.entityData.FamilyAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.FamilyAr, this.entityData.FamilyAr);
				OnPropertyChanged("FamilyAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FamilyEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String FamilyEn
		{
			get
			{
				return this.entityData.FamilyEn; 
			}
			
			set
			{
				if (this.entityData.FamilyEn == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.FamilyEn, this.entityData.FamilyEn);
				this.entityData.FamilyEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.FamilyEn, this.entityData.FamilyEn);
				OnPropertyChanged("FamilyEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeReligionId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeReligionIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeReligionId
		{
			get
			{
				return this.entityData.GsCodeReligionId; 
			}
			
			set
			{
				if (this.entityData.GsCodeReligionId == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.GsCodeReligionId, this.entityData.GsCodeReligionId);
				this.entityData.GsCodeReligionId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.GsCodeReligionId, this.entityData.GsCodeReligionId);
				OnPropertyChanged("GsCodeReligionId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Cpr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String Cpr
		{
			get
			{
				return this.entityData.Cpr; 
			}
			
			set
			{
				if (this.entityData.Cpr == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.Cpr, this.entityData.Cpr);
				this.entityData.Cpr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.Cpr, this.entityData.Cpr);
				OnPropertyChanged("Cpr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PassporNo property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String PassporNo
		{
			get
			{
				return this.entityData.PassporNo; 
			}
			
			set
			{
				if (this.entityData.PassporNo == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.PassporNo, this.entityData.PassporNo);
				this.entityData.PassporNo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.PassporNo, this.entityData.PassporNo);
				OnPropertyChanged("PassporNo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PassporExpireDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsPassporExpireDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? PassporExpireDate
		{
			get
			{
				return this.entityData.PassporExpireDate; 
			}
			
			set
			{
				if (this.entityData.PassporExpireDate == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.PassporExpireDate, this.entityData.PassporExpireDate);
				this.entityData.PassporExpireDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.PassporExpireDate, this.entityData.PassporExpireDate);
				OnPropertyChanged("PassporExpireDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Birthdate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsBirthdateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? Birthdate
		{
			get
			{
				return this.entityData.Birthdate; 
			}
			
			set
			{
				if (this.entityData.Birthdate == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.Birthdate, this.entityData.Birthdate);
				this.entityData.Birthdate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.Birthdate, this.entityData.Birthdate);
				OnPropertyChanged("Birthdate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PhotoPath property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String PhotoPath
		{
			get
			{
				return this.entityData.PhotoPath; 
			}
			
			set
			{
				if (this.entityData.PhotoPath == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.PhotoPath, this.entityData.PhotoPath);
				this.entityData.PhotoPath = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.PhotoPath, this.entityData.PhotoPath);
				OnPropertyChanged("PhotoPath");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCdeMaritalStatusId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCdeMaritalStatusIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCdeMaritalStatusId
		{
			get
			{
				return this.entityData.GsCdeMaritalStatusId; 
			}
			
			set
			{
				if (this.entityData.GsCdeMaritalStatusId == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.GsCdeMaritalStatusId, this.entityData.GsCdeMaritalStatusId);
				this.entityData.GsCdeMaritalStatusId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.GsCdeMaritalStatusId, this.entityData.GsCdeMaritalStatusId);
				OnPropertyChanged("GsCdeMaritalStatusId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeGenderId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeGenderIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeGenderId
		{
			get
			{
				return this.entityData.GsCodeGenderId; 
			}
			
			set
			{
				if (this.entityData.GsCodeGenderId == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.GsCodeGenderId, this.entityData.GsCodeGenderId);
				this.entityData.GsCodeGenderId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.GsCodeGenderId, this.entityData.GsCodeGenderId);
				OnPropertyChanged("GsCodeGenderId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WorkFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsWorkFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? WorkFlg
		{
			get
			{
				return this.entityData.WorkFlg; 
			}
			
			set
			{
				if (this.entityData.WorkFlg == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.WorkFlg, this.entityData.WorkFlg);
				this.entityData.WorkFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.WorkFlg, this.entityData.WorkFlg);
				OnPropertyChanged("WorkFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCountryNodeId property. 
		///		الجنسية
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCountryNodeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"الجنسية"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCountryNodeId
		{
			get
			{
				return this.entityData.GsCountryNodeId; 
			}
			
			set
			{
				if (this.entityData.GsCountryNodeId == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.GsCountryNodeId, this.entityData.GsCountryNodeId);
				this.entityData.GsCountryNodeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.GsCountryNodeId, this.entityData.GsCountryNodeId);
				OnPropertyChanged("GsCountryNodeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FullNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String FullNameAr
		{
			get
			{
				return this.entityData.FullNameAr; 
			}
			
			set
			{
				if (this.entityData.FullNameAr == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.FullNameAr, this.entityData.FullNameAr);
				this.entityData.FullNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.FullNameAr, this.entityData.FullNameAr);
				OnPropertyChanged("FullNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FullNameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String FullNameEn
		{
			get
			{
				return this.entityData.FullNameEn; 
			}
			
			set
			{
				if (this.entityData.FullNameEn == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.FullNameEn, this.entityData.FullNameEn);
				this.entityData.FullNameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.FullNameEn, this.entityData.FullNameEn);
				OnPropertyChanged("FullNameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ResidentId property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String ResidentId
		{
			get
			{
				return this.entityData.ResidentId; 
			}
			
			set
			{
				if (this.entityData.ResidentId == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.ResidentId, this.entityData.ResidentId);
				this.entityData.ResidentId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.ResidentId, this.entityData.ResidentId);
				OnPropertyChanged("ResidentId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ResidentExpireDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsResidentExpireDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? ResidentExpireDate
		{
			get
			{
				return this.entityData.ResidentExpireDate; 
			}
			
			set
			{
				if (this.entityData.ResidentExpireDate == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.ResidentExpireDate, this.entityData.ResidentExpireDate);
				this.entityData.ResidentExpireDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.ResidentExpireDate, this.entityData.ResidentExpireDate);
				OnPropertyChanged("ResidentExpireDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsBirthCountryNodeId property. 
		///		مكان الميلاد
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsBirthCountryNodeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"مكان الميلاد"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsBirthCountryNodeId
		{
			get
			{
				return this.entityData.GsBirthCountryNodeId; 
			}
			
			set
			{
				if (this.entityData.GsBirthCountryNodeId == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.GsBirthCountryNodeId, this.entityData.GsBirthCountryNodeId);
				this.entityData.GsBirthCountryNodeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.GsBirthCountryNodeId, this.entityData.GsBirthCountryNodeId);
				OnPropertyChanged("GsBirthCountryNodeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudId
		{
			get
			{
				return this.entityData.EdStudId; 
			}
			
			set
			{
				if (this.entityData.EdStudId == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.EdStudId, this.entityData.EdStudId);
				this.entityData.EdStudId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.EdStudId, this.entityData.EdStudId);
				OnPropertyChanged("EdStudId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LoyaltyFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsLoyaltyFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? LoyaltyFlg
		{
			get
			{
				return this.entityData.LoyaltyFlg; 
			}
			
			set
			{
				if (this.entityData.LoyaltyFlg == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.LoyaltyFlg, this.entityData.LoyaltyFlg);
				this.entityData.LoyaltyFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.LoyaltyFlg, this.entityData.LoyaltyFlg);
				OnPropertyChanged("LoyaltyFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeLanguageId property. 
		///		لغة التخصص
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeLanguageIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"لغة التخصص"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeLanguageId
		{
			get
			{
				return this.entityData.GsCodeLanguageId; 
			}
			
			set
			{
				if (this.entityData.GsCodeLanguageId == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.GsCodeLanguageId, this.entityData.GsCodeLanguageId);
				this.entityData.GsCodeLanguageId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.GsCodeLanguageId, this.entityData.GsCodeLanguageId);
				OnPropertyChanged("GsCodeLanguageId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PassporIssueDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsPassporIssueDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? PassporIssueDate
		{
			get
			{
				return this.entityData.PassporIssueDate; 
			}
			
			set
			{
				if (this.entityData.PassporIssueDate == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.PassporIssueDate, this.entityData.PassporIssueDate);
				this.entityData.PassporIssueDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.PassporIssueDate, this.entityData.PassporIssueDate);
				OnPropertyChanged("PassporIssueDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SpecialNeedFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsSpecialNeedFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? SpecialNeedFlg
		{
			get
			{
				return this.entityData.SpecialNeedFlg; 
			}
			
			set
			{
				if (this.entityData.SpecialNeedFlg == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.SpecialNeedFlg, this.entityData.SpecialNeedFlg);
				this.entityData.SpecialNeedFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.SpecialNeedFlg, this.entityData.SpecialNeedFlg);
				OnPropertyChanged("SpecialNeedFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdentIssueDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsIdentIssueDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? IdentIssueDate
		{
			get
			{
				return this.entityData.IdentIssueDate; 
			}
			
			set
			{
				if (this.entityData.IdentIssueDate == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.IdentIssueDate, this.entityData.IdentIssueDate);
				this.entityData.IdentIssueDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.IdentIssueDate, this.entityData.IdentIssueDate);
				OnPropertyChanged("IdentIssueDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdentExpireDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsIdentExpireDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? IdentExpireDate
		{
			get
			{
				return this.entityData.IdentExpireDate; 
			}
			
			set
			{
				if (this.entityData.IdentExpireDate == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.IdentExpireDate, this.entityData.IdentExpireDate);
				this.entityData.IdentExpireDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.IdentExpireDate, this.entityData.IdentExpireDate);
				OnPropertyChanged("IdentExpireDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IdentIssuePlc property. 
		///		مكان اصدار
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"مكان اصدار"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String IdentIssuePlc
		{
			get
			{
				return this.entityData.IdentIssuePlc; 
			}
			
			set
			{
				if (this.entityData.IdentIssuePlc == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.IdentIssuePlc, this.entityData.IdentIssuePlc);
				this.entityData.IdentIssuePlc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.IdentIssuePlc, this.entityData.IdentIssuePlc);
				OnPropertyChanged("IdentIssuePlc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the VisaNumber property. 
		///		رقم التأشيرة
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"رقم التأشيرة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String VisaNumber
		{
			get
			{
				return this.entityData.VisaNumber; 
			}
			
			set
			{
				if (this.entityData.VisaNumber == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.VisaNumber, this.entityData.VisaNumber);
				this.entityData.VisaNumber = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.VisaNumber, this.entityData.VisaNumber);
				OnPropertyChanged("VisaNumber");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the VisaIssueDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsVisaIssueDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? VisaIssueDate
		{
			get
			{
				return this.entityData.VisaIssueDate; 
			}
			
			set
			{
				if (this.entityData.VisaIssueDate == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.VisaIssueDate, this.entityData.VisaIssueDate);
				this.entityData.VisaIssueDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.VisaIssueDate, this.entityData.VisaIssueDate);
				OnPropertyChanged("VisaIssueDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the VisaExpireDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsVisaExpireDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? VisaExpireDate
		{
			get
			{
				return this.entityData.VisaExpireDate; 
			}
			
			set
			{
				if (this.entityData.VisaExpireDate == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.VisaExpireDate, this.entityData.VisaExpireDate);
				this.entityData.VisaExpireDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.VisaExpireDate, this.entityData.VisaExpireDate);
				OnPropertyChanged("VisaExpireDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCdeSocialAffairId property. 
		///		نوع الشؤن الاجتماعية CSS
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsEdCdeSocialAffairIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"نوع الشؤن الاجتماعية CSS"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? EdCdeSocialAffairId
		{
			get
			{
				return this.entityData.EdCdeSocialAffairId; 
			}
			
			set
			{
				if (this.entityData.EdCdeSocialAffairId == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.EdCdeSocialAffairId, this.entityData.EdCdeSocialAffairId);
				this.entityData.EdCdeSocialAffairId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.EdCdeSocialAffairId, this.entityData.EdCdeSocialAffairId);
				OnPropertyChanged("EdCdeSocialAffairId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PucFlg property. 
		///		كفيل
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsPucFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"كفيل"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? PucFlg
		{
			get
			{
				return this.entityData.PucFlg; 
			}
			
			set
			{
				if (this.entityData.PucFlg == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.PucFlg, this.entityData.PucFlg);
				this.entityData.PucFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.PucFlg, this.entityData.PucFlg);
				OnPropertyChanged("PucFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NoChild property. 
		///		PG Ejust
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsNoChildNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"PG Ejust"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? NoChild
		{
			get
			{
				return this.entityData.NoChild; 
			}
			
			set
			{
				if (this.entityData.NoChild == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.NoChild, this.entityData.NoChild);
				this.entityData.NoChild = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.NoChild, this.entityData.NoChild);
				OnPropertyChanged("NoChild");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HighQualFlg property. 
		///		Deraya UG طالب حاصل على بكالريوس
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsHighQualFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"Deraya UG طالب حاصل على بكالريوس"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? HighQualFlg
		{
			get
			{
				return this.entityData.HighQualFlg; 
			}
			
			set
			{
				if (this.entityData.HighQualFlg == value)
					return;
					
				OnColumnChanging(AdmApplicantColumn.HighQualFlg, this.entityData.HighQualFlg);
				this.entityData.HighQualFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(AdmApplicantColumn.HighQualFlg, this.entityData.HighQualFlg);
				OnPropertyChanged("HighQualFlg");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="EdCdeSocialAffair"/>.
		/// </summary>
		/// <value>The source EdCdeSocialAffair for EdCdeSocialAffairId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCdeSocialAffair EdCdeSocialAffairIdSource
      	{
            get { return entityData.EdCdeSocialAffairIdSource; }
            set { entityData.EdCdeSocialAffairIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStud"/>.
		/// </summary>
		/// <value>The source EdStud for EdStudId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStud EdStudIdSource
      	{
            get { return entityData.EdStudIdSource; }
            set { entityData.EdStudIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeLanguage"/>.
		/// </summary>
		/// <value>The source GsCodeLanguage for GsCodeLanguageId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeLanguage GsCodeLanguageIdSource
      	{
            get { return entityData.GsCodeLanguageIdSource; }
            set { entityData.GsCodeLanguageIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryNodeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCountryNode GsCountryNodeIdSource
      	{
            get { return entityData.GsCountryNodeIdSource; }
            set { entityData.GsCountryNodeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsBirthCountryNodeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCountryNode GsBirthCountryNodeIdSource
      	{
            get { return entityData.GsBirthCountryNodeIdSource; }
            set { entityData.GsBirthCountryNodeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeMaritalStatus"/>.
		/// </summary>
		/// <value>The source GsCdeMaritalStatus for GsCdeMaritalStatusId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeMaritalStatus GsCdeMaritalStatusIdSource
      	{
            get { return entityData.GsCdeMaritalStatusIdSource; }
            set { entityData.GsCdeMaritalStatusIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeGender"/>.
		/// </summary>
		/// <value>The source GsCodeGender for GsCodeGenderId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeGender GsCodeGenderIdSource
      	{
            get { return entityData.GsCodeGenderIdSource; }
            set { entityData.GsCodeGenderIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeReligion"/>.
		/// </summary>
		/// <value>The source GsCodeReligion for GsCodeReligionId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeReligion GsCodeReligionIdSource
      	{
            get { return entityData.GsCodeReligionIdSource; }
            set { entityData.GsCodeReligionIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of SvUserMessage objects
		///	which are related to this object through the relation FK_SV_USER_MESSAGE_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvUserMessage> SvUserMessageCollection
		{
			get { return entityData.SvUserMessageCollection; }
			set { entityData.SvUserMessageCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppRegHistory objects
		///	which are related to this object through the relation FK_ADM_APP_REG_HISTORY_ADM_N_APP
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppRegHistory> AdmAppRegHistoryCollection
		{
			get { return entityData.AdmAppRegHistoryCollection; }
			set { entityData.AdmAppRegHistoryCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvSrvyRespondQstn objects
		///	which are related to this object through the relation FK_SV_SRVY_RESPOND_QSTN_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvSrvyRespondQstn> SvSrvyRespondQstnCollection
		{
			get { return entityData.SvSrvyRespondQstnCollection; }
			set { entityData.SvSrvyRespondQstnCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmScholorship objects
		///	which are related to this object through the relation FK_ADM_SCHOLORSHIP_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmScholorship> AdmScholorshipCollection
		{
			get { return entityData.AdmScholorshipCollection; }
			set { entityData.AdmScholorshipCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmOutbox objects
		///	which are related to this object through the relation FK_ADM_OUTBOX_ADM_APPLICANT2
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmOutbox> AdmOutboxCollectionGetByOutMsgAppFrom
		{
			get { return entityData.AdmOutboxCollectionGetByOutMsgAppFrom; }
			set { entityData.AdmOutboxCollectionGetByOutMsgAppFrom = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudGuard objects
		///	which are related to this object through the relation FK_ED_STUD_GUARD_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudGuard> EdStudGuardCollection
		{
			get { return entityData.EdStudGuardCollection; }
			set { entityData.EdStudGuardCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeRefndStdReq objects
		///	which are related to this object through the relation FK_FEE_REFND_STD_REQ_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeRefndStdReq> FeeRefndStdReqCollection
		{
			get { return entityData.FeeRefndStdReqCollection; }
			set { entityData.FeeRefndStdReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppPlaceExamCourse objects
		///	which are related to this object through the relation FK_ADM_APP_PLACE_EXAM_COURSE_ADM_APPLICANTS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppPlaceExamCourse> AdmAppPlaceExamCourseCollection
		{
			get { return entityData.AdmAppPlaceExamCourseCollection; }
			set { entityData.AdmAppPlaceExamCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppHonor objects
		///	which are related to this object through the relation FK_ADM_APP_HONOR_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppHonor> AdmAppHonorCollection
		{
			get { return entityData.AdmAppHonorCollection; }
			set { entityData.AdmAppHonorCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppDoc objects
		///	which are related to this object through the relation FK_ADM_APP_DOC_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppDoc> AdmAppDocCollection
		{
			get { return entityData.AdmAppDocCollection; }
			set { entityData.AdmAppDocCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudNote objects
		///	which are related to this object through the relation FK_ED_STUD_NOTE_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudNote> EdStudNoteCollection
		{
			get { return entityData.EdStudNoteCollection; }
			set { entityData.EdStudNoteCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudActivity objects
		///	which are related to this object through the relation FK_ED_STUD_ACTIVITY_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudActivity> EdStudActivityCollection
		{
			get { return entityData.EdStudActivityCollection; }
			set { entityData.EdStudActivityCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmOutbox objects
		///	which are related to this object through the relation FK_ADM_OUTBOX_ADM_APPLICANT3
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmOutbox> AdmOutboxCollectionGetByOutMsgAppTo
		{
			get { return entityData.AdmOutboxCollectionGetByOutMsgAppTo; }
			set { entityData.AdmOutboxCollectionGetByOutMsgAppTo = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmRsrvdCode objects
		///	which are related to this object through the relation FK_ADM_RSRVD_CODE_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmRsrvdCode> AdmRsrvdCodeCollection
		{
			get { return entityData.AdmRsrvdCodeCollection; }
			set { entityData.AdmRsrvdCodeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvMessage objects
		///	which are related to this object through the relation FK_SV_MESSAGE_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvMessage> SvMessageCollection
		{
			get { return entityData.SvMessageCollection; }
			set { entityData.SvMessageCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppInfo objects
		///	which are related to this object through the relation FK_ADM_APP_INFO_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppInfo> AdmAppInfoCollection
		{
			get { return entityData.AdmAppInfoCollection; }
			set { entityData.AdmAppInfoCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppCourseComp objects
		///	which are related to this object through the relation FK_ADM_APP_COURSE_COMP_ADM_APPLICANTS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppCourseComp> AdmAppCourseCompCollection
		{
			get { return entityData.AdmAppCourseCompCollection; }
			set { entityData.AdmAppCourseCompCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GsAddressDtl objects
		///	which are related to this object through the relation FK_GS_ADDRESS_DTL_ADM_APPLICANTS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GsAddressDtl> GsAddressDtlCollection
		{
			get { return entityData.GsAddressDtlCollection; }
			set { entityData.GsAddressDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudLang objects
		///	which are related to this object through the relation FK_ED_STUD_LANG_ADM_APPLICANTS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudLang> EdStudLangCollection
		{
			get { return entityData.EdStudLangCollection; }
			set { entityData.EdStudLangCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppPref objects
		///	which are related to this object through the relation FK_ADM_APP_PREF_ADM_APPLICANTS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppPref> AdmAppPrefCollection
		{
			get { return entityData.AdmAppPrefCollection; }
			set { entityData.AdmAppPrefCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppPlacementExam objects
		///	which are related to this object through the relation FK_ADM_APP_PLACEMENT_EXAM_ADM_APPLICANTS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppPlacementExam> AdmAppPlacementExamCollection
		{
			get { return entityData.AdmAppPlacementExamCollection; }
			set { entityData.AdmAppPlacementExamCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudQual objects
		///	which are related to this object through the relation FK_ED_STUD_QUAL_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudQual> EdStudQualCollection
		{
			get { return entityData.EdStudQualCollection; }
			set { entityData.EdStudQualCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppGuardian objects
		///	which are related to this object through the relation FK_ADM_APP_GUARDIAN_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppGuardian> AdmAppGuardianCollection
		{
			get { return entityData.AdmAppGuardianCollection; }
			set { entityData.AdmAppGuardianCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudVoucher objects
		///	which are related to this object through the relation FK_FEE_STUD_VOUCHER_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudVoucher> FeeStudVoucherCollection
		{
			get { return entityData.FeeStudVoucherCollection; }
			set { entityData.FeeStudVoucherCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudContactMethod objects
		///	which are related to this object through the relation FK_ED_STUD_CONTACT_METHOD_ADM_APPLICANTS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudContactMethod> EdStudContactMethodCollection
		{
			get { return entityData.EdStudContactMethodCollection; }
			set { entityData.EdStudContactMethodCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmInbox objects
		///	which are related to this object through the relation FK_ADM_INBOX_ADM_APPLICANT2
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmInbox> AdmInboxCollectionGetByInMsgAppFrom
		{
			get { return entityData.AdmInboxCollectionGetByInMsgAppFrom; }
			set { entityData.AdmInboxCollectionGetByInMsgAppFrom = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppProcSteps objects
		///	which are related to this object through the relation FK_ADM_APP_PROC_STEPS_ADM_APPLICANTS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppProcSteps> AdmAppProcStepsCollection
		{
			get { return entityData.AdmAppProcStepsCollection; }
			set { entityData.AdmAppProcStepsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppEssay objects
		///	which are related to this object through the relation FK_ADM_APP_ESSAY_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppEssay> AdmAppEssayCollection
		{
			get { return entityData.AdmAppEssayCollection; }
			set { entityData.AdmAppEssayCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppLanguages objects
		///	which are related to this object through the relation FK_ADM_APP_LANGUAGES_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppLanguages> AdmAppLanguagesCollection
		{
			get { return entityData.AdmAppLanguagesCollection; }
			set { entityData.AdmAppLanguagesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppDisability objects
		///	which are related to this object through the relation FK_ADM_APP_DISABILITY_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppDisability> AdmAppDisabilityCollection
		{
			get { return entityData.AdmAppDisabilityCollection; }
			set { entityData.AdmAppDisabilityCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppMedia objects
		///	which are related to this object through the relation FK_ADM_APP_MEDIA_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppMedia> AdmAppMediaCollection
		{
			get { return entityData.AdmAppMediaCollection; }
			set { entityData.AdmAppMediaCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppFees objects
		///	which are related to this object through the relation FK_ADM_APP_FEES_ADM_APPLICANTS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppFees> AdmAppFeesCollection
		{
			get { return entityData.AdmAppFeesCollection; }
			set { entityData.AdmAppFeesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmEnglishProficiency objects
		///	which are related to this object through the relation FK_ADM_ENGLISH_PROFICIENCY_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmEnglishProficiency> AdmEnglishProficiencyCollection
		{
			get { return entityData.AdmEnglishProficiencyCollection; }
			set { entityData.AdmEnglishProficiencyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmInbox objects
		///	which are related to this object through the relation FK_ADM_INBOX_ADM_APPLICANT3
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmInbox> AdmInboxCollectionGetByInMsgAppTo
		{
			get { return entityData.AdmInboxCollectionGetByInMsgAppTo; }
			set { entityData.AdmInboxCollectionGetByInMsgAppTo = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppWorkExper objects
		///	which are related to this object through the relation FK_ADM_APP_WORK_EXPER_ADM_APPLICANT
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppWorkExper> AdmAppWorkExperCollection
		{
			get { return entityData.AdmAppWorkExperCollection; }
			set { entityData.AdmAppWorkExperCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppLtrRecom objects
		///	which are related to this object through the relation FK_ADM_APP_LTR_RECOM_ADM_APPLICANTS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppLtrRecom> AdmAppLtrRecomCollection
		{
			get { return entityData.AdmAppLtrRecomCollection; }
			set { entityData.AdmAppLtrRecomCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("AdmAppCode", "Adm App Code", 30));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Username", "Username", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PasswordSalt", "Password Salt", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PasswordHash", "Password Hash", 250));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SecurityQs", "Security Qs", 350));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SecurityQsAnsSalt", "Security Qs Ans Salt", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SecurityQsAnsHash", "Security Qs Ans Hash", 250));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ActivationCode", "Activation Code", 1000));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FnameAr", "Fname Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FnameEn", "Fname En", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MnameAr", "Mname Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MnameEn", "Mname En", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LnameAr", "Lname Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("LnameEn", "Lname En", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FamilyAr", "Family Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FamilyEn", "Family En", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Cpr", "Cpr", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PassporNo", "Passpor No", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PhotoPath", "Photo Path", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FullNameAr", "Full Name Ar", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FullNameEn", "Full Name En", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ResidentId", "Resident Id", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("IdentIssuePlc", "Ident Issue Plc", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("VisaNumber", "Visa Number", 50));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ADM_APPLICANT"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ADM_APPLICANT_ID", "ADM_APP_CODE", "USERNAME", "PASSWORD_SALT", "PASSWORD_HASH", "SECURITY_QS", "SECURITY_QS_ANS_SALT", "SECURITY_QS_ANS_HASH", "ACTIVATION_CODE", "ACTIVATION_FLG", "REG_DATE", "FNAME_AR", "FNAME_EN", "MNAME_AR", "MNAME_EN", "LNAME_AR", "LNAME_EN", "FAMILY_AR", "FAMILY_EN", "GS_CODE_RELIGION_ID", "CPR", "PASSPOR_NO", "PASSPOR_EXPIRE_DATE", "BIRTHDATE", "PHOTO_PATH", "GS_CDE_MARITAL_STATUS_ID", "GS_CODE_GENDER_ID", "WORK_FLG", "GS_COUNTRY_NODE_ID", "FULL_NAME_AR", "FULL_NAME_EN", "RESIDENT_ID", "RESIDENT_EXPIRE_DATE", "GS_BIRTH_COUNTRY_NODE_ID", "ED_STUD_ID", "LOYALTY_FLG", "GS_CODE_LANGUAGE_ID", "PASSPOR_ISSUE_DATE", "SPECIAL_NEED_FLG", "IDENT_ISSUE_DATE", "IDENT_EXPIRE_DATE", "IDENT_ISSUE_PLC", "VISA_NUMBER", "VISA_ISSUE_DATE", "VISA_EXPIRE_DATE", "LAST_DATE", "SE_USER_ID", "ED_CDE_SOCIAL_AFFAIR_ID", "PUC_FLG", "NO_CHILD", "HIGH_QUAL_FLG"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as AdmApplicantEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (AdmApplicant) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<AdmApplicant>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as AdmApplicant);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed AdmApplicant Entity 
		///</summary>
		protected virtual AdmApplicant Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			AdmApplicant copy = new AdmApplicant();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.AdmApplicantId = this.AdmApplicantId;
					copy.OriginalAdmApplicantId = this.OriginalAdmApplicantId;
				copy.AdmAppCode = this.AdmAppCode;
				copy.Username = this.Username;
				copy.PasswordSalt = this.PasswordSalt;
				copy.PasswordHash = this.PasswordHash;
				copy.SecurityQs = this.SecurityQs;
				copy.SecurityQsAnsSalt = this.SecurityQsAnsSalt;
				copy.SecurityQsAnsHash = this.SecurityQsAnsHash;
				copy.ActivationCode = this.ActivationCode;
				copy.ActivationFlg = this.ActivationFlg;
				copy.RegDate = this.RegDate;
				copy.FnameAr = this.FnameAr;
				copy.FnameEn = this.FnameEn;
				copy.MnameAr = this.MnameAr;
				copy.MnameEn = this.MnameEn;
				copy.LnameAr = this.LnameAr;
				copy.LnameEn = this.LnameEn;
				copy.FamilyAr = this.FamilyAr;
				copy.FamilyEn = this.FamilyEn;
				copy.GsCodeReligionId = this.GsCodeReligionId;
				copy.Cpr = this.Cpr;
				copy.PassporNo = this.PassporNo;
				copy.PassporExpireDate = this.PassporExpireDate;
				copy.Birthdate = this.Birthdate;
				copy.PhotoPath = this.PhotoPath;
				copy.GsCdeMaritalStatusId = this.GsCdeMaritalStatusId;
				copy.GsCodeGenderId = this.GsCodeGenderId;
				copy.WorkFlg = this.WorkFlg;
				copy.GsCountryNodeId = this.GsCountryNodeId;
				copy.FullNameAr = this.FullNameAr;
				copy.FullNameEn = this.FullNameEn;
				copy.ResidentId = this.ResidentId;
				copy.ResidentExpireDate = this.ResidentExpireDate;
				copy.GsBirthCountryNodeId = this.GsBirthCountryNodeId;
				copy.EdStudId = this.EdStudId;
				copy.LoyaltyFlg = this.LoyaltyFlg;
				copy.GsCodeLanguageId = this.GsCodeLanguageId;
				copy.PassporIssueDate = this.PassporIssueDate;
				copy.SpecialNeedFlg = this.SpecialNeedFlg;
				copy.IdentIssueDate = this.IdentIssueDate;
				copy.IdentExpireDate = this.IdentExpireDate;
				copy.IdentIssuePlc = this.IdentIssuePlc;
				copy.VisaNumber = this.VisaNumber;
				copy.VisaIssueDate = this.VisaIssueDate;
				copy.VisaExpireDate = this.VisaExpireDate;
				copy.LastDate = this.LastDate;
				copy.SeUserId = this.SeUserId;
				copy.EdCdeSocialAffairId = this.EdCdeSocialAffairId;
				copy.PucFlg = this.PucFlg;
				copy.NoChild = this.NoChild;
				copy.HighQualFlg = this.HighQualFlg;
			
			if (this.EdCdeSocialAffairIdSource != null && existingCopies.Contains(this.EdCdeSocialAffairIdSource))
				copy.EdCdeSocialAffairIdSource = existingCopies[this.EdCdeSocialAffairIdSource] as EdCdeSocialAffair;
			else
				copy.EdCdeSocialAffairIdSource = MakeCopyOf(this.EdCdeSocialAffairIdSource, existingCopies) as EdCdeSocialAffair;
			if (this.EdStudIdSource != null && existingCopies.Contains(this.EdStudIdSource))
				copy.EdStudIdSource = existingCopies[this.EdStudIdSource] as EdStud;
			else
				copy.EdStudIdSource = MakeCopyOf(this.EdStudIdSource, existingCopies) as EdStud;
			if (this.GsCodeLanguageIdSource != null && existingCopies.Contains(this.GsCodeLanguageIdSource))
				copy.GsCodeLanguageIdSource = existingCopies[this.GsCodeLanguageIdSource] as GsCodeLanguage;
			else
				copy.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource, existingCopies) as GsCodeLanguage;
			if (this.GsCountryNodeIdSource != null && existingCopies.Contains(this.GsCountryNodeIdSource))
				copy.GsCountryNodeIdSource = existingCopies[this.GsCountryNodeIdSource] as GsCountryNode;
			else
				copy.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource, existingCopies) as GsCountryNode;
			if (this.GsBirthCountryNodeIdSource != null && existingCopies.Contains(this.GsBirthCountryNodeIdSource))
				copy.GsBirthCountryNodeIdSource = existingCopies[this.GsBirthCountryNodeIdSource] as GsCountryNode;
			else
				copy.GsBirthCountryNodeIdSource = MakeCopyOf(this.GsBirthCountryNodeIdSource, existingCopies) as GsCountryNode;
			if (this.GsCdeMaritalStatusIdSource != null && existingCopies.Contains(this.GsCdeMaritalStatusIdSource))
				copy.GsCdeMaritalStatusIdSource = existingCopies[this.GsCdeMaritalStatusIdSource] as GsCdeMaritalStatus;
			else
				copy.GsCdeMaritalStatusIdSource = MakeCopyOf(this.GsCdeMaritalStatusIdSource, existingCopies) as GsCdeMaritalStatus;
			if (this.GsCodeGenderIdSource != null && existingCopies.Contains(this.GsCodeGenderIdSource))
				copy.GsCodeGenderIdSource = existingCopies[this.GsCodeGenderIdSource] as GsCodeGender;
			else
				copy.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource, existingCopies) as GsCodeGender;
			if (this.GsCodeReligionIdSource != null && existingCopies.Contains(this.GsCodeReligionIdSource))
				copy.GsCodeReligionIdSource = existingCopies[this.GsCodeReligionIdSource] as GsCodeReligion;
			else
				copy.GsCodeReligionIdSource = MakeCopyOf(this.GsCodeReligionIdSource, existingCopies) as GsCodeReligion;
		
			//deep copy nested objects
			copy.SvUserMessageCollection = (TList<SvUserMessage>) MakeCopyOf(this.SvUserMessageCollection, existingCopies); 
			copy.AdmAppRegHistoryCollection = (TList<AdmAppRegHistory>) MakeCopyOf(this.AdmAppRegHistoryCollection, existingCopies); 
			copy.SvSrvyRespondQstnCollection = (TList<SvSrvyRespondQstn>) MakeCopyOf(this.SvSrvyRespondQstnCollection, existingCopies); 
			copy.AdmScholorshipCollection = (TList<AdmScholorship>) MakeCopyOf(this.AdmScholorshipCollection, existingCopies); 
			copy.AdmOutboxCollectionGetByOutMsgAppFrom = (TList<AdmOutbox>) MakeCopyOf(this.AdmOutboxCollectionGetByOutMsgAppFrom, existingCopies); 
			copy.EdStudGuardCollection = (TList<EdStudGuard>) MakeCopyOf(this.EdStudGuardCollection, existingCopies); 
			copy.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection, existingCopies); 
			copy.AdmAppPlaceExamCourseCollection = (TList<AdmAppPlaceExamCourse>) MakeCopyOf(this.AdmAppPlaceExamCourseCollection, existingCopies); 
			copy.AdmAppHonorCollection = (TList<AdmAppHonor>) MakeCopyOf(this.AdmAppHonorCollection, existingCopies); 
			copy.AdmAppDocCollection = (TList<AdmAppDoc>) MakeCopyOf(this.AdmAppDocCollection, existingCopies); 
			copy.EdStudNoteCollection = (TList<EdStudNote>) MakeCopyOf(this.EdStudNoteCollection, existingCopies); 
			copy.EdStudActivityCollection = (TList<EdStudActivity>) MakeCopyOf(this.EdStudActivityCollection, existingCopies); 
			copy.AdmOutboxCollectionGetByOutMsgAppTo = (TList<AdmOutbox>) MakeCopyOf(this.AdmOutboxCollectionGetByOutMsgAppTo, existingCopies); 
			copy.AdmRsrvdCodeCollection = (TList<AdmRsrvdCode>) MakeCopyOf(this.AdmRsrvdCodeCollection, existingCopies); 
			copy.SvMessageCollection = (TList<SvMessage>) MakeCopyOf(this.SvMessageCollection, existingCopies); 
			copy.AdmAppInfoCollection = (TList<AdmAppInfo>) MakeCopyOf(this.AdmAppInfoCollection, existingCopies); 
			copy.AdmAppCourseCompCollection = (TList<AdmAppCourseComp>) MakeCopyOf(this.AdmAppCourseCompCollection, existingCopies); 
			copy.GsAddressDtlCollection = (TList<GsAddressDtl>) MakeCopyOf(this.GsAddressDtlCollection, existingCopies); 
			copy.EdStudLangCollection = (TList<EdStudLang>) MakeCopyOf(this.EdStudLangCollection, existingCopies); 
			copy.AdmAppPrefCollection = (TList<AdmAppPref>) MakeCopyOf(this.AdmAppPrefCollection, existingCopies); 
			copy.AdmAppPlacementExamCollection = (TList<AdmAppPlacementExam>) MakeCopyOf(this.AdmAppPlacementExamCollection, existingCopies); 
			copy.EdStudQualCollection = (TList<EdStudQual>) MakeCopyOf(this.EdStudQualCollection, existingCopies); 
			copy.AdmAppGuardianCollection = (TList<AdmAppGuardian>) MakeCopyOf(this.AdmAppGuardianCollection, existingCopies); 
			copy.FeeStudVoucherCollection = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollection, existingCopies); 
			copy.EdStudContactMethodCollection = (TList<EdStudContactMethod>) MakeCopyOf(this.EdStudContactMethodCollection, existingCopies); 
			copy.AdmInboxCollectionGetByInMsgAppFrom = (TList<AdmInbox>) MakeCopyOf(this.AdmInboxCollectionGetByInMsgAppFrom, existingCopies); 
			copy.AdmAppProcStepsCollection = (TList<AdmAppProcSteps>) MakeCopyOf(this.AdmAppProcStepsCollection, existingCopies); 
			copy.AdmAppEssayCollection = (TList<AdmAppEssay>) MakeCopyOf(this.AdmAppEssayCollection, existingCopies); 
			copy.AdmAppLanguagesCollection = (TList<AdmAppLanguages>) MakeCopyOf(this.AdmAppLanguagesCollection, existingCopies); 
			copy.AdmAppDisabilityCollection = (TList<AdmAppDisability>) MakeCopyOf(this.AdmAppDisabilityCollection, existingCopies); 
			copy.AdmAppMediaCollection = (TList<AdmAppMedia>) MakeCopyOf(this.AdmAppMediaCollection, existingCopies); 
			copy.AdmAppFeesCollection = (TList<AdmAppFees>) MakeCopyOf(this.AdmAppFeesCollection, existingCopies); 
			copy.AdmEnglishProficiencyCollection = (TList<AdmEnglishProficiency>) MakeCopyOf(this.AdmEnglishProficiencyCollection, existingCopies); 
			copy.AdmInboxCollectionGetByInMsgAppTo = (TList<AdmInbox>) MakeCopyOf(this.AdmInboxCollectionGetByInMsgAppTo, existingCopies); 
			copy.AdmAppWorkExperCollection = (TList<AdmAppWorkExper>) MakeCopyOf(this.AdmAppWorkExperCollection, existingCopies); 
			copy.AdmAppLtrRecomCollection = (TList<AdmAppLtrRecom>) MakeCopyOf(this.AdmAppLtrRecomCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed AdmApplicant Entity 
		///</summary>
		public virtual AdmApplicant Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed AdmApplicant Entity which is a deep copy of the current entity.
		///</summary>
		public virtual AdmApplicant DeepCopy()
		{
			return EntityHelper.Clone<AdmApplicant>(this as AdmApplicant);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as AdmApplicantEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new AdmApplicantEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as AdmApplicantEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(AdmApplicantColumn column)
		{
			switch(column)
			{
					case AdmApplicantColumn.AdmApplicantId:
					return entityData.AdmApplicantId != _originalData.AdmApplicantId;
					case AdmApplicantColumn.AdmAppCode:
					return entityData.AdmAppCode != _originalData.AdmAppCode;
					case AdmApplicantColumn.Username:
					return entityData.Username != _originalData.Username;
					case AdmApplicantColumn.PasswordSalt:
					return entityData.PasswordSalt != _originalData.PasswordSalt;
					case AdmApplicantColumn.PasswordHash:
					return entityData.PasswordHash != _originalData.PasswordHash;
					case AdmApplicantColumn.SecurityQs:
					return entityData.SecurityQs != _originalData.SecurityQs;
					case AdmApplicantColumn.SecurityQsAnsSalt:
					return entityData.SecurityQsAnsSalt != _originalData.SecurityQsAnsSalt;
					case AdmApplicantColumn.SecurityQsAnsHash:
					return entityData.SecurityQsAnsHash != _originalData.SecurityQsAnsHash;
					case AdmApplicantColumn.ActivationCode:
					return entityData.ActivationCode != _originalData.ActivationCode;
					case AdmApplicantColumn.ActivationFlg:
					return entityData.ActivationFlg != _originalData.ActivationFlg;
					case AdmApplicantColumn.RegDate:
					return entityData.RegDate != _originalData.RegDate;
					case AdmApplicantColumn.FnameAr:
					return entityData.FnameAr != _originalData.FnameAr;
					case AdmApplicantColumn.FnameEn:
					return entityData.FnameEn != _originalData.FnameEn;
					case AdmApplicantColumn.MnameAr:
					return entityData.MnameAr != _originalData.MnameAr;
					case AdmApplicantColumn.MnameEn:
					return entityData.MnameEn != _originalData.MnameEn;
					case AdmApplicantColumn.LnameAr:
					return entityData.LnameAr != _originalData.LnameAr;
					case AdmApplicantColumn.LnameEn:
					return entityData.LnameEn != _originalData.LnameEn;
					case AdmApplicantColumn.FamilyAr:
					return entityData.FamilyAr != _originalData.FamilyAr;
					case AdmApplicantColumn.FamilyEn:
					return entityData.FamilyEn != _originalData.FamilyEn;
					case AdmApplicantColumn.GsCodeReligionId:
					return entityData.GsCodeReligionId != _originalData.GsCodeReligionId;
					case AdmApplicantColumn.Cpr:
					return entityData.Cpr != _originalData.Cpr;
					case AdmApplicantColumn.PassporNo:
					return entityData.PassporNo != _originalData.PassporNo;
					case AdmApplicantColumn.PassporExpireDate:
					return entityData.PassporExpireDate != _originalData.PassporExpireDate;
					case AdmApplicantColumn.Birthdate:
					return entityData.Birthdate != _originalData.Birthdate;
					case AdmApplicantColumn.PhotoPath:
					return entityData.PhotoPath != _originalData.PhotoPath;
					case AdmApplicantColumn.GsCdeMaritalStatusId:
					return entityData.GsCdeMaritalStatusId != _originalData.GsCdeMaritalStatusId;
					case AdmApplicantColumn.GsCodeGenderId:
					return entityData.GsCodeGenderId != _originalData.GsCodeGenderId;
					case AdmApplicantColumn.WorkFlg:
					return entityData.WorkFlg != _originalData.WorkFlg;
					case AdmApplicantColumn.GsCountryNodeId:
					return entityData.GsCountryNodeId != _originalData.GsCountryNodeId;
					case AdmApplicantColumn.FullNameAr:
					return entityData.FullNameAr != _originalData.FullNameAr;
					case AdmApplicantColumn.FullNameEn:
					return entityData.FullNameEn != _originalData.FullNameEn;
					case AdmApplicantColumn.ResidentId:
					return entityData.ResidentId != _originalData.ResidentId;
					case AdmApplicantColumn.ResidentExpireDate:
					return entityData.ResidentExpireDate != _originalData.ResidentExpireDate;
					case AdmApplicantColumn.GsBirthCountryNodeId:
					return entityData.GsBirthCountryNodeId != _originalData.GsBirthCountryNodeId;
					case AdmApplicantColumn.EdStudId:
					return entityData.EdStudId != _originalData.EdStudId;
					case AdmApplicantColumn.LoyaltyFlg:
					return entityData.LoyaltyFlg != _originalData.LoyaltyFlg;
					case AdmApplicantColumn.GsCodeLanguageId:
					return entityData.GsCodeLanguageId != _originalData.GsCodeLanguageId;
					case AdmApplicantColumn.PassporIssueDate:
					return entityData.PassporIssueDate != _originalData.PassporIssueDate;
					case AdmApplicantColumn.SpecialNeedFlg:
					return entityData.SpecialNeedFlg != _originalData.SpecialNeedFlg;
					case AdmApplicantColumn.IdentIssueDate:
					return entityData.IdentIssueDate != _originalData.IdentIssueDate;
					case AdmApplicantColumn.IdentExpireDate:
					return entityData.IdentExpireDate != _originalData.IdentExpireDate;
					case AdmApplicantColumn.IdentIssuePlc:
					return entityData.IdentIssuePlc != _originalData.IdentIssuePlc;
					case AdmApplicantColumn.VisaNumber:
					return entityData.VisaNumber != _originalData.VisaNumber;
					case AdmApplicantColumn.VisaIssueDate:
					return entityData.VisaIssueDate != _originalData.VisaIssueDate;
					case AdmApplicantColumn.VisaExpireDate:
					return entityData.VisaExpireDate != _originalData.VisaExpireDate;
					case AdmApplicantColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
					case AdmApplicantColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
					case AdmApplicantColumn.EdCdeSocialAffairId:
					return entityData.EdCdeSocialAffairId != _originalData.EdCdeSocialAffairId;
					case AdmApplicantColumn.PucFlg:
					return entityData.PucFlg != _originalData.PucFlg;
					case AdmApplicantColumn.NoChild:
					return entityData.NoChild != _originalData.NoChild;
					case AdmApplicantColumn.HighQualFlg:
					return entityData.HighQualFlg != _originalData.HighQualFlg;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< AdmApplicantColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.AdmApplicantId != _originalData.AdmApplicantId;
			result = result || entityData.AdmAppCode != _originalData.AdmAppCode;
			result = result || entityData.Username != _originalData.Username;
			result = result || entityData.PasswordSalt != _originalData.PasswordSalt;
			result = result || entityData.PasswordHash != _originalData.PasswordHash;
			result = result || entityData.SecurityQs != _originalData.SecurityQs;
			result = result || entityData.SecurityQsAnsSalt != _originalData.SecurityQsAnsSalt;
			result = result || entityData.SecurityQsAnsHash != _originalData.SecurityQsAnsHash;
			result = result || entityData.ActivationCode != _originalData.ActivationCode;
			result = result || entityData.ActivationFlg != _originalData.ActivationFlg;
			result = result || entityData.RegDate != _originalData.RegDate;
			result = result || entityData.FnameAr != _originalData.FnameAr;
			result = result || entityData.FnameEn != _originalData.FnameEn;
			result = result || entityData.MnameAr != _originalData.MnameAr;
			result = result || entityData.MnameEn != _originalData.MnameEn;
			result = result || entityData.LnameAr != _originalData.LnameAr;
			result = result || entityData.LnameEn != _originalData.LnameEn;
			result = result || entityData.FamilyAr != _originalData.FamilyAr;
			result = result || entityData.FamilyEn != _originalData.FamilyEn;
			result = result || entityData.GsCodeReligionId != _originalData.GsCodeReligionId;
			result = result || entityData.Cpr != _originalData.Cpr;
			result = result || entityData.PassporNo != _originalData.PassporNo;
			result = result || entityData.PassporExpireDate != _originalData.PassporExpireDate;
			result = result || entityData.Birthdate != _originalData.Birthdate;
			result = result || entityData.PhotoPath != _originalData.PhotoPath;
			result = result || entityData.GsCdeMaritalStatusId != _originalData.GsCdeMaritalStatusId;
			result = result || entityData.GsCodeGenderId != _originalData.GsCodeGenderId;
			result = result || entityData.WorkFlg != _originalData.WorkFlg;
			result = result || entityData.GsCountryNodeId != _originalData.GsCountryNodeId;
			result = result || entityData.FullNameAr != _originalData.FullNameAr;
			result = result || entityData.FullNameEn != _originalData.FullNameEn;
			result = result || entityData.ResidentId != _originalData.ResidentId;
			result = result || entityData.ResidentExpireDate != _originalData.ResidentExpireDate;
			result = result || entityData.GsBirthCountryNodeId != _originalData.GsBirthCountryNodeId;
			result = result || entityData.EdStudId != _originalData.EdStudId;
			result = result || entityData.LoyaltyFlg != _originalData.LoyaltyFlg;
			result = result || entityData.GsCodeLanguageId != _originalData.GsCodeLanguageId;
			result = result || entityData.PassporIssueDate != _originalData.PassporIssueDate;
			result = result || entityData.SpecialNeedFlg != _originalData.SpecialNeedFlg;
			result = result || entityData.IdentIssueDate != _originalData.IdentIssueDate;
			result = result || entityData.IdentExpireDate != _originalData.IdentExpireDate;
			result = result || entityData.IdentIssuePlc != _originalData.IdentIssuePlc;
			result = result || entityData.VisaNumber != _originalData.VisaNumber;
			result = result || entityData.VisaIssueDate != _originalData.VisaIssueDate;
			result = result || entityData.VisaExpireDate != _originalData.VisaExpireDate;
			result = result || entityData.LastDate != _originalData.LastDate;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			result = result || entityData.EdCdeSocialAffairId != _originalData.EdCdeSocialAffairId;
			result = result || entityData.PucFlg != _originalData.PucFlg;
			result = result || entityData.NoChild != _originalData.NoChild;
			result = result || entityData.HighQualFlg != _originalData.HighQualFlg;
			return result;
		}	
		
		///<summary>
		///  Returns a AdmApplicant Entity with the original data.
		///</summary>
		public AdmApplicant GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateAdmApplicant(
				_originalData.AdmApplicantId,
				_originalData.AdmAppCode,
				_originalData.Username,
				_originalData.PasswordSalt,
				_originalData.PasswordHash,
				_originalData.SecurityQs,
				_originalData.SecurityQsAnsSalt,
				_originalData.SecurityQsAnsHash,
				_originalData.ActivationCode,
				_originalData.ActivationFlg,
				_originalData.RegDate,
				_originalData.FnameAr,
				_originalData.FnameEn,
				_originalData.MnameAr,
				_originalData.MnameEn,
				_originalData.LnameAr,
				_originalData.LnameEn,
				_originalData.FamilyAr,
				_originalData.FamilyEn,
				_originalData.GsCodeReligionId,
				_originalData.Cpr,
				_originalData.PassporNo,
				_originalData.PassporExpireDate,
				_originalData.Birthdate,
				_originalData.PhotoPath,
				_originalData.GsCdeMaritalStatusId,
				_originalData.GsCodeGenderId,
				_originalData.WorkFlg,
				_originalData.GsCountryNodeId,
				_originalData.FullNameAr,
				_originalData.FullNameEn,
				_originalData.ResidentId,
				_originalData.ResidentExpireDate,
				_originalData.GsBirthCountryNodeId,
				_originalData.EdStudId,
				_originalData.LoyaltyFlg,
				_originalData.GsCodeLanguageId,
				_originalData.PassporIssueDate,
				_originalData.SpecialNeedFlg,
				_originalData.IdentIssueDate,
				_originalData.IdentExpireDate,
				_originalData.IdentIssuePlc,
				_originalData.VisaNumber,
				_originalData.VisaIssueDate,
				_originalData.VisaExpireDate,
				_originalData.LastDate,
				_originalData.SeUserId,
				_originalData.EdCdeSocialAffairId,
				_originalData.PucFlg,
				_originalData.NoChild,
				_originalData.HighQualFlg
				);
				
			return (AdmApplicant)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="AdmApplicantBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is AdmApplicantBase)
				return ValueEquals(this, (AdmApplicantBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="AdmApplicantBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.AdmApplicantId.GetHashCode() ^ 
					((this.AdmAppCode == null) ? string.Empty : this.AdmAppCode.ToString()).GetHashCode() ^ 
					((this.Username == null) ? string.Empty : this.Username.ToString()).GetHashCode() ^ 
					((this.PasswordSalt == null) ? string.Empty : this.PasswordSalt.ToString()).GetHashCode() ^ 
					((this.PasswordHash == null) ? string.Empty : this.PasswordHash.ToString()).GetHashCode() ^ 
					((this.SecurityQs == null) ? string.Empty : this.SecurityQs.ToString()).GetHashCode() ^ 
					((this.SecurityQsAnsSalt == null) ? string.Empty : this.SecurityQsAnsSalt.ToString()).GetHashCode() ^ 
					((this.SecurityQsAnsHash == null) ? string.Empty : this.SecurityQsAnsHash.ToString()).GetHashCode() ^ 
					((this.ActivationCode == null) ? string.Empty : this.ActivationCode.ToString()).GetHashCode() ^ 
					((this.ActivationFlg == null) ? string.Empty : this.ActivationFlg.ToString()).GetHashCode() ^ 
					((this.RegDate == null) ? string.Empty : this.RegDate.ToString()).GetHashCode() ^ 
					((this.FnameAr == null) ? string.Empty : this.FnameAr.ToString()).GetHashCode() ^ 
					((this.FnameEn == null) ? string.Empty : this.FnameEn.ToString()).GetHashCode() ^ 
					((this.MnameAr == null) ? string.Empty : this.MnameAr.ToString()).GetHashCode() ^ 
					((this.MnameEn == null) ? string.Empty : this.MnameEn.ToString()).GetHashCode() ^ 
					((this.LnameAr == null) ? string.Empty : this.LnameAr.ToString()).GetHashCode() ^ 
					((this.LnameEn == null) ? string.Empty : this.LnameEn.ToString()).GetHashCode() ^ 
					((this.FamilyAr == null) ? string.Empty : this.FamilyAr.ToString()).GetHashCode() ^ 
					((this.FamilyEn == null) ? string.Empty : this.FamilyEn.ToString()).GetHashCode() ^ 
					((this.GsCodeReligionId == null) ? string.Empty : this.GsCodeReligionId.ToString()).GetHashCode() ^ 
					((this.Cpr == null) ? string.Empty : this.Cpr.ToString()).GetHashCode() ^ 
					((this.PassporNo == null) ? string.Empty : this.PassporNo.ToString()).GetHashCode() ^ 
					((this.PassporExpireDate == null) ? string.Empty : this.PassporExpireDate.ToString()).GetHashCode() ^ 
					((this.Birthdate == null) ? string.Empty : this.Birthdate.ToString()).GetHashCode() ^ 
					((this.PhotoPath == null) ? string.Empty : this.PhotoPath.ToString()).GetHashCode() ^ 
					((this.GsCdeMaritalStatusId == null) ? string.Empty : this.GsCdeMaritalStatusId.ToString()).GetHashCode() ^ 
					((this.GsCodeGenderId == null) ? string.Empty : this.GsCodeGenderId.ToString()).GetHashCode() ^ 
					((this.WorkFlg == null) ? string.Empty : this.WorkFlg.ToString()).GetHashCode() ^ 
					((this.GsCountryNodeId == null) ? string.Empty : this.GsCountryNodeId.ToString()).GetHashCode() ^ 
					((this.FullNameAr == null) ? string.Empty : this.FullNameAr.ToString()).GetHashCode() ^ 
					((this.FullNameEn == null) ? string.Empty : this.FullNameEn.ToString()).GetHashCode() ^ 
					((this.ResidentId == null) ? string.Empty : this.ResidentId.ToString()).GetHashCode() ^ 
					((this.ResidentExpireDate == null) ? string.Empty : this.ResidentExpireDate.ToString()).GetHashCode() ^ 
					((this.GsBirthCountryNodeId == null) ? string.Empty : this.GsBirthCountryNodeId.ToString()).GetHashCode() ^ 
					((this.EdStudId == null) ? string.Empty : this.EdStudId.ToString()).GetHashCode() ^ 
					((this.LoyaltyFlg == null) ? string.Empty : this.LoyaltyFlg.ToString()).GetHashCode() ^ 
					((this.GsCodeLanguageId == null) ? string.Empty : this.GsCodeLanguageId.ToString()).GetHashCode() ^ 
					((this.PassporIssueDate == null) ? string.Empty : this.PassporIssueDate.ToString()).GetHashCode() ^ 
					((this.SpecialNeedFlg == null) ? string.Empty : this.SpecialNeedFlg.ToString()).GetHashCode() ^ 
					((this.IdentIssueDate == null) ? string.Empty : this.IdentIssueDate.ToString()).GetHashCode() ^ 
					((this.IdentExpireDate == null) ? string.Empty : this.IdentExpireDate.ToString()).GetHashCode() ^ 
					((this.IdentIssuePlc == null) ? string.Empty : this.IdentIssuePlc.ToString()).GetHashCode() ^ 
					((this.VisaNumber == null) ? string.Empty : this.VisaNumber.ToString()).GetHashCode() ^ 
					((this.VisaIssueDate == null) ? string.Empty : this.VisaIssueDate.ToString()).GetHashCode() ^ 
					((this.VisaExpireDate == null) ? string.Empty : this.VisaExpireDate.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode() ^ 
					((this.EdCdeSocialAffairId == null) ? string.Empty : this.EdCdeSocialAffairId.ToString()).GetHashCode() ^ 
					((this.PucFlg == null) ? string.Empty : this.PucFlg.ToString()).GetHashCode() ^ 
					((this.NoChild == null) ? string.Empty : this.NoChild.ToString()).GetHashCode() ^ 
					((this.HighQualFlg == null) ? string.Empty : this.HighQualFlg.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="AdmApplicantBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(AdmApplicantBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="AdmApplicantBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="AdmApplicantBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="AdmApplicantBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(AdmApplicantBase Object1, AdmApplicantBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.AdmApplicantId != Object2.AdmApplicantId)
				equal = false;
			if ( Object1.AdmAppCode != null && Object2.AdmAppCode != null )
			{
				if (Object1.AdmAppCode != Object2.AdmAppCode)
					equal = false;
			}
			else if (Object1.AdmAppCode == null ^ Object2.AdmAppCode == null )
			{
				equal = false;
			}
			if ( Object1.Username != null && Object2.Username != null )
			{
				if (Object1.Username != Object2.Username)
					equal = false;
			}
			else if (Object1.Username == null ^ Object2.Username == null )
			{
				equal = false;
			}
			if ( Object1.PasswordSalt != null && Object2.PasswordSalt != null )
			{
				if (Object1.PasswordSalt != Object2.PasswordSalt)
					equal = false;
			}
			else if (Object1.PasswordSalt == null ^ Object2.PasswordSalt == null )
			{
				equal = false;
			}
			if ( Object1.PasswordHash != null && Object2.PasswordHash != null )
			{
				if (Object1.PasswordHash != Object2.PasswordHash)
					equal = false;
			}
			else if (Object1.PasswordHash == null ^ Object2.PasswordHash == null )
			{
				equal = false;
			}
			if ( Object1.SecurityQs != null && Object2.SecurityQs != null )
			{
				if (Object1.SecurityQs != Object2.SecurityQs)
					equal = false;
			}
			else if (Object1.SecurityQs == null ^ Object2.SecurityQs == null )
			{
				equal = false;
			}
			if ( Object1.SecurityQsAnsSalt != null && Object2.SecurityQsAnsSalt != null )
			{
				if (Object1.SecurityQsAnsSalt != Object2.SecurityQsAnsSalt)
					equal = false;
			}
			else if (Object1.SecurityQsAnsSalt == null ^ Object2.SecurityQsAnsSalt == null )
			{
				equal = false;
			}
			if ( Object1.SecurityQsAnsHash != null && Object2.SecurityQsAnsHash != null )
			{
				if (Object1.SecurityQsAnsHash != Object2.SecurityQsAnsHash)
					equal = false;
			}
			else if (Object1.SecurityQsAnsHash == null ^ Object2.SecurityQsAnsHash == null )
			{
				equal = false;
			}
			if ( Object1.ActivationCode != null && Object2.ActivationCode != null )
			{
				if (Object1.ActivationCode != Object2.ActivationCode)
					equal = false;
			}
			else if (Object1.ActivationCode == null ^ Object2.ActivationCode == null )
			{
				equal = false;
			}
			if ( Object1.ActivationFlg != null && Object2.ActivationFlg != null )
			{
				if (Object1.ActivationFlg != Object2.ActivationFlg)
					equal = false;
			}
			else if (Object1.ActivationFlg == null ^ Object2.ActivationFlg == null )
			{
				equal = false;
			}
			if ( Object1.RegDate != null && Object2.RegDate != null )
			{
				if (Object1.RegDate != Object2.RegDate)
					equal = false;
			}
			else if (Object1.RegDate == null ^ Object2.RegDate == null )
			{
				equal = false;
			}
			if ( Object1.FnameAr != null && Object2.FnameAr != null )
			{
				if (Object1.FnameAr != Object2.FnameAr)
					equal = false;
			}
			else if (Object1.FnameAr == null ^ Object2.FnameAr == null )
			{
				equal = false;
			}
			if ( Object1.FnameEn != null && Object2.FnameEn != null )
			{
				if (Object1.FnameEn != Object2.FnameEn)
					equal = false;
			}
			else if (Object1.FnameEn == null ^ Object2.FnameEn == null )
			{
				equal = false;
			}
			if ( Object1.MnameAr != null && Object2.MnameAr != null )
			{
				if (Object1.MnameAr != Object2.MnameAr)
					equal = false;
			}
			else if (Object1.MnameAr == null ^ Object2.MnameAr == null )
			{
				equal = false;
			}
			if ( Object1.MnameEn != null && Object2.MnameEn != null )
			{
				if (Object1.MnameEn != Object2.MnameEn)
					equal = false;
			}
			else if (Object1.MnameEn == null ^ Object2.MnameEn == null )
			{
				equal = false;
			}
			if ( Object1.LnameAr != null && Object2.LnameAr != null )
			{
				if (Object1.LnameAr != Object2.LnameAr)
					equal = false;
			}
			else if (Object1.LnameAr == null ^ Object2.LnameAr == null )
			{
				equal = false;
			}
			if ( Object1.LnameEn != null && Object2.LnameEn != null )
			{
				if (Object1.LnameEn != Object2.LnameEn)
					equal = false;
			}
			else if (Object1.LnameEn == null ^ Object2.LnameEn == null )
			{
				equal = false;
			}
			if ( Object1.FamilyAr != null && Object2.FamilyAr != null )
			{
				if (Object1.FamilyAr != Object2.FamilyAr)
					equal = false;
			}
			else if (Object1.FamilyAr == null ^ Object2.FamilyAr == null )
			{
				equal = false;
			}
			if ( Object1.FamilyEn != null && Object2.FamilyEn != null )
			{
				if (Object1.FamilyEn != Object2.FamilyEn)
					equal = false;
			}
			else if (Object1.FamilyEn == null ^ Object2.FamilyEn == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeReligionId != null && Object2.GsCodeReligionId != null )
			{
				if (Object1.GsCodeReligionId != Object2.GsCodeReligionId)
					equal = false;
			}
			else if (Object1.GsCodeReligionId == null ^ Object2.GsCodeReligionId == null )
			{
				equal = false;
			}
			if ( Object1.Cpr != null && Object2.Cpr != null )
			{
				if (Object1.Cpr != Object2.Cpr)
					equal = false;
			}
			else if (Object1.Cpr == null ^ Object2.Cpr == null )
			{
				equal = false;
			}
			if ( Object1.PassporNo != null && Object2.PassporNo != null )
			{
				if (Object1.PassporNo != Object2.PassporNo)
					equal = false;
			}
			else if (Object1.PassporNo == null ^ Object2.PassporNo == null )
			{
				equal = false;
			}
			if ( Object1.PassporExpireDate != null && Object2.PassporExpireDate != null )
			{
				if (Object1.PassporExpireDate != Object2.PassporExpireDate)
					equal = false;
			}
			else if (Object1.PassporExpireDate == null ^ Object2.PassporExpireDate == null )
			{
				equal = false;
			}
			if ( Object1.Birthdate != null && Object2.Birthdate != null )
			{
				if (Object1.Birthdate != Object2.Birthdate)
					equal = false;
			}
			else if (Object1.Birthdate == null ^ Object2.Birthdate == null )
			{
				equal = false;
			}
			if ( Object1.PhotoPath != null && Object2.PhotoPath != null )
			{
				if (Object1.PhotoPath != Object2.PhotoPath)
					equal = false;
			}
			else if (Object1.PhotoPath == null ^ Object2.PhotoPath == null )
			{
				equal = false;
			}
			if ( Object1.GsCdeMaritalStatusId != null && Object2.GsCdeMaritalStatusId != null )
			{
				if (Object1.GsCdeMaritalStatusId != Object2.GsCdeMaritalStatusId)
					equal = false;
			}
			else if (Object1.GsCdeMaritalStatusId == null ^ Object2.GsCdeMaritalStatusId == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeGenderId != null && Object2.GsCodeGenderId != null )
			{
				if (Object1.GsCodeGenderId != Object2.GsCodeGenderId)
					equal = false;
			}
			else if (Object1.GsCodeGenderId == null ^ Object2.GsCodeGenderId == null )
			{
				equal = false;
			}
			if ( Object1.WorkFlg != null && Object2.WorkFlg != null )
			{
				if (Object1.WorkFlg != Object2.WorkFlg)
					equal = false;
			}
			else if (Object1.WorkFlg == null ^ Object2.WorkFlg == null )
			{
				equal = false;
			}
			if ( Object1.GsCountryNodeId != null && Object2.GsCountryNodeId != null )
			{
				if (Object1.GsCountryNodeId != Object2.GsCountryNodeId)
					equal = false;
			}
			else if (Object1.GsCountryNodeId == null ^ Object2.GsCountryNodeId == null )
			{
				equal = false;
			}
			if ( Object1.FullNameAr != null && Object2.FullNameAr != null )
			{
				if (Object1.FullNameAr != Object2.FullNameAr)
					equal = false;
			}
			else if (Object1.FullNameAr == null ^ Object2.FullNameAr == null )
			{
				equal = false;
			}
			if ( Object1.FullNameEn != null && Object2.FullNameEn != null )
			{
				if (Object1.FullNameEn != Object2.FullNameEn)
					equal = false;
			}
			else if (Object1.FullNameEn == null ^ Object2.FullNameEn == null )
			{
				equal = false;
			}
			if ( Object1.ResidentId != null && Object2.ResidentId != null )
			{
				if (Object1.ResidentId != Object2.ResidentId)
					equal = false;
			}
			else if (Object1.ResidentId == null ^ Object2.ResidentId == null )
			{
				equal = false;
			}
			if ( Object1.ResidentExpireDate != null && Object2.ResidentExpireDate != null )
			{
				if (Object1.ResidentExpireDate != Object2.ResidentExpireDate)
					equal = false;
			}
			else if (Object1.ResidentExpireDate == null ^ Object2.ResidentExpireDate == null )
			{
				equal = false;
			}
			if ( Object1.GsBirthCountryNodeId != null && Object2.GsBirthCountryNodeId != null )
			{
				if (Object1.GsBirthCountryNodeId != Object2.GsBirthCountryNodeId)
					equal = false;
			}
			else if (Object1.GsBirthCountryNodeId == null ^ Object2.GsBirthCountryNodeId == null )
			{
				equal = false;
			}
			if ( Object1.EdStudId != null && Object2.EdStudId != null )
			{
				if (Object1.EdStudId != Object2.EdStudId)
					equal = false;
			}
			else if (Object1.EdStudId == null ^ Object2.EdStudId == null )
			{
				equal = false;
			}
			if ( Object1.LoyaltyFlg != null && Object2.LoyaltyFlg != null )
			{
				if (Object1.LoyaltyFlg != Object2.LoyaltyFlg)
					equal = false;
			}
			else if (Object1.LoyaltyFlg == null ^ Object2.LoyaltyFlg == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeLanguageId != null && Object2.GsCodeLanguageId != null )
			{
				if (Object1.GsCodeLanguageId != Object2.GsCodeLanguageId)
					equal = false;
			}
			else if (Object1.GsCodeLanguageId == null ^ Object2.GsCodeLanguageId == null )
			{
				equal = false;
			}
			if ( Object1.PassporIssueDate != null && Object2.PassporIssueDate != null )
			{
				if (Object1.PassporIssueDate != Object2.PassporIssueDate)
					equal = false;
			}
			else if (Object1.PassporIssueDate == null ^ Object2.PassporIssueDate == null )
			{
				equal = false;
			}
			if ( Object1.SpecialNeedFlg != null && Object2.SpecialNeedFlg != null )
			{
				if (Object1.SpecialNeedFlg != Object2.SpecialNeedFlg)
					equal = false;
			}
			else if (Object1.SpecialNeedFlg == null ^ Object2.SpecialNeedFlg == null )
			{
				equal = false;
			}
			if ( Object1.IdentIssueDate != null && Object2.IdentIssueDate != null )
			{
				if (Object1.IdentIssueDate != Object2.IdentIssueDate)
					equal = false;
			}
			else if (Object1.IdentIssueDate == null ^ Object2.IdentIssueDate == null )
			{
				equal = false;
			}
			if ( Object1.IdentExpireDate != null && Object2.IdentExpireDate != null )
			{
				if (Object1.IdentExpireDate != Object2.IdentExpireDate)
					equal = false;
			}
			else if (Object1.IdentExpireDate == null ^ Object2.IdentExpireDate == null )
			{
				equal = false;
			}
			if ( Object1.IdentIssuePlc != null && Object2.IdentIssuePlc != null )
			{
				if (Object1.IdentIssuePlc != Object2.IdentIssuePlc)
					equal = false;
			}
			else if (Object1.IdentIssuePlc == null ^ Object2.IdentIssuePlc == null )
			{
				equal = false;
			}
			if ( Object1.VisaNumber != null && Object2.VisaNumber != null )
			{
				if (Object1.VisaNumber != Object2.VisaNumber)
					equal = false;
			}
			else if (Object1.VisaNumber == null ^ Object2.VisaNumber == null )
			{
				equal = false;
			}
			if ( Object1.VisaIssueDate != null && Object2.VisaIssueDate != null )
			{
				if (Object1.VisaIssueDate != Object2.VisaIssueDate)
					equal = false;
			}
			else if (Object1.VisaIssueDate == null ^ Object2.VisaIssueDate == null )
			{
				equal = false;
			}
			if ( Object1.VisaExpireDate != null && Object2.VisaExpireDate != null )
			{
				if (Object1.VisaExpireDate != Object2.VisaExpireDate)
					equal = false;
			}
			else if (Object1.VisaExpireDate == null ^ Object2.VisaExpireDate == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
			if ( Object1.EdCdeSocialAffairId != null && Object2.EdCdeSocialAffairId != null )
			{
				if (Object1.EdCdeSocialAffairId != Object2.EdCdeSocialAffairId)
					equal = false;
			}
			else if (Object1.EdCdeSocialAffairId == null ^ Object2.EdCdeSocialAffairId == null )
			{
				equal = false;
			}
			if ( Object1.PucFlg != null && Object2.PucFlg != null )
			{
				if (Object1.PucFlg != Object2.PucFlg)
					equal = false;
			}
			else if (Object1.PucFlg == null ^ Object2.PucFlg == null )
			{
				equal = false;
			}
			if ( Object1.NoChild != null && Object2.NoChild != null )
			{
				if (Object1.NoChild != Object2.NoChild)
					equal = false;
			}
			else if (Object1.NoChild == null ^ Object2.NoChild == null )
			{
				equal = false;
			}
			if ( Object1.HighQualFlg != null && Object2.HighQualFlg != null )
			{
				if (Object1.HighQualFlg != Object2.HighQualFlg)
					equal = false;
			}
			else if (Object1.HighQualFlg == null ^ Object2.HighQualFlg == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((AdmApplicantBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static AdmApplicantComparer GetComparer()
        {
            return new AdmApplicantComparer();
        }
        */

        // Comparer delegates back to AdmApplicant
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(AdmApplicant rhs, AdmApplicantColumn which)
        {
            switch (which)
            {
            	
            	
            	case AdmApplicantColumn.AdmApplicantId:
            		return this.AdmApplicantId.CompareTo(rhs.AdmApplicantId);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.AdmAppCode:
            		return this.AdmAppCode.CompareTo(rhs.AdmAppCode);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.Username:
            		return this.Username.CompareTo(rhs.Username);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.PasswordSalt:
            		return this.PasswordSalt.CompareTo(rhs.PasswordSalt);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.PasswordHash:
            		return this.PasswordHash.CompareTo(rhs.PasswordHash);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.SecurityQs:
            		return this.SecurityQs.CompareTo(rhs.SecurityQs);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.SecurityQsAnsSalt:
            		return this.SecurityQsAnsSalt.CompareTo(rhs.SecurityQsAnsSalt);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.SecurityQsAnsHash:
            		return this.SecurityQsAnsHash.CompareTo(rhs.SecurityQsAnsHash);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.ActivationCode:
            		return this.ActivationCode.CompareTo(rhs.ActivationCode);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.ActivationFlg:
            		return this.ActivationFlg.Value.CompareTo(rhs.ActivationFlg.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.RegDate:
            		return this.RegDate.Value.CompareTo(rhs.RegDate.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.FnameAr:
            		return this.FnameAr.CompareTo(rhs.FnameAr);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.FnameEn:
            		return this.FnameEn.CompareTo(rhs.FnameEn);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.MnameAr:
            		return this.MnameAr.CompareTo(rhs.MnameAr);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.MnameEn:
            		return this.MnameEn.CompareTo(rhs.MnameEn);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.LnameAr:
            		return this.LnameAr.CompareTo(rhs.LnameAr);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.LnameEn:
            		return this.LnameEn.CompareTo(rhs.LnameEn);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.FamilyAr:
            		return this.FamilyAr.CompareTo(rhs.FamilyAr);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.FamilyEn:
            		return this.FamilyEn.CompareTo(rhs.FamilyEn);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.GsCodeReligionId:
            		return this.GsCodeReligionId.Value.CompareTo(rhs.GsCodeReligionId.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.Cpr:
            		return this.Cpr.CompareTo(rhs.Cpr);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.PassporNo:
            		return this.PassporNo.CompareTo(rhs.PassporNo);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.PassporExpireDate:
            		return this.PassporExpireDate.Value.CompareTo(rhs.PassporExpireDate.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.Birthdate:
            		return this.Birthdate.Value.CompareTo(rhs.Birthdate.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.PhotoPath:
            		return this.PhotoPath.CompareTo(rhs.PhotoPath);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.GsCdeMaritalStatusId:
            		return this.GsCdeMaritalStatusId.Value.CompareTo(rhs.GsCdeMaritalStatusId.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.GsCodeGenderId:
            		return this.GsCodeGenderId.Value.CompareTo(rhs.GsCodeGenderId.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.WorkFlg:
            		return this.WorkFlg.Value.CompareTo(rhs.WorkFlg.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.GsCountryNodeId:
            		return this.GsCountryNodeId.Value.CompareTo(rhs.GsCountryNodeId.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.FullNameAr:
            		return this.FullNameAr.CompareTo(rhs.FullNameAr);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.FullNameEn:
            		return this.FullNameEn.CompareTo(rhs.FullNameEn);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.ResidentId:
            		return this.ResidentId.CompareTo(rhs.ResidentId);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.ResidentExpireDate:
            		return this.ResidentExpireDate.Value.CompareTo(rhs.ResidentExpireDate.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.GsBirthCountryNodeId:
            		return this.GsBirthCountryNodeId.Value.CompareTo(rhs.GsBirthCountryNodeId.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.EdStudId:
            		return this.EdStudId.Value.CompareTo(rhs.EdStudId.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.LoyaltyFlg:
            		return this.LoyaltyFlg.Value.CompareTo(rhs.LoyaltyFlg.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.GsCodeLanguageId:
            		return this.GsCodeLanguageId.Value.CompareTo(rhs.GsCodeLanguageId.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.PassporIssueDate:
            		return this.PassporIssueDate.Value.CompareTo(rhs.PassporIssueDate.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.SpecialNeedFlg:
            		return this.SpecialNeedFlg.Value.CompareTo(rhs.SpecialNeedFlg.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.IdentIssueDate:
            		return this.IdentIssueDate.Value.CompareTo(rhs.IdentIssueDate.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.IdentExpireDate:
            		return this.IdentExpireDate.Value.CompareTo(rhs.IdentExpireDate.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.IdentIssuePlc:
            		return this.IdentIssuePlc.CompareTo(rhs.IdentIssuePlc);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.VisaNumber:
            		return this.VisaNumber.CompareTo(rhs.VisaNumber);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.VisaIssueDate:
            		return this.VisaIssueDate.Value.CompareTo(rhs.VisaIssueDate.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.VisaExpireDate:
            		return this.VisaExpireDate.Value.CompareTo(rhs.VisaExpireDate.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.EdCdeSocialAffairId:
            		return this.EdCdeSocialAffairId.Value.CompareTo(rhs.EdCdeSocialAffairId.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.PucFlg:
            		return this.PucFlg.Value.CompareTo(rhs.PucFlg.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.NoChild:
            		return this.NoChild.Value.CompareTo(rhs.NoChild.Value);
            		
            		                 
            	
            	
            	case AdmApplicantColumn.HighQualFlg:
            		return this.HighQualFlg.Value.CompareTo(rhs.HighQualFlg.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<AdmApplicantKey> Members
		
		// member variable for the EntityId property
		private AdmApplicantKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual AdmApplicantKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new AdmApplicantKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("AdmApplicant")
					.Append("|").Append( this.AdmApplicantId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{52}{51}- AdmApplicantId: {0}{51}- AdmAppCode: {1}{51}- Username: {2}{51}- PasswordSalt: {3}{51}- PasswordHash: {4}{51}- SecurityQs: {5}{51}- SecurityQsAnsSalt: {6}{51}- SecurityQsAnsHash: {7}{51}- ActivationCode: {8}{51}- ActivationFlg: {9}{51}- RegDate: {10}{51}- FnameAr: {11}{51}- FnameEn: {12}{51}- MnameAr: {13}{51}- MnameEn: {14}{51}- LnameAr: {15}{51}- LnameEn: {16}{51}- FamilyAr: {17}{51}- FamilyEn: {18}{51}- GsCodeReligionId: {19}{51}- Cpr: {20}{51}- PassporNo: {21}{51}- PassporExpireDate: {22}{51}- Birthdate: {23}{51}- PhotoPath: {24}{51}- GsCdeMaritalStatusId: {25}{51}- GsCodeGenderId: {26}{51}- WorkFlg: {27}{51}- GsCountryNodeId: {28}{51}- FullNameAr: {29}{51}- FullNameEn: {30}{51}- ResidentId: {31}{51}- ResidentExpireDate: {32}{51}- GsBirthCountryNodeId: {33}{51}- EdStudId: {34}{51}- LoyaltyFlg: {35}{51}- GsCodeLanguageId: {36}{51}- PassporIssueDate: {37}{51}- SpecialNeedFlg: {38}{51}- IdentIssueDate: {39}{51}- IdentExpireDate: {40}{51}- IdentIssuePlc: {41}{51}- VisaNumber: {42}{51}- VisaIssueDate: {43}{51}- VisaExpireDate: {44}{51}- LastDate: {45}{51}- SeUserId: {46}{51}- EdCdeSocialAffairId: {47}{51}- PucFlg: {48}{51}- NoChild: {49}{51}- HighQualFlg: {50}{51}{53}", 
				this.AdmApplicantId,
				(this.AdmAppCode == null) ? string.Empty : this.AdmAppCode.ToString(),
				(this.Username == null) ? string.Empty : this.Username.ToString(),
				(this.PasswordSalt == null) ? string.Empty : this.PasswordSalt.ToString(),
				(this.PasswordHash == null) ? string.Empty : this.PasswordHash.ToString(),
				(this.SecurityQs == null) ? string.Empty : this.SecurityQs.ToString(),
				(this.SecurityQsAnsSalt == null) ? string.Empty : this.SecurityQsAnsSalt.ToString(),
				(this.SecurityQsAnsHash == null) ? string.Empty : this.SecurityQsAnsHash.ToString(),
				(this.ActivationCode == null) ? string.Empty : this.ActivationCode.ToString(),
				(this.ActivationFlg == null) ? string.Empty : this.ActivationFlg.ToString(),
				(this.RegDate == null) ? string.Empty : this.RegDate.ToString(),
				(this.FnameAr == null) ? string.Empty : this.FnameAr.ToString(),
				(this.FnameEn == null) ? string.Empty : this.FnameEn.ToString(),
				(this.MnameAr == null) ? string.Empty : this.MnameAr.ToString(),
				(this.MnameEn == null) ? string.Empty : this.MnameEn.ToString(),
				(this.LnameAr == null) ? string.Empty : this.LnameAr.ToString(),
				(this.LnameEn == null) ? string.Empty : this.LnameEn.ToString(),
				(this.FamilyAr == null) ? string.Empty : this.FamilyAr.ToString(),
				(this.FamilyEn == null) ? string.Empty : this.FamilyEn.ToString(),
				(this.GsCodeReligionId == null) ? string.Empty : this.GsCodeReligionId.ToString(),
				(this.Cpr == null) ? string.Empty : this.Cpr.ToString(),
				(this.PassporNo == null) ? string.Empty : this.PassporNo.ToString(),
				(this.PassporExpireDate == null) ? string.Empty : this.PassporExpireDate.ToString(),
				(this.Birthdate == null) ? string.Empty : this.Birthdate.ToString(),
				(this.PhotoPath == null) ? string.Empty : this.PhotoPath.ToString(),
				(this.GsCdeMaritalStatusId == null) ? string.Empty : this.GsCdeMaritalStatusId.ToString(),
				(this.GsCodeGenderId == null) ? string.Empty : this.GsCodeGenderId.ToString(),
				(this.WorkFlg == null) ? string.Empty : this.WorkFlg.ToString(),
				(this.GsCountryNodeId == null) ? string.Empty : this.GsCountryNodeId.ToString(),
				(this.FullNameAr == null) ? string.Empty : this.FullNameAr.ToString(),
				(this.FullNameEn == null) ? string.Empty : this.FullNameEn.ToString(),
				(this.ResidentId == null) ? string.Empty : this.ResidentId.ToString(),
				(this.ResidentExpireDate == null) ? string.Empty : this.ResidentExpireDate.ToString(),
				(this.GsBirthCountryNodeId == null) ? string.Empty : this.GsBirthCountryNodeId.ToString(),
				(this.EdStudId == null) ? string.Empty : this.EdStudId.ToString(),
				(this.LoyaltyFlg == null) ? string.Empty : this.LoyaltyFlg.ToString(),
				(this.GsCodeLanguageId == null) ? string.Empty : this.GsCodeLanguageId.ToString(),
				(this.PassporIssueDate == null) ? string.Empty : this.PassporIssueDate.ToString(),
				(this.SpecialNeedFlg == null) ? string.Empty : this.SpecialNeedFlg.ToString(),
				(this.IdentIssueDate == null) ? string.Empty : this.IdentIssueDate.ToString(),
				(this.IdentExpireDate == null) ? string.Empty : this.IdentExpireDate.ToString(),
				(this.IdentIssuePlc == null) ? string.Empty : this.IdentIssuePlc.ToString(),
				(this.VisaNumber == null) ? string.Empty : this.VisaNumber.ToString(),
				(this.VisaIssueDate == null) ? string.Empty : this.VisaIssueDate.ToString(),
				(this.VisaExpireDate == null) ? string.Empty : this.VisaExpireDate.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				(this.EdCdeSocialAffairId == null) ? string.Empty : this.EdCdeSocialAffairId.ToString(),
				(this.PucFlg == null) ? string.Empty : this.PucFlg.ToString(),
				(this.NoChild == null) ? string.Empty : this.NoChild.ToString(),
				(this.HighQualFlg == null) ? string.Empty : this.HighQualFlg.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ADM_APPLICANT' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class AdmApplicantEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ADM_APPLICANT_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ADM_APPLICANT"</remarks>
		public System.Decimal AdmApplicantId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalAdmApplicantId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// ADM_APP_CODE : 
		/// </summary>
		public System.String		  AdmAppCode = null;
		
		/// <summary>
		/// USERNAME : 
		/// </summary>
		public System.String		  Username = null;
		
		/// <summary>
		/// PASSWORD_SALT : 
		/// </summary>
		public System.String		  PasswordSalt = null;
		
		/// <summary>
		/// PASSWORD_HASH : 
		/// </summary>
		public System.String		  PasswordHash = null;
		
		/// <summary>
		/// SECURITY_QS : 
		/// </summary>
		public System.String		  SecurityQs = null;
		
		/// <summary>
		/// SECURITY_QS_ANS_SALT : 
		/// </summary>
		public System.String		  SecurityQsAnsSalt = null;
		
		/// <summary>
		/// SECURITY_QS_ANS_HASH : 
		/// </summary>
		public System.String		  SecurityQsAnsHash = null;
		
		/// <summary>
		/// ACTIVATION_CODE : 
		/// </summary>
		public System.String		  ActivationCode = null;
		
		/// <summary>
		/// ACTIVATION_FLG : 
		/// </summary>
		public System.Decimal?		  ActivationFlg = null;
		
		/// <summary>
		/// REG_DATE : 
		/// </summary>
		public System.DateTime?		  RegDate = null;
		
		/// <summary>
		/// FNAME_AR : 
		/// </summary>
		public System.String		  FnameAr = null;
		
		/// <summary>
		/// FNAME_EN : 
		/// </summary>
		public System.String		  FnameEn = null;
		
		/// <summary>
		/// MNAME_AR : 
		/// </summary>
		public System.String		  MnameAr = null;
		
		/// <summary>
		/// MNAME_EN : 
		/// </summary>
		public System.String		  MnameEn = null;
		
		/// <summary>
		/// LNAME_AR : 
		/// </summary>
		public System.String		  LnameAr = null;
		
		/// <summary>
		/// LNAME_EN : 
		/// </summary>
		public System.String		  LnameEn = null;
		
		/// <summary>
		/// FAMILY_AR : 
		/// </summary>
		public System.String		  FamilyAr = null;
		
		/// <summary>
		/// FAMILY_EN : 
		/// </summary>
		public System.String		  FamilyEn = null;
		
		/// <summary>
		/// GS_CODE_RELIGION_ID : 
		/// </summary>
		public System.Decimal?		  GsCodeReligionId = null;
		
		/// <summary>
		/// CPR : 
		/// </summary>
		public System.String		  Cpr = null;
		
		/// <summary>
		/// PASSPOR_NO : 
		/// </summary>
		public System.String		  PassporNo = null;
		
		/// <summary>
		/// PASSPOR_EXPIRE_DATE : 
		/// </summary>
		public System.DateTime?		  PassporExpireDate = null;
		
		/// <summary>
		/// BIRTHDATE : 
		/// </summary>
		public System.DateTime?		  Birthdate = null;
		
		/// <summary>
		/// PHOTO_PATH : 
		/// </summary>
		public System.String		  PhotoPath = null;
		
		/// <summary>
		/// GS_CDE_MARITAL_STATUS_ID : 
		/// </summary>
		public System.Decimal?		  GsCdeMaritalStatusId = null;
		
		/// <summary>
		/// GS_CODE_GENDER_ID : 
		/// </summary>
		public System.Decimal?		  GsCodeGenderId = null;
		
		/// <summary>
		/// WORK_FLG : 
		/// </summary>
		public System.Decimal?		  WorkFlg = null;
		
		/// <summary>
		/// GS_COUNTRY_NODE_ID : الجنسية
		/// </summary>
		public System.Decimal?		  GsCountryNodeId = null;
		
		/// <summary>
		/// FULL_NAME_AR : 
		/// </summary>
		public System.String		  FullNameAr = null;
		
		/// <summary>
		/// FULL_NAME_EN : 
		/// </summary>
		public System.String		  FullNameEn = null;
		
		/// <summary>
		/// RESIDENT_ID : 
		/// </summary>
		public System.String		  ResidentId = null;
		
		/// <summary>
		/// RESIDENT_EXPIRE_DATE : 
		/// </summary>
		public System.DateTime?		  ResidentExpireDate = null;
		
		/// <summary>
		/// GS_BIRTH_COUNTRY_NODE_ID : مكان الميلاد
		/// </summary>
		public System.Decimal?		  GsBirthCountryNodeId = null;
		
		/// <summary>
		/// ED_STUD_ID : 
		/// </summary>
		public System.Decimal?		  EdStudId = null;
		
		/// <summary>
		/// LOYALTY_FLG : 
		/// </summary>
		public System.Decimal?		  LoyaltyFlg = null;
		
		/// <summary>
		/// GS_CODE_LANGUAGE_ID : لغة التخصص
		/// </summary>
		public System.Decimal?		  GsCodeLanguageId = null;
		
		/// <summary>
		/// PASSPOR_ISSUE_DATE : 
		/// </summary>
		public System.DateTime?		  PassporIssueDate = null;
		
		/// <summary>
		/// SPECIAL_NEED_FLG : 
		/// </summary>
		public System.Boolean?		  SpecialNeedFlg = null;
		
		/// <summary>
		/// IDENT_ISSUE_DATE : 
		/// </summary>
		public System.DateTime?		  IdentIssueDate = null;
		
		/// <summary>
		/// IDENT_EXPIRE_DATE : 
		/// </summary>
		public System.DateTime?		  IdentExpireDate = null;
		
		/// <summary>
		/// IDENT_ISSUE_PLC : مكان اصدار
		/// </summary>
		public System.String		  IdentIssuePlc = null;
		
		/// <summary>
		/// VISA_NUMBER : رقم التأشيرة
		/// </summary>
		public System.String		  VisaNumber = null;
		
		/// <summary>
		/// VISA_ISSUE_DATE : 
		/// </summary>
		public System.DateTime?		  VisaIssueDate = null;
		
		/// <summary>
		/// VISA_EXPIRE_DATE : 
		/// </summary>
		public System.DateTime?		  VisaExpireDate = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		
		/// <summary>
		/// ED_CDE_SOCIAL_AFFAIR_ID : نوع الشؤن الاجتماعية CSS
		/// </summary>
		public System.Int32?		  EdCdeSocialAffairId = null;
		
		/// <summary>
		/// PUC_FLG : كفيل
		/// </summary>
		public System.Boolean?		  PucFlg = null;
		
		/// <summary>
		/// NO_CHILD : PG Ejust
		/// </summary>
		public System.Int32?		  NoChild = null;
		
		/// <summary>
		/// HIGH_QUAL_FLG : Deraya UG طالب حاصل على بكالريوس
		/// </summary>
		public System.Boolean?		  HighQualFlg = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private EdCdeSocialAffair _edCdeSocialAffairIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCdeSocialAffair"/>.
		/// </summary>
		/// <value>The source EdCdeSocialAffair for EdCdeSocialAffairId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCdeSocialAffair EdCdeSocialAffairIdSource
      	{
            get { return this._edCdeSocialAffairIdSource; }
            set { this._edCdeSocialAffairIdSource = value; }
      	}
		private EdStud _edStudIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStud"/>.
		/// </summary>
		/// <value>The source EdStud for EdStudId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStud EdStudIdSource
      	{
            get { return this._edStudIdSource; }
            set { this._edStudIdSource = value; }
      	}
		private GsCodeLanguage _gsCodeLanguageIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeLanguage"/>.
		/// </summary>
		/// <value>The source GsCodeLanguage for GsCodeLanguageId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeLanguage GsCodeLanguageIdSource
      	{
            get { return this._gsCodeLanguageIdSource; }
            set { this._gsCodeLanguageIdSource = value; }
      	}
		private GsCountryNode _gsCountryNodeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryNodeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCountryNode GsCountryNodeIdSource
      	{
            get { return this._gsCountryNodeIdSource; }
            set { this._gsCountryNodeIdSource = value; }
      	}
		private GsCountryNode _gsBirthCountryNodeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsBirthCountryNodeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCountryNode GsBirthCountryNodeIdSource
      	{
            get { return this._gsBirthCountryNodeIdSource; }
            set { this._gsBirthCountryNodeIdSource = value; }
      	}
		private GsCdeMaritalStatus _gsCdeMaritalStatusIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeMaritalStatus"/>.
		/// </summary>
		/// <value>The source GsCdeMaritalStatus for GsCdeMaritalStatusId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeMaritalStatus GsCdeMaritalStatusIdSource
      	{
            get { return this._gsCdeMaritalStatusIdSource; }
            set { this._gsCdeMaritalStatusIdSource = value; }
      	}
		private GsCodeGender _gsCodeGenderIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeGender"/>.
		/// </summary>
		/// <value>The source GsCodeGender for GsCodeGenderId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeGender GsCodeGenderIdSource
      	{
            get { return this._gsCodeGenderIdSource; }
            set { this._gsCodeGenderIdSource = value; }
      	}
		private GsCodeReligion _gsCodeReligionIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeReligion"/>.
		/// </summary>
		/// <value>The source GsCodeReligion for GsCodeReligionId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeReligion GsCodeReligionIdSource
      	{
            get { return this._gsCodeReligionIdSource; }
            set { this._gsCodeReligionIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region SvUserMessageCollection
		
		private TList<SvUserMessage> _svUserMessageAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svUserMessageAdmApplicantId
		/// </summary>
		
		public TList<SvUserMessage> SvUserMessageCollection
		{
			get
			{
				if (_svUserMessageAdmApplicantId == null)
				{
				_svUserMessageAdmApplicantId = new TList<SvUserMessage>();
				}
	
				return _svUserMessageAdmApplicantId;
			}
			set { _svUserMessageAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppRegHistoryCollection
		
		private TList<AdmAppRegHistory> _admAppRegHistoryAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppRegHistoryAdmApplicantId
		/// </summary>
		
		public TList<AdmAppRegHistory> AdmAppRegHistoryCollection
		{
			get
			{
				if (_admAppRegHistoryAdmApplicantId == null)
				{
				_admAppRegHistoryAdmApplicantId = new TList<AdmAppRegHistory>();
				}
	
				return _admAppRegHistoryAdmApplicantId;
			}
			set { _admAppRegHistoryAdmApplicantId = value; }
		}
		
		#endregion

		#region SvSrvyRespondQstnCollection
		
		private TList<SvSrvyRespondQstn> _svSrvyRespondQstnAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svSrvyRespondQstnAdmApplicantId
		/// </summary>
		
		public TList<SvSrvyRespondQstn> SvSrvyRespondQstnCollection
		{
			get
			{
				if (_svSrvyRespondQstnAdmApplicantId == null)
				{
				_svSrvyRespondQstnAdmApplicantId = new TList<SvSrvyRespondQstn>();
				}
	
				return _svSrvyRespondQstnAdmApplicantId;
			}
			set { _svSrvyRespondQstnAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmScholorshipCollection
		
		private TList<AdmScholorship> _admScholorshipAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admScholorshipAdmApplicantId
		/// </summary>
		
		public TList<AdmScholorship> AdmScholorshipCollection
		{
			get
			{
				if (_admScholorshipAdmApplicantId == null)
				{
				_admScholorshipAdmApplicantId = new TList<AdmScholorship>();
				}
	
				return _admScholorshipAdmApplicantId;
			}
			set { _admScholorshipAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmOutboxCollectionGetByOutMsgAppFrom
		
		private TList<AdmOutbox> _admOutboxOutMsgAppToGetByOutMsgAppFrom;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admOutboxOutMsgAppToGetByOutMsgAppFrom
		/// </summary>
		
		public TList<AdmOutbox> AdmOutboxCollectionGetByOutMsgAppFrom
		{
			get
			{
				if (_admOutboxOutMsgAppToGetByOutMsgAppFrom == null)
				{
				_admOutboxOutMsgAppToGetByOutMsgAppFrom = new TList<AdmOutbox>();
				}
	
				return _admOutboxOutMsgAppToGetByOutMsgAppFrom;
			}
			set { _admOutboxOutMsgAppToGetByOutMsgAppFrom = value; }
		}
		
		#endregion

		#region EdStudGuardCollection
		
		private TList<EdStudGuard> _edStudGuardAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudGuardAdmApplicantId
		/// </summary>
		
		public TList<EdStudGuard> EdStudGuardCollection
		{
			get
			{
				if (_edStudGuardAdmApplicantId == null)
				{
				_edStudGuardAdmApplicantId = new TList<EdStudGuard>();
				}
	
				return _edStudGuardAdmApplicantId;
			}
			set { _edStudGuardAdmApplicantId = value; }
		}
		
		#endregion

		#region FeeRefndStdReqCollection
		
		private TList<FeeRefndStdReq> _feeRefndStdReqAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeRefndStdReqAdmApplicantId
		/// </summary>
		
		public TList<FeeRefndStdReq> FeeRefndStdReqCollection
		{
			get
			{
				if (_feeRefndStdReqAdmApplicantId == null)
				{
				_feeRefndStdReqAdmApplicantId = new TList<FeeRefndStdReq>();
				}
	
				return _feeRefndStdReqAdmApplicantId;
			}
			set { _feeRefndStdReqAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppPlaceExamCourseCollection
		
		private TList<AdmAppPlaceExamCourse> _admAppPlaceExamCourseAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppPlaceExamCourseAdmApplicantId
		/// </summary>
		
		public TList<AdmAppPlaceExamCourse> AdmAppPlaceExamCourseCollection
		{
			get
			{
				if (_admAppPlaceExamCourseAdmApplicantId == null)
				{
				_admAppPlaceExamCourseAdmApplicantId = new TList<AdmAppPlaceExamCourse>();
				}
	
				return _admAppPlaceExamCourseAdmApplicantId;
			}
			set { _admAppPlaceExamCourseAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppHonorCollection
		
		private TList<AdmAppHonor> _admAppHonorAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppHonorAdmApplicantId
		/// </summary>
		
		public TList<AdmAppHonor> AdmAppHonorCollection
		{
			get
			{
				if (_admAppHonorAdmApplicantId == null)
				{
				_admAppHonorAdmApplicantId = new TList<AdmAppHonor>();
				}
	
				return _admAppHonorAdmApplicantId;
			}
			set { _admAppHonorAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppDocCollection
		
		private TList<AdmAppDoc> _admAppDocAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppDocAdmApplicantId
		/// </summary>
		
		public TList<AdmAppDoc> AdmAppDocCollection
		{
			get
			{
				if (_admAppDocAdmApplicantId == null)
				{
				_admAppDocAdmApplicantId = new TList<AdmAppDoc>();
				}
	
				return _admAppDocAdmApplicantId;
			}
			set { _admAppDocAdmApplicantId = value; }
		}
		
		#endregion

		#region EdStudNoteCollection
		
		private TList<EdStudNote> _edStudNoteAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudNoteAdmApplicantId
		/// </summary>
		
		public TList<EdStudNote> EdStudNoteCollection
		{
			get
			{
				if (_edStudNoteAdmApplicantId == null)
				{
				_edStudNoteAdmApplicantId = new TList<EdStudNote>();
				}
	
				return _edStudNoteAdmApplicantId;
			}
			set { _edStudNoteAdmApplicantId = value; }
		}
		
		#endregion

		#region EdStudActivityCollection
		
		private TList<EdStudActivity> _edStudActivityAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudActivityAdmApplicantId
		/// </summary>
		
		public TList<EdStudActivity> EdStudActivityCollection
		{
			get
			{
				if (_edStudActivityAdmApplicantId == null)
				{
				_edStudActivityAdmApplicantId = new TList<EdStudActivity>();
				}
	
				return _edStudActivityAdmApplicantId;
			}
			set { _edStudActivityAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmOutboxCollectionGetByOutMsgAppTo
		
		private TList<AdmOutbox> _admOutboxOutMsgAppToGetByOutMsgAppTo;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admOutboxOutMsgAppToGetByOutMsgAppTo
		/// </summary>
		
		public TList<AdmOutbox> AdmOutboxCollectionGetByOutMsgAppTo
		{
			get
			{
				if (_admOutboxOutMsgAppToGetByOutMsgAppTo == null)
				{
				_admOutboxOutMsgAppToGetByOutMsgAppTo = new TList<AdmOutbox>();
				}
	
				return _admOutboxOutMsgAppToGetByOutMsgAppTo;
			}
			set { _admOutboxOutMsgAppToGetByOutMsgAppTo = value; }
		}
		
		#endregion

		#region AdmRsrvdCodeCollection
		
		private TList<AdmRsrvdCode> _admRsrvdCodeAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admRsrvdCodeAdmApplicantId
		/// </summary>
		
		public TList<AdmRsrvdCode> AdmRsrvdCodeCollection
		{
			get
			{
				if (_admRsrvdCodeAdmApplicantId == null)
				{
				_admRsrvdCodeAdmApplicantId = new TList<AdmRsrvdCode>();
				}
	
				return _admRsrvdCodeAdmApplicantId;
			}
			set { _admRsrvdCodeAdmApplicantId = value; }
		}
		
		#endregion

		#region SvMessageCollection
		
		private TList<SvMessage> _svMessageAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svMessageAdmApplicantId
		/// </summary>
		
		public TList<SvMessage> SvMessageCollection
		{
			get
			{
				if (_svMessageAdmApplicantId == null)
				{
				_svMessageAdmApplicantId = new TList<SvMessage>();
				}
	
				return _svMessageAdmApplicantId;
			}
			set { _svMessageAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppInfoCollection
		
		private TList<AdmAppInfo> _admAppInfoAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppInfoAdmApplicantId
		/// </summary>
		
		public TList<AdmAppInfo> AdmAppInfoCollection
		{
			get
			{
				if (_admAppInfoAdmApplicantId == null)
				{
				_admAppInfoAdmApplicantId = new TList<AdmAppInfo>();
				}
	
				return _admAppInfoAdmApplicantId;
			}
			set { _admAppInfoAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppCourseCompCollection
		
		private TList<AdmAppCourseComp> _admAppCourseCompAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppCourseCompAdmApplicantId
		/// </summary>
		
		public TList<AdmAppCourseComp> AdmAppCourseCompCollection
		{
			get
			{
				if (_admAppCourseCompAdmApplicantId == null)
				{
				_admAppCourseCompAdmApplicantId = new TList<AdmAppCourseComp>();
				}
	
				return _admAppCourseCompAdmApplicantId;
			}
			set { _admAppCourseCompAdmApplicantId = value; }
		}
		
		#endregion

		#region GsAddressDtlCollection
		
		private TList<GsAddressDtl> _gsAddressDtlAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _gsAddressDtlAdmApplicantId
		/// </summary>
		
		public TList<GsAddressDtl> GsAddressDtlCollection
		{
			get
			{
				if (_gsAddressDtlAdmApplicantId == null)
				{
				_gsAddressDtlAdmApplicantId = new TList<GsAddressDtl>();
				}
	
				return _gsAddressDtlAdmApplicantId;
			}
			set { _gsAddressDtlAdmApplicantId = value; }
		}
		
		#endregion

		#region EdStudLangCollection
		
		private TList<EdStudLang> _edStudLangAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudLangAdmApplicantId
		/// </summary>
		
		public TList<EdStudLang> EdStudLangCollection
		{
			get
			{
				if (_edStudLangAdmApplicantId == null)
				{
				_edStudLangAdmApplicantId = new TList<EdStudLang>();
				}
	
				return _edStudLangAdmApplicantId;
			}
			set { _edStudLangAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppPrefCollection
		
		private TList<AdmAppPref> _admAppPrefAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppPrefAdmApplicantId
		/// </summary>
		
		public TList<AdmAppPref> AdmAppPrefCollection
		{
			get
			{
				if (_admAppPrefAdmApplicantId == null)
				{
				_admAppPrefAdmApplicantId = new TList<AdmAppPref>();
				}
	
				return _admAppPrefAdmApplicantId;
			}
			set { _admAppPrefAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppPlacementExamCollection
		
		private TList<AdmAppPlacementExam> _admAppPlacementExamAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppPlacementExamAdmApplicantId
		/// </summary>
		
		public TList<AdmAppPlacementExam> AdmAppPlacementExamCollection
		{
			get
			{
				if (_admAppPlacementExamAdmApplicantId == null)
				{
				_admAppPlacementExamAdmApplicantId = new TList<AdmAppPlacementExam>();
				}
	
				return _admAppPlacementExamAdmApplicantId;
			}
			set { _admAppPlacementExamAdmApplicantId = value; }
		}
		
		#endregion

		#region EdStudQualCollection
		
		private TList<EdStudQual> _edStudQualAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudQualAdmApplicantId
		/// </summary>
		
		public TList<EdStudQual> EdStudQualCollection
		{
			get
			{
				if (_edStudQualAdmApplicantId == null)
				{
				_edStudQualAdmApplicantId = new TList<EdStudQual>();
				}
	
				return _edStudQualAdmApplicantId;
			}
			set { _edStudQualAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppGuardianCollection
		
		private TList<AdmAppGuardian> _admAppGuardianAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppGuardianAdmApplicantId
		/// </summary>
		
		public TList<AdmAppGuardian> AdmAppGuardianCollection
		{
			get
			{
				if (_admAppGuardianAdmApplicantId == null)
				{
				_admAppGuardianAdmApplicantId = new TList<AdmAppGuardian>();
				}
	
				return _admAppGuardianAdmApplicantId;
			}
			set { _admAppGuardianAdmApplicantId = value; }
		}
		
		#endregion

		#region FeeStudVoucherCollection
		
		private TList<FeeStudVoucher> _feeStudVoucherAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudVoucherAdmApplicantId
		/// </summary>
		
		public TList<FeeStudVoucher> FeeStudVoucherCollection
		{
			get
			{
				if (_feeStudVoucherAdmApplicantId == null)
				{
				_feeStudVoucherAdmApplicantId = new TList<FeeStudVoucher>();
				}
	
				return _feeStudVoucherAdmApplicantId;
			}
			set { _feeStudVoucherAdmApplicantId = value; }
		}
		
		#endregion

		#region EdStudContactMethodCollection
		
		private TList<EdStudContactMethod> _edStudContactMethodAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudContactMethodAdmApplicantId
		/// </summary>
		
		public TList<EdStudContactMethod> EdStudContactMethodCollection
		{
			get
			{
				if (_edStudContactMethodAdmApplicantId == null)
				{
				_edStudContactMethodAdmApplicantId = new TList<EdStudContactMethod>();
				}
	
				return _edStudContactMethodAdmApplicantId;
			}
			set { _edStudContactMethodAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmInboxCollectionGetByInMsgAppFrom
		
		private TList<AdmInbox> _admInboxInMsgAppToGetByInMsgAppFrom;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admInboxInMsgAppToGetByInMsgAppFrom
		/// </summary>
		
		public TList<AdmInbox> AdmInboxCollectionGetByInMsgAppFrom
		{
			get
			{
				if (_admInboxInMsgAppToGetByInMsgAppFrom == null)
				{
				_admInboxInMsgAppToGetByInMsgAppFrom = new TList<AdmInbox>();
				}
	
				return _admInboxInMsgAppToGetByInMsgAppFrom;
			}
			set { _admInboxInMsgAppToGetByInMsgAppFrom = value; }
		}
		
		#endregion

		#region AdmAppProcStepsCollection
		
		private TList<AdmAppProcSteps> _admAppProcStepsAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppProcStepsAdmApplicantId
		/// </summary>
		
		public TList<AdmAppProcSteps> AdmAppProcStepsCollection
		{
			get
			{
				if (_admAppProcStepsAdmApplicantId == null)
				{
				_admAppProcStepsAdmApplicantId = new TList<AdmAppProcSteps>();
				}
	
				return _admAppProcStepsAdmApplicantId;
			}
			set { _admAppProcStepsAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppEssayCollection
		
		private TList<AdmAppEssay> _admAppEssayAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppEssayAdmApplicantId
		/// </summary>
		
		public TList<AdmAppEssay> AdmAppEssayCollection
		{
			get
			{
				if (_admAppEssayAdmApplicantId == null)
				{
				_admAppEssayAdmApplicantId = new TList<AdmAppEssay>();
				}
	
				return _admAppEssayAdmApplicantId;
			}
			set { _admAppEssayAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppLanguagesCollection
		
		private TList<AdmAppLanguages> _admAppLanguagesAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppLanguagesAdmApplicantId
		/// </summary>
		
		public TList<AdmAppLanguages> AdmAppLanguagesCollection
		{
			get
			{
				if (_admAppLanguagesAdmApplicantId == null)
				{
				_admAppLanguagesAdmApplicantId = new TList<AdmAppLanguages>();
				}
	
				return _admAppLanguagesAdmApplicantId;
			}
			set { _admAppLanguagesAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppDisabilityCollection
		
		private TList<AdmAppDisability> _admAppDisabilityAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppDisabilityAdmApplicantId
		/// </summary>
		
		public TList<AdmAppDisability> AdmAppDisabilityCollection
		{
			get
			{
				if (_admAppDisabilityAdmApplicantId == null)
				{
				_admAppDisabilityAdmApplicantId = new TList<AdmAppDisability>();
				}
	
				return _admAppDisabilityAdmApplicantId;
			}
			set { _admAppDisabilityAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppMediaCollection
		
		private TList<AdmAppMedia> _admAppMediaAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppMediaAdmApplicantId
		/// </summary>
		
		public TList<AdmAppMedia> AdmAppMediaCollection
		{
			get
			{
				if (_admAppMediaAdmApplicantId == null)
				{
				_admAppMediaAdmApplicantId = new TList<AdmAppMedia>();
				}
	
				return _admAppMediaAdmApplicantId;
			}
			set { _admAppMediaAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppFeesCollection
		
		private TList<AdmAppFees> _admAppFeesAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppFeesAdmApplicantId
		/// </summary>
		
		public TList<AdmAppFees> AdmAppFeesCollection
		{
			get
			{
				if (_admAppFeesAdmApplicantId == null)
				{
				_admAppFeesAdmApplicantId = new TList<AdmAppFees>();
				}
	
				return _admAppFeesAdmApplicantId;
			}
			set { _admAppFeesAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmEnglishProficiencyCollection
		
		private TList<AdmEnglishProficiency> _admEnglishProficiencyAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admEnglishProficiencyAdmApplicantId
		/// </summary>
		
		public TList<AdmEnglishProficiency> AdmEnglishProficiencyCollection
		{
			get
			{
				if (_admEnglishProficiencyAdmApplicantId == null)
				{
				_admEnglishProficiencyAdmApplicantId = new TList<AdmEnglishProficiency>();
				}
	
				return _admEnglishProficiencyAdmApplicantId;
			}
			set { _admEnglishProficiencyAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmInboxCollectionGetByInMsgAppTo
		
		private TList<AdmInbox> _admInboxInMsgAppToGetByInMsgAppTo;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admInboxInMsgAppToGetByInMsgAppTo
		/// </summary>
		
		public TList<AdmInbox> AdmInboxCollectionGetByInMsgAppTo
		{
			get
			{
				if (_admInboxInMsgAppToGetByInMsgAppTo == null)
				{
				_admInboxInMsgAppToGetByInMsgAppTo = new TList<AdmInbox>();
				}
	
				return _admInboxInMsgAppToGetByInMsgAppTo;
			}
			set { _admInboxInMsgAppToGetByInMsgAppTo = value; }
		}
		
		#endregion

		#region AdmAppWorkExperCollection
		
		private TList<AdmAppWorkExper> _admAppWorkExperAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppWorkExperAdmApplicantId
		/// </summary>
		
		public TList<AdmAppWorkExper> AdmAppWorkExperCollection
		{
			get
			{
				if (_admAppWorkExperAdmApplicantId == null)
				{
				_admAppWorkExperAdmApplicantId = new TList<AdmAppWorkExper>();
				}
	
				return _admAppWorkExperAdmApplicantId;
			}
			set { _admAppWorkExperAdmApplicantId = value; }
		}
		
		#endregion

		#region AdmAppLtrRecomCollection
		
		private TList<AdmAppLtrRecom> _admAppLtrRecomAdmApplicantId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppLtrRecomAdmApplicantId
		/// </summary>
		
		public TList<AdmAppLtrRecom> AdmAppLtrRecomCollection
		{
			get
			{
				if (_admAppLtrRecomAdmApplicantId == null)
				{
				_admAppLtrRecomAdmApplicantId = new TList<AdmAppLtrRecom>();
				}
	
				return _admAppLtrRecomAdmApplicantId;
			}
			set { _admAppLtrRecomAdmApplicantId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			AdmApplicantEntityData _tmp = new AdmApplicantEntityData();
						
			_tmp.AdmApplicantId = this.AdmApplicantId;
			_tmp.OriginalAdmApplicantId = this.OriginalAdmApplicantId;
			
			_tmp.AdmAppCode = this.AdmAppCode;
			_tmp.Username = this.Username;
			_tmp.PasswordSalt = this.PasswordSalt;
			_tmp.PasswordHash = this.PasswordHash;
			_tmp.SecurityQs = this.SecurityQs;
			_tmp.SecurityQsAnsSalt = this.SecurityQsAnsSalt;
			_tmp.SecurityQsAnsHash = this.SecurityQsAnsHash;
			_tmp.ActivationCode = this.ActivationCode;
			_tmp.ActivationFlg = this.ActivationFlg;
			_tmp.RegDate = this.RegDate;
			_tmp.FnameAr = this.FnameAr;
			_tmp.FnameEn = this.FnameEn;
			_tmp.MnameAr = this.MnameAr;
			_tmp.MnameEn = this.MnameEn;
			_tmp.LnameAr = this.LnameAr;
			_tmp.LnameEn = this.LnameEn;
			_tmp.FamilyAr = this.FamilyAr;
			_tmp.FamilyEn = this.FamilyEn;
			_tmp.GsCodeReligionId = this.GsCodeReligionId;
			_tmp.Cpr = this.Cpr;
			_tmp.PassporNo = this.PassporNo;
			_tmp.PassporExpireDate = this.PassporExpireDate;
			_tmp.Birthdate = this.Birthdate;
			_tmp.PhotoPath = this.PhotoPath;
			_tmp.GsCdeMaritalStatusId = this.GsCdeMaritalStatusId;
			_tmp.GsCodeGenderId = this.GsCodeGenderId;
			_tmp.WorkFlg = this.WorkFlg;
			_tmp.GsCountryNodeId = this.GsCountryNodeId;
			_tmp.FullNameAr = this.FullNameAr;
			_tmp.FullNameEn = this.FullNameEn;
			_tmp.ResidentId = this.ResidentId;
			_tmp.ResidentExpireDate = this.ResidentExpireDate;
			_tmp.GsBirthCountryNodeId = this.GsBirthCountryNodeId;
			_tmp.EdStudId = this.EdStudId;
			_tmp.LoyaltyFlg = this.LoyaltyFlg;
			_tmp.GsCodeLanguageId = this.GsCodeLanguageId;
			_tmp.PassporIssueDate = this.PassporIssueDate;
			_tmp.SpecialNeedFlg = this.SpecialNeedFlg;
			_tmp.IdentIssueDate = this.IdentIssueDate;
			_tmp.IdentExpireDate = this.IdentExpireDate;
			_tmp.IdentIssuePlc = this.IdentIssuePlc;
			_tmp.VisaNumber = this.VisaNumber;
			_tmp.VisaIssueDate = this.VisaIssueDate;
			_tmp.VisaExpireDate = this.VisaExpireDate;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserId = this.SeUserId;
			_tmp.EdCdeSocialAffairId = this.EdCdeSocialAffairId;
			_tmp.PucFlg = this.PucFlg;
			_tmp.NoChild = this.NoChild;
			_tmp.HighQualFlg = this.HighQualFlg;
			
			#region Source Parent Composite Entities
			if (this.EdCdeSocialAffairIdSource != null)
				_tmp.EdCdeSocialAffairIdSource = MakeCopyOf(this.EdCdeSocialAffairIdSource) as EdCdeSocialAffair;
			if (this.EdStudIdSource != null)
				_tmp.EdStudIdSource = MakeCopyOf(this.EdStudIdSource) as EdStud;
			if (this.GsCodeLanguageIdSource != null)
				_tmp.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource) as GsCodeLanguage;
			if (this.GsCountryNodeIdSource != null)
				_tmp.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource) as GsCountryNode;
			if (this.GsBirthCountryNodeIdSource != null)
				_tmp.GsBirthCountryNodeIdSource = MakeCopyOf(this.GsBirthCountryNodeIdSource) as GsCountryNode;
			if (this.GsCdeMaritalStatusIdSource != null)
				_tmp.GsCdeMaritalStatusIdSource = MakeCopyOf(this.GsCdeMaritalStatusIdSource) as GsCdeMaritalStatus;
			if (this.GsCodeGenderIdSource != null)
				_tmp.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource) as GsCodeGender;
			if (this.GsCodeReligionIdSource != null)
				_tmp.GsCodeReligionIdSource = MakeCopyOf(this.GsCodeReligionIdSource) as GsCodeReligion;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._svUserMessageAdmApplicantId != null)
				_tmp.SvUserMessageCollection = (TList<SvUserMessage>) MakeCopyOf(this.SvUserMessageCollection); 
			if (this._admAppRegHistoryAdmApplicantId != null)
				_tmp.AdmAppRegHistoryCollection = (TList<AdmAppRegHistory>) MakeCopyOf(this.AdmAppRegHistoryCollection); 
			if (this._svSrvyRespondQstnAdmApplicantId != null)
				_tmp.SvSrvyRespondQstnCollection = (TList<SvSrvyRespondQstn>) MakeCopyOf(this.SvSrvyRespondQstnCollection); 
			if (this._admScholorshipAdmApplicantId != null)
				_tmp.AdmScholorshipCollection = (TList<AdmScholorship>) MakeCopyOf(this.AdmScholorshipCollection); 
			if (this._admOutboxOutMsgAppToGetByOutMsgAppFrom != null)
				_tmp.AdmOutboxCollectionGetByOutMsgAppFrom = (TList<AdmOutbox>) MakeCopyOf(this.AdmOutboxCollectionGetByOutMsgAppFrom); 
			if (this._edStudGuardAdmApplicantId != null)
				_tmp.EdStudGuardCollection = (TList<EdStudGuard>) MakeCopyOf(this.EdStudGuardCollection); 
			if (this._feeRefndStdReqAdmApplicantId != null)
				_tmp.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection); 
			if (this._admAppPlaceExamCourseAdmApplicantId != null)
				_tmp.AdmAppPlaceExamCourseCollection = (TList<AdmAppPlaceExamCourse>) MakeCopyOf(this.AdmAppPlaceExamCourseCollection); 
			if (this._admAppHonorAdmApplicantId != null)
				_tmp.AdmAppHonorCollection = (TList<AdmAppHonor>) MakeCopyOf(this.AdmAppHonorCollection); 
			if (this._admAppDocAdmApplicantId != null)
				_tmp.AdmAppDocCollection = (TList<AdmAppDoc>) MakeCopyOf(this.AdmAppDocCollection); 
			if (this._edStudNoteAdmApplicantId != null)
				_tmp.EdStudNoteCollection = (TList<EdStudNote>) MakeCopyOf(this.EdStudNoteCollection); 
			if (this._edStudActivityAdmApplicantId != null)
				_tmp.EdStudActivityCollection = (TList<EdStudActivity>) MakeCopyOf(this.EdStudActivityCollection); 
			if (this._admOutboxOutMsgAppToGetByOutMsgAppTo != null)
				_tmp.AdmOutboxCollectionGetByOutMsgAppTo = (TList<AdmOutbox>) MakeCopyOf(this.AdmOutboxCollectionGetByOutMsgAppTo); 
			if (this._admRsrvdCodeAdmApplicantId != null)
				_tmp.AdmRsrvdCodeCollection = (TList<AdmRsrvdCode>) MakeCopyOf(this.AdmRsrvdCodeCollection); 
			if (this._svMessageAdmApplicantId != null)
				_tmp.SvMessageCollection = (TList<SvMessage>) MakeCopyOf(this.SvMessageCollection); 
			if (this._admAppInfoAdmApplicantId != null)
				_tmp.AdmAppInfoCollection = (TList<AdmAppInfo>) MakeCopyOf(this.AdmAppInfoCollection); 
			if (this._admAppCourseCompAdmApplicantId != null)
				_tmp.AdmAppCourseCompCollection = (TList<AdmAppCourseComp>) MakeCopyOf(this.AdmAppCourseCompCollection); 
			if (this._gsAddressDtlAdmApplicantId != null)
				_tmp.GsAddressDtlCollection = (TList<GsAddressDtl>) MakeCopyOf(this.GsAddressDtlCollection); 
			if (this._edStudLangAdmApplicantId != null)
				_tmp.EdStudLangCollection = (TList<EdStudLang>) MakeCopyOf(this.EdStudLangCollection); 
			if (this._admAppPrefAdmApplicantId != null)
				_tmp.AdmAppPrefCollection = (TList<AdmAppPref>) MakeCopyOf(this.AdmAppPrefCollection); 
			if (this._admAppPlacementExamAdmApplicantId != null)
				_tmp.AdmAppPlacementExamCollection = (TList<AdmAppPlacementExam>) MakeCopyOf(this.AdmAppPlacementExamCollection); 
			if (this._edStudQualAdmApplicantId != null)
				_tmp.EdStudQualCollection = (TList<EdStudQual>) MakeCopyOf(this.EdStudQualCollection); 
			if (this._admAppGuardianAdmApplicantId != null)
				_tmp.AdmAppGuardianCollection = (TList<AdmAppGuardian>) MakeCopyOf(this.AdmAppGuardianCollection); 
			if (this._feeStudVoucherAdmApplicantId != null)
				_tmp.FeeStudVoucherCollection = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollection); 
			if (this._edStudContactMethodAdmApplicantId != null)
				_tmp.EdStudContactMethodCollection = (TList<EdStudContactMethod>) MakeCopyOf(this.EdStudContactMethodCollection); 
			if (this._admInboxInMsgAppToGetByInMsgAppFrom != null)
				_tmp.AdmInboxCollectionGetByInMsgAppFrom = (TList<AdmInbox>) MakeCopyOf(this.AdmInboxCollectionGetByInMsgAppFrom); 
			if (this._admAppProcStepsAdmApplicantId != null)
				_tmp.AdmAppProcStepsCollection = (TList<AdmAppProcSteps>) MakeCopyOf(this.AdmAppProcStepsCollection); 
			if (this._admAppEssayAdmApplicantId != null)
				_tmp.AdmAppEssayCollection = (TList<AdmAppEssay>) MakeCopyOf(this.AdmAppEssayCollection); 
			if (this._admAppLanguagesAdmApplicantId != null)
				_tmp.AdmAppLanguagesCollection = (TList<AdmAppLanguages>) MakeCopyOf(this.AdmAppLanguagesCollection); 
			if (this._admAppDisabilityAdmApplicantId != null)
				_tmp.AdmAppDisabilityCollection = (TList<AdmAppDisability>) MakeCopyOf(this.AdmAppDisabilityCollection); 
			if (this._admAppMediaAdmApplicantId != null)
				_tmp.AdmAppMediaCollection = (TList<AdmAppMedia>) MakeCopyOf(this.AdmAppMediaCollection); 
			if (this._admAppFeesAdmApplicantId != null)
				_tmp.AdmAppFeesCollection = (TList<AdmAppFees>) MakeCopyOf(this.AdmAppFeesCollection); 
			if (this._admEnglishProficiencyAdmApplicantId != null)
				_tmp.AdmEnglishProficiencyCollection = (TList<AdmEnglishProficiency>) MakeCopyOf(this.AdmEnglishProficiencyCollection); 
			if (this._admInboxInMsgAppToGetByInMsgAppTo != null)
				_tmp.AdmInboxCollectionGetByInMsgAppTo = (TList<AdmInbox>) MakeCopyOf(this.AdmInboxCollectionGetByInMsgAppTo); 
			if (this._admAppWorkExperAdmApplicantId != null)
				_tmp.AdmAppWorkExperCollection = (TList<AdmAppWorkExper>) MakeCopyOf(this.AdmAppWorkExperCollection); 
			if (this._admAppLtrRecomAdmApplicantId != null)
				_tmp.AdmAppLtrRecomCollection = (TList<AdmAppLtrRecom>) MakeCopyOf(this.AdmAppLtrRecomCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			AdmApplicantEntityData _tmp = new AdmApplicantEntityData();
						
			_tmp.AdmApplicantId = this.AdmApplicantId;
			_tmp.OriginalAdmApplicantId = this.OriginalAdmApplicantId;
			
			_tmp.AdmAppCode = this.AdmAppCode;
			_tmp.Username = this.Username;
			_tmp.PasswordSalt = this.PasswordSalt;
			_tmp.PasswordHash = this.PasswordHash;
			_tmp.SecurityQs = this.SecurityQs;
			_tmp.SecurityQsAnsSalt = this.SecurityQsAnsSalt;
			_tmp.SecurityQsAnsHash = this.SecurityQsAnsHash;
			_tmp.ActivationCode = this.ActivationCode;
			_tmp.ActivationFlg = this.ActivationFlg;
			_tmp.RegDate = this.RegDate;
			_tmp.FnameAr = this.FnameAr;
			_tmp.FnameEn = this.FnameEn;
			_tmp.MnameAr = this.MnameAr;
			_tmp.MnameEn = this.MnameEn;
			_tmp.LnameAr = this.LnameAr;
			_tmp.LnameEn = this.LnameEn;
			_tmp.FamilyAr = this.FamilyAr;
			_tmp.FamilyEn = this.FamilyEn;
			_tmp.GsCodeReligionId = this.GsCodeReligionId;
			_tmp.Cpr = this.Cpr;
			_tmp.PassporNo = this.PassporNo;
			_tmp.PassporExpireDate = this.PassporExpireDate;
			_tmp.Birthdate = this.Birthdate;
			_tmp.PhotoPath = this.PhotoPath;
			_tmp.GsCdeMaritalStatusId = this.GsCdeMaritalStatusId;
			_tmp.GsCodeGenderId = this.GsCodeGenderId;
			_tmp.WorkFlg = this.WorkFlg;
			_tmp.GsCountryNodeId = this.GsCountryNodeId;
			_tmp.FullNameAr = this.FullNameAr;
			_tmp.FullNameEn = this.FullNameEn;
			_tmp.ResidentId = this.ResidentId;
			_tmp.ResidentExpireDate = this.ResidentExpireDate;
			_tmp.GsBirthCountryNodeId = this.GsBirthCountryNodeId;
			_tmp.EdStudId = this.EdStudId;
			_tmp.LoyaltyFlg = this.LoyaltyFlg;
			_tmp.GsCodeLanguageId = this.GsCodeLanguageId;
			_tmp.PassporIssueDate = this.PassporIssueDate;
			_tmp.SpecialNeedFlg = this.SpecialNeedFlg;
			_tmp.IdentIssueDate = this.IdentIssueDate;
			_tmp.IdentExpireDate = this.IdentExpireDate;
			_tmp.IdentIssuePlc = this.IdentIssuePlc;
			_tmp.VisaNumber = this.VisaNumber;
			_tmp.VisaIssueDate = this.VisaIssueDate;
			_tmp.VisaExpireDate = this.VisaExpireDate;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserId = this.SeUserId;
			_tmp.EdCdeSocialAffairId = this.EdCdeSocialAffairId;
			_tmp.PucFlg = this.PucFlg;
			_tmp.NoChild = this.NoChild;
			_tmp.HighQualFlg = this.HighQualFlg;
			
			#region Source Parent Composite Entities
			if (this.EdCdeSocialAffairIdSource != null && existingCopies.Contains(this.EdCdeSocialAffairIdSource))
				_tmp.EdCdeSocialAffairIdSource = existingCopies[this.EdCdeSocialAffairIdSource] as EdCdeSocialAffair;
			else
				_tmp.EdCdeSocialAffairIdSource = MakeCopyOf(this.EdCdeSocialAffairIdSource, existingCopies) as EdCdeSocialAffair;
			if (this.EdStudIdSource != null && existingCopies.Contains(this.EdStudIdSource))
				_tmp.EdStudIdSource = existingCopies[this.EdStudIdSource] as EdStud;
			else
				_tmp.EdStudIdSource = MakeCopyOf(this.EdStudIdSource, existingCopies) as EdStud;
			if (this.GsCodeLanguageIdSource != null && existingCopies.Contains(this.GsCodeLanguageIdSource))
				_tmp.GsCodeLanguageIdSource = existingCopies[this.GsCodeLanguageIdSource] as GsCodeLanguage;
			else
				_tmp.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource, existingCopies) as GsCodeLanguage;
			if (this.GsCountryNodeIdSource != null && existingCopies.Contains(this.GsCountryNodeIdSource))
				_tmp.GsCountryNodeIdSource = existingCopies[this.GsCountryNodeIdSource] as GsCountryNode;
			else
				_tmp.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource, existingCopies) as GsCountryNode;
			if (this.GsBirthCountryNodeIdSource != null && existingCopies.Contains(this.GsBirthCountryNodeIdSource))
				_tmp.GsBirthCountryNodeIdSource = existingCopies[this.GsBirthCountryNodeIdSource] as GsCountryNode;
			else
				_tmp.GsBirthCountryNodeIdSource = MakeCopyOf(this.GsBirthCountryNodeIdSource, existingCopies) as GsCountryNode;
			if (this.GsCdeMaritalStatusIdSource != null && existingCopies.Contains(this.GsCdeMaritalStatusIdSource))
				_tmp.GsCdeMaritalStatusIdSource = existingCopies[this.GsCdeMaritalStatusIdSource] as GsCdeMaritalStatus;
			else
				_tmp.GsCdeMaritalStatusIdSource = MakeCopyOf(this.GsCdeMaritalStatusIdSource, existingCopies) as GsCdeMaritalStatus;
			if (this.GsCodeGenderIdSource != null && existingCopies.Contains(this.GsCodeGenderIdSource))
				_tmp.GsCodeGenderIdSource = existingCopies[this.GsCodeGenderIdSource] as GsCodeGender;
			else
				_tmp.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource, existingCopies) as GsCodeGender;
			if (this.GsCodeReligionIdSource != null && existingCopies.Contains(this.GsCodeReligionIdSource))
				_tmp.GsCodeReligionIdSource = existingCopies[this.GsCodeReligionIdSource] as GsCodeReligion;
			else
				_tmp.GsCodeReligionIdSource = MakeCopyOf(this.GsCodeReligionIdSource, existingCopies) as GsCodeReligion;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.SvUserMessageCollection = (TList<SvUserMessage>) MakeCopyOf(this.SvUserMessageCollection, existingCopies); 
			_tmp.AdmAppRegHistoryCollection = (TList<AdmAppRegHistory>) MakeCopyOf(this.AdmAppRegHistoryCollection, existingCopies); 
			_tmp.SvSrvyRespondQstnCollection = (TList<SvSrvyRespondQstn>) MakeCopyOf(this.SvSrvyRespondQstnCollection, existingCopies); 
			_tmp.AdmScholorshipCollection = (TList<AdmScholorship>) MakeCopyOf(this.AdmScholorshipCollection, existingCopies); 
			_tmp.AdmOutboxCollectionGetByOutMsgAppFrom = (TList<AdmOutbox>) MakeCopyOf(this.AdmOutboxCollectionGetByOutMsgAppFrom, existingCopies); 
			_tmp.EdStudGuardCollection = (TList<EdStudGuard>) MakeCopyOf(this.EdStudGuardCollection, existingCopies); 
			_tmp.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection, existingCopies); 
			_tmp.AdmAppPlaceExamCourseCollection = (TList<AdmAppPlaceExamCourse>) MakeCopyOf(this.AdmAppPlaceExamCourseCollection, existingCopies); 
			_tmp.AdmAppHonorCollection = (TList<AdmAppHonor>) MakeCopyOf(this.AdmAppHonorCollection, existingCopies); 
			_tmp.AdmAppDocCollection = (TList<AdmAppDoc>) MakeCopyOf(this.AdmAppDocCollection, existingCopies); 
			_tmp.EdStudNoteCollection = (TList<EdStudNote>) MakeCopyOf(this.EdStudNoteCollection, existingCopies); 
			_tmp.EdStudActivityCollection = (TList<EdStudActivity>) MakeCopyOf(this.EdStudActivityCollection, existingCopies); 
			_tmp.AdmOutboxCollectionGetByOutMsgAppTo = (TList<AdmOutbox>) MakeCopyOf(this.AdmOutboxCollectionGetByOutMsgAppTo, existingCopies); 
			_tmp.AdmRsrvdCodeCollection = (TList<AdmRsrvdCode>) MakeCopyOf(this.AdmRsrvdCodeCollection, existingCopies); 
			_tmp.SvMessageCollection = (TList<SvMessage>) MakeCopyOf(this.SvMessageCollection, existingCopies); 
			_tmp.AdmAppInfoCollection = (TList<AdmAppInfo>) MakeCopyOf(this.AdmAppInfoCollection, existingCopies); 
			_tmp.AdmAppCourseCompCollection = (TList<AdmAppCourseComp>) MakeCopyOf(this.AdmAppCourseCompCollection, existingCopies); 
			_tmp.GsAddressDtlCollection = (TList<GsAddressDtl>) MakeCopyOf(this.GsAddressDtlCollection, existingCopies); 
			_tmp.EdStudLangCollection = (TList<EdStudLang>) MakeCopyOf(this.EdStudLangCollection, existingCopies); 
			_tmp.AdmAppPrefCollection = (TList<AdmAppPref>) MakeCopyOf(this.AdmAppPrefCollection, existingCopies); 
			_tmp.AdmAppPlacementExamCollection = (TList<AdmAppPlacementExam>) MakeCopyOf(this.AdmAppPlacementExamCollection, existingCopies); 
			_tmp.EdStudQualCollection = (TList<EdStudQual>) MakeCopyOf(this.EdStudQualCollection, existingCopies); 
			_tmp.AdmAppGuardianCollection = (TList<AdmAppGuardian>) MakeCopyOf(this.AdmAppGuardianCollection, existingCopies); 
			_tmp.FeeStudVoucherCollection = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollection, existingCopies); 
			_tmp.EdStudContactMethodCollection = (TList<EdStudContactMethod>) MakeCopyOf(this.EdStudContactMethodCollection, existingCopies); 
			_tmp.AdmInboxCollectionGetByInMsgAppFrom = (TList<AdmInbox>) MakeCopyOf(this.AdmInboxCollectionGetByInMsgAppFrom, existingCopies); 
			_tmp.AdmAppProcStepsCollection = (TList<AdmAppProcSteps>) MakeCopyOf(this.AdmAppProcStepsCollection, existingCopies); 
			_tmp.AdmAppEssayCollection = (TList<AdmAppEssay>) MakeCopyOf(this.AdmAppEssayCollection, existingCopies); 
			_tmp.AdmAppLanguagesCollection = (TList<AdmAppLanguages>) MakeCopyOf(this.AdmAppLanguagesCollection, existingCopies); 
			_tmp.AdmAppDisabilityCollection = (TList<AdmAppDisability>) MakeCopyOf(this.AdmAppDisabilityCollection, existingCopies); 
			_tmp.AdmAppMediaCollection = (TList<AdmAppMedia>) MakeCopyOf(this.AdmAppMediaCollection, existingCopies); 
			_tmp.AdmAppFeesCollection = (TList<AdmAppFees>) MakeCopyOf(this.AdmAppFeesCollection, existingCopies); 
			_tmp.AdmEnglishProficiencyCollection = (TList<AdmEnglishProficiency>) MakeCopyOf(this.AdmEnglishProficiencyCollection, existingCopies); 
			_tmp.AdmInboxCollectionGetByInMsgAppTo = (TList<AdmInbox>) MakeCopyOf(this.AdmInboxCollectionGetByInMsgAppTo, existingCopies); 
			_tmp.AdmAppWorkExperCollection = (TList<AdmAppWorkExper>) MakeCopyOf(this.AdmAppWorkExperCollection, existingCopies); 
			_tmp.AdmAppLtrRecomCollection = (TList<AdmAppLtrRecom>) MakeCopyOf(this.AdmAppLtrRecomCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmApplicantColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(AdmApplicantColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmApplicantColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(AdmApplicantColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmApplicantColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(AdmApplicantColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				AdmApplicantEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new AdmApplicantEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="AdmApplicantColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(AdmApplicantColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				AdmApplicantEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new AdmApplicantEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region AdmApplicantEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="AdmApplicant"/> object.
	/// </remarks>
	public class AdmApplicantEventArgs : System.EventArgs
	{
		private AdmApplicantColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the AdmApplicantEventArgs class.
		///</summary>
		public AdmApplicantEventArgs(AdmApplicantColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the AdmApplicantEventArgs class.
		///</summary>
		public AdmApplicantEventArgs(AdmApplicantColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The AdmApplicantColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="AdmApplicantColumn" />
		public AdmApplicantColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all AdmApplicant related events.
	///</summary>
	public delegate void AdmApplicantEventHandler(object sender, AdmApplicantEventArgs e);
	
	#region AdmApplicantComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class AdmApplicantComparer : System.Collections.Generic.IComparer<AdmApplicant>
	{
		AdmApplicantColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:AdmApplicantComparer"/> class.
        /// </summary>
		public AdmApplicantComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:AdmApplicantComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public AdmApplicantComparer(AdmApplicantColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="AdmApplicant"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="AdmApplicant"/> to compare.</param>
        /// <param name="b">The second <c>AdmApplicant</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(AdmApplicant a, AdmApplicant b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(AdmApplicant entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(AdmApplicant a, AdmApplicant b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public AdmApplicantColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region AdmApplicantKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="AdmApplicant"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class AdmApplicantKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the AdmApplicantKey class.
		/// </summary>
		public AdmApplicantKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the AdmApplicantKey class.
		/// </summary>
		public AdmApplicantKey(AdmApplicantBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.AdmApplicantId = entity.AdmApplicantId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the AdmApplicantKey class.
		/// </summary>
		public AdmApplicantKey(System.Decimal _admApplicantId)
		{
			#region Init Properties

			this.AdmApplicantId = _admApplicantId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private AdmApplicantBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public AdmApplicantBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the AdmApplicantId property
		private System.Decimal _admApplicantId;
		
		/// <summary>
		/// Gets or sets the AdmApplicantId property.
		/// </summary>
		public System.Decimal AdmApplicantId
		{
			get { return _admApplicantId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.AdmApplicantId = value;
				
				_admApplicantId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				AdmApplicantId = ( values["AdmApplicantId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["AdmApplicantId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("AdmApplicantId", AdmApplicantId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("AdmApplicantId: {0}{1}",
								AdmApplicantId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region AdmApplicantColumn Enum
	
	/// <summary>
	/// Enumerate the AdmApplicant columns.
	/// </summary>
	[Serializable]
	public enum AdmApplicantColumn : int
	{
		/// <summary>
		/// AdmApplicantId : 
		/// </summary>
		[EnumTextValue("ADM_APPLICANT_ID")]
		[ColumnEnum("ADM_APPLICANT_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		AdmApplicantId = 1,
		/// <summary>
		/// AdmAppCode : 
		/// </summary>
		[EnumTextValue("ADM_APP_CODE")]
		[ColumnEnum("ADM_APP_CODE", typeof(System.String), System.Data.DbType.String, false, false, true, 30)]
		AdmAppCode = 2,
		/// <summary>
		/// Username : 
		/// </summary>
		[EnumTextValue("USERNAME")]
		[ColumnEnum("USERNAME", typeof(System.String), System.Data.DbType.AnsiString, false, false, true, 50)]
		Username = 3,
		/// <summary>
		/// PasswordSalt : 
		/// </summary>
		[EnumTextValue("PASSWORD_SALT")]
		[ColumnEnum("PASSWORD_SALT", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		PasswordSalt = 4,
		/// <summary>
		/// PasswordHash : 
		/// </summary>
		[EnumTextValue("PASSWORD_HASH")]
		[ColumnEnum("PASSWORD_HASH", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		PasswordHash = 5,
		/// <summary>
		/// SecurityQs : 
		/// </summary>
		[EnumTextValue("SECURITY_QS")]
		[ColumnEnum("SECURITY_QS", typeof(System.String), System.Data.DbType.String, false, false, true, 350)]
		SecurityQs = 6,
		/// <summary>
		/// SecurityQsAnsSalt : 
		/// </summary>
		[EnumTextValue("SECURITY_QS_ANS_SALT")]
		[ColumnEnum("SECURITY_QS_ANS_SALT", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		SecurityQsAnsSalt = 7,
		/// <summary>
		/// SecurityQsAnsHash : 
		/// </summary>
		[EnumTextValue("SECURITY_QS_ANS_HASH")]
		[ColumnEnum("SECURITY_QS_ANS_HASH", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		SecurityQsAnsHash = 8,
		/// <summary>
		/// ActivationCode : 
		/// </summary>
		[EnumTextValue("ACTIVATION_CODE")]
		[ColumnEnum("ACTIVATION_CODE", typeof(System.String), System.Data.DbType.String, false, false, true, 1000)]
		ActivationCode = 9,
		/// <summary>
		/// ActivationFlg : 
		/// </summary>
		[EnumTextValue("ACTIVATION_FLG")]
		[ColumnEnum("ACTIVATION_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ActivationFlg = 10,
		/// <summary>
		/// RegDate : 
		/// </summary>
		[EnumTextValue("REG_DATE")]
		[ColumnEnum("REG_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		RegDate = 11,
		/// <summary>
		/// FnameAr : 
		/// </summary>
		[EnumTextValue("FNAME_AR")]
		[ColumnEnum("FNAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		FnameAr = 12,
		/// <summary>
		/// FnameEn : 
		/// </summary>
		[EnumTextValue("FNAME_EN")]
		[ColumnEnum("FNAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		FnameEn = 13,
		/// <summary>
		/// MnameAr : 
		/// </summary>
		[EnumTextValue("MNAME_AR")]
		[ColumnEnum("MNAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		MnameAr = 14,
		/// <summary>
		/// MnameEn : 
		/// </summary>
		[EnumTextValue("MNAME_EN")]
		[ColumnEnum("MNAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		MnameEn = 15,
		/// <summary>
		/// LnameAr : 
		/// </summary>
		[EnumTextValue("LNAME_AR")]
		[ColumnEnum("LNAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		LnameAr = 16,
		/// <summary>
		/// LnameEn : 
		/// </summary>
		[EnumTextValue("LNAME_EN")]
		[ColumnEnum("LNAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		LnameEn = 17,
		/// <summary>
		/// FamilyAr : 
		/// </summary>
		[EnumTextValue("FAMILY_AR")]
		[ColumnEnum("FAMILY_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		FamilyAr = 18,
		/// <summary>
		/// FamilyEn : 
		/// </summary>
		[EnumTextValue("FAMILY_EN")]
		[ColumnEnum("FAMILY_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		FamilyEn = 19,
		/// <summary>
		/// GsCodeReligionId : 
		/// </summary>
		[EnumTextValue("GS_CODE_RELIGION_ID")]
		[ColumnEnum("GS_CODE_RELIGION_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeReligionId = 20,
		/// <summary>
		/// Cpr : 
		/// </summary>
		[EnumTextValue("CPR")]
		[ColumnEnum("CPR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		Cpr = 21,
		/// <summary>
		/// PassporNo : 
		/// </summary>
		[EnumTextValue("PASSPOR_NO")]
		[ColumnEnum("PASSPOR_NO", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		PassporNo = 22,
		/// <summary>
		/// PassporExpireDate : 
		/// </summary>
		[EnumTextValue("PASSPOR_EXPIRE_DATE")]
		[ColumnEnum("PASSPOR_EXPIRE_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		PassporExpireDate = 23,
		/// <summary>
		/// Birthdate : 
		/// </summary>
		[EnumTextValue("BIRTHDATE")]
		[ColumnEnum("BIRTHDATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		Birthdate = 24,
		/// <summary>
		/// PhotoPath : 
		/// </summary>
		[EnumTextValue("PHOTO_PATH")]
		[ColumnEnum("PHOTO_PATH", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		PhotoPath = 25,
		/// <summary>
		/// GsCdeMaritalStatusId : 
		/// </summary>
		[EnumTextValue("GS_CDE_MARITAL_STATUS_ID")]
		[ColumnEnum("GS_CDE_MARITAL_STATUS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCdeMaritalStatusId = 26,
		/// <summary>
		/// GsCodeGenderId : 
		/// </summary>
		[EnumTextValue("GS_CODE_GENDER_ID")]
		[ColumnEnum("GS_CODE_GENDER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeGenderId = 27,
		/// <summary>
		/// WorkFlg : 
		/// </summary>
		[EnumTextValue("WORK_FLG")]
		[ColumnEnum("WORK_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		WorkFlg = 28,
		/// <summary>
		/// GsCountryNodeId : الجنسية
		/// </summary>
		[EnumTextValue("GS_COUNTRY_NODE_ID")]
		[ColumnEnum("GS_COUNTRY_NODE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCountryNodeId = 29,
		/// <summary>
		/// FullNameAr : 
		/// </summary>
		[EnumTextValue("FULL_NAME_AR")]
		[ColumnEnum("FULL_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		FullNameAr = 30,
		/// <summary>
		/// FullNameEn : 
		/// </summary>
		[EnumTextValue("FULL_NAME_EN")]
		[ColumnEnum("FULL_NAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		FullNameEn = 31,
		/// <summary>
		/// ResidentId : 
		/// </summary>
		[EnumTextValue("RESIDENT_ID")]
		[ColumnEnum("RESIDENT_ID", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		ResidentId = 32,
		/// <summary>
		/// ResidentExpireDate : 
		/// </summary>
		[EnumTextValue("RESIDENT_EXPIRE_DATE")]
		[ColumnEnum("RESIDENT_EXPIRE_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		ResidentExpireDate = 33,
		/// <summary>
		/// GsBirthCountryNodeId : مكان الميلاد
		/// </summary>
		[EnumTextValue("GS_BIRTH_COUNTRY_NODE_ID")]
		[ColumnEnum("GS_BIRTH_COUNTRY_NODE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsBirthCountryNodeId = 34,
		/// <summary>
		/// EdStudId : 
		/// </summary>
		[EnumTextValue("ED_STUD_ID")]
		[ColumnEnum("ED_STUD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudId = 35,
		/// <summary>
		/// LoyaltyFlg : 
		/// </summary>
		[EnumTextValue("LOYALTY_FLG")]
		[ColumnEnum("LOYALTY_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		LoyaltyFlg = 36,
		/// <summary>
		/// GsCodeLanguageId : لغة التخصص
		/// </summary>
		[EnumTextValue("GS_CODE_LANGUAGE_ID")]
		[ColumnEnum("GS_CODE_LANGUAGE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeLanguageId = 37,
		/// <summary>
		/// PassporIssueDate : 
		/// </summary>
		[EnumTextValue("PASSPOR_ISSUE_DATE")]
		[ColumnEnum("PASSPOR_ISSUE_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		PassporIssueDate = 38,
		/// <summary>
		/// SpecialNeedFlg : 
		/// </summary>
		[EnumTextValue("SPECIAL_NEED_FLG")]
		[ColumnEnum("SPECIAL_NEED_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		SpecialNeedFlg = 39,
		/// <summary>
		/// IdentIssueDate : 
		/// </summary>
		[EnumTextValue("IDENT_ISSUE_DATE")]
		[ColumnEnum("IDENT_ISSUE_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		IdentIssueDate = 40,
		/// <summary>
		/// IdentExpireDate : 
		/// </summary>
		[EnumTextValue("IDENT_EXPIRE_DATE")]
		[ColumnEnum("IDENT_EXPIRE_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		IdentExpireDate = 41,
		/// <summary>
		/// IdentIssuePlc : مكان اصدار
		/// </summary>
		[EnumTextValue("IDENT_ISSUE_PLC")]
		[ColumnEnum("IDENT_ISSUE_PLC", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		IdentIssuePlc = 42,
		/// <summary>
		/// VisaNumber : رقم التأشيرة
		/// </summary>
		[EnumTextValue("VISA_NUMBER")]
		[ColumnEnum("VISA_NUMBER", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		VisaNumber = 43,
		/// <summary>
		/// VisaIssueDate : 
		/// </summary>
		[EnumTextValue("VISA_ISSUE_DATE")]
		[ColumnEnum("VISA_ISSUE_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		VisaIssueDate = 44,
		/// <summary>
		/// VisaExpireDate : 
		/// </summary>
		[EnumTextValue("VISA_EXPIRE_DATE")]
		[ColumnEnum("VISA_EXPIRE_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		VisaExpireDate = 45,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 46,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 47,
		/// <summary>
		/// EdCdeSocialAffairId : نوع الشؤن الاجتماعية CSS
		/// </summary>
		[EnumTextValue("ED_CDE_SOCIAL_AFFAIR_ID")]
		[ColumnEnum("ED_CDE_SOCIAL_AFFAIR_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		EdCdeSocialAffairId = 48,
		/// <summary>
		/// PucFlg : كفيل
		/// </summary>
		[EnumTextValue("PUC_FLG")]
		[ColumnEnum("PUC_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		PucFlg = 49,
		/// <summary>
		/// NoChild : PG Ejust
		/// </summary>
		[EnumTextValue("NO_CHILD")]
		[ColumnEnum("NO_CHILD", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		NoChild = 50,
		/// <summary>
		/// HighQualFlg : Deraya UG طالب حاصل على بكالريوس
		/// </summary>
		[EnumTextValue("HIGH_QUAL_FLG")]
		[ColumnEnum("HIGH_QUAL_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		HighQualFlg = 51
	}//End enum

	#endregion AdmApplicantColumn Enum

} // end namespace
