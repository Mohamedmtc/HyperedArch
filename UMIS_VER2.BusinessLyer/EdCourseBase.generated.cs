
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file EdCourse.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ED_COURSE' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class EdCourseBase : EntityBase, IEdCourse, IEntityId<EdCourseKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private EdCourseEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private EdCourseEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private EdCourseEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<EdCourse> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdCourseEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdCourseEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="EdCourseBase"/> instance.
		///</summary>
		public EdCourseBase()
		{
			this.entityData = new EdCourseEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="EdCourseBase"/> instance.
		///</summary>
		///<param name="_edCourseId"></param>
		///<param name="_edCodeCourseId"></param>
		///<param name="_courseCode"></param>
		///<param name="_courseDescrAr"></param>
		///<param name="_courseDescrEn"></param>
		///<param name="_creditHours"></param>
		///<param name="_courseContentsAr"></param>
		///<param name="_courseContentsEn"></param>
		///<param name="_entMainId"></param>
		///<param name="_gsCodeLanguageId"></param>
		///<param name="_asFacultyInfoId"></param>
		///<param name="_isActive"></param>
		///<param name="_prereqCodeExp"></param>
		///<param name="_prereqIdExp"></param>
		///<param name="_electFlg"></param>
		///<param name="_gsCourseElectTypeId">XXX</param>
		///<param name="_edCoursePrfxId"></param>
		///<param name="_crsNo"></param>
		///<param name="_pfFlg"></param>
		///<param name="_crsLvl"></param>
		///<param name="_onlineFlg"></param>
		///<param name="_stopMessage"></param>
		///<param name="_asCodeDegreeClassId"></param>
		///<param name="_edCourseExpHdrId"></param>
		///<param name="_loadWithTrain"></param>
		///<param name="_examFlg"></param>
		///<param name="_freeFlg"></param>
		///<param name="_incmpltFlg">XXXXcurrently not used</param>
		///<param name="_dropFlg"></param>
		///<param name="_examHrs">ساعات الامتحان</param>
		///<param name="_crsWgt">XXXCoefficient</param>
		///<param name="_courseDescrFr">XXX</param>
		///<param name="_ects"></param>
		///<param name="_loadCrsCount"></param>
		///<param name="_extndFlg">Thesis,TrainCourse on multiple semesters
		/// 		/// مقرر ممتد على فصلين اول وتانىmodular</param>
		///<param name="_courseMod">معرف جديد للمقرر بخلاف الكود يستخدم فى كلية الطيران CAT</param>
		///<param name="_edCodeCourseTypeId"></param>
		public EdCourseBase(System.Decimal _edCourseId, System.Decimal? _edCodeCourseId, System.String _courseCode, 
			System.String _courseDescrAr, System.String _courseDescrEn, System.Decimal _creditHours, System.String _courseContentsAr, 
			System.String _courseContentsEn, System.Decimal? _entMainId, System.Decimal _gsCodeLanguageId, 
			System.Decimal? _asFacultyInfoId, System.Decimal _isActive, System.String _prereqCodeExp, System.String _prereqIdExp, 
			System.Decimal? _electFlg, System.Decimal? _gsCourseElectTypeId, System.Decimal? _edCoursePrfxId, 
			System.String _crsNo, System.Decimal? _pfFlg, System.Decimal? _crsLvl, System.Decimal? _onlineFlg, 
			System.String _stopMessage, System.Decimal? _asCodeDegreeClassId, System.Decimal? _edCourseExpHdrId, 
			System.Decimal? _loadWithTrain, System.Decimal? _examFlg, System.Decimal? _freeFlg, System.Decimal? _incmpltFlg, 
			System.Decimal? _dropFlg, System.Decimal? _examHrs, System.Decimal? _crsWgt, System.String _courseDescrFr, 
			System.Decimal? _ects, System.Int32? _loadCrsCount, System.Boolean? _extndFlg, System.String _courseMod, 
			System.Int32? _edCodeCourseTypeId)
		{
			this.entityData = new EdCourseEntityData();
			this.backupData = null;

			this.EdCourseId = _edCourseId;
			this.EdCodeCourseId = _edCodeCourseId;
			this.CourseCode = _courseCode;
			this.CourseDescrAr = _courseDescrAr;
			this.CourseDescrEn = _courseDescrEn;
			this.CreditHours = _creditHours;
			this.CourseContentsAr = _courseContentsAr;
			this.CourseContentsEn = _courseContentsEn;
			this.EntMainId = _entMainId;
			this.GsCodeLanguageId = _gsCodeLanguageId;
			this.AsFacultyInfoId = _asFacultyInfoId;
			this.IsActive = _isActive;
			this.PrereqCodeExp = _prereqCodeExp;
			this.PrereqIdExp = _prereqIdExp;
			this.ElectFlg = _electFlg;
			this.GsCourseElectTypeId = _gsCourseElectTypeId;
			this.EdCoursePrfxId = _edCoursePrfxId;
			this.CrsNo = _crsNo;
			this.PfFlg = _pfFlg;
			this.CrsLvl = _crsLvl;
			this.OnlineFlg = _onlineFlg;
			this.StopMessage = _stopMessage;
			this.AsCodeDegreeClassId = _asCodeDegreeClassId;
			this.EdCourseExpHdrId = _edCourseExpHdrId;
			this.LoadWithTrain = _loadWithTrain;
			this.ExamFlg = _examFlg;
			this.FreeFlg = _freeFlg;
			this.IncmpltFlg = _incmpltFlg;
			this.DropFlg = _dropFlg;
			this.ExamHrs = _examHrs;
			this.CrsWgt = _crsWgt;
			this.CourseDescrFr = _courseDescrFr;
			this.Ects = _ects;
			this.LoadCrsCount = _loadCrsCount;
			this.ExtndFlg = _extndFlg;
			this.CourseMod = _courseMod;
			this.EdCodeCourseTypeId = _edCodeCourseTypeId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="EdCourse"/> instance.
		///</summary>
		///<param name="_edCourseId"></param>
		///<param name="_edCodeCourseId"></param>
		///<param name="_courseCode"></param>
		///<param name="_courseDescrAr"></param>
		///<param name="_courseDescrEn"></param>
		///<param name="_creditHours"></param>
		///<param name="_courseContentsAr"></param>
		///<param name="_courseContentsEn"></param>
		///<param name="_entMainId"></param>
		///<param name="_gsCodeLanguageId"></param>
		///<param name="_asFacultyInfoId"></param>
		///<param name="_isActive"></param>
		///<param name="_prereqCodeExp"></param>
		///<param name="_prereqIdExp"></param>
		///<param name="_electFlg"></param>
		///<param name="_gsCourseElectTypeId">XXX</param>
		///<param name="_edCoursePrfxId"></param>
		///<param name="_crsNo"></param>
		///<param name="_pfFlg"></param>
		///<param name="_crsLvl"></param>
		///<param name="_onlineFlg"></param>
		///<param name="_stopMessage"></param>
		///<param name="_asCodeDegreeClassId"></param>
		///<param name="_edCourseExpHdrId"></param>
		///<param name="_loadWithTrain"></param>
		///<param name="_examFlg"></param>
		///<param name="_freeFlg"></param>
		///<param name="_incmpltFlg">XXXXcurrently not used</param>
		///<param name="_dropFlg"></param>
		///<param name="_examHrs">ساعات الامتحان</param>
		///<param name="_crsWgt">XXXCoefficient</param>
		///<param name="_courseDescrFr">XXX</param>
		///<param name="_ects"></param>
		///<param name="_loadCrsCount"></param>
		///<param name="_extndFlg">Thesis,TrainCourse on multiple semesters
		/// 		/// مقرر ممتد على فصلين اول وتانىmodular</param>
		///<param name="_courseMod">معرف جديد للمقرر بخلاف الكود يستخدم فى كلية الطيران CAT</param>
		///<param name="_edCodeCourseTypeId"></param>
		public static EdCourse CreateEdCourse(System.Decimal _edCourseId, System.Decimal? _edCodeCourseId, System.String _courseCode, 
			System.String _courseDescrAr, System.String _courseDescrEn, System.Decimal _creditHours, System.String _courseContentsAr, 
			System.String _courseContentsEn, System.Decimal? _entMainId, System.Decimal _gsCodeLanguageId, 
			System.Decimal? _asFacultyInfoId, System.Decimal _isActive, System.String _prereqCodeExp, System.String _prereqIdExp, 
			System.Decimal? _electFlg, System.Decimal? _gsCourseElectTypeId, System.Decimal? _edCoursePrfxId, 
			System.String _crsNo, System.Decimal? _pfFlg, System.Decimal? _crsLvl, System.Decimal? _onlineFlg, 
			System.String _stopMessage, System.Decimal? _asCodeDegreeClassId, System.Decimal? _edCourseExpHdrId, 
			System.Decimal? _loadWithTrain, System.Decimal? _examFlg, System.Decimal? _freeFlg, System.Decimal? _incmpltFlg, 
			System.Decimal? _dropFlg, System.Decimal? _examHrs, System.Decimal? _crsWgt, System.String _courseDescrFr, 
			System.Decimal? _ects, System.Int32? _loadCrsCount, System.Boolean? _extndFlg, System.String _courseMod, 
			System.Int32? _edCodeCourseTypeId)
		{
			EdCourse newEdCourse = new EdCourse();
			newEdCourse.EdCourseId = _edCourseId;
			newEdCourse.EdCodeCourseId = _edCodeCourseId;
			newEdCourse.CourseCode = _courseCode;
			newEdCourse.CourseDescrAr = _courseDescrAr;
			newEdCourse.CourseDescrEn = _courseDescrEn;
			newEdCourse.CreditHours = _creditHours;
			newEdCourse.CourseContentsAr = _courseContentsAr;
			newEdCourse.CourseContentsEn = _courseContentsEn;
			newEdCourse.EntMainId = _entMainId;
			newEdCourse.GsCodeLanguageId = _gsCodeLanguageId;
			newEdCourse.AsFacultyInfoId = _asFacultyInfoId;
			newEdCourse.IsActive = _isActive;
			newEdCourse.PrereqCodeExp = _prereqCodeExp;
			newEdCourse.PrereqIdExp = _prereqIdExp;
			newEdCourse.ElectFlg = _electFlg;
			newEdCourse.GsCourseElectTypeId = _gsCourseElectTypeId;
			newEdCourse.EdCoursePrfxId = _edCoursePrfxId;
			newEdCourse.CrsNo = _crsNo;
			newEdCourse.PfFlg = _pfFlg;
			newEdCourse.CrsLvl = _crsLvl;
			newEdCourse.OnlineFlg = _onlineFlg;
			newEdCourse.StopMessage = _stopMessage;
			newEdCourse.AsCodeDegreeClassId = _asCodeDegreeClassId;
			newEdCourse.EdCourseExpHdrId = _edCourseExpHdrId;
			newEdCourse.LoadWithTrain = _loadWithTrain;
			newEdCourse.ExamFlg = _examFlg;
			newEdCourse.FreeFlg = _freeFlg;
			newEdCourse.IncmpltFlg = _incmpltFlg;
			newEdCourse.DropFlg = _dropFlg;
			newEdCourse.ExamHrs = _examHrs;
			newEdCourse.CrsWgt = _crsWgt;
			newEdCourse.CourseDescrFr = _courseDescrFr;
			newEdCourse.Ects = _ects;
			newEdCourse.LoadCrsCount = _loadCrsCount;
			newEdCourse.ExtndFlg = _extndFlg;
			newEdCourse.CourseMod = _courseMod;
			newEdCourse.EdCodeCourseTypeId = _edCodeCourseTypeId;
			return newEdCourse;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the EdCourseId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal EdCourseId
		{
			get
			{
				return this.entityData.EdCourseId; 
			}
			
			set
			{
				if (this.entityData.EdCourseId == value)
					return;
					
				OnColumnChanging(EdCourseColumn.EdCourseId, this.entityData.EdCourseId);
				this.entityData.EdCourseId = value;
				this.EntityId.EdCourseId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.EdCourseId, this.entityData.EdCourseId);
				OnPropertyChanged("EdCourseId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ED_COURSE_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the ED_COURSE_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalEdCourseId
		{
			get { return this.entityData.OriginalEdCourseId; }
			set { this.entityData.OriginalEdCourseId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeCourseId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeCourseIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCodeCourseId
		{
			get
			{
				return this.entityData.EdCodeCourseId; 
			}
			
			set
			{
				if (this.entityData.EdCodeCourseId == value)
					return;
					
				OnColumnChanging(EdCourseColumn.EdCodeCourseId, this.entityData.EdCodeCourseId);
				this.entityData.EdCodeCourseId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.EdCodeCourseId, this.entityData.EdCodeCourseId);
				OnPropertyChanged("EdCodeCourseId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CourseCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 50)]
		public virtual System.String CourseCode
		{
			get
			{
				return this.entityData.CourseCode; 
			}
			
			set
			{
				if (this.entityData.CourseCode == value)
					return;
					
				OnColumnChanging(EdCourseColumn.CourseCode, this.entityData.CourseCode);
				this.entityData.CourseCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.CourseCode, this.entityData.CourseCode);
				OnPropertyChanged("CourseCode");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CourseDescrAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 150)]
		public virtual System.String CourseDescrAr
		{
			get
			{
				return this.entityData.CourseDescrAr; 
			}
			
			set
			{
				if (this.entityData.CourseDescrAr == value)
					return;
					
				OnColumnChanging(EdCourseColumn.CourseDescrAr, this.entityData.CourseDescrAr);
				this.entityData.CourseDescrAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.CourseDescrAr, this.entityData.CourseDescrAr);
				OnPropertyChanged("CourseDescrAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CourseDescrEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 150)]
		public virtual System.String CourseDescrEn
		{
			get
			{
				return this.entityData.CourseDescrEn; 
			}
			
			set
			{
				if (this.entityData.CourseDescrEn == value)
					return;
					
				OnColumnChanging(EdCourseColumn.CourseDescrEn, this.entityData.CourseDescrEn);
				this.entityData.CourseDescrEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.CourseDescrEn, this.entityData.CourseDescrEn);
				OnPropertyChanged("CourseDescrEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CreditHours property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal CreditHours
		{
			get
			{
				return this.entityData.CreditHours; 
			}
			
			set
			{
				if (this.entityData.CreditHours == value)
					return;
					
				OnColumnChanging(EdCourseColumn.CreditHours, this.entityData.CreditHours);
				this.entityData.CreditHours = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.CreditHours, this.entityData.CreditHours);
				OnPropertyChanged("CreditHours");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CourseContentsAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 4000)]
		public virtual System.String CourseContentsAr
		{
			get
			{
				return this.entityData.CourseContentsAr; 
			}
			
			set
			{
				if (this.entityData.CourseContentsAr == value)
					return;
					
				OnColumnChanging(EdCourseColumn.CourseContentsAr, this.entityData.CourseContentsAr);
				this.entityData.CourseContentsAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.CourseContentsAr, this.entityData.CourseContentsAr);
				OnPropertyChanged("CourseContentsAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CourseContentsEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 4000)]
		public virtual System.String CourseContentsEn
		{
			get
			{
				return this.entityData.CourseContentsEn; 
			}
			
			set
			{
				if (this.entityData.CourseContentsEn == value)
					return;
					
				OnColumnChanging(EdCourseColumn.CourseContentsEn, this.entityData.CourseContentsEn);
				this.entityData.CourseContentsEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.CourseContentsEn, this.entityData.CourseContentsEn);
				OnPropertyChanged("CourseContentsEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EntMainId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEntMainIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EntMainId
		{
			get
			{
				return this.entityData.EntMainId; 
			}
			
			set
			{
				if (this.entityData.EntMainId == value)
					return;
					
				OnColumnChanging(EdCourseColumn.EntMainId, this.entityData.EntMainId);
				this.entityData.EntMainId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.EntMainId, this.entityData.EntMainId);
				OnPropertyChanged("EntMainId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeLanguageId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal GsCodeLanguageId
		{
			get
			{
				return this.entityData.GsCodeLanguageId; 
			}
			
			set
			{
				if (this.entityData.GsCodeLanguageId == value)
					return;
					
				OnColumnChanging(EdCourseColumn.GsCodeLanguageId, this.entityData.GsCodeLanguageId);
				this.entityData.GsCodeLanguageId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.GsCodeLanguageId, this.entityData.GsCodeLanguageId);
				OnPropertyChanged("GsCodeLanguageId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AsFacultyInfoId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAsFacultyInfoIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AsFacultyInfoId
		{
			get
			{
				return this.entityData.AsFacultyInfoId; 
			}
			
			set
			{
				if (this.entityData.AsFacultyInfoId == value)
					return;
					
				OnColumnChanging(EdCourseColumn.AsFacultyInfoId, this.entityData.AsFacultyInfoId);
				this.entityData.AsFacultyInfoId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.AsFacultyInfoId, this.entityData.AsFacultyInfoId);
				OnPropertyChanged("AsFacultyInfoId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IsActive property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal IsActive
		{
			get
			{
				return this.entityData.IsActive; 
			}
			
			set
			{
				if (this.entityData.IsActive == value)
					return;
					
				OnColumnChanging(EdCourseColumn.IsActive, this.entityData.IsActive);
				this.entityData.IsActive = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.IsActive, this.entityData.IsActive);
				OnPropertyChanged("IsActive");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PrereqCodeExp property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String PrereqCodeExp
		{
			get
			{
				return this.entityData.PrereqCodeExp; 
			}
			
			set
			{
				if (this.entityData.PrereqCodeExp == value)
					return;
					
				OnColumnChanging(EdCourseColumn.PrereqCodeExp, this.entityData.PrereqCodeExp);
				this.entityData.PrereqCodeExp = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.PrereqCodeExp, this.entityData.PrereqCodeExp);
				OnPropertyChanged("PrereqCodeExp");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PrereqIdExp property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String PrereqIdExp
		{
			get
			{
				return this.entityData.PrereqIdExp; 
			}
			
			set
			{
				if (this.entityData.PrereqIdExp == value)
					return;
					
				OnColumnChanging(EdCourseColumn.PrereqIdExp, this.entityData.PrereqIdExp);
				this.entityData.PrereqIdExp = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.PrereqIdExp, this.entityData.PrereqIdExp);
				OnPropertyChanged("PrereqIdExp");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ElectFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsElectFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ElectFlg
		{
			get
			{
				return this.entityData.ElectFlg; 
			}
			
			set
			{
				if (this.entityData.ElectFlg == value)
					return;
					
				OnColumnChanging(EdCourseColumn.ElectFlg, this.entityData.ElectFlg);
				this.entityData.ElectFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.ElectFlg, this.entityData.ElectFlg);
				OnPropertyChanged("ElectFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCourseElectTypeId property. 
		///		XXX
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCourseElectTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXX"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCourseElectTypeId
		{
			get
			{
				return this.entityData.GsCourseElectTypeId; 
			}
			
			set
			{
				if (this.entityData.GsCourseElectTypeId == value)
					return;
					
				OnColumnChanging(EdCourseColumn.GsCourseElectTypeId, this.entityData.GsCourseElectTypeId);
				this.entityData.GsCourseElectTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.GsCourseElectTypeId, this.entityData.GsCourseElectTypeId);
				OnPropertyChanged("GsCourseElectTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCoursePrfxId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCoursePrfxIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCoursePrfxId
		{
			get
			{
				return this.entityData.EdCoursePrfxId; 
			}
			
			set
			{
				if (this.entityData.EdCoursePrfxId == value)
					return;
					
				OnColumnChanging(EdCourseColumn.EdCoursePrfxId, this.entityData.EdCoursePrfxId);
				this.entityData.EdCoursePrfxId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.EdCoursePrfxId, this.entityData.EdCoursePrfxId);
				OnPropertyChanged("EdCoursePrfxId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CrsNo property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 40)]
		public virtual System.String CrsNo
		{
			get
			{
				return this.entityData.CrsNo; 
			}
			
			set
			{
				if (this.entityData.CrsNo == value)
					return;
					
				OnColumnChanging(EdCourseColumn.CrsNo, this.entityData.CrsNo);
				this.entityData.CrsNo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.CrsNo, this.entityData.CrsNo);
				OnPropertyChanged("CrsNo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PfFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPfFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? PfFlg
		{
			get
			{
				return this.entityData.PfFlg; 
			}
			
			set
			{
				if (this.entityData.PfFlg == value)
					return;
					
				OnColumnChanging(EdCourseColumn.PfFlg, this.entityData.PfFlg);
				this.entityData.PfFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.PfFlg, this.entityData.PfFlg);
				OnPropertyChanged("PfFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CrsLvl property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCrsLvlNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? CrsLvl
		{
			get
			{
				return this.entityData.CrsLvl; 
			}
			
			set
			{
				if (this.entityData.CrsLvl == value)
					return;
					
				OnColumnChanging(EdCourseColumn.CrsLvl, this.entityData.CrsLvl);
				this.entityData.CrsLvl = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.CrsLvl, this.entityData.CrsLvl);
				OnPropertyChanged("CrsLvl");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OnlineFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsOnlineFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? OnlineFlg
		{
			get
			{
				return this.entityData.OnlineFlg; 
			}
			
			set
			{
				if (this.entityData.OnlineFlg == value)
					return;
					
				OnColumnChanging(EdCourseColumn.OnlineFlg, this.entityData.OnlineFlg);
				this.entityData.OnlineFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.OnlineFlg, this.entityData.OnlineFlg);
				OnPropertyChanged("OnlineFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StopMessage property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String StopMessage
		{
			get
			{
				return this.entityData.StopMessage; 
			}
			
			set
			{
				if (this.entityData.StopMessage == value)
					return;
					
				OnColumnChanging(EdCourseColumn.StopMessage, this.entityData.StopMessage);
				this.entityData.StopMessage = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.StopMessage, this.entityData.StopMessage);
				OnPropertyChanged("StopMessage");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AsCodeDegreeClassId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAsCodeDegreeClassIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AsCodeDegreeClassId
		{
			get
			{
				return this.entityData.AsCodeDegreeClassId; 
			}
			
			set
			{
				if (this.entityData.AsCodeDegreeClassId == value)
					return;
					
				OnColumnChanging(EdCourseColumn.AsCodeDegreeClassId, this.entityData.AsCodeDegreeClassId);
				this.entityData.AsCodeDegreeClassId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.AsCodeDegreeClassId, this.entityData.AsCodeDegreeClassId);
				OnPropertyChanged("AsCodeDegreeClassId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCourseExpHdrId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCourseExpHdrIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCourseExpHdrId
		{
			get
			{
				return this.entityData.EdCourseExpHdrId; 
			}
			
			set
			{
				if (this.entityData.EdCourseExpHdrId == value)
					return;
					
				OnColumnChanging(EdCourseColumn.EdCourseExpHdrId, this.entityData.EdCourseExpHdrId);
				this.entityData.EdCourseExpHdrId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.EdCourseExpHdrId, this.entityData.EdCourseExpHdrId);
				OnPropertyChanged("EdCourseExpHdrId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LoadWithTrain property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsLoadWithTrainNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? LoadWithTrain
		{
			get
			{
				return this.entityData.LoadWithTrain; 
			}
			
			set
			{
				if (this.entityData.LoadWithTrain == value)
					return;
					
				OnColumnChanging(EdCourseColumn.LoadWithTrain, this.entityData.LoadWithTrain);
				this.entityData.LoadWithTrain = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.LoadWithTrain, this.entityData.LoadWithTrain);
				OnPropertyChanged("LoadWithTrain");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ExamFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsExamFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ExamFlg
		{
			get
			{
				return this.entityData.ExamFlg; 
			}
			
			set
			{
				if (this.entityData.ExamFlg == value)
					return;
					
				OnColumnChanging(EdCourseColumn.ExamFlg, this.entityData.ExamFlg);
				this.entityData.ExamFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.ExamFlg, this.entityData.ExamFlg);
				OnPropertyChanged("ExamFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FreeFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFreeFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FreeFlg
		{
			get
			{
				return this.entityData.FreeFlg; 
			}
			
			set
			{
				if (this.entityData.FreeFlg == value)
					return;
					
				OnColumnChanging(EdCourseColumn.FreeFlg, this.entityData.FreeFlg);
				this.entityData.FreeFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.FreeFlg, this.entityData.FreeFlg);
				OnPropertyChanged("FreeFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IncmpltFlg property. 
		///		XXXXcurrently not used
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsIncmpltFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXXXcurrently not used"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? IncmpltFlg
		{
			get
			{
				return this.entityData.IncmpltFlg; 
			}
			
			set
			{
				if (this.entityData.IncmpltFlg == value)
					return;
					
				OnColumnChanging(EdCourseColumn.IncmpltFlg, this.entityData.IncmpltFlg);
				this.entityData.IncmpltFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.IncmpltFlg, this.entityData.IncmpltFlg);
				OnPropertyChanged("IncmpltFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DropFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsDropFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DropFlg
		{
			get
			{
				return this.entityData.DropFlg; 
			}
			
			set
			{
				if (this.entityData.DropFlg == value)
					return;
					
				OnColumnChanging(EdCourseColumn.DropFlg, this.entityData.DropFlg);
				this.entityData.DropFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.DropFlg, this.entityData.DropFlg);
				OnPropertyChanged("DropFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ExamHrs property. 
		///		ساعات الامتحان
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsExamHrsNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"ساعات الامتحان"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ExamHrs
		{
			get
			{
				return this.entityData.ExamHrs; 
			}
			
			set
			{
				if (this.entityData.ExamHrs == value)
					return;
					
				OnColumnChanging(EdCourseColumn.ExamHrs, this.entityData.ExamHrs);
				this.entityData.ExamHrs = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.ExamHrs, this.entityData.ExamHrs);
				OnPropertyChanged("ExamHrs");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CrsWgt property. 
		///		XXXCoefficient
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCrsWgtNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXXCoefficient"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? CrsWgt
		{
			get
			{
				return this.entityData.CrsWgt; 
			}
			
			set
			{
				if (this.entityData.CrsWgt == value)
					return;
					
				OnColumnChanging(EdCourseColumn.CrsWgt, this.entityData.CrsWgt);
				this.entityData.CrsWgt = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.CrsWgt, this.entityData.CrsWgt);
				OnPropertyChanged("CrsWgt");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CourseDescrFr property. 
		///		XXX
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"XXX"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String CourseDescrFr
		{
			get
			{
				return this.entityData.CourseDescrFr; 
			}
			
			set
			{
				if (this.entityData.CourseDescrFr == value)
					return;
					
				OnColumnChanging(EdCourseColumn.CourseDescrFr, this.entityData.CourseDescrFr);
				this.entityData.CourseDescrFr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.CourseDescrFr, this.entityData.CourseDescrFr);
				OnPropertyChanged("CourseDescrFr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Ects property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEctsNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? Ects
		{
			get
			{
				return this.entityData.Ects; 
			}
			
			set
			{
				if (this.entityData.Ects == value)
					return;
					
				OnColumnChanging(EdCourseColumn.Ects, this.entityData.Ects);
				this.entityData.Ects = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.Ects, this.entityData.Ects);
				OnPropertyChanged("Ects");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LoadCrsCount property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsLoadCrsCountNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? LoadCrsCount
		{
			get
			{
				return this.entityData.LoadCrsCount; 
			}
			
			set
			{
				if (this.entityData.LoadCrsCount == value)
					return;
					
				OnColumnChanging(EdCourseColumn.LoadCrsCount, this.entityData.LoadCrsCount);
				this.entityData.LoadCrsCount = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.LoadCrsCount, this.entityData.LoadCrsCount);
				OnPropertyChanged("LoadCrsCount");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ExtndFlg property. 
		///		Thesis,TrainCourse on multiple semesters
		/// 		/// مقرر ممتد على فصلين اول وتانىmodular
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsExtndFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"Thesis,TrainCourse on multiple semesters مقرر ممتد على فصلين اول وتانىmodular"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? ExtndFlg
		{
			get
			{
				return this.entityData.ExtndFlg; 
			}
			
			set
			{
				if (this.entityData.ExtndFlg == value)
					return;
					
				OnColumnChanging(EdCourseColumn.ExtndFlg, this.entityData.ExtndFlg);
				this.entityData.ExtndFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.ExtndFlg, this.entityData.ExtndFlg);
				OnPropertyChanged("ExtndFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CourseMod property. 
		///		معرف جديد للمقرر بخلاف الكود يستخدم فى كلية الطيران CAT
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"معرف جديد للمقرر بخلاف الكود يستخدم فى كلية الطيران CAT"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String CourseMod
		{
			get
			{
				return this.entityData.CourseMod; 
			}
			
			set
			{
				if (this.entityData.CourseMod == value)
					return;
					
				OnColumnChanging(EdCourseColumn.CourseMod, this.entityData.CourseMod);
				this.entityData.CourseMod = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.CourseMod, this.entityData.CourseMod);
				OnPropertyChanged("CourseMod");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeCourseTypeId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsEdCodeCourseTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? EdCodeCourseTypeId
		{
			get
			{
				return this.entityData.EdCodeCourseTypeId; 
			}
			
			set
			{
				if (this.entityData.EdCodeCourseTypeId == value)
					return;
					
				OnColumnChanging(EdCourseColumn.EdCodeCourseTypeId, this.entityData.EdCodeCourseTypeId);
				this.entityData.EdCodeCourseTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdCourseColumn.EdCodeCourseTypeId, this.entityData.EdCodeCourseTypeId);
				OnPropertyChanged("EdCodeCourseTypeId");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeLanguage"/>.
		/// </summary>
		/// <value>The source GsCodeLanguage for GsCodeLanguageId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeLanguage GsCodeLanguageIdSource
      	{
            get { return entityData.GsCodeLanguageIdSource; }
            set { entityData.GsCodeLanguageIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AsCodeDegreeClass"/>.
		/// </summary>
		/// <value>The source AsCodeDegreeClass for AsCodeDegreeClassId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AsCodeDegreeClass AsCodeDegreeClassIdSource
      	{
            get { return entityData.AsCodeDegreeClassIdSource; }
            set { entityData.AsCodeDegreeClassIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AsFacultyInfo"/>.
		/// </summary>
		/// <value>The source AsFacultyInfo for AsFacultyInfoId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AsFacultyInfo AsFacultyInfoIdSource
      	{
            get { return entityData.AsFacultyInfoIdSource; }
            set { entityData.AsFacultyInfoIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeCourse"/>.
		/// </summary>
		/// <value>The source EdCodeCourse for EdCodeCourseId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeCourse EdCodeCourseIdSource
      	{
            get { return entityData.EdCodeCourseIdSource; }
            set { entityData.EdCodeCourseIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeCourseType"/>.
		/// </summary>
		/// <value>The source EdCodeCourseType for EdCodeCourseTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeCourseType EdCodeCourseTypeIdSource
      	{
            get { return entityData.EdCodeCourseTypeIdSource; }
            set { entityData.EdCodeCourseTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCourseExpHdr"/>.
		/// </summary>
		/// <value>The source EdCourseExpHdr for EdCourseExpHdrId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCourseExpHdr EdCourseExpHdrIdSource
      	{
            get { return entityData.EdCourseExpHdrIdSource; }
            set { entityData.EdCourseExpHdrIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCoursePrfx"/>.
		/// </summary>
		/// <value>The source EdCoursePrfx for EdCoursePrfxId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCoursePrfx EdCoursePrfxIdSource
      	{
            get { return entityData.EdCoursePrfxIdSource; }
            set { entityData.EdCoursePrfxIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EntityMain"/>.
		/// </summary>
		/// <value>The source EntityMain for EntMainId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EntityMain EntMainIdSource
      	{
            get { return entityData.EntMainIdSource; }
            set { entityData.EntMainIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of EdStudExmptCrsFrom objects
		///	which are related to this object through the relation FK_ED_STUD_EXMPT_CRS_FROM_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudExmptCrsFrom> EdStudExmptCrsFromCollection
		{
			get { return entityData.EdStudExmptCrsFromCollection; }
			set { entityData.EdStudExmptCrsFromCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of WfCrsRsltApprove objects
		///	which are related to this object through the relation FK_WF_CRS_RSLT_APPROVE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<WfCrsRsltApprove> WfCrsRsltApproveCollection
		{
			get { return entityData.WfCrsRsltApproveCollection; }
			set { entityData.WfCrsRsltApproveCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseReg objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_ED_COURSE1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseReg> EdStudCourseRegCollectionGetByEdCourseOrgId
		{
			get { return entityData.EdStudCourseRegCollectionGetByEdCourseOrgId; }
			set { entityData.EdStudCourseRegCollectionGetByEdCourseOrgId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRegPre objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_PRE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRegPre> EdStudCourseRegPreCollection
		{
			get { return entityData.EdStudCourseRegPreCollection; }
			set { entityData.EdStudCourseRegPreCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseTchng objects
		///	which are related to this object through the relation FK_ED_COURSE_TCHNG_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseTchng> EdCourseTchngCollection
		{
			get { return entityData.EdCourseTchngCollection; }
			set { entityData.EdCourseTchngCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdOfferingCourse objects
		///	which are related to this object through the relation FK_ED_OFFERING_COURSE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdOfferingCourse> EdOfferingCourseCollection
		{
			get { return entityData.EdOfferingCourseCollection; }
			set { entityData.EdOfferingCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseOrient objects
		///	which are related to this object through the relation FK_ED_COURSE_ORIENT_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseOrient> EdCourseOrientCollection
		{
			get { return entityData.EdCourseOrientCollection; }
			set { entityData.EdCourseOrientCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdTrainStud objects
		///	which are related to this object through the relation FK_ED_TRAIN_STUD_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdTrainStud> EdTrainStudCollection
		{
			get { return entityData.EdTrainStudCollection; }
			set { entityData.EdTrainStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseOutcomesTopics objects
		///	which are related to this object through the relation FK_ED_Course_Outcomes_Topics_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseOutcomesTopics> EdCourseOutcomesTopicsCollection
		{
			get { return entityData.EdCourseOutcomesTopicsCollection; }
			set { entityData.EdCourseOutcomesTopicsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseWait objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_WAIT_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseWait> EdStudCourseWaitCollection
		{
			get { return entityData.EdStudCourseWaitCollection; }
			set { entityData.EdStudCourseWaitCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdExamSchdl objects
		///	which are related to this object through the relation FK_ED_EXAM_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdExamSchdl> EdExamSchdlCollection
		{
			get { return entityData.EdExamSchdlCollection; }
			set { entityData.EdExamSchdlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseTopic objects
		///	which are related to this object through the relation FK_ED_COURSE_TOPIC_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseTopic> EdCourseTopicCollection
		{
			get { return entityData.EdCourseTopicCollection; }
			set { entityData.EdCourseTopicCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntPolicyAssessCourse objects
		///	which are related to this object through the relation FK_ENT_POLICY_ASSESS_COURSE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntPolicyAssessCourse> EntPolicyAssessCourseCollection
		{
			get { return entityData.EntPolicyAssessCourseCollection; }
			set { entityData.EntPolicyAssessCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntPolicyGradingCourse objects
		///	which are related to this object through the relation FK_ENT_POLICY_GRADING_COURSE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntPolicyGradingCourse> EntPolicyGradingCourseCollection
		{
			get { return entityData.EntPolicyGradingCourseCollection; }
			set { entityData.EntPolicyGradingCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseBarred objects
		///	which are related to this object through the relation FK_ED_SUBJECT_OPPOSED_ED_COURSE1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseBarred> EdCourseBarredCollectionGetByEdBarredCourseId
		{
			get { return entityData.EdCourseBarredCollectionGetByEdBarredCourseId; }
			set { entityData.EdCourseBarredCollectionGetByEdBarredCourseId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseBarred objects
		///	which are related to this object through the relation FK_ED_SUBJECT_OPPOSED_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseBarred> EdCourseBarredCollectionGetByEdCourseId
		{
			get { return entityData.EdCourseBarredCollectionGetByEdCourseId; }
			set { entityData.EdCourseBarredCollectionGetByEdCourseId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgThesisGrantStud objects
		///	which are related to this object through the relation FK_PG_THESIS_GRANT_STUD_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisGrantStud> PgThesisGrantStudCollection
		{
			get { return entityData.PgThesisGrantStudCollection; }
			set { entityData.PgThesisGrantStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudLateness objects
		///	which are related to this object through the relation FK_Ed_Stud_Lateness_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudLateness> EdStudLatenessCollection
		{
			get { return entityData.EdStudLatenessCollection; }
			set { entityData.EdStudLatenessCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntPolcyGrdngCourse objects
		///	which are related to this object through the relation FK_ENT_POLCY_GRDNG_COURSE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntPolcyGrdngCourse> EntPolcyGrdngCourseCollection
		{
			get { return entityData.EntPolcyGrdngCourseCollection; }
			set { entityData.EntPolcyGrdngCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoContRmMemCourse objects
		///	which are related to this object through the relation FK_CO_CONT_RM_MEM_SCR_COURSE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoContRmMemCourse> CoContRmMemCourseCollection
		{
			get { return entityData.CoContRmMemCourseCollection; }
			set { entityData.CoContRmMemCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudCourseEval objects
		///	which are related to this object through the relation FK_SV_STUD_COURSE_EVAL_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudCourseEval> SvStudCourseEvalCollection
		{
			get { return entityData.SvStudCourseEvalCollection; }
			set { entityData.SvStudCourseEvalCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseEquiv objects
		///	which are related to this object through the relation FK_ED_COURSE_EQUIV_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseEquiv> EdCourseEquivCollectionGetByEdEquivCourseId
		{
			get { return entityData.EdCourseEquivCollectionGetByEdEquivCourseId; }
			set { entityData.EdCourseEquivCollectionGetByEdEquivCourseId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseRltd objects
		///	which are related to this object through the relation FK_ED_COURSE_RLTD_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseRltd> EdCourseRltdCollectionGetByEdCourse1Id
		{
			get { return entityData.EdCourseRltdCollectionGetByEdCourse1Id; }
			set { entityData.EdCourseRltdCollectionGetByEdCourse1Id = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudVoucherCrsItem objects
		///	which are related to this object through the relation FK_FEE_STUD_VOUCHER_CRS_ITEM_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudVoucherCrsItem> FeeStudVoucherCrsItemCollection
		{
			get { return entityData.FeeStudVoucherCrsItemCollection; }
			set { entityData.FeeStudVoucherCrsItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudComp objects
		///	which are related to this object through the relation FK_SV_STUD_COMP_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudComp> SvStudCompCollection
		{
			get { return entityData.SvStudCompCollection; }
			set { entityData.SvStudCompCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseInfo objects
		///	which are related to this object through the relation FK_ED_COURSE_INFO_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseInfo> EdCourseInfoCollection
		{
			get { return entityData.EdCourseInfoCollection; }
			set { entityData.EdCourseInfoCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCrsFreeRstrctd objects
		///	which are related to this object through the relation FK_ED_CRS_FREE_RSTRCTD_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCrsFreeRstrctd> EdCrsFreeRstrctdCollection
		{
			get { return entityData.EdCrsFreeRstrctdCollection; }
			set { entityData.EdCrsFreeRstrctdCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmPlaceExamCourse objects
		///	which are related to this object through the relation FK_ADM_PLACE_EXAM_COURSE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmPlaceExamCourse> AdmPlaceExamCourseCollection
		{
			get { return entityData.AdmPlaceExamCourseCollection; }
			set { entityData.AdmPlaceExamCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoCourseResult objects
		///	which are related to this object through the relation FK_CO_COURSE_RESULT_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoCourseResult> CoCourseResultCollection
		{
			get { return entityData.CoCourseResultCollection; }
			set { entityData.CoCourseResultCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudCoursesItem objects
		///	which are related to this object through the relation FK_FEE_STUD_COURSES_ITEM_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudCoursesItem> FeeStudCoursesItemCollection
		{
			get { return entityData.FeeStudCoursesItemCollection; }
			set { entityData.FeeStudCoursesItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRegTemp objects
		///	which are related to this object through the relation FK_STUD_COURSE_REG_TMP_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRegTemp> EdStudCourseRegTempCollection
		{
			get { return entityData.EdStudCourseRegTempCollection; }
			set { entityData.EdStudCourseRegTempCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseChng objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_CHNG_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseChng> EdStudCourseChngCollectionGetByEdCourseId
		{
			get { return entityData.EdStudCourseChngCollectionGetByEdCourseId; }
			set { entityData.EdStudCourseChngCollectionGetByEdCourseId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseChng objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_CHNG_ED_COURSE1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseChng> EdStudCourseChngCollectionGetByEdCourseSubId
		{
			get { return entityData.EdStudCourseChngCollectionGetByEdCourseSubId; }
			set { entityData.EdStudCourseChngCollectionGetByEdCourseSubId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgThesisStud objects
		///	which are related to this object through the relation FK_PG_THESIS_STUD_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisStud> PgThesisStudCollection
		{
			get { return entityData.PgThesisStudCollection; }
			set { entityData.PgThesisStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudExmptCrsTo objects
		///	which are related to this object through the relation FK_ED_STUD_EXMPT_CRS_TO_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudExmptCrsTo> EdStudExmptCrsToCollection
		{
			get { return entityData.EdStudExmptCrsToCollection; }
			set { entityData.EdStudExmptCrsToCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsCourseFrom objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_COURSE_FROM_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsCourseFrom> EdStudIntTrnsCourseFromCollection
		{
			get { return entityData.EdStudIntTrnsCourseFromCollection; }
			set { entityData.EdStudIntTrnsCourseFromCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoCrsRsltRaise objects
		///	which are related to this object through the relation FK_CO_CRS_RSLT_RAISE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoCrsRsltRaise> CoCrsRsltRaiseCollection
		{
			get { return entityData.CoCrsRsltRaiseCollection; }
			set { entityData.CoCrsRsltRaiseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntMajorPhaseCrsExp objects
		///	which are related to this object through the relation FK_ENT_MAJOR_PHASE_CRS_EXP_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntMajorPhaseCrsExp> EntMajorPhaseCrsExpCollection
		{
			get { return entityData.EntMajorPhaseCrsExpCollection; }
			set { entityData.EntMajorPhaseCrsExpCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdOutcome objects
		///	which are related to this object through the relation FK_ED_OUTCOME_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdOutcome> EdOutcomeCollection
		{
			get { return entityData.EdOutcomeCollection; }
			set { entityData.EdOutcomeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdExamCrsOrder objects
		///	which are related to this object through the relation FK_ED_EXAM_CRS_ORDER_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdExamCrsOrder> EdExamCrsOrderCollection
		{
			get { return entityData.EdExamCrsOrderCollection; }
			set { entityData.EdExamCrsOrderCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdBranchCrs objects
		///	which are related to this object through the relation FK_ED_BRANCH_CRS_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdBranchCrs> EdBranchCrsCollection
		{
			get { return entityData.EdBranchCrsCollection; }
			set { entityData.EdBranchCrsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScSectionGroupHdr objects
		///	which are related to this object through the relation FK_SC_SECTION_GROUP_HDR_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScSectionGroupHdr> ScSectionGroupHdrCollection
		{
			get { return entityData.ScSectionGroupHdrCollection; }
			set { entityData.ScSectionGroupHdrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdProjStud objects
		///	which are related to this object through the relation FK_ED_PROJ_STUD_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdProjStud> EdProjStudCollection
		{
			get { return entityData.EdProjStudCollection; }
			set { entityData.EdProjStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvCourseEval objects
		///	which are related to this object through the relation FK_SV_COURSE_EVAL_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvCourseEval> SvCourseEvalCollection
		{
			get { return entityData.SvCourseEvalCollection; }
			set { entityData.SvCourseEvalCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRplc objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_RPLC_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRplc> EdStudCourseRplcCollectionGetByEdCourseOldId
		{
			get { return entityData.EdStudCourseRplcCollectionGetByEdCourseOldId; }
			set { entityData.EdStudCourseRplcCollectionGetByEdCourseOldId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseReg objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseReg> EdStudCourseRegCollectionGetByEdCourseId
		{
			get { return entityData.EdStudCourseRegCollectionGetByEdCourseId; }
			set { entityData.EdStudCourseRegCollectionGetByEdCourseId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScHallRsrv objects
		///	which are related to this object through the relation FK_SC_HALL_RSRV_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScHallRsrv> ScHallRsrvCollection
		{
			get { return entityData.ScHallRsrvCollection; }
			set { entityData.ScHallRsrvCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseRltd objects
		///	which are related to this object through the relation FK_ED_COURSE_RLTD_ED_COURSE1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseRltd> EdCourseRltdCollectionGetByEdCourse2Id
		{
			get { return entityData.EdCourseRltdCollectionGetByEdCourse2Id; }
			set { entityData.EdCourseRltdCollectionGetByEdCourse2Id = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAbsence objects
		///	which are related to this object through the relation FK_ED_STUD_ABSENCE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAbsence> EdStudAbsenceCollection
		{
			get { return entityData.EdStudAbsenceCollection; }
			set { entityData.EdStudAbsenceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAbsFw objects
		///	which are related to this object through the relation FK_ED_STUD_ABS_FW_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAbsFw> EdStudAbsFwCollection
		{
			get { return entityData.EdStudAbsFwCollection; }
			set { entityData.EdStudAbsFwCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntCoursePkgDtl objects
		///	which are related to this object through the relation FK_ENT_COURSE_PKG_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntCoursePkgDtl> EntCoursePkgDtlCollection
		{
			get { return entityData.EntCoursePkgDtlCollection; }
			set { entityData.EntCoursePkgDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRplc objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_RPLC_ED_COURSE1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRplc> EdStudCourseRplcCollectionGetByEdCourseNewId
		{
			get { return entityData.EdStudCourseRplcCollectionGetByEdCourseNewId; }
			set { entityData.EdStudCourseRplcCollectionGetByEdCourseNewId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseEquiv objects
		///	which are related to this object through the relation FK_ED_COURSE_EQUIV_ED_COURSE1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseEquiv> EdCourseEquivCollectionGetByEdCourseId
		{
			get { return entityData.EdCourseEquivCollectionGetByEdCourseId; }
			set { entityData.EdCourseEquivCollectionGetByEdCourseId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScSchdlSlot objects
		///	which are related to this object through the relation FK_SC_SCHDL_SLOT_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScSchdlSlot> ScSchdlSlotCollection
		{
			get { return entityData.ScSchdlSlotCollection; }
			set { entityData.ScSchdlSlotCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudExcuseCourse objects
		///	which are related to this object through the relation FK_ED_STUD_EXCUSE_COURSE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudExcuseCourse> EdStudExcuseCourseCollection
		{
			get { return entityData.EdStudExcuseCourseCollection; }
			set { entityData.EdStudExcuseCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvPollHdr objects
		///	which are related to this object through the relation FK_SV_POLL_HDR_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvPollHdr> SvPollHdrCollection
		{
			get { return entityData.SvPollHdrCollection; }
			set { entityData.SvPollHdrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppPlaceExamCourse objects
		///	which are related to this object through the relation FK_ADM_APP_PLACE_EXAM_COURSE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppPlaceExamCourse> AdmAppPlaceExamCourseCollection
		{
			get { return entityData.AdmAppPlaceExamCourseCollection; }
			set { entityData.AdmAppPlaceExamCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SeUserCrsAssess objects
		///	which are related to this object through the relation FK_SE_USER_CRS_ASSESS_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SeUserCrsAssess> SeUserCrsAssessCollection
		{
			get { return entityData.SeUserCrsAssessCollection; }
			set { entityData.SeUserCrsAssessCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsCourseTo objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_COURSE_TO_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsCourseTo> EdStudIntTrnsCourseToCollection
		{
			get { return entityData.EdStudIntTrnsCourseToCollection; }
			set { entityData.EdStudIntTrnsCourseToCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseExpDtl objects
		///	which are related to this object through the relation FK_ED_COURSE_EXPRESSION_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseExpDtl> EdCourseExpDtlCollection
		{
			get { return entityData.EdCourseExpDtlCollection; }
			set { entityData.EdCourseExpDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScSectionGroupDtl objects
		///	which are related to this object through the relation FK_SC_SECTION_GROUP_DTL_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScSectionGroupDtl> ScSectionGroupDtlCollection
		{
			get { return entityData.ScSectionGroupDtlCollection; }
			set { entityData.ScSectionGroupDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoStudSecretNum objects
		///	which are related to this object through the relation FK_AUTO_0047
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoStudSecretNum> CoStudSecretNumCollection
		{
			get { return entityData.CoStudSecretNumCollection; }
			set { entityData.CoStudSecretNumCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdAcadPlanDtl objects
		///	which are related to this object through the relation FK_ED_ACAD_PLAN_DTL_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdAcadPlanDtl> EdAcadPlanDtlCollection
		{
			get { return entityData.EdAcadPlanDtlCollection; }
			set { entityData.EdAcadPlanDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppTransToCourse objects
		///	which are related to this object through the relation FK_ADM_APP_TRANS_BALANCE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppTransToCourse> AdmAppTransToCourseCollection
		{
			get { return entityData.AdmAppTransToCourseCollection; }
			set { entityData.AdmAppTransToCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseCoreq objects
		///	which are related to this object through the relation FK_ED_SUBJECT_CON_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseCoreq> EdCourseCoreqCollection
		{
			get { return entityData.EdCourseCoreqCollection; }
			set { entityData.EdCourseCoreqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppExmptCourse objects
		///	which are related to this object through the relation FK_ADM_APP_EXMPT_COURSE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppExmptCourse> AdmAppExmptCourseCollection
		{
			get { return entityData.AdmAppExmptCourseCollection; }
			set { entityData.AdmAppExmptCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeCourseExp objects
		///	which are related to this object through the relation FK_FEE_COURSES_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeCourseExp> FeeCourseExpCollection
		{
			get { return entityData.FeeCourseExpCollection; }
			set { entityData.FeeCourseExpCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SeBlockTrans objects
		///	which are related to this object through the relation FK_SE_BLOCK_TRANS_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SeBlockTrans> SeBlockTransCollection
		{
			get { return entityData.SeBlockTransCollection; }
			set { entityData.SeBlockTransCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScGroupInfo objects
		///	which are related to this object through the relation FK_SC_GROUP_INFO_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScGroupInfo> ScGroupInfoCollection
		{
			get { return entityData.ScGroupInfoCollection; }
			set { entityData.ScGroupInfoCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvLecNote objects
		///	which are related to this object through the relation FK_SV_LEC_NOTE_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvLecNote> SvLecNoteCollection
		{
			get { return entityData.SvLecNoteCollection; }
			set { entityData.SvLecNoteCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntPolicyGradingLevelCourses objects
		///	which are related to this object through the relation FK_ENT_POLICY_GRADING_LEVEL_COURSES_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntPolicyGradingLevelCourses> EntPolicyGradingLevelCoursesCollection
		{
			get { return entityData.EntPolicyGradingLevelCoursesCollection; }
			set { entityData.EntPolicyGradingLevelCoursesCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStaffCoursePref objects
		///	which are related to this object through the relation FK_ED_STAFF_COURSE_PREF_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStaffCoursePref> EdStaffCoursePrefCollection
		{
			get { return entityData.EdStaffCoursePrefCollection; }
			set { entityData.EdStaffCoursePrefCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScGroupDay objects
		///	which are related to this object through the relation FK_SC_GROUP_DAY_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScGroupDay> ScGroupDayCollection
		{
			get { return entityData.ScGroupDayCollection; }
			set { entityData.ScGroupDayCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntCourseMdData objects
		///	which are related to this object through the relation FK_ENT_COURSE_MD_DATA_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntCourseMdData> EntCourseMdDataCollection
		{
			get { return entityData.EntCourseMdDataCollection; }
			set { entityData.EntCourseMdDataCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmCodeEngTest objects
		///	which are related to this object through the relation FK_ADM_CODE_ENG_TEST_ED_COURSE
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmCodeEngTest> AdmCodeEngTestCollection
		{
			get { return entityData.AdmCodeEngTestCollection; }
			set { entityData.AdmCodeEngTestCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("CourseCode", "Course Code"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CourseCode", "Course Code", 50));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("CourseDescrAr", "Course Descr Ar"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CourseDescrAr", "Course Descr Ar", 150));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("CourseDescrEn", "Course Descr En"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CourseDescrEn", "Course Descr En", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CourseContentsAr", "Course Contents Ar", 4000));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CourseContentsEn", "Course Contents En", 4000));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PrereqCodeExp", "Prereq Code Exp", 250));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("PrereqIdExp", "Prereq Id Exp", 250));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CrsNo", "Crs No", 40));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StopMessage", "Stop Message", 250));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CourseDescrFr", "Course Descr Fr", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CourseMod", "Course Mod", 30));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ED_COURSE"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ED_COURSE_ID", "ED_CODE_COURSE_ID", "COURSE_CODE", "COURSE_DESCR_AR", "COURSE_DESCR_EN", "CREDIT_HOURS", "COURSE_CONTENTS_AR", "COURSE_CONTENTS_EN", "ENT_MAIN_ID", "GS_CODE_LANGUAGE_ID", "AS_FACULTY_INFO_ID", "IS_ACTIVE", "PREREQ_CODE_EXP", "PREREQ_ID_EXP", "ELECT_FLG", "GS_COURSE_ELECT_TYPE_ID", "ED_COURSE_PRFX_ID", "CRS_NO", "PF_FLG", "CRS_LVL", "ONLINE_FLG", "STOP_MESSAGE", "AS_CODE_DEGREE_CLASS_ID", "ED_COURSE_EXP_HDR_ID", "LOAD_WITH_TRAIN", "EXAM_FLG", "FREE_FLG", "INCMPLT_FLG", "DROP_FLG", "EXAM_HRS", "CRS_WGT", "COURSE_DESCR_FR", "ECTS", "LOAD_CRS_COUNT", "EXTND_FLG", "Course_Mod", "ED_CODE_COURSE_TYPE_ID"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as EdCourseEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (EdCourse) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<EdCourse>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as EdCourse);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed EdCourse Entity 
		///</summary>
		protected virtual EdCourse Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			EdCourse copy = new EdCourse();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.EdCourseId = this.EdCourseId;
					copy.OriginalEdCourseId = this.OriginalEdCourseId;
				copy.EdCodeCourseId = this.EdCodeCourseId;
				copy.CourseCode = this.CourseCode;
				copy.CourseDescrAr = this.CourseDescrAr;
				copy.CourseDescrEn = this.CourseDescrEn;
				copy.CreditHours = this.CreditHours;
				copy.CourseContentsAr = this.CourseContentsAr;
				copy.CourseContentsEn = this.CourseContentsEn;
				copy.EntMainId = this.EntMainId;
				copy.GsCodeLanguageId = this.GsCodeLanguageId;
				copy.AsFacultyInfoId = this.AsFacultyInfoId;
				copy.IsActive = this.IsActive;
				copy.PrereqCodeExp = this.PrereqCodeExp;
				copy.PrereqIdExp = this.PrereqIdExp;
				copy.ElectFlg = this.ElectFlg;
				copy.GsCourseElectTypeId = this.GsCourseElectTypeId;
				copy.EdCoursePrfxId = this.EdCoursePrfxId;
				copy.CrsNo = this.CrsNo;
				copy.PfFlg = this.PfFlg;
				copy.CrsLvl = this.CrsLvl;
				copy.OnlineFlg = this.OnlineFlg;
				copy.StopMessage = this.StopMessage;
				copy.AsCodeDegreeClassId = this.AsCodeDegreeClassId;
				copy.EdCourseExpHdrId = this.EdCourseExpHdrId;
				copy.LoadWithTrain = this.LoadWithTrain;
				copy.ExamFlg = this.ExamFlg;
				copy.FreeFlg = this.FreeFlg;
				copy.IncmpltFlg = this.IncmpltFlg;
				copy.DropFlg = this.DropFlg;
				copy.ExamHrs = this.ExamHrs;
				copy.CrsWgt = this.CrsWgt;
				copy.CourseDescrFr = this.CourseDescrFr;
				copy.Ects = this.Ects;
				copy.LoadCrsCount = this.LoadCrsCount;
				copy.ExtndFlg = this.ExtndFlg;
				copy.CourseMod = this.CourseMod;
				copy.EdCodeCourseTypeId = this.EdCodeCourseTypeId;
			
			if (this.GsCodeLanguageIdSource != null && existingCopies.Contains(this.GsCodeLanguageIdSource))
				copy.GsCodeLanguageIdSource = existingCopies[this.GsCodeLanguageIdSource] as GsCodeLanguage;
			else
				copy.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource, existingCopies) as GsCodeLanguage;
			if (this.AsCodeDegreeClassIdSource != null && existingCopies.Contains(this.AsCodeDegreeClassIdSource))
				copy.AsCodeDegreeClassIdSource = existingCopies[this.AsCodeDegreeClassIdSource] as AsCodeDegreeClass;
			else
				copy.AsCodeDegreeClassIdSource = MakeCopyOf(this.AsCodeDegreeClassIdSource, existingCopies) as AsCodeDegreeClass;
			if (this.AsFacultyInfoIdSource != null && existingCopies.Contains(this.AsFacultyInfoIdSource))
				copy.AsFacultyInfoIdSource = existingCopies[this.AsFacultyInfoIdSource] as AsFacultyInfo;
			else
				copy.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource, existingCopies) as AsFacultyInfo;
			if (this.EdCodeCourseIdSource != null && existingCopies.Contains(this.EdCodeCourseIdSource))
				copy.EdCodeCourseIdSource = existingCopies[this.EdCodeCourseIdSource] as EdCodeCourse;
			else
				copy.EdCodeCourseIdSource = MakeCopyOf(this.EdCodeCourseIdSource, existingCopies) as EdCodeCourse;
			if (this.EdCodeCourseTypeIdSource != null && existingCopies.Contains(this.EdCodeCourseTypeIdSource))
				copy.EdCodeCourseTypeIdSource = existingCopies[this.EdCodeCourseTypeIdSource] as EdCodeCourseType;
			else
				copy.EdCodeCourseTypeIdSource = MakeCopyOf(this.EdCodeCourseTypeIdSource, existingCopies) as EdCodeCourseType;
			if (this.EdCourseExpHdrIdSource != null && existingCopies.Contains(this.EdCourseExpHdrIdSource))
				copy.EdCourseExpHdrIdSource = existingCopies[this.EdCourseExpHdrIdSource] as EdCourseExpHdr;
			else
				copy.EdCourseExpHdrIdSource = MakeCopyOf(this.EdCourseExpHdrIdSource, existingCopies) as EdCourseExpHdr;
			if (this.EdCoursePrfxIdSource != null && existingCopies.Contains(this.EdCoursePrfxIdSource))
				copy.EdCoursePrfxIdSource = existingCopies[this.EdCoursePrfxIdSource] as EdCoursePrfx;
			else
				copy.EdCoursePrfxIdSource = MakeCopyOf(this.EdCoursePrfxIdSource, existingCopies) as EdCoursePrfx;
			if (this.EntMainIdSource != null && existingCopies.Contains(this.EntMainIdSource))
				copy.EntMainIdSource = existingCopies[this.EntMainIdSource] as EntityMain;
			else
				copy.EntMainIdSource = MakeCopyOf(this.EntMainIdSource, existingCopies) as EntityMain;
		
			//deep copy nested objects
			copy.EdStudExmptCrsFromCollection = (TList<EdStudExmptCrsFrom>) MakeCopyOf(this.EdStudExmptCrsFromCollection, existingCopies); 
			copy.WfCrsRsltApproveCollection = (TList<WfCrsRsltApprove>) MakeCopyOf(this.WfCrsRsltApproveCollection, existingCopies); 
			copy.EdStudCourseRegCollectionGetByEdCourseOrgId = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollectionGetByEdCourseOrgId, existingCopies); 
			copy.EdStudCourseRegPreCollection = (TList<EdStudCourseRegPre>) MakeCopyOf(this.EdStudCourseRegPreCollection, existingCopies); 
			copy.EdCourseTchngCollection = (TList<EdCourseTchng>) MakeCopyOf(this.EdCourseTchngCollection, existingCopies); 
			copy.EdOfferingCourseCollection = (TList<EdOfferingCourse>) MakeCopyOf(this.EdOfferingCourseCollection, existingCopies); 
			copy.EdCourseOrientCollection = (TList<EdCourseOrient>) MakeCopyOf(this.EdCourseOrientCollection, existingCopies); 
			copy.EdTrainStudCollection = (TList<EdTrainStud>) MakeCopyOf(this.EdTrainStudCollection, existingCopies); 
			copy.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection, existingCopies); 
			copy.EdStudCourseWaitCollection = (TList<EdStudCourseWait>) MakeCopyOf(this.EdStudCourseWaitCollection, existingCopies); 
			copy.EdExamSchdlCollection = (TList<EdExamSchdl>) MakeCopyOf(this.EdExamSchdlCollection, existingCopies); 
			copy.EdCourseTopicCollection = (TList<EdCourseTopic>) MakeCopyOf(this.EdCourseTopicCollection, existingCopies); 
			copy.EntPolicyAssessCourseCollection = (TList<EntPolicyAssessCourse>) MakeCopyOf(this.EntPolicyAssessCourseCollection, existingCopies); 
			copy.EntPolicyGradingCourseCollection = (TList<EntPolicyGradingCourse>) MakeCopyOf(this.EntPolicyGradingCourseCollection, existingCopies); 
			copy.EdCourseBarredCollectionGetByEdBarredCourseId = (TList<EdCourseBarred>) MakeCopyOf(this.EdCourseBarredCollectionGetByEdBarredCourseId, existingCopies); 
			copy.EdCourseBarredCollectionGetByEdCourseId = (TList<EdCourseBarred>) MakeCopyOf(this.EdCourseBarredCollectionGetByEdCourseId, existingCopies); 
			copy.PgThesisGrantStudCollection = (TList<PgThesisGrantStud>) MakeCopyOf(this.PgThesisGrantStudCollection, existingCopies); 
			copy.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection, existingCopies); 
			copy.EntPolcyGrdngCourseCollection = (TList<EntPolcyGrdngCourse>) MakeCopyOf(this.EntPolcyGrdngCourseCollection, existingCopies); 
			copy.CoContRmMemCourseCollection = (TList<CoContRmMemCourse>) MakeCopyOf(this.CoContRmMemCourseCollection, existingCopies); 
			copy.SvStudCourseEvalCollection = (TList<SvStudCourseEval>) MakeCopyOf(this.SvStudCourseEvalCollection, existingCopies); 
			copy.EdCourseEquivCollectionGetByEdEquivCourseId = (TList<EdCourseEquiv>) MakeCopyOf(this.EdCourseEquivCollectionGetByEdEquivCourseId, existingCopies); 
			copy.EdCourseRltdCollectionGetByEdCourse1Id = (TList<EdCourseRltd>) MakeCopyOf(this.EdCourseRltdCollectionGetByEdCourse1Id, existingCopies); 
			copy.FeeStudVoucherCrsItemCollection = (TList<FeeStudVoucherCrsItem>) MakeCopyOf(this.FeeStudVoucherCrsItemCollection, existingCopies); 
			copy.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection, existingCopies); 
			copy.EdCourseInfoCollection = (TList<EdCourseInfo>) MakeCopyOf(this.EdCourseInfoCollection, existingCopies); 
			copy.EdCrsFreeRstrctdCollection = (TList<EdCrsFreeRstrctd>) MakeCopyOf(this.EdCrsFreeRstrctdCollection, existingCopies); 
			copy.AdmPlaceExamCourseCollection = (TList<AdmPlaceExamCourse>) MakeCopyOf(this.AdmPlaceExamCourseCollection, existingCopies); 
			copy.CoCourseResultCollection = (TList<CoCourseResult>) MakeCopyOf(this.CoCourseResultCollection, existingCopies); 
			copy.FeeStudCoursesItemCollection = (TList<FeeStudCoursesItem>) MakeCopyOf(this.FeeStudCoursesItemCollection, existingCopies); 
			copy.EdStudCourseRegTempCollection = (TList<EdStudCourseRegTemp>) MakeCopyOf(this.EdStudCourseRegTempCollection, existingCopies); 
			copy.EdStudCourseChngCollectionGetByEdCourseId = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollectionGetByEdCourseId, existingCopies); 
			copy.EdStudCourseChngCollectionGetByEdCourseSubId = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollectionGetByEdCourseSubId, existingCopies); 
			copy.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection, existingCopies); 
			copy.EdStudExmptCrsToCollection = (TList<EdStudExmptCrsTo>) MakeCopyOf(this.EdStudExmptCrsToCollection, existingCopies); 
			copy.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection, existingCopies); 
			copy.CoCrsRsltRaiseCollection = (TList<CoCrsRsltRaise>) MakeCopyOf(this.CoCrsRsltRaiseCollection, existingCopies); 
			copy.EntMajorPhaseCrsExpCollection = (TList<EntMajorPhaseCrsExp>) MakeCopyOf(this.EntMajorPhaseCrsExpCollection, existingCopies); 
			copy.EdOutcomeCollection = (TList<EdOutcome>) MakeCopyOf(this.EdOutcomeCollection, existingCopies); 
			copy.EdExamCrsOrderCollection = (TList<EdExamCrsOrder>) MakeCopyOf(this.EdExamCrsOrderCollection, existingCopies); 
			copy.EdBranchCrsCollection = (TList<EdBranchCrs>) MakeCopyOf(this.EdBranchCrsCollection, existingCopies); 
			copy.ScSectionGroupHdrCollection = (TList<ScSectionGroupHdr>) MakeCopyOf(this.ScSectionGroupHdrCollection, existingCopies); 
			copy.EdProjStudCollection = (TList<EdProjStud>) MakeCopyOf(this.EdProjStudCollection, existingCopies); 
			copy.SvCourseEvalCollection = (TList<SvCourseEval>) MakeCopyOf(this.SvCourseEvalCollection, existingCopies); 
			copy.EdStudCourseRplcCollectionGetByEdCourseOldId = (TList<EdStudCourseRplc>) MakeCopyOf(this.EdStudCourseRplcCollectionGetByEdCourseOldId, existingCopies); 
			copy.EdStudCourseRegCollectionGetByEdCourseId = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollectionGetByEdCourseId, existingCopies); 
			copy.ScHallRsrvCollection = (TList<ScHallRsrv>) MakeCopyOf(this.ScHallRsrvCollection, existingCopies); 
			copy.EdCourseRltdCollectionGetByEdCourse2Id = (TList<EdCourseRltd>) MakeCopyOf(this.EdCourseRltdCollectionGetByEdCourse2Id, existingCopies); 
			copy.EdStudAbsenceCollection = (TList<EdStudAbsence>) MakeCopyOf(this.EdStudAbsenceCollection, existingCopies); 
			copy.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection, existingCopies); 
			copy.EntCoursePkgDtlCollection = (TList<EntCoursePkgDtl>) MakeCopyOf(this.EntCoursePkgDtlCollection, existingCopies); 
			copy.EdStudCourseRplcCollectionGetByEdCourseNewId = (TList<EdStudCourseRplc>) MakeCopyOf(this.EdStudCourseRplcCollectionGetByEdCourseNewId, existingCopies); 
			copy.EdCourseEquivCollectionGetByEdCourseId = (TList<EdCourseEquiv>) MakeCopyOf(this.EdCourseEquivCollectionGetByEdCourseId, existingCopies); 
			copy.ScSchdlSlotCollection = (TList<ScSchdlSlot>) MakeCopyOf(this.ScSchdlSlotCollection, existingCopies); 
			copy.EdStudExcuseCourseCollection = (TList<EdStudExcuseCourse>) MakeCopyOf(this.EdStudExcuseCourseCollection, existingCopies); 
			copy.SvPollHdrCollection = (TList<SvPollHdr>) MakeCopyOf(this.SvPollHdrCollection, existingCopies); 
			copy.AdmAppPlaceExamCourseCollection = (TList<AdmAppPlaceExamCourse>) MakeCopyOf(this.AdmAppPlaceExamCourseCollection, existingCopies); 
			copy.SeUserCrsAssessCollection = (TList<SeUserCrsAssess>) MakeCopyOf(this.SeUserCrsAssessCollection, existingCopies); 
			copy.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection, existingCopies); 
			copy.EdCourseExpDtlCollection = (TList<EdCourseExpDtl>) MakeCopyOf(this.EdCourseExpDtlCollection, existingCopies); 
			copy.ScSectionGroupDtlCollection = (TList<ScSectionGroupDtl>) MakeCopyOf(this.ScSectionGroupDtlCollection, existingCopies); 
			copy.CoStudSecretNumCollection = (TList<CoStudSecretNum>) MakeCopyOf(this.CoStudSecretNumCollection, existingCopies); 
			copy.EdAcadPlanDtlCollection = (TList<EdAcadPlanDtl>) MakeCopyOf(this.EdAcadPlanDtlCollection, existingCopies); 
			copy.AdmAppTransToCourseCollection = (TList<AdmAppTransToCourse>) MakeCopyOf(this.AdmAppTransToCourseCollection, existingCopies); 
			copy.EdCourseCoreqCollection = (TList<EdCourseCoreq>) MakeCopyOf(this.EdCourseCoreqCollection, existingCopies); 
			copy.AdmAppExmptCourseCollection = (TList<AdmAppExmptCourse>) MakeCopyOf(this.AdmAppExmptCourseCollection, existingCopies); 
			copy.FeeCourseExpCollection = (TList<FeeCourseExp>) MakeCopyOf(this.FeeCourseExpCollection, existingCopies); 
			copy.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection, existingCopies); 
			copy.ScGroupInfoCollection = (TList<ScGroupInfo>) MakeCopyOf(this.ScGroupInfoCollection, existingCopies); 
			copy.SvLecNoteCollection = (TList<SvLecNote>) MakeCopyOf(this.SvLecNoteCollection, existingCopies); 
			copy.EntPolicyGradingLevelCoursesCollection = (TList<EntPolicyGradingLevelCourses>) MakeCopyOf(this.EntPolicyGradingLevelCoursesCollection, existingCopies); 
			copy.EdStaffCoursePrefCollection = (TList<EdStaffCoursePref>) MakeCopyOf(this.EdStaffCoursePrefCollection, existingCopies); 
			copy.ScGroupDayCollection = (TList<ScGroupDay>) MakeCopyOf(this.ScGroupDayCollection, existingCopies); 
			copy.EntCourseMdDataCollection = (TList<EntCourseMdData>) MakeCopyOf(this.EntCourseMdDataCollection, existingCopies); 
			copy.AdmCodeEngTestCollection = (TList<AdmCodeEngTest>) MakeCopyOf(this.AdmCodeEngTestCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed EdCourse Entity 
		///</summary>
		public virtual EdCourse Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed EdCourse Entity which is a deep copy of the current entity.
		///</summary>
		public virtual EdCourse DeepCopy()
		{
			return EntityHelper.Clone<EdCourse>(this as EdCourse);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as EdCourseEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new EdCourseEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as EdCourseEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(EdCourseColumn column)
		{
			switch(column)
			{
					case EdCourseColumn.EdCourseId:
					return entityData.EdCourseId != _originalData.EdCourseId;
					case EdCourseColumn.EdCodeCourseId:
					return entityData.EdCodeCourseId != _originalData.EdCodeCourseId;
					case EdCourseColumn.CourseCode:
					return entityData.CourseCode != _originalData.CourseCode;
					case EdCourseColumn.CourseDescrAr:
					return entityData.CourseDescrAr != _originalData.CourseDescrAr;
					case EdCourseColumn.CourseDescrEn:
					return entityData.CourseDescrEn != _originalData.CourseDescrEn;
					case EdCourseColumn.CreditHours:
					return entityData.CreditHours != _originalData.CreditHours;
					case EdCourseColumn.CourseContentsAr:
					return entityData.CourseContentsAr != _originalData.CourseContentsAr;
					case EdCourseColumn.CourseContentsEn:
					return entityData.CourseContentsEn != _originalData.CourseContentsEn;
					case EdCourseColumn.EntMainId:
					return entityData.EntMainId != _originalData.EntMainId;
					case EdCourseColumn.GsCodeLanguageId:
					return entityData.GsCodeLanguageId != _originalData.GsCodeLanguageId;
					case EdCourseColumn.AsFacultyInfoId:
					return entityData.AsFacultyInfoId != _originalData.AsFacultyInfoId;
					case EdCourseColumn.IsActive:
					return entityData.IsActive != _originalData.IsActive;
					case EdCourseColumn.PrereqCodeExp:
					return entityData.PrereqCodeExp != _originalData.PrereqCodeExp;
					case EdCourseColumn.PrereqIdExp:
					return entityData.PrereqIdExp != _originalData.PrereqIdExp;
					case EdCourseColumn.ElectFlg:
					return entityData.ElectFlg != _originalData.ElectFlg;
					case EdCourseColumn.GsCourseElectTypeId:
					return entityData.GsCourseElectTypeId != _originalData.GsCourseElectTypeId;
					case EdCourseColumn.EdCoursePrfxId:
					return entityData.EdCoursePrfxId != _originalData.EdCoursePrfxId;
					case EdCourseColumn.CrsNo:
					return entityData.CrsNo != _originalData.CrsNo;
					case EdCourseColumn.PfFlg:
					return entityData.PfFlg != _originalData.PfFlg;
					case EdCourseColumn.CrsLvl:
					return entityData.CrsLvl != _originalData.CrsLvl;
					case EdCourseColumn.OnlineFlg:
					return entityData.OnlineFlg != _originalData.OnlineFlg;
					case EdCourseColumn.StopMessage:
					return entityData.StopMessage != _originalData.StopMessage;
					case EdCourseColumn.AsCodeDegreeClassId:
					return entityData.AsCodeDegreeClassId != _originalData.AsCodeDegreeClassId;
					case EdCourseColumn.EdCourseExpHdrId:
					return entityData.EdCourseExpHdrId != _originalData.EdCourseExpHdrId;
					case EdCourseColumn.LoadWithTrain:
					return entityData.LoadWithTrain != _originalData.LoadWithTrain;
					case EdCourseColumn.ExamFlg:
					return entityData.ExamFlg != _originalData.ExamFlg;
					case EdCourseColumn.FreeFlg:
					return entityData.FreeFlg != _originalData.FreeFlg;
					case EdCourseColumn.IncmpltFlg:
					return entityData.IncmpltFlg != _originalData.IncmpltFlg;
					case EdCourseColumn.DropFlg:
					return entityData.DropFlg != _originalData.DropFlg;
					case EdCourseColumn.ExamHrs:
					return entityData.ExamHrs != _originalData.ExamHrs;
					case EdCourseColumn.CrsWgt:
					return entityData.CrsWgt != _originalData.CrsWgt;
					case EdCourseColumn.CourseDescrFr:
					return entityData.CourseDescrFr != _originalData.CourseDescrFr;
					case EdCourseColumn.Ects:
					return entityData.Ects != _originalData.Ects;
					case EdCourseColumn.LoadCrsCount:
					return entityData.LoadCrsCount != _originalData.LoadCrsCount;
					case EdCourseColumn.ExtndFlg:
					return entityData.ExtndFlg != _originalData.ExtndFlg;
					case EdCourseColumn.CourseMod:
					return entityData.CourseMod != _originalData.CourseMod;
					case EdCourseColumn.EdCodeCourseTypeId:
					return entityData.EdCodeCourseTypeId != _originalData.EdCodeCourseTypeId;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< EdCourseColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.EdCourseId != _originalData.EdCourseId;
			result = result || entityData.EdCodeCourseId != _originalData.EdCodeCourseId;
			result = result || entityData.CourseCode != _originalData.CourseCode;
			result = result || entityData.CourseDescrAr != _originalData.CourseDescrAr;
			result = result || entityData.CourseDescrEn != _originalData.CourseDescrEn;
			result = result || entityData.CreditHours != _originalData.CreditHours;
			result = result || entityData.CourseContentsAr != _originalData.CourseContentsAr;
			result = result || entityData.CourseContentsEn != _originalData.CourseContentsEn;
			result = result || entityData.EntMainId != _originalData.EntMainId;
			result = result || entityData.GsCodeLanguageId != _originalData.GsCodeLanguageId;
			result = result || entityData.AsFacultyInfoId != _originalData.AsFacultyInfoId;
			result = result || entityData.IsActive != _originalData.IsActive;
			result = result || entityData.PrereqCodeExp != _originalData.PrereqCodeExp;
			result = result || entityData.PrereqIdExp != _originalData.PrereqIdExp;
			result = result || entityData.ElectFlg != _originalData.ElectFlg;
			result = result || entityData.GsCourseElectTypeId != _originalData.GsCourseElectTypeId;
			result = result || entityData.EdCoursePrfxId != _originalData.EdCoursePrfxId;
			result = result || entityData.CrsNo != _originalData.CrsNo;
			result = result || entityData.PfFlg != _originalData.PfFlg;
			result = result || entityData.CrsLvl != _originalData.CrsLvl;
			result = result || entityData.OnlineFlg != _originalData.OnlineFlg;
			result = result || entityData.StopMessage != _originalData.StopMessage;
			result = result || entityData.AsCodeDegreeClassId != _originalData.AsCodeDegreeClassId;
			result = result || entityData.EdCourseExpHdrId != _originalData.EdCourseExpHdrId;
			result = result || entityData.LoadWithTrain != _originalData.LoadWithTrain;
			result = result || entityData.ExamFlg != _originalData.ExamFlg;
			result = result || entityData.FreeFlg != _originalData.FreeFlg;
			result = result || entityData.IncmpltFlg != _originalData.IncmpltFlg;
			result = result || entityData.DropFlg != _originalData.DropFlg;
			result = result || entityData.ExamHrs != _originalData.ExamHrs;
			result = result || entityData.CrsWgt != _originalData.CrsWgt;
			result = result || entityData.CourseDescrFr != _originalData.CourseDescrFr;
			result = result || entityData.Ects != _originalData.Ects;
			result = result || entityData.LoadCrsCount != _originalData.LoadCrsCount;
			result = result || entityData.ExtndFlg != _originalData.ExtndFlg;
			result = result || entityData.CourseMod != _originalData.CourseMod;
			result = result || entityData.EdCodeCourseTypeId != _originalData.EdCodeCourseTypeId;
			return result;
		}	
		
		///<summary>
		///  Returns a EdCourse Entity with the original data.
		///</summary>
		public EdCourse GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateEdCourse(
				_originalData.EdCourseId,
				_originalData.EdCodeCourseId,
				_originalData.CourseCode,
				_originalData.CourseDescrAr,
				_originalData.CourseDescrEn,
				_originalData.CreditHours,
				_originalData.CourseContentsAr,
				_originalData.CourseContentsEn,
				_originalData.EntMainId,
				_originalData.GsCodeLanguageId,
				_originalData.AsFacultyInfoId,
				_originalData.IsActive,
				_originalData.PrereqCodeExp,
				_originalData.PrereqIdExp,
				_originalData.ElectFlg,
				_originalData.GsCourseElectTypeId,
				_originalData.EdCoursePrfxId,
				_originalData.CrsNo,
				_originalData.PfFlg,
				_originalData.CrsLvl,
				_originalData.OnlineFlg,
				_originalData.StopMessage,
				_originalData.AsCodeDegreeClassId,
				_originalData.EdCourseExpHdrId,
				_originalData.LoadWithTrain,
				_originalData.ExamFlg,
				_originalData.FreeFlg,
				_originalData.IncmpltFlg,
				_originalData.DropFlg,
				_originalData.ExamHrs,
				_originalData.CrsWgt,
				_originalData.CourseDescrFr,
				_originalData.Ects,
				_originalData.LoadCrsCount,
				_originalData.ExtndFlg,
				_originalData.CourseMod,
				_originalData.EdCodeCourseTypeId
				);
				
			return (EdCourse)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="EdCourseBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is EdCourseBase)
				return ValueEquals(this, (EdCourseBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="EdCourseBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.EdCourseId.GetHashCode() ^ 
					((this.EdCodeCourseId == null) ? string.Empty : this.EdCodeCourseId.ToString()).GetHashCode() ^ 
					this.CourseCode.GetHashCode() ^ 
					this.CourseDescrAr.GetHashCode() ^ 
					this.CourseDescrEn.GetHashCode() ^ 
					this.CreditHours.GetHashCode() ^ 
					((this.CourseContentsAr == null) ? string.Empty : this.CourseContentsAr.ToString()).GetHashCode() ^ 
					((this.CourseContentsEn == null) ? string.Empty : this.CourseContentsEn.ToString()).GetHashCode() ^ 
					((this.EntMainId == null) ? string.Empty : this.EntMainId.ToString()).GetHashCode() ^ 
					this.GsCodeLanguageId.GetHashCode() ^ 
					((this.AsFacultyInfoId == null) ? string.Empty : this.AsFacultyInfoId.ToString()).GetHashCode() ^ 
					this.IsActive.GetHashCode() ^ 
					((this.PrereqCodeExp == null) ? string.Empty : this.PrereqCodeExp.ToString()).GetHashCode() ^ 
					((this.PrereqIdExp == null) ? string.Empty : this.PrereqIdExp.ToString()).GetHashCode() ^ 
					((this.ElectFlg == null) ? string.Empty : this.ElectFlg.ToString()).GetHashCode() ^ 
					((this.GsCourseElectTypeId == null) ? string.Empty : this.GsCourseElectTypeId.ToString()).GetHashCode() ^ 
					((this.EdCoursePrfxId == null) ? string.Empty : this.EdCoursePrfxId.ToString()).GetHashCode() ^ 
					((this.CrsNo == null) ? string.Empty : this.CrsNo.ToString()).GetHashCode() ^ 
					((this.PfFlg == null) ? string.Empty : this.PfFlg.ToString()).GetHashCode() ^ 
					((this.CrsLvl == null) ? string.Empty : this.CrsLvl.ToString()).GetHashCode() ^ 
					((this.OnlineFlg == null) ? string.Empty : this.OnlineFlg.ToString()).GetHashCode() ^ 
					((this.StopMessage == null) ? string.Empty : this.StopMessage.ToString()).GetHashCode() ^ 
					((this.AsCodeDegreeClassId == null) ? string.Empty : this.AsCodeDegreeClassId.ToString()).GetHashCode() ^ 
					((this.EdCourseExpHdrId == null) ? string.Empty : this.EdCourseExpHdrId.ToString()).GetHashCode() ^ 
					((this.LoadWithTrain == null) ? string.Empty : this.LoadWithTrain.ToString()).GetHashCode() ^ 
					((this.ExamFlg == null) ? string.Empty : this.ExamFlg.ToString()).GetHashCode() ^ 
					((this.FreeFlg == null) ? string.Empty : this.FreeFlg.ToString()).GetHashCode() ^ 
					((this.IncmpltFlg == null) ? string.Empty : this.IncmpltFlg.ToString()).GetHashCode() ^ 
					((this.DropFlg == null) ? string.Empty : this.DropFlg.ToString()).GetHashCode() ^ 
					((this.ExamHrs == null) ? string.Empty : this.ExamHrs.ToString()).GetHashCode() ^ 
					((this.CrsWgt == null) ? string.Empty : this.CrsWgt.ToString()).GetHashCode() ^ 
					((this.CourseDescrFr == null) ? string.Empty : this.CourseDescrFr.ToString()).GetHashCode() ^ 
					((this.Ects == null) ? string.Empty : this.Ects.ToString()).GetHashCode() ^ 
					((this.LoadCrsCount == null) ? string.Empty : this.LoadCrsCount.ToString()).GetHashCode() ^ 
					((this.ExtndFlg == null) ? string.Empty : this.ExtndFlg.ToString()).GetHashCode() ^ 
					((this.CourseMod == null) ? string.Empty : this.CourseMod.ToString()).GetHashCode() ^ 
					((this.EdCodeCourseTypeId == null) ? string.Empty : this.EdCodeCourseTypeId.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="EdCourseBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(EdCourseBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="EdCourseBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="EdCourseBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="EdCourseBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(EdCourseBase Object1, EdCourseBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.EdCourseId != Object2.EdCourseId)
				equal = false;
			if ( Object1.EdCodeCourseId != null && Object2.EdCodeCourseId != null )
			{
				if (Object1.EdCodeCourseId != Object2.EdCodeCourseId)
					equal = false;
			}
			else if (Object1.EdCodeCourseId == null ^ Object2.EdCodeCourseId == null )
			{
				equal = false;
			}
			if (Object1.CourseCode != Object2.CourseCode)
				equal = false;
			if (Object1.CourseDescrAr != Object2.CourseDescrAr)
				equal = false;
			if (Object1.CourseDescrEn != Object2.CourseDescrEn)
				equal = false;
			if (Object1.CreditHours != Object2.CreditHours)
				equal = false;
			if ( Object1.CourseContentsAr != null && Object2.CourseContentsAr != null )
			{
				if (Object1.CourseContentsAr != Object2.CourseContentsAr)
					equal = false;
			}
			else if (Object1.CourseContentsAr == null ^ Object2.CourseContentsAr == null )
			{
				equal = false;
			}
			if ( Object1.CourseContentsEn != null && Object2.CourseContentsEn != null )
			{
				if (Object1.CourseContentsEn != Object2.CourseContentsEn)
					equal = false;
			}
			else if (Object1.CourseContentsEn == null ^ Object2.CourseContentsEn == null )
			{
				equal = false;
			}
			if ( Object1.EntMainId != null && Object2.EntMainId != null )
			{
				if (Object1.EntMainId != Object2.EntMainId)
					equal = false;
			}
			else if (Object1.EntMainId == null ^ Object2.EntMainId == null )
			{
				equal = false;
			}
			if (Object1.GsCodeLanguageId != Object2.GsCodeLanguageId)
				equal = false;
			if ( Object1.AsFacultyInfoId != null && Object2.AsFacultyInfoId != null )
			{
				if (Object1.AsFacultyInfoId != Object2.AsFacultyInfoId)
					equal = false;
			}
			else if (Object1.AsFacultyInfoId == null ^ Object2.AsFacultyInfoId == null )
			{
				equal = false;
			}
			if (Object1.IsActive != Object2.IsActive)
				equal = false;
			if ( Object1.PrereqCodeExp != null && Object2.PrereqCodeExp != null )
			{
				if (Object1.PrereqCodeExp != Object2.PrereqCodeExp)
					equal = false;
			}
			else if (Object1.PrereqCodeExp == null ^ Object2.PrereqCodeExp == null )
			{
				equal = false;
			}
			if ( Object1.PrereqIdExp != null && Object2.PrereqIdExp != null )
			{
				if (Object1.PrereqIdExp != Object2.PrereqIdExp)
					equal = false;
			}
			else if (Object1.PrereqIdExp == null ^ Object2.PrereqIdExp == null )
			{
				equal = false;
			}
			if ( Object1.ElectFlg != null && Object2.ElectFlg != null )
			{
				if (Object1.ElectFlg != Object2.ElectFlg)
					equal = false;
			}
			else if (Object1.ElectFlg == null ^ Object2.ElectFlg == null )
			{
				equal = false;
			}
			if ( Object1.GsCourseElectTypeId != null && Object2.GsCourseElectTypeId != null )
			{
				if (Object1.GsCourseElectTypeId != Object2.GsCourseElectTypeId)
					equal = false;
			}
			else if (Object1.GsCourseElectTypeId == null ^ Object2.GsCourseElectTypeId == null )
			{
				equal = false;
			}
			if ( Object1.EdCoursePrfxId != null && Object2.EdCoursePrfxId != null )
			{
				if (Object1.EdCoursePrfxId != Object2.EdCoursePrfxId)
					equal = false;
			}
			else if (Object1.EdCoursePrfxId == null ^ Object2.EdCoursePrfxId == null )
			{
				equal = false;
			}
			if ( Object1.CrsNo != null && Object2.CrsNo != null )
			{
				if (Object1.CrsNo != Object2.CrsNo)
					equal = false;
			}
			else if (Object1.CrsNo == null ^ Object2.CrsNo == null )
			{
				equal = false;
			}
			if ( Object1.PfFlg != null && Object2.PfFlg != null )
			{
				if (Object1.PfFlg != Object2.PfFlg)
					equal = false;
			}
			else if (Object1.PfFlg == null ^ Object2.PfFlg == null )
			{
				equal = false;
			}
			if ( Object1.CrsLvl != null && Object2.CrsLvl != null )
			{
				if (Object1.CrsLvl != Object2.CrsLvl)
					equal = false;
			}
			else if (Object1.CrsLvl == null ^ Object2.CrsLvl == null )
			{
				equal = false;
			}
			if ( Object1.OnlineFlg != null && Object2.OnlineFlg != null )
			{
				if (Object1.OnlineFlg != Object2.OnlineFlg)
					equal = false;
			}
			else if (Object1.OnlineFlg == null ^ Object2.OnlineFlg == null )
			{
				equal = false;
			}
			if ( Object1.StopMessage != null && Object2.StopMessage != null )
			{
				if (Object1.StopMessage != Object2.StopMessage)
					equal = false;
			}
			else if (Object1.StopMessage == null ^ Object2.StopMessage == null )
			{
				equal = false;
			}
			if ( Object1.AsCodeDegreeClassId != null && Object2.AsCodeDegreeClassId != null )
			{
				if (Object1.AsCodeDegreeClassId != Object2.AsCodeDegreeClassId)
					equal = false;
			}
			else if (Object1.AsCodeDegreeClassId == null ^ Object2.AsCodeDegreeClassId == null )
			{
				equal = false;
			}
			if ( Object1.EdCourseExpHdrId != null && Object2.EdCourseExpHdrId != null )
			{
				if (Object1.EdCourseExpHdrId != Object2.EdCourseExpHdrId)
					equal = false;
			}
			else if (Object1.EdCourseExpHdrId == null ^ Object2.EdCourseExpHdrId == null )
			{
				equal = false;
			}
			if ( Object1.LoadWithTrain != null && Object2.LoadWithTrain != null )
			{
				if (Object1.LoadWithTrain != Object2.LoadWithTrain)
					equal = false;
			}
			else if (Object1.LoadWithTrain == null ^ Object2.LoadWithTrain == null )
			{
				equal = false;
			}
			if ( Object1.ExamFlg != null && Object2.ExamFlg != null )
			{
				if (Object1.ExamFlg != Object2.ExamFlg)
					equal = false;
			}
			else if (Object1.ExamFlg == null ^ Object2.ExamFlg == null )
			{
				equal = false;
			}
			if ( Object1.FreeFlg != null && Object2.FreeFlg != null )
			{
				if (Object1.FreeFlg != Object2.FreeFlg)
					equal = false;
			}
			else if (Object1.FreeFlg == null ^ Object2.FreeFlg == null )
			{
				equal = false;
			}
			if ( Object1.IncmpltFlg != null && Object2.IncmpltFlg != null )
			{
				if (Object1.IncmpltFlg != Object2.IncmpltFlg)
					equal = false;
			}
			else if (Object1.IncmpltFlg == null ^ Object2.IncmpltFlg == null )
			{
				equal = false;
			}
			if ( Object1.DropFlg != null && Object2.DropFlg != null )
			{
				if (Object1.DropFlg != Object2.DropFlg)
					equal = false;
			}
			else if (Object1.DropFlg == null ^ Object2.DropFlg == null )
			{
				equal = false;
			}
			if ( Object1.ExamHrs != null && Object2.ExamHrs != null )
			{
				if (Object1.ExamHrs != Object2.ExamHrs)
					equal = false;
			}
			else if (Object1.ExamHrs == null ^ Object2.ExamHrs == null )
			{
				equal = false;
			}
			if ( Object1.CrsWgt != null && Object2.CrsWgt != null )
			{
				if (Object1.CrsWgt != Object2.CrsWgt)
					equal = false;
			}
			else if (Object1.CrsWgt == null ^ Object2.CrsWgt == null )
			{
				equal = false;
			}
			if ( Object1.CourseDescrFr != null && Object2.CourseDescrFr != null )
			{
				if (Object1.CourseDescrFr != Object2.CourseDescrFr)
					equal = false;
			}
			else if (Object1.CourseDescrFr == null ^ Object2.CourseDescrFr == null )
			{
				equal = false;
			}
			if ( Object1.Ects != null && Object2.Ects != null )
			{
				if (Object1.Ects != Object2.Ects)
					equal = false;
			}
			else if (Object1.Ects == null ^ Object2.Ects == null )
			{
				equal = false;
			}
			if ( Object1.LoadCrsCount != null && Object2.LoadCrsCount != null )
			{
				if (Object1.LoadCrsCount != Object2.LoadCrsCount)
					equal = false;
			}
			else if (Object1.LoadCrsCount == null ^ Object2.LoadCrsCount == null )
			{
				equal = false;
			}
			if ( Object1.ExtndFlg != null && Object2.ExtndFlg != null )
			{
				if (Object1.ExtndFlg != Object2.ExtndFlg)
					equal = false;
			}
			else if (Object1.ExtndFlg == null ^ Object2.ExtndFlg == null )
			{
				equal = false;
			}
			if ( Object1.CourseMod != null && Object2.CourseMod != null )
			{
				if (Object1.CourseMod != Object2.CourseMod)
					equal = false;
			}
			else if (Object1.CourseMod == null ^ Object2.CourseMod == null )
			{
				equal = false;
			}
			if ( Object1.EdCodeCourseTypeId != null && Object2.EdCodeCourseTypeId != null )
			{
				if (Object1.EdCodeCourseTypeId != Object2.EdCodeCourseTypeId)
					equal = false;
			}
			else if (Object1.EdCodeCourseTypeId == null ^ Object2.EdCodeCourseTypeId == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((EdCourseBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static EdCourseComparer GetComparer()
        {
            return new EdCourseComparer();
        }
        */

        // Comparer delegates back to EdCourse
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(EdCourse rhs, EdCourseColumn which)
        {
            switch (which)
            {
            	
            	
            	case EdCourseColumn.EdCourseId:
            		return this.EdCourseId.CompareTo(rhs.EdCourseId);
            		
            		                 
            	
            	
            	case EdCourseColumn.EdCodeCourseId:
            		return this.EdCodeCourseId.Value.CompareTo(rhs.EdCodeCourseId.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.CourseCode:
            		return this.CourseCode.CompareTo(rhs.CourseCode);
            		
            		                 
            	
            	
            	case EdCourseColumn.CourseDescrAr:
            		return this.CourseDescrAr.CompareTo(rhs.CourseDescrAr);
            		
            		                 
            	
            	
            	case EdCourseColumn.CourseDescrEn:
            		return this.CourseDescrEn.CompareTo(rhs.CourseDescrEn);
            		
            		                 
            	
            	
            	case EdCourseColumn.CreditHours:
            		return this.CreditHours.CompareTo(rhs.CreditHours);
            		
            		                 
            	
            	
            	case EdCourseColumn.CourseContentsAr:
            		return this.CourseContentsAr.CompareTo(rhs.CourseContentsAr);
            		
            		                 
            	
            	
            	case EdCourseColumn.CourseContentsEn:
            		return this.CourseContentsEn.CompareTo(rhs.CourseContentsEn);
            		
            		                 
            	
            	
            	case EdCourseColumn.EntMainId:
            		return this.EntMainId.Value.CompareTo(rhs.EntMainId.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.GsCodeLanguageId:
            		return this.GsCodeLanguageId.CompareTo(rhs.GsCodeLanguageId);
            		
            		                 
            	
            	
            	case EdCourseColumn.AsFacultyInfoId:
            		return this.AsFacultyInfoId.Value.CompareTo(rhs.AsFacultyInfoId.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.IsActive:
            		return this.IsActive.CompareTo(rhs.IsActive);
            		
            		                 
            	
            	
            	case EdCourseColumn.PrereqCodeExp:
            		return this.PrereqCodeExp.CompareTo(rhs.PrereqCodeExp);
            		
            		                 
            	
            	
            	case EdCourseColumn.PrereqIdExp:
            		return this.PrereqIdExp.CompareTo(rhs.PrereqIdExp);
            		
            		                 
            	
            	
            	case EdCourseColumn.ElectFlg:
            		return this.ElectFlg.Value.CompareTo(rhs.ElectFlg.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.GsCourseElectTypeId:
            		return this.GsCourseElectTypeId.Value.CompareTo(rhs.GsCourseElectTypeId.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.EdCoursePrfxId:
            		return this.EdCoursePrfxId.Value.CompareTo(rhs.EdCoursePrfxId.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.CrsNo:
            		return this.CrsNo.CompareTo(rhs.CrsNo);
            		
            		                 
            	
            	
            	case EdCourseColumn.PfFlg:
            		return this.PfFlg.Value.CompareTo(rhs.PfFlg.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.CrsLvl:
            		return this.CrsLvl.Value.CompareTo(rhs.CrsLvl.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.OnlineFlg:
            		return this.OnlineFlg.Value.CompareTo(rhs.OnlineFlg.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.StopMessage:
            		return this.StopMessage.CompareTo(rhs.StopMessage);
            		
            		                 
            	
            	
            	case EdCourseColumn.AsCodeDegreeClassId:
            		return this.AsCodeDegreeClassId.Value.CompareTo(rhs.AsCodeDegreeClassId.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.EdCourseExpHdrId:
            		return this.EdCourseExpHdrId.Value.CompareTo(rhs.EdCourseExpHdrId.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.LoadWithTrain:
            		return this.LoadWithTrain.Value.CompareTo(rhs.LoadWithTrain.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.ExamFlg:
            		return this.ExamFlg.Value.CompareTo(rhs.ExamFlg.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.FreeFlg:
            		return this.FreeFlg.Value.CompareTo(rhs.FreeFlg.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.IncmpltFlg:
            		return this.IncmpltFlg.Value.CompareTo(rhs.IncmpltFlg.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.DropFlg:
            		return this.DropFlg.Value.CompareTo(rhs.DropFlg.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.ExamHrs:
            		return this.ExamHrs.Value.CompareTo(rhs.ExamHrs.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.CrsWgt:
            		return this.CrsWgt.Value.CompareTo(rhs.CrsWgt.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.CourseDescrFr:
            		return this.CourseDescrFr.CompareTo(rhs.CourseDescrFr);
            		
            		                 
            	
            	
            	case EdCourseColumn.Ects:
            		return this.Ects.Value.CompareTo(rhs.Ects.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.LoadCrsCount:
            		return this.LoadCrsCount.Value.CompareTo(rhs.LoadCrsCount.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.ExtndFlg:
            		return this.ExtndFlg.Value.CompareTo(rhs.ExtndFlg.Value);
            		
            		                 
            	
            	
            	case EdCourseColumn.CourseMod:
            		return this.CourseMod.CompareTo(rhs.CourseMod);
            		
            		                 
            	
            	
            	case EdCourseColumn.EdCodeCourseTypeId:
            		return this.EdCodeCourseTypeId.Value.CompareTo(rhs.EdCodeCourseTypeId.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<EdCourseKey> Members
		
		// member variable for the EntityId property
		private EdCourseKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual EdCourseKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new EdCourseKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("EdCourse")
					.Append("|").Append( this.EdCourseId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{38}{37}- EdCourseId: {0}{37}- EdCodeCourseId: {1}{37}- CourseCode: {2}{37}- CourseDescrAr: {3}{37}- CourseDescrEn: {4}{37}- CreditHours: {5}{37}- CourseContentsAr: {6}{37}- CourseContentsEn: {7}{37}- EntMainId: {8}{37}- GsCodeLanguageId: {9}{37}- AsFacultyInfoId: {10}{37}- IsActive: {11}{37}- PrereqCodeExp: {12}{37}- PrereqIdExp: {13}{37}- ElectFlg: {14}{37}- GsCourseElectTypeId: {15}{37}- EdCoursePrfxId: {16}{37}- CrsNo: {17}{37}- PfFlg: {18}{37}- CrsLvl: {19}{37}- OnlineFlg: {20}{37}- StopMessage: {21}{37}- AsCodeDegreeClassId: {22}{37}- EdCourseExpHdrId: {23}{37}- LoadWithTrain: {24}{37}- ExamFlg: {25}{37}- FreeFlg: {26}{37}- IncmpltFlg: {27}{37}- DropFlg: {28}{37}- ExamHrs: {29}{37}- CrsWgt: {30}{37}- CourseDescrFr: {31}{37}- Ects: {32}{37}- LoadCrsCount: {33}{37}- ExtndFlg: {34}{37}- CourseMod: {35}{37}- EdCodeCourseTypeId: {36}{37}{39}", 
				this.EdCourseId,
				(this.EdCodeCourseId == null) ? string.Empty : this.EdCodeCourseId.ToString(),
				this.CourseCode,
				this.CourseDescrAr,
				this.CourseDescrEn,
				this.CreditHours,
				(this.CourseContentsAr == null) ? string.Empty : this.CourseContentsAr.ToString(),
				(this.CourseContentsEn == null) ? string.Empty : this.CourseContentsEn.ToString(),
				(this.EntMainId == null) ? string.Empty : this.EntMainId.ToString(),
				this.GsCodeLanguageId,
				(this.AsFacultyInfoId == null) ? string.Empty : this.AsFacultyInfoId.ToString(),
				this.IsActive,
				(this.PrereqCodeExp == null) ? string.Empty : this.PrereqCodeExp.ToString(),
				(this.PrereqIdExp == null) ? string.Empty : this.PrereqIdExp.ToString(),
				(this.ElectFlg == null) ? string.Empty : this.ElectFlg.ToString(),
				(this.GsCourseElectTypeId == null) ? string.Empty : this.GsCourseElectTypeId.ToString(),
				(this.EdCoursePrfxId == null) ? string.Empty : this.EdCoursePrfxId.ToString(),
				(this.CrsNo == null) ? string.Empty : this.CrsNo.ToString(),
				(this.PfFlg == null) ? string.Empty : this.PfFlg.ToString(),
				(this.CrsLvl == null) ? string.Empty : this.CrsLvl.ToString(),
				(this.OnlineFlg == null) ? string.Empty : this.OnlineFlg.ToString(),
				(this.StopMessage == null) ? string.Empty : this.StopMessage.ToString(),
				(this.AsCodeDegreeClassId == null) ? string.Empty : this.AsCodeDegreeClassId.ToString(),
				(this.EdCourseExpHdrId == null) ? string.Empty : this.EdCourseExpHdrId.ToString(),
				(this.LoadWithTrain == null) ? string.Empty : this.LoadWithTrain.ToString(),
				(this.ExamFlg == null) ? string.Empty : this.ExamFlg.ToString(),
				(this.FreeFlg == null) ? string.Empty : this.FreeFlg.ToString(),
				(this.IncmpltFlg == null) ? string.Empty : this.IncmpltFlg.ToString(),
				(this.DropFlg == null) ? string.Empty : this.DropFlg.ToString(),
				(this.ExamHrs == null) ? string.Empty : this.ExamHrs.ToString(),
				(this.CrsWgt == null) ? string.Empty : this.CrsWgt.ToString(),
				(this.CourseDescrFr == null) ? string.Empty : this.CourseDescrFr.ToString(),
				(this.Ects == null) ? string.Empty : this.Ects.ToString(),
				(this.LoadCrsCount == null) ? string.Empty : this.LoadCrsCount.ToString(),
				(this.ExtndFlg == null) ? string.Empty : this.ExtndFlg.ToString(),
				(this.CourseMod == null) ? string.Empty : this.CourseMod.ToString(),
				(this.EdCodeCourseTypeId == null) ? string.Empty : this.EdCodeCourseTypeId.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ED_COURSE' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class EdCourseEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ED_COURSE_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ED_COURSE"</remarks>
		public System.Decimal EdCourseId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalEdCourseId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// ED_CODE_COURSE_ID : 
		/// </summary>
		public System.Decimal?		  EdCodeCourseId = null;
		
		/// <summary>
		/// COURSE_CODE : 
		/// </summary>
		public System.String		  CourseCode = string.Empty;
		
		/// <summary>
		/// COURSE_DESCR_AR : 
		/// </summary>
		public System.String		  CourseDescrAr = string.Empty;
		
		/// <summary>
		/// COURSE_DESCR_EN : 
		/// </summary>
		public System.String		  CourseDescrEn = string.Empty;
		
		/// <summary>
		/// CREDIT_HOURS : 
		/// </summary>
		public System.Decimal		  CreditHours = 0.0m;
		
		/// <summary>
		/// COURSE_CONTENTS_AR : 
		/// </summary>
		public System.String		  CourseContentsAr = null;
		
		/// <summary>
		/// COURSE_CONTENTS_EN : 
		/// </summary>
		public System.String		  CourseContentsEn = null;
		
		/// <summary>
		/// ENT_MAIN_ID : 
		/// </summary>
		public System.Decimal?		  EntMainId = null;
		
		/// <summary>
		/// GS_CODE_LANGUAGE_ID : 
		/// </summary>
		public System.Decimal		  GsCodeLanguageId = 0.0m;
		
		/// <summary>
		/// AS_FACULTY_INFO_ID : 
		/// </summary>
		public System.Decimal?		  AsFacultyInfoId = null;
		
		/// <summary>
		/// IS_ACTIVE : 
		/// </summary>
		public System.Decimal		  IsActive = 0.0m;
		
		/// <summary>
		/// PREREQ_CODE_EXP : 
		/// </summary>
		public System.String		  PrereqCodeExp = null;
		
		/// <summary>
		/// PREREQ_ID_EXP : 
		/// </summary>
		public System.String		  PrereqIdExp = null;
		
		/// <summary>
		/// ELECT_FLG : 
		/// </summary>
		public System.Decimal?		  ElectFlg = null;
		
		/// <summary>
		/// GS_COURSE_ELECT_TYPE_ID : XXX
		/// </summary>
		public System.Decimal?		  GsCourseElectTypeId = null;
		
		/// <summary>
		/// ED_COURSE_PRFX_ID : 
		/// </summary>
		public System.Decimal?		  EdCoursePrfxId = null;
		
		/// <summary>
		/// CRS_NO : 
		/// </summary>
		public System.String		  CrsNo = null;
		
		/// <summary>
		/// PF_FLG : 
		/// </summary>
		public System.Decimal?		  PfFlg = null;
		
		/// <summary>
		/// CRS_LVL : 
		/// </summary>
		public System.Decimal?		  CrsLvl = null;
		
		/// <summary>
		/// ONLINE_FLG : 
		/// </summary>
		public System.Decimal?		  OnlineFlg = null;
		
		/// <summary>
		/// STOP_MESSAGE : 
		/// </summary>
		public System.String		  StopMessage = null;
		
		/// <summary>
		/// AS_CODE_DEGREE_CLASS_ID : 
		/// </summary>
		public System.Decimal?		  AsCodeDegreeClassId = null;
		
		/// <summary>
		/// ED_COURSE_EXP_HDR_ID : 
		/// </summary>
		public System.Decimal?		  EdCourseExpHdrId = null;
		
		/// <summary>
		/// LOAD_WITH_TRAIN : 
		/// </summary>
		public System.Decimal?		  LoadWithTrain = null;
		
		/// <summary>
		/// EXAM_FLG : 
		/// </summary>
		public System.Decimal?		  ExamFlg = null;
		
		/// <summary>
		/// FREE_FLG : 
		/// </summary>
		public System.Decimal?		  FreeFlg = null;
		
		/// <summary>
		/// INCMPLT_FLG : XXXXcurrently not used
		/// </summary>
		public System.Decimal?		  IncmpltFlg = null;
		
		/// <summary>
		/// DROP_FLG : 
		/// </summary>
		public System.Decimal?		  DropFlg = null;
		
		/// <summary>
		/// EXAM_HRS : ساعات الامتحان
		/// </summary>
		public System.Decimal?		  ExamHrs = null;
		
		/// <summary>
		/// CRS_WGT : XXXCoefficient
		/// </summary>
		public System.Decimal?		  CrsWgt = null;
		
		/// <summary>
		/// COURSE_DESCR_FR : XXX
		/// </summary>
		public System.String		  CourseDescrFr = null;
		
		/// <summary>
		/// ECTS : 
		/// </summary>
		public System.Decimal?		  Ects = null;
		
		/// <summary>
		/// LOAD_CRS_COUNT : 
		/// </summary>
		public System.Int32?		  LoadCrsCount = null;
		
		/// <summary>
		/// EXTND_FLG : Thesis,TrainCourse on multiple semesters
		/// 		/// مقرر ممتد على فصلين اول وتانىmodular
		/// </summary>
		public System.Boolean?		  ExtndFlg = null;
		
		/// <summary>
		/// Course_Mod : معرف جديد للمقرر بخلاف الكود يستخدم فى كلية الطيران CAT
		/// </summary>
		public System.String		  CourseMod = null;
		
		/// <summary>
		/// ED_CODE_COURSE_TYPE_ID : 
		/// </summary>
		public System.Int32?		  EdCodeCourseTypeId = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private GsCodeLanguage _gsCodeLanguageIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeLanguage"/>.
		/// </summary>
		/// <value>The source GsCodeLanguage for GsCodeLanguageId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeLanguage GsCodeLanguageIdSource
      	{
            get { return this._gsCodeLanguageIdSource; }
            set { this._gsCodeLanguageIdSource = value; }
      	}
		private AsCodeDegreeClass _asCodeDegreeClassIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AsCodeDegreeClass"/>.
		/// </summary>
		/// <value>The source AsCodeDegreeClass for AsCodeDegreeClassId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AsCodeDegreeClass AsCodeDegreeClassIdSource
      	{
            get { return this._asCodeDegreeClassIdSource; }
            set { this._asCodeDegreeClassIdSource = value; }
      	}
		private AsFacultyInfo _asFacultyInfoIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AsFacultyInfo"/>.
		/// </summary>
		/// <value>The source AsFacultyInfo for AsFacultyInfoId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AsFacultyInfo AsFacultyInfoIdSource
      	{
            get { return this._asFacultyInfoIdSource; }
            set { this._asFacultyInfoIdSource = value; }
      	}
		private EdCodeCourse _edCodeCourseIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeCourse"/>.
		/// </summary>
		/// <value>The source EdCodeCourse for EdCodeCourseId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeCourse EdCodeCourseIdSource
      	{
            get { return this._edCodeCourseIdSource; }
            set { this._edCodeCourseIdSource = value; }
      	}
		private EdCodeCourseType _edCodeCourseTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeCourseType"/>.
		/// </summary>
		/// <value>The source EdCodeCourseType for EdCodeCourseTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeCourseType EdCodeCourseTypeIdSource
      	{
            get { return this._edCodeCourseTypeIdSource; }
            set { this._edCodeCourseTypeIdSource = value; }
      	}
		private EdCourseExpHdr _edCourseExpHdrIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCourseExpHdr"/>.
		/// </summary>
		/// <value>The source EdCourseExpHdr for EdCourseExpHdrId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCourseExpHdr EdCourseExpHdrIdSource
      	{
            get { return this._edCourseExpHdrIdSource; }
            set { this._edCourseExpHdrIdSource = value; }
      	}
		private EdCoursePrfx _edCoursePrfxIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCoursePrfx"/>.
		/// </summary>
		/// <value>The source EdCoursePrfx for EdCoursePrfxId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCoursePrfx EdCoursePrfxIdSource
      	{
            get { return this._edCoursePrfxIdSource; }
            set { this._edCoursePrfxIdSource = value; }
      	}
		private EntityMain _entMainIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EntityMain"/>.
		/// </summary>
		/// <value>The source EntityMain for EntMainId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EntityMain EntMainIdSource
      	{
            get { return this._entMainIdSource; }
            set { this._entMainIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region EdStudExmptCrsFromCollection
		
		private TList<EdStudExmptCrsFrom> _edStudExmptCrsFromEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudExmptCrsFromEdCourseId
		/// </summary>
		
		public TList<EdStudExmptCrsFrom> EdStudExmptCrsFromCollection
		{
			get
			{
				if (_edStudExmptCrsFromEdCourseId == null)
				{
				_edStudExmptCrsFromEdCourseId = new TList<EdStudExmptCrsFrom>();
				}
	
				return _edStudExmptCrsFromEdCourseId;
			}
			set { _edStudExmptCrsFromEdCourseId = value; }
		}
		
		#endregion

		#region WfCrsRsltApproveCollection
		
		private TList<WfCrsRsltApprove> _wfCrsRsltApproveEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _wfCrsRsltApproveEdCourseId
		/// </summary>
		
		public TList<WfCrsRsltApprove> WfCrsRsltApproveCollection
		{
			get
			{
				if (_wfCrsRsltApproveEdCourseId == null)
				{
				_wfCrsRsltApproveEdCourseId = new TList<WfCrsRsltApprove>();
				}
	
				return _wfCrsRsltApproveEdCourseId;
			}
			set { _wfCrsRsltApproveEdCourseId = value; }
		}
		
		#endregion

		#region EdStudCourseRegCollectionGetByEdCourseOrgId
		
		private TList<EdStudCourseReg> _edStudCourseRegEdCourseOrgIdGetByEdCourseOrgId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegEdCourseOrgIdGetByEdCourseOrgId
		/// </summary>
		
		public TList<EdStudCourseReg> EdStudCourseRegCollectionGetByEdCourseOrgId
		{
			get
			{
				if (_edStudCourseRegEdCourseOrgIdGetByEdCourseOrgId == null)
				{
				_edStudCourseRegEdCourseOrgIdGetByEdCourseOrgId = new TList<EdStudCourseReg>();
				}
	
				return _edStudCourseRegEdCourseOrgIdGetByEdCourseOrgId;
			}
			set { _edStudCourseRegEdCourseOrgIdGetByEdCourseOrgId = value; }
		}
		
		#endregion

		#region EdStudCourseRegPreCollection
		
		private TList<EdStudCourseRegPre> _edStudCourseRegPreEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegPreEdCourseId
		/// </summary>
		
		public TList<EdStudCourseRegPre> EdStudCourseRegPreCollection
		{
			get
			{
				if (_edStudCourseRegPreEdCourseId == null)
				{
				_edStudCourseRegPreEdCourseId = new TList<EdStudCourseRegPre>();
				}
	
				return _edStudCourseRegPreEdCourseId;
			}
			set { _edStudCourseRegPreEdCourseId = value; }
		}
		
		#endregion

		#region EdCourseTchngCollection
		
		private TList<EdCourseTchng> _edCourseTchngEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseTchngEdCourseId
		/// </summary>
		
		public TList<EdCourseTchng> EdCourseTchngCollection
		{
			get
			{
				if (_edCourseTchngEdCourseId == null)
				{
				_edCourseTchngEdCourseId = new TList<EdCourseTchng>();
				}
	
				return _edCourseTchngEdCourseId;
			}
			set { _edCourseTchngEdCourseId = value; }
		}
		
		#endregion

		#region EdOfferingCourseCollection
		
		private TList<EdOfferingCourse> _edOfferingCourseEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edOfferingCourseEdCourseId
		/// </summary>
		
		public TList<EdOfferingCourse> EdOfferingCourseCollection
		{
			get
			{
				if (_edOfferingCourseEdCourseId == null)
				{
				_edOfferingCourseEdCourseId = new TList<EdOfferingCourse>();
				}
	
				return _edOfferingCourseEdCourseId;
			}
			set { _edOfferingCourseEdCourseId = value; }
		}
		
		#endregion

		#region EdCourseOrientCollection
		
		private TList<EdCourseOrient> _edCourseOrientEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseOrientEdCourseId
		/// </summary>
		
		public TList<EdCourseOrient> EdCourseOrientCollection
		{
			get
			{
				if (_edCourseOrientEdCourseId == null)
				{
				_edCourseOrientEdCourseId = new TList<EdCourseOrient>();
				}
	
				return _edCourseOrientEdCourseId;
			}
			set { _edCourseOrientEdCourseId = value; }
		}
		
		#endregion

		#region EdTrainStudCollection
		
		private TList<EdTrainStud> _edTrainStudEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edTrainStudEdCourseId
		/// </summary>
		
		public TList<EdTrainStud> EdTrainStudCollection
		{
			get
			{
				if (_edTrainStudEdCourseId == null)
				{
				_edTrainStudEdCourseId = new TList<EdTrainStud>();
				}
	
				return _edTrainStudEdCourseId;
			}
			set { _edTrainStudEdCourseId = value; }
		}
		
		#endregion

		#region EdCourseOutcomesTopicsCollection
		
		private TList<EdCourseOutcomesTopics> _edCourseOutcomesTopicsEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseOutcomesTopicsEdCourseId
		/// </summary>
		
		public TList<EdCourseOutcomesTopics> EdCourseOutcomesTopicsCollection
		{
			get
			{
				if (_edCourseOutcomesTopicsEdCourseId == null)
				{
				_edCourseOutcomesTopicsEdCourseId = new TList<EdCourseOutcomesTopics>();
				}
	
				return _edCourseOutcomesTopicsEdCourseId;
			}
			set { _edCourseOutcomesTopicsEdCourseId = value; }
		}
		
		#endregion

		#region EdStudCourseWaitCollection
		
		private TList<EdStudCourseWait> _edStudCourseWaitEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseWaitEdCourseId
		/// </summary>
		
		public TList<EdStudCourseWait> EdStudCourseWaitCollection
		{
			get
			{
				if (_edStudCourseWaitEdCourseId == null)
				{
				_edStudCourseWaitEdCourseId = new TList<EdStudCourseWait>();
				}
	
				return _edStudCourseWaitEdCourseId;
			}
			set { _edStudCourseWaitEdCourseId = value; }
		}
		
		#endregion

		#region EdExamSchdlCollection
		
		private TList<EdExamSchdl> _edExamSchdlEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edExamSchdlEdCourseId
		/// </summary>
		
		public TList<EdExamSchdl> EdExamSchdlCollection
		{
			get
			{
				if (_edExamSchdlEdCourseId == null)
				{
				_edExamSchdlEdCourseId = new TList<EdExamSchdl>();
				}
	
				return _edExamSchdlEdCourseId;
			}
			set { _edExamSchdlEdCourseId = value; }
		}
		
		#endregion

		#region EdCourseTopicCollection
		
		private TList<EdCourseTopic> _edCourseTopicEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseTopicEdCourseId
		/// </summary>
		
		public TList<EdCourseTopic> EdCourseTopicCollection
		{
			get
			{
				if (_edCourseTopicEdCourseId == null)
				{
				_edCourseTopicEdCourseId = new TList<EdCourseTopic>();
				}
	
				return _edCourseTopicEdCourseId;
			}
			set { _edCourseTopicEdCourseId = value; }
		}
		
		#endregion

		#region EntPolicyAssessCourseCollection
		
		private TList<EntPolicyAssessCourse> _entPolicyAssessCourseEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entPolicyAssessCourseEdCourseId
		/// </summary>
		
		public TList<EntPolicyAssessCourse> EntPolicyAssessCourseCollection
		{
			get
			{
				if (_entPolicyAssessCourseEdCourseId == null)
				{
				_entPolicyAssessCourseEdCourseId = new TList<EntPolicyAssessCourse>();
				}
	
				return _entPolicyAssessCourseEdCourseId;
			}
			set { _entPolicyAssessCourseEdCourseId = value; }
		}
		
		#endregion

		#region EntPolicyGradingCourseCollection
		
		private TList<EntPolicyGradingCourse> _entPolicyGradingCourseEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entPolicyGradingCourseEdCourseId
		/// </summary>
		
		public TList<EntPolicyGradingCourse> EntPolicyGradingCourseCollection
		{
			get
			{
				if (_entPolicyGradingCourseEdCourseId == null)
				{
				_entPolicyGradingCourseEdCourseId = new TList<EntPolicyGradingCourse>();
				}
	
				return _entPolicyGradingCourseEdCourseId;
			}
			set { _entPolicyGradingCourseEdCourseId = value; }
		}
		
		#endregion

		#region EdCourseBarredCollectionGetByEdBarredCourseId
		
		private TList<EdCourseBarred> _edCourseBarredEdBarredCourseIdGetByEdBarredCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseBarredEdBarredCourseIdGetByEdBarredCourseId
		/// </summary>
		
		public TList<EdCourseBarred> EdCourseBarredCollectionGetByEdBarredCourseId
		{
			get
			{
				if (_edCourseBarredEdBarredCourseIdGetByEdBarredCourseId == null)
				{
				_edCourseBarredEdBarredCourseIdGetByEdBarredCourseId = new TList<EdCourseBarred>();
				}
	
				return _edCourseBarredEdBarredCourseIdGetByEdBarredCourseId;
			}
			set { _edCourseBarredEdBarredCourseIdGetByEdBarredCourseId = value; }
		}
		
		#endregion

		#region EdCourseBarredCollectionGetByEdCourseId
		
		private TList<EdCourseBarred> _edCourseBarredEdBarredCourseIdGetByEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseBarredEdBarredCourseIdGetByEdCourseId
		/// </summary>
		
		public TList<EdCourseBarred> EdCourseBarredCollectionGetByEdCourseId
		{
			get
			{
				if (_edCourseBarredEdBarredCourseIdGetByEdCourseId == null)
				{
				_edCourseBarredEdBarredCourseIdGetByEdCourseId = new TList<EdCourseBarred>();
				}
	
				return _edCourseBarredEdBarredCourseIdGetByEdCourseId;
			}
			set { _edCourseBarredEdBarredCourseIdGetByEdCourseId = value; }
		}
		
		#endregion

		#region PgThesisGrantStudCollection
		
		private TList<PgThesisGrantStud> _pgThesisGrantStudEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisGrantStudEdCourseId
		/// </summary>
		
		public TList<PgThesisGrantStud> PgThesisGrantStudCollection
		{
			get
			{
				if (_pgThesisGrantStudEdCourseId == null)
				{
				_pgThesisGrantStudEdCourseId = new TList<PgThesisGrantStud>();
				}
	
				return _pgThesisGrantStudEdCourseId;
			}
			set { _pgThesisGrantStudEdCourseId = value; }
		}
		
		#endregion

		#region EdStudLatenessCollection
		
		private TList<EdStudLateness> _edStudLatenessEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudLatenessEdCourseId
		/// </summary>
		
		public TList<EdStudLateness> EdStudLatenessCollection
		{
			get
			{
				if (_edStudLatenessEdCourseId == null)
				{
				_edStudLatenessEdCourseId = new TList<EdStudLateness>();
				}
	
				return _edStudLatenessEdCourseId;
			}
			set { _edStudLatenessEdCourseId = value; }
		}
		
		#endregion

		#region EntPolcyGrdngCourseCollection
		
		private TList<EntPolcyGrdngCourse> _entPolcyGrdngCourseEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entPolcyGrdngCourseEdCourseId
		/// </summary>
		
		public TList<EntPolcyGrdngCourse> EntPolcyGrdngCourseCollection
		{
			get
			{
				if (_entPolcyGrdngCourseEdCourseId == null)
				{
				_entPolcyGrdngCourseEdCourseId = new TList<EntPolcyGrdngCourse>();
				}
	
				return _entPolcyGrdngCourseEdCourseId;
			}
			set { _entPolcyGrdngCourseEdCourseId = value; }
		}
		
		#endregion

		#region CoContRmMemCourseCollection
		
		private TList<CoContRmMemCourse> _coContRmMemCourseEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coContRmMemCourseEdCourseId
		/// </summary>
		
		public TList<CoContRmMemCourse> CoContRmMemCourseCollection
		{
			get
			{
				if (_coContRmMemCourseEdCourseId == null)
				{
				_coContRmMemCourseEdCourseId = new TList<CoContRmMemCourse>();
				}
	
				return _coContRmMemCourseEdCourseId;
			}
			set { _coContRmMemCourseEdCourseId = value; }
		}
		
		#endregion

		#region SvStudCourseEvalCollection
		
		private TList<SvStudCourseEval> _svStudCourseEvalEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudCourseEvalEdCourseId
		/// </summary>
		
		public TList<SvStudCourseEval> SvStudCourseEvalCollection
		{
			get
			{
				if (_svStudCourseEvalEdCourseId == null)
				{
				_svStudCourseEvalEdCourseId = new TList<SvStudCourseEval>();
				}
	
				return _svStudCourseEvalEdCourseId;
			}
			set { _svStudCourseEvalEdCourseId = value; }
		}
		
		#endregion

		#region EdCourseEquivCollectionGetByEdEquivCourseId
		
		private TList<EdCourseEquiv> _edCourseEquivEdCourseIdGetByEdEquivCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseEquivEdCourseIdGetByEdEquivCourseId
		/// </summary>
		
		public TList<EdCourseEquiv> EdCourseEquivCollectionGetByEdEquivCourseId
		{
			get
			{
				if (_edCourseEquivEdCourseIdGetByEdEquivCourseId == null)
				{
				_edCourseEquivEdCourseIdGetByEdEquivCourseId = new TList<EdCourseEquiv>();
				}
	
				return _edCourseEquivEdCourseIdGetByEdEquivCourseId;
			}
			set { _edCourseEquivEdCourseIdGetByEdEquivCourseId = value; }
		}
		
		#endregion

		#region EdCourseRltdCollectionGetByEdCourse1Id
		
		private TList<EdCourseRltd> _edCourseRltdEdCourse2IdGetByEdCourse1Id;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseRltdEdCourse2IdGetByEdCourse1Id
		/// </summary>
		
		public TList<EdCourseRltd> EdCourseRltdCollectionGetByEdCourse1Id
		{
			get
			{
				if (_edCourseRltdEdCourse2IdGetByEdCourse1Id == null)
				{
				_edCourseRltdEdCourse2IdGetByEdCourse1Id = new TList<EdCourseRltd>();
				}
	
				return _edCourseRltdEdCourse2IdGetByEdCourse1Id;
			}
			set { _edCourseRltdEdCourse2IdGetByEdCourse1Id = value; }
		}
		
		#endregion

		#region FeeStudVoucherCrsItemCollection
		
		private TList<FeeStudVoucherCrsItem> _feeStudVoucherCrsItemEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudVoucherCrsItemEdCourseId
		/// </summary>
		
		public TList<FeeStudVoucherCrsItem> FeeStudVoucherCrsItemCollection
		{
			get
			{
				if (_feeStudVoucherCrsItemEdCourseId == null)
				{
				_feeStudVoucherCrsItemEdCourseId = new TList<FeeStudVoucherCrsItem>();
				}
	
				return _feeStudVoucherCrsItemEdCourseId;
			}
			set { _feeStudVoucherCrsItemEdCourseId = value; }
		}
		
		#endregion

		#region SvStudCompCollection
		
		private TList<SvStudComp> _svStudCompEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudCompEdCourseId
		/// </summary>
		
		public TList<SvStudComp> SvStudCompCollection
		{
			get
			{
				if (_svStudCompEdCourseId == null)
				{
				_svStudCompEdCourseId = new TList<SvStudComp>();
				}
	
				return _svStudCompEdCourseId;
			}
			set { _svStudCompEdCourseId = value; }
		}
		
		#endregion

		#region EdCourseInfoCollection
		
		private TList<EdCourseInfo> _edCourseInfoEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseInfoEdCourseId
		/// </summary>
		
		public TList<EdCourseInfo> EdCourseInfoCollection
		{
			get
			{
				if (_edCourseInfoEdCourseId == null)
				{
				_edCourseInfoEdCourseId = new TList<EdCourseInfo>();
				}
	
				return _edCourseInfoEdCourseId;
			}
			set { _edCourseInfoEdCourseId = value; }
		}
		
		#endregion

		#region EdCrsFreeRstrctdCollection
		
		private TList<EdCrsFreeRstrctd> _edCrsFreeRstrctdEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCrsFreeRstrctdEdCourseId
		/// </summary>
		
		public TList<EdCrsFreeRstrctd> EdCrsFreeRstrctdCollection
		{
			get
			{
				if (_edCrsFreeRstrctdEdCourseId == null)
				{
				_edCrsFreeRstrctdEdCourseId = new TList<EdCrsFreeRstrctd>();
				}
	
				return _edCrsFreeRstrctdEdCourseId;
			}
			set { _edCrsFreeRstrctdEdCourseId = value; }
		}
		
		#endregion

		#region AdmPlaceExamCourseCollection
		
		private TList<AdmPlaceExamCourse> _admPlaceExamCourseEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admPlaceExamCourseEdCourseId
		/// </summary>
		
		public TList<AdmPlaceExamCourse> AdmPlaceExamCourseCollection
		{
			get
			{
				if (_admPlaceExamCourseEdCourseId == null)
				{
				_admPlaceExamCourseEdCourseId = new TList<AdmPlaceExamCourse>();
				}
	
				return _admPlaceExamCourseEdCourseId;
			}
			set { _admPlaceExamCourseEdCourseId = value; }
		}
		
		#endregion

		#region CoCourseResultCollection
		
		private TList<CoCourseResult> _coCourseResultEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coCourseResultEdCourseId
		/// </summary>
		
		public TList<CoCourseResult> CoCourseResultCollection
		{
			get
			{
				if (_coCourseResultEdCourseId == null)
				{
				_coCourseResultEdCourseId = new TList<CoCourseResult>();
				}
	
				return _coCourseResultEdCourseId;
			}
			set { _coCourseResultEdCourseId = value; }
		}
		
		#endregion

		#region FeeStudCoursesItemCollection
		
		private TList<FeeStudCoursesItem> _feeStudCoursesItemEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudCoursesItemEdCourseId
		/// </summary>
		
		public TList<FeeStudCoursesItem> FeeStudCoursesItemCollection
		{
			get
			{
				if (_feeStudCoursesItemEdCourseId == null)
				{
				_feeStudCoursesItemEdCourseId = new TList<FeeStudCoursesItem>();
				}
	
				return _feeStudCoursesItemEdCourseId;
			}
			set { _feeStudCoursesItemEdCourseId = value; }
		}
		
		#endregion

		#region EdStudCourseRegTempCollection
		
		private TList<EdStudCourseRegTemp> _edStudCourseRegTempEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegTempEdCourseId
		/// </summary>
		
		public TList<EdStudCourseRegTemp> EdStudCourseRegTempCollection
		{
			get
			{
				if (_edStudCourseRegTempEdCourseId == null)
				{
				_edStudCourseRegTempEdCourseId = new TList<EdStudCourseRegTemp>();
				}
	
				return _edStudCourseRegTempEdCourseId;
			}
			set { _edStudCourseRegTempEdCourseId = value; }
		}
		
		#endregion

		#region EdStudCourseChngCollectionGetByEdCourseId
		
		private TList<EdStudCourseChng> _edStudCourseChngEdCourseSubIdGetByEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseChngEdCourseSubIdGetByEdCourseId
		/// </summary>
		
		public TList<EdStudCourseChng> EdStudCourseChngCollectionGetByEdCourseId
		{
			get
			{
				if (_edStudCourseChngEdCourseSubIdGetByEdCourseId == null)
				{
				_edStudCourseChngEdCourseSubIdGetByEdCourseId = new TList<EdStudCourseChng>();
				}
	
				return _edStudCourseChngEdCourseSubIdGetByEdCourseId;
			}
			set { _edStudCourseChngEdCourseSubIdGetByEdCourseId = value; }
		}
		
		#endregion

		#region EdStudCourseChngCollectionGetByEdCourseSubId
		
		private TList<EdStudCourseChng> _edStudCourseChngEdCourseSubIdGetByEdCourseSubId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseChngEdCourseSubIdGetByEdCourseSubId
		/// </summary>
		
		public TList<EdStudCourseChng> EdStudCourseChngCollectionGetByEdCourseSubId
		{
			get
			{
				if (_edStudCourseChngEdCourseSubIdGetByEdCourseSubId == null)
				{
				_edStudCourseChngEdCourseSubIdGetByEdCourseSubId = new TList<EdStudCourseChng>();
				}
	
				return _edStudCourseChngEdCourseSubIdGetByEdCourseSubId;
			}
			set { _edStudCourseChngEdCourseSubIdGetByEdCourseSubId = value; }
		}
		
		#endregion

		#region PgThesisStudCollection
		
		private TList<PgThesisStud> _pgThesisStudEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisStudEdCourseId
		/// </summary>
		
		public TList<PgThesisStud> PgThesisStudCollection
		{
			get
			{
				if (_pgThesisStudEdCourseId == null)
				{
				_pgThesisStudEdCourseId = new TList<PgThesisStud>();
				}
	
				return _pgThesisStudEdCourseId;
			}
			set { _pgThesisStudEdCourseId = value; }
		}
		
		#endregion

		#region EdStudExmptCrsToCollection
		
		private TList<EdStudExmptCrsTo> _edStudExmptCrsToEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudExmptCrsToEdCourseId
		/// </summary>
		
		public TList<EdStudExmptCrsTo> EdStudExmptCrsToCollection
		{
			get
			{
				if (_edStudExmptCrsToEdCourseId == null)
				{
				_edStudExmptCrsToEdCourseId = new TList<EdStudExmptCrsTo>();
				}
	
				return _edStudExmptCrsToEdCourseId;
			}
			set { _edStudExmptCrsToEdCourseId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsCourseFromCollection
		
		private TList<EdStudIntTrnsCourseFrom> _edStudIntTrnsCourseFromEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsCourseFromEdCourseId
		/// </summary>
		
		public TList<EdStudIntTrnsCourseFrom> EdStudIntTrnsCourseFromCollection
		{
			get
			{
				if (_edStudIntTrnsCourseFromEdCourseId == null)
				{
				_edStudIntTrnsCourseFromEdCourseId = new TList<EdStudIntTrnsCourseFrom>();
				}
	
				return _edStudIntTrnsCourseFromEdCourseId;
			}
			set { _edStudIntTrnsCourseFromEdCourseId = value; }
		}
		
		#endregion

		#region CoCrsRsltRaiseCollection
		
		private TList<CoCrsRsltRaise> _coCrsRsltRaiseEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coCrsRsltRaiseEdCourseId
		/// </summary>
		
		public TList<CoCrsRsltRaise> CoCrsRsltRaiseCollection
		{
			get
			{
				if (_coCrsRsltRaiseEdCourseId == null)
				{
				_coCrsRsltRaiseEdCourseId = new TList<CoCrsRsltRaise>();
				}
	
				return _coCrsRsltRaiseEdCourseId;
			}
			set { _coCrsRsltRaiseEdCourseId = value; }
		}
		
		#endregion

		#region EntMajorPhaseCrsExpCollection
		
		private TList<EntMajorPhaseCrsExp> _entMajorPhaseCrsExpEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entMajorPhaseCrsExpEdCourseId
		/// </summary>
		
		public TList<EntMajorPhaseCrsExp> EntMajorPhaseCrsExpCollection
		{
			get
			{
				if (_entMajorPhaseCrsExpEdCourseId == null)
				{
				_entMajorPhaseCrsExpEdCourseId = new TList<EntMajorPhaseCrsExp>();
				}
	
				return _entMajorPhaseCrsExpEdCourseId;
			}
			set { _entMajorPhaseCrsExpEdCourseId = value; }
		}
		
		#endregion

		#region EdOutcomeCollection
		
		private TList<EdOutcome> _edOutcomeEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edOutcomeEdCourseId
		/// </summary>
		
		public TList<EdOutcome> EdOutcomeCollection
		{
			get
			{
				if (_edOutcomeEdCourseId == null)
				{
				_edOutcomeEdCourseId = new TList<EdOutcome>();
				}
	
				return _edOutcomeEdCourseId;
			}
			set { _edOutcomeEdCourseId = value; }
		}
		
		#endregion

		#region EdExamCrsOrderCollection
		
		private TList<EdExamCrsOrder> _edExamCrsOrderEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edExamCrsOrderEdCourseId
		/// </summary>
		
		public TList<EdExamCrsOrder> EdExamCrsOrderCollection
		{
			get
			{
				if (_edExamCrsOrderEdCourseId == null)
				{
				_edExamCrsOrderEdCourseId = new TList<EdExamCrsOrder>();
				}
	
				return _edExamCrsOrderEdCourseId;
			}
			set { _edExamCrsOrderEdCourseId = value; }
		}
		
		#endregion

		#region EdBranchCrsCollection
		
		private TList<EdBranchCrs> _edBranchCrsEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edBranchCrsEdCourseId
		/// </summary>
		
		public TList<EdBranchCrs> EdBranchCrsCollection
		{
			get
			{
				if (_edBranchCrsEdCourseId == null)
				{
				_edBranchCrsEdCourseId = new TList<EdBranchCrs>();
				}
	
				return _edBranchCrsEdCourseId;
			}
			set { _edBranchCrsEdCourseId = value; }
		}
		
		#endregion

		#region ScSectionGroupHdrCollection
		
		private TList<ScSectionGroupHdr> _scSectionGroupHdrEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scSectionGroupHdrEdCourseId
		/// </summary>
		
		public TList<ScSectionGroupHdr> ScSectionGroupHdrCollection
		{
			get
			{
				if (_scSectionGroupHdrEdCourseId == null)
				{
				_scSectionGroupHdrEdCourseId = new TList<ScSectionGroupHdr>();
				}
	
				return _scSectionGroupHdrEdCourseId;
			}
			set { _scSectionGroupHdrEdCourseId = value; }
		}
		
		#endregion

		#region EdProjStudCollection
		
		private TList<EdProjStud> _edProjStudEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edProjStudEdCourseId
		/// </summary>
		
		public TList<EdProjStud> EdProjStudCollection
		{
			get
			{
				if (_edProjStudEdCourseId == null)
				{
				_edProjStudEdCourseId = new TList<EdProjStud>();
				}
	
				return _edProjStudEdCourseId;
			}
			set { _edProjStudEdCourseId = value; }
		}
		
		#endregion

		#region SvCourseEvalCollection
		
		private TList<SvCourseEval> _svCourseEvalEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svCourseEvalEdCourseId
		/// </summary>
		
		public TList<SvCourseEval> SvCourseEvalCollection
		{
			get
			{
				if (_svCourseEvalEdCourseId == null)
				{
				_svCourseEvalEdCourseId = new TList<SvCourseEval>();
				}
	
				return _svCourseEvalEdCourseId;
			}
			set { _svCourseEvalEdCourseId = value; }
		}
		
		#endregion

		#region EdStudCourseRplcCollectionGetByEdCourseOldId
		
		private TList<EdStudCourseRplc> _edStudCourseRplcEdCourseNewIdGetByEdCourseOldId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRplcEdCourseNewIdGetByEdCourseOldId
		/// </summary>
		
		public TList<EdStudCourseRplc> EdStudCourseRplcCollectionGetByEdCourseOldId
		{
			get
			{
				if (_edStudCourseRplcEdCourseNewIdGetByEdCourseOldId == null)
				{
				_edStudCourseRplcEdCourseNewIdGetByEdCourseOldId = new TList<EdStudCourseRplc>();
				}
	
				return _edStudCourseRplcEdCourseNewIdGetByEdCourseOldId;
			}
			set { _edStudCourseRplcEdCourseNewIdGetByEdCourseOldId = value; }
		}
		
		#endregion

		#region EdStudCourseRegCollectionGetByEdCourseId
		
		private TList<EdStudCourseReg> _edStudCourseRegEdCourseOrgIdGetByEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegEdCourseOrgIdGetByEdCourseId
		/// </summary>
		
		public TList<EdStudCourseReg> EdStudCourseRegCollectionGetByEdCourseId
		{
			get
			{
				if (_edStudCourseRegEdCourseOrgIdGetByEdCourseId == null)
				{
				_edStudCourseRegEdCourseOrgIdGetByEdCourseId = new TList<EdStudCourseReg>();
				}
	
				return _edStudCourseRegEdCourseOrgIdGetByEdCourseId;
			}
			set { _edStudCourseRegEdCourseOrgIdGetByEdCourseId = value; }
		}
		
		#endregion

		#region ScHallRsrvCollection
		
		private TList<ScHallRsrv> _scHallRsrvEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scHallRsrvEdCourseId
		/// </summary>
		
		public TList<ScHallRsrv> ScHallRsrvCollection
		{
			get
			{
				if (_scHallRsrvEdCourseId == null)
				{
				_scHallRsrvEdCourseId = new TList<ScHallRsrv>();
				}
	
				return _scHallRsrvEdCourseId;
			}
			set { _scHallRsrvEdCourseId = value; }
		}
		
		#endregion

		#region EdCourseRltdCollectionGetByEdCourse2Id
		
		private TList<EdCourseRltd> _edCourseRltdEdCourse2IdGetByEdCourse2Id;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseRltdEdCourse2IdGetByEdCourse2Id
		/// </summary>
		
		public TList<EdCourseRltd> EdCourseRltdCollectionGetByEdCourse2Id
		{
			get
			{
				if (_edCourseRltdEdCourse2IdGetByEdCourse2Id == null)
				{
				_edCourseRltdEdCourse2IdGetByEdCourse2Id = new TList<EdCourseRltd>();
				}
	
				return _edCourseRltdEdCourse2IdGetByEdCourse2Id;
			}
			set { _edCourseRltdEdCourse2IdGetByEdCourse2Id = value; }
		}
		
		#endregion

		#region EdStudAbsenceCollection
		
		private TList<EdStudAbsence> _edStudAbsenceEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAbsenceEdCourseId
		/// </summary>
		
		public TList<EdStudAbsence> EdStudAbsenceCollection
		{
			get
			{
				if (_edStudAbsenceEdCourseId == null)
				{
				_edStudAbsenceEdCourseId = new TList<EdStudAbsence>();
				}
	
				return _edStudAbsenceEdCourseId;
			}
			set { _edStudAbsenceEdCourseId = value; }
		}
		
		#endregion

		#region EdStudAbsFwCollection
		
		private TList<EdStudAbsFw> _edStudAbsFwEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAbsFwEdCourseId
		/// </summary>
		
		public TList<EdStudAbsFw> EdStudAbsFwCollection
		{
			get
			{
				if (_edStudAbsFwEdCourseId == null)
				{
				_edStudAbsFwEdCourseId = new TList<EdStudAbsFw>();
				}
	
				return _edStudAbsFwEdCourseId;
			}
			set { _edStudAbsFwEdCourseId = value; }
		}
		
		#endregion

		#region EntCoursePkgDtlCollection
		
		private TList<EntCoursePkgDtl> _entCoursePkgDtlEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entCoursePkgDtlEdCourseId
		/// </summary>
		
		public TList<EntCoursePkgDtl> EntCoursePkgDtlCollection
		{
			get
			{
				if (_entCoursePkgDtlEdCourseId == null)
				{
				_entCoursePkgDtlEdCourseId = new TList<EntCoursePkgDtl>();
				}
	
				return _entCoursePkgDtlEdCourseId;
			}
			set { _entCoursePkgDtlEdCourseId = value; }
		}
		
		#endregion

		#region EdStudCourseRplcCollectionGetByEdCourseNewId
		
		private TList<EdStudCourseRplc> _edStudCourseRplcEdCourseNewIdGetByEdCourseNewId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRplcEdCourseNewIdGetByEdCourseNewId
		/// </summary>
		
		public TList<EdStudCourseRplc> EdStudCourseRplcCollectionGetByEdCourseNewId
		{
			get
			{
				if (_edStudCourseRplcEdCourseNewIdGetByEdCourseNewId == null)
				{
				_edStudCourseRplcEdCourseNewIdGetByEdCourseNewId = new TList<EdStudCourseRplc>();
				}
	
				return _edStudCourseRplcEdCourseNewIdGetByEdCourseNewId;
			}
			set { _edStudCourseRplcEdCourseNewIdGetByEdCourseNewId = value; }
		}
		
		#endregion

		#region EdCourseEquivCollectionGetByEdCourseId
		
		private TList<EdCourseEquiv> _edCourseEquivEdCourseIdGetByEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseEquivEdCourseIdGetByEdCourseId
		/// </summary>
		
		public TList<EdCourseEquiv> EdCourseEquivCollectionGetByEdCourseId
		{
			get
			{
				if (_edCourseEquivEdCourseIdGetByEdCourseId == null)
				{
				_edCourseEquivEdCourseIdGetByEdCourseId = new TList<EdCourseEquiv>();
				}
	
				return _edCourseEquivEdCourseIdGetByEdCourseId;
			}
			set { _edCourseEquivEdCourseIdGetByEdCourseId = value; }
		}
		
		#endregion

		#region ScSchdlSlotCollection
		
		private TList<ScSchdlSlot> _scSchdlSlotEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scSchdlSlotEdCourseId
		/// </summary>
		
		public TList<ScSchdlSlot> ScSchdlSlotCollection
		{
			get
			{
				if (_scSchdlSlotEdCourseId == null)
				{
				_scSchdlSlotEdCourseId = new TList<ScSchdlSlot>();
				}
	
				return _scSchdlSlotEdCourseId;
			}
			set { _scSchdlSlotEdCourseId = value; }
		}
		
		#endregion

		#region EdStudExcuseCourseCollection
		
		private TList<EdStudExcuseCourse> _edStudExcuseCourseEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudExcuseCourseEdCourseId
		/// </summary>
		
		public TList<EdStudExcuseCourse> EdStudExcuseCourseCollection
		{
			get
			{
				if (_edStudExcuseCourseEdCourseId == null)
				{
				_edStudExcuseCourseEdCourseId = new TList<EdStudExcuseCourse>();
				}
	
				return _edStudExcuseCourseEdCourseId;
			}
			set { _edStudExcuseCourseEdCourseId = value; }
		}
		
		#endregion

		#region SvPollHdrCollection
		
		private TList<SvPollHdr> _svPollHdrEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svPollHdrEdCourseId
		/// </summary>
		
		public TList<SvPollHdr> SvPollHdrCollection
		{
			get
			{
				if (_svPollHdrEdCourseId == null)
				{
				_svPollHdrEdCourseId = new TList<SvPollHdr>();
				}
	
				return _svPollHdrEdCourseId;
			}
			set { _svPollHdrEdCourseId = value; }
		}
		
		#endregion

		#region AdmAppPlaceExamCourseCollection
		
		private TList<AdmAppPlaceExamCourse> _admAppPlaceExamCourseEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppPlaceExamCourseEdCourseId
		/// </summary>
		
		public TList<AdmAppPlaceExamCourse> AdmAppPlaceExamCourseCollection
		{
			get
			{
				if (_admAppPlaceExamCourseEdCourseId == null)
				{
				_admAppPlaceExamCourseEdCourseId = new TList<AdmAppPlaceExamCourse>();
				}
	
				return _admAppPlaceExamCourseEdCourseId;
			}
			set { _admAppPlaceExamCourseEdCourseId = value; }
		}
		
		#endregion

		#region SeUserCrsAssessCollection
		
		private TList<SeUserCrsAssess> _seUserCrsAssessEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _seUserCrsAssessEdCourseId
		/// </summary>
		
		public TList<SeUserCrsAssess> SeUserCrsAssessCollection
		{
			get
			{
				if (_seUserCrsAssessEdCourseId == null)
				{
				_seUserCrsAssessEdCourseId = new TList<SeUserCrsAssess>();
				}
	
				return _seUserCrsAssessEdCourseId;
			}
			set { _seUserCrsAssessEdCourseId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsCourseToCollection
		
		private TList<EdStudIntTrnsCourseTo> _edStudIntTrnsCourseToEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsCourseToEdCourseId
		/// </summary>
		
		public TList<EdStudIntTrnsCourseTo> EdStudIntTrnsCourseToCollection
		{
			get
			{
				if (_edStudIntTrnsCourseToEdCourseId == null)
				{
				_edStudIntTrnsCourseToEdCourseId = new TList<EdStudIntTrnsCourseTo>();
				}
	
				return _edStudIntTrnsCourseToEdCourseId;
			}
			set { _edStudIntTrnsCourseToEdCourseId = value; }
		}
		
		#endregion

		#region EdCourseExpDtlCollection
		
		private TList<EdCourseExpDtl> _edCourseExpDtlEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseExpDtlEdCourseId
		/// </summary>
		
		public TList<EdCourseExpDtl> EdCourseExpDtlCollection
		{
			get
			{
				if (_edCourseExpDtlEdCourseId == null)
				{
				_edCourseExpDtlEdCourseId = new TList<EdCourseExpDtl>();
				}
	
				return _edCourseExpDtlEdCourseId;
			}
			set { _edCourseExpDtlEdCourseId = value; }
		}
		
		#endregion

		#region ScSectionGroupDtlCollection
		
		private TList<ScSectionGroupDtl> _scSectionGroupDtlEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scSectionGroupDtlEdCourseId
		/// </summary>
		
		public TList<ScSectionGroupDtl> ScSectionGroupDtlCollection
		{
			get
			{
				if (_scSectionGroupDtlEdCourseId == null)
				{
				_scSectionGroupDtlEdCourseId = new TList<ScSectionGroupDtl>();
				}
	
				return _scSectionGroupDtlEdCourseId;
			}
			set { _scSectionGroupDtlEdCourseId = value; }
		}
		
		#endregion

		#region CoStudSecretNumCollection
		
		private TList<CoStudSecretNum> _coStudSecretNumEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coStudSecretNumEdCourseId
		/// </summary>
		
		public TList<CoStudSecretNum> CoStudSecretNumCollection
		{
			get
			{
				if (_coStudSecretNumEdCourseId == null)
				{
				_coStudSecretNumEdCourseId = new TList<CoStudSecretNum>();
				}
	
				return _coStudSecretNumEdCourseId;
			}
			set { _coStudSecretNumEdCourseId = value; }
		}
		
		#endregion

		#region EdAcadPlanDtlCollection
		
		private TList<EdAcadPlanDtl> _edAcadPlanDtlEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edAcadPlanDtlEdCourseId
		/// </summary>
		
		public TList<EdAcadPlanDtl> EdAcadPlanDtlCollection
		{
			get
			{
				if (_edAcadPlanDtlEdCourseId == null)
				{
				_edAcadPlanDtlEdCourseId = new TList<EdAcadPlanDtl>();
				}
	
				return _edAcadPlanDtlEdCourseId;
			}
			set { _edAcadPlanDtlEdCourseId = value; }
		}
		
		#endregion

		#region AdmAppTransToCourseCollection
		
		private TList<AdmAppTransToCourse> _admAppTransToCourseEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppTransToCourseEdCourseId
		/// </summary>
		
		public TList<AdmAppTransToCourse> AdmAppTransToCourseCollection
		{
			get
			{
				if (_admAppTransToCourseEdCourseId == null)
				{
				_admAppTransToCourseEdCourseId = new TList<AdmAppTransToCourse>();
				}
	
				return _admAppTransToCourseEdCourseId;
			}
			set { _admAppTransToCourseEdCourseId = value; }
		}
		
		#endregion

		#region EdCourseCoreqCollection
		
		private TList<EdCourseCoreq> _edCourseCoreqEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseCoreqEdCourseId
		/// </summary>
		
		public TList<EdCourseCoreq> EdCourseCoreqCollection
		{
			get
			{
				if (_edCourseCoreqEdCourseId == null)
				{
				_edCourseCoreqEdCourseId = new TList<EdCourseCoreq>();
				}
	
				return _edCourseCoreqEdCourseId;
			}
			set { _edCourseCoreqEdCourseId = value; }
		}
		
		#endregion

		#region AdmAppExmptCourseCollection
		
		private TList<AdmAppExmptCourse> _admAppExmptCourseEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppExmptCourseEdCourseId
		/// </summary>
		
		public TList<AdmAppExmptCourse> AdmAppExmptCourseCollection
		{
			get
			{
				if (_admAppExmptCourseEdCourseId == null)
				{
				_admAppExmptCourseEdCourseId = new TList<AdmAppExmptCourse>();
				}
	
				return _admAppExmptCourseEdCourseId;
			}
			set { _admAppExmptCourseEdCourseId = value; }
		}
		
		#endregion

		#region FeeCourseExpCollection
		
		private TList<FeeCourseExp> _feeCourseExpEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeCourseExpEdCourseId
		/// </summary>
		
		public TList<FeeCourseExp> FeeCourseExpCollection
		{
			get
			{
				if (_feeCourseExpEdCourseId == null)
				{
				_feeCourseExpEdCourseId = new TList<FeeCourseExp>();
				}
	
				return _feeCourseExpEdCourseId;
			}
			set { _feeCourseExpEdCourseId = value; }
		}
		
		#endregion

		#region SeBlockTransCollection
		
		private TList<SeBlockTrans> _seBlockTransEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _seBlockTransEdCourseId
		/// </summary>
		
		public TList<SeBlockTrans> SeBlockTransCollection
		{
			get
			{
				if (_seBlockTransEdCourseId == null)
				{
				_seBlockTransEdCourseId = new TList<SeBlockTrans>();
				}
	
				return _seBlockTransEdCourseId;
			}
			set { _seBlockTransEdCourseId = value; }
		}
		
		#endregion

		#region ScGroupInfoCollection
		
		private TList<ScGroupInfo> _scGroupInfoEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scGroupInfoEdCourseId
		/// </summary>
		
		public TList<ScGroupInfo> ScGroupInfoCollection
		{
			get
			{
				if (_scGroupInfoEdCourseId == null)
				{
				_scGroupInfoEdCourseId = new TList<ScGroupInfo>();
				}
	
				return _scGroupInfoEdCourseId;
			}
			set { _scGroupInfoEdCourseId = value; }
		}
		
		#endregion

		#region SvLecNoteCollection
		
		private TList<SvLecNote> _svLecNoteEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svLecNoteEdCourseId
		/// </summary>
		
		public TList<SvLecNote> SvLecNoteCollection
		{
			get
			{
				if (_svLecNoteEdCourseId == null)
				{
				_svLecNoteEdCourseId = new TList<SvLecNote>();
				}
	
				return _svLecNoteEdCourseId;
			}
			set { _svLecNoteEdCourseId = value; }
		}
		
		#endregion

		#region EntPolicyGradingLevelCoursesCollection
		
		private TList<EntPolicyGradingLevelCourses> _entPolicyGradingLevelCoursesEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entPolicyGradingLevelCoursesEdCourseId
		/// </summary>
		
		public TList<EntPolicyGradingLevelCourses> EntPolicyGradingLevelCoursesCollection
		{
			get
			{
				if (_entPolicyGradingLevelCoursesEdCourseId == null)
				{
				_entPolicyGradingLevelCoursesEdCourseId = new TList<EntPolicyGradingLevelCourses>();
				}
	
				return _entPolicyGradingLevelCoursesEdCourseId;
			}
			set { _entPolicyGradingLevelCoursesEdCourseId = value; }
		}
		
		#endregion

		#region EdStaffCoursePrefCollection
		
		private TList<EdStaffCoursePref> _edStaffCoursePrefEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStaffCoursePrefEdCourseId
		/// </summary>
		
		public TList<EdStaffCoursePref> EdStaffCoursePrefCollection
		{
			get
			{
				if (_edStaffCoursePrefEdCourseId == null)
				{
				_edStaffCoursePrefEdCourseId = new TList<EdStaffCoursePref>();
				}
	
				return _edStaffCoursePrefEdCourseId;
			}
			set { _edStaffCoursePrefEdCourseId = value; }
		}
		
		#endregion

		#region ScGroupDayCollection
		
		private TList<ScGroupDay> _scGroupDayEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scGroupDayEdCourseId
		/// </summary>
		
		public TList<ScGroupDay> ScGroupDayCollection
		{
			get
			{
				if (_scGroupDayEdCourseId == null)
				{
				_scGroupDayEdCourseId = new TList<ScGroupDay>();
				}
	
				return _scGroupDayEdCourseId;
			}
			set { _scGroupDayEdCourseId = value; }
		}
		
		#endregion

		#region EntCourseMdDataCollection
		
		private TList<EntCourseMdData> _entCourseMdDataEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entCourseMdDataEdCourseId
		/// </summary>
		
		public TList<EntCourseMdData> EntCourseMdDataCollection
		{
			get
			{
				if (_entCourseMdDataEdCourseId == null)
				{
				_entCourseMdDataEdCourseId = new TList<EntCourseMdData>();
				}
	
				return _entCourseMdDataEdCourseId;
			}
			set { _entCourseMdDataEdCourseId = value; }
		}
		
		#endregion

		#region AdmCodeEngTestCollection
		
		private TList<AdmCodeEngTest> _admCodeEngTestEdCourseId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admCodeEngTestEdCourseId
		/// </summary>
		
		public TList<AdmCodeEngTest> AdmCodeEngTestCollection
		{
			get
			{
				if (_admCodeEngTestEdCourseId == null)
				{
				_admCodeEngTestEdCourseId = new TList<AdmCodeEngTest>();
				}
	
				return _admCodeEngTestEdCourseId;
			}
			set { _admCodeEngTestEdCourseId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			EdCourseEntityData _tmp = new EdCourseEntityData();
						
			_tmp.EdCourseId = this.EdCourseId;
			_tmp.OriginalEdCourseId = this.OriginalEdCourseId;
			
			_tmp.EdCodeCourseId = this.EdCodeCourseId;
			_tmp.CourseCode = this.CourseCode;
			_tmp.CourseDescrAr = this.CourseDescrAr;
			_tmp.CourseDescrEn = this.CourseDescrEn;
			_tmp.CreditHours = this.CreditHours;
			_tmp.CourseContentsAr = this.CourseContentsAr;
			_tmp.CourseContentsEn = this.CourseContentsEn;
			_tmp.EntMainId = this.EntMainId;
			_tmp.GsCodeLanguageId = this.GsCodeLanguageId;
			_tmp.AsFacultyInfoId = this.AsFacultyInfoId;
			_tmp.IsActive = this.IsActive;
			_tmp.PrereqCodeExp = this.PrereqCodeExp;
			_tmp.PrereqIdExp = this.PrereqIdExp;
			_tmp.ElectFlg = this.ElectFlg;
			_tmp.GsCourseElectTypeId = this.GsCourseElectTypeId;
			_tmp.EdCoursePrfxId = this.EdCoursePrfxId;
			_tmp.CrsNo = this.CrsNo;
			_tmp.PfFlg = this.PfFlg;
			_tmp.CrsLvl = this.CrsLvl;
			_tmp.OnlineFlg = this.OnlineFlg;
			_tmp.StopMessage = this.StopMessage;
			_tmp.AsCodeDegreeClassId = this.AsCodeDegreeClassId;
			_tmp.EdCourseExpHdrId = this.EdCourseExpHdrId;
			_tmp.LoadWithTrain = this.LoadWithTrain;
			_tmp.ExamFlg = this.ExamFlg;
			_tmp.FreeFlg = this.FreeFlg;
			_tmp.IncmpltFlg = this.IncmpltFlg;
			_tmp.DropFlg = this.DropFlg;
			_tmp.ExamHrs = this.ExamHrs;
			_tmp.CrsWgt = this.CrsWgt;
			_tmp.CourseDescrFr = this.CourseDescrFr;
			_tmp.Ects = this.Ects;
			_tmp.LoadCrsCount = this.LoadCrsCount;
			_tmp.ExtndFlg = this.ExtndFlg;
			_tmp.CourseMod = this.CourseMod;
			_tmp.EdCodeCourseTypeId = this.EdCodeCourseTypeId;
			
			#region Source Parent Composite Entities
			if (this.GsCodeLanguageIdSource != null)
				_tmp.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource) as GsCodeLanguage;
			if (this.AsCodeDegreeClassIdSource != null)
				_tmp.AsCodeDegreeClassIdSource = MakeCopyOf(this.AsCodeDegreeClassIdSource) as AsCodeDegreeClass;
			if (this.AsFacultyInfoIdSource != null)
				_tmp.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource) as AsFacultyInfo;
			if (this.EdCodeCourseIdSource != null)
				_tmp.EdCodeCourseIdSource = MakeCopyOf(this.EdCodeCourseIdSource) as EdCodeCourse;
			if (this.EdCodeCourseTypeIdSource != null)
				_tmp.EdCodeCourseTypeIdSource = MakeCopyOf(this.EdCodeCourseTypeIdSource) as EdCodeCourseType;
			if (this.EdCourseExpHdrIdSource != null)
				_tmp.EdCourseExpHdrIdSource = MakeCopyOf(this.EdCourseExpHdrIdSource) as EdCourseExpHdr;
			if (this.EdCoursePrfxIdSource != null)
				_tmp.EdCoursePrfxIdSource = MakeCopyOf(this.EdCoursePrfxIdSource) as EdCoursePrfx;
			if (this.EntMainIdSource != null)
				_tmp.EntMainIdSource = MakeCopyOf(this.EntMainIdSource) as EntityMain;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._edStudExmptCrsFromEdCourseId != null)
				_tmp.EdStudExmptCrsFromCollection = (TList<EdStudExmptCrsFrom>) MakeCopyOf(this.EdStudExmptCrsFromCollection); 
			if (this._wfCrsRsltApproveEdCourseId != null)
				_tmp.WfCrsRsltApproveCollection = (TList<WfCrsRsltApprove>) MakeCopyOf(this.WfCrsRsltApproveCollection); 
			if (this._edStudCourseRegEdCourseOrgIdGetByEdCourseOrgId != null)
				_tmp.EdStudCourseRegCollectionGetByEdCourseOrgId = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollectionGetByEdCourseOrgId); 
			if (this._edStudCourseRegPreEdCourseId != null)
				_tmp.EdStudCourseRegPreCollection = (TList<EdStudCourseRegPre>) MakeCopyOf(this.EdStudCourseRegPreCollection); 
			if (this._edCourseTchngEdCourseId != null)
				_tmp.EdCourseTchngCollection = (TList<EdCourseTchng>) MakeCopyOf(this.EdCourseTchngCollection); 
			if (this._edOfferingCourseEdCourseId != null)
				_tmp.EdOfferingCourseCollection = (TList<EdOfferingCourse>) MakeCopyOf(this.EdOfferingCourseCollection); 
			if (this._edCourseOrientEdCourseId != null)
				_tmp.EdCourseOrientCollection = (TList<EdCourseOrient>) MakeCopyOf(this.EdCourseOrientCollection); 
			if (this._edTrainStudEdCourseId != null)
				_tmp.EdTrainStudCollection = (TList<EdTrainStud>) MakeCopyOf(this.EdTrainStudCollection); 
			if (this._edCourseOutcomesTopicsEdCourseId != null)
				_tmp.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection); 
			if (this._edStudCourseWaitEdCourseId != null)
				_tmp.EdStudCourseWaitCollection = (TList<EdStudCourseWait>) MakeCopyOf(this.EdStudCourseWaitCollection); 
			if (this._edExamSchdlEdCourseId != null)
				_tmp.EdExamSchdlCollection = (TList<EdExamSchdl>) MakeCopyOf(this.EdExamSchdlCollection); 
			if (this._edCourseTopicEdCourseId != null)
				_tmp.EdCourseTopicCollection = (TList<EdCourseTopic>) MakeCopyOf(this.EdCourseTopicCollection); 
			if (this._entPolicyAssessCourseEdCourseId != null)
				_tmp.EntPolicyAssessCourseCollection = (TList<EntPolicyAssessCourse>) MakeCopyOf(this.EntPolicyAssessCourseCollection); 
			if (this._entPolicyGradingCourseEdCourseId != null)
				_tmp.EntPolicyGradingCourseCollection = (TList<EntPolicyGradingCourse>) MakeCopyOf(this.EntPolicyGradingCourseCollection); 
			if (this._edCourseBarredEdBarredCourseIdGetByEdBarredCourseId != null)
				_tmp.EdCourseBarredCollectionGetByEdBarredCourseId = (TList<EdCourseBarred>) MakeCopyOf(this.EdCourseBarredCollectionGetByEdBarredCourseId); 
			if (this._edCourseBarredEdBarredCourseIdGetByEdCourseId != null)
				_tmp.EdCourseBarredCollectionGetByEdCourseId = (TList<EdCourseBarred>) MakeCopyOf(this.EdCourseBarredCollectionGetByEdCourseId); 
			if (this._pgThesisGrantStudEdCourseId != null)
				_tmp.PgThesisGrantStudCollection = (TList<PgThesisGrantStud>) MakeCopyOf(this.PgThesisGrantStudCollection); 
			if (this._edStudLatenessEdCourseId != null)
				_tmp.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection); 
			if (this._entPolcyGrdngCourseEdCourseId != null)
				_tmp.EntPolcyGrdngCourseCollection = (TList<EntPolcyGrdngCourse>) MakeCopyOf(this.EntPolcyGrdngCourseCollection); 
			if (this._coContRmMemCourseEdCourseId != null)
				_tmp.CoContRmMemCourseCollection = (TList<CoContRmMemCourse>) MakeCopyOf(this.CoContRmMemCourseCollection); 
			if (this._svStudCourseEvalEdCourseId != null)
				_tmp.SvStudCourseEvalCollection = (TList<SvStudCourseEval>) MakeCopyOf(this.SvStudCourseEvalCollection); 
			if (this._edCourseEquivEdCourseIdGetByEdEquivCourseId != null)
				_tmp.EdCourseEquivCollectionGetByEdEquivCourseId = (TList<EdCourseEquiv>) MakeCopyOf(this.EdCourseEquivCollectionGetByEdEquivCourseId); 
			if (this._edCourseRltdEdCourse2IdGetByEdCourse1Id != null)
				_tmp.EdCourseRltdCollectionGetByEdCourse1Id = (TList<EdCourseRltd>) MakeCopyOf(this.EdCourseRltdCollectionGetByEdCourse1Id); 
			if (this._feeStudVoucherCrsItemEdCourseId != null)
				_tmp.FeeStudVoucherCrsItemCollection = (TList<FeeStudVoucherCrsItem>) MakeCopyOf(this.FeeStudVoucherCrsItemCollection); 
			if (this._svStudCompEdCourseId != null)
				_tmp.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection); 
			if (this._edCourseInfoEdCourseId != null)
				_tmp.EdCourseInfoCollection = (TList<EdCourseInfo>) MakeCopyOf(this.EdCourseInfoCollection); 
			if (this._edCrsFreeRstrctdEdCourseId != null)
				_tmp.EdCrsFreeRstrctdCollection = (TList<EdCrsFreeRstrctd>) MakeCopyOf(this.EdCrsFreeRstrctdCollection); 
			if (this._admPlaceExamCourseEdCourseId != null)
				_tmp.AdmPlaceExamCourseCollection = (TList<AdmPlaceExamCourse>) MakeCopyOf(this.AdmPlaceExamCourseCollection); 
			if (this._coCourseResultEdCourseId != null)
				_tmp.CoCourseResultCollection = (TList<CoCourseResult>) MakeCopyOf(this.CoCourseResultCollection); 
			if (this._feeStudCoursesItemEdCourseId != null)
				_tmp.FeeStudCoursesItemCollection = (TList<FeeStudCoursesItem>) MakeCopyOf(this.FeeStudCoursesItemCollection); 
			if (this._edStudCourseRegTempEdCourseId != null)
				_tmp.EdStudCourseRegTempCollection = (TList<EdStudCourseRegTemp>) MakeCopyOf(this.EdStudCourseRegTempCollection); 
			if (this._edStudCourseChngEdCourseSubIdGetByEdCourseId != null)
				_tmp.EdStudCourseChngCollectionGetByEdCourseId = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollectionGetByEdCourseId); 
			if (this._edStudCourseChngEdCourseSubIdGetByEdCourseSubId != null)
				_tmp.EdStudCourseChngCollectionGetByEdCourseSubId = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollectionGetByEdCourseSubId); 
			if (this._pgThesisStudEdCourseId != null)
				_tmp.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection); 
			if (this._edStudExmptCrsToEdCourseId != null)
				_tmp.EdStudExmptCrsToCollection = (TList<EdStudExmptCrsTo>) MakeCopyOf(this.EdStudExmptCrsToCollection); 
			if (this._edStudIntTrnsCourseFromEdCourseId != null)
				_tmp.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection); 
			if (this._coCrsRsltRaiseEdCourseId != null)
				_tmp.CoCrsRsltRaiseCollection = (TList<CoCrsRsltRaise>) MakeCopyOf(this.CoCrsRsltRaiseCollection); 
			if (this._entMajorPhaseCrsExpEdCourseId != null)
				_tmp.EntMajorPhaseCrsExpCollection = (TList<EntMajorPhaseCrsExp>) MakeCopyOf(this.EntMajorPhaseCrsExpCollection); 
			if (this._edOutcomeEdCourseId != null)
				_tmp.EdOutcomeCollection = (TList<EdOutcome>) MakeCopyOf(this.EdOutcomeCollection); 
			if (this._edExamCrsOrderEdCourseId != null)
				_tmp.EdExamCrsOrderCollection = (TList<EdExamCrsOrder>) MakeCopyOf(this.EdExamCrsOrderCollection); 
			if (this._edBranchCrsEdCourseId != null)
				_tmp.EdBranchCrsCollection = (TList<EdBranchCrs>) MakeCopyOf(this.EdBranchCrsCollection); 
			if (this._scSectionGroupHdrEdCourseId != null)
				_tmp.ScSectionGroupHdrCollection = (TList<ScSectionGroupHdr>) MakeCopyOf(this.ScSectionGroupHdrCollection); 
			if (this._edProjStudEdCourseId != null)
				_tmp.EdProjStudCollection = (TList<EdProjStud>) MakeCopyOf(this.EdProjStudCollection); 
			if (this._svCourseEvalEdCourseId != null)
				_tmp.SvCourseEvalCollection = (TList<SvCourseEval>) MakeCopyOf(this.SvCourseEvalCollection); 
			if (this._edStudCourseRplcEdCourseNewIdGetByEdCourseOldId != null)
				_tmp.EdStudCourseRplcCollectionGetByEdCourseOldId = (TList<EdStudCourseRplc>) MakeCopyOf(this.EdStudCourseRplcCollectionGetByEdCourseOldId); 
			if (this._edStudCourseRegEdCourseOrgIdGetByEdCourseId != null)
				_tmp.EdStudCourseRegCollectionGetByEdCourseId = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollectionGetByEdCourseId); 
			if (this._scHallRsrvEdCourseId != null)
				_tmp.ScHallRsrvCollection = (TList<ScHallRsrv>) MakeCopyOf(this.ScHallRsrvCollection); 
			if (this._edCourseRltdEdCourse2IdGetByEdCourse2Id != null)
				_tmp.EdCourseRltdCollectionGetByEdCourse2Id = (TList<EdCourseRltd>) MakeCopyOf(this.EdCourseRltdCollectionGetByEdCourse2Id); 
			if (this._edStudAbsenceEdCourseId != null)
				_tmp.EdStudAbsenceCollection = (TList<EdStudAbsence>) MakeCopyOf(this.EdStudAbsenceCollection); 
			if (this._edStudAbsFwEdCourseId != null)
				_tmp.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection); 
			if (this._entCoursePkgDtlEdCourseId != null)
				_tmp.EntCoursePkgDtlCollection = (TList<EntCoursePkgDtl>) MakeCopyOf(this.EntCoursePkgDtlCollection); 
			if (this._edStudCourseRplcEdCourseNewIdGetByEdCourseNewId != null)
				_tmp.EdStudCourseRplcCollectionGetByEdCourseNewId = (TList<EdStudCourseRplc>) MakeCopyOf(this.EdStudCourseRplcCollectionGetByEdCourseNewId); 
			if (this._edCourseEquivEdCourseIdGetByEdCourseId != null)
				_tmp.EdCourseEquivCollectionGetByEdCourseId = (TList<EdCourseEquiv>) MakeCopyOf(this.EdCourseEquivCollectionGetByEdCourseId); 
			if (this._scSchdlSlotEdCourseId != null)
				_tmp.ScSchdlSlotCollection = (TList<ScSchdlSlot>) MakeCopyOf(this.ScSchdlSlotCollection); 
			if (this._edStudExcuseCourseEdCourseId != null)
				_tmp.EdStudExcuseCourseCollection = (TList<EdStudExcuseCourse>) MakeCopyOf(this.EdStudExcuseCourseCollection); 
			if (this._svPollHdrEdCourseId != null)
				_tmp.SvPollHdrCollection = (TList<SvPollHdr>) MakeCopyOf(this.SvPollHdrCollection); 
			if (this._admAppPlaceExamCourseEdCourseId != null)
				_tmp.AdmAppPlaceExamCourseCollection = (TList<AdmAppPlaceExamCourse>) MakeCopyOf(this.AdmAppPlaceExamCourseCollection); 
			if (this._seUserCrsAssessEdCourseId != null)
				_tmp.SeUserCrsAssessCollection = (TList<SeUserCrsAssess>) MakeCopyOf(this.SeUserCrsAssessCollection); 
			if (this._edStudIntTrnsCourseToEdCourseId != null)
				_tmp.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection); 
			if (this._edCourseExpDtlEdCourseId != null)
				_tmp.EdCourseExpDtlCollection = (TList<EdCourseExpDtl>) MakeCopyOf(this.EdCourseExpDtlCollection); 
			if (this._scSectionGroupDtlEdCourseId != null)
				_tmp.ScSectionGroupDtlCollection = (TList<ScSectionGroupDtl>) MakeCopyOf(this.ScSectionGroupDtlCollection); 
			if (this._coStudSecretNumEdCourseId != null)
				_tmp.CoStudSecretNumCollection = (TList<CoStudSecretNum>) MakeCopyOf(this.CoStudSecretNumCollection); 
			if (this._edAcadPlanDtlEdCourseId != null)
				_tmp.EdAcadPlanDtlCollection = (TList<EdAcadPlanDtl>) MakeCopyOf(this.EdAcadPlanDtlCollection); 
			if (this._admAppTransToCourseEdCourseId != null)
				_tmp.AdmAppTransToCourseCollection = (TList<AdmAppTransToCourse>) MakeCopyOf(this.AdmAppTransToCourseCollection); 
			if (this._edCourseCoreqEdCourseId != null)
				_tmp.EdCourseCoreqCollection = (TList<EdCourseCoreq>) MakeCopyOf(this.EdCourseCoreqCollection); 
			if (this._admAppExmptCourseEdCourseId != null)
				_tmp.AdmAppExmptCourseCollection = (TList<AdmAppExmptCourse>) MakeCopyOf(this.AdmAppExmptCourseCollection); 
			if (this._feeCourseExpEdCourseId != null)
				_tmp.FeeCourseExpCollection = (TList<FeeCourseExp>) MakeCopyOf(this.FeeCourseExpCollection); 
			if (this._seBlockTransEdCourseId != null)
				_tmp.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection); 
			if (this._scGroupInfoEdCourseId != null)
				_tmp.ScGroupInfoCollection = (TList<ScGroupInfo>) MakeCopyOf(this.ScGroupInfoCollection); 
			if (this._svLecNoteEdCourseId != null)
				_tmp.SvLecNoteCollection = (TList<SvLecNote>) MakeCopyOf(this.SvLecNoteCollection); 
			if (this._entPolicyGradingLevelCoursesEdCourseId != null)
				_tmp.EntPolicyGradingLevelCoursesCollection = (TList<EntPolicyGradingLevelCourses>) MakeCopyOf(this.EntPolicyGradingLevelCoursesCollection); 
			if (this._edStaffCoursePrefEdCourseId != null)
				_tmp.EdStaffCoursePrefCollection = (TList<EdStaffCoursePref>) MakeCopyOf(this.EdStaffCoursePrefCollection); 
			if (this._scGroupDayEdCourseId != null)
				_tmp.ScGroupDayCollection = (TList<ScGroupDay>) MakeCopyOf(this.ScGroupDayCollection); 
			if (this._entCourseMdDataEdCourseId != null)
				_tmp.EntCourseMdDataCollection = (TList<EntCourseMdData>) MakeCopyOf(this.EntCourseMdDataCollection); 
			if (this._admCodeEngTestEdCourseId != null)
				_tmp.AdmCodeEngTestCollection = (TList<AdmCodeEngTest>) MakeCopyOf(this.AdmCodeEngTestCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			EdCourseEntityData _tmp = new EdCourseEntityData();
						
			_tmp.EdCourseId = this.EdCourseId;
			_tmp.OriginalEdCourseId = this.OriginalEdCourseId;
			
			_tmp.EdCodeCourseId = this.EdCodeCourseId;
			_tmp.CourseCode = this.CourseCode;
			_tmp.CourseDescrAr = this.CourseDescrAr;
			_tmp.CourseDescrEn = this.CourseDescrEn;
			_tmp.CreditHours = this.CreditHours;
			_tmp.CourseContentsAr = this.CourseContentsAr;
			_tmp.CourseContentsEn = this.CourseContentsEn;
			_tmp.EntMainId = this.EntMainId;
			_tmp.GsCodeLanguageId = this.GsCodeLanguageId;
			_tmp.AsFacultyInfoId = this.AsFacultyInfoId;
			_tmp.IsActive = this.IsActive;
			_tmp.PrereqCodeExp = this.PrereqCodeExp;
			_tmp.PrereqIdExp = this.PrereqIdExp;
			_tmp.ElectFlg = this.ElectFlg;
			_tmp.GsCourseElectTypeId = this.GsCourseElectTypeId;
			_tmp.EdCoursePrfxId = this.EdCoursePrfxId;
			_tmp.CrsNo = this.CrsNo;
			_tmp.PfFlg = this.PfFlg;
			_tmp.CrsLvl = this.CrsLvl;
			_tmp.OnlineFlg = this.OnlineFlg;
			_tmp.StopMessage = this.StopMessage;
			_tmp.AsCodeDegreeClassId = this.AsCodeDegreeClassId;
			_tmp.EdCourseExpHdrId = this.EdCourseExpHdrId;
			_tmp.LoadWithTrain = this.LoadWithTrain;
			_tmp.ExamFlg = this.ExamFlg;
			_tmp.FreeFlg = this.FreeFlg;
			_tmp.IncmpltFlg = this.IncmpltFlg;
			_tmp.DropFlg = this.DropFlg;
			_tmp.ExamHrs = this.ExamHrs;
			_tmp.CrsWgt = this.CrsWgt;
			_tmp.CourseDescrFr = this.CourseDescrFr;
			_tmp.Ects = this.Ects;
			_tmp.LoadCrsCount = this.LoadCrsCount;
			_tmp.ExtndFlg = this.ExtndFlg;
			_tmp.CourseMod = this.CourseMod;
			_tmp.EdCodeCourseTypeId = this.EdCodeCourseTypeId;
			
			#region Source Parent Composite Entities
			if (this.GsCodeLanguageIdSource != null && existingCopies.Contains(this.GsCodeLanguageIdSource))
				_tmp.GsCodeLanguageIdSource = existingCopies[this.GsCodeLanguageIdSource] as GsCodeLanguage;
			else
				_tmp.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource, existingCopies) as GsCodeLanguage;
			if (this.AsCodeDegreeClassIdSource != null && existingCopies.Contains(this.AsCodeDegreeClassIdSource))
				_tmp.AsCodeDegreeClassIdSource = existingCopies[this.AsCodeDegreeClassIdSource] as AsCodeDegreeClass;
			else
				_tmp.AsCodeDegreeClassIdSource = MakeCopyOf(this.AsCodeDegreeClassIdSource, existingCopies) as AsCodeDegreeClass;
			if (this.AsFacultyInfoIdSource != null && existingCopies.Contains(this.AsFacultyInfoIdSource))
				_tmp.AsFacultyInfoIdSource = existingCopies[this.AsFacultyInfoIdSource] as AsFacultyInfo;
			else
				_tmp.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource, existingCopies) as AsFacultyInfo;
			if (this.EdCodeCourseIdSource != null && existingCopies.Contains(this.EdCodeCourseIdSource))
				_tmp.EdCodeCourseIdSource = existingCopies[this.EdCodeCourseIdSource] as EdCodeCourse;
			else
				_tmp.EdCodeCourseIdSource = MakeCopyOf(this.EdCodeCourseIdSource, existingCopies) as EdCodeCourse;
			if (this.EdCodeCourseTypeIdSource != null && existingCopies.Contains(this.EdCodeCourseTypeIdSource))
				_tmp.EdCodeCourseTypeIdSource = existingCopies[this.EdCodeCourseTypeIdSource] as EdCodeCourseType;
			else
				_tmp.EdCodeCourseTypeIdSource = MakeCopyOf(this.EdCodeCourseTypeIdSource, existingCopies) as EdCodeCourseType;
			if (this.EdCourseExpHdrIdSource != null && existingCopies.Contains(this.EdCourseExpHdrIdSource))
				_tmp.EdCourseExpHdrIdSource = existingCopies[this.EdCourseExpHdrIdSource] as EdCourseExpHdr;
			else
				_tmp.EdCourseExpHdrIdSource = MakeCopyOf(this.EdCourseExpHdrIdSource, existingCopies) as EdCourseExpHdr;
			if (this.EdCoursePrfxIdSource != null && existingCopies.Contains(this.EdCoursePrfxIdSource))
				_tmp.EdCoursePrfxIdSource = existingCopies[this.EdCoursePrfxIdSource] as EdCoursePrfx;
			else
				_tmp.EdCoursePrfxIdSource = MakeCopyOf(this.EdCoursePrfxIdSource, existingCopies) as EdCoursePrfx;
			if (this.EntMainIdSource != null && existingCopies.Contains(this.EntMainIdSource))
				_tmp.EntMainIdSource = existingCopies[this.EntMainIdSource] as EntityMain;
			else
				_tmp.EntMainIdSource = MakeCopyOf(this.EntMainIdSource, existingCopies) as EntityMain;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.EdStudExmptCrsFromCollection = (TList<EdStudExmptCrsFrom>) MakeCopyOf(this.EdStudExmptCrsFromCollection, existingCopies); 
			_tmp.WfCrsRsltApproveCollection = (TList<WfCrsRsltApprove>) MakeCopyOf(this.WfCrsRsltApproveCollection, existingCopies); 
			_tmp.EdStudCourseRegCollectionGetByEdCourseOrgId = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollectionGetByEdCourseOrgId, existingCopies); 
			_tmp.EdStudCourseRegPreCollection = (TList<EdStudCourseRegPre>) MakeCopyOf(this.EdStudCourseRegPreCollection, existingCopies); 
			_tmp.EdCourseTchngCollection = (TList<EdCourseTchng>) MakeCopyOf(this.EdCourseTchngCollection, existingCopies); 
			_tmp.EdOfferingCourseCollection = (TList<EdOfferingCourse>) MakeCopyOf(this.EdOfferingCourseCollection, existingCopies); 
			_tmp.EdCourseOrientCollection = (TList<EdCourseOrient>) MakeCopyOf(this.EdCourseOrientCollection, existingCopies); 
			_tmp.EdTrainStudCollection = (TList<EdTrainStud>) MakeCopyOf(this.EdTrainStudCollection, existingCopies); 
			_tmp.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection, existingCopies); 
			_tmp.EdStudCourseWaitCollection = (TList<EdStudCourseWait>) MakeCopyOf(this.EdStudCourseWaitCollection, existingCopies); 
			_tmp.EdExamSchdlCollection = (TList<EdExamSchdl>) MakeCopyOf(this.EdExamSchdlCollection, existingCopies); 
			_tmp.EdCourseTopicCollection = (TList<EdCourseTopic>) MakeCopyOf(this.EdCourseTopicCollection, existingCopies); 
			_tmp.EntPolicyAssessCourseCollection = (TList<EntPolicyAssessCourse>) MakeCopyOf(this.EntPolicyAssessCourseCollection, existingCopies); 
			_tmp.EntPolicyGradingCourseCollection = (TList<EntPolicyGradingCourse>) MakeCopyOf(this.EntPolicyGradingCourseCollection, existingCopies); 
			_tmp.EdCourseBarredCollectionGetByEdBarredCourseId = (TList<EdCourseBarred>) MakeCopyOf(this.EdCourseBarredCollectionGetByEdBarredCourseId, existingCopies); 
			_tmp.EdCourseBarredCollectionGetByEdCourseId = (TList<EdCourseBarred>) MakeCopyOf(this.EdCourseBarredCollectionGetByEdCourseId, existingCopies); 
			_tmp.PgThesisGrantStudCollection = (TList<PgThesisGrantStud>) MakeCopyOf(this.PgThesisGrantStudCollection, existingCopies); 
			_tmp.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection, existingCopies); 
			_tmp.EntPolcyGrdngCourseCollection = (TList<EntPolcyGrdngCourse>) MakeCopyOf(this.EntPolcyGrdngCourseCollection, existingCopies); 
			_tmp.CoContRmMemCourseCollection = (TList<CoContRmMemCourse>) MakeCopyOf(this.CoContRmMemCourseCollection, existingCopies); 
			_tmp.SvStudCourseEvalCollection = (TList<SvStudCourseEval>) MakeCopyOf(this.SvStudCourseEvalCollection, existingCopies); 
			_tmp.EdCourseEquivCollectionGetByEdEquivCourseId = (TList<EdCourseEquiv>) MakeCopyOf(this.EdCourseEquivCollectionGetByEdEquivCourseId, existingCopies); 
			_tmp.EdCourseRltdCollectionGetByEdCourse1Id = (TList<EdCourseRltd>) MakeCopyOf(this.EdCourseRltdCollectionGetByEdCourse1Id, existingCopies); 
			_tmp.FeeStudVoucherCrsItemCollection = (TList<FeeStudVoucherCrsItem>) MakeCopyOf(this.FeeStudVoucherCrsItemCollection, existingCopies); 
			_tmp.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection, existingCopies); 
			_tmp.EdCourseInfoCollection = (TList<EdCourseInfo>) MakeCopyOf(this.EdCourseInfoCollection, existingCopies); 
			_tmp.EdCrsFreeRstrctdCollection = (TList<EdCrsFreeRstrctd>) MakeCopyOf(this.EdCrsFreeRstrctdCollection, existingCopies); 
			_tmp.AdmPlaceExamCourseCollection = (TList<AdmPlaceExamCourse>) MakeCopyOf(this.AdmPlaceExamCourseCollection, existingCopies); 
			_tmp.CoCourseResultCollection = (TList<CoCourseResult>) MakeCopyOf(this.CoCourseResultCollection, existingCopies); 
			_tmp.FeeStudCoursesItemCollection = (TList<FeeStudCoursesItem>) MakeCopyOf(this.FeeStudCoursesItemCollection, existingCopies); 
			_tmp.EdStudCourseRegTempCollection = (TList<EdStudCourseRegTemp>) MakeCopyOf(this.EdStudCourseRegTempCollection, existingCopies); 
			_tmp.EdStudCourseChngCollectionGetByEdCourseId = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollectionGetByEdCourseId, existingCopies); 
			_tmp.EdStudCourseChngCollectionGetByEdCourseSubId = (TList<EdStudCourseChng>) MakeCopyOf(this.EdStudCourseChngCollectionGetByEdCourseSubId, existingCopies); 
			_tmp.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection, existingCopies); 
			_tmp.EdStudExmptCrsToCollection = (TList<EdStudExmptCrsTo>) MakeCopyOf(this.EdStudExmptCrsToCollection, existingCopies); 
			_tmp.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection, existingCopies); 
			_tmp.CoCrsRsltRaiseCollection = (TList<CoCrsRsltRaise>) MakeCopyOf(this.CoCrsRsltRaiseCollection, existingCopies); 
			_tmp.EntMajorPhaseCrsExpCollection = (TList<EntMajorPhaseCrsExp>) MakeCopyOf(this.EntMajorPhaseCrsExpCollection, existingCopies); 
			_tmp.EdOutcomeCollection = (TList<EdOutcome>) MakeCopyOf(this.EdOutcomeCollection, existingCopies); 
			_tmp.EdExamCrsOrderCollection = (TList<EdExamCrsOrder>) MakeCopyOf(this.EdExamCrsOrderCollection, existingCopies); 
			_tmp.EdBranchCrsCollection = (TList<EdBranchCrs>) MakeCopyOf(this.EdBranchCrsCollection, existingCopies); 
			_tmp.ScSectionGroupHdrCollection = (TList<ScSectionGroupHdr>) MakeCopyOf(this.ScSectionGroupHdrCollection, existingCopies); 
			_tmp.EdProjStudCollection = (TList<EdProjStud>) MakeCopyOf(this.EdProjStudCollection, existingCopies); 
			_tmp.SvCourseEvalCollection = (TList<SvCourseEval>) MakeCopyOf(this.SvCourseEvalCollection, existingCopies); 
			_tmp.EdStudCourseRplcCollectionGetByEdCourseOldId = (TList<EdStudCourseRplc>) MakeCopyOf(this.EdStudCourseRplcCollectionGetByEdCourseOldId, existingCopies); 
			_tmp.EdStudCourseRegCollectionGetByEdCourseId = (TList<EdStudCourseReg>) MakeCopyOf(this.EdStudCourseRegCollectionGetByEdCourseId, existingCopies); 
			_tmp.ScHallRsrvCollection = (TList<ScHallRsrv>) MakeCopyOf(this.ScHallRsrvCollection, existingCopies); 
			_tmp.EdCourseRltdCollectionGetByEdCourse2Id = (TList<EdCourseRltd>) MakeCopyOf(this.EdCourseRltdCollectionGetByEdCourse2Id, existingCopies); 
			_tmp.EdStudAbsenceCollection = (TList<EdStudAbsence>) MakeCopyOf(this.EdStudAbsenceCollection, existingCopies); 
			_tmp.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection, existingCopies); 
			_tmp.EntCoursePkgDtlCollection = (TList<EntCoursePkgDtl>) MakeCopyOf(this.EntCoursePkgDtlCollection, existingCopies); 
			_tmp.EdStudCourseRplcCollectionGetByEdCourseNewId = (TList<EdStudCourseRplc>) MakeCopyOf(this.EdStudCourseRplcCollectionGetByEdCourseNewId, existingCopies); 
			_tmp.EdCourseEquivCollectionGetByEdCourseId = (TList<EdCourseEquiv>) MakeCopyOf(this.EdCourseEquivCollectionGetByEdCourseId, existingCopies); 
			_tmp.ScSchdlSlotCollection = (TList<ScSchdlSlot>) MakeCopyOf(this.ScSchdlSlotCollection, existingCopies); 
			_tmp.EdStudExcuseCourseCollection = (TList<EdStudExcuseCourse>) MakeCopyOf(this.EdStudExcuseCourseCollection, existingCopies); 
			_tmp.SvPollHdrCollection = (TList<SvPollHdr>) MakeCopyOf(this.SvPollHdrCollection, existingCopies); 
			_tmp.AdmAppPlaceExamCourseCollection = (TList<AdmAppPlaceExamCourse>) MakeCopyOf(this.AdmAppPlaceExamCourseCollection, existingCopies); 
			_tmp.SeUserCrsAssessCollection = (TList<SeUserCrsAssess>) MakeCopyOf(this.SeUserCrsAssessCollection, existingCopies); 
			_tmp.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection, existingCopies); 
			_tmp.EdCourseExpDtlCollection = (TList<EdCourseExpDtl>) MakeCopyOf(this.EdCourseExpDtlCollection, existingCopies); 
			_tmp.ScSectionGroupDtlCollection = (TList<ScSectionGroupDtl>) MakeCopyOf(this.ScSectionGroupDtlCollection, existingCopies); 
			_tmp.CoStudSecretNumCollection = (TList<CoStudSecretNum>) MakeCopyOf(this.CoStudSecretNumCollection, existingCopies); 
			_tmp.EdAcadPlanDtlCollection = (TList<EdAcadPlanDtl>) MakeCopyOf(this.EdAcadPlanDtlCollection, existingCopies); 
			_tmp.AdmAppTransToCourseCollection = (TList<AdmAppTransToCourse>) MakeCopyOf(this.AdmAppTransToCourseCollection, existingCopies); 
			_tmp.EdCourseCoreqCollection = (TList<EdCourseCoreq>) MakeCopyOf(this.EdCourseCoreqCollection, existingCopies); 
			_tmp.AdmAppExmptCourseCollection = (TList<AdmAppExmptCourse>) MakeCopyOf(this.AdmAppExmptCourseCollection, existingCopies); 
			_tmp.FeeCourseExpCollection = (TList<FeeCourseExp>) MakeCopyOf(this.FeeCourseExpCollection, existingCopies); 
			_tmp.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection, existingCopies); 
			_tmp.ScGroupInfoCollection = (TList<ScGroupInfo>) MakeCopyOf(this.ScGroupInfoCollection, existingCopies); 
			_tmp.SvLecNoteCollection = (TList<SvLecNote>) MakeCopyOf(this.SvLecNoteCollection, existingCopies); 
			_tmp.EntPolicyGradingLevelCoursesCollection = (TList<EntPolicyGradingLevelCourses>) MakeCopyOf(this.EntPolicyGradingLevelCoursesCollection, existingCopies); 
			_tmp.EdStaffCoursePrefCollection = (TList<EdStaffCoursePref>) MakeCopyOf(this.EdStaffCoursePrefCollection, existingCopies); 
			_tmp.ScGroupDayCollection = (TList<ScGroupDay>) MakeCopyOf(this.ScGroupDayCollection, existingCopies); 
			_tmp.EntCourseMdDataCollection = (TList<EntCourseMdData>) MakeCopyOf(this.EntCourseMdDataCollection, existingCopies); 
			_tmp.AdmCodeEngTestCollection = (TList<AdmCodeEngTest>) MakeCopyOf(this.AdmCodeEngTestCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdCourseColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(EdCourseColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdCourseColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(EdCourseColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdCourseColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(EdCourseColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				EdCourseEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new EdCourseEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdCourseColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(EdCourseColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				EdCourseEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new EdCourseEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region EdCourseEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="EdCourse"/> object.
	/// </remarks>
	public class EdCourseEventArgs : System.EventArgs
	{
		private EdCourseColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the EdCourseEventArgs class.
		///</summary>
		public EdCourseEventArgs(EdCourseColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the EdCourseEventArgs class.
		///</summary>
		public EdCourseEventArgs(EdCourseColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The EdCourseColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="EdCourseColumn" />
		public EdCourseColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all EdCourse related events.
	///</summary>
	public delegate void EdCourseEventHandler(object sender, EdCourseEventArgs e);
	
	#region EdCourseComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class EdCourseComparer : System.Collections.Generic.IComparer<EdCourse>
	{
		EdCourseColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:EdCourseComparer"/> class.
        /// </summary>
		public EdCourseComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:EdCourseComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public EdCourseComparer(EdCourseColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="EdCourse"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="EdCourse"/> to compare.</param>
        /// <param name="b">The second <c>EdCourse</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(EdCourse a, EdCourse b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(EdCourse entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(EdCourse a, EdCourse b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public EdCourseColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region EdCourseKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="EdCourse"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class EdCourseKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the EdCourseKey class.
		/// </summary>
		public EdCourseKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the EdCourseKey class.
		/// </summary>
		public EdCourseKey(EdCourseBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.EdCourseId = entity.EdCourseId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the EdCourseKey class.
		/// </summary>
		public EdCourseKey(System.Decimal _edCourseId)
		{
			#region Init Properties

			this.EdCourseId = _edCourseId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private EdCourseBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public EdCourseBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the EdCourseId property
		private System.Decimal _edCourseId;
		
		/// <summary>
		/// Gets or sets the EdCourseId property.
		/// </summary>
		public System.Decimal EdCourseId
		{
			get { return _edCourseId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.EdCourseId = value;
				
				_edCourseId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				EdCourseId = ( values["EdCourseId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["EdCourseId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("EdCourseId", EdCourseId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("EdCourseId: {0}{1}",
								EdCourseId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region EdCourseColumn Enum
	
	/// <summary>
	/// Enumerate the EdCourse columns.
	/// </summary>
	[Serializable]
	public enum EdCourseColumn : int
	{
		/// <summary>
		/// EdCourseId : 
		/// </summary>
		[EnumTextValue("ED_COURSE_ID")]
		[ColumnEnum("ED_COURSE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		EdCourseId = 1,
		/// <summary>
		/// EdCodeCourseId : 
		/// </summary>
		[EnumTextValue("ED_CODE_COURSE_ID")]
		[ColumnEnum("ED_CODE_COURSE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeCourseId = 2,
		/// <summary>
		/// CourseCode : 
		/// </summary>
		[EnumTextValue("COURSE_CODE")]
		[ColumnEnum("COURSE_CODE", typeof(System.String), System.Data.DbType.String, false, false, false, 50)]
		CourseCode = 3,
		/// <summary>
		/// CourseDescrAr : 
		/// </summary>
		[EnumTextValue("COURSE_DESCR_AR")]
		[ColumnEnum("COURSE_DESCR_AR", typeof(System.String), System.Data.DbType.String, false, false, false, 150)]
		CourseDescrAr = 4,
		/// <summary>
		/// CourseDescrEn : 
		/// </summary>
		[EnumTextValue("COURSE_DESCR_EN")]
		[ColumnEnum("COURSE_DESCR_EN", typeof(System.String), System.Data.DbType.String, false, false, false, 150)]
		CourseDescrEn = 5,
		/// <summary>
		/// CreditHours : 
		/// </summary>
		[EnumTextValue("CREDIT_HOURS")]
		[ColumnEnum("CREDIT_HOURS", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		CreditHours = 6,
		/// <summary>
		/// CourseContentsAr : 
		/// </summary>
		[EnumTextValue("COURSE_CONTENTS_AR")]
		[ColumnEnum("COURSE_CONTENTS_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 4000)]
		CourseContentsAr = 7,
		/// <summary>
		/// CourseContentsEn : 
		/// </summary>
		[EnumTextValue("COURSE_CONTENTS_EN")]
		[ColumnEnum("COURSE_CONTENTS_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 4000)]
		CourseContentsEn = 8,
		/// <summary>
		/// EntMainId : 
		/// </summary>
		[EnumTextValue("ENT_MAIN_ID")]
		[ColumnEnum("ENT_MAIN_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EntMainId = 9,
		/// <summary>
		/// GsCodeLanguageId : 
		/// </summary>
		[EnumTextValue("GS_CODE_LANGUAGE_ID")]
		[ColumnEnum("GS_CODE_LANGUAGE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		GsCodeLanguageId = 10,
		/// <summary>
		/// AsFacultyInfoId : 
		/// </summary>
		[EnumTextValue("AS_FACULTY_INFO_ID")]
		[ColumnEnum("AS_FACULTY_INFO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AsFacultyInfoId = 11,
		/// <summary>
		/// IsActive : 
		/// </summary>
		[EnumTextValue("IS_ACTIVE")]
		[ColumnEnum("IS_ACTIVE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		IsActive = 12,
		/// <summary>
		/// PrereqCodeExp : 
		/// </summary>
		[EnumTextValue("PREREQ_CODE_EXP")]
		[ColumnEnum("PREREQ_CODE_EXP", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		PrereqCodeExp = 13,
		/// <summary>
		/// PrereqIdExp : 
		/// </summary>
		[EnumTextValue("PREREQ_ID_EXP")]
		[ColumnEnum("PREREQ_ID_EXP", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		PrereqIdExp = 14,
		/// <summary>
		/// ElectFlg : 
		/// </summary>
		[EnumTextValue("ELECT_FLG")]
		[ColumnEnum("ELECT_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ElectFlg = 15,
		/// <summary>
		/// GsCourseElectTypeId : XXX
		/// </summary>
		[EnumTextValue("GS_COURSE_ELECT_TYPE_ID")]
		[ColumnEnum("GS_COURSE_ELECT_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCourseElectTypeId = 16,
		/// <summary>
		/// EdCoursePrfxId : 
		/// </summary>
		[EnumTextValue("ED_COURSE_PRFX_ID")]
		[ColumnEnum("ED_COURSE_PRFX_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCoursePrfxId = 17,
		/// <summary>
		/// CrsNo : 
		/// </summary>
		[EnumTextValue("CRS_NO")]
		[ColumnEnum("CRS_NO", typeof(System.String), System.Data.DbType.String, false, false, true, 40)]
		CrsNo = 18,
		/// <summary>
		/// PfFlg : 
		/// </summary>
		[EnumTextValue("PF_FLG")]
		[ColumnEnum("PF_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PfFlg = 19,
		/// <summary>
		/// CrsLvl : 
		/// </summary>
		[EnumTextValue("CRS_LVL")]
		[ColumnEnum("CRS_LVL", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CrsLvl = 20,
		/// <summary>
		/// OnlineFlg : 
		/// </summary>
		[EnumTextValue("ONLINE_FLG")]
		[ColumnEnum("ONLINE_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		OnlineFlg = 21,
		/// <summary>
		/// StopMessage : 
		/// </summary>
		[EnumTextValue("STOP_MESSAGE")]
		[ColumnEnum("STOP_MESSAGE", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		StopMessage = 22,
		/// <summary>
		/// AsCodeDegreeClassId : 
		/// </summary>
		[EnumTextValue("AS_CODE_DEGREE_CLASS_ID")]
		[ColumnEnum("AS_CODE_DEGREE_CLASS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AsCodeDegreeClassId = 23,
		/// <summary>
		/// EdCourseExpHdrId : 
		/// </summary>
		[EnumTextValue("ED_COURSE_EXP_HDR_ID")]
		[ColumnEnum("ED_COURSE_EXP_HDR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCourseExpHdrId = 24,
		/// <summary>
		/// LoadWithTrain : 
		/// </summary>
		[EnumTextValue("LOAD_WITH_TRAIN")]
		[ColumnEnum("LOAD_WITH_TRAIN", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		LoadWithTrain = 25,
		/// <summary>
		/// ExamFlg : 
		/// </summary>
		[EnumTextValue("EXAM_FLG")]
		[ColumnEnum("EXAM_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ExamFlg = 26,
		/// <summary>
		/// FreeFlg : 
		/// </summary>
		[EnumTextValue("FREE_FLG")]
		[ColumnEnum("FREE_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FreeFlg = 27,
		/// <summary>
		/// IncmpltFlg : XXXXcurrently not used
		/// </summary>
		[EnumTextValue("INCMPLT_FLG")]
		[ColumnEnum("INCMPLT_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		IncmpltFlg = 28,
		/// <summary>
		/// DropFlg : 
		/// </summary>
		[EnumTextValue("DROP_FLG")]
		[ColumnEnum("DROP_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DropFlg = 29,
		/// <summary>
		/// ExamHrs : ساعات الامتحان
		/// </summary>
		[EnumTextValue("EXAM_HRS")]
		[ColumnEnum("EXAM_HRS", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ExamHrs = 30,
		/// <summary>
		/// CrsWgt : XXXCoefficient
		/// </summary>
		[EnumTextValue("CRS_WGT")]
		[ColumnEnum("CRS_WGT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CrsWgt = 31,
		/// <summary>
		/// CourseDescrFr : XXX
		/// </summary>
		[EnumTextValue("COURSE_DESCR_FR")]
		[ColumnEnum("COURSE_DESCR_FR", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		CourseDescrFr = 32,
		/// <summary>
		/// Ects : 
		/// </summary>
		[EnumTextValue("ECTS")]
		[ColumnEnum("ECTS", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		Ects = 33,
		/// <summary>
		/// LoadCrsCount : 
		/// </summary>
		[EnumTextValue("LOAD_CRS_COUNT")]
		[ColumnEnum("LOAD_CRS_COUNT", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		LoadCrsCount = 34,
		/// <summary>
		/// ExtndFlg : Thesis,TrainCourse on multiple semesters
		/// 		/// مقرر ممتد على فصلين اول وتانىmodular
		/// </summary>
		[EnumTextValue("EXTND_FLG")]
		[ColumnEnum("EXTND_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		ExtndFlg = 35,
		/// <summary>
		/// CourseMod : معرف جديد للمقرر بخلاف الكود يستخدم فى كلية الطيران CAT
		/// </summary>
		[EnumTextValue("Course_Mod")]
		[ColumnEnum("Course_Mod", typeof(System.String), System.Data.DbType.String, false, false, true, 30)]
		CourseMod = 36,
		/// <summary>
		/// EdCodeCourseTypeId : 
		/// </summary>
		[EnumTextValue("ED_CODE_COURSE_TYPE_ID")]
		[ColumnEnum("ED_CODE_COURSE_TYPE_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		EdCodeCourseTypeId = 37
	}//End enum

	#endregion EdCourseColumn Enum

} // end namespace
