
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file SaVacationBylaws.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'SA_VACATION_BYLAWS' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class SaVacationBylawsBase : EntityBase, ISaVacationBylaws, IEntityId<SaVacationBylawsKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private SaVacationBylawsEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private SaVacationBylawsEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private SaVacationBylawsEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<SaVacationBylaws> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event SaVacationBylawsEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event SaVacationBylawsEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="SaVacationBylawsBase"/> instance.
		///</summary>
		public SaVacationBylawsBase()
		{
			this.entityData = new SaVacationBylawsEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="SaVacationBylawsBase"/> instance.
		///</summary>
		///<param name="_saVacationBylawsId"></param>
		///<param name="_vacationName"></param>
		///<param name="_maxNum"></param>
		///<param name="_maxDays"></param>
		///<param name="_maxDuration"></param>
		///<param name="_calcPeriod"></param>
		///<param name="_isassistingStaff"></param>
		///<param name="_isTeachingStaff"></param>
		///<param name="_hasDecision"></param>
		///<param name="_isForWomen"></param>
		///<param name="_isDuringAcademicYear"></param>
		///<param name="_hasBalace"></param>
		///<param name="_accBalance"></param>
		///<param name="_calcOnPeriod"></param>
		///<param name="_hasJobStartDecision"></param>
		///<param name="_saCodeVacationTypeId"></param>
		public SaVacationBylawsBase(System.Decimal _saVacationBylawsId, System.String _vacationName, 
			System.Decimal? _maxNum, System.Decimal? _maxDays, System.Decimal? _maxDuration, 
			System.Decimal? _calcPeriod, System.Decimal _isassistingStaff, System.Decimal _isTeachingStaff, 
			System.Decimal _hasDecision, System.Decimal _isForWomen, System.Decimal _isDuringAcademicYear, 
			System.Decimal _hasBalace, System.Decimal _accBalance, System.Decimal _calcOnPeriod, 
			System.Decimal _hasJobStartDecision, System.Decimal _saCodeVacationTypeId)
		{
			this.entityData = new SaVacationBylawsEntityData();
			this.backupData = null;

			this.SaVacationBylawsId = _saVacationBylawsId;
			this.VacationName = _vacationName;
			this.MaxNum = _maxNum;
			this.MaxDays = _maxDays;
			this.MaxDuration = _maxDuration;
			this.CalcPeriod = _calcPeriod;
			this.IsassistingStaff = _isassistingStaff;
			this.IsTeachingStaff = _isTeachingStaff;
			this.HasDecision = _hasDecision;
			this.IsForWomen = _isForWomen;
			this.IsDuringAcademicYear = _isDuringAcademicYear;
			this.HasBalace = _hasBalace;
			this.AccBalance = _accBalance;
			this.CalcOnPeriod = _calcOnPeriod;
			this.HasJobStartDecision = _hasJobStartDecision;
			this.SaCodeVacationTypeId = _saCodeVacationTypeId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="SaVacationBylaws"/> instance.
		///</summary>
		///<param name="_saVacationBylawsId"></param>
		///<param name="_vacationName"></param>
		///<param name="_maxNum"></param>
		///<param name="_maxDays"></param>
		///<param name="_maxDuration"></param>
		///<param name="_calcPeriod"></param>
		///<param name="_isassistingStaff"></param>
		///<param name="_isTeachingStaff"></param>
		///<param name="_hasDecision"></param>
		///<param name="_isForWomen"></param>
		///<param name="_isDuringAcademicYear"></param>
		///<param name="_hasBalace"></param>
		///<param name="_accBalance"></param>
		///<param name="_calcOnPeriod"></param>
		///<param name="_hasJobStartDecision"></param>
		///<param name="_saCodeVacationTypeId"></param>
		public static SaVacationBylaws CreateSaVacationBylaws(System.Decimal _saVacationBylawsId, System.String _vacationName, 
			System.Decimal? _maxNum, System.Decimal? _maxDays, System.Decimal? _maxDuration, 
			System.Decimal? _calcPeriod, System.Decimal _isassistingStaff, System.Decimal _isTeachingStaff, 
			System.Decimal _hasDecision, System.Decimal _isForWomen, System.Decimal _isDuringAcademicYear, 
			System.Decimal _hasBalace, System.Decimal _accBalance, System.Decimal _calcOnPeriod, 
			System.Decimal _hasJobStartDecision, System.Decimal _saCodeVacationTypeId)
		{
			SaVacationBylaws newSaVacationBylaws = new SaVacationBylaws();
			newSaVacationBylaws.SaVacationBylawsId = _saVacationBylawsId;
			newSaVacationBylaws.VacationName = _vacationName;
			newSaVacationBylaws.MaxNum = _maxNum;
			newSaVacationBylaws.MaxDays = _maxDays;
			newSaVacationBylaws.MaxDuration = _maxDuration;
			newSaVacationBylaws.CalcPeriod = _calcPeriod;
			newSaVacationBylaws.IsassistingStaff = _isassistingStaff;
			newSaVacationBylaws.IsTeachingStaff = _isTeachingStaff;
			newSaVacationBylaws.HasDecision = _hasDecision;
			newSaVacationBylaws.IsForWomen = _isForWomen;
			newSaVacationBylaws.IsDuringAcademicYear = _isDuringAcademicYear;
			newSaVacationBylaws.HasBalace = _hasBalace;
			newSaVacationBylaws.AccBalance = _accBalance;
			newSaVacationBylaws.CalcOnPeriod = _calcOnPeriod;
			newSaVacationBylaws.HasJobStartDecision = _hasJobStartDecision;
			newSaVacationBylaws.SaCodeVacationTypeId = _saCodeVacationTypeId;
			return newSaVacationBylaws;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the SaVacationBylawsId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal SaVacationBylawsId
		{
			get
			{
				return this.entityData.SaVacationBylawsId; 
			}
			
			set
			{
				if (this.entityData.SaVacationBylawsId == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.SaVacationBylawsId, this.entityData.SaVacationBylawsId);
				this.entityData.SaVacationBylawsId = value;
				this.EntityId.SaVacationBylawsId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.SaVacationBylawsId, this.entityData.SaVacationBylawsId);
				OnPropertyChanged("SaVacationBylawsId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the SA_VACATION_BYLAWS_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the SA_VACATION_BYLAWS_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalSaVacationBylawsId
		{
			get { return this.entityData.OriginalSaVacationBylawsId; }
			set { this.entityData.OriginalSaVacationBylawsId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the VacationName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 100)]
		public virtual System.String VacationName
		{
			get
			{
				return this.entityData.VacationName; 
			}
			
			set
			{
				if (this.entityData.VacationName == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.VacationName, this.entityData.VacationName);
				this.entityData.VacationName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.VacationName, this.entityData.VacationName);
				OnPropertyChanged("VacationName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaxNum property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsMaxNumNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? MaxNum
		{
			get
			{
				return this.entityData.MaxNum; 
			}
			
			set
			{
				if (this.entityData.MaxNum == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.MaxNum, this.entityData.MaxNum);
				this.entityData.MaxNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.MaxNum, this.entityData.MaxNum);
				OnPropertyChanged("MaxNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaxDays property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsMaxDaysNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? MaxDays
		{
			get
			{
				return this.entityData.MaxDays; 
			}
			
			set
			{
				if (this.entityData.MaxDays == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.MaxDays, this.entityData.MaxDays);
				this.entityData.MaxDays = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.MaxDays, this.entityData.MaxDays);
				OnPropertyChanged("MaxDays");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaxDuration property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsMaxDurationNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? MaxDuration
		{
			get
			{
				return this.entityData.MaxDuration; 
			}
			
			set
			{
				if (this.entityData.MaxDuration == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.MaxDuration, this.entityData.MaxDuration);
				this.entityData.MaxDuration = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.MaxDuration, this.entityData.MaxDuration);
				OnPropertyChanged("MaxDuration");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CalcPeriod property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCalcPeriodNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? CalcPeriod
		{
			get
			{
				return this.entityData.CalcPeriod; 
			}
			
			set
			{
				if (this.entityData.CalcPeriod == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.CalcPeriod, this.entityData.CalcPeriod);
				this.entityData.CalcPeriod = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.CalcPeriod, this.entityData.CalcPeriod);
				OnPropertyChanged("CalcPeriod");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IsassistingStaff property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal IsassistingStaff
		{
			get
			{
				return this.entityData.IsassistingStaff; 
			}
			
			set
			{
				if (this.entityData.IsassistingStaff == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.IsassistingStaff, this.entityData.IsassistingStaff);
				this.entityData.IsassistingStaff = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.IsassistingStaff, this.entityData.IsassistingStaff);
				OnPropertyChanged("IsassistingStaff");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IsTeachingStaff property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal IsTeachingStaff
		{
			get
			{
				return this.entityData.IsTeachingStaff; 
			}
			
			set
			{
				if (this.entityData.IsTeachingStaff == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.IsTeachingStaff, this.entityData.IsTeachingStaff);
				this.entityData.IsTeachingStaff = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.IsTeachingStaff, this.entityData.IsTeachingStaff);
				OnPropertyChanged("IsTeachingStaff");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HasDecision property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal HasDecision
		{
			get
			{
				return this.entityData.HasDecision; 
			}
			
			set
			{
				if (this.entityData.HasDecision == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.HasDecision, this.entityData.HasDecision);
				this.entityData.HasDecision = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.HasDecision, this.entityData.HasDecision);
				OnPropertyChanged("HasDecision");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IsForWomen property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal IsForWomen
		{
			get
			{
				return this.entityData.IsForWomen; 
			}
			
			set
			{
				if (this.entityData.IsForWomen == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.IsForWomen, this.entityData.IsForWomen);
				this.entityData.IsForWomen = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.IsForWomen, this.entityData.IsForWomen);
				OnPropertyChanged("IsForWomen");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IsDuringAcademicYear property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal IsDuringAcademicYear
		{
			get
			{
				return this.entityData.IsDuringAcademicYear; 
			}
			
			set
			{
				if (this.entityData.IsDuringAcademicYear == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.IsDuringAcademicYear, this.entityData.IsDuringAcademicYear);
				this.entityData.IsDuringAcademicYear = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.IsDuringAcademicYear, this.entityData.IsDuringAcademicYear);
				OnPropertyChanged("IsDuringAcademicYear");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HasBalace property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal HasBalace
		{
			get
			{
				return this.entityData.HasBalace; 
			}
			
			set
			{
				if (this.entityData.HasBalace == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.HasBalace, this.entityData.HasBalace);
				this.entityData.HasBalace = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.HasBalace, this.entityData.HasBalace);
				OnPropertyChanged("HasBalace");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AccBalance property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal AccBalance
		{
			get
			{
				return this.entityData.AccBalance; 
			}
			
			set
			{
				if (this.entityData.AccBalance == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.AccBalance, this.entityData.AccBalance);
				this.entityData.AccBalance = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.AccBalance, this.entityData.AccBalance);
				OnPropertyChanged("AccBalance");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CalcOnPeriod property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal CalcOnPeriod
		{
			get
			{
				return this.entityData.CalcOnPeriod; 
			}
			
			set
			{
				if (this.entityData.CalcOnPeriod == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.CalcOnPeriod, this.entityData.CalcOnPeriod);
				this.entityData.CalcOnPeriod = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.CalcOnPeriod, this.entityData.CalcOnPeriod);
				OnPropertyChanged("CalcOnPeriod");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the HasJobStartDecision property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal HasJobStartDecision
		{
			get
			{
				return this.entityData.HasJobStartDecision; 
			}
			
			set
			{
				if (this.entityData.HasJobStartDecision == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.HasJobStartDecision, this.entityData.HasJobStartDecision);
				this.entityData.HasJobStartDecision = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.HasJobStartDecision, this.entityData.HasJobStartDecision);
				OnPropertyChanged("HasJobStartDecision");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SaCodeVacationTypeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal SaCodeVacationTypeId
		{
			get
			{
				return this.entityData.SaCodeVacationTypeId; 
			}
			
			set
			{
				if (this.entityData.SaCodeVacationTypeId == value)
					return;
					
				OnColumnChanging(SaVacationBylawsColumn.SaCodeVacationTypeId, this.entityData.SaCodeVacationTypeId);
				this.entityData.SaCodeVacationTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaVacationBylawsColumn.SaCodeVacationTypeId, this.entityData.SaCodeVacationTypeId);
				OnPropertyChanged("SaCodeVacationTypeId");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="SaCodeVacationType"/>.
		/// </summary>
		/// <value>The source SaCodeVacationType for SaCodeVacationTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SaCodeVacationType SaCodeVacationTypeIdSource
      	{
            get { return entityData.SaCodeVacationTypeIdSource; }
            set { entityData.SaCodeVacationTypeIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of SaVacationBalance objects
		///	which are related to this object through the relation FK_SA_VACATION_BALANCE_SA_VACATION_BYLAWS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaVacationBalance> SaVacationBalanceCollection
		{
			get { return entityData.SaVacationBalanceCollection; }
			set { entityData.SaVacationBalanceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaVacationBalanceH objects
		///	which are related to this object through the relation FK_SA_VACATION_BALANCE_H_SA_VACATION_BYLAWS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaVacationBalanceH> SaVacationBalanceHCollection
		{
			get { return entityData.SaVacationBalanceHCollection; }
			set { entityData.SaVacationBalanceHCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaVacation objects
		///	which are related to this object through the relation FK_SA_VACATION_SA_VACATION_BYLAWS
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaVacation> SaVacationCollection
		{
			get { return entityData.SaVacationCollection; }
			set { entityData.SaVacationCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaVacationRule objects
		///	which are related to this object through the relation FK_AUTO_0531
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaVacationRule> SaVacationRuleCollection
		{
			get { return entityData.SaVacationRuleCollection; }
			set { entityData.SaVacationRuleCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("VacationName", "Vacation Name"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("VacationName", "Vacation Name", 100));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "SA_VACATION_BYLAWS"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"SA_VACATION_BYLAWS_ID", "VACATION_NAME", "MAX_NUM", "MAX_DAYS", "MAX_DURATION", "CALC_PERIOD", "ISASSISTING_STAFF", "IS_TEACHING_STAFF", "HAS_DECISION", "IS_FOR_WOMEN", "IS_DURING_ACADEMIC_YEAR", "HAS_BALACE", "ACC_BALANCE", "CALC_ON_PERIOD", "HAS_JOB_START_DECISION", "SA_CODE_VACATION_TYPE_ID"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as SaVacationBylawsEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (SaVacationBylaws) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<SaVacationBylaws>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as SaVacationBylaws);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed SaVacationBylaws Entity 
		///</summary>
		protected virtual SaVacationBylaws Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			SaVacationBylaws copy = new SaVacationBylaws();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.SaVacationBylawsId = this.SaVacationBylawsId;
					copy.OriginalSaVacationBylawsId = this.OriginalSaVacationBylawsId;
				copy.VacationName = this.VacationName;
				copy.MaxNum = this.MaxNum;
				copy.MaxDays = this.MaxDays;
				copy.MaxDuration = this.MaxDuration;
				copy.CalcPeriod = this.CalcPeriod;
				copy.IsassistingStaff = this.IsassistingStaff;
				copy.IsTeachingStaff = this.IsTeachingStaff;
				copy.HasDecision = this.HasDecision;
				copy.IsForWomen = this.IsForWomen;
				copy.IsDuringAcademicYear = this.IsDuringAcademicYear;
				copy.HasBalace = this.HasBalace;
				copy.AccBalance = this.AccBalance;
				copy.CalcOnPeriod = this.CalcOnPeriod;
				copy.HasJobStartDecision = this.HasJobStartDecision;
				copy.SaCodeVacationTypeId = this.SaCodeVacationTypeId;
			
			if (this.SaCodeVacationTypeIdSource != null && existingCopies.Contains(this.SaCodeVacationTypeIdSource))
				copy.SaCodeVacationTypeIdSource = existingCopies[this.SaCodeVacationTypeIdSource] as SaCodeVacationType;
			else
				copy.SaCodeVacationTypeIdSource = MakeCopyOf(this.SaCodeVacationTypeIdSource, existingCopies) as SaCodeVacationType;
		
			//deep copy nested objects
			copy.SaVacationBalanceCollection = (TList<SaVacationBalance>) MakeCopyOf(this.SaVacationBalanceCollection, existingCopies); 
			copy.SaVacationBalanceHCollection = (TList<SaVacationBalanceH>) MakeCopyOf(this.SaVacationBalanceHCollection, existingCopies); 
			copy.SaVacationCollection = (TList<SaVacation>) MakeCopyOf(this.SaVacationCollection, existingCopies); 
			copy.SaVacationRuleCollection = (TList<SaVacationRule>) MakeCopyOf(this.SaVacationRuleCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed SaVacationBylaws Entity 
		///</summary>
		public virtual SaVacationBylaws Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed SaVacationBylaws Entity which is a deep copy of the current entity.
		///</summary>
		public virtual SaVacationBylaws DeepCopy()
		{
			return EntityHelper.Clone<SaVacationBylaws>(this as SaVacationBylaws);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as SaVacationBylawsEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new SaVacationBylawsEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as SaVacationBylawsEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(SaVacationBylawsColumn column)
		{
			switch(column)
			{
					case SaVacationBylawsColumn.SaVacationBylawsId:
					return entityData.SaVacationBylawsId != _originalData.SaVacationBylawsId;
					case SaVacationBylawsColumn.VacationName:
					return entityData.VacationName != _originalData.VacationName;
					case SaVacationBylawsColumn.MaxNum:
					return entityData.MaxNum != _originalData.MaxNum;
					case SaVacationBylawsColumn.MaxDays:
					return entityData.MaxDays != _originalData.MaxDays;
					case SaVacationBylawsColumn.MaxDuration:
					return entityData.MaxDuration != _originalData.MaxDuration;
					case SaVacationBylawsColumn.CalcPeriod:
					return entityData.CalcPeriod != _originalData.CalcPeriod;
					case SaVacationBylawsColumn.IsassistingStaff:
					return entityData.IsassistingStaff != _originalData.IsassistingStaff;
					case SaVacationBylawsColumn.IsTeachingStaff:
					return entityData.IsTeachingStaff != _originalData.IsTeachingStaff;
					case SaVacationBylawsColumn.HasDecision:
					return entityData.HasDecision != _originalData.HasDecision;
					case SaVacationBylawsColumn.IsForWomen:
					return entityData.IsForWomen != _originalData.IsForWomen;
					case SaVacationBylawsColumn.IsDuringAcademicYear:
					return entityData.IsDuringAcademicYear != _originalData.IsDuringAcademicYear;
					case SaVacationBylawsColumn.HasBalace:
					return entityData.HasBalace != _originalData.HasBalace;
					case SaVacationBylawsColumn.AccBalance:
					return entityData.AccBalance != _originalData.AccBalance;
					case SaVacationBylawsColumn.CalcOnPeriod:
					return entityData.CalcOnPeriod != _originalData.CalcOnPeriod;
					case SaVacationBylawsColumn.HasJobStartDecision:
					return entityData.HasJobStartDecision != _originalData.HasJobStartDecision;
					case SaVacationBylawsColumn.SaCodeVacationTypeId:
					return entityData.SaCodeVacationTypeId != _originalData.SaCodeVacationTypeId;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< SaVacationBylawsColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.SaVacationBylawsId != _originalData.SaVacationBylawsId;
			result = result || entityData.VacationName != _originalData.VacationName;
			result = result || entityData.MaxNum != _originalData.MaxNum;
			result = result || entityData.MaxDays != _originalData.MaxDays;
			result = result || entityData.MaxDuration != _originalData.MaxDuration;
			result = result || entityData.CalcPeriod != _originalData.CalcPeriod;
			result = result || entityData.IsassistingStaff != _originalData.IsassistingStaff;
			result = result || entityData.IsTeachingStaff != _originalData.IsTeachingStaff;
			result = result || entityData.HasDecision != _originalData.HasDecision;
			result = result || entityData.IsForWomen != _originalData.IsForWomen;
			result = result || entityData.IsDuringAcademicYear != _originalData.IsDuringAcademicYear;
			result = result || entityData.HasBalace != _originalData.HasBalace;
			result = result || entityData.AccBalance != _originalData.AccBalance;
			result = result || entityData.CalcOnPeriod != _originalData.CalcOnPeriod;
			result = result || entityData.HasJobStartDecision != _originalData.HasJobStartDecision;
			result = result || entityData.SaCodeVacationTypeId != _originalData.SaCodeVacationTypeId;
			return result;
		}	
		
		///<summary>
		///  Returns a SaVacationBylaws Entity with the original data.
		///</summary>
		public SaVacationBylaws GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateSaVacationBylaws(
				_originalData.SaVacationBylawsId,
				_originalData.VacationName,
				_originalData.MaxNum,
				_originalData.MaxDays,
				_originalData.MaxDuration,
				_originalData.CalcPeriod,
				_originalData.IsassistingStaff,
				_originalData.IsTeachingStaff,
				_originalData.HasDecision,
				_originalData.IsForWomen,
				_originalData.IsDuringAcademicYear,
				_originalData.HasBalace,
				_originalData.AccBalance,
				_originalData.CalcOnPeriod,
				_originalData.HasJobStartDecision,
				_originalData.SaCodeVacationTypeId
				);
				
			return (SaVacationBylaws)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="SaVacationBylawsBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is SaVacationBylawsBase)
				return ValueEquals(this, (SaVacationBylawsBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="SaVacationBylawsBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.SaVacationBylawsId.GetHashCode() ^ 
					this.VacationName.GetHashCode() ^ 
					((this.MaxNum == null) ? string.Empty : this.MaxNum.ToString()).GetHashCode() ^ 
					((this.MaxDays == null) ? string.Empty : this.MaxDays.ToString()).GetHashCode() ^ 
					((this.MaxDuration == null) ? string.Empty : this.MaxDuration.ToString()).GetHashCode() ^ 
					((this.CalcPeriod == null) ? string.Empty : this.CalcPeriod.ToString()).GetHashCode() ^ 
					this.IsassistingStaff.GetHashCode() ^ 
					this.IsTeachingStaff.GetHashCode() ^ 
					this.HasDecision.GetHashCode() ^ 
					this.IsForWomen.GetHashCode() ^ 
					this.IsDuringAcademicYear.GetHashCode() ^ 
					this.HasBalace.GetHashCode() ^ 
					this.AccBalance.GetHashCode() ^ 
					this.CalcOnPeriod.GetHashCode() ^ 
					this.HasJobStartDecision.GetHashCode() ^ 
					this.SaCodeVacationTypeId.GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="SaVacationBylawsBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(SaVacationBylawsBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="SaVacationBylawsBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="SaVacationBylawsBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="SaVacationBylawsBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(SaVacationBylawsBase Object1, SaVacationBylawsBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.SaVacationBylawsId != Object2.SaVacationBylawsId)
				equal = false;
			if (Object1.VacationName != Object2.VacationName)
				equal = false;
			if ( Object1.MaxNum != null && Object2.MaxNum != null )
			{
				if (Object1.MaxNum != Object2.MaxNum)
					equal = false;
			}
			else if (Object1.MaxNum == null ^ Object2.MaxNum == null )
			{
				equal = false;
			}
			if ( Object1.MaxDays != null && Object2.MaxDays != null )
			{
				if (Object1.MaxDays != Object2.MaxDays)
					equal = false;
			}
			else if (Object1.MaxDays == null ^ Object2.MaxDays == null )
			{
				equal = false;
			}
			if ( Object1.MaxDuration != null && Object2.MaxDuration != null )
			{
				if (Object1.MaxDuration != Object2.MaxDuration)
					equal = false;
			}
			else if (Object1.MaxDuration == null ^ Object2.MaxDuration == null )
			{
				equal = false;
			}
			if ( Object1.CalcPeriod != null && Object2.CalcPeriod != null )
			{
				if (Object1.CalcPeriod != Object2.CalcPeriod)
					equal = false;
			}
			else if (Object1.CalcPeriod == null ^ Object2.CalcPeriod == null )
			{
				equal = false;
			}
			if (Object1.IsassistingStaff != Object2.IsassistingStaff)
				equal = false;
			if (Object1.IsTeachingStaff != Object2.IsTeachingStaff)
				equal = false;
			if (Object1.HasDecision != Object2.HasDecision)
				equal = false;
			if (Object1.IsForWomen != Object2.IsForWomen)
				equal = false;
			if (Object1.IsDuringAcademicYear != Object2.IsDuringAcademicYear)
				equal = false;
			if (Object1.HasBalace != Object2.HasBalace)
				equal = false;
			if (Object1.AccBalance != Object2.AccBalance)
				equal = false;
			if (Object1.CalcOnPeriod != Object2.CalcOnPeriod)
				equal = false;
			if (Object1.HasJobStartDecision != Object2.HasJobStartDecision)
				equal = false;
			if (Object1.SaCodeVacationTypeId != Object2.SaCodeVacationTypeId)
				equal = false;
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((SaVacationBylawsBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static SaVacationBylawsComparer GetComparer()
        {
            return new SaVacationBylawsComparer();
        }
        */

        // Comparer delegates back to SaVacationBylaws
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(SaVacationBylaws rhs, SaVacationBylawsColumn which)
        {
            switch (which)
            {
            	
            	
            	case SaVacationBylawsColumn.SaVacationBylawsId:
            		return this.SaVacationBylawsId.CompareTo(rhs.SaVacationBylawsId);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.VacationName:
            		return this.VacationName.CompareTo(rhs.VacationName);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.MaxNum:
            		return this.MaxNum.Value.CompareTo(rhs.MaxNum.Value);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.MaxDays:
            		return this.MaxDays.Value.CompareTo(rhs.MaxDays.Value);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.MaxDuration:
            		return this.MaxDuration.Value.CompareTo(rhs.MaxDuration.Value);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.CalcPeriod:
            		return this.CalcPeriod.Value.CompareTo(rhs.CalcPeriod.Value);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.IsassistingStaff:
            		return this.IsassistingStaff.CompareTo(rhs.IsassistingStaff);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.IsTeachingStaff:
            		return this.IsTeachingStaff.CompareTo(rhs.IsTeachingStaff);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.HasDecision:
            		return this.HasDecision.CompareTo(rhs.HasDecision);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.IsForWomen:
            		return this.IsForWomen.CompareTo(rhs.IsForWomen);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.IsDuringAcademicYear:
            		return this.IsDuringAcademicYear.CompareTo(rhs.IsDuringAcademicYear);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.HasBalace:
            		return this.HasBalace.CompareTo(rhs.HasBalace);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.AccBalance:
            		return this.AccBalance.CompareTo(rhs.AccBalance);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.CalcOnPeriod:
            		return this.CalcOnPeriod.CompareTo(rhs.CalcOnPeriod);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.HasJobStartDecision:
            		return this.HasJobStartDecision.CompareTo(rhs.HasJobStartDecision);
            		
            		                 
            	
            	
            	case SaVacationBylawsColumn.SaCodeVacationTypeId:
            		return this.SaCodeVacationTypeId.CompareTo(rhs.SaCodeVacationTypeId);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<SaVacationBylawsKey> Members
		
		// member variable for the EntityId property
		private SaVacationBylawsKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual SaVacationBylawsKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new SaVacationBylawsKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("SaVacationBylaws")
					.Append("|").Append( this.SaVacationBylawsId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{17}{16}- SaVacationBylawsId: {0}{16}- VacationName: {1}{16}- MaxNum: {2}{16}- MaxDays: {3}{16}- MaxDuration: {4}{16}- CalcPeriod: {5}{16}- IsassistingStaff: {6}{16}- IsTeachingStaff: {7}{16}- HasDecision: {8}{16}- IsForWomen: {9}{16}- IsDuringAcademicYear: {10}{16}- HasBalace: {11}{16}- AccBalance: {12}{16}- CalcOnPeriod: {13}{16}- HasJobStartDecision: {14}{16}- SaCodeVacationTypeId: {15}{16}{18}", 
				this.SaVacationBylawsId,
				this.VacationName,
				(this.MaxNum == null) ? string.Empty : this.MaxNum.ToString(),
				(this.MaxDays == null) ? string.Empty : this.MaxDays.ToString(),
				(this.MaxDuration == null) ? string.Empty : this.MaxDuration.ToString(),
				(this.CalcPeriod == null) ? string.Empty : this.CalcPeriod.ToString(),
				this.IsassistingStaff,
				this.IsTeachingStaff,
				this.HasDecision,
				this.IsForWomen,
				this.IsDuringAcademicYear,
				this.HasBalace,
				this.AccBalance,
				this.CalcOnPeriod,
				this.HasJobStartDecision,
				this.SaCodeVacationTypeId,
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'SA_VACATION_BYLAWS' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class SaVacationBylawsEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// SA_VACATION_BYLAWS_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "SA_VACATION_BYLAWS"</remarks>
		public System.Decimal SaVacationBylawsId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalSaVacationBylawsId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// VACATION_NAME : 
		/// </summary>
		public System.String		  VacationName = string.Empty;
		
		/// <summary>
		/// MAX_NUM : 
		/// </summary>
		public System.Decimal?		  MaxNum = null;
		
		/// <summary>
		/// MAX_DAYS : 
		/// </summary>
		public System.Decimal?		  MaxDays = null;
		
		/// <summary>
		/// MAX_DURATION : 
		/// </summary>
		public System.Decimal?		  MaxDuration = null;
		
		/// <summary>
		/// CALC_PERIOD : 
		/// </summary>
		public System.Decimal?		  CalcPeriod = null;
		
		/// <summary>
		/// ISASSISTING_STAFF : 
		/// </summary>
		public System.Decimal		  IsassistingStaff = 0.0m;
		
		/// <summary>
		/// IS_TEACHING_STAFF : 
		/// </summary>
		public System.Decimal		  IsTeachingStaff = 0.0m;
		
		/// <summary>
		/// HAS_DECISION : 
		/// </summary>
		public System.Decimal		  HasDecision = 0.0m;
		
		/// <summary>
		/// IS_FOR_WOMEN : 
		/// </summary>
		public System.Decimal		  IsForWomen = 0.0m;
		
		/// <summary>
		/// IS_DURING_ACADEMIC_YEAR : 
		/// </summary>
		public System.Decimal		  IsDuringAcademicYear = 0.0m;
		
		/// <summary>
		/// HAS_BALACE : 
		/// </summary>
		public System.Decimal		  HasBalace = 0.0m;
		
		/// <summary>
		/// ACC_BALANCE : 
		/// </summary>
		public System.Decimal		  AccBalance = 0.0m;
		
		/// <summary>
		/// CALC_ON_PERIOD : 
		/// </summary>
		public System.Decimal		  CalcOnPeriod = 0.0m;
		
		/// <summary>
		/// HAS_JOB_START_DECISION : 
		/// </summary>
		public System.Decimal		  HasJobStartDecision = 0.0m;
		
		/// <summary>
		/// SA_CODE_VACATION_TYPE_ID : 
		/// </summary>
		public System.Decimal		  SaCodeVacationTypeId = 0.0m;
		#endregion
			
		#region Source Foreign Key Property
				
		private SaCodeVacationType _saCodeVacationTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SaCodeVacationType"/>.
		/// </summary>
		/// <value>The source SaCodeVacationType for SaCodeVacationTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SaCodeVacationType SaCodeVacationTypeIdSource
      	{
            get { return this._saCodeVacationTypeIdSource; }
            set { this._saCodeVacationTypeIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region SaVacationBalanceCollection
		
		private TList<SaVacationBalance> _saVacationBalanceSaVacationBylowId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saVacationBalanceSaVacationBylowId
		/// </summary>
		
		public TList<SaVacationBalance> SaVacationBalanceCollection
		{
			get
			{
				if (_saVacationBalanceSaVacationBylowId == null)
				{
				_saVacationBalanceSaVacationBylowId = new TList<SaVacationBalance>();
				}
	
				return _saVacationBalanceSaVacationBylowId;
			}
			set { _saVacationBalanceSaVacationBylowId = value; }
		}
		
		#endregion

		#region SaVacationBalanceHCollection
		
		private TList<SaVacationBalanceH> _saVacationBalanceHSaVacationBylowId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saVacationBalanceHSaVacationBylowId
		/// </summary>
		
		public TList<SaVacationBalanceH> SaVacationBalanceHCollection
		{
			get
			{
				if (_saVacationBalanceHSaVacationBylowId == null)
				{
				_saVacationBalanceHSaVacationBylowId = new TList<SaVacationBalanceH>();
				}
	
				return _saVacationBalanceHSaVacationBylowId;
			}
			set { _saVacationBalanceHSaVacationBylowId = value; }
		}
		
		#endregion

		#region SaVacationCollection
		
		private TList<SaVacation> _saVacationSaVacationBylawsId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saVacationSaVacationBylawsId
		/// </summary>
		
		public TList<SaVacation> SaVacationCollection
		{
			get
			{
				if (_saVacationSaVacationBylawsId == null)
				{
				_saVacationSaVacationBylawsId = new TList<SaVacation>();
				}
	
				return _saVacationSaVacationBylawsId;
			}
			set { _saVacationSaVacationBylawsId = value; }
		}
		
		#endregion

		#region SaVacationRuleCollection
		
		private TList<SaVacationRule> _saVacationRuleSaVacationBylawsId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saVacationRuleSaVacationBylawsId
		/// </summary>
		
		public TList<SaVacationRule> SaVacationRuleCollection
		{
			get
			{
				if (_saVacationRuleSaVacationBylawsId == null)
				{
				_saVacationRuleSaVacationBylawsId = new TList<SaVacationRule>();
				}
	
				return _saVacationRuleSaVacationBylawsId;
			}
			set { _saVacationRuleSaVacationBylawsId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			SaVacationBylawsEntityData _tmp = new SaVacationBylawsEntityData();
						
			_tmp.SaVacationBylawsId = this.SaVacationBylawsId;
			_tmp.OriginalSaVacationBylawsId = this.OriginalSaVacationBylawsId;
			
			_tmp.VacationName = this.VacationName;
			_tmp.MaxNum = this.MaxNum;
			_tmp.MaxDays = this.MaxDays;
			_tmp.MaxDuration = this.MaxDuration;
			_tmp.CalcPeriod = this.CalcPeriod;
			_tmp.IsassistingStaff = this.IsassistingStaff;
			_tmp.IsTeachingStaff = this.IsTeachingStaff;
			_tmp.HasDecision = this.HasDecision;
			_tmp.IsForWomen = this.IsForWomen;
			_tmp.IsDuringAcademicYear = this.IsDuringAcademicYear;
			_tmp.HasBalace = this.HasBalace;
			_tmp.AccBalance = this.AccBalance;
			_tmp.CalcOnPeriod = this.CalcOnPeriod;
			_tmp.HasJobStartDecision = this.HasJobStartDecision;
			_tmp.SaCodeVacationTypeId = this.SaCodeVacationTypeId;
			
			#region Source Parent Composite Entities
			if (this.SaCodeVacationTypeIdSource != null)
				_tmp.SaCodeVacationTypeIdSource = MakeCopyOf(this.SaCodeVacationTypeIdSource) as SaCodeVacationType;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._saVacationBalanceSaVacationBylowId != null)
				_tmp.SaVacationBalanceCollection = (TList<SaVacationBalance>) MakeCopyOf(this.SaVacationBalanceCollection); 
			if (this._saVacationBalanceHSaVacationBylowId != null)
				_tmp.SaVacationBalanceHCollection = (TList<SaVacationBalanceH>) MakeCopyOf(this.SaVacationBalanceHCollection); 
			if (this._saVacationSaVacationBylawsId != null)
				_tmp.SaVacationCollection = (TList<SaVacation>) MakeCopyOf(this.SaVacationCollection); 
			if (this._saVacationRuleSaVacationBylawsId != null)
				_tmp.SaVacationRuleCollection = (TList<SaVacationRule>) MakeCopyOf(this.SaVacationRuleCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			SaVacationBylawsEntityData _tmp = new SaVacationBylawsEntityData();
						
			_tmp.SaVacationBylawsId = this.SaVacationBylawsId;
			_tmp.OriginalSaVacationBylawsId = this.OriginalSaVacationBylawsId;
			
			_tmp.VacationName = this.VacationName;
			_tmp.MaxNum = this.MaxNum;
			_tmp.MaxDays = this.MaxDays;
			_tmp.MaxDuration = this.MaxDuration;
			_tmp.CalcPeriod = this.CalcPeriod;
			_tmp.IsassistingStaff = this.IsassistingStaff;
			_tmp.IsTeachingStaff = this.IsTeachingStaff;
			_tmp.HasDecision = this.HasDecision;
			_tmp.IsForWomen = this.IsForWomen;
			_tmp.IsDuringAcademicYear = this.IsDuringAcademicYear;
			_tmp.HasBalace = this.HasBalace;
			_tmp.AccBalance = this.AccBalance;
			_tmp.CalcOnPeriod = this.CalcOnPeriod;
			_tmp.HasJobStartDecision = this.HasJobStartDecision;
			_tmp.SaCodeVacationTypeId = this.SaCodeVacationTypeId;
			
			#region Source Parent Composite Entities
			if (this.SaCodeVacationTypeIdSource != null && existingCopies.Contains(this.SaCodeVacationTypeIdSource))
				_tmp.SaCodeVacationTypeIdSource = existingCopies[this.SaCodeVacationTypeIdSource] as SaCodeVacationType;
			else
				_tmp.SaCodeVacationTypeIdSource = MakeCopyOf(this.SaCodeVacationTypeIdSource, existingCopies) as SaCodeVacationType;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.SaVacationBalanceCollection = (TList<SaVacationBalance>) MakeCopyOf(this.SaVacationBalanceCollection, existingCopies); 
			_tmp.SaVacationBalanceHCollection = (TList<SaVacationBalanceH>) MakeCopyOf(this.SaVacationBalanceHCollection, existingCopies); 
			_tmp.SaVacationCollection = (TList<SaVacation>) MakeCopyOf(this.SaVacationCollection, existingCopies); 
			_tmp.SaVacationRuleCollection = (TList<SaVacationRule>) MakeCopyOf(this.SaVacationRuleCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaVacationBylawsColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(SaVacationBylawsColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaVacationBylawsColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(SaVacationBylawsColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaVacationBylawsColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(SaVacationBylawsColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				SaVacationBylawsEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new SaVacationBylawsEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaVacationBylawsColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(SaVacationBylawsColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				SaVacationBylawsEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new SaVacationBylawsEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region SaVacationBylawsEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="SaVacationBylaws"/> object.
	/// </remarks>
	public class SaVacationBylawsEventArgs : System.EventArgs
	{
		private SaVacationBylawsColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the SaVacationBylawsEventArgs class.
		///</summary>
		public SaVacationBylawsEventArgs(SaVacationBylawsColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the SaVacationBylawsEventArgs class.
		///</summary>
		public SaVacationBylawsEventArgs(SaVacationBylawsColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The SaVacationBylawsColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="SaVacationBylawsColumn" />
		public SaVacationBylawsColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all SaVacationBylaws related events.
	///</summary>
	public delegate void SaVacationBylawsEventHandler(object sender, SaVacationBylawsEventArgs e);
	
	#region SaVacationBylawsComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class SaVacationBylawsComparer : System.Collections.Generic.IComparer<SaVacationBylaws>
	{
		SaVacationBylawsColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:SaVacationBylawsComparer"/> class.
        /// </summary>
		public SaVacationBylawsComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:SaVacationBylawsComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public SaVacationBylawsComparer(SaVacationBylawsColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="SaVacationBylaws"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="SaVacationBylaws"/> to compare.</param>
        /// <param name="b">The second <c>SaVacationBylaws</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(SaVacationBylaws a, SaVacationBylaws b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(SaVacationBylaws entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(SaVacationBylaws a, SaVacationBylaws b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public SaVacationBylawsColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region SaVacationBylawsKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="SaVacationBylaws"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class SaVacationBylawsKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the SaVacationBylawsKey class.
		/// </summary>
		public SaVacationBylawsKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the SaVacationBylawsKey class.
		/// </summary>
		public SaVacationBylawsKey(SaVacationBylawsBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.SaVacationBylawsId = entity.SaVacationBylawsId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the SaVacationBylawsKey class.
		/// </summary>
		public SaVacationBylawsKey(System.Decimal _saVacationBylawsId)
		{
			#region Init Properties

			this.SaVacationBylawsId = _saVacationBylawsId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private SaVacationBylawsBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public SaVacationBylawsBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the SaVacationBylawsId property
		private System.Decimal _saVacationBylawsId;
		
		/// <summary>
		/// Gets or sets the SaVacationBylawsId property.
		/// </summary>
		public System.Decimal SaVacationBylawsId
		{
			get { return _saVacationBylawsId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.SaVacationBylawsId = value;
				
				_saVacationBylawsId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				SaVacationBylawsId = ( values["SaVacationBylawsId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["SaVacationBylawsId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("SaVacationBylawsId", SaVacationBylawsId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("SaVacationBylawsId: {0}{1}",
								SaVacationBylawsId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region SaVacationBylawsColumn Enum
	
	/// <summary>
	/// Enumerate the SaVacationBylaws columns.
	/// </summary>
	[Serializable]
	public enum SaVacationBylawsColumn : int
	{
		/// <summary>
		/// SaVacationBylawsId : 
		/// </summary>
		[EnumTextValue("SA_VACATION_BYLAWS_ID")]
		[ColumnEnum("SA_VACATION_BYLAWS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		SaVacationBylawsId = 1,
		/// <summary>
		/// VacationName : 
		/// </summary>
		[EnumTextValue("VACATION_NAME")]
		[ColumnEnum("VACATION_NAME", typeof(System.String), System.Data.DbType.String, false, false, false, 100)]
		VacationName = 2,
		/// <summary>
		/// MaxNum : 
		/// </summary>
		[EnumTextValue("MAX_NUM")]
		[ColumnEnum("MAX_NUM", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		MaxNum = 3,
		/// <summary>
		/// MaxDays : 
		/// </summary>
		[EnumTextValue("MAX_DAYS")]
		[ColumnEnum("MAX_DAYS", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		MaxDays = 4,
		/// <summary>
		/// MaxDuration : 
		/// </summary>
		[EnumTextValue("MAX_DURATION")]
		[ColumnEnum("MAX_DURATION", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		MaxDuration = 5,
		/// <summary>
		/// CalcPeriod : 
		/// </summary>
		[EnumTextValue("CALC_PERIOD")]
		[ColumnEnum("CALC_PERIOD", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CalcPeriod = 6,
		/// <summary>
		/// IsassistingStaff : 
		/// </summary>
		[EnumTextValue("ISASSISTING_STAFF")]
		[ColumnEnum("ISASSISTING_STAFF", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		IsassistingStaff = 7,
		/// <summary>
		/// IsTeachingStaff : 
		/// </summary>
		[EnumTextValue("IS_TEACHING_STAFF")]
		[ColumnEnum("IS_TEACHING_STAFF", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		IsTeachingStaff = 8,
		/// <summary>
		/// HasDecision : 
		/// </summary>
		[EnumTextValue("HAS_DECISION")]
		[ColumnEnum("HAS_DECISION", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		HasDecision = 9,
		/// <summary>
		/// IsForWomen : 
		/// </summary>
		[EnumTextValue("IS_FOR_WOMEN")]
		[ColumnEnum("IS_FOR_WOMEN", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		IsForWomen = 10,
		/// <summary>
		/// IsDuringAcademicYear : 
		/// </summary>
		[EnumTextValue("IS_DURING_ACADEMIC_YEAR")]
		[ColumnEnum("IS_DURING_ACADEMIC_YEAR", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		IsDuringAcademicYear = 11,
		/// <summary>
		/// HasBalace : 
		/// </summary>
		[EnumTextValue("HAS_BALACE")]
		[ColumnEnum("HAS_BALACE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		HasBalace = 12,
		/// <summary>
		/// AccBalance : 
		/// </summary>
		[EnumTextValue("ACC_BALANCE")]
		[ColumnEnum("ACC_BALANCE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		AccBalance = 13,
		/// <summary>
		/// CalcOnPeriod : 
		/// </summary>
		[EnumTextValue("CALC_ON_PERIOD")]
		[ColumnEnum("CALC_ON_PERIOD", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		CalcOnPeriod = 14,
		/// <summary>
		/// HasJobStartDecision : 
		/// </summary>
		[EnumTextValue("HAS_JOB_START_DECISION")]
		[ColumnEnum("HAS_JOB_START_DECISION", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		HasJobStartDecision = 15,
		/// <summary>
		/// SaCodeVacationTypeId : 
		/// </summary>
		[EnumTextValue("SA_CODE_VACATION_TYPE_ID")]
		[ColumnEnum("SA_CODE_VACATION_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		SaCodeVacationTypeId = 16
	}//End enum

	#endregion SaVacationBylawsColumn Enum

} // end namespace
