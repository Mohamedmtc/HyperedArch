
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file SaStfMember.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'SA_STF_MEMBER' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class SaStfMemberBase : EntityBase, ISaStfMember, IEntityId<SaStfMemberKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private SaStfMemberEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private SaStfMemberEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private SaStfMemberEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<SaStfMember> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event SaStfMemberEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event SaStfMemberEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="SaStfMemberBase"/> instance.
		///</summary>
		public SaStfMemberBase()
		{
			this.entityData = new SaStfMemberEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="SaStfMemberBase"/> instance.
		///</summary>
		///<param name="_saStfMemberId"></param>
		///<param name="_stfCode"></param>
		///<param name="_stfFullNameAr"></param>
		///<param name="_stfFullNameEn"></param>
		///<param name="_asNodeId"></param>
		///<param name="_asFacultyInfoId"></param>
		///<param name="_saCodeJobStatusId"></param>
		///<param name="_saCodeScDegId"></param>
		///<param name="_stfNameAr"></param>
		///<param name="_stfClFullNameAr"></param>
		///<param name="_stfClNameAr"></param>
		///<param name="_stfLnameAr"></param>
		///<param name="_stfClLnameAr"></param>
		///<param name="_stfFnameEn"></param>
		///<param name="_stfLnameEn"></param>
		///<param name="_stfIsAzhary"></param>
		///<param name="_fileNum"></param>
		///<param name="_stfStatusNum"></param>
		///<param name="_stfNationalIdNum"></param>
		///<param name="_stfDob"></param>
		///<param name="_stfRegNum"></param>
		///<param name="_stfRegDate"></param>
		///<param name="_stfMname"></param>
		///<param name="_stfPermAdd"></param>
		///<param name="_stfCurrAdd"></param>
		///<param name="_stfEmpDate"></param>
		///<param name="_gsCodeGenderId"></param>
		///<param name="_gsCodeReligionId"></param>
		///<param name="_gsCodeMaritalStateId"></param>
		///<param name="_gsCountryInfoId"></param>
		///<param name="_gsCountryInfoId2"></param>
		///<param name="_gsCountryNodeId"></param>
		///<param name="_gsCountryNodeId2"></param>
		///<param name="_gsCountryNodeId3"></param>
		///<param name="_gsContactMethodHId"></param>
		///<param name="_stfPhoto"></param>
		///<param name="_basicSalary"></param>
		///<param name="_pgThesisGeneralSpecId"></param>
		///<param name="_pgThesisDetailedSpecId"></param>
		///<param name="_delFlag"></param>
		///<param name="_retirmentAge"></param>
		///<param name="_oldStfMemberId"></param>
		///<param name="_emailPassword"></param>
		///<param name="_telNum"></param>
		///<param name="_mobNum"></param>
		///<param name="_eMail"></param>
		///<param name="_gsCodeIdentTypeId"></param>
		///<param name="_adminJobFlg"></param>
		///<param name="_saCdeAdminJobId"></param>
		///<param name="_adminJobLoad">default=3</param>
		public SaStfMemberBase(System.Decimal _saStfMemberId, System.String _stfCode, System.String _stfFullNameAr, 
			System.String _stfFullNameEn, System.Decimal? _asNodeId, System.Decimal? _asFacultyInfoId, 
			System.Decimal? _saCodeJobStatusId, System.Decimal? _saCodeScDegId, System.String _stfNameAr, 
			System.String _stfClFullNameAr, System.String _stfClNameAr, System.String _stfLnameAr, 
			System.String _stfClLnameAr, System.String _stfFnameEn, System.String _stfLnameEn, 
			System.Decimal _stfIsAzhary, System.String _fileNum, System.String _stfStatusNum, 
			System.String _stfNationalIdNum, System.DateTime? _stfDob, System.String _stfRegNum, 
			System.DateTime? _stfRegDate, System.String _stfMname, System.String _stfPermAdd, 
			System.String _stfCurrAdd, System.DateTime? _stfEmpDate, System.Decimal? _gsCodeGenderId, 
			System.Decimal? _gsCodeReligionId, System.Decimal? _gsCodeMaritalStateId, System.Decimal? _gsCountryInfoId, 
			System.Decimal? _gsCountryInfoId2, System.Decimal? _gsCountryNodeId, System.Decimal? _gsCountryNodeId2, 
			System.Decimal? _gsCountryNodeId3, System.Decimal? _gsContactMethodHId, System.String _stfPhoto, 
			System.Decimal? _basicSalary, System.Decimal? _pgThesisGeneralSpecId, System.Decimal? _pgThesisDetailedSpecId, 
			System.Decimal _delFlag, System.Decimal _retirmentAge, System.Decimal? _oldStfMemberId, 
			System.String _emailPassword, System.String _telNum, System.String _mobNum, System.String _eMail, 
			System.Decimal? _gsCodeIdentTypeId, System.Boolean? _adminJobFlg, System.Int32? _saCdeAdminJobId, 
			System.Decimal? _adminJobLoad)
		{
			this.entityData = new SaStfMemberEntityData();
			this.backupData = null;

			this.SaStfMemberId = _saStfMemberId;
			this.StfCode = _stfCode;
			this.StfFullNameAr = _stfFullNameAr;
			this.StfFullNameEn = _stfFullNameEn;
			this.AsNodeId = _asNodeId;
			this.AsFacultyInfoId = _asFacultyInfoId;
			this.SaCodeJobStatusId = _saCodeJobStatusId;
			this.SaCodeScDegId = _saCodeScDegId;
			this.StfNameAr = _stfNameAr;
			this.StfClFullNameAr = _stfClFullNameAr;
			this.StfClNameAr = _stfClNameAr;
			this.StfLnameAr = _stfLnameAr;
			this.StfClLnameAr = _stfClLnameAr;
			this.StfFnameEn = _stfFnameEn;
			this.StfLnameEn = _stfLnameEn;
			this.StfIsAzhary = _stfIsAzhary;
			this.FileNum = _fileNum;
			this.StfStatusNum = _stfStatusNum;
			this.StfNationalIdNum = _stfNationalIdNum;
			this.StfDob = _stfDob;
			this.StfRegNum = _stfRegNum;
			this.StfRegDate = _stfRegDate;
			this.StfMname = _stfMname;
			this.StfPermAdd = _stfPermAdd;
			this.StfCurrAdd = _stfCurrAdd;
			this.StfEmpDate = _stfEmpDate;
			this.GsCodeGenderId = _gsCodeGenderId;
			this.GsCodeReligionId = _gsCodeReligionId;
			this.GsCodeMaritalStateId = _gsCodeMaritalStateId;
			this.GsCountryInfoId = _gsCountryInfoId;
			this.GsCountryInfoId2 = _gsCountryInfoId2;
			this.GsCountryNodeId = _gsCountryNodeId;
			this.GsCountryNodeId2 = _gsCountryNodeId2;
			this.GsCountryNodeId3 = _gsCountryNodeId3;
			this.GsContactMethodHId = _gsContactMethodHId;
			this.StfPhoto = _stfPhoto;
			this.BasicSalary = _basicSalary;
			this.PgThesisGeneralSpecId = _pgThesisGeneralSpecId;
			this.PgThesisDetailedSpecId = _pgThesisDetailedSpecId;
			this.DelFlag = _delFlag;
			this.RetirmentAge = _retirmentAge;
			this.OldStfMemberId = _oldStfMemberId;
			this.EmailPassword = _emailPassword;
			this.TelNum = _telNum;
			this.MobNum = _mobNum;
			this.EMail = _eMail;
			this.GsCodeIdentTypeId = _gsCodeIdentTypeId;
			this.AdminJobFlg = _adminJobFlg;
			this.SaCdeAdminJobId = _saCdeAdminJobId;
			this.AdminJobLoad = _adminJobLoad;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="SaStfMember"/> instance.
		///</summary>
		///<param name="_saStfMemberId"></param>
		///<param name="_stfCode"></param>
		///<param name="_stfFullNameAr"></param>
		///<param name="_stfFullNameEn"></param>
		///<param name="_asNodeId"></param>
		///<param name="_asFacultyInfoId"></param>
		///<param name="_saCodeJobStatusId"></param>
		///<param name="_saCodeScDegId"></param>
		///<param name="_stfNameAr"></param>
		///<param name="_stfClFullNameAr"></param>
		///<param name="_stfClNameAr"></param>
		///<param name="_stfLnameAr"></param>
		///<param name="_stfClLnameAr"></param>
		///<param name="_stfFnameEn"></param>
		///<param name="_stfLnameEn"></param>
		///<param name="_stfIsAzhary"></param>
		///<param name="_fileNum"></param>
		///<param name="_stfStatusNum"></param>
		///<param name="_stfNationalIdNum"></param>
		///<param name="_stfDob"></param>
		///<param name="_stfRegNum"></param>
		///<param name="_stfRegDate"></param>
		///<param name="_stfMname"></param>
		///<param name="_stfPermAdd"></param>
		///<param name="_stfCurrAdd"></param>
		///<param name="_stfEmpDate"></param>
		///<param name="_gsCodeGenderId"></param>
		///<param name="_gsCodeReligionId"></param>
		///<param name="_gsCodeMaritalStateId"></param>
		///<param name="_gsCountryInfoId"></param>
		///<param name="_gsCountryInfoId2"></param>
		///<param name="_gsCountryNodeId"></param>
		///<param name="_gsCountryNodeId2"></param>
		///<param name="_gsCountryNodeId3"></param>
		///<param name="_gsContactMethodHId"></param>
		///<param name="_stfPhoto"></param>
		///<param name="_basicSalary"></param>
		///<param name="_pgThesisGeneralSpecId"></param>
		///<param name="_pgThesisDetailedSpecId"></param>
		///<param name="_delFlag"></param>
		///<param name="_retirmentAge"></param>
		///<param name="_oldStfMemberId"></param>
		///<param name="_emailPassword"></param>
		///<param name="_telNum"></param>
		///<param name="_mobNum"></param>
		///<param name="_eMail"></param>
		///<param name="_gsCodeIdentTypeId"></param>
		///<param name="_adminJobFlg"></param>
		///<param name="_saCdeAdminJobId"></param>
		///<param name="_adminJobLoad">default=3</param>
		public static SaStfMember CreateSaStfMember(System.Decimal _saStfMemberId, System.String _stfCode, System.String _stfFullNameAr, 
			System.String _stfFullNameEn, System.Decimal? _asNodeId, System.Decimal? _asFacultyInfoId, 
			System.Decimal? _saCodeJobStatusId, System.Decimal? _saCodeScDegId, System.String _stfNameAr, 
			System.String _stfClFullNameAr, System.String _stfClNameAr, System.String _stfLnameAr, 
			System.String _stfClLnameAr, System.String _stfFnameEn, System.String _stfLnameEn, 
			System.Decimal _stfIsAzhary, System.String _fileNum, System.String _stfStatusNum, 
			System.String _stfNationalIdNum, System.DateTime? _stfDob, System.String _stfRegNum, 
			System.DateTime? _stfRegDate, System.String _stfMname, System.String _stfPermAdd, 
			System.String _stfCurrAdd, System.DateTime? _stfEmpDate, System.Decimal? _gsCodeGenderId, 
			System.Decimal? _gsCodeReligionId, System.Decimal? _gsCodeMaritalStateId, System.Decimal? _gsCountryInfoId, 
			System.Decimal? _gsCountryInfoId2, System.Decimal? _gsCountryNodeId, System.Decimal? _gsCountryNodeId2, 
			System.Decimal? _gsCountryNodeId3, System.Decimal? _gsContactMethodHId, System.String _stfPhoto, 
			System.Decimal? _basicSalary, System.Decimal? _pgThesisGeneralSpecId, System.Decimal? _pgThesisDetailedSpecId, 
			System.Decimal _delFlag, System.Decimal _retirmentAge, System.Decimal? _oldStfMemberId, 
			System.String _emailPassword, System.String _telNum, System.String _mobNum, System.String _eMail, 
			System.Decimal? _gsCodeIdentTypeId, System.Boolean? _adminJobFlg, System.Int32? _saCdeAdminJobId, 
			System.Decimal? _adminJobLoad)
		{
			SaStfMember newSaStfMember = new SaStfMember();
			newSaStfMember.SaStfMemberId = _saStfMemberId;
			newSaStfMember.StfCode = _stfCode;
			newSaStfMember.StfFullNameAr = _stfFullNameAr;
			newSaStfMember.StfFullNameEn = _stfFullNameEn;
			newSaStfMember.AsNodeId = _asNodeId;
			newSaStfMember.AsFacultyInfoId = _asFacultyInfoId;
			newSaStfMember.SaCodeJobStatusId = _saCodeJobStatusId;
			newSaStfMember.SaCodeScDegId = _saCodeScDegId;
			newSaStfMember.StfNameAr = _stfNameAr;
			newSaStfMember.StfClFullNameAr = _stfClFullNameAr;
			newSaStfMember.StfClNameAr = _stfClNameAr;
			newSaStfMember.StfLnameAr = _stfLnameAr;
			newSaStfMember.StfClLnameAr = _stfClLnameAr;
			newSaStfMember.StfFnameEn = _stfFnameEn;
			newSaStfMember.StfLnameEn = _stfLnameEn;
			newSaStfMember.StfIsAzhary = _stfIsAzhary;
			newSaStfMember.FileNum = _fileNum;
			newSaStfMember.StfStatusNum = _stfStatusNum;
			newSaStfMember.StfNationalIdNum = _stfNationalIdNum;
			newSaStfMember.StfDob = _stfDob;
			newSaStfMember.StfRegNum = _stfRegNum;
			newSaStfMember.StfRegDate = _stfRegDate;
			newSaStfMember.StfMname = _stfMname;
			newSaStfMember.StfPermAdd = _stfPermAdd;
			newSaStfMember.StfCurrAdd = _stfCurrAdd;
			newSaStfMember.StfEmpDate = _stfEmpDate;
			newSaStfMember.GsCodeGenderId = _gsCodeGenderId;
			newSaStfMember.GsCodeReligionId = _gsCodeReligionId;
			newSaStfMember.GsCodeMaritalStateId = _gsCodeMaritalStateId;
			newSaStfMember.GsCountryInfoId = _gsCountryInfoId;
			newSaStfMember.GsCountryInfoId2 = _gsCountryInfoId2;
			newSaStfMember.GsCountryNodeId = _gsCountryNodeId;
			newSaStfMember.GsCountryNodeId2 = _gsCountryNodeId2;
			newSaStfMember.GsCountryNodeId3 = _gsCountryNodeId3;
			newSaStfMember.GsContactMethodHId = _gsContactMethodHId;
			newSaStfMember.StfPhoto = _stfPhoto;
			newSaStfMember.BasicSalary = _basicSalary;
			newSaStfMember.PgThesisGeneralSpecId = _pgThesisGeneralSpecId;
			newSaStfMember.PgThesisDetailedSpecId = _pgThesisDetailedSpecId;
			newSaStfMember.DelFlag = _delFlag;
			newSaStfMember.RetirmentAge = _retirmentAge;
			newSaStfMember.OldStfMemberId = _oldStfMemberId;
			newSaStfMember.EmailPassword = _emailPassword;
			newSaStfMember.TelNum = _telNum;
			newSaStfMember.MobNum = _mobNum;
			newSaStfMember.EMail = _eMail;
			newSaStfMember.GsCodeIdentTypeId = _gsCodeIdentTypeId;
			newSaStfMember.AdminJobFlg = _adminJobFlg;
			newSaStfMember.SaCdeAdminJobId = _saCdeAdminJobId;
			newSaStfMember.AdminJobLoad = _adminJobLoad;
			return newSaStfMember;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the SaStfMemberId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal SaStfMemberId
		{
			get
			{
				return this.entityData.SaStfMemberId; 
			}
			
			set
			{
				if (this.entityData.SaStfMemberId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.SaStfMemberId, this.entityData.SaStfMemberId);
				this.entityData.SaStfMemberId = value;
				this.EntityId.SaStfMemberId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.SaStfMemberId, this.entityData.SaStfMemberId);
				OnPropertyChanged("SaStfMemberId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the SA_STF_MEMBER_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the SA_STF_MEMBER_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalSaStfMemberId
		{
			get { return this.entityData.OriginalSaStfMemberId; }
			set { this.entityData.OriginalSaStfMemberId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the StfCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String StfCode
		{
			get
			{
				return this.entityData.StfCode; 
			}
			
			set
			{
				if (this.entityData.StfCode == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfCode, this.entityData.StfCode);
				this.entityData.StfCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfCode, this.entityData.StfCode);
				OnPropertyChanged("StfCode");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfFullNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String StfFullNameAr
		{
			get
			{
				return this.entityData.StfFullNameAr; 
			}
			
			set
			{
				if (this.entityData.StfFullNameAr == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfFullNameAr, this.entityData.StfFullNameAr);
				this.entityData.StfFullNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfFullNameAr, this.entityData.StfFullNameAr);
				OnPropertyChanged("StfFullNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfFullNameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String StfFullNameEn
		{
			get
			{
				return this.entityData.StfFullNameEn; 
			}
			
			set
			{
				if (this.entityData.StfFullNameEn == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfFullNameEn, this.entityData.StfFullNameEn);
				this.entityData.StfFullNameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfFullNameEn, this.entityData.StfFullNameEn);
				OnPropertyChanged("StfFullNameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AsNodeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAsNodeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AsNodeId
		{
			get
			{
				return this.entityData.AsNodeId; 
			}
			
			set
			{
				if (this.entityData.AsNodeId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.AsNodeId, this.entityData.AsNodeId);
				this.entityData.AsNodeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.AsNodeId, this.entityData.AsNodeId);
				OnPropertyChanged("AsNodeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AsFacultyInfoId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAsFacultyInfoIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AsFacultyInfoId
		{
			get
			{
				return this.entityData.AsFacultyInfoId; 
			}
			
			set
			{
				if (this.entityData.AsFacultyInfoId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.AsFacultyInfoId, this.entityData.AsFacultyInfoId);
				this.entityData.AsFacultyInfoId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.AsFacultyInfoId, this.entityData.AsFacultyInfoId);
				OnPropertyChanged("AsFacultyInfoId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SaCodeJobStatusId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSaCodeJobStatusIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SaCodeJobStatusId
		{
			get
			{
				return this.entityData.SaCodeJobStatusId; 
			}
			
			set
			{
				if (this.entityData.SaCodeJobStatusId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.SaCodeJobStatusId, this.entityData.SaCodeJobStatusId);
				this.entityData.SaCodeJobStatusId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.SaCodeJobStatusId, this.entityData.SaCodeJobStatusId);
				OnPropertyChanged("SaCodeJobStatusId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SaCodeScDegId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSaCodeScDegIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SaCodeScDegId
		{
			get
			{
				return this.entityData.SaCodeScDegId; 
			}
			
			set
			{
				if (this.entityData.SaCodeScDegId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.SaCodeScDegId, this.entityData.SaCodeScDegId);
				this.entityData.SaCodeScDegId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.SaCodeScDegId, this.entityData.SaCodeScDegId);
				OnPropertyChanged("SaCodeScDegId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String StfNameAr
		{
			get
			{
				return this.entityData.StfNameAr; 
			}
			
			set
			{
				if (this.entityData.StfNameAr == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfNameAr, this.entityData.StfNameAr);
				this.entityData.StfNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfNameAr, this.entityData.StfNameAr);
				OnPropertyChanged("StfNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfClFullNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String StfClFullNameAr
		{
			get
			{
				return this.entityData.StfClFullNameAr; 
			}
			
			set
			{
				if (this.entityData.StfClFullNameAr == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfClFullNameAr, this.entityData.StfClFullNameAr);
				this.entityData.StfClFullNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfClFullNameAr, this.entityData.StfClFullNameAr);
				OnPropertyChanged("StfClFullNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfClNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String StfClNameAr
		{
			get
			{
				return this.entityData.StfClNameAr; 
			}
			
			set
			{
				if (this.entityData.StfClNameAr == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfClNameAr, this.entityData.StfClNameAr);
				this.entityData.StfClNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfClNameAr, this.entityData.StfClNameAr);
				OnPropertyChanged("StfClNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfLnameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String StfLnameAr
		{
			get
			{
				return this.entityData.StfLnameAr; 
			}
			
			set
			{
				if (this.entityData.StfLnameAr == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfLnameAr, this.entityData.StfLnameAr);
				this.entityData.StfLnameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfLnameAr, this.entityData.StfLnameAr);
				OnPropertyChanged("StfLnameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfClLnameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String StfClLnameAr
		{
			get
			{
				return this.entityData.StfClLnameAr; 
			}
			
			set
			{
				if (this.entityData.StfClLnameAr == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfClLnameAr, this.entityData.StfClLnameAr);
				this.entityData.StfClLnameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfClLnameAr, this.entityData.StfClLnameAr);
				OnPropertyChanged("StfClLnameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfFnameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String StfFnameEn
		{
			get
			{
				return this.entityData.StfFnameEn; 
			}
			
			set
			{
				if (this.entityData.StfFnameEn == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfFnameEn, this.entityData.StfFnameEn);
				this.entityData.StfFnameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfFnameEn, this.entityData.StfFnameEn);
				OnPropertyChanged("StfFnameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfLnameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String StfLnameEn
		{
			get
			{
				return this.entityData.StfLnameEn; 
			}
			
			set
			{
				if (this.entityData.StfLnameEn == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfLnameEn, this.entityData.StfLnameEn);
				this.entityData.StfLnameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfLnameEn, this.entityData.StfLnameEn);
				OnPropertyChanged("StfLnameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfIsAzhary property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal StfIsAzhary
		{
			get
			{
				return this.entityData.StfIsAzhary; 
			}
			
			set
			{
				if (this.entityData.StfIsAzhary == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfIsAzhary, this.entityData.StfIsAzhary);
				this.entityData.StfIsAzhary = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfIsAzhary, this.entityData.StfIsAzhary);
				OnPropertyChanged("StfIsAzhary");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FileNum property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String FileNum
		{
			get
			{
				return this.entityData.FileNum; 
			}
			
			set
			{
				if (this.entityData.FileNum == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.FileNum, this.entityData.FileNum);
				this.entityData.FileNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.FileNum, this.entityData.FileNum);
				OnPropertyChanged("FileNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfStatusNum property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String StfStatusNum
		{
			get
			{
				return this.entityData.StfStatusNum; 
			}
			
			set
			{
				if (this.entityData.StfStatusNum == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfStatusNum, this.entityData.StfStatusNum);
				this.entityData.StfStatusNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfStatusNum, this.entityData.StfStatusNum);
				OnPropertyChanged("StfStatusNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfNationalIdNum property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 16)]
		public virtual System.String StfNationalIdNum
		{
			get
			{
				return this.entityData.StfNationalIdNum; 
			}
			
			set
			{
				if (this.entityData.StfNationalIdNum == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfNationalIdNum, this.entityData.StfNationalIdNum);
				this.entityData.StfNationalIdNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfNationalIdNum, this.entityData.StfNationalIdNum);
				OnPropertyChanged("StfNationalIdNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfDob property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsStfDobNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? StfDob
		{
			get
			{
				return this.entityData.StfDob; 
			}
			
			set
			{
				if (this.entityData.StfDob == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfDob, this.entityData.StfDob);
				this.entityData.StfDob = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfDob, this.entityData.StfDob);
				OnPropertyChanged("StfDob");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfRegNum property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String StfRegNum
		{
			get
			{
				return this.entityData.StfRegNum; 
			}
			
			set
			{
				if (this.entityData.StfRegNum == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfRegNum, this.entityData.StfRegNum);
				this.entityData.StfRegNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfRegNum, this.entityData.StfRegNum);
				OnPropertyChanged("StfRegNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfRegDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsStfRegDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? StfRegDate
		{
			get
			{
				return this.entityData.StfRegDate; 
			}
			
			set
			{
				if (this.entityData.StfRegDate == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfRegDate, this.entityData.StfRegDate);
				this.entityData.StfRegDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfRegDate, this.entityData.StfRegDate);
				OnPropertyChanged("StfRegDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfMname property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String StfMname
		{
			get
			{
				return this.entityData.StfMname; 
			}
			
			set
			{
				if (this.entityData.StfMname == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfMname, this.entityData.StfMname);
				this.entityData.StfMname = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfMname, this.entityData.StfMname);
				OnPropertyChanged("StfMname");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfPermAdd property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 255)]
		public virtual System.String StfPermAdd
		{
			get
			{
				return this.entityData.StfPermAdd; 
			}
			
			set
			{
				if (this.entityData.StfPermAdd == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfPermAdd, this.entityData.StfPermAdd);
				this.entityData.StfPermAdd = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfPermAdd, this.entityData.StfPermAdd);
				OnPropertyChanged("StfPermAdd");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfCurrAdd property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String StfCurrAdd
		{
			get
			{
				return this.entityData.StfCurrAdd; 
			}
			
			set
			{
				if (this.entityData.StfCurrAdd == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfCurrAdd, this.entityData.StfCurrAdd);
				this.entityData.StfCurrAdd = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfCurrAdd, this.entityData.StfCurrAdd);
				OnPropertyChanged("StfCurrAdd");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfEmpDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsStfEmpDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? StfEmpDate
		{
			get
			{
				return this.entityData.StfEmpDate; 
			}
			
			set
			{
				if (this.entityData.StfEmpDate == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfEmpDate, this.entityData.StfEmpDate);
				this.entityData.StfEmpDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfEmpDate, this.entityData.StfEmpDate);
				OnPropertyChanged("StfEmpDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeGenderId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeGenderIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeGenderId
		{
			get
			{
				return this.entityData.GsCodeGenderId; 
			}
			
			set
			{
				if (this.entityData.GsCodeGenderId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.GsCodeGenderId, this.entityData.GsCodeGenderId);
				this.entityData.GsCodeGenderId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.GsCodeGenderId, this.entityData.GsCodeGenderId);
				OnPropertyChanged("GsCodeGenderId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeReligionId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeReligionIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeReligionId
		{
			get
			{
				return this.entityData.GsCodeReligionId; 
			}
			
			set
			{
				if (this.entityData.GsCodeReligionId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.GsCodeReligionId, this.entityData.GsCodeReligionId);
				this.entityData.GsCodeReligionId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.GsCodeReligionId, this.entityData.GsCodeReligionId);
				OnPropertyChanged("GsCodeReligionId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeMaritalStateId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeMaritalStateIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeMaritalStateId
		{
			get
			{
				return this.entityData.GsCodeMaritalStateId; 
			}
			
			set
			{
				if (this.entityData.GsCodeMaritalStateId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.GsCodeMaritalStateId, this.entityData.GsCodeMaritalStateId);
				this.entityData.GsCodeMaritalStateId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.GsCodeMaritalStateId, this.entityData.GsCodeMaritalStateId);
				OnPropertyChanged("GsCodeMaritalStateId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCountryInfoId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCountryInfoIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCountryInfoId
		{
			get
			{
				return this.entityData.GsCountryInfoId; 
			}
			
			set
			{
				if (this.entityData.GsCountryInfoId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.GsCountryInfoId, this.entityData.GsCountryInfoId);
				this.entityData.GsCountryInfoId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.GsCountryInfoId, this.entityData.GsCountryInfoId);
				OnPropertyChanged("GsCountryInfoId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCountryInfoId2 property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCountryInfoId2Null() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCountryInfoId2
		{
			get
			{
				return this.entityData.GsCountryInfoId2; 
			}
			
			set
			{
				if (this.entityData.GsCountryInfoId2 == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.GsCountryInfoId2, this.entityData.GsCountryInfoId2);
				this.entityData.GsCountryInfoId2 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.GsCountryInfoId2, this.entityData.GsCountryInfoId2);
				OnPropertyChanged("GsCountryInfoId2");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCountryNodeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCountryNodeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCountryNodeId
		{
			get
			{
				return this.entityData.GsCountryNodeId; 
			}
			
			set
			{
				if (this.entityData.GsCountryNodeId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.GsCountryNodeId, this.entityData.GsCountryNodeId);
				this.entityData.GsCountryNodeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.GsCountryNodeId, this.entityData.GsCountryNodeId);
				OnPropertyChanged("GsCountryNodeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCountryNodeId2 property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCountryNodeId2Null() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCountryNodeId2
		{
			get
			{
				return this.entityData.GsCountryNodeId2; 
			}
			
			set
			{
				if (this.entityData.GsCountryNodeId2 == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.GsCountryNodeId2, this.entityData.GsCountryNodeId2);
				this.entityData.GsCountryNodeId2 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.GsCountryNodeId2, this.entityData.GsCountryNodeId2);
				OnPropertyChanged("GsCountryNodeId2");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCountryNodeId3 property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCountryNodeId3Null() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCountryNodeId3
		{
			get
			{
				return this.entityData.GsCountryNodeId3; 
			}
			
			set
			{
				if (this.entityData.GsCountryNodeId3 == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.GsCountryNodeId3, this.entityData.GsCountryNodeId3);
				this.entityData.GsCountryNodeId3 = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.GsCountryNodeId3, this.entityData.GsCountryNodeId3);
				OnPropertyChanged("GsCountryNodeId3");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsContactMethodHId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsContactMethodHIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsContactMethodHId
		{
			get
			{
				return this.entityData.GsContactMethodHId; 
			}
			
			set
			{
				if (this.entityData.GsContactMethodHId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.GsContactMethodHId, this.entityData.GsContactMethodHId);
				this.entityData.GsContactMethodHId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.GsContactMethodHId, this.entityData.GsContactMethodHId);
				OnPropertyChanged("GsContactMethodHId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StfPhoto property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 300)]
		public virtual System.String StfPhoto
		{
			get
			{
				return this.entityData.StfPhoto; 
			}
			
			set
			{
				if (this.entityData.StfPhoto == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.StfPhoto, this.entityData.StfPhoto);
				this.entityData.StfPhoto = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.StfPhoto, this.entityData.StfPhoto);
				OnPropertyChanged("StfPhoto");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BasicSalary property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsBasicSalaryNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? BasicSalary
		{
			get
			{
				return this.entityData.BasicSalary; 
			}
			
			set
			{
				if (this.entityData.BasicSalary == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.BasicSalary, this.entityData.BasicSalary);
				this.entityData.BasicSalary = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.BasicSalary, this.entityData.BasicSalary);
				OnPropertyChanged("BasicSalary");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PgThesisGeneralSpecId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPgThesisGeneralSpecIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? PgThesisGeneralSpecId
		{
			get
			{
				return this.entityData.PgThesisGeneralSpecId; 
			}
			
			set
			{
				if (this.entityData.PgThesisGeneralSpecId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.PgThesisGeneralSpecId, this.entityData.PgThesisGeneralSpecId);
				this.entityData.PgThesisGeneralSpecId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.PgThesisGeneralSpecId, this.entityData.PgThesisGeneralSpecId);
				OnPropertyChanged("PgThesisGeneralSpecId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PgThesisDetailedSpecId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPgThesisDetailedSpecIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? PgThesisDetailedSpecId
		{
			get
			{
				return this.entityData.PgThesisDetailedSpecId; 
			}
			
			set
			{
				if (this.entityData.PgThesisDetailedSpecId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.PgThesisDetailedSpecId, this.entityData.PgThesisDetailedSpecId);
				this.entityData.PgThesisDetailedSpecId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.PgThesisDetailedSpecId, this.entityData.PgThesisDetailedSpecId);
				OnPropertyChanged("PgThesisDetailedSpecId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DelFlag property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal DelFlag
		{
			get
			{
				return this.entityData.DelFlag; 
			}
			
			set
			{
				if (this.entityData.DelFlag == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.DelFlag, this.entityData.DelFlag);
				this.entityData.DelFlag = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.DelFlag, this.entityData.DelFlag);
				OnPropertyChanged("DelFlag");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RetirmentAge property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal RetirmentAge
		{
			get
			{
				return this.entityData.RetirmentAge; 
			}
			
			set
			{
				if (this.entityData.RetirmentAge == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.RetirmentAge, this.entityData.RetirmentAge);
				this.entityData.RetirmentAge = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.RetirmentAge, this.entityData.RetirmentAge);
				OnPropertyChanged("RetirmentAge");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OldStfMemberId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsOldStfMemberIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? OldStfMemberId
		{
			get
			{
				return this.entityData.OldStfMemberId; 
			}
			
			set
			{
				if (this.entityData.OldStfMemberId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.OldStfMemberId, this.entityData.OldStfMemberId);
				this.entityData.OldStfMemberId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.OldStfMemberId, this.entityData.OldStfMemberId);
				OnPropertyChanged("OldStfMemberId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EmailPassword property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 200)]
		public virtual System.String EmailPassword
		{
			get
			{
				return this.entityData.EmailPassword; 
			}
			
			set
			{
				if (this.entityData.EmailPassword == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.EmailPassword, this.entityData.EmailPassword);
				this.entityData.EmailPassword = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.EmailPassword, this.entityData.EmailPassword);
				OnPropertyChanged("EmailPassword");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TelNum property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 20)]
		public virtual System.String TelNum
		{
			get
			{
				return this.entityData.TelNum; 
			}
			
			set
			{
				if (this.entityData.TelNum == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.TelNum, this.entityData.TelNum);
				this.entityData.TelNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.TelNum, this.entityData.TelNum);
				OnPropertyChanged("TelNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MobNum property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 25)]
		public virtual System.String MobNum
		{
			get
			{
				return this.entityData.MobNum; 
			}
			
			set
			{
				if (this.entityData.MobNum == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.MobNum, this.entityData.MobNum);
				this.entityData.MobNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.MobNum, this.entityData.MobNum);
				OnPropertyChanged("MobNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EMail property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String EMail
		{
			get
			{
				return this.entityData.EMail; 
			}
			
			set
			{
				if (this.entityData.EMail == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.EMail, this.entityData.EMail);
				this.entityData.EMail = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.EMail, this.entityData.EMail);
				OnPropertyChanged("EMail");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeIdentTypeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeIdentTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeIdentTypeId
		{
			get
			{
				return this.entityData.GsCodeIdentTypeId; 
			}
			
			set
			{
				if (this.entityData.GsCodeIdentTypeId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.GsCodeIdentTypeId, this.entityData.GsCodeIdentTypeId);
				this.entityData.GsCodeIdentTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.GsCodeIdentTypeId, this.entityData.GsCodeIdentTypeId);
				OnPropertyChanged("GsCodeIdentTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdminJobFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsAdminJobFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? AdminJobFlg
		{
			get
			{
				return this.entityData.AdminJobFlg; 
			}
			
			set
			{
				if (this.entityData.AdminJobFlg == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.AdminJobFlg, this.entityData.AdminJobFlg);
				this.entityData.AdminJobFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.AdminJobFlg, this.entityData.AdminJobFlg);
				OnPropertyChanged("AdminJobFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SaCdeAdminJobId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsSaCdeAdminJobIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? SaCdeAdminJobId
		{
			get
			{
				return this.entityData.SaCdeAdminJobId; 
			}
			
			set
			{
				if (this.entityData.SaCdeAdminJobId == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.SaCdeAdminJobId, this.entityData.SaCdeAdminJobId);
				this.entityData.SaCdeAdminJobId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.SaCdeAdminJobId, this.entityData.SaCdeAdminJobId);
				OnPropertyChanged("SaCdeAdminJobId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdminJobLoad property. 
		///		default=3
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdminJobLoadNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"default=3"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdminJobLoad
		{
			get
			{
				return this.entityData.AdminJobLoad; 
			}
			
			set
			{
				if (this.entityData.AdminJobLoad == value)
					return;
					
				OnColumnChanging(SaStfMemberColumn.AdminJobLoad, this.entityData.AdminJobLoad);
				this.entityData.AdminJobLoad = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaStfMemberColumn.AdminJobLoad, this.entityData.AdminJobLoad);
				OnPropertyChanged("AdminJobLoad");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="GsContactMethodH"/>.
		/// </summary>
		/// <value>The source GsContactMethodH for GsContactMethodHId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsContactMethodH GsContactMethodHIdSource
      	{
            get { return entityData.GsContactMethodHIdSource; }
            set { entityData.GsContactMethodHIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="PgThesisGeneralSpec"/>.
		/// </summary>
		/// <value>The source PgThesisGeneralSpec for PgThesisGeneralSpecId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual PgThesisGeneralSpec PgThesisGeneralSpecIdSource
      	{
            get { return entityData.PgThesisGeneralSpecIdSource; }
            set { entityData.PgThesisGeneralSpecIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AsFacultyInfo"/>.
		/// </summary>
		/// <value>The source AsFacultyInfo for AsFacultyInfoId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AsFacultyInfo AsFacultyInfoIdSource
      	{
            get { return entityData.AsFacultyInfoIdSource; }
            set { entityData.AsFacultyInfoIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EntityMain"/>.
		/// </summary>
		/// <value>The source EntityMain for AsNodeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EntityMain AsNodeIdSource
      	{
            get { return entityData.AsNodeIdSource; }
            set { entityData.AsNodeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeMaritalStatus"/>.
		/// </summary>
		/// <value>The source GsCdeMaritalStatus for GsCodeMaritalStateId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeMaritalStatus GsCodeMaritalStateIdSource
      	{
            get { return entityData.GsCodeMaritalStateIdSource; }
            set { entityData.GsCodeMaritalStateIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeGender"/>.
		/// </summary>
		/// <value>The source GsCodeGender for GsCodeGenderId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeGender GsCodeGenderIdSource
      	{
            get { return entityData.GsCodeGenderIdSource; }
            set { entityData.GsCodeGenderIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeIdentType"/>.
		/// </summary>
		/// <value>The source GsCodeIdentType for GsCodeIdentTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeIdentType GsCodeIdentTypeIdSource
      	{
            get { return entityData.GsCodeIdentTypeIdSource; }
            set { entityData.GsCodeIdentTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeReligion"/>.
		/// </summary>
		/// <value>The source GsCodeReligion for GsCodeReligionId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeReligion GsCodeReligionIdSource
      	{
            get { return entityData.GsCodeReligionIdSource; }
            set { entityData.GsCodeReligionIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryNodeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCountryNode GsCountryNodeIdSource
      	{
            get { return entityData.GsCountryNodeIdSource; }
            set { entityData.GsCountryNodeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryInfoId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCountryNode GsCountryInfoIdSource
      	{
            get { return entityData.GsCountryInfoIdSource; }
            set { entityData.GsCountryInfoIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="PgThesisDetailedSpec"/>.
		/// </summary>
		/// <value>The source PgThesisDetailedSpec for PgThesisDetailedSpecId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual PgThesisDetailedSpec PgThesisDetailedSpecIdSource
      	{
            get { return entityData.PgThesisDetailedSpecIdSource; }
            set { entityData.PgThesisDetailedSpecIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SaCdeAdminJob"/>.
		/// </summary>
		/// <value>The source SaCdeAdminJob for SaCdeAdminJobId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SaCdeAdminJob SaCdeAdminJobIdSource
      	{
            get { return entityData.SaCdeAdminJobIdSource; }
            set { entityData.SaCdeAdminJobIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SaCodeJobStatus"/>.
		/// </summary>
		/// <value>The source SaCodeJobStatus for SaCodeJobStatusId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SaCodeJobStatus SaCodeJobStatusIdSource
      	{
            get { return entityData.SaCodeJobStatusIdSource; }
            set { entityData.SaCodeJobStatusIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SaCodeScDeg"/>.
		/// </summary>
		/// <value>The source SaCodeScDeg for SaCodeScDegId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SaCodeScDeg SaCodeScDegIdSource
      	{
            get { return entityData.SaCodeScDegIdSource; }
            set { entityData.SaCodeScDegIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of SvStaffPoll objects
		///	which are related to this object through the relation FK_SV_STAFF_POLL_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStaffPoll> SvStaffPollCollection
		{
			get { return entityData.SvStaffPollCollection; }
			set { entityData.SvStaffPollCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaJobStoppage objects
		///	which are related to this object through the relation FK_SA_JOB_STOPPAGE_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaJobStoppage> SaJobStoppageCollection
		{
			get { return entityData.SaJobStoppageCollection; }
			set { entityData.SaJobStoppageCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaFinStatment objects
		///	which are related to this object through the relation FK_SA_FIN_STATMENT_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaFinStatment> SaFinStatmentCollection
		{
			get { return entityData.SaFinStatmentCollection; }
			set { entityData.SaFinStatmentCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdOfferingCourse objects
		///	which are related to this object through the relation FK_ED_OFFERING_COURSE_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdOfferingCourse> EdOfferingCourseCollection
		{
			get { return entityData.EdOfferingCourseCollection; }
			set { entityData.EdOfferingCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaStfAttend objects
		///	which are related to this object through the relation FK_SA_STF_ATTEND_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaStfAttend> SaStfAttendCollection
		{
			get { return entityData.SaStfAttendCollection; }
			set { entityData.SaStfAttendCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoExaminerCorector objects
		///	which are related to this object through the relation FK_CO_EXAMINER_CORECTOR_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoExaminerCorector> CoExaminerCorectorCollection
		{
			get { return entityData.CoExaminerCorectorCollection; }
			set { entityData.CoExaminerCorectorCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaVacationBalance objects
		///	which are related to this object through the relation FK_SA_VACATION_BALANCE_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaVacationBalance> SaVacationBalanceCollection
		{
			get { return entityData.SaVacationBalanceCollection; }
			set { entityData.SaVacationBalanceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaResearchTeam objects
		///	which are related to this object through the relation FK_SA_RESEARCH_TEAM_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaResearchTeam> SaResearchTeamCollection
		{
			get { return entityData.SaResearchTeamCollection; }
			set { entityData.SaResearchTeamCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaEmployment objects
		///	which are related to this object through the relation FK_AUTO_0018
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaEmployment> SaEmploymentCollection
		{
			get { return entityData.SaEmploymentCollection; }
			set { entityData.SaEmploymentCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaScQual objects
		///	which are related to this object through the relation FK_SA_SC_QUAL_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaScQual> SaScQualCollection
		{
			get { return entityData.SaScQualCollection; }
			set { entityData.SaScQualCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoControlMember objects
		///	which are related to this object through the relation FK_CO_CONTROL_MEMBER_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoControlMember> CoControlMemberCollection
		{
			get { return entityData.CoControlMemberCollection; }
			set { entityData.CoControlMemberCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GsCommStaff objects
		///	which are related to this object through the relation FK_GS_COMM_STAFF_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GsCommStaff> GsCommStaffCollection
		{
			get { return entityData.GsCommStaffCollection; }
			set { entityData.GsCommStaffCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaSupervisingJobs objects
		///	which are related to this object through the relation FK_SA_SUPERVISING_JOBS_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaSupervisingJobs> SaSupervisingJobsCollection
		{
			get { return entityData.SaSupervisingJobsCollection; }
			set { entityData.SaSupervisingJobsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppInterviewExam objects
		///	which are related to this object through the relation FK_ADM_APP_INTERVIEW_EXAM_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppInterviewExam> AdmAppInterviewExamCollection
		{
			get { return entityData.AdmAppInterviewExamCollection; }
			set { entityData.AdmAppInterviewExamCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdEmployeeQual objects
		///	which are related to this object through the relation FK_ED_EMPLOYEE_QUAL_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdEmployeeQual> EdEmployeeQualCollection
		{
			get { return entityData.EdEmployeeQualCollection; }
			set { entityData.EdEmployeeQualCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaStfSummeryTrans objects
		///	which are related to this object through the relation FK_AUTO_002c
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaStfSummeryTrans> SaStfSummeryTransCollection
		{
			get { return entityData.SaStfSummeryTransCollection; }
			set { entityData.SaStfSummeryTransCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScScheduleDtlExtStf objects
		///	which are related to this object through the relation FK_SC_SCHEDULE_DTL_EXT_STF_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScScheduleDtlExtStf> ScScheduleDtlExtStfCollection
		{
			get { return entityData.ScScheduleDtlExtStfCollection; }
			set { entityData.ScScheduleDtlExtStfCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdGuard objects
		///	which are related to this object through the relation FK_ED_STUD_GUARD_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdGuard> EdGuardCollection
		{
			get { return entityData.EdGuardCollection; }
			set { entityData.EdGuardCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAcadmicAdv objects
		///	which are related to this object through the relation FK_ED_STUD_ACADMIC_ADV_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAcadmicAdv> EdStudAcadmicAdvCollection
		{
			get { return entityData.EdStudAcadmicAdvCollection; }
			set { entityData.EdStudAcadmicAdvCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaRaise objects
		///	which are related to this object through the relation FK_SA_RAISE_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaRaise> SaRaiseCollection
		{
			get { return entityData.SaRaiseCollection; }
			set { entityData.SaRaiseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaPunishment objects
		///	which are related to this object through the relation FK_SA_PUNISHMENT_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaPunishment> SaPunishmentCollection
		{
			get { return entityData.SaPunishmentCollection; }
			set { entityData.SaPunishmentCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudActvtyReg objects
		///	which are related to this object through the relation FK_ED_STUD_ACTVTY_REG_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudActvtyReg> EdStudActvtyRegCollection
		{
			get { return entityData.EdStudActvtyRegCollection; }
			set { entityData.EdStudActvtyRegCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaExperience objects
		///	which are related to this object through the relation FK_SA_EXPERIENCE_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaExperience> SaExperienceCollection
		{
			get { return entityData.SaExperienceCollection; }
			set { entityData.SaExperienceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaEmpHierarchy objects
		///	which are related to this object through the relation FK_SA_EMP_HIERARCHY_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaEmpHierarchy> SaEmpHierarchyCollection
		{
			get { return entityData.SaEmpHierarchyCollection; }
			set { entityData.SaEmpHierarchyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudAskAdvRe objects
		///	which are related to this object through the relation FK_SV_STUD_ASK_ADV_RE_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudAskAdvRe> SvStudAskAdvReCollection
		{
			get { return entityData.SvStudAskAdvReCollection; }
			set { entityData.SvStudAskAdvReCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaPersonId objects
		///	which are related to this object through the relation FK_AUTO_0020
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaPersonId> SaPersonIdCollection
		{
			get { return entityData.SaPersonIdCollection; }
			set { entityData.SaPersonIdCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudEnrollChange objects
		///	which are related to this object through the relation FK_ED_STUD_ENROLL_CHANGE_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudEnrollChange> EdStudEnrollChangeCollection
		{
			get { return entityData.EdStudEnrollChangeCollection; }
			set { entityData.EdStudEnrollChangeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaMilitaryStatus objects
		///	which are related to this object through the relation FK_AUTO_001c
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaMilitaryStatus> SaMilitaryStatusCollection
		{
			get { return entityData.SaMilitaryStatusCollection; }
			set { entityData.SaMilitaryStatusCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudStaffEvalExt objects
		///	which are related to this object through the relation FK_SV_STUD_STAFF_EVAL_EXT_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudStaffEvalExt> SvStudStaffEvalExtCollection
		{
			get { return entityData.SvStudStaffEvalExtCollection; }
			set { entityData.SvStudStaffEvalExtCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaJobStartStatment objects
		///	which are related to this object through the relation FK_AUTO_001a
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaJobStartStatment> SaJobStartStatmentCollection
		{
			get { return entityData.SaJobStartStatmentCollection; }
			set { entityData.SaJobStartStatmentCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScGroupStaff objects
		///	which are related to this object through the relation FK_SC_GROUP_STAFF_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScGroupStaff> ScGroupStaffCollection
		{
			get { return entityData.ScGroupStaffCollection; }
			set { entityData.ScGroupStaffCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStud objects
		///	which are related to this object through the relation FK_ED_STUD_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStud> EdStudCollection
		{
			get { return entityData.EdStudCollection; }
			set { entityData.EdStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaTrainingCourse objects
		///	which are related to this object through the relation FK_SA_TRAINING_COURSE_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaTrainingCourse> SaTrainingCourseCollection
		{
			get { return entityData.SaTrainingCourseCollection; }
			set { entityData.SaTrainingCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of IntegUserAdLogDtl objects
		///	which are related to this object through the relation FK_INTEG_USER_AD_LOG_DTL_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<IntegUserAdLogDtl> IntegUserAdLogDtlCollection
		{
			get { return entityData.IntegUserAdLogDtlCollection; }
			set { entityData.IntegUserAdLogDtlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdAcdadvRmk objects
		///	which are related to this object through the relation FK_ED_ACDADV_RMK_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdAcdadvRmk> EdAcdadvRmkCollection
		{
			get { return entityData.EdAcdadvRmkCollection; }
			set { entityData.EdAcdadvRmkCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaMiltary objects
		///	which are related to this object through the relation FK_AUTO_001e
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaMiltary> SaMiltaryCollection
		{
			get { return entityData.SaMiltaryCollection; }
			set { entityData.SaMiltaryCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaServTermin objects
		///	which are related to this object through the relation FK_SA_SERV_TERMIN_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaServTermin> SaServTerminCollection
		{
			get { return entityData.SaServTerminCollection; }
			set { entityData.SaServTerminCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaPromotion objects
		///	which are related to this object through the relation FK_AUTO_0022
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaPromotion> SaPromotionCollection
		{
			get { return entityData.SaPromotionCollection; }
			set { entityData.SaPromotionCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvLecNote objects
		///	which are related to this object through the relation FK_SV_LEC_NOTE_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvLecNote> SvLecNoteCollection
		{
			get { return entityData.SvLecNoteCollection; }
			set { entityData.SvLecNoteCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgThesisStaff objects
		///	which are related to this object through the relation FK_PG_THESIS_STAFF_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisStaff> PgThesisStaffCollection
		{
			get { return entityData.PgThesisStaffCollection; }
			set { entityData.PgThesisStaffCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseGrdChng objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_GRD_CHNG_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseGrdChng> EdStudCourseGrdChngCollection
		{
			get { return entityData.EdStudCourseGrdChngCollection; }
			set { entityData.EdStudCourseGrdChngCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStaffCoursePref objects
		///	which are related to this object through the relation FK_ED_STAFF_COURSE_PREF_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStaffCoursePref> EdStaffCoursePrefCollection
		{
			get { return entityData.EdStaffCoursePrefCollection; }
			set { entityData.EdStaffCoursePrefCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScSchdlSlotStaff objects
		///	which are related to this object through the relation FK_SC_SCHDL_SLOT_STAFF_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScSchdlSlotStaff> ScSchdlSlotStaffCollection
		{
			get { return entityData.ScSchdlSlotStaffCollection; }
			set { entityData.ScSchdlSlotStaffCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgThesisCommMember objects
		///	which are related to this object through the relation FK_PG_THESIS_COMM_MEMBER_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisCommMember> PgThesisCommMemberCollection
		{
			get { return entityData.PgThesisCommMemberCollection; }
			set { entityData.PgThesisCommMemberCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaRelative objects
		///	which are related to this object through the relation FK_SA_RELATIVE_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaRelative> SaRelativeCollection
		{
			get { return entityData.SaRelativeCollection; }
			set { entityData.SaRelativeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaDocOfFile objects
		///	which are related to this object through the relation FK_AUTO_0014
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaDocOfFile> SaDocOfFileCollection
		{
			get { return entityData.SaDocOfFileCollection; }
			set { entityData.SaDocOfFileCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaPromotionRequest objects
		///	which are related to this object through the relation FK_SA_PROMOTION_REQUEST_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaPromotionRequest> SaPromotionRequestCollection
		{
			get { return entityData.SaPromotionRequestCollection; }
			set { entityData.SaPromotionRequestCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaCommMember objects
		///	which are related to this object through the relation FK_SA_COMM_MEMBER_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaCommMember> SaCommMemberCollection
		{
			get { return entityData.SaCommMemberCollection; }
			set { entityData.SaCommMemberCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgThesisNote objects
		///	which are related to this object through the relation FK_PG_THESIS_NOTE_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisNote> PgThesisNoteCollection
		{
			get { return entityData.PgThesisNoteCollection; }
			set { entityData.PgThesisNoteCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdTrainSupervisor objects
		///	which are related to this object through the relation FK_ED_TRAIN_SUPERVISOR_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdTrainSupervisor> EdTrainSupervisorCollection
		{
			get { return entityData.EdTrainSupervisorCollection; }
			set { entityData.EdTrainSupervisorCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaTransfer objects
		///	which are related to this object through the relation FK_SA_TRANSFER_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaTransfer> SaTransferCollection
		{
			get { return entityData.SaTransferCollection; }
			set { entityData.SaTransferCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaExtDel objects
		///	which are related to this object through the relation FK_SA_EXT_DEL_SA_STF_MEMBER1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaExtDel> SaExtDelCollection
		{
			get { return entityData.SaExtDelCollection; }
			set { entityData.SaExtDelCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseOutcomesTopics objects
		///	which are related to this object through the relation FK_ED_Course_Outcomes_Topics_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseOutcomesTopics> EdCourseOutcomesTopicsCollection
		{
			get { return entityData.EdCourseOutcomesTopicsCollection; }
			set { entityData.EdCourseOutcomesTopicsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoContRoomMember objects
		///	which are related to this object through the relation FK_CO_CONT_ROOM_MEMBER_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoContRoomMember> CoContRoomMemberCollection
		{
			get { return entityData.CoContRoomMemberCollection; }
			set { entityData.CoContRoomMemberCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaJobActivity objects
		///	which are related to this object through the relation FK_SA_JOB_ACTIVITY_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaJobActivity> SaJobActivityCollection
		{
			get { return entityData.SaJobActivityCollection; }
			set { entityData.SaJobActivityCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaOfficeHour objects
		///	which are related to this object through the relation FK_SA_OFFICE_HOUR_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaOfficeHour> SaOfficeHourCollection
		{
			get { return entityData.SaOfficeHourCollection; }
			set { entityData.SaOfficeHourCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdTrainStud objects
		///	which are related to this object through the relation FK_ED_TRAIN_STUD_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdTrainStud> EdTrainStudCollection
		{
			get { return entityData.EdTrainStudCollection; }
			set { entityData.EdTrainStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaCandRelease objects
		///	which are related to this object through the relation FK_SA_CAND_RELEASE_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaCandRelease> SaCandReleaseCollection
		{
			get { return entityData.SaCandReleaseCollection; }
			set { entityData.SaCandReleaseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaStfDoc objects
		///	which are related to this object through the relation FK_SA_STF_DOC_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaStfDoc> SaStfDocCollection
		{
			get { return entityData.SaStfDocCollection; }
			set { entityData.SaStfDocCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudStaffEval objects
		///	which are related to this object through the relation FK_SV_STUD_STAFF_EVAL_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudStaffEval> SvStudStaffEvalCollection
		{
			get { return entityData.SvStudStaffEvalCollection; }
			set { entityData.SvStudStaffEvalCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdExamSuprvsor objects
		///	which are related to this object through the relation FK_ED_EXAM_SUPRVSOR_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdExamSuprvsor> EdExamSuprvsorCollection
		{
			get { return entityData.EdExamSuprvsorCollection; }
			set { entityData.EdExamSuprvsorCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdProjSupervisor objects
		///	which are related to this object through the relation FK_ED_PROJ_SUP_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdProjSupervisor> EdProjSupervisorCollection
		{
			get { return entityData.EdProjSupervisorCollection; }
			set { entityData.EdProjSupervisorCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudComp objects
		///	which are related to this object through the relation FK_SV_STUD_COMP_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudComp> SvStudCompCollection
		{
			get { return entityData.SvStudCompCollection; }
			set { entityData.SvStudCompCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaVacation objects
		///	which are related to this object through the relation FK_SA_VACATION_SA_STF_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaVacation> SaVacationCollection
		{
			get { return entityData.SaVacationCollection; }
			set { entityData.SaVacationCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfCode", "Stf Code", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfFullNameAr", "Stf Full Name Ar", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfFullNameEn", "Stf Full Name En", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfNameAr", "Stf Name Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfClFullNameAr", "Stf Cl Full Name Ar", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfClNameAr", "Stf Cl Name Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfLnameAr", "Stf Lname Ar", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfClLnameAr", "Stf Cl Lname Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfFnameEn", "Stf Fname En", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfLnameEn", "Stf Lname En", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("FileNum", "File Num", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfStatusNum", "Stf Status Num", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfNationalIdNum", "Stf National Id Num", 16));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfRegNum", "Stf Reg Num", 10));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfMname", "Stf Mname", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfPermAdd", "Stf Perm Add", 255));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfCurrAdd", "Stf Curr Add", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("StfPhoto", "Stf Photo", 300));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("EmailPassword", "Email Password", 200));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TelNum", "Tel Num", 20));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MobNum", "Mob Num", 25));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("EMail", "E Mail", 50));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "SA_STF_MEMBER"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"SA_STF_MEMBER_ID", "STF_CODE", "STF_FULL_NAME_AR", "STF_FULL_NAME_EN", "AS_NODE_ID", "AS_FACULTY_INFO_ID", "SA_CODE_JOB_STATUS_ID", "SA_CODE_SC_DEG_ID", "STF_NAME_AR", "STF_CL_FULL_NAME_AR", "STF_CL_NAME_AR", "STF_LNAME_AR", "STF_CL_LNAME_AR", "STF_FNAME_EN", "STF_LNAME_EN", "STF_IS_AZHARY", "FILE_NUM", "STF_STATUS_NUM", "STF_NATIONAL_ID_NUM", "STF_DOB", "STF_REG_NUM", "STF_REG_DATE", "STF_MNAME", "STF_PERM_ADD", "STF_CURR_ADD", "STF_EMP_DATE", "GS_CODE_GENDER_ID", "GS_CODE_RELIGION_ID", "GS_CODE_MARITAL_STATE_ID", "GS_COUNTRY_INFO_ID", "GS_COUNTRY_INFO_ID2", "GS_COUNTRY_NODE_ID", "GS_COUNTRY_NODE_ID2", "GS_COUNTRY_NODE_ID3", "GS_CONTACT_METHOD_H_ID", "STF_PHOTO", "BASIC_SALARY", "PG_THESIS_GENERAL_SPEC_ID", "PG_THESIS_DETAILED_SPEC_ID", "DEL_FLAG", "RETIRMENT_AGE", "OLD_STF_MEMBER_ID", "EMAIL_PASSWORD", "TEL_NUM", "MOB_NUM", "E_MAIL", "GS_CODE_IDENT_TYPE_ID", "ADMIN_JOB_FLG", "SA_CDE_ADMIN_JOB_ID", "ADMIN_JOB_LOAD"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as SaStfMemberEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (SaStfMember) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<SaStfMember>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as SaStfMember);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed SaStfMember Entity 
		///</summary>
		protected virtual SaStfMember Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			SaStfMember copy = new SaStfMember();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.SaStfMemberId = this.SaStfMemberId;
					copy.OriginalSaStfMemberId = this.OriginalSaStfMemberId;
				copy.StfCode = this.StfCode;
				copy.StfFullNameAr = this.StfFullNameAr;
				copy.StfFullNameEn = this.StfFullNameEn;
				copy.AsNodeId = this.AsNodeId;
				copy.AsFacultyInfoId = this.AsFacultyInfoId;
				copy.SaCodeJobStatusId = this.SaCodeJobStatusId;
				copy.SaCodeScDegId = this.SaCodeScDegId;
				copy.StfNameAr = this.StfNameAr;
				copy.StfClFullNameAr = this.StfClFullNameAr;
				copy.StfClNameAr = this.StfClNameAr;
				copy.StfLnameAr = this.StfLnameAr;
				copy.StfClLnameAr = this.StfClLnameAr;
				copy.StfFnameEn = this.StfFnameEn;
				copy.StfLnameEn = this.StfLnameEn;
				copy.StfIsAzhary = this.StfIsAzhary;
				copy.FileNum = this.FileNum;
				copy.StfStatusNum = this.StfStatusNum;
				copy.StfNationalIdNum = this.StfNationalIdNum;
				copy.StfDob = this.StfDob;
				copy.StfRegNum = this.StfRegNum;
				copy.StfRegDate = this.StfRegDate;
				copy.StfMname = this.StfMname;
				copy.StfPermAdd = this.StfPermAdd;
				copy.StfCurrAdd = this.StfCurrAdd;
				copy.StfEmpDate = this.StfEmpDate;
				copy.GsCodeGenderId = this.GsCodeGenderId;
				copy.GsCodeReligionId = this.GsCodeReligionId;
				copy.GsCodeMaritalStateId = this.GsCodeMaritalStateId;
				copy.GsCountryInfoId = this.GsCountryInfoId;
				copy.GsCountryInfoId2 = this.GsCountryInfoId2;
				copy.GsCountryNodeId = this.GsCountryNodeId;
				copy.GsCountryNodeId2 = this.GsCountryNodeId2;
				copy.GsCountryNodeId3 = this.GsCountryNodeId3;
				copy.GsContactMethodHId = this.GsContactMethodHId;
				copy.StfPhoto = this.StfPhoto;
				copy.BasicSalary = this.BasicSalary;
				copy.PgThesisGeneralSpecId = this.PgThesisGeneralSpecId;
				copy.PgThesisDetailedSpecId = this.PgThesisDetailedSpecId;
				copy.DelFlag = this.DelFlag;
				copy.RetirmentAge = this.RetirmentAge;
				copy.OldStfMemberId = this.OldStfMemberId;
				copy.EmailPassword = this.EmailPassword;
				copy.TelNum = this.TelNum;
				copy.MobNum = this.MobNum;
				copy.EMail = this.EMail;
				copy.GsCodeIdentTypeId = this.GsCodeIdentTypeId;
				copy.AdminJobFlg = this.AdminJobFlg;
				copy.SaCdeAdminJobId = this.SaCdeAdminJobId;
				copy.AdminJobLoad = this.AdminJobLoad;
			
			if (this.GsContactMethodHIdSource != null && existingCopies.Contains(this.GsContactMethodHIdSource))
				copy.GsContactMethodHIdSource = existingCopies[this.GsContactMethodHIdSource] as GsContactMethodH;
			else
				copy.GsContactMethodHIdSource = MakeCopyOf(this.GsContactMethodHIdSource, existingCopies) as GsContactMethodH;
			if (this.PgThesisGeneralSpecIdSource != null && existingCopies.Contains(this.PgThesisGeneralSpecIdSource))
				copy.PgThesisGeneralSpecIdSource = existingCopies[this.PgThesisGeneralSpecIdSource] as PgThesisGeneralSpec;
			else
				copy.PgThesisGeneralSpecIdSource = MakeCopyOf(this.PgThesisGeneralSpecIdSource, existingCopies) as PgThesisGeneralSpec;
			if (this.AsFacultyInfoIdSource != null && existingCopies.Contains(this.AsFacultyInfoIdSource))
				copy.AsFacultyInfoIdSource = existingCopies[this.AsFacultyInfoIdSource] as AsFacultyInfo;
			else
				copy.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource, existingCopies) as AsFacultyInfo;
			if (this.AsNodeIdSource != null && existingCopies.Contains(this.AsNodeIdSource))
				copy.AsNodeIdSource = existingCopies[this.AsNodeIdSource] as EntityMain;
			else
				copy.AsNodeIdSource = MakeCopyOf(this.AsNodeIdSource, existingCopies) as EntityMain;
			if (this.GsCodeMaritalStateIdSource != null && existingCopies.Contains(this.GsCodeMaritalStateIdSource))
				copy.GsCodeMaritalStateIdSource = existingCopies[this.GsCodeMaritalStateIdSource] as GsCdeMaritalStatus;
			else
				copy.GsCodeMaritalStateIdSource = MakeCopyOf(this.GsCodeMaritalStateIdSource, existingCopies) as GsCdeMaritalStatus;
			if (this.GsCodeGenderIdSource != null && existingCopies.Contains(this.GsCodeGenderIdSource))
				copy.GsCodeGenderIdSource = existingCopies[this.GsCodeGenderIdSource] as GsCodeGender;
			else
				copy.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource, existingCopies) as GsCodeGender;
			if (this.GsCodeIdentTypeIdSource != null && existingCopies.Contains(this.GsCodeIdentTypeIdSource))
				copy.GsCodeIdentTypeIdSource = existingCopies[this.GsCodeIdentTypeIdSource] as GsCodeIdentType;
			else
				copy.GsCodeIdentTypeIdSource = MakeCopyOf(this.GsCodeIdentTypeIdSource, existingCopies) as GsCodeIdentType;
			if (this.GsCodeReligionIdSource != null && existingCopies.Contains(this.GsCodeReligionIdSource))
				copy.GsCodeReligionIdSource = existingCopies[this.GsCodeReligionIdSource] as GsCodeReligion;
			else
				copy.GsCodeReligionIdSource = MakeCopyOf(this.GsCodeReligionIdSource, existingCopies) as GsCodeReligion;
			if (this.GsCountryNodeIdSource != null && existingCopies.Contains(this.GsCountryNodeIdSource))
				copy.GsCountryNodeIdSource = existingCopies[this.GsCountryNodeIdSource] as GsCountryNode;
			else
				copy.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource, existingCopies) as GsCountryNode;
			if (this.GsCountryInfoIdSource != null && existingCopies.Contains(this.GsCountryInfoIdSource))
				copy.GsCountryInfoIdSource = existingCopies[this.GsCountryInfoIdSource] as GsCountryNode;
			else
				copy.GsCountryInfoIdSource = MakeCopyOf(this.GsCountryInfoIdSource, existingCopies) as GsCountryNode;
			if (this.PgThesisDetailedSpecIdSource != null && existingCopies.Contains(this.PgThesisDetailedSpecIdSource))
				copy.PgThesisDetailedSpecIdSource = existingCopies[this.PgThesisDetailedSpecIdSource] as PgThesisDetailedSpec;
			else
				copy.PgThesisDetailedSpecIdSource = MakeCopyOf(this.PgThesisDetailedSpecIdSource, existingCopies) as PgThesisDetailedSpec;
			if (this.SaCdeAdminJobIdSource != null && existingCopies.Contains(this.SaCdeAdminJobIdSource))
				copy.SaCdeAdminJobIdSource = existingCopies[this.SaCdeAdminJobIdSource] as SaCdeAdminJob;
			else
				copy.SaCdeAdminJobIdSource = MakeCopyOf(this.SaCdeAdminJobIdSource, existingCopies) as SaCdeAdminJob;
			if (this.SaCodeJobStatusIdSource != null && existingCopies.Contains(this.SaCodeJobStatusIdSource))
				copy.SaCodeJobStatusIdSource = existingCopies[this.SaCodeJobStatusIdSource] as SaCodeJobStatus;
			else
				copy.SaCodeJobStatusIdSource = MakeCopyOf(this.SaCodeJobStatusIdSource, existingCopies) as SaCodeJobStatus;
			if (this.SaCodeScDegIdSource != null && existingCopies.Contains(this.SaCodeScDegIdSource))
				copy.SaCodeScDegIdSource = existingCopies[this.SaCodeScDegIdSource] as SaCodeScDeg;
			else
				copy.SaCodeScDegIdSource = MakeCopyOf(this.SaCodeScDegIdSource, existingCopies) as SaCodeScDeg;
		
			//deep copy nested objects
			copy.SvStaffPollCollection = (TList<SvStaffPoll>) MakeCopyOf(this.SvStaffPollCollection, existingCopies); 
			copy.SaJobStoppageCollection = (TList<SaJobStoppage>) MakeCopyOf(this.SaJobStoppageCollection, existingCopies); 
			copy.SaFinStatmentCollection = (TList<SaFinStatment>) MakeCopyOf(this.SaFinStatmentCollection, existingCopies); 
			copy.EdOfferingCourseCollection = (TList<EdOfferingCourse>) MakeCopyOf(this.EdOfferingCourseCollection, existingCopies); 
			copy.SaStfAttendCollection = (TList<SaStfAttend>) MakeCopyOf(this.SaStfAttendCollection, existingCopies); 
			copy.CoExaminerCorectorCollection = (TList<CoExaminerCorector>) MakeCopyOf(this.CoExaminerCorectorCollection, existingCopies); 
			copy.SaVacationBalanceCollection = (TList<SaVacationBalance>) MakeCopyOf(this.SaVacationBalanceCollection, existingCopies); 
			copy.SaResearchTeamCollection = (TList<SaResearchTeam>) MakeCopyOf(this.SaResearchTeamCollection, existingCopies); 
			copy.SaEmploymentCollection = (TList<SaEmployment>) MakeCopyOf(this.SaEmploymentCollection, existingCopies); 
			copy.SaScQualCollection = (TList<SaScQual>) MakeCopyOf(this.SaScQualCollection, existingCopies); 
			copy.CoControlMemberCollection = (TList<CoControlMember>) MakeCopyOf(this.CoControlMemberCollection, existingCopies); 
			copy.GsCommStaffCollection = (TList<GsCommStaff>) MakeCopyOf(this.GsCommStaffCollection, existingCopies); 
			copy.SaSupervisingJobsCollection = (TList<SaSupervisingJobs>) MakeCopyOf(this.SaSupervisingJobsCollection, existingCopies); 
			copy.AdmAppInterviewExamCollection = (TList<AdmAppInterviewExam>) MakeCopyOf(this.AdmAppInterviewExamCollection, existingCopies); 
			copy.EdEmployeeQualCollection = (TList<EdEmployeeQual>) MakeCopyOf(this.EdEmployeeQualCollection, existingCopies); 
			copy.SaStfSummeryTransCollection = (TList<SaStfSummeryTrans>) MakeCopyOf(this.SaStfSummeryTransCollection, existingCopies); 
			copy.ScScheduleDtlExtStfCollection = (TList<ScScheduleDtlExtStf>) MakeCopyOf(this.ScScheduleDtlExtStfCollection, existingCopies); 
			copy.EdGuardCollection = (TList<EdGuard>) MakeCopyOf(this.EdGuardCollection, existingCopies); 
			copy.EdStudAcadmicAdvCollection = (TList<EdStudAcadmicAdv>) MakeCopyOf(this.EdStudAcadmicAdvCollection, existingCopies); 
			copy.SaRaiseCollection = (TList<SaRaise>) MakeCopyOf(this.SaRaiseCollection, existingCopies); 
			copy.SaPunishmentCollection = (TList<SaPunishment>) MakeCopyOf(this.SaPunishmentCollection, existingCopies); 
			copy.EdStudActvtyRegCollection = (TList<EdStudActvtyReg>) MakeCopyOf(this.EdStudActvtyRegCollection, existingCopies); 
			copy.SaExperienceCollection = (TList<SaExperience>) MakeCopyOf(this.SaExperienceCollection, existingCopies); 
			copy.SaEmpHierarchyCollection = (TList<SaEmpHierarchy>) MakeCopyOf(this.SaEmpHierarchyCollection, existingCopies); 
			copy.SvStudAskAdvReCollection = (TList<SvStudAskAdvRe>) MakeCopyOf(this.SvStudAskAdvReCollection, existingCopies); 
			copy.SaPersonIdCollection = (TList<SaPersonId>) MakeCopyOf(this.SaPersonIdCollection, existingCopies); 
			copy.EdStudEnrollChangeCollection = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollection, existingCopies); 
			copy.SaMilitaryStatusCollection = (TList<SaMilitaryStatus>) MakeCopyOf(this.SaMilitaryStatusCollection, existingCopies); 
			copy.SvStudStaffEvalExtCollection = (TList<SvStudStaffEvalExt>) MakeCopyOf(this.SvStudStaffEvalExtCollection, existingCopies); 
			copy.SaJobStartStatmentCollection = (TList<SaJobStartStatment>) MakeCopyOf(this.SaJobStartStatmentCollection, existingCopies); 
			copy.ScGroupStaffCollection = (TList<ScGroupStaff>) MakeCopyOf(this.ScGroupStaffCollection, existingCopies); 
			copy.EdStudCollection = (TList<EdStud>) MakeCopyOf(this.EdStudCollection, existingCopies); 
			copy.SaTrainingCourseCollection = (TList<SaTrainingCourse>) MakeCopyOf(this.SaTrainingCourseCollection, existingCopies); 
			copy.IntegUserAdLogDtlCollection = (TList<IntegUserAdLogDtl>) MakeCopyOf(this.IntegUserAdLogDtlCollection, existingCopies); 
			copy.EdAcdadvRmkCollection = (TList<EdAcdadvRmk>) MakeCopyOf(this.EdAcdadvRmkCollection, existingCopies); 
			copy.SaMiltaryCollection = (TList<SaMiltary>) MakeCopyOf(this.SaMiltaryCollection, existingCopies); 
			copy.SaServTerminCollection = (TList<SaServTermin>) MakeCopyOf(this.SaServTerminCollection, existingCopies); 
			copy.SaPromotionCollection = (TList<SaPromotion>) MakeCopyOf(this.SaPromotionCollection, existingCopies); 
			copy.SvLecNoteCollection = (TList<SvLecNote>) MakeCopyOf(this.SvLecNoteCollection, existingCopies); 
			copy.PgThesisStaffCollection = (TList<PgThesisStaff>) MakeCopyOf(this.PgThesisStaffCollection, existingCopies); 
			copy.EdStudCourseGrdChngCollection = (TList<EdStudCourseGrdChng>) MakeCopyOf(this.EdStudCourseGrdChngCollection, existingCopies); 
			copy.EdStaffCoursePrefCollection = (TList<EdStaffCoursePref>) MakeCopyOf(this.EdStaffCoursePrefCollection, existingCopies); 
			copy.ScSchdlSlotStaffCollection = (TList<ScSchdlSlotStaff>) MakeCopyOf(this.ScSchdlSlotStaffCollection, existingCopies); 
			copy.PgThesisCommMemberCollection = (TList<PgThesisCommMember>) MakeCopyOf(this.PgThesisCommMemberCollection, existingCopies); 
			copy.SaRelativeCollection = (TList<SaRelative>) MakeCopyOf(this.SaRelativeCollection, existingCopies); 
			copy.SaDocOfFileCollection = (TList<SaDocOfFile>) MakeCopyOf(this.SaDocOfFileCollection, existingCopies); 
			copy.SaPromotionRequestCollection = (TList<SaPromotionRequest>) MakeCopyOf(this.SaPromotionRequestCollection, existingCopies); 
			copy.SaCommMemberCollection = (TList<SaCommMember>) MakeCopyOf(this.SaCommMemberCollection, existingCopies); 
			copy.PgThesisNoteCollection = (TList<PgThesisNote>) MakeCopyOf(this.PgThesisNoteCollection, existingCopies); 
			copy.EdTrainSupervisorCollection = (TList<EdTrainSupervisor>) MakeCopyOf(this.EdTrainSupervisorCollection, existingCopies); 
			copy.SaTransferCollection = (TList<SaTransfer>) MakeCopyOf(this.SaTransferCollection, existingCopies); 
			copy.SaExtDelCollection = (TList<SaExtDel>) MakeCopyOf(this.SaExtDelCollection, existingCopies); 
			copy.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection, existingCopies); 
			copy.CoContRoomMemberCollection = (TList<CoContRoomMember>) MakeCopyOf(this.CoContRoomMemberCollection, existingCopies); 
			copy.SaJobActivityCollection = (TList<SaJobActivity>) MakeCopyOf(this.SaJobActivityCollection, existingCopies); 
			copy.SaOfficeHourCollection = (TList<SaOfficeHour>) MakeCopyOf(this.SaOfficeHourCollection, existingCopies); 
			copy.EdTrainStudCollection = (TList<EdTrainStud>) MakeCopyOf(this.EdTrainStudCollection, existingCopies); 
			copy.SaCandReleaseCollection = (TList<SaCandRelease>) MakeCopyOf(this.SaCandReleaseCollection, existingCopies); 
			copy.SaStfDocCollection = (TList<SaStfDoc>) MakeCopyOf(this.SaStfDocCollection, existingCopies); 
			copy.SvStudStaffEvalCollection = (TList<SvStudStaffEval>) MakeCopyOf(this.SvStudStaffEvalCollection, existingCopies); 
			copy.EdExamSuprvsorCollection = (TList<EdExamSuprvsor>) MakeCopyOf(this.EdExamSuprvsorCollection, existingCopies); 
			copy.EdProjSupervisorCollection = (TList<EdProjSupervisor>) MakeCopyOf(this.EdProjSupervisorCollection, existingCopies); 
			copy.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection, existingCopies); 
			copy.SaVacationCollection = (TList<SaVacation>) MakeCopyOf(this.SaVacationCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed SaStfMember Entity 
		///</summary>
		public virtual SaStfMember Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed SaStfMember Entity which is a deep copy of the current entity.
		///</summary>
		public virtual SaStfMember DeepCopy()
		{
			return EntityHelper.Clone<SaStfMember>(this as SaStfMember);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as SaStfMemberEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new SaStfMemberEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as SaStfMemberEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(SaStfMemberColumn column)
		{
			switch(column)
			{
					case SaStfMemberColumn.SaStfMemberId:
					return entityData.SaStfMemberId != _originalData.SaStfMemberId;
					case SaStfMemberColumn.StfCode:
					return entityData.StfCode != _originalData.StfCode;
					case SaStfMemberColumn.StfFullNameAr:
					return entityData.StfFullNameAr != _originalData.StfFullNameAr;
					case SaStfMemberColumn.StfFullNameEn:
					return entityData.StfFullNameEn != _originalData.StfFullNameEn;
					case SaStfMemberColumn.AsNodeId:
					return entityData.AsNodeId != _originalData.AsNodeId;
					case SaStfMemberColumn.AsFacultyInfoId:
					return entityData.AsFacultyInfoId != _originalData.AsFacultyInfoId;
					case SaStfMemberColumn.SaCodeJobStatusId:
					return entityData.SaCodeJobStatusId != _originalData.SaCodeJobStatusId;
					case SaStfMemberColumn.SaCodeScDegId:
					return entityData.SaCodeScDegId != _originalData.SaCodeScDegId;
					case SaStfMemberColumn.StfNameAr:
					return entityData.StfNameAr != _originalData.StfNameAr;
					case SaStfMemberColumn.StfClFullNameAr:
					return entityData.StfClFullNameAr != _originalData.StfClFullNameAr;
					case SaStfMemberColumn.StfClNameAr:
					return entityData.StfClNameAr != _originalData.StfClNameAr;
					case SaStfMemberColumn.StfLnameAr:
					return entityData.StfLnameAr != _originalData.StfLnameAr;
					case SaStfMemberColumn.StfClLnameAr:
					return entityData.StfClLnameAr != _originalData.StfClLnameAr;
					case SaStfMemberColumn.StfFnameEn:
					return entityData.StfFnameEn != _originalData.StfFnameEn;
					case SaStfMemberColumn.StfLnameEn:
					return entityData.StfLnameEn != _originalData.StfLnameEn;
					case SaStfMemberColumn.StfIsAzhary:
					return entityData.StfIsAzhary != _originalData.StfIsAzhary;
					case SaStfMemberColumn.FileNum:
					return entityData.FileNum != _originalData.FileNum;
					case SaStfMemberColumn.StfStatusNum:
					return entityData.StfStatusNum != _originalData.StfStatusNum;
					case SaStfMemberColumn.StfNationalIdNum:
					return entityData.StfNationalIdNum != _originalData.StfNationalIdNum;
					case SaStfMemberColumn.StfDob:
					return entityData.StfDob != _originalData.StfDob;
					case SaStfMemberColumn.StfRegNum:
					return entityData.StfRegNum != _originalData.StfRegNum;
					case SaStfMemberColumn.StfRegDate:
					return entityData.StfRegDate != _originalData.StfRegDate;
					case SaStfMemberColumn.StfMname:
					return entityData.StfMname != _originalData.StfMname;
					case SaStfMemberColumn.StfPermAdd:
					return entityData.StfPermAdd != _originalData.StfPermAdd;
					case SaStfMemberColumn.StfCurrAdd:
					return entityData.StfCurrAdd != _originalData.StfCurrAdd;
					case SaStfMemberColumn.StfEmpDate:
					return entityData.StfEmpDate != _originalData.StfEmpDate;
					case SaStfMemberColumn.GsCodeGenderId:
					return entityData.GsCodeGenderId != _originalData.GsCodeGenderId;
					case SaStfMemberColumn.GsCodeReligionId:
					return entityData.GsCodeReligionId != _originalData.GsCodeReligionId;
					case SaStfMemberColumn.GsCodeMaritalStateId:
					return entityData.GsCodeMaritalStateId != _originalData.GsCodeMaritalStateId;
					case SaStfMemberColumn.GsCountryInfoId:
					return entityData.GsCountryInfoId != _originalData.GsCountryInfoId;
					case SaStfMemberColumn.GsCountryInfoId2:
					return entityData.GsCountryInfoId2 != _originalData.GsCountryInfoId2;
					case SaStfMemberColumn.GsCountryNodeId:
					return entityData.GsCountryNodeId != _originalData.GsCountryNodeId;
					case SaStfMemberColumn.GsCountryNodeId2:
					return entityData.GsCountryNodeId2 != _originalData.GsCountryNodeId2;
					case SaStfMemberColumn.GsCountryNodeId3:
					return entityData.GsCountryNodeId3 != _originalData.GsCountryNodeId3;
					case SaStfMemberColumn.GsContactMethodHId:
					return entityData.GsContactMethodHId != _originalData.GsContactMethodHId;
					case SaStfMemberColumn.StfPhoto:
					return entityData.StfPhoto != _originalData.StfPhoto;
					case SaStfMemberColumn.BasicSalary:
					return entityData.BasicSalary != _originalData.BasicSalary;
					case SaStfMemberColumn.PgThesisGeneralSpecId:
					return entityData.PgThesisGeneralSpecId != _originalData.PgThesisGeneralSpecId;
					case SaStfMemberColumn.PgThesisDetailedSpecId:
					return entityData.PgThesisDetailedSpecId != _originalData.PgThesisDetailedSpecId;
					case SaStfMemberColumn.DelFlag:
					return entityData.DelFlag != _originalData.DelFlag;
					case SaStfMemberColumn.RetirmentAge:
					return entityData.RetirmentAge != _originalData.RetirmentAge;
					case SaStfMemberColumn.OldStfMemberId:
					return entityData.OldStfMemberId != _originalData.OldStfMemberId;
					case SaStfMemberColumn.EmailPassword:
					return entityData.EmailPassword != _originalData.EmailPassword;
					case SaStfMemberColumn.TelNum:
					return entityData.TelNum != _originalData.TelNum;
					case SaStfMemberColumn.MobNum:
					return entityData.MobNum != _originalData.MobNum;
					case SaStfMemberColumn.EMail:
					return entityData.EMail != _originalData.EMail;
					case SaStfMemberColumn.GsCodeIdentTypeId:
					return entityData.GsCodeIdentTypeId != _originalData.GsCodeIdentTypeId;
					case SaStfMemberColumn.AdminJobFlg:
					return entityData.AdminJobFlg != _originalData.AdminJobFlg;
					case SaStfMemberColumn.SaCdeAdminJobId:
					return entityData.SaCdeAdminJobId != _originalData.SaCdeAdminJobId;
					case SaStfMemberColumn.AdminJobLoad:
					return entityData.AdminJobLoad != _originalData.AdminJobLoad;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< SaStfMemberColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.SaStfMemberId != _originalData.SaStfMemberId;
			result = result || entityData.StfCode != _originalData.StfCode;
			result = result || entityData.StfFullNameAr != _originalData.StfFullNameAr;
			result = result || entityData.StfFullNameEn != _originalData.StfFullNameEn;
			result = result || entityData.AsNodeId != _originalData.AsNodeId;
			result = result || entityData.AsFacultyInfoId != _originalData.AsFacultyInfoId;
			result = result || entityData.SaCodeJobStatusId != _originalData.SaCodeJobStatusId;
			result = result || entityData.SaCodeScDegId != _originalData.SaCodeScDegId;
			result = result || entityData.StfNameAr != _originalData.StfNameAr;
			result = result || entityData.StfClFullNameAr != _originalData.StfClFullNameAr;
			result = result || entityData.StfClNameAr != _originalData.StfClNameAr;
			result = result || entityData.StfLnameAr != _originalData.StfLnameAr;
			result = result || entityData.StfClLnameAr != _originalData.StfClLnameAr;
			result = result || entityData.StfFnameEn != _originalData.StfFnameEn;
			result = result || entityData.StfLnameEn != _originalData.StfLnameEn;
			result = result || entityData.StfIsAzhary != _originalData.StfIsAzhary;
			result = result || entityData.FileNum != _originalData.FileNum;
			result = result || entityData.StfStatusNum != _originalData.StfStatusNum;
			result = result || entityData.StfNationalIdNum != _originalData.StfNationalIdNum;
			result = result || entityData.StfDob != _originalData.StfDob;
			result = result || entityData.StfRegNum != _originalData.StfRegNum;
			result = result || entityData.StfRegDate != _originalData.StfRegDate;
			result = result || entityData.StfMname != _originalData.StfMname;
			result = result || entityData.StfPermAdd != _originalData.StfPermAdd;
			result = result || entityData.StfCurrAdd != _originalData.StfCurrAdd;
			result = result || entityData.StfEmpDate != _originalData.StfEmpDate;
			result = result || entityData.GsCodeGenderId != _originalData.GsCodeGenderId;
			result = result || entityData.GsCodeReligionId != _originalData.GsCodeReligionId;
			result = result || entityData.GsCodeMaritalStateId != _originalData.GsCodeMaritalStateId;
			result = result || entityData.GsCountryInfoId != _originalData.GsCountryInfoId;
			result = result || entityData.GsCountryInfoId2 != _originalData.GsCountryInfoId2;
			result = result || entityData.GsCountryNodeId != _originalData.GsCountryNodeId;
			result = result || entityData.GsCountryNodeId2 != _originalData.GsCountryNodeId2;
			result = result || entityData.GsCountryNodeId3 != _originalData.GsCountryNodeId3;
			result = result || entityData.GsContactMethodHId != _originalData.GsContactMethodHId;
			result = result || entityData.StfPhoto != _originalData.StfPhoto;
			result = result || entityData.BasicSalary != _originalData.BasicSalary;
			result = result || entityData.PgThesisGeneralSpecId != _originalData.PgThesisGeneralSpecId;
			result = result || entityData.PgThesisDetailedSpecId != _originalData.PgThesisDetailedSpecId;
			result = result || entityData.DelFlag != _originalData.DelFlag;
			result = result || entityData.RetirmentAge != _originalData.RetirmentAge;
			result = result || entityData.OldStfMemberId != _originalData.OldStfMemberId;
			result = result || entityData.EmailPassword != _originalData.EmailPassword;
			result = result || entityData.TelNum != _originalData.TelNum;
			result = result || entityData.MobNum != _originalData.MobNum;
			result = result || entityData.EMail != _originalData.EMail;
			result = result || entityData.GsCodeIdentTypeId != _originalData.GsCodeIdentTypeId;
			result = result || entityData.AdminJobFlg != _originalData.AdminJobFlg;
			result = result || entityData.SaCdeAdminJobId != _originalData.SaCdeAdminJobId;
			result = result || entityData.AdminJobLoad != _originalData.AdminJobLoad;
			return result;
		}	
		
		///<summary>
		///  Returns a SaStfMember Entity with the original data.
		///</summary>
		public SaStfMember GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateSaStfMember(
				_originalData.SaStfMemberId,
				_originalData.StfCode,
				_originalData.StfFullNameAr,
				_originalData.StfFullNameEn,
				_originalData.AsNodeId,
				_originalData.AsFacultyInfoId,
				_originalData.SaCodeJobStatusId,
				_originalData.SaCodeScDegId,
				_originalData.StfNameAr,
				_originalData.StfClFullNameAr,
				_originalData.StfClNameAr,
				_originalData.StfLnameAr,
				_originalData.StfClLnameAr,
				_originalData.StfFnameEn,
				_originalData.StfLnameEn,
				_originalData.StfIsAzhary,
				_originalData.FileNum,
				_originalData.StfStatusNum,
				_originalData.StfNationalIdNum,
				_originalData.StfDob,
				_originalData.StfRegNum,
				_originalData.StfRegDate,
				_originalData.StfMname,
				_originalData.StfPermAdd,
				_originalData.StfCurrAdd,
				_originalData.StfEmpDate,
				_originalData.GsCodeGenderId,
				_originalData.GsCodeReligionId,
				_originalData.GsCodeMaritalStateId,
				_originalData.GsCountryInfoId,
				_originalData.GsCountryInfoId2,
				_originalData.GsCountryNodeId,
				_originalData.GsCountryNodeId2,
				_originalData.GsCountryNodeId3,
				_originalData.GsContactMethodHId,
				_originalData.StfPhoto,
				_originalData.BasicSalary,
				_originalData.PgThesisGeneralSpecId,
				_originalData.PgThesisDetailedSpecId,
				_originalData.DelFlag,
				_originalData.RetirmentAge,
				_originalData.OldStfMemberId,
				_originalData.EmailPassword,
				_originalData.TelNum,
				_originalData.MobNum,
				_originalData.EMail,
				_originalData.GsCodeIdentTypeId,
				_originalData.AdminJobFlg,
				_originalData.SaCdeAdminJobId,
				_originalData.AdminJobLoad
				);
				
			return (SaStfMember)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="SaStfMemberBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is SaStfMemberBase)
				return ValueEquals(this, (SaStfMemberBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="SaStfMemberBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.SaStfMemberId.GetHashCode() ^ 
					((this.StfCode == null) ? string.Empty : this.StfCode.ToString()).GetHashCode() ^ 
					((this.StfFullNameAr == null) ? string.Empty : this.StfFullNameAr.ToString()).GetHashCode() ^ 
					((this.StfFullNameEn == null) ? string.Empty : this.StfFullNameEn.ToString()).GetHashCode() ^ 
					((this.AsNodeId == null) ? string.Empty : this.AsNodeId.ToString()).GetHashCode() ^ 
					((this.AsFacultyInfoId == null) ? string.Empty : this.AsFacultyInfoId.ToString()).GetHashCode() ^ 
					((this.SaCodeJobStatusId == null) ? string.Empty : this.SaCodeJobStatusId.ToString()).GetHashCode() ^ 
					((this.SaCodeScDegId == null) ? string.Empty : this.SaCodeScDegId.ToString()).GetHashCode() ^ 
					((this.StfNameAr == null) ? string.Empty : this.StfNameAr.ToString()).GetHashCode() ^ 
					((this.StfClFullNameAr == null) ? string.Empty : this.StfClFullNameAr.ToString()).GetHashCode() ^ 
					((this.StfClNameAr == null) ? string.Empty : this.StfClNameAr.ToString()).GetHashCode() ^ 
					((this.StfLnameAr == null) ? string.Empty : this.StfLnameAr.ToString()).GetHashCode() ^ 
					((this.StfClLnameAr == null) ? string.Empty : this.StfClLnameAr.ToString()).GetHashCode() ^ 
					((this.StfFnameEn == null) ? string.Empty : this.StfFnameEn.ToString()).GetHashCode() ^ 
					((this.StfLnameEn == null) ? string.Empty : this.StfLnameEn.ToString()).GetHashCode() ^ 
					this.StfIsAzhary.GetHashCode() ^ 
					((this.FileNum == null) ? string.Empty : this.FileNum.ToString()).GetHashCode() ^ 
					((this.StfStatusNum == null) ? string.Empty : this.StfStatusNum.ToString()).GetHashCode() ^ 
					((this.StfNationalIdNum == null) ? string.Empty : this.StfNationalIdNum.ToString()).GetHashCode() ^ 
					((this.StfDob == null) ? string.Empty : this.StfDob.ToString()).GetHashCode() ^ 
					((this.StfRegNum == null) ? string.Empty : this.StfRegNum.ToString()).GetHashCode() ^ 
					((this.StfRegDate == null) ? string.Empty : this.StfRegDate.ToString()).GetHashCode() ^ 
					((this.StfMname == null) ? string.Empty : this.StfMname.ToString()).GetHashCode() ^ 
					((this.StfPermAdd == null) ? string.Empty : this.StfPermAdd.ToString()).GetHashCode() ^ 
					((this.StfCurrAdd == null) ? string.Empty : this.StfCurrAdd.ToString()).GetHashCode() ^ 
					((this.StfEmpDate == null) ? string.Empty : this.StfEmpDate.ToString()).GetHashCode() ^ 
					((this.GsCodeGenderId == null) ? string.Empty : this.GsCodeGenderId.ToString()).GetHashCode() ^ 
					((this.GsCodeReligionId == null) ? string.Empty : this.GsCodeReligionId.ToString()).GetHashCode() ^ 
					((this.GsCodeMaritalStateId == null) ? string.Empty : this.GsCodeMaritalStateId.ToString()).GetHashCode() ^ 
					((this.GsCountryInfoId == null) ? string.Empty : this.GsCountryInfoId.ToString()).GetHashCode() ^ 
					((this.GsCountryInfoId2 == null) ? string.Empty : this.GsCountryInfoId2.ToString()).GetHashCode() ^ 
					((this.GsCountryNodeId == null) ? string.Empty : this.GsCountryNodeId.ToString()).GetHashCode() ^ 
					((this.GsCountryNodeId2 == null) ? string.Empty : this.GsCountryNodeId2.ToString()).GetHashCode() ^ 
					((this.GsCountryNodeId3 == null) ? string.Empty : this.GsCountryNodeId3.ToString()).GetHashCode() ^ 
					((this.GsContactMethodHId == null) ? string.Empty : this.GsContactMethodHId.ToString()).GetHashCode() ^ 
					((this.StfPhoto == null) ? string.Empty : this.StfPhoto.ToString()).GetHashCode() ^ 
					((this.BasicSalary == null) ? string.Empty : this.BasicSalary.ToString()).GetHashCode() ^ 
					((this.PgThesisGeneralSpecId == null) ? string.Empty : this.PgThesisGeneralSpecId.ToString()).GetHashCode() ^ 
					((this.PgThesisDetailedSpecId == null) ? string.Empty : this.PgThesisDetailedSpecId.ToString()).GetHashCode() ^ 
					this.DelFlag.GetHashCode() ^ 
					this.RetirmentAge.GetHashCode() ^ 
					((this.OldStfMemberId == null) ? string.Empty : this.OldStfMemberId.ToString()).GetHashCode() ^ 
					((this.EmailPassword == null) ? string.Empty : this.EmailPassword.ToString()).GetHashCode() ^ 
					((this.TelNum == null) ? string.Empty : this.TelNum.ToString()).GetHashCode() ^ 
					((this.MobNum == null) ? string.Empty : this.MobNum.ToString()).GetHashCode() ^ 
					((this.EMail == null) ? string.Empty : this.EMail.ToString()).GetHashCode() ^ 
					((this.GsCodeIdentTypeId == null) ? string.Empty : this.GsCodeIdentTypeId.ToString()).GetHashCode() ^ 
					((this.AdminJobFlg == null) ? string.Empty : this.AdminJobFlg.ToString()).GetHashCode() ^ 
					((this.SaCdeAdminJobId == null) ? string.Empty : this.SaCdeAdminJobId.ToString()).GetHashCode() ^ 
					((this.AdminJobLoad == null) ? string.Empty : this.AdminJobLoad.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="SaStfMemberBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(SaStfMemberBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="SaStfMemberBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="SaStfMemberBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="SaStfMemberBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(SaStfMemberBase Object1, SaStfMemberBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.SaStfMemberId != Object2.SaStfMemberId)
				equal = false;
			if ( Object1.StfCode != null && Object2.StfCode != null )
			{
				if (Object1.StfCode != Object2.StfCode)
					equal = false;
			}
			else if (Object1.StfCode == null ^ Object2.StfCode == null )
			{
				equal = false;
			}
			if ( Object1.StfFullNameAr != null && Object2.StfFullNameAr != null )
			{
				if (Object1.StfFullNameAr != Object2.StfFullNameAr)
					equal = false;
			}
			else if (Object1.StfFullNameAr == null ^ Object2.StfFullNameAr == null )
			{
				equal = false;
			}
			if ( Object1.StfFullNameEn != null && Object2.StfFullNameEn != null )
			{
				if (Object1.StfFullNameEn != Object2.StfFullNameEn)
					equal = false;
			}
			else if (Object1.StfFullNameEn == null ^ Object2.StfFullNameEn == null )
			{
				equal = false;
			}
			if ( Object1.AsNodeId != null && Object2.AsNodeId != null )
			{
				if (Object1.AsNodeId != Object2.AsNodeId)
					equal = false;
			}
			else if (Object1.AsNodeId == null ^ Object2.AsNodeId == null )
			{
				equal = false;
			}
			if ( Object1.AsFacultyInfoId != null && Object2.AsFacultyInfoId != null )
			{
				if (Object1.AsFacultyInfoId != Object2.AsFacultyInfoId)
					equal = false;
			}
			else if (Object1.AsFacultyInfoId == null ^ Object2.AsFacultyInfoId == null )
			{
				equal = false;
			}
			if ( Object1.SaCodeJobStatusId != null && Object2.SaCodeJobStatusId != null )
			{
				if (Object1.SaCodeJobStatusId != Object2.SaCodeJobStatusId)
					equal = false;
			}
			else if (Object1.SaCodeJobStatusId == null ^ Object2.SaCodeJobStatusId == null )
			{
				equal = false;
			}
			if ( Object1.SaCodeScDegId != null && Object2.SaCodeScDegId != null )
			{
				if (Object1.SaCodeScDegId != Object2.SaCodeScDegId)
					equal = false;
			}
			else if (Object1.SaCodeScDegId == null ^ Object2.SaCodeScDegId == null )
			{
				equal = false;
			}
			if ( Object1.StfNameAr != null && Object2.StfNameAr != null )
			{
				if (Object1.StfNameAr != Object2.StfNameAr)
					equal = false;
			}
			else if (Object1.StfNameAr == null ^ Object2.StfNameAr == null )
			{
				equal = false;
			}
			if ( Object1.StfClFullNameAr != null && Object2.StfClFullNameAr != null )
			{
				if (Object1.StfClFullNameAr != Object2.StfClFullNameAr)
					equal = false;
			}
			else if (Object1.StfClFullNameAr == null ^ Object2.StfClFullNameAr == null )
			{
				equal = false;
			}
			if ( Object1.StfClNameAr != null && Object2.StfClNameAr != null )
			{
				if (Object1.StfClNameAr != Object2.StfClNameAr)
					equal = false;
			}
			else if (Object1.StfClNameAr == null ^ Object2.StfClNameAr == null )
			{
				equal = false;
			}
			if ( Object1.StfLnameAr != null && Object2.StfLnameAr != null )
			{
				if (Object1.StfLnameAr != Object2.StfLnameAr)
					equal = false;
			}
			else if (Object1.StfLnameAr == null ^ Object2.StfLnameAr == null )
			{
				equal = false;
			}
			if ( Object1.StfClLnameAr != null && Object2.StfClLnameAr != null )
			{
				if (Object1.StfClLnameAr != Object2.StfClLnameAr)
					equal = false;
			}
			else if (Object1.StfClLnameAr == null ^ Object2.StfClLnameAr == null )
			{
				equal = false;
			}
			if ( Object1.StfFnameEn != null && Object2.StfFnameEn != null )
			{
				if (Object1.StfFnameEn != Object2.StfFnameEn)
					equal = false;
			}
			else if (Object1.StfFnameEn == null ^ Object2.StfFnameEn == null )
			{
				equal = false;
			}
			if ( Object1.StfLnameEn != null && Object2.StfLnameEn != null )
			{
				if (Object1.StfLnameEn != Object2.StfLnameEn)
					equal = false;
			}
			else if (Object1.StfLnameEn == null ^ Object2.StfLnameEn == null )
			{
				equal = false;
			}
			if (Object1.StfIsAzhary != Object2.StfIsAzhary)
				equal = false;
			if ( Object1.FileNum != null && Object2.FileNum != null )
			{
				if (Object1.FileNum != Object2.FileNum)
					equal = false;
			}
			else if (Object1.FileNum == null ^ Object2.FileNum == null )
			{
				equal = false;
			}
			if ( Object1.StfStatusNum != null && Object2.StfStatusNum != null )
			{
				if (Object1.StfStatusNum != Object2.StfStatusNum)
					equal = false;
			}
			else if (Object1.StfStatusNum == null ^ Object2.StfStatusNum == null )
			{
				equal = false;
			}
			if ( Object1.StfNationalIdNum != null && Object2.StfNationalIdNum != null )
			{
				if (Object1.StfNationalIdNum != Object2.StfNationalIdNum)
					equal = false;
			}
			else if (Object1.StfNationalIdNum == null ^ Object2.StfNationalIdNum == null )
			{
				equal = false;
			}
			if ( Object1.StfDob != null && Object2.StfDob != null )
			{
				if (Object1.StfDob != Object2.StfDob)
					equal = false;
			}
			else if (Object1.StfDob == null ^ Object2.StfDob == null )
			{
				equal = false;
			}
			if ( Object1.StfRegNum != null && Object2.StfRegNum != null )
			{
				if (Object1.StfRegNum != Object2.StfRegNum)
					equal = false;
			}
			else if (Object1.StfRegNum == null ^ Object2.StfRegNum == null )
			{
				equal = false;
			}
			if ( Object1.StfRegDate != null && Object2.StfRegDate != null )
			{
				if (Object1.StfRegDate != Object2.StfRegDate)
					equal = false;
			}
			else if (Object1.StfRegDate == null ^ Object2.StfRegDate == null )
			{
				equal = false;
			}
			if ( Object1.StfMname != null && Object2.StfMname != null )
			{
				if (Object1.StfMname != Object2.StfMname)
					equal = false;
			}
			else if (Object1.StfMname == null ^ Object2.StfMname == null )
			{
				equal = false;
			}
			if ( Object1.StfPermAdd != null && Object2.StfPermAdd != null )
			{
				if (Object1.StfPermAdd != Object2.StfPermAdd)
					equal = false;
			}
			else if (Object1.StfPermAdd == null ^ Object2.StfPermAdd == null )
			{
				equal = false;
			}
			if ( Object1.StfCurrAdd != null && Object2.StfCurrAdd != null )
			{
				if (Object1.StfCurrAdd != Object2.StfCurrAdd)
					equal = false;
			}
			else if (Object1.StfCurrAdd == null ^ Object2.StfCurrAdd == null )
			{
				equal = false;
			}
			if ( Object1.StfEmpDate != null && Object2.StfEmpDate != null )
			{
				if (Object1.StfEmpDate != Object2.StfEmpDate)
					equal = false;
			}
			else if (Object1.StfEmpDate == null ^ Object2.StfEmpDate == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeGenderId != null && Object2.GsCodeGenderId != null )
			{
				if (Object1.GsCodeGenderId != Object2.GsCodeGenderId)
					equal = false;
			}
			else if (Object1.GsCodeGenderId == null ^ Object2.GsCodeGenderId == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeReligionId != null && Object2.GsCodeReligionId != null )
			{
				if (Object1.GsCodeReligionId != Object2.GsCodeReligionId)
					equal = false;
			}
			else if (Object1.GsCodeReligionId == null ^ Object2.GsCodeReligionId == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeMaritalStateId != null && Object2.GsCodeMaritalStateId != null )
			{
				if (Object1.GsCodeMaritalStateId != Object2.GsCodeMaritalStateId)
					equal = false;
			}
			else if (Object1.GsCodeMaritalStateId == null ^ Object2.GsCodeMaritalStateId == null )
			{
				equal = false;
			}
			if ( Object1.GsCountryInfoId != null && Object2.GsCountryInfoId != null )
			{
				if (Object1.GsCountryInfoId != Object2.GsCountryInfoId)
					equal = false;
			}
			else if (Object1.GsCountryInfoId == null ^ Object2.GsCountryInfoId == null )
			{
				equal = false;
			}
			if ( Object1.GsCountryInfoId2 != null && Object2.GsCountryInfoId2 != null )
			{
				if (Object1.GsCountryInfoId2 != Object2.GsCountryInfoId2)
					equal = false;
			}
			else if (Object1.GsCountryInfoId2 == null ^ Object2.GsCountryInfoId2 == null )
			{
				equal = false;
			}
			if ( Object1.GsCountryNodeId != null && Object2.GsCountryNodeId != null )
			{
				if (Object1.GsCountryNodeId != Object2.GsCountryNodeId)
					equal = false;
			}
			else if (Object1.GsCountryNodeId == null ^ Object2.GsCountryNodeId == null )
			{
				equal = false;
			}
			if ( Object1.GsCountryNodeId2 != null && Object2.GsCountryNodeId2 != null )
			{
				if (Object1.GsCountryNodeId2 != Object2.GsCountryNodeId2)
					equal = false;
			}
			else if (Object1.GsCountryNodeId2 == null ^ Object2.GsCountryNodeId2 == null )
			{
				equal = false;
			}
			if ( Object1.GsCountryNodeId3 != null && Object2.GsCountryNodeId3 != null )
			{
				if (Object1.GsCountryNodeId3 != Object2.GsCountryNodeId3)
					equal = false;
			}
			else if (Object1.GsCountryNodeId3 == null ^ Object2.GsCountryNodeId3 == null )
			{
				equal = false;
			}
			if ( Object1.GsContactMethodHId != null && Object2.GsContactMethodHId != null )
			{
				if (Object1.GsContactMethodHId != Object2.GsContactMethodHId)
					equal = false;
			}
			else if (Object1.GsContactMethodHId == null ^ Object2.GsContactMethodHId == null )
			{
				equal = false;
			}
			if ( Object1.StfPhoto != null && Object2.StfPhoto != null )
			{
				if (Object1.StfPhoto != Object2.StfPhoto)
					equal = false;
			}
			else if (Object1.StfPhoto == null ^ Object2.StfPhoto == null )
			{
				equal = false;
			}
			if ( Object1.BasicSalary != null && Object2.BasicSalary != null )
			{
				if (Object1.BasicSalary != Object2.BasicSalary)
					equal = false;
			}
			else if (Object1.BasicSalary == null ^ Object2.BasicSalary == null )
			{
				equal = false;
			}
			if ( Object1.PgThesisGeneralSpecId != null && Object2.PgThesisGeneralSpecId != null )
			{
				if (Object1.PgThesisGeneralSpecId != Object2.PgThesisGeneralSpecId)
					equal = false;
			}
			else if (Object1.PgThesisGeneralSpecId == null ^ Object2.PgThesisGeneralSpecId == null )
			{
				equal = false;
			}
			if ( Object1.PgThesisDetailedSpecId != null && Object2.PgThesisDetailedSpecId != null )
			{
				if (Object1.PgThesisDetailedSpecId != Object2.PgThesisDetailedSpecId)
					equal = false;
			}
			else if (Object1.PgThesisDetailedSpecId == null ^ Object2.PgThesisDetailedSpecId == null )
			{
				equal = false;
			}
			if (Object1.DelFlag != Object2.DelFlag)
				equal = false;
			if (Object1.RetirmentAge != Object2.RetirmentAge)
				equal = false;
			if ( Object1.OldStfMemberId != null && Object2.OldStfMemberId != null )
			{
				if (Object1.OldStfMemberId != Object2.OldStfMemberId)
					equal = false;
			}
			else if (Object1.OldStfMemberId == null ^ Object2.OldStfMemberId == null )
			{
				equal = false;
			}
			if ( Object1.EmailPassword != null && Object2.EmailPassword != null )
			{
				if (Object1.EmailPassword != Object2.EmailPassword)
					equal = false;
			}
			else if (Object1.EmailPassword == null ^ Object2.EmailPassword == null )
			{
				equal = false;
			}
			if ( Object1.TelNum != null && Object2.TelNum != null )
			{
				if (Object1.TelNum != Object2.TelNum)
					equal = false;
			}
			else if (Object1.TelNum == null ^ Object2.TelNum == null )
			{
				equal = false;
			}
			if ( Object1.MobNum != null && Object2.MobNum != null )
			{
				if (Object1.MobNum != Object2.MobNum)
					equal = false;
			}
			else if (Object1.MobNum == null ^ Object2.MobNum == null )
			{
				equal = false;
			}
			if ( Object1.EMail != null && Object2.EMail != null )
			{
				if (Object1.EMail != Object2.EMail)
					equal = false;
			}
			else if (Object1.EMail == null ^ Object2.EMail == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeIdentTypeId != null && Object2.GsCodeIdentTypeId != null )
			{
				if (Object1.GsCodeIdentTypeId != Object2.GsCodeIdentTypeId)
					equal = false;
			}
			else if (Object1.GsCodeIdentTypeId == null ^ Object2.GsCodeIdentTypeId == null )
			{
				equal = false;
			}
			if ( Object1.AdminJobFlg != null && Object2.AdminJobFlg != null )
			{
				if (Object1.AdminJobFlg != Object2.AdminJobFlg)
					equal = false;
			}
			else if (Object1.AdminJobFlg == null ^ Object2.AdminJobFlg == null )
			{
				equal = false;
			}
			if ( Object1.SaCdeAdminJobId != null && Object2.SaCdeAdminJobId != null )
			{
				if (Object1.SaCdeAdminJobId != Object2.SaCdeAdminJobId)
					equal = false;
			}
			else if (Object1.SaCdeAdminJobId == null ^ Object2.SaCdeAdminJobId == null )
			{
				equal = false;
			}
			if ( Object1.AdminJobLoad != null && Object2.AdminJobLoad != null )
			{
				if (Object1.AdminJobLoad != Object2.AdminJobLoad)
					equal = false;
			}
			else if (Object1.AdminJobLoad == null ^ Object2.AdminJobLoad == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((SaStfMemberBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static SaStfMemberComparer GetComparer()
        {
            return new SaStfMemberComparer();
        }
        */

        // Comparer delegates back to SaStfMember
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(SaStfMember rhs, SaStfMemberColumn which)
        {
            switch (which)
            {
            	
            	
            	case SaStfMemberColumn.SaStfMemberId:
            		return this.SaStfMemberId.CompareTo(rhs.SaStfMemberId);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfCode:
            		return this.StfCode.CompareTo(rhs.StfCode);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfFullNameAr:
            		return this.StfFullNameAr.CompareTo(rhs.StfFullNameAr);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfFullNameEn:
            		return this.StfFullNameEn.CompareTo(rhs.StfFullNameEn);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.AsNodeId:
            		return this.AsNodeId.Value.CompareTo(rhs.AsNodeId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.AsFacultyInfoId:
            		return this.AsFacultyInfoId.Value.CompareTo(rhs.AsFacultyInfoId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.SaCodeJobStatusId:
            		return this.SaCodeJobStatusId.Value.CompareTo(rhs.SaCodeJobStatusId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.SaCodeScDegId:
            		return this.SaCodeScDegId.Value.CompareTo(rhs.SaCodeScDegId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfNameAr:
            		return this.StfNameAr.CompareTo(rhs.StfNameAr);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfClFullNameAr:
            		return this.StfClFullNameAr.CompareTo(rhs.StfClFullNameAr);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfClNameAr:
            		return this.StfClNameAr.CompareTo(rhs.StfClNameAr);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfLnameAr:
            		return this.StfLnameAr.CompareTo(rhs.StfLnameAr);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfClLnameAr:
            		return this.StfClLnameAr.CompareTo(rhs.StfClLnameAr);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfFnameEn:
            		return this.StfFnameEn.CompareTo(rhs.StfFnameEn);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfLnameEn:
            		return this.StfLnameEn.CompareTo(rhs.StfLnameEn);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfIsAzhary:
            		return this.StfIsAzhary.CompareTo(rhs.StfIsAzhary);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.FileNum:
            		return this.FileNum.CompareTo(rhs.FileNum);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfStatusNum:
            		return this.StfStatusNum.CompareTo(rhs.StfStatusNum);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfNationalIdNum:
            		return this.StfNationalIdNum.CompareTo(rhs.StfNationalIdNum);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfDob:
            		return this.StfDob.Value.CompareTo(rhs.StfDob.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfRegNum:
            		return this.StfRegNum.CompareTo(rhs.StfRegNum);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfRegDate:
            		return this.StfRegDate.Value.CompareTo(rhs.StfRegDate.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfMname:
            		return this.StfMname.CompareTo(rhs.StfMname);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfPermAdd:
            		return this.StfPermAdd.CompareTo(rhs.StfPermAdd);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfCurrAdd:
            		return this.StfCurrAdd.CompareTo(rhs.StfCurrAdd);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfEmpDate:
            		return this.StfEmpDate.Value.CompareTo(rhs.StfEmpDate.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.GsCodeGenderId:
            		return this.GsCodeGenderId.Value.CompareTo(rhs.GsCodeGenderId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.GsCodeReligionId:
            		return this.GsCodeReligionId.Value.CompareTo(rhs.GsCodeReligionId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.GsCodeMaritalStateId:
            		return this.GsCodeMaritalStateId.Value.CompareTo(rhs.GsCodeMaritalStateId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.GsCountryInfoId:
            		return this.GsCountryInfoId.Value.CompareTo(rhs.GsCountryInfoId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.GsCountryInfoId2:
            		return this.GsCountryInfoId2.Value.CompareTo(rhs.GsCountryInfoId2.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.GsCountryNodeId:
            		return this.GsCountryNodeId.Value.CompareTo(rhs.GsCountryNodeId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.GsCountryNodeId2:
            		return this.GsCountryNodeId2.Value.CompareTo(rhs.GsCountryNodeId2.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.GsCountryNodeId3:
            		return this.GsCountryNodeId3.Value.CompareTo(rhs.GsCountryNodeId3.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.GsContactMethodHId:
            		return this.GsContactMethodHId.Value.CompareTo(rhs.GsContactMethodHId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.StfPhoto:
            		return this.StfPhoto.CompareTo(rhs.StfPhoto);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.BasicSalary:
            		return this.BasicSalary.Value.CompareTo(rhs.BasicSalary.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.PgThesisGeneralSpecId:
            		return this.PgThesisGeneralSpecId.Value.CompareTo(rhs.PgThesisGeneralSpecId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.PgThesisDetailedSpecId:
            		return this.PgThesisDetailedSpecId.Value.CompareTo(rhs.PgThesisDetailedSpecId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.DelFlag:
            		return this.DelFlag.CompareTo(rhs.DelFlag);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.RetirmentAge:
            		return this.RetirmentAge.CompareTo(rhs.RetirmentAge);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.OldStfMemberId:
            		return this.OldStfMemberId.Value.CompareTo(rhs.OldStfMemberId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.EmailPassword:
            		return this.EmailPassword.CompareTo(rhs.EmailPassword);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.TelNum:
            		return this.TelNum.CompareTo(rhs.TelNum);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.MobNum:
            		return this.MobNum.CompareTo(rhs.MobNum);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.EMail:
            		return this.EMail.CompareTo(rhs.EMail);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.GsCodeIdentTypeId:
            		return this.GsCodeIdentTypeId.Value.CompareTo(rhs.GsCodeIdentTypeId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.AdminJobFlg:
            		return this.AdminJobFlg.Value.CompareTo(rhs.AdminJobFlg.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.SaCdeAdminJobId:
            		return this.SaCdeAdminJobId.Value.CompareTo(rhs.SaCdeAdminJobId.Value);
            		
            		                 
            	
            	
            	case SaStfMemberColumn.AdminJobLoad:
            		return this.AdminJobLoad.Value.CompareTo(rhs.AdminJobLoad.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<SaStfMemberKey> Members
		
		// member variable for the EntityId property
		private SaStfMemberKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual SaStfMemberKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new SaStfMemberKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("SaStfMember")
					.Append("|").Append( this.SaStfMemberId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{51}{50}- SaStfMemberId: {0}{50}- StfCode: {1}{50}- StfFullNameAr: {2}{50}- StfFullNameEn: {3}{50}- AsNodeId: {4}{50}- AsFacultyInfoId: {5}{50}- SaCodeJobStatusId: {6}{50}- SaCodeScDegId: {7}{50}- StfNameAr: {8}{50}- StfClFullNameAr: {9}{50}- StfClNameAr: {10}{50}- StfLnameAr: {11}{50}- StfClLnameAr: {12}{50}- StfFnameEn: {13}{50}- StfLnameEn: {14}{50}- StfIsAzhary: {15}{50}- FileNum: {16}{50}- StfStatusNum: {17}{50}- StfNationalIdNum: {18}{50}- StfDob: {19}{50}- StfRegNum: {20}{50}- StfRegDate: {21}{50}- StfMname: {22}{50}- StfPermAdd: {23}{50}- StfCurrAdd: {24}{50}- StfEmpDate: {25}{50}- GsCodeGenderId: {26}{50}- GsCodeReligionId: {27}{50}- GsCodeMaritalStateId: {28}{50}- GsCountryInfoId: {29}{50}- GsCountryInfoId2: {30}{50}- GsCountryNodeId: {31}{50}- GsCountryNodeId2: {32}{50}- GsCountryNodeId3: {33}{50}- GsContactMethodHId: {34}{50}- StfPhoto: {35}{50}- BasicSalary: {36}{50}- PgThesisGeneralSpecId: {37}{50}- PgThesisDetailedSpecId: {38}{50}- DelFlag: {39}{50}- RetirmentAge: {40}{50}- OldStfMemberId: {41}{50}- EmailPassword: {42}{50}- TelNum: {43}{50}- MobNum: {44}{50}- EMail: {45}{50}- GsCodeIdentTypeId: {46}{50}- AdminJobFlg: {47}{50}- SaCdeAdminJobId: {48}{50}- AdminJobLoad: {49}{50}{52}", 
				this.SaStfMemberId,
				(this.StfCode == null) ? string.Empty : this.StfCode.ToString(),
				(this.StfFullNameAr == null) ? string.Empty : this.StfFullNameAr.ToString(),
				(this.StfFullNameEn == null) ? string.Empty : this.StfFullNameEn.ToString(),
				(this.AsNodeId == null) ? string.Empty : this.AsNodeId.ToString(),
				(this.AsFacultyInfoId == null) ? string.Empty : this.AsFacultyInfoId.ToString(),
				(this.SaCodeJobStatusId == null) ? string.Empty : this.SaCodeJobStatusId.ToString(),
				(this.SaCodeScDegId == null) ? string.Empty : this.SaCodeScDegId.ToString(),
				(this.StfNameAr == null) ? string.Empty : this.StfNameAr.ToString(),
				(this.StfClFullNameAr == null) ? string.Empty : this.StfClFullNameAr.ToString(),
				(this.StfClNameAr == null) ? string.Empty : this.StfClNameAr.ToString(),
				(this.StfLnameAr == null) ? string.Empty : this.StfLnameAr.ToString(),
				(this.StfClLnameAr == null) ? string.Empty : this.StfClLnameAr.ToString(),
				(this.StfFnameEn == null) ? string.Empty : this.StfFnameEn.ToString(),
				(this.StfLnameEn == null) ? string.Empty : this.StfLnameEn.ToString(),
				this.StfIsAzhary,
				(this.FileNum == null) ? string.Empty : this.FileNum.ToString(),
				(this.StfStatusNum == null) ? string.Empty : this.StfStatusNum.ToString(),
				(this.StfNationalIdNum == null) ? string.Empty : this.StfNationalIdNum.ToString(),
				(this.StfDob == null) ? string.Empty : this.StfDob.ToString(),
				(this.StfRegNum == null) ? string.Empty : this.StfRegNum.ToString(),
				(this.StfRegDate == null) ? string.Empty : this.StfRegDate.ToString(),
				(this.StfMname == null) ? string.Empty : this.StfMname.ToString(),
				(this.StfPermAdd == null) ? string.Empty : this.StfPermAdd.ToString(),
				(this.StfCurrAdd == null) ? string.Empty : this.StfCurrAdd.ToString(),
				(this.StfEmpDate == null) ? string.Empty : this.StfEmpDate.ToString(),
				(this.GsCodeGenderId == null) ? string.Empty : this.GsCodeGenderId.ToString(),
				(this.GsCodeReligionId == null) ? string.Empty : this.GsCodeReligionId.ToString(),
				(this.GsCodeMaritalStateId == null) ? string.Empty : this.GsCodeMaritalStateId.ToString(),
				(this.GsCountryInfoId == null) ? string.Empty : this.GsCountryInfoId.ToString(),
				(this.GsCountryInfoId2 == null) ? string.Empty : this.GsCountryInfoId2.ToString(),
				(this.GsCountryNodeId == null) ? string.Empty : this.GsCountryNodeId.ToString(),
				(this.GsCountryNodeId2 == null) ? string.Empty : this.GsCountryNodeId2.ToString(),
				(this.GsCountryNodeId3 == null) ? string.Empty : this.GsCountryNodeId3.ToString(),
				(this.GsContactMethodHId == null) ? string.Empty : this.GsContactMethodHId.ToString(),
				(this.StfPhoto == null) ? string.Empty : this.StfPhoto.ToString(),
				(this.BasicSalary == null) ? string.Empty : this.BasicSalary.ToString(),
				(this.PgThesisGeneralSpecId == null) ? string.Empty : this.PgThesisGeneralSpecId.ToString(),
				(this.PgThesisDetailedSpecId == null) ? string.Empty : this.PgThesisDetailedSpecId.ToString(),
				this.DelFlag,
				this.RetirmentAge,
				(this.OldStfMemberId == null) ? string.Empty : this.OldStfMemberId.ToString(),
				(this.EmailPassword == null) ? string.Empty : this.EmailPassword.ToString(),
				(this.TelNum == null) ? string.Empty : this.TelNum.ToString(),
				(this.MobNum == null) ? string.Empty : this.MobNum.ToString(),
				(this.EMail == null) ? string.Empty : this.EMail.ToString(),
				(this.GsCodeIdentTypeId == null) ? string.Empty : this.GsCodeIdentTypeId.ToString(),
				(this.AdminJobFlg == null) ? string.Empty : this.AdminJobFlg.ToString(),
				(this.SaCdeAdminJobId == null) ? string.Empty : this.SaCdeAdminJobId.ToString(),
				(this.AdminJobLoad == null) ? string.Empty : this.AdminJobLoad.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'SA_STF_MEMBER' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class SaStfMemberEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// SA_STF_MEMBER_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "SA_STF_MEMBER"</remarks>
		public System.Decimal SaStfMemberId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalSaStfMemberId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// STF_CODE : 
		/// </summary>
		public System.String		  StfCode = null;
		
		/// <summary>
		/// STF_FULL_NAME_AR : 
		/// </summary>
		public System.String		  StfFullNameAr = null;
		
		/// <summary>
		/// STF_FULL_NAME_EN : 
		/// </summary>
		public System.String		  StfFullNameEn = null;
		
		/// <summary>
		/// AS_NODE_ID : 
		/// </summary>
		public System.Decimal?		  AsNodeId = null;
		
		/// <summary>
		/// AS_FACULTY_INFO_ID : 
		/// </summary>
		public System.Decimal?		  AsFacultyInfoId = null;
		
		/// <summary>
		/// SA_CODE_JOB_STATUS_ID : 
		/// </summary>
		public System.Decimal?		  SaCodeJobStatusId = null;
		
		/// <summary>
		/// SA_CODE_SC_DEG_ID : 
		/// </summary>
		public System.Decimal?		  SaCodeScDegId = null;
		
		/// <summary>
		/// STF_NAME_AR : 
		/// </summary>
		public System.String		  StfNameAr = null;
		
		/// <summary>
		/// STF_CL_FULL_NAME_AR : 
		/// </summary>
		public System.String		  StfClFullNameAr = null;
		
		/// <summary>
		/// STF_CL_NAME_AR : 
		/// </summary>
		public System.String		  StfClNameAr = null;
		
		/// <summary>
		/// STF_LNAME_AR : 
		/// </summary>
		public System.String		  StfLnameAr = null;
		
		/// <summary>
		/// STF_CL_LNAME_AR : 
		/// </summary>
		public System.String		  StfClLnameAr = null;
		
		/// <summary>
		/// STF_FNAME_EN : 
		/// </summary>
		public System.String		  StfFnameEn = null;
		
		/// <summary>
		/// STF_LNAME_EN : 
		/// </summary>
		public System.String		  StfLnameEn = null;
		
		/// <summary>
		/// STF_IS_AZHARY : 
		/// </summary>
		public System.Decimal		  StfIsAzhary = 0.0m;
		
		/// <summary>
		/// FILE_NUM : 
		/// </summary>
		public System.String		  FileNum = null;
		
		/// <summary>
		/// STF_STATUS_NUM : 
		/// </summary>
		public System.String		  StfStatusNum = null;
		
		/// <summary>
		/// STF_NATIONAL_ID_NUM : 
		/// </summary>
		public System.String		  StfNationalIdNum = null;
		
		/// <summary>
		/// STF_DOB : 
		/// </summary>
		public System.DateTime?		  StfDob = null;
		
		/// <summary>
		/// STF_REG_NUM : 
		/// </summary>
		public System.String		  StfRegNum = null;
		
		/// <summary>
		/// STF_REG_DATE : 
		/// </summary>
		public System.DateTime?		  StfRegDate = null;
		
		/// <summary>
		/// STF_MNAME : 
		/// </summary>
		public System.String		  StfMname = null;
		
		/// <summary>
		/// STF_PERM_ADD : 
		/// </summary>
		public System.String		  StfPermAdd = null;
		
		/// <summary>
		/// STF_CURR_ADD : 
		/// </summary>
		public System.String		  StfCurrAdd = null;
		
		/// <summary>
		/// STF_EMP_DATE : 
		/// </summary>
		public System.DateTime?		  StfEmpDate = null;
		
		/// <summary>
		/// GS_CODE_GENDER_ID : 
		/// </summary>
		public System.Decimal?		  GsCodeGenderId = null;
		
		/// <summary>
		/// GS_CODE_RELIGION_ID : 
		/// </summary>
		public System.Decimal?		  GsCodeReligionId = null;
		
		/// <summary>
		/// GS_CODE_MARITAL_STATE_ID : 
		/// </summary>
		public System.Decimal?		  GsCodeMaritalStateId = null;
		
		/// <summary>
		/// GS_COUNTRY_INFO_ID : 
		/// </summary>
		public System.Decimal?		  GsCountryInfoId = null;
		
		/// <summary>
		/// GS_COUNTRY_INFO_ID2 : 
		/// </summary>
		public System.Decimal?		  GsCountryInfoId2 = null;
		
		/// <summary>
		/// GS_COUNTRY_NODE_ID : 
		/// </summary>
		public System.Decimal?		  GsCountryNodeId = null;
		
		/// <summary>
		/// GS_COUNTRY_NODE_ID2 : 
		/// </summary>
		public System.Decimal?		  GsCountryNodeId2 = null;
		
		/// <summary>
		/// GS_COUNTRY_NODE_ID3 : 
		/// </summary>
		public System.Decimal?		  GsCountryNodeId3 = null;
		
		/// <summary>
		/// GS_CONTACT_METHOD_H_ID : 
		/// </summary>
		public System.Decimal?		  GsContactMethodHId = null;
		
		/// <summary>
		/// STF_PHOTO : 
		/// </summary>
		public System.String		  StfPhoto = null;
		
		/// <summary>
		/// BASIC_SALARY : 
		/// </summary>
		public System.Decimal?		  BasicSalary = null;
		
		/// <summary>
		/// PG_THESIS_GENERAL_SPEC_ID : 
		/// </summary>
		public System.Decimal?		  PgThesisGeneralSpecId = null;
		
		/// <summary>
		/// PG_THESIS_DETAILED_SPEC_ID : 
		/// </summary>
		public System.Decimal?		  PgThesisDetailedSpecId = null;
		
		/// <summary>
		/// DEL_FLAG : 
		/// </summary>
		public System.Decimal		  DelFlag = 0.0m;
		
		/// <summary>
		/// RETIRMENT_AGE : 
		/// </summary>
		public System.Decimal		  RetirmentAge = 0.0m;
		
		/// <summary>
		/// OLD_STF_MEMBER_ID : 
		/// </summary>
		public System.Decimal?		  OldStfMemberId = null;
		
		/// <summary>
		/// EMAIL_PASSWORD : 
		/// </summary>
		public System.String		  EmailPassword = null;
		
		/// <summary>
		/// TEL_NUM : 
		/// </summary>
		public System.String		  TelNum = null;
		
		/// <summary>
		/// MOB_NUM : 
		/// </summary>
		public System.String		  MobNum = null;
		
		/// <summary>
		/// E_MAIL : 
		/// </summary>
		public System.String		  EMail = null;
		
		/// <summary>
		/// GS_CODE_IDENT_TYPE_ID : 
		/// </summary>
		public System.Decimal?		  GsCodeIdentTypeId = null;
		
		/// <summary>
		/// ADMIN_JOB_FLG : 
		/// </summary>
		public System.Boolean?		  AdminJobFlg = null;
		
		/// <summary>
		/// SA_CDE_ADMIN_JOB_ID : 
		/// </summary>
		public System.Int32?		  SaCdeAdminJobId = null;
		
		/// <summary>
		/// ADMIN_JOB_LOAD : default=3
		/// </summary>
		public System.Decimal?		  AdminJobLoad = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private GsContactMethodH _gsContactMethodHidSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsContactMethodH"/>.
		/// </summary>
		/// <value>The source GsContactMethodH for GsContactMethodHId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsContactMethodH GsContactMethodHIdSource
      	{
            get { return this._gsContactMethodHidSource; }
            set { this._gsContactMethodHidSource = value; }
      	}
		private PgThesisGeneralSpec _pgThesisGeneralSpecIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="PgThesisGeneralSpec"/>.
		/// </summary>
		/// <value>The source PgThesisGeneralSpec for PgThesisGeneralSpecId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual PgThesisGeneralSpec PgThesisGeneralSpecIdSource
      	{
            get { return this._pgThesisGeneralSpecIdSource; }
            set { this._pgThesisGeneralSpecIdSource = value; }
      	}
		private AsFacultyInfo _asFacultyInfoIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AsFacultyInfo"/>.
		/// </summary>
		/// <value>The source AsFacultyInfo for AsFacultyInfoId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AsFacultyInfo AsFacultyInfoIdSource
      	{
            get { return this._asFacultyInfoIdSource; }
            set { this._asFacultyInfoIdSource = value; }
      	}
		private EntityMain _asNodeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EntityMain"/>.
		/// </summary>
		/// <value>The source EntityMain for AsNodeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EntityMain AsNodeIdSource
      	{
            get { return this._asNodeIdSource; }
            set { this._asNodeIdSource = value; }
      	}
		private GsCdeMaritalStatus _gsCodeMaritalStateIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeMaritalStatus"/>.
		/// </summary>
		/// <value>The source GsCdeMaritalStatus for GsCodeMaritalStateId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeMaritalStatus GsCodeMaritalStateIdSource
      	{
            get { return this._gsCodeMaritalStateIdSource; }
            set { this._gsCodeMaritalStateIdSource = value; }
      	}
		private GsCodeGender _gsCodeGenderIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeGender"/>.
		/// </summary>
		/// <value>The source GsCodeGender for GsCodeGenderId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeGender GsCodeGenderIdSource
      	{
            get { return this._gsCodeGenderIdSource; }
            set { this._gsCodeGenderIdSource = value; }
      	}
		private GsCodeIdentType _gsCodeIdentTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeIdentType"/>.
		/// </summary>
		/// <value>The source GsCodeIdentType for GsCodeIdentTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeIdentType GsCodeIdentTypeIdSource
      	{
            get { return this._gsCodeIdentTypeIdSource; }
            set { this._gsCodeIdentTypeIdSource = value; }
      	}
		private GsCodeReligion _gsCodeReligionIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeReligion"/>.
		/// </summary>
		/// <value>The source GsCodeReligion for GsCodeReligionId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeReligion GsCodeReligionIdSource
      	{
            get { return this._gsCodeReligionIdSource; }
            set { this._gsCodeReligionIdSource = value; }
      	}
		private GsCountryNode _gsCountryNodeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryNodeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCountryNode GsCountryNodeIdSource
      	{
            get { return this._gsCountryNodeIdSource; }
            set { this._gsCountryNodeIdSource = value; }
      	}
		private GsCountryNode _gsCountryInfoIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryInfoId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCountryNode GsCountryInfoIdSource
      	{
            get { return this._gsCountryInfoIdSource; }
            set { this._gsCountryInfoIdSource = value; }
      	}
		private PgThesisDetailedSpec _pgThesisDetailedSpecIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="PgThesisDetailedSpec"/>.
		/// </summary>
		/// <value>The source PgThesisDetailedSpec for PgThesisDetailedSpecId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual PgThesisDetailedSpec PgThesisDetailedSpecIdSource
      	{
            get { return this._pgThesisDetailedSpecIdSource; }
            set { this._pgThesisDetailedSpecIdSource = value; }
      	}
		private SaCdeAdminJob _saCdeAdminJobIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SaCdeAdminJob"/>.
		/// </summary>
		/// <value>The source SaCdeAdminJob for SaCdeAdminJobId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SaCdeAdminJob SaCdeAdminJobIdSource
      	{
            get { return this._saCdeAdminJobIdSource; }
            set { this._saCdeAdminJobIdSource = value; }
      	}
		private SaCodeJobStatus _saCodeJobStatusIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SaCodeJobStatus"/>.
		/// </summary>
		/// <value>The source SaCodeJobStatus for SaCodeJobStatusId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SaCodeJobStatus SaCodeJobStatusIdSource
      	{
            get { return this._saCodeJobStatusIdSource; }
            set { this._saCodeJobStatusIdSource = value; }
      	}
		private SaCodeScDeg _saCodeScDegIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SaCodeScDeg"/>.
		/// </summary>
		/// <value>The source SaCodeScDeg for SaCodeScDegId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SaCodeScDeg SaCodeScDegIdSource
      	{
            get { return this._saCodeScDegIdSource; }
            set { this._saCodeScDegIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region SvStaffPollCollection
		
		private TList<SvStaffPoll> _svStaffPollSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStaffPollSaStfMemberId
		/// </summary>
		
		public TList<SvStaffPoll> SvStaffPollCollection
		{
			get
			{
				if (_svStaffPollSaStfMemberId == null)
				{
				_svStaffPollSaStfMemberId = new TList<SvStaffPoll>();
				}
	
				return _svStaffPollSaStfMemberId;
			}
			set { _svStaffPollSaStfMemberId = value; }
		}
		
		#endregion

		#region SaJobStoppageCollection
		
		private TList<SaJobStoppage> _saJobStoppageSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saJobStoppageSaStfMemberId
		/// </summary>
		
		public TList<SaJobStoppage> SaJobStoppageCollection
		{
			get
			{
				if (_saJobStoppageSaStfMemberId == null)
				{
				_saJobStoppageSaStfMemberId = new TList<SaJobStoppage>();
				}
	
				return _saJobStoppageSaStfMemberId;
			}
			set { _saJobStoppageSaStfMemberId = value; }
		}
		
		#endregion

		#region SaFinStatmentCollection
		
		private TList<SaFinStatment> _saFinStatmentSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saFinStatmentSaStfMemberId
		/// </summary>
		
		public TList<SaFinStatment> SaFinStatmentCollection
		{
			get
			{
				if (_saFinStatmentSaStfMemberId == null)
				{
				_saFinStatmentSaStfMemberId = new TList<SaFinStatment>();
				}
	
				return _saFinStatmentSaStfMemberId;
			}
			set { _saFinStatmentSaStfMemberId = value; }
		}
		
		#endregion

		#region EdOfferingCourseCollection
		
		private TList<EdOfferingCourse> _edOfferingCourseSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edOfferingCourseSaStfMemberId
		/// </summary>
		
		public TList<EdOfferingCourse> EdOfferingCourseCollection
		{
			get
			{
				if (_edOfferingCourseSaStfMemberId == null)
				{
				_edOfferingCourseSaStfMemberId = new TList<EdOfferingCourse>();
				}
	
				return _edOfferingCourseSaStfMemberId;
			}
			set { _edOfferingCourseSaStfMemberId = value; }
		}
		
		#endregion

		#region SaStfAttendCollection
		
		private TList<SaStfAttend> _saStfAttendSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saStfAttendSaStfMemberId
		/// </summary>
		
		public TList<SaStfAttend> SaStfAttendCollection
		{
			get
			{
				if (_saStfAttendSaStfMemberId == null)
				{
				_saStfAttendSaStfMemberId = new TList<SaStfAttend>();
				}
	
				return _saStfAttendSaStfMemberId;
			}
			set { _saStfAttendSaStfMemberId = value; }
		}
		
		#endregion

		#region CoExaminerCorectorCollection
		
		private TList<CoExaminerCorector> _coExaminerCorectorSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coExaminerCorectorSaStfMemberId
		/// </summary>
		
		public TList<CoExaminerCorector> CoExaminerCorectorCollection
		{
			get
			{
				if (_coExaminerCorectorSaStfMemberId == null)
				{
				_coExaminerCorectorSaStfMemberId = new TList<CoExaminerCorector>();
				}
	
				return _coExaminerCorectorSaStfMemberId;
			}
			set { _coExaminerCorectorSaStfMemberId = value; }
		}
		
		#endregion

		#region SaVacationBalanceCollection
		
		private TList<SaVacationBalance> _saVacationBalanceSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saVacationBalanceSaStfMemberId
		/// </summary>
		
		public TList<SaVacationBalance> SaVacationBalanceCollection
		{
			get
			{
				if (_saVacationBalanceSaStfMemberId == null)
				{
				_saVacationBalanceSaStfMemberId = new TList<SaVacationBalance>();
				}
	
				return _saVacationBalanceSaStfMemberId;
			}
			set { _saVacationBalanceSaStfMemberId = value; }
		}
		
		#endregion

		#region SaResearchTeamCollection
		
		private TList<SaResearchTeam> _saResearchTeamSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saResearchTeamSaStfMemberId
		/// </summary>
		
		public TList<SaResearchTeam> SaResearchTeamCollection
		{
			get
			{
				if (_saResearchTeamSaStfMemberId == null)
				{
				_saResearchTeamSaStfMemberId = new TList<SaResearchTeam>();
				}
	
				return _saResearchTeamSaStfMemberId;
			}
			set { _saResearchTeamSaStfMemberId = value; }
		}
		
		#endregion

		#region SaEmploymentCollection
		
		private TList<SaEmployment> _saEmploymentSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saEmploymentSaStfMemberId
		/// </summary>
		
		public TList<SaEmployment> SaEmploymentCollection
		{
			get
			{
				if (_saEmploymentSaStfMemberId == null)
				{
				_saEmploymentSaStfMemberId = new TList<SaEmployment>();
				}
	
				return _saEmploymentSaStfMemberId;
			}
			set { _saEmploymentSaStfMemberId = value; }
		}
		
		#endregion

		#region SaScQualCollection
		
		private TList<SaScQual> _saScQualSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saScQualSaStfMemberId
		/// </summary>
		
		public TList<SaScQual> SaScQualCollection
		{
			get
			{
				if (_saScQualSaStfMemberId == null)
				{
				_saScQualSaStfMemberId = new TList<SaScQual>();
				}
	
				return _saScQualSaStfMemberId;
			}
			set { _saScQualSaStfMemberId = value; }
		}
		
		#endregion

		#region CoControlMemberCollection
		
		private TList<CoControlMember> _coControlMemberSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coControlMemberSaStfMemberId
		/// </summary>
		
		public TList<CoControlMember> CoControlMemberCollection
		{
			get
			{
				if (_coControlMemberSaStfMemberId == null)
				{
				_coControlMemberSaStfMemberId = new TList<CoControlMember>();
				}
	
				return _coControlMemberSaStfMemberId;
			}
			set { _coControlMemberSaStfMemberId = value; }
		}
		
		#endregion

		#region GsCommStaffCollection
		
		private TList<GsCommStaff> _gsCommStaffSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _gsCommStaffSaStfMemberId
		/// </summary>
		
		public TList<GsCommStaff> GsCommStaffCollection
		{
			get
			{
				if (_gsCommStaffSaStfMemberId == null)
				{
				_gsCommStaffSaStfMemberId = new TList<GsCommStaff>();
				}
	
				return _gsCommStaffSaStfMemberId;
			}
			set { _gsCommStaffSaStfMemberId = value; }
		}
		
		#endregion

		#region SaSupervisingJobsCollection
		
		private TList<SaSupervisingJobs> _saSupervisingJobsSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saSupervisingJobsSaStfMemberId
		/// </summary>
		
		public TList<SaSupervisingJobs> SaSupervisingJobsCollection
		{
			get
			{
				if (_saSupervisingJobsSaStfMemberId == null)
				{
				_saSupervisingJobsSaStfMemberId = new TList<SaSupervisingJobs>();
				}
	
				return _saSupervisingJobsSaStfMemberId;
			}
			set { _saSupervisingJobsSaStfMemberId = value; }
		}
		
		#endregion

		#region AdmAppInterviewExamCollection
		
		private TList<AdmAppInterviewExam> _admAppInterviewExamSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppInterviewExamSaStfMemberId
		/// </summary>
		
		public TList<AdmAppInterviewExam> AdmAppInterviewExamCollection
		{
			get
			{
				if (_admAppInterviewExamSaStfMemberId == null)
				{
				_admAppInterviewExamSaStfMemberId = new TList<AdmAppInterviewExam>();
				}
	
				return _admAppInterviewExamSaStfMemberId;
			}
			set { _admAppInterviewExamSaStfMemberId = value; }
		}
		
		#endregion

		#region EdEmployeeQualCollection
		
		private TList<EdEmployeeQual> _edEmployeeQualSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edEmployeeQualSaStfMemberId
		/// </summary>
		
		public TList<EdEmployeeQual> EdEmployeeQualCollection
		{
			get
			{
				if (_edEmployeeQualSaStfMemberId == null)
				{
				_edEmployeeQualSaStfMemberId = new TList<EdEmployeeQual>();
				}
	
				return _edEmployeeQualSaStfMemberId;
			}
			set { _edEmployeeQualSaStfMemberId = value; }
		}
		
		#endregion

		#region SaStfSummeryTransCollection
		
		private TList<SaStfSummeryTrans> _saStfSummeryTransSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saStfSummeryTransSaStfMemberId
		/// </summary>
		
		public TList<SaStfSummeryTrans> SaStfSummeryTransCollection
		{
			get
			{
				if (_saStfSummeryTransSaStfMemberId == null)
				{
				_saStfSummeryTransSaStfMemberId = new TList<SaStfSummeryTrans>();
				}
	
				return _saStfSummeryTransSaStfMemberId;
			}
			set { _saStfSummeryTransSaStfMemberId = value; }
		}
		
		#endregion

		#region ScScheduleDtlExtStfCollection
		
		private TList<ScScheduleDtlExtStf> _scScheduleDtlExtStfSaStfMamberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scScheduleDtlExtStfSaStfMamberId
		/// </summary>
		
		public TList<ScScheduleDtlExtStf> ScScheduleDtlExtStfCollection
		{
			get
			{
				if (_scScheduleDtlExtStfSaStfMamberId == null)
				{
				_scScheduleDtlExtStfSaStfMamberId = new TList<ScScheduleDtlExtStf>();
				}
	
				return _scScheduleDtlExtStfSaStfMamberId;
			}
			set { _scScheduleDtlExtStfSaStfMamberId = value; }
		}
		
		#endregion

		#region EdGuardCollection
		
		private TList<EdGuard> _edGuardSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edGuardSaStfMemberId
		/// </summary>
		
		public TList<EdGuard> EdGuardCollection
		{
			get
			{
				if (_edGuardSaStfMemberId == null)
				{
				_edGuardSaStfMemberId = new TList<EdGuard>();
				}
	
				return _edGuardSaStfMemberId;
			}
			set { _edGuardSaStfMemberId = value; }
		}
		
		#endregion

		#region EdStudAcadmicAdvCollection
		
		private TList<EdStudAcadmicAdv> _edStudAcadmicAdvSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAcadmicAdvSaStfMemberId
		/// </summary>
		
		public TList<EdStudAcadmicAdv> EdStudAcadmicAdvCollection
		{
			get
			{
				if (_edStudAcadmicAdvSaStfMemberId == null)
				{
				_edStudAcadmicAdvSaStfMemberId = new TList<EdStudAcadmicAdv>();
				}
	
				return _edStudAcadmicAdvSaStfMemberId;
			}
			set { _edStudAcadmicAdvSaStfMemberId = value; }
		}
		
		#endregion

		#region SaRaiseCollection
		
		private TList<SaRaise> _saRaiseSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saRaiseSaStfMemberId
		/// </summary>
		
		public TList<SaRaise> SaRaiseCollection
		{
			get
			{
				if (_saRaiseSaStfMemberId == null)
				{
				_saRaiseSaStfMemberId = new TList<SaRaise>();
				}
	
				return _saRaiseSaStfMemberId;
			}
			set { _saRaiseSaStfMemberId = value; }
		}
		
		#endregion

		#region SaPunishmentCollection
		
		private TList<SaPunishment> _saPunishmentSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saPunishmentSaStfMemberId
		/// </summary>
		
		public TList<SaPunishment> SaPunishmentCollection
		{
			get
			{
				if (_saPunishmentSaStfMemberId == null)
				{
				_saPunishmentSaStfMemberId = new TList<SaPunishment>();
				}
	
				return _saPunishmentSaStfMemberId;
			}
			set { _saPunishmentSaStfMemberId = value; }
		}
		
		#endregion

		#region EdStudActvtyRegCollection
		
		private TList<EdStudActvtyReg> _edStudActvtyRegSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudActvtyRegSaStfMemberId
		/// </summary>
		
		public TList<EdStudActvtyReg> EdStudActvtyRegCollection
		{
			get
			{
				if (_edStudActvtyRegSaStfMemberId == null)
				{
				_edStudActvtyRegSaStfMemberId = new TList<EdStudActvtyReg>();
				}
	
				return _edStudActvtyRegSaStfMemberId;
			}
			set { _edStudActvtyRegSaStfMemberId = value; }
		}
		
		#endregion

		#region SaExperienceCollection
		
		private TList<SaExperience> _saExperienceSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saExperienceSaStfMemberId
		/// </summary>
		
		public TList<SaExperience> SaExperienceCollection
		{
			get
			{
				if (_saExperienceSaStfMemberId == null)
				{
				_saExperienceSaStfMemberId = new TList<SaExperience>();
				}
	
				return _saExperienceSaStfMemberId;
			}
			set { _saExperienceSaStfMemberId = value; }
		}
		
		#endregion

		#region SaEmpHierarchyCollection
		
		private TList<SaEmpHierarchy> _saEmpHierarchySaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saEmpHierarchySaStfMemberId
		/// </summary>
		
		public TList<SaEmpHierarchy> SaEmpHierarchyCollection
		{
			get
			{
				if (_saEmpHierarchySaStfMemberId == null)
				{
				_saEmpHierarchySaStfMemberId = new TList<SaEmpHierarchy>();
				}
	
				return _saEmpHierarchySaStfMemberId;
			}
			set { _saEmpHierarchySaStfMemberId = value; }
		}
		
		#endregion

		#region SvStudAskAdvReCollection
		
		private TList<SvStudAskAdvRe> _svStudAskAdvReSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudAskAdvReSaStfMemberId
		/// </summary>
		
		public TList<SvStudAskAdvRe> SvStudAskAdvReCollection
		{
			get
			{
				if (_svStudAskAdvReSaStfMemberId == null)
				{
				_svStudAskAdvReSaStfMemberId = new TList<SvStudAskAdvRe>();
				}
	
				return _svStudAskAdvReSaStfMemberId;
			}
			set { _svStudAskAdvReSaStfMemberId = value; }
		}
		
		#endregion

		#region SaPersonIdCollection
		
		private TList<SaPersonId> _saPersonIdSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saPersonIdSaStfMemberId
		/// </summary>
		
		public TList<SaPersonId> SaPersonIdCollection
		{
			get
			{
				if (_saPersonIdSaStfMemberId == null)
				{
				_saPersonIdSaStfMemberId = new TList<SaPersonId>();
				}
	
				return _saPersonIdSaStfMemberId;
			}
			set { _saPersonIdSaStfMemberId = value; }
		}
		
		#endregion

		#region EdStudEnrollChangeCollection
		
		private TList<EdStudEnrollChange> _edStudEnrollChangeSaStfMemApprovedById;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudEnrollChangeSaStfMemApprovedById
		/// </summary>
		
		public TList<EdStudEnrollChange> EdStudEnrollChangeCollection
		{
			get
			{
				if (_edStudEnrollChangeSaStfMemApprovedById == null)
				{
				_edStudEnrollChangeSaStfMemApprovedById = new TList<EdStudEnrollChange>();
				}
	
				return _edStudEnrollChangeSaStfMemApprovedById;
			}
			set { _edStudEnrollChangeSaStfMemApprovedById = value; }
		}
		
		#endregion

		#region SaMilitaryStatusCollection
		
		private TList<SaMilitaryStatus> _saMilitaryStatusSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saMilitaryStatusSaStfMemberId
		/// </summary>
		
		public TList<SaMilitaryStatus> SaMilitaryStatusCollection
		{
			get
			{
				if (_saMilitaryStatusSaStfMemberId == null)
				{
				_saMilitaryStatusSaStfMemberId = new TList<SaMilitaryStatus>();
				}
	
				return _saMilitaryStatusSaStfMemberId;
			}
			set { _saMilitaryStatusSaStfMemberId = value; }
		}
		
		#endregion

		#region SvStudStaffEvalExtCollection
		
		private TList<SvStudStaffEvalExt> _svStudStaffEvalExtSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudStaffEvalExtSaStfMemberId
		/// </summary>
		
		public TList<SvStudStaffEvalExt> SvStudStaffEvalExtCollection
		{
			get
			{
				if (_svStudStaffEvalExtSaStfMemberId == null)
				{
				_svStudStaffEvalExtSaStfMemberId = new TList<SvStudStaffEvalExt>();
				}
	
				return _svStudStaffEvalExtSaStfMemberId;
			}
			set { _svStudStaffEvalExtSaStfMemberId = value; }
		}
		
		#endregion

		#region SaJobStartStatmentCollection
		
		private TList<SaJobStartStatment> _saJobStartStatmentSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saJobStartStatmentSaStfMemberId
		/// </summary>
		
		public TList<SaJobStartStatment> SaJobStartStatmentCollection
		{
			get
			{
				if (_saJobStartStatmentSaStfMemberId == null)
				{
				_saJobStartStatmentSaStfMemberId = new TList<SaJobStartStatment>();
				}
	
				return _saJobStartStatmentSaStfMemberId;
			}
			set { _saJobStartStatmentSaStfMemberId = value; }
		}
		
		#endregion

		#region ScGroupStaffCollection
		
		private TList<ScGroupStaff> _scGroupStaffSaStfMamberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scGroupStaffSaStfMamberId
		/// </summary>
		
		public TList<ScGroupStaff> ScGroupStaffCollection
		{
			get
			{
				if (_scGroupStaffSaStfMamberId == null)
				{
				_scGroupStaffSaStfMamberId = new TList<ScGroupStaff>();
				}
	
				return _scGroupStaffSaStfMamberId;
			}
			set { _scGroupStaffSaStfMamberId = value; }
		}
		
		#endregion

		#region EdStudCollection
		
		private TList<EdStud> _edStudSaStfMemberPrntId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudSaStfMemberPrntId
		/// </summary>
		
		public TList<EdStud> EdStudCollection
		{
			get
			{
				if (_edStudSaStfMemberPrntId == null)
				{
				_edStudSaStfMemberPrntId = new TList<EdStud>();
				}
	
				return _edStudSaStfMemberPrntId;
			}
			set { _edStudSaStfMemberPrntId = value; }
		}
		
		#endregion

		#region SaTrainingCourseCollection
		
		private TList<SaTrainingCourse> _saTrainingCourseSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saTrainingCourseSaStfMemberId
		/// </summary>
		
		public TList<SaTrainingCourse> SaTrainingCourseCollection
		{
			get
			{
				if (_saTrainingCourseSaStfMemberId == null)
				{
				_saTrainingCourseSaStfMemberId = new TList<SaTrainingCourse>();
				}
	
				return _saTrainingCourseSaStfMemberId;
			}
			set { _saTrainingCourseSaStfMemberId = value; }
		}
		
		#endregion

		#region IntegUserAdLogDtlCollection
		
		private TList<IntegUserAdLogDtl> _integUserAdLogDtlSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _integUserAdLogDtlSaStfMemberId
		/// </summary>
		
		public TList<IntegUserAdLogDtl> IntegUserAdLogDtlCollection
		{
			get
			{
				if (_integUserAdLogDtlSaStfMemberId == null)
				{
				_integUserAdLogDtlSaStfMemberId = new TList<IntegUserAdLogDtl>();
				}
	
				return _integUserAdLogDtlSaStfMemberId;
			}
			set { _integUserAdLogDtlSaStfMemberId = value; }
		}
		
		#endregion

		#region EdAcdadvRmkCollection
		
		private TList<EdAcdadvRmk> _edAcdadvRmkSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edAcdadvRmkSaStfMemberId
		/// </summary>
		
		public TList<EdAcdadvRmk> EdAcdadvRmkCollection
		{
			get
			{
				if (_edAcdadvRmkSaStfMemberId == null)
				{
				_edAcdadvRmkSaStfMemberId = new TList<EdAcdadvRmk>();
				}
	
				return _edAcdadvRmkSaStfMemberId;
			}
			set { _edAcdadvRmkSaStfMemberId = value; }
		}
		
		#endregion

		#region SaMiltaryCollection
		
		private TList<SaMiltary> _saMiltarySaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saMiltarySaStfMemberId
		/// </summary>
		
		public TList<SaMiltary> SaMiltaryCollection
		{
			get
			{
				if (_saMiltarySaStfMemberId == null)
				{
				_saMiltarySaStfMemberId = new TList<SaMiltary>();
				}
	
				return _saMiltarySaStfMemberId;
			}
			set { _saMiltarySaStfMemberId = value; }
		}
		
		#endregion

		#region SaServTerminCollection
		
		private TList<SaServTermin> _saServTerminSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saServTerminSaStfMemberId
		/// </summary>
		
		public TList<SaServTermin> SaServTerminCollection
		{
			get
			{
				if (_saServTerminSaStfMemberId == null)
				{
				_saServTerminSaStfMemberId = new TList<SaServTermin>();
				}
	
				return _saServTerminSaStfMemberId;
			}
			set { _saServTerminSaStfMemberId = value; }
		}
		
		#endregion

		#region SaPromotionCollection
		
		private TList<SaPromotion> _saPromotionSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saPromotionSaStfMemberId
		/// </summary>
		
		public TList<SaPromotion> SaPromotionCollection
		{
			get
			{
				if (_saPromotionSaStfMemberId == null)
				{
				_saPromotionSaStfMemberId = new TList<SaPromotion>();
				}
	
				return _saPromotionSaStfMemberId;
			}
			set { _saPromotionSaStfMemberId = value; }
		}
		
		#endregion

		#region SvLecNoteCollection
		
		private TList<SvLecNote> _svLecNoteSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svLecNoteSaStfMemberId
		/// </summary>
		
		public TList<SvLecNote> SvLecNoteCollection
		{
			get
			{
				if (_svLecNoteSaStfMemberId == null)
				{
				_svLecNoteSaStfMemberId = new TList<SvLecNote>();
				}
	
				return _svLecNoteSaStfMemberId;
			}
			set { _svLecNoteSaStfMemberId = value; }
		}
		
		#endregion

		#region PgThesisStaffCollection
		
		private TList<PgThesisStaff> _pgThesisStaffSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisStaffSaStfMemberId
		/// </summary>
		
		public TList<PgThesisStaff> PgThesisStaffCollection
		{
			get
			{
				if (_pgThesisStaffSaStfMemberId == null)
				{
				_pgThesisStaffSaStfMemberId = new TList<PgThesisStaff>();
				}
	
				return _pgThesisStaffSaStfMemberId;
			}
			set { _pgThesisStaffSaStfMemberId = value; }
		}
		
		#endregion

		#region EdStudCourseGrdChngCollection
		
		private TList<EdStudCourseGrdChng> _edStudCourseGrdChngSaStfMemApprovedById;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseGrdChngSaStfMemApprovedById
		/// </summary>
		
		public TList<EdStudCourseGrdChng> EdStudCourseGrdChngCollection
		{
			get
			{
				if (_edStudCourseGrdChngSaStfMemApprovedById == null)
				{
				_edStudCourseGrdChngSaStfMemApprovedById = new TList<EdStudCourseGrdChng>();
				}
	
				return _edStudCourseGrdChngSaStfMemApprovedById;
			}
			set { _edStudCourseGrdChngSaStfMemApprovedById = value; }
		}
		
		#endregion

		#region EdStaffCoursePrefCollection
		
		private TList<EdStaffCoursePref> _edStaffCoursePrefSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStaffCoursePrefSaStfMemberId
		/// </summary>
		
		public TList<EdStaffCoursePref> EdStaffCoursePrefCollection
		{
			get
			{
				if (_edStaffCoursePrefSaStfMemberId == null)
				{
				_edStaffCoursePrefSaStfMemberId = new TList<EdStaffCoursePref>();
				}
	
				return _edStaffCoursePrefSaStfMemberId;
			}
			set { _edStaffCoursePrefSaStfMemberId = value; }
		}
		
		#endregion

		#region ScSchdlSlotStaffCollection
		
		private TList<ScSchdlSlotStaff> _scSchdlSlotStaffSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scSchdlSlotStaffSaStfMemberId
		/// </summary>
		
		public TList<ScSchdlSlotStaff> ScSchdlSlotStaffCollection
		{
			get
			{
				if (_scSchdlSlotStaffSaStfMemberId == null)
				{
				_scSchdlSlotStaffSaStfMemberId = new TList<ScSchdlSlotStaff>();
				}
	
				return _scSchdlSlotStaffSaStfMemberId;
			}
			set { _scSchdlSlotStaffSaStfMemberId = value; }
		}
		
		#endregion

		#region PgThesisCommMemberCollection
		
		private TList<PgThesisCommMember> _pgThesisCommMemberSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisCommMemberSaStfMemberId
		/// </summary>
		
		public TList<PgThesisCommMember> PgThesisCommMemberCollection
		{
			get
			{
				if (_pgThesisCommMemberSaStfMemberId == null)
				{
				_pgThesisCommMemberSaStfMemberId = new TList<PgThesisCommMember>();
				}
	
				return _pgThesisCommMemberSaStfMemberId;
			}
			set { _pgThesisCommMemberSaStfMemberId = value; }
		}
		
		#endregion

		#region SaRelativeCollection
		
		private TList<SaRelative> _saRelativeSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saRelativeSaStfMemberId
		/// </summary>
		
		public TList<SaRelative> SaRelativeCollection
		{
			get
			{
				if (_saRelativeSaStfMemberId == null)
				{
				_saRelativeSaStfMemberId = new TList<SaRelative>();
				}
	
				return _saRelativeSaStfMemberId;
			}
			set { _saRelativeSaStfMemberId = value; }
		}
		
		#endregion

		#region SaDocOfFileCollection
		
		private TList<SaDocOfFile> _saDocOfFileSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saDocOfFileSaStfMemberId
		/// </summary>
		
		public TList<SaDocOfFile> SaDocOfFileCollection
		{
			get
			{
				if (_saDocOfFileSaStfMemberId == null)
				{
				_saDocOfFileSaStfMemberId = new TList<SaDocOfFile>();
				}
	
				return _saDocOfFileSaStfMemberId;
			}
			set { _saDocOfFileSaStfMemberId = value; }
		}
		
		#endregion

		#region SaPromotionRequestCollection
		
		private TList<SaPromotionRequest> _saPromotionRequestSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saPromotionRequestSaStfMemberId
		/// </summary>
		
		public TList<SaPromotionRequest> SaPromotionRequestCollection
		{
			get
			{
				if (_saPromotionRequestSaStfMemberId == null)
				{
				_saPromotionRequestSaStfMemberId = new TList<SaPromotionRequest>();
				}
	
				return _saPromotionRequestSaStfMemberId;
			}
			set { _saPromotionRequestSaStfMemberId = value; }
		}
		
		#endregion

		#region SaCommMemberCollection
		
		private TList<SaCommMember> _saCommMemberSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saCommMemberSaStfMemberId
		/// </summary>
		
		public TList<SaCommMember> SaCommMemberCollection
		{
			get
			{
				if (_saCommMemberSaStfMemberId == null)
				{
				_saCommMemberSaStfMemberId = new TList<SaCommMember>();
				}
	
				return _saCommMemberSaStfMemberId;
			}
			set { _saCommMemberSaStfMemberId = value; }
		}
		
		#endregion

		#region PgThesisNoteCollection
		
		private TList<PgThesisNote> _pgThesisNoteSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisNoteSaStfMemberId
		/// </summary>
		
		public TList<PgThesisNote> PgThesisNoteCollection
		{
			get
			{
				if (_pgThesisNoteSaStfMemberId == null)
				{
				_pgThesisNoteSaStfMemberId = new TList<PgThesisNote>();
				}
	
				return _pgThesisNoteSaStfMemberId;
			}
			set { _pgThesisNoteSaStfMemberId = value; }
		}
		
		#endregion

		#region EdTrainSupervisorCollection
		
		private TList<EdTrainSupervisor> _edTrainSupervisorSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edTrainSupervisorSaStfMemberId
		/// </summary>
		
		public TList<EdTrainSupervisor> EdTrainSupervisorCollection
		{
			get
			{
				if (_edTrainSupervisorSaStfMemberId == null)
				{
				_edTrainSupervisorSaStfMemberId = new TList<EdTrainSupervisor>();
				}
	
				return _edTrainSupervisorSaStfMemberId;
			}
			set { _edTrainSupervisorSaStfMemberId = value; }
		}
		
		#endregion

		#region SaTransferCollection
		
		private TList<SaTransfer> _saTransferSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saTransferSaStfMemberId
		/// </summary>
		
		public TList<SaTransfer> SaTransferCollection
		{
			get
			{
				if (_saTransferSaStfMemberId == null)
				{
				_saTransferSaStfMemberId = new TList<SaTransfer>();
				}
	
				return _saTransferSaStfMemberId;
			}
			set { _saTransferSaStfMemberId = value; }
		}
		
		#endregion

		#region SaExtDelCollection
		
		private TList<SaExtDel> _saExtDelSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saExtDelSaStfMemberId
		/// </summary>
		
		public TList<SaExtDel> SaExtDelCollection
		{
			get
			{
				if (_saExtDelSaStfMemberId == null)
				{
				_saExtDelSaStfMemberId = new TList<SaExtDel>();
				}
	
				return _saExtDelSaStfMemberId;
			}
			set { _saExtDelSaStfMemberId = value; }
		}
		
		#endregion

		#region EdCourseOutcomesTopicsCollection
		
		private TList<EdCourseOutcomesTopics> _edCourseOutcomesTopicsStfCoordinator;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseOutcomesTopicsStfCoordinator
		/// </summary>
		
		public TList<EdCourseOutcomesTopics> EdCourseOutcomesTopicsCollection
		{
			get
			{
				if (_edCourseOutcomesTopicsStfCoordinator == null)
				{
				_edCourseOutcomesTopicsStfCoordinator = new TList<EdCourseOutcomesTopics>();
				}
	
				return _edCourseOutcomesTopicsStfCoordinator;
			}
			set { _edCourseOutcomesTopicsStfCoordinator = value; }
		}
		
		#endregion

		#region CoContRoomMemberCollection
		
		private TList<CoContRoomMember> _coContRoomMemberSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coContRoomMemberSaStfMemberId
		/// </summary>
		
		public TList<CoContRoomMember> CoContRoomMemberCollection
		{
			get
			{
				if (_coContRoomMemberSaStfMemberId == null)
				{
				_coContRoomMemberSaStfMemberId = new TList<CoContRoomMember>();
				}
	
				return _coContRoomMemberSaStfMemberId;
			}
			set { _coContRoomMemberSaStfMemberId = value; }
		}
		
		#endregion

		#region SaJobActivityCollection
		
		private TList<SaJobActivity> _saJobActivitySaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saJobActivitySaStfMemberId
		/// </summary>
		
		public TList<SaJobActivity> SaJobActivityCollection
		{
			get
			{
				if (_saJobActivitySaStfMemberId == null)
				{
				_saJobActivitySaStfMemberId = new TList<SaJobActivity>();
				}
	
				return _saJobActivitySaStfMemberId;
			}
			set { _saJobActivitySaStfMemberId = value; }
		}
		
		#endregion

		#region SaOfficeHourCollection
		
		private TList<SaOfficeHour> _saOfficeHourSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saOfficeHourSaStfMemberId
		/// </summary>
		
		public TList<SaOfficeHour> SaOfficeHourCollection
		{
			get
			{
				if (_saOfficeHourSaStfMemberId == null)
				{
				_saOfficeHourSaStfMemberId = new TList<SaOfficeHour>();
				}
	
				return _saOfficeHourSaStfMemberId;
			}
			set { _saOfficeHourSaStfMemberId = value; }
		}
		
		#endregion

		#region EdTrainStudCollection
		
		private TList<EdTrainStud> _edTrainStudSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edTrainStudSaStfMemberId
		/// </summary>
		
		public TList<EdTrainStud> EdTrainStudCollection
		{
			get
			{
				if (_edTrainStudSaStfMemberId == null)
				{
				_edTrainStudSaStfMemberId = new TList<EdTrainStud>();
				}
	
				return _edTrainStudSaStfMemberId;
			}
			set { _edTrainStudSaStfMemberId = value; }
		}
		
		#endregion

		#region SaCandReleaseCollection
		
		private TList<SaCandRelease> _saCandReleaseSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saCandReleaseSaStfMemberId
		/// </summary>
		
		public TList<SaCandRelease> SaCandReleaseCollection
		{
			get
			{
				if (_saCandReleaseSaStfMemberId == null)
				{
				_saCandReleaseSaStfMemberId = new TList<SaCandRelease>();
				}
	
				return _saCandReleaseSaStfMemberId;
			}
			set { _saCandReleaseSaStfMemberId = value; }
		}
		
		#endregion

		#region SaStfDocCollection
		
		private TList<SaStfDoc> _saStfDocSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saStfDocSaStfMemberId
		/// </summary>
		
		public TList<SaStfDoc> SaStfDocCollection
		{
			get
			{
				if (_saStfDocSaStfMemberId == null)
				{
				_saStfDocSaStfMemberId = new TList<SaStfDoc>();
				}
	
				return _saStfDocSaStfMemberId;
			}
			set { _saStfDocSaStfMemberId = value; }
		}
		
		#endregion

		#region SvStudStaffEvalCollection
		
		private TList<SvStudStaffEval> _svStudStaffEvalSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudStaffEvalSaStfMemberId
		/// </summary>
		
		public TList<SvStudStaffEval> SvStudStaffEvalCollection
		{
			get
			{
				if (_svStudStaffEvalSaStfMemberId == null)
				{
				_svStudStaffEvalSaStfMemberId = new TList<SvStudStaffEval>();
				}
	
				return _svStudStaffEvalSaStfMemberId;
			}
			set { _svStudStaffEvalSaStfMemberId = value; }
		}
		
		#endregion

		#region EdExamSuprvsorCollection
		
		private TList<EdExamSuprvsor> _edExamSuprvsorSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edExamSuprvsorSaStfMemberId
		/// </summary>
		
		public TList<EdExamSuprvsor> EdExamSuprvsorCollection
		{
			get
			{
				if (_edExamSuprvsorSaStfMemberId == null)
				{
				_edExamSuprvsorSaStfMemberId = new TList<EdExamSuprvsor>();
				}
	
				return _edExamSuprvsorSaStfMemberId;
			}
			set { _edExamSuprvsorSaStfMemberId = value; }
		}
		
		#endregion

		#region EdProjSupervisorCollection
		
		private TList<EdProjSupervisor> _edProjSupervisorSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edProjSupervisorSaStfMemberId
		/// </summary>
		
		public TList<EdProjSupervisor> EdProjSupervisorCollection
		{
			get
			{
				if (_edProjSupervisorSaStfMemberId == null)
				{
				_edProjSupervisorSaStfMemberId = new TList<EdProjSupervisor>();
				}
	
				return _edProjSupervisorSaStfMemberId;
			}
			set { _edProjSupervisorSaStfMemberId = value; }
		}
		
		#endregion

		#region SvStudCompCollection
		
		private TList<SvStudComp> _svStudCompSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudCompSaStfMemberId
		/// </summary>
		
		public TList<SvStudComp> SvStudCompCollection
		{
			get
			{
				if (_svStudCompSaStfMemberId == null)
				{
				_svStudCompSaStfMemberId = new TList<SvStudComp>();
				}
	
				return _svStudCompSaStfMemberId;
			}
			set { _svStudCompSaStfMemberId = value; }
		}
		
		#endregion

		#region SaVacationCollection
		
		private TList<SaVacation> _saVacationSaStfMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saVacationSaStfMemberId
		/// </summary>
		
		public TList<SaVacation> SaVacationCollection
		{
			get
			{
				if (_saVacationSaStfMemberId == null)
				{
				_saVacationSaStfMemberId = new TList<SaVacation>();
				}
	
				return _saVacationSaStfMemberId;
			}
			set { _saVacationSaStfMemberId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			SaStfMemberEntityData _tmp = new SaStfMemberEntityData();
						
			_tmp.SaStfMemberId = this.SaStfMemberId;
			_tmp.OriginalSaStfMemberId = this.OriginalSaStfMemberId;
			
			_tmp.StfCode = this.StfCode;
			_tmp.StfFullNameAr = this.StfFullNameAr;
			_tmp.StfFullNameEn = this.StfFullNameEn;
			_tmp.AsNodeId = this.AsNodeId;
			_tmp.AsFacultyInfoId = this.AsFacultyInfoId;
			_tmp.SaCodeJobStatusId = this.SaCodeJobStatusId;
			_tmp.SaCodeScDegId = this.SaCodeScDegId;
			_tmp.StfNameAr = this.StfNameAr;
			_tmp.StfClFullNameAr = this.StfClFullNameAr;
			_tmp.StfClNameAr = this.StfClNameAr;
			_tmp.StfLnameAr = this.StfLnameAr;
			_tmp.StfClLnameAr = this.StfClLnameAr;
			_tmp.StfFnameEn = this.StfFnameEn;
			_tmp.StfLnameEn = this.StfLnameEn;
			_tmp.StfIsAzhary = this.StfIsAzhary;
			_tmp.FileNum = this.FileNum;
			_tmp.StfStatusNum = this.StfStatusNum;
			_tmp.StfNationalIdNum = this.StfNationalIdNum;
			_tmp.StfDob = this.StfDob;
			_tmp.StfRegNum = this.StfRegNum;
			_tmp.StfRegDate = this.StfRegDate;
			_tmp.StfMname = this.StfMname;
			_tmp.StfPermAdd = this.StfPermAdd;
			_tmp.StfCurrAdd = this.StfCurrAdd;
			_tmp.StfEmpDate = this.StfEmpDate;
			_tmp.GsCodeGenderId = this.GsCodeGenderId;
			_tmp.GsCodeReligionId = this.GsCodeReligionId;
			_tmp.GsCodeMaritalStateId = this.GsCodeMaritalStateId;
			_tmp.GsCountryInfoId = this.GsCountryInfoId;
			_tmp.GsCountryInfoId2 = this.GsCountryInfoId2;
			_tmp.GsCountryNodeId = this.GsCountryNodeId;
			_tmp.GsCountryNodeId2 = this.GsCountryNodeId2;
			_tmp.GsCountryNodeId3 = this.GsCountryNodeId3;
			_tmp.GsContactMethodHId = this.GsContactMethodHId;
			_tmp.StfPhoto = this.StfPhoto;
			_tmp.BasicSalary = this.BasicSalary;
			_tmp.PgThesisGeneralSpecId = this.PgThesisGeneralSpecId;
			_tmp.PgThesisDetailedSpecId = this.PgThesisDetailedSpecId;
			_tmp.DelFlag = this.DelFlag;
			_tmp.RetirmentAge = this.RetirmentAge;
			_tmp.OldStfMemberId = this.OldStfMemberId;
			_tmp.EmailPassword = this.EmailPassword;
			_tmp.TelNum = this.TelNum;
			_tmp.MobNum = this.MobNum;
			_tmp.EMail = this.EMail;
			_tmp.GsCodeIdentTypeId = this.GsCodeIdentTypeId;
			_tmp.AdminJobFlg = this.AdminJobFlg;
			_tmp.SaCdeAdminJobId = this.SaCdeAdminJobId;
			_tmp.AdminJobLoad = this.AdminJobLoad;
			
			#region Source Parent Composite Entities
			if (this.GsContactMethodHIdSource != null)
				_tmp.GsContactMethodHIdSource = MakeCopyOf(this.GsContactMethodHIdSource) as GsContactMethodH;
			if (this.PgThesisGeneralSpecIdSource != null)
				_tmp.PgThesisGeneralSpecIdSource = MakeCopyOf(this.PgThesisGeneralSpecIdSource) as PgThesisGeneralSpec;
			if (this.AsFacultyInfoIdSource != null)
				_tmp.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource) as AsFacultyInfo;
			if (this.AsNodeIdSource != null)
				_tmp.AsNodeIdSource = MakeCopyOf(this.AsNodeIdSource) as EntityMain;
			if (this.GsCodeMaritalStateIdSource != null)
				_tmp.GsCodeMaritalStateIdSource = MakeCopyOf(this.GsCodeMaritalStateIdSource) as GsCdeMaritalStatus;
			if (this.GsCodeGenderIdSource != null)
				_tmp.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource) as GsCodeGender;
			if (this.GsCodeIdentTypeIdSource != null)
				_tmp.GsCodeIdentTypeIdSource = MakeCopyOf(this.GsCodeIdentTypeIdSource) as GsCodeIdentType;
			if (this.GsCodeReligionIdSource != null)
				_tmp.GsCodeReligionIdSource = MakeCopyOf(this.GsCodeReligionIdSource) as GsCodeReligion;
			if (this.GsCountryNodeIdSource != null)
				_tmp.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource) as GsCountryNode;
			if (this.GsCountryInfoIdSource != null)
				_tmp.GsCountryInfoIdSource = MakeCopyOf(this.GsCountryInfoIdSource) as GsCountryNode;
			if (this.PgThesisDetailedSpecIdSource != null)
				_tmp.PgThesisDetailedSpecIdSource = MakeCopyOf(this.PgThesisDetailedSpecIdSource) as PgThesisDetailedSpec;
			if (this.SaCdeAdminJobIdSource != null)
				_tmp.SaCdeAdminJobIdSource = MakeCopyOf(this.SaCdeAdminJobIdSource) as SaCdeAdminJob;
			if (this.SaCodeJobStatusIdSource != null)
				_tmp.SaCodeJobStatusIdSource = MakeCopyOf(this.SaCodeJobStatusIdSource) as SaCodeJobStatus;
			if (this.SaCodeScDegIdSource != null)
				_tmp.SaCodeScDegIdSource = MakeCopyOf(this.SaCodeScDegIdSource) as SaCodeScDeg;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._svStaffPollSaStfMemberId != null)
				_tmp.SvStaffPollCollection = (TList<SvStaffPoll>) MakeCopyOf(this.SvStaffPollCollection); 
			if (this._saJobStoppageSaStfMemberId != null)
				_tmp.SaJobStoppageCollection = (TList<SaJobStoppage>) MakeCopyOf(this.SaJobStoppageCollection); 
			if (this._saFinStatmentSaStfMemberId != null)
				_tmp.SaFinStatmentCollection = (TList<SaFinStatment>) MakeCopyOf(this.SaFinStatmentCollection); 
			if (this._edOfferingCourseSaStfMemberId != null)
				_tmp.EdOfferingCourseCollection = (TList<EdOfferingCourse>) MakeCopyOf(this.EdOfferingCourseCollection); 
			if (this._saStfAttendSaStfMemberId != null)
				_tmp.SaStfAttendCollection = (TList<SaStfAttend>) MakeCopyOf(this.SaStfAttendCollection); 
			if (this._coExaminerCorectorSaStfMemberId != null)
				_tmp.CoExaminerCorectorCollection = (TList<CoExaminerCorector>) MakeCopyOf(this.CoExaminerCorectorCollection); 
			if (this._saVacationBalanceSaStfMemberId != null)
				_tmp.SaVacationBalanceCollection = (TList<SaVacationBalance>) MakeCopyOf(this.SaVacationBalanceCollection); 
			if (this._saResearchTeamSaStfMemberId != null)
				_tmp.SaResearchTeamCollection = (TList<SaResearchTeam>) MakeCopyOf(this.SaResearchTeamCollection); 
			if (this._saEmploymentSaStfMemberId != null)
				_tmp.SaEmploymentCollection = (TList<SaEmployment>) MakeCopyOf(this.SaEmploymentCollection); 
			if (this._saScQualSaStfMemberId != null)
				_tmp.SaScQualCollection = (TList<SaScQual>) MakeCopyOf(this.SaScQualCollection); 
			if (this._coControlMemberSaStfMemberId != null)
				_tmp.CoControlMemberCollection = (TList<CoControlMember>) MakeCopyOf(this.CoControlMemberCollection); 
			if (this._gsCommStaffSaStfMemberId != null)
				_tmp.GsCommStaffCollection = (TList<GsCommStaff>) MakeCopyOf(this.GsCommStaffCollection); 
			if (this._saSupervisingJobsSaStfMemberId != null)
				_tmp.SaSupervisingJobsCollection = (TList<SaSupervisingJobs>) MakeCopyOf(this.SaSupervisingJobsCollection); 
			if (this._admAppInterviewExamSaStfMemberId != null)
				_tmp.AdmAppInterviewExamCollection = (TList<AdmAppInterviewExam>) MakeCopyOf(this.AdmAppInterviewExamCollection); 
			if (this._edEmployeeQualSaStfMemberId != null)
				_tmp.EdEmployeeQualCollection = (TList<EdEmployeeQual>) MakeCopyOf(this.EdEmployeeQualCollection); 
			if (this._saStfSummeryTransSaStfMemberId != null)
				_tmp.SaStfSummeryTransCollection = (TList<SaStfSummeryTrans>) MakeCopyOf(this.SaStfSummeryTransCollection); 
			if (this._scScheduleDtlExtStfSaStfMamberId != null)
				_tmp.ScScheduleDtlExtStfCollection = (TList<ScScheduleDtlExtStf>) MakeCopyOf(this.ScScheduleDtlExtStfCollection); 
			if (this._edGuardSaStfMemberId != null)
				_tmp.EdGuardCollection = (TList<EdGuard>) MakeCopyOf(this.EdGuardCollection); 
			if (this._edStudAcadmicAdvSaStfMemberId != null)
				_tmp.EdStudAcadmicAdvCollection = (TList<EdStudAcadmicAdv>) MakeCopyOf(this.EdStudAcadmicAdvCollection); 
			if (this._saRaiseSaStfMemberId != null)
				_tmp.SaRaiseCollection = (TList<SaRaise>) MakeCopyOf(this.SaRaiseCollection); 
			if (this._saPunishmentSaStfMemberId != null)
				_tmp.SaPunishmentCollection = (TList<SaPunishment>) MakeCopyOf(this.SaPunishmentCollection); 
			if (this._edStudActvtyRegSaStfMemberId != null)
				_tmp.EdStudActvtyRegCollection = (TList<EdStudActvtyReg>) MakeCopyOf(this.EdStudActvtyRegCollection); 
			if (this._saExperienceSaStfMemberId != null)
				_tmp.SaExperienceCollection = (TList<SaExperience>) MakeCopyOf(this.SaExperienceCollection); 
			if (this._saEmpHierarchySaStfMemberId != null)
				_tmp.SaEmpHierarchyCollection = (TList<SaEmpHierarchy>) MakeCopyOf(this.SaEmpHierarchyCollection); 
			if (this._svStudAskAdvReSaStfMemberId != null)
				_tmp.SvStudAskAdvReCollection = (TList<SvStudAskAdvRe>) MakeCopyOf(this.SvStudAskAdvReCollection); 
			if (this._saPersonIdSaStfMemberId != null)
				_tmp.SaPersonIdCollection = (TList<SaPersonId>) MakeCopyOf(this.SaPersonIdCollection); 
			if (this._edStudEnrollChangeSaStfMemApprovedById != null)
				_tmp.EdStudEnrollChangeCollection = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollection); 
			if (this._saMilitaryStatusSaStfMemberId != null)
				_tmp.SaMilitaryStatusCollection = (TList<SaMilitaryStatus>) MakeCopyOf(this.SaMilitaryStatusCollection); 
			if (this._svStudStaffEvalExtSaStfMemberId != null)
				_tmp.SvStudStaffEvalExtCollection = (TList<SvStudStaffEvalExt>) MakeCopyOf(this.SvStudStaffEvalExtCollection); 
			if (this._saJobStartStatmentSaStfMemberId != null)
				_tmp.SaJobStartStatmentCollection = (TList<SaJobStartStatment>) MakeCopyOf(this.SaJobStartStatmentCollection); 
			if (this._scGroupStaffSaStfMamberId != null)
				_tmp.ScGroupStaffCollection = (TList<ScGroupStaff>) MakeCopyOf(this.ScGroupStaffCollection); 
			if (this._edStudSaStfMemberPrntId != null)
				_tmp.EdStudCollection = (TList<EdStud>) MakeCopyOf(this.EdStudCollection); 
			if (this._saTrainingCourseSaStfMemberId != null)
				_tmp.SaTrainingCourseCollection = (TList<SaTrainingCourse>) MakeCopyOf(this.SaTrainingCourseCollection); 
			if (this._integUserAdLogDtlSaStfMemberId != null)
				_tmp.IntegUserAdLogDtlCollection = (TList<IntegUserAdLogDtl>) MakeCopyOf(this.IntegUserAdLogDtlCollection); 
			if (this._edAcdadvRmkSaStfMemberId != null)
				_tmp.EdAcdadvRmkCollection = (TList<EdAcdadvRmk>) MakeCopyOf(this.EdAcdadvRmkCollection); 
			if (this._saMiltarySaStfMemberId != null)
				_tmp.SaMiltaryCollection = (TList<SaMiltary>) MakeCopyOf(this.SaMiltaryCollection); 
			if (this._saServTerminSaStfMemberId != null)
				_tmp.SaServTerminCollection = (TList<SaServTermin>) MakeCopyOf(this.SaServTerminCollection); 
			if (this._saPromotionSaStfMemberId != null)
				_tmp.SaPromotionCollection = (TList<SaPromotion>) MakeCopyOf(this.SaPromotionCollection); 
			if (this._svLecNoteSaStfMemberId != null)
				_tmp.SvLecNoteCollection = (TList<SvLecNote>) MakeCopyOf(this.SvLecNoteCollection); 
			if (this._pgThesisStaffSaStfMemberId != null)
				_tmp.PgThesisStaffCollection = (TList<PgThesisStaff>) MakeCopyOf(this.PgThesisStaffCollection); 
			if (this._edStudCourseGrdChngSaStfMemApprovedById != null)
				_tmp.EdStudCourseGrdChngCollection = (TList<EdStudCourseGrdChng>) MakeCopyOf(this.EdStudCourseGrdChngCollection); 
			if (this._edStaffCoursePrefSaStfMemberId != null)
				_tmp.EdStaffCoursePrefCollection = (TList<EdStaffCoursePref>) MakeCopyOf(this.EdStaffCoursePrefCollection); 
			if (this._scSchdlSlotStaffSaStfMemberId != null)
				_tmp.ScSchdlSlotStaffCollection = (TList<ScSchdlSlotStaff>) MakeCopyOf(this.ScSchdlSlotStaffCollection); 
			if (this._pgThesisCommMemberSaStfMemberId != null)
				_tmp.PgThesisCommMemberCollection = (TList<PgThesisCommMember>) MakeCopyOf(this.PgThesisCommMemberCollection); 
			if (this._saRelativeSaStfMemberId != null)
				_tmp.SaRelativeCollection = (TList<SaRelative>) MakeCopyOf(this.SaRelativeCollection); 
			if (this._saDocOfFileSaStfMemberId != null)
				_tmp.SaDocOfFileCollection = (TList<SaDocOfFile>) MakeCopyOf(this.SaDocOfFileCollection); 
			if (this._saPromotionRequestSaStfMemberId != null)
				_tmp.SaPromotionRequestCollection = (TList<SaPromotionRequest>) MakeCopyOf(this.SaPromotionRequestCollection); 
			if (this._saCommMemberSaStfMemberId != null)
				_tmp.SaCommMemberCollection = (TList<SaCommMember>) MakeCopyOf(this.SaCommMemberCollection); 
			if (this._pgThesisNoteSaStfMemberId != null)
				_tmp.PgThesisNoteCollection = (TList<PgThesisNote>) MakeCopyOf(this.PgThesisNoteCollection); 
			if (this._edTrainSupervisorSaStfMemberId != null)
				_tmp.EdTrainSupervisorCollection = (TList<EdTrainSupervisor>) MakeCopyOf(this.EdTrainSupervisorCollection); 
			if (this._saTransferSaStfMemberId != null)
				_tmp.SaTransferCollection = (TList<SaTransfer>) MakeCopyOf(this.SaTransferCollection); 
			if (this._saExtDelSaStfMemberId != null)
				_tmp.SaExtDelCollection = (TList<SaExtDel>) MakeCopyOf(this.SaExtDelCollection); 
			if (this._edCourseOutcomesTopicsStfCoordinator != null)
				_tmp.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection); 
			if (this._coContRoomMemberSaStfMemberId != null)
				_tmp.CoContRoomMemberCollection = (TList<CoContRoomMember>) MakeCopyOf(this.CoContRoomMemberCollection); 
			if (this._saJobActivitySaStfMemberId != null)
				_tmp.SaJobActivityCollection = (TList<SaJobActivity>) MakeCopyOf(this.SaJobActivityCollection); 
			if (this._saOfficeHourSaStfMemberId != null)
				_tmp.SaOfficeHourCollection = (TList<SaOfficeHour>) MakeCopyOf(this.SaOfficeHourCollection); 
			if (this._edTrainStudSaStfMemberId != null)
				_tmp.EdTrainStudCollection = (TList<EdTrainStud>) MakeCopyOf(this.EdTrainStudCollection); 
			if (this._saCandReleaseSaStfMemberId != null)
				_tmp.SaCandReleaseCollection = (TList<SaCandRelease>) MakeCopyOf(this.SaCandReleaseCollection); 
			if (this._saStfDocSaStfMemberId != null)
				_tmp.SaStfDocCollection = (TList<SaStfDoc>) MakeCopyOf(this.SaStfDocCollection); 
			if (this._svStudStaffEvalSaStfMemberId != null)
				_tmp.SvStudStaffEvalCollection = (TList<SvStudStaffEval>) MakeCopyOf(this.SvStudStaffEvalCollection); 
			if (this._edExamSuprvsorSaStfMemberId != null)
				_tmp.EdExamSuprvsorCollection = (TList<EdExamSuprvsor>) MakeCopyOf(this.EdExamSuprvsorCollection); 
			if (this._edProjSupervisorSaStfMemberId != null)
				_tmp.EdProjSupervisorCollection = (TList<EdProjSupervisor>) MakeCopyOf(this.EdProjSupervisorCollection); 
			if (this._svStudCompSaStfMemberId != null)
				_tmp.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection); 
			if (this._saVacationSaStfMemberId != null)
				_tmp.SaVacationCollection = (TList<SaVacation>) MakeCopyOf(this.SaVacationCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			SaStfMemberEntityData _tmp = new SaStfMemberEntityData();
						
			_tmp.SaStfMemberId = this.SaStfMemberId;
			_tmp.OriginalSaStfMemberId = this.OriginalSaStfMemberId;
			
			_tmp.StfCode = this.StfCode;
			_tmp.StfFullNameAr = this.StfFullNameAr;
			_tmp.StfFullNameEn = this.StfFullNameEn;
			_tmp.AsNodeId = this.AsNodeId;
			_tmp.AsFacultyInfoId = this.AsFacultyInfoId;
			_tmp.SaCodeJobStatusId = this.SaCodeJobStatusId;
			_tmp.SaCodeScDegId = this.SaCodeScDegId;
			_tmp.StfNameAr = this.StfNameAr;
			_tmp.StfClFullNameAr = this.StfClFullNameAr;
			_tmp.StfClNameAr = this.StfClNameAr;
			_tmp.StfLnameAr = this.StfLnameAr;
			_tmp.StfClLnameAr = this.StfClLnameAr;
			_tmp.StfFnameEn = this.StfFnameEn;
			_tmp.StfLnameEn = this.StfLnameEn;
			_tmp.StfIsAzhary = this.StfIsAzhary;
			_tmp.FileNum = this.FileNum;
			_tmp.StfStatusNum = this.StfStatusNum;
			_tmp.StfNationalIdNum = this.StfNationalIdNum;
			_tmp.StfDob = this.StfDob;
			_tmp.StfRegNum = this.StfRegNum;
			_tmp.StfRegDate = this.StfRegDate;
			_tmp.StfMname = this.StfMname;
			_tmp.StfPermAdd = this.StfPermAdd;
			_tmp.StfCurrAdd = this.StfCurrAdd;
			_tmp.StfEmpDate = this.StfEmpDate;
			_tmp.GsCodeGenderId = this.GsCodeGenderId;
			_tmp.GsCodeReligionId = this.GsCodeReligionId;
			_tmp.GsCodeMaritalStateId = this.GsCodeMaritalStateId;
			_tmp.GsCountryInfoId = this.GsCountryInfoId;
			_tmp.GsCountryInfoId2 = this.GsCountryInfoId2;
			_tmp.GsCountryNodeId = this.GsCountryNodeId;
			_tmp.GsCountryNodeId2 = this.GsCountryNodeId2;
			_tmp.GsCountryNodeId3 = this.GsCountryNodeId3;
			_tmp.GsContactMethodHId = this.GsContactMethodHId;
			_tmp.StfPhoto = this.StfPhoto;
			_tmp.BasicSalary = this.BasicSalary;
			_tmp.PgThesisGeneralSpecId = this.PgThesisGeneralSpecId;
			_tmp.PgThesisDetailedSpecId = this.PgThesisDetailedSpecId;
			_tmp.DelFlag = this.DelFlag;
			_tmp.RetirmentAge = this.RetirmentAge;
			_tmp.OldStfMemberId = this.OldStfMemberId;
			_tmp.EmailPassword = this.EmailPassword;
			_tmp.TelNum = this.TelNum;
			_tmp.MobNum = this.MobNum;
			_tmp.EMail = this.EMail;
			_tmp.GsCodeIdentTypeId = this.GsCodeIdentTypeId;
			_tmp.AdminJobFlg = this.AdminJobFlg;
			_tmp.SaCdeAdminJobId = this.SaCdeAdminJobId;
			_tmp.AdminJobLoad = this.AdminJobLoad;
			
			#region Source Parent Composite Entities
			if (this.GsContactMethodHIdSource != null && existingCopies.Contains(this.GsContactMethodHIdSource))
				_tmp.GsContactMethodHIdSource = existingCopies[this.GsContactMethodHIdSource] as GsContactMethodH;
			else
				_tmp.GsContactMethodHIdSource = MakeCopyOf(this.GsContactMethodHIdSource, existingCopies) as GsContactMethodH;
			if (this.PgThesisGeneralSpecIdSource != null && existingCopies.Contains(this.PgThesisGeneralSpecIdSource))
				_tmp.PgThesisGeneralSpecIdSource = existingCopies[this.PgThesisGeneralSpecIdSource] as PgThesisGeneralSpec;
			else
				_tmp.PgThesisGeneralSpecIdSource = MakeCopyOf(this.PgThesisGeneralSpecIdSource, existingCopies) as PgThesisGeneralSpec;
			if (this.AsFacultyInfoIdSource != null && existingCopies.Contains(this.AsFacultyInfoIdSource))
				_tmp.AsFacultyInfoIdSource = existingCopies[this.AsFacultyInfoIdSource] as AsFacultyInfo;
			else
				_tmp.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource, existingCopies) as AsFacultyInfo;
			if (this.AsNodeIdSource != null && existingCopies.Contains(this.AsNodeIdSource))
				_tmp.AsNodeIdSource = existingCopies[this.AsNodeIdSource] as EntityMain;
			else
				_tmp.AsNodeIdSource = MakeCopyOf(this.AsNodeIdSource, existingCopies) as EntityMain;
			if (this.GsCodeMaritalStateIdSource != null && existingCopies.Contains(this.GsCodeMaritalStateIdSource))
				_tmp.GsCodeMaritalStateIdSource = existingCopies[this.GsCodeMaritalStateIdSource] as GsCdeMaritalStatus;
			else
				_tmp.GsCodeMaritalStateIdSource = MakeCopyOf(this.GsCodeMaritalStateIdSource, existingCopies) as GsCdeMaritalStatus;
			if (this.GsCodeGenderIdSource != null && existingCopies.Contains(this.GsCodeGenderIdSource))
				_tmp.GsCodeGenderIdSource = existingCopies[this.GsCodeGenderIdSource] as GsCodeGender;
			else
				_tmp.GsCodeGenderIdSource = MakeCopyOf(this.GsCodeGenderIdSource, existingCopies) as GsCodeGender;
			if (this.GsCodeIdentTypeIdSource != null && existingCopies.Contains(this.GsCodeIdentTypeIdSource))
				_tmp.GsCodeIdentTypeIdSource = existingCopies[this.GsCodeIdentTypeIdSource] as GsCodeIdentType;
			else
				_tmp.GsCodeIdentTypeIdSource = MakeCopyOf(this.GsCodeIdentTypeIdSource, existingCopies) as GsCodeIdentType;
			if (this.GsCodeReligionIdSource != null && existingCopies.Contains(this.GsCodeReligionIdSource))
				_tmp.GsCodeReligionIdSource = existingCopies[this.GsCodeReligionIdSource] as GsCodeReligion;
			else
				_tmp.GsCodeReligionIdSource = MakeCopyOf(this.GsCodeReligionIdSource, existingCopies) as GsCodeReligion;
			if (this.GsCountryNodeIdSource != null && existingCopies.Contains(this.GsCountryNodeIdSource))
				_tmp.GsCountryNodeIdSource = existingCopies[this.GsCountryNodeIdSource] as GsCountryNode;
			else
				_tmp.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource, existingCopies) as GsCountryNode;
			if (this.GsCountryInfoIdSource != null && existingCopies.Contains(this.GsCountryInfoIdSource))
				_tmp.GsCountryInfoIdSource = existingCopies[this.GsCountryInfoIdSource] as GsCountryNode;
			else
				_tmp.GsCountryInfoIdSource = MakeCopyOf(this.GsCountryInfoIdSource, existingCopies) as GsCountryNode;
			if (this.PgThesisDetailedSpecIdSource != null && existingCopies.Contains(this.PgThesisDetailedSpecIdSource))
				_tmp.PgThesisDetailedSpecIdSource = existingCopies[this.PgThesisDetailedSpecIdSource] as PgThesisDetailedSpec;
			else
				_tmp.PgThesisDetailedSpecIdSource = MakeCopyOf(this.PgThesisDetailedSpecIdSource, existingCopies) as PgThesisDetailedSpec;
			if (this.SaCdeAdminJobIdSource != null && existingCopies.Contains(this.SaCdeAdminJobIdSource))
				_tmp.SaCdeAdminJobIdSource = existingCopies[this.SaCdeAdminJobIdSource] as SaCdeAdminJob;
			else
				_tmp.SaCdeAdminJobIdSource = MakeCopyOf(this.SaCdeAdminJobIdSource, existingCopies) as SaCdeAdminJob;
			if (this.SaCodeJobStatusIdSource != null && existingCopies.Contains(this.SaCodeJobStatusIdSource))
				_tmp.SaCodeJobStatusIdSource = existingCopies[this.SaCodeJobStatusIdSource] as SaCodeJobStatus;
			else
				_tmp.SaCodeJobStatusIdSource = MakeCopyOf(this.SaCodeJobStatusIdSource, existingCopies) as SaCodeJobStatus;
			if (this.SaCodeScDegIdSource != null && existingCopies.Contains(this.SaCodeScDegIdSource))
				_tmp.SaCodeScDegIdSource = existingCopies[this.SaCodeScDegIdSource] as SaCodeScDeg;
			else
				_tmp.SaCodeScDegIdSource = MakeCopyOf(this.SaCodeScDegIdSource, existingCopies) as SaCodeScDeg;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.SvStaffPollCollection = (TList<SvStaffPoll>) MakeCopyOf(this.SvStaffPollCollection, existingCopies); 
			_tmp.SaJobStoppageCollection = (TList<SaJobStoppage>) MakeCopyOf(this.SaJobStoppageCollection, existingCopies); 
			_tmp.SaFinStatmentCollection = (TList<SaFinStatment>) MakeCopyOf(this.SaFinStatmentCollection, existingCopies); 
			_tmp.EdOfferingCourseCollection = (TList<EdOfferingCourse>) MakeCopyOf(this.EdOfferingCourseCollection, existingCopies); 
			_tmp.SaStfAttendCollection = (TList<SaStfAttend>) MakeCopyOf(this.SaStfAttendCollection, existingCopies); 
			_tmp.CoExaminerCorectorCollection = (TList<CoExaminerCorector>) MakeCopyOf(this.CoExaminerCorectorCollection, existingCopies); 
			_tmp.SaVacationBalanceCollection = (TList<SaVacationBalance>) MakeCopyOf(this.SaVacationBalanceCollection, existingCopies); 
			_tmp.SaResearchTeamCollection = (TList<SaResearchTeam>) MakeCopyOf(this.SaResearchTeamCollection, existingCopies); 
			_tmp.SaEmploymentCollection = (TList<SaEmployment>) MakeCopyOf(this.SaEmploymentCollection, existingCopies); 
			_tmp.SaScQualCollection = (TList<SaScQual>) MakeCopyOf(this.SaScQualCollection, existingCopies); 
			_tmp.CoControlMemberCollection = (TList<CoControlMember>) MakeCopyOf(this.CoControlMemberCollection, existingCopies); 
			_tmp.GsCommStaffCollection = (TList<GsCommStaff>) MakeCopyOf(this.GsCommStaffCollection, existingCopies); 
			_tmp.SaSupervisingJobsCollection = (TList<SaSupervisingJobs>) MakeCopyOf(this.SaSupervisingJobsCollection, existingCopies); 
			_tmp.AdmAppInterviewExamCollection = (TList<AdmAppInterviewExam>) MakeCopyOf(this.AdmAppInterviewExamCollection, existingCopies); 
			_tmp.EdEmployeeQualCollection = (TList<EdEmployeeQual>) MakeCopyOf(this.EdEmployeeQualCollection, existingCopies); 
			_tmp.SaStfSummeryTransCollection = (TList<SaStfSummeryTrans>) MakeCopyOf(this.SaStfSummeryTransCollection, existingCopies); 
			_tmp.ScScheduleDtlExtStfCollection = (TList<ScScheduleDtlExtStf>) MakeCopyOf(this.ScScheduleDtlExtStfCollection, existingCopies); 
			_tmp.EdGuardCollection = (TList<EdGuard>) MakeCopyOf(this.EdGuardCollection, existingCopies); 
			_tmp.EdStudAcadmicAdvCollection = (TList<EdStudAcadmicAdv>) MakeCopyOf(this.EdStudAcadmicAdvCollection, existingCopies); 
			_tmp.SaRaiseCollection = (TList<SaRaise>) MakeCopyOf(this.SaRaiseCollection, existingCopies); 
			_tmp.SaPunishmentCollection = (TList<SaPunishment>) MakeCopyOf(this.SaPunishmentCollection, existingCopies); 
			_tmp.EdStudActvtyRegCollection = (TList<EdStudActvtyReg>) MakeCopyOf(this.EdStudActvtyRegCollection, existingCopies); 
			_tmp.SaExperienceCollection = (TList<SaExperience>) MakeCopyOf(this.SaExperienceCollection, existingCopies); 
			_tmp.SaEmpHierarchyCollection = (TList<SaEmpHierarchy>) MakeCopyOf(this.SaEmpHierarchyCollection, existingCopies); 
			_tmp.SvStudAskAdvReCollection = (TList<SvStudAskAdvRe>) MakeCopyOf(this.SvStudAskAdvReCollection, existingCopies); 
			_tmp.SaPersonIdCollection = (TList<SaPersonId>) MakeCopyOf(this.SaPersonIdCollection, existingCopies); 
			_tmp.EdStudEnrollChangeCollection = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollection, existingCopies); 
			_tmp.SaMilitaryStatusCollection = (TList<SaMilitaryStatus>) MakeCopyOf(this.SaMilitaryStatusCollection, existingCopies); 
			_tmp.SvStudStaffEvalExtCollection = (TList<SvStudStaffEvalExt>) MakeCopyOf(this.SvStudStaffEvalExtCollection, existingCopies); 
			_tmp.SaJobStartStatmentCollection = (TList<SaJobStartStatment>) MakeCopyOf(this.SaJobStartStatmentCollection, existingCopies); 
			_tmp.ScGroupStaffCollection = (TList<ScGroupStaff>) MakeCopyOf(this.ScGroupStaffCollection, existingCopies); 
			_tmp.EdStudCollection = (TList<EdStud>) MakeCopyOf(this.EdStudCollection, existingCopies); 
			_tmp.SaTrainingCourseCollection = (TList<SaTrainingCourse>) MakeCopyOf(this.SaTrainingCourseCollection, existingCopies); 
			_tmp.IntegUserAdLogDtlCollection = (TList<IntegUserAdLogDtl>) MakeCopyOf(this.IntegUserAdLogDtlCollection, existingCopies); 
			_tmp.EdAcdadvRmkCollection = (TList<EdAcdadvRmk>) MakeCopyOf(this.EdAcdadvRmkCollection, existingCopies); 
			_tmp.SaMiltaryCollection = (TList<SaMiltary>) MakeCopyOf(this.SaMiltaryCollection, existingCopies); 
			_tmp.SaServTerminCollection = (TList<SaServTermin>) MakeCopyOf(this.SaServTerminCollection, existingCopies); 
			_tmp.SaPromotionCollection = (TList<SaPromotion>) MakeCopyOf(this.SaPromotionCollection, existingCopies); 
			_tmp.SvLecNoteCollection = (TList<SvLecNote>) MakeCopyOf(this.SvLecNoteCollection, existingCopies); 
			_tmp.PgThesisStaffCollection = (TList<PgThesisStaff>) MakeCopyOf(this.PgThesisStaffCollection, existingCopies); 
			_tmp.EdStudCourseGrdChngCollection = (TList<EdStudCourseGrdChng>) MakeCopyOf(this.EdStudCourseGrdChngCollection, existingCopies); 
			_tmp.EdStaffCoursePrefCollection = (TList<EdStaffCoursePref>) MakeCopyOf(this.EdStaffCoursePrefCollection, existingCopies); 
			_tmp.ScSchdlSlotStaffCollection = (TList<ScSchdlSlotStaff>) MakeCopyOf(this.ScSchdlSlotStaffCollection, existingCopies); 
			_tmp.PgThesisCommMemberCollection = (TList<PgThesisCommMember>) MakeCopyOf(this.PgThesisCommMemberCollection, existingCopies); 
			_tmp.SaRelativeCollection = (TList<SaRelative>) MakeCopyOf(this.SaRelativeCollection, existingCopies); 
			_tmp.SaDocOfFileCollection = (TList<SaDocOfFile>) MakeCopyOf(this.SaDocOfFileCollection, existingCopies); 
			_tmp.SaPromotionRequestCollection = (TList<SaPromotionRequest>) MakeCopyOf(this.SaPromotionRequestCollection, existingCopies); 
			_tmp.SaCommMemberCollection = (TList<SaCommMember>) MakeCopyOf(this.SaCommMemberCollection, existingCopies); 
			_tmp.PgThesisNoteCollection = (TList<PgThesisNote>) MakeCopyOf(this.PgThesisNoteCollection, existingCopies); 
			_tmp.EdTrainSupervisorCollection = (TList<EdTrainSupervisor>) MakeCopyOf(this.EdTrainSupervisorCollection, existingCopies); 
			_tmp.SaTransferCollection = (TList<SaTransfer>) MakeCopyOf(this.SaTransferCollection, existingCopies); 
			_tmp.SaExtDelCollection = (TList<SaExtDel>) MakeCopyOf(this.SaExtDelCollection, existingCopies); 
			_tmp.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection, existingCopies); 
			_tmp.CoContRoomMemberCollection = (TList<CoContRoomMember>) MakeCopyOf(this.CoContRoomMemberCollection, existingCopies); 
			_tmp.SaJobActivityCollection = (TList<SaJobActivity>) MakeCopyOf(this.SaJobActivityCollection, existingCopies); 
			_tmp.SaOfficeHourCollection = (TList<SaOfficeHour>) MakeCopyOf(this.SaOfficeHourCollection, existingCopies); 
			_tmp.EdTrainStudCollection = (TList<EdTrainStud>) MakeCopyOf(this.EdTrainStudCollection, existingCopies); 
			_tmp.SaCandReleaseCollection = (TList<SaCandRelease>) MakeCopyOf(this.SaCandReleaseCollection, existingCopies); 
			_tmp.SaStfDocCollection = (TList<SaStfDoc>) MakeCopyOf(this.SaStfDocCollection, existingCopies); 
			_tmp.SvStudStaffEvalCollection = (TList<SvStudStaffEval>) MakeCopyOf(this.SvStudStaffEvalCollection, existingCopies); 
			_tmp.EdExamSuprvsorCollection = (TList<EdExamSuprvsor>) MakeCopyOf(this.EdExamSuprvsorCollection, existingCopies); 
			_tmp.EdProjSupervisorCollection = (TList<EdProjSupervisor>) MakeCopyOf(this.EdProjSupervisorCollection, existingCopies); 
			_tmp.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection, existingCopies); 
			_tmp.SaVacationCollection = (TList<SaVacation>) MakeCopyOf(this.SaVacationCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaStfMemberColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(SaStfMemberColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaStfMemberColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(SaStfMemberColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaStfMemberColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(SaStfMemberColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				SaStfMemberEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new SaStfMemberEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaStfMemberColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(SaStfMemberColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				SaStfMemberEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new SaStfMemberEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region SaStfMemberEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="SaStfMember"/> object.
	/// </remarks>
	public class SaStfMemberEventArgs : System.EventArgs
	{
		private SaStfMemberColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the SaStfMemberEventArgs class.
		///</summary>
		public SaStfMemberEventArgs(SaStfMemberColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the SaStfMemberEventArgs class.
		///</summary>
		public SaStfMemberEventArgs(SaStfMemberColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The SaStfMemberColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="SaStfMemberColumn" />
		public SaStfMemberColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all SaStfMember related events.
	///</summary>
	public delegate void SaStfMemberEventHandler(object sender, SaStfMemberEventArgs e);
	
	#region SaStfMemberComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class SaStfMemberComparer : System.Collections.Generic.IComparer<SaStfMember>
	{
		SaStfMemberColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:SaStfMemberComparer"/> class.
        /// </summary>
		public SaStfMemberComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:SaStfMemberComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public SaStfMemberComparer(SaStfMemberColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="SaStfMember"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="SaStfMember"/> to compare.</param>
        /// <param name="b">The second <c>SaStfMember</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(SaStfMember a, SaStfMember b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(SaStfMember entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(SaStfMember a, SaStfMember b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public SaStfMemberColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region SaStfMemberKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="SaStfMember"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class SaStfMemberKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the SaStfMemberKey class.
		/// </summary>
		public SaStfMemberKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the SaStfMemberKey class.
		/// </summary>
		public SaStfMemberKey(SaStfMemberBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.SaStfMemberId = entity.SaStfMemberId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the SaStfMemberKey class.
		/// </summary>
		public SaStfMemberKey(System.Decimal _saStfMemberId)
		{
			#region Init Properties

			this.SaStfMemberId = _saStfMemberId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private SaStfMemberBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public SaStfMemberBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the SaStfMemberId property
		private System.Decimal _saStfMemberId;
		
		/// <summary>
		/// Gets or sets the SaStfMemberId property.
		/// </summary>
		public System.Decimal SaStfMemberId
		{
			get { return _saStfMemberId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.SaStfMemberId = value;
				
				_saStfMemberId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				SaStfMemberId = ( values["SaStfMemberId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["SaStfMemberId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("SaStfMemberId", SaStfMemberId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("SaStfMemberId: {0}{1}",
								SaStfMemberId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region SaStfMemberColumn Enum
	
	/// <summary>
	/// Enumerate the SaStfMember columns.
	/// </summary>
	[Serializable]
	public enum SaStfMemberColumn : int
	{
		/// <summary>
		/// SaStfMemberId : 
		/// </summary>
		[EnumTextValue("SA_STF_MEMBER_ID")]
		[ColumnEnum("SA_STF_MEMBER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		SaStfMemberId = 1,
		/// <summary>
		/// StfCode : 
		/// </summary>
		[EnumTextValue("STF_CODE")]
		[ColumnEnum("STF_CODE", typeof(System.String), System.Data.DbType.String, false, false, true, 20)]
		StfCode = 2,
		/// <summary>
		/// StfFullNameAr : 
		/// </summary>
		[EnumTextValue("STF_FULL_NAME_AR")]
		[ColumnEnum("STF_FULL_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		StfFullNameAr = 3,
		/// <summary>
		/// StfFullNameEn : 
		/// </summary>
		[EnumTextValue("STF_FULL_NAME_EN")]
		[ColumnEnum("STF_FULL_NAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		StfFullNameEn = 4,
		/// <summary>
		/// AsNodeId : 
		/// </summary>
		[EnumTextValue("AS_NODE_ID")]
		[ColumnEnum("AS_NODE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AsNodeId = 5,
		/// <summary>
		/// AsFacultyInfoId : 
		/// </summary>
		[EnumTextValue("AS_FACULTY_INFO_ID")]
		[ColumnEnum("AS_FACULTY_INFO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AsFacultyInfoId = 6,
		/// <summary>
		/// SaCodeJobStatusId : 
		/// </summary>
		[EnumTextValue("SA_CODE_JOB_STATUS_ID")]
		[ColumnEnum("SA_CODE_JOB_STATUS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SaCodeJobStatusId = 7,
		/// <summary>
		/// SaCodeScDegId : 
		/// </summary>
		[EnumTextValue("SA_CODE_SC_DEG_ID")]
		[ColumnEnum("SA_CODE_SC_DEG_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SaCodeScDegId = 8,
		/// <summary>
		/// StfNameAr : 
		/// </summary>
		[EnumTextValue("STF_NAME_AR")]
		[ColumnEnum("STF_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		StfNameAr = 9,
		/// <summary>
		/// StfClFullNameAr : 
		/// </summary>
		[EnumTextValue("STF_CL_FULL_NAME_AR")]
		[ColumnEnum("STF_CL_FULL_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		StfClFullNameAr = 10,
		/// <summary>
		/// StfClNameAr : 
		/// </summary>
		[EnumTextValue("STF_CL_NAME_AR")]
		[ColumnEnum("STF_CL_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		StfClNameAr = 11,
		/// <summary>
		/// StfLnameAr : 
		/// </summary>
		[EnumTextValue("STF_LNAME_AR")]
		[ColumnEnum("STF_LNAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		StfLnameAr = 12,
		/// <summary>
		/// StfClLnameAr : 
		/// </summary>
		[EnumTextValue("STF_CL_LNAME_AR")]
		[ColumnEnum("STF_CL_LNAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		StfClLnameAr = 13,
		/// <summary>
		/// StfFnameEn : 
		/// </summary>
		[EnumTextValue("STF_FNAME_EN")]
		[ColumnEnum("STF_FNAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		StfFnameEn = 14,
		/// <summary>
		/// StfLnameEn : 
		/// </summary>
		[EnumTextValue("STF_LNAME_EN")]
		[ColumnEnum("STF_LNAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		StfLnameEn = 15,
		/// <summary>
		/// StfIsAzhary : 
		/// </summary>
		[EnumTextValue("STF_IS_AZHARY")]
		[ColumnEnum("STF_IS_AZHARY", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		StfIsAzhary = 16,
		/// <summary>
		/// FileNum : 
		/// </summary>
		[EnumTextValue("FILE_NUM")]
		[ColumnEnum("FILE_NUM", typeof(System.String), System.Data.DbType.String, false, false, true, 10)]
		FileNum = 17,
		/// <summary>
		/// StfStatusNum : 
		/// </summary>
		[EnumTextValue("STF_STATUS_NUM")]
		[ColumnEnum("STF_STATUS_NUM", typeof(System.String), System.Data.DbType.String, false, false, true, 10)]
		StfStatusNum = 18,
		/// <summary>
		/// StfNationalIdNum : 
		/// </summary>
		[EnumTextValue("STF_NATIONAL_ID_NUM")]
		[ColumnEnum("STF_NATIONAL_ID_NUM", typeof(System.String), System.Data.DbType.String, false, false, true, 16)]
		StfNationalIdNum = 19,
		/// <summary>
		/// StfDob : 
		/// </summary>
		[EnumTextValue("STF_DOB")]
		[ColumnEnum("STF_DOB", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		StfDob = 20,
		/// <summary>
		/// StfRegNum : 
		/// </summary>
		[EnumTextValue("STF_REG_NUM")]
		[ColumnEnum("STF_REG_NUM", typeof(System.String), System.Data.DbType.String, false, false, true, 10)]
		StfRegNum = 21,
		/// <summary>
		/// StfRegDate : 
		/// </summary>
		[EnumTextValue("STF_REG_DATE")]
		[ColumnEnum("STF_REG_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		StfRegDate = 22,
		/// <summary>
		/// StfMname : 
		/// </summary>
		[EnumTextValue("STF_MNAME")]
		[ColumnEnum("STF_MNAME", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		StfMname = 23,
		/// <summary>
		/// StfPermAdd : 
		/// </summary>
		[EnumTextValue("STF_PERM_ADD")]
		[ColumnEnum("STF_PERM_ADD", typeof(System.String), System.Data.DbType.String, false, false, true, 255)]
		StfPermAdd = 24,
		/// <summary>
		/// StfCurrAdd : 
		/// </summary>
		[EnumTextValue("STF_CURR_ADD")]
		[ColumnEnum("STF_CURR_ADD", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		StfCurrAdd = 25,
		/// <summary>
		/// StfEmpDate : 
		/// </summary>
		[EnumTextValue("STF_EMP_DATE")]
		[ColumnEnum("STF_EMP_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		StfEmpDate = 26,
		/// <summary>
		/// GsCodeGenderId : 
		/// </summary>
		[EnumTextValue("GS_CODE_GENDER_ID")]
		[ColumnEnum("GS_CODE_GENDER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeGenderId = 27,
		/// <summary>
		/// GsCodeReligionId : 
		/// </summary>
		[EnumTextValue("GS_CODE_RELIGION_ID")]
		[ColumnEnum("GS_CODE_RELIGION_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeReligionId = 28,
		/// <summary>
		/// GsCodeMaritalStateId : 
		/// </summary>
		[EnumTextValue("GS_CODE_MARITAL_STATE_ID")]
		[ColumnEnum("GS_CODE_MARITAL_STATE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeMaritalStateId = 29,
		/// <summary>
		/// GsCountryInfoId : 
		/// </summary>
		[EnumTextValue("GS_COUNTRY_INFO_ID")]
		[ColumnEnum("GS_COUNTRY_INFO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCountryInfoId = 30,
		/// <summary>
		/// GsCountryInfoId2 : 
		/// </summary>
		[EnumTextValue("GS_COUNTRY_INFO_ID2")]
		[ColumnEnum("GS_COUNTRY_INFO_ID2", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCountryInfoId2 = 31,
		/// <summary>
		/// GsCountryNodeId : 
		/// </summary>
		[EnumTextValue("GS_COUNTRY_NODE_ID")]
		[ColumnEnum("GS_COUNTRY_NODE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCountryNodeId = 32,
		/// <summary>
		/// GsCountryNodeId2 : 
		/// </summary>
		[EnumTextValue("GS_COUNTRY_NODE_ID2")]
		[ColumnEnum("GS_COUNTRY_NODE_ID2", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCountryNodeId2 = 33,
		/// <summary>
		/// GsCountryNodeId3 : 
		/// </summary>
		[EnumTextValue("GS_COUNTRY_NODE_ID3")]
		[ColumnEnum("GS_COUNTRY_NODE_ID3", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCountryNodeId3 = 34,
		/// <summary>
		/// GsContactMethodHId : 
		/// </summary>
		[EnumTextValue("GS_CONTACT_METHOD_H_ID")]
		[ColumnEnum("GS_CONTACT_METHOD_H_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsContactMethodHId = 35,
		/// <summary>
		/// StfPhoto : 
		/// </summary>
		[EnumTextValue("STF_PHOTO")]
		[ColumnEnum("STF_PHOTO", typeof(System.String), System.Data.DbType.String, false, false, true, 300)]
		StfPhoto = 36,
		/// <summary>
		/// BasicSalary : 
		/// </summary>
		[EnumTextValue("BASIC_SALARY")]
		[ColumnEnum("BASIC_SALARY", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		BasicSalary = 37,
		/// <summary>
		/// PgThesisGeneralSpecId : 
		/// </summary>
		[EnumTextValue("PG_THESIS_GENERAL_SPEC_ID")]
		[ColumnEnum("PG_THESIS_GENERAL_SPEC_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PgThesisGeneralSpecId = 38,
		/// <summary>
		/// PgThesisDetailedSpecId : 
		/// </summary>
		[EnumTextValue("PG_THESIS_DETAILED_SPEC_ID")]
		[ColumnEnum("PG_THESIS_DETAILED_SPEC_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PgThesisDetailedSpecId = 39,
		/// <summary>
		/// DelFlag : 
		/// </summary>
		[EnumTextValue("DEL_FLAG")]
		[ColumnEnum("DEL_FLAG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		DelFlag = 40,
		/// <summary>
		/// RetirmentAge : 
		/// </summary>
		[EnumTextValue("RETIRMENT_AGE")]
		[ColumnEnum("RETIRMENT_AGE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		RetirmentAge = 41,
		/// <summary>
		/// OldStfMemberId : 
		/// </summary>
		[EnumTextValue("OLD_STF_MEMBER_ID")]
		[ColumnEnum("OLD_STF_MEMBER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		OldStfMemberId = 42,
		/// <summary>
		/// EmailPassword : 
		/// </summary>
		[EnumTextValue("EMAIL_PASSWORD")]
		[ColumnEnum("EMAIL_PASSWORD", typeof(System.String), System.Data.DbType.String, false, false, true, 200)]
		EmailPassword = 43,
		/// <summary>
		/// TelNum : 
		/// </summary>
		[EnumTextValue("TEL_NUM")]
		[ColumnEnum("TEL_NUM", typeof(System.String), System.Data.DbType.String, false, false, true, 20)]
		TelNum = 44,
		/// <summary>
		/// MobNum : 
		/// </summary>
		[EnumTextValue("MOB_NUM")]
		[ColumnEnum("MOB_NUM", typeof(System.String), System.Data.DbType.String, false, false, true, 25)]
		MobNum = 45,
		/// <summary>
		/// EMail : 
		/// </summary>
		[EnumTextValue("E_MAIL")]
		[ColumnEnum("E_MAIL", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		EMail = 46,
		/// <summary>
		/// GsCodeIdentTypeId : 
		/// </summary>
		[EnumTextValue("GS_CODE_IDENT_TYPE_ID")]
		[ColumnEnum("GS_CODE_IDENT_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeIdentTypeId = 47,
		/// <summary>
		/// AdminJobFlg : 
		/// </summary>
		[EnumTextValue("ADMIN_JOB_FLG")]
		[ColumnEnum("ADMIN_JOB_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		AdminJobFlg = 48,
		/// <summary>
		/// SaCdeAdminJobId : 
		/// </summary>
		[EnumTextValue("SA_CDE_ADMIN_JOB_ID")]
		[ColumnEnum("SA_CDE_ADMIN_JOB_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		SaCdeAdminJobId = 49,
		/// <summary>
		/// AdminJobLoad : default=3
		/// </summary>
		[EnumTextValue("ADMIN_JOB_LOAD")]
		[ColumnEnum("ADMIN_JOB_LOAD", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdminJobLoad = 50
	}//End enum

	#endregion SaStfMemberColumn Enum

} // end namespace
