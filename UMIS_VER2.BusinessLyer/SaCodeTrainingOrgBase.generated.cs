
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file SaCodeTrainingOrg.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'SA_CODE_TRAINING_ORG' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class SaCodeTrainingOrgBase : EntityBase, ISaCodeTrainingOrg, IEntityId<SaCodeTrainingOrgKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private SaCodeTrainingOrgEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private SaCodeTrainingOrgEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private SaCodeTrainingOrgEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<SaCodeTrainingOrg> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event SaCodeTrainingOrgEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event SaCodeTrainingOrgEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="SaCodeTrainingOrgBase"/> instance.
		///</summary>
		public SaCodeTrainingOrgBase()
		{
			this.entityData = new SaCodeTrainingOrgEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="SaCodeTrainingOrgBase"/> instance.
		///</summary>
		///<param name="_saCodeTrainingOrgId"></param>
		///<param name="_traininrgCode"></param>
		///<param name="_traininrgDescr"></param>
		///<param name="_traininrgAddress"></param>
		///<param name="_traininrgContactPerson"></param>
		///<param name="_gsCountryNodeId"></param>
		///<param name="_gsContactMethodHId"></param>
		public SaCodeTrainingOrgBase(System.Decimal _saCodeTrainingOrgId, System.String _traininrgCode, 
			System.String _traininrgDescr, System.String _traininrgAddress, System.String _traininrgContactPerson, 
			System.Decimal _gsCountryNodeId, System.Decimal _gsContactMethodHId)
		{
			this.entityData = new SaCodeTrainingOrgEntityData();
			this.backupData = null;

			this.SaCodeTrainingOrgId = _saCodeTrainingOrgId;
			this.TraininrgCode = _traininrgCode;
			this.TraininrgDescr = _traininrgDescr;
			this.TraininrgAddress = _traininrgAddress;
			this.TraininrgContactPerson = _traininrgContactPerson;
			this.GsCountryNodeId = _gsCountryNodeId;
			this.GsContactMethodHId = _gsContactMethodHId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="SaCodeTrainingOrg"/> instance.
		///</summary>
		///<param name="_saCodeTrainingOrgId"></param>
		///<param name="_traininrgCode"></param>
		///<param name="_traininrgDescr"></param>
		///<param name="_traininrgAddress"></param>
		///<param name="_traininrgContactPerson"></param>
		///<param name="_gsCountryNodeId"></param>
		///<param name="_gsContactMethodHId"></param>
		public static SaCodeTrainingOrg CreateSaCodeTrainingOrg(System.Decimal _saCodeTrainingOrgId, System.String _traininrgCode, 
			System.String _traininrgDescr, System.String _traininrgAddress, System.String _traininrgContactPerson, 
			System.Decimal _gsCountryNodeId, System.Decimal _gsContactMethodHId)
		{
			SaCodeTrainingOrg newSaCodeTrainingOrg = new SaCodeTrainingOrg();
			newSaCodeTrainingOrg.SaCodeTrainingOrgId = _saCodeTrainingOrgId;
			newSaCodeTrainingOrg.TraininrgCode = _traininrgCode;
			newSaCodeTrainingOrg.TraininrgDescr = _traininrgDescr;
			newSaCodeTrainingOrg.TraininrgAddress = _traininrgAddress;
			newSaCodeTrainingOrg.TraininrgContactPerson = _traininrgContactPerson;
			newSaCodeTrainingOrg.GsCountryNodeId = _gsCountryNodeId;
			newSaCodeTrainingOrg.GsContactMethodHId = _gsContactMethodHId;
			return newSaCodeTrainingOrg;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the SaCodeTrainingOrgId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal SaCodeTrainingOrgId
		{
			get
			{
				return this.entityData.SaCodeTrainingOrgId; 
			}
			
			set
			{
				if (this.entityData.SaCodeTrainingOrgId == value)
					return;
					
				OnColumnChanging(SaCodeTrainingOrgColumn.SaCodeTrainingOrgId, this.entityData.SaCodeTrainingOrgId);
				this.entityData.SaCodeTrainingOrgId = value;
				this.EntityId.SaCodeTrainingOrgId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaCodeTrainingOrgColumn.SaCodeTrainingOrgId, this.entityData.SaCodeTrainingOrgId);
				OnPropertyChanged("SaCodeTrainingOrgId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the SA_CODE_TRAINING_ORG_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the SA_CODE_TRAINING_ORG_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalSaCodeTrainingOrgId
		{
			get { return this.entityData.OriginalSaCodeTrainingOrgId; }
			set { this.entityData.OriginalSaCodeTrainingOrgId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the TraininrgCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 10)]
		public virtual System.String TraininrgCode
		{
			get
			{
				return this.entityData.TraininrgCode; 
			}
			
			set
			{
				if (this.entityData.TraininrgCode == value)
					return;
					
				OnColumnChanging(SaCodeTrainingOrgColumn.TraininrgCode, this.entityData.TraininrgCode);
				this.entityData.TraininrgCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaCodeTrainingOrgColumn.TraininrgCode, this.entityData.TraininrgCode);
				OnPropertyChanged("TraininrgCode");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TraininrgDescr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 100)]
		public virtual System.String TraininrgDescr
		{
			get
			{
				return this.entityData.TraininrgDescr; 
			}
			
			set
			{
				if (this.entityData.TraininrgDescr == value)
					return;
					
				OnColumnChanging(SaCodeTrainingOrgColumn.TraininrgDescr, this.entityData.TraininrgDescr);
				this.entityData.TraininrgDescr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaCodeTrainingOrgColumn.TraininrgDescr, this.entityData.TraininrgDescr);
				OnPropertyChanged("TraininrgDescr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TraininrgAddress property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String TraininrgAddress
		{
			get
			{
				return this.entityData.TraininrgAddress; 
			}
			
			set
			{
				if (this.entityData.TraininrgAddress == value)
					return;
					
				OnColumnChanging(SaCodeTrainingOrgColumn.TraininrgAddress, this.entityData.TraininrgAddress);
				this.entityData.TraininrgAddress = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaCodeTrainingOrgColumn.TraininrgAddress, this.entityData.TraininrgAddress);
				OnPropertyChanged("TraininrgAddress");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TraininrgContactPerson property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String TraininrgContactPerson
		{
			get
			{
				return this.entityData.TraininrgContactPerson; 
			}
			
			set
			{
				if (this.entityData.TraininrgContactPerson == value)
					return;
					
				OnColumnChanging(SaCodeTrainingOrgColumn.TraininrgContactPerson, this.entityData.TraininrgContactPerson);
				this.entityData.TraininrgContactPerson = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaCodeTrainingOrgColumn.TraininrgContactPerson, this.entityData.TraininrgContactPerson);
				OnPropertyChanged("TraininrgContactPerson");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCountryNodeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal GsCountryNodeId
		{
			get
			{
				return this.entityData.GsCountryNodeId; 
			}
			
			set
			{
				if (this.entityData.GsCountryNodeId == value)
					return;
					
				OnColumnChanging(SaCodeTrainingOrgColumn.GsCountryNodeId, this.entityData.GsCountryNodeId);
				this.entityData.GsCountryNodeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaCodeTrainingOrgColumn.GsCountryNodeId, this.entityData.GsCountryNodeId);
				OnPropertyChanged("GsCountryNodeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsContactMethodHId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal GsContactMethodHId
		{
			get
			{
				return this.entityData.GsContactMethodHId; 
			}
			
			set
			{
				if (this.entityData.GsContactMethodHId == value)
					return;
					
				OnColumnChanging(SaCodeTrainingOrgColumn.GsContactMethodHId, this.entityData.GsContactMethodHId);
				this.entityData.GsContactMethodHId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SaCodeTrainingOrgColumn.GsContactMethodHId, this.entityData.GsContactMethodHId);
				OnPropertyChanged("GsContactMethodHId");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="GsContactMethodH"/>.
		/// </summary>
		/// <value>The source GsContactMethodH for GsContactMethodHId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsContactMethodH GsContactMethodHIdSource
      	{
            get { return entityData.GsContactMethodHIdSource; }
            set { entityData.GsContactMethodHIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of SaTrainingCourse objects
		///	which are related to this object through the relation FK_AUTO_03d5
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaTrainingCourse> SaTrainingCourseCollection
		{
			get { return entityData.SaTrainingCourseCollection; }
			set { entityData.SaTrainingCourseCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TraininrgCode", "Traininrg Code", 10));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("TraininrgDescr", "Traininrg Descr"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TraininrgDescr", "Traininrg Descr", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TraininrgAddress", "Traininrg Address", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TraininrgContactPerson", "Traininrg Contact Person", 100));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "SA_CODE_TRAINING_ORG"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"SA_CODE_TRAINING_ORG_ID", "TRAININRG_CODE", "TRAININRG_DESCR", "TRAININRG_ADDRESS", "TRAININRG_CONTACT_PERSON", "GS_COUNTRY_NODE_ID", "GS_CONTACT_METHOD_H_ID"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as SaCodeTrainingOrgEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (SaCodeTrainingOrg) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<SaCodeTrainingOrg>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as SaCodeTrainingOrg);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed SaCodeTrainingOrg Entity 
		///</summary>
		protected virtual SaCodeTrainingOrg Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			SaCodeTrainingOrg copy = new SaCodeTrainingOrg();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.SaCodeTrainingOrgId = this.SaCodeTrainingOrgId;
					copy.OriginalSaCodeTrainingOrgId = this.OriginalSaCodeTrainingOrgId;
				copy.TraininrgCode = this.TraininrgCode;
				copy.TraininrgDescr = this.TraininrgDescr;
				copy.TraininrgAddress = this.TraininrgAddress;
				copy.TraininrgContactPerson = this.TraininrgContactPerson;
				copy.GsCountryNodeId = this.GsCountryNodeId;
				copy.GsContactMethodHId = this.GsContactMethodHId;
			
			if (this.GsContactMethodHIdSource != null && existingCopies.Contains(this.GsContactMethodHIdSource))
				copy.GsContactMethodHIdSource = existingCopies[this.GsContactMethodHIdSource] as GsContactMethodH;
			else
				copy.GsContactMethodHIdSource = MakeCopyOf(this.GsContactMethodHIdSource, existingCopies) as GsContactMethodH;
		
			//deep copy nested objects
			copy.SaTrainingCourseCollection = (TList<SaTrainingCourse>) MakeCopyOf(this.SaTrainingCourseCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed SaCodeTrainingOrg Entity 
		///</summary>
		public virtual SaCodeTrainingOrg Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed SaCodeTrainingOrg Entity which is a deep copy of the current entity.
		///</summary>
		public virtual SaCodeTrainingOrg DeepCopy()
		{
			return EntityHelper.Clone<SaCodeTrainingOrg>(this as SaCodeTrainingOrg);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as SaCodeTrainingOrgEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new SaCodeTrainingOrgEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as SaCodeTrainingOrgEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(SaCodeTrainingOrgColumn column)
		{
			switch(column)
			{
					case SaCodeTrainingOrgColumn.SaCodeTrainingOrgId:
					return entityData.SaCodeTrainingOrgId != _originalData.SaCodeTrainingOrgId;
					case SaCodeTrainingOrgColumn.TraininrgCode:
					return entityData.TraininrgCode != _originalData.TraininrgCode;
					case SaCodeTrainingOrgColumn.TraininrgDescr:
					return entityData.TraininrgDescr != _originalData.TraininrgDescr;
					case SaCodeTrainingOrgColumn.TraininrgAddress:
					return entityData.TraininrgAddress != _originalData.TraininrgAddress;
					case SaCodeTrainingOrgColumn.TraininrgContactPerson:
					return entityData.TraininrgContactPerson != _originalData.TraininrgContactPerson;
					case SaCodeTrainingOrgColumn.GsCountryNodeId:
					return entityData.GsCountryNodeId != _originalData.GsCountryNodeId;
					case SaCodeTrainingOrgColumn.GsContactMethodHId:
					return entityData.GsContactMethodHId != _originalData.GsContactMethodHId;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< SaCodeTrainingOrgColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.SaCodeTrainingOrgId != _originalData.SaCodeTrainingOrgId;
			result = result || entityData.TraininrgCode != _originalData.TraininrgCode;
			result = result || entityData.TraininrgDescr != _originalData.TraininrgDescr;
			result = result || entityData.TraininrgAddress != _originalData.TraininrgAddress;
			result = result || entityData.TraininrgContactPerson != _originalData.TraininrgContactPerson;
			result = result || entityData.GsCountryNodeId != _originalData.GsCountryNodeId;
			result = result || entityData.GsContactMethodHId != _originalData.GsContactMethodHId;
			return result;
		}	
		
		///<summary>
		///  Returns a SaCodeTrainingOrg Entity with the original data.
		///</summary>
		public SaCodeTrainingOrg GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateSaCodeTrainingOrg(
				_originalData.SaCodeTrainingOrgId,
				_originalData.TraininrgCode,
				_originalData.TraininrgDescr,
				_originalData.TraininrgAddress,
				_originalData.TraininrgContactPerson,
				_originalData.GsCountryNodeId,
				_originalData.GsContactMethodHId
				);
				
			return (SaCodeTrainingOrg)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="SaCodeTrainingOrgBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is SaCodeTrainingOrgBase)
				return ValueEquals(this, (SaCodeTrainingOrgBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="SaCodeTrainingOrgBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.SaCodeTrainingOrgId.GetHashCode() ^ 
					((this.TraininrgCode == null) ? string.Empty : this.TraininrgCode.ToString()).GetHashCode() ^ 
					this.TraininrgDescr.GetHashCode() ^ 
					((this.TraininrgAddress == null) ? string.Empty : this.TraininrgAddress.ToString()).GetHashCode() ^ 
					((this.TraininrgContactPerson == null) ? string.Empty : this.TraininrgContactPerson.ToString()).GetHashCode() ^ 
					this.GsCountryNodeId.GetHashCode() ^ 
					this.GsContactMethodHId.GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="SaCodeTrainingOrgBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(SaCodeTrainingOrgBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="SaCodeTrainingOrgBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="SaCodeTrainingOrgBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="SaCodeTrainingOrgBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(SaCodeTrainingOrgBase Object1, SaCodeTrainingOrgBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.SaCodeTrainingOrgId != Object2.SaCodeTrainingOrgId)
				equal = false;
			if ( Object1.TraininrgCode != null && Object2.TraininrgCode != null )
			{
				if (Object1.TraininrgCode != Object2.TraininrgCode)
					equal = false;
			}
			else if (Object1.TraininrgCode == null ^ Object2.TraininrgCode == null )
			{
				equal = false;
			}
			if (Object1.TraininrgDescr != Object2.TraininrgDescr)
				equal = false;
			if ( Object1.TraininrgAddress != null && Object2.TraininrgAddress != null )
			{
				if (Object1.TraininrgAddress != Object2.TraininrgAddress)
					equal = false;
			}
			else if (Object1.TraininrgAddress == null ^ Object2.TraininrgAddress == null )
			{
				equal = false;
			}
			if ( Object1.TraininrgContactPerson != null && Object2.TraininrgContactPerson != null )
			{
				if (Object1.TraininrgContactPerson != Object2.TraininrgContactPerson)
					equal = false;
			}
			else if (Object1.TraininrgContactPerson == null ^ Object2.TraininrgContactPerson == null )
			{
				equal = false;
			}
			if (Object1.GsCountryNodeId != Object2.GsCountryNodeId)
				equal = false;
			if (Object1.GsContactMethodHId != Object2.GsContactMethodHId)
				equal = false;
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((SaCodeTrainingOrgBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static SaCodeTrainingOrgComparer GetComparer()
        {
            return new SaCodeTrainingOrgComparer();
        }
        */

        // Comparer delegates back to SaCodeTrainingOrg
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(SaCodeTrainingOrg rhs, SaCodeTrainingOrgColumn which)
        {
            switch (which)
            {
            	
            	
            	case SaCodeTrainingOrgColumn.SaCodeTrainingOrgId:
            		return this.SaCodeTrainingOrgId.CompareTo(rhs.SaCodeTrainingOrgId);
            		
            		                 
            	
            	
            	case SaCodeTrainingOrgColumn.TraininrgCode:
            		return this.TraininrgCode.CompareTo(rhs.TraininrgCode);
            		
            		                 
            	
            	
            	case SaCodeTrainingOrgColumn.TraininrgDescr:
            		return this.TraininrgDescr.CompareTo(rhs.TraininrgDescr);
            		
            		                 
            	
            	
            	case SaCodeTrainingOrgColumn.TraininrgAddress:
            		return this.TraininrgAddress.CompareTo(rhs.TraininrgAddress);
            		
            		                 
            	
            	
            	case SaCodeTrainingOrgColumn.TraininrgContactPerson:
            		return this.TraininrgContactPerson.CompareTo(rhs.TraininrgContactPerson);
            		
            		                 
            	
            	
            	case SaCodeTrainingOrgColumn.GsCountryNodeId:
            		return this.GsCountryNodeId.CompareTo(rhs.GsCountryNodeId);
            		
            		                 
            	
            	
            	case SaCodeTrainingOrgColumn.GsContactMethodHId:
            		return this.GsContactMethodHId.CompareTo(rhs.GsContactMethodHId);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<SaCodeTrainingOrgKey> Members
		
		// member variable for the EntityId property
		private SaCodeTrainingOrgKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual SaCodeTrainingOrgKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new SaCodeTrainingOrgKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("SaCodeTrainingOrg")
					.Append("|").Append( this.SaCodeTrainingOrgId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{8}{7}- SaCodeTrainingOrgId: {0}{7}- TraininrgCode: {1}{7}- TraininrgDescr: {2}{7}- TraininrgAddress: {3}{7}- TraininrgContactPerson: {4}{7}- GsCountryNodeId: {5}{7}- GsContactMethodHId: {6}{7}{9}", 
				this.SaCodeTrainingOrgId,
				(this.TraininrgCode == null) ? string.Empty : this.TraininrgCode.ToString(),
				this.TraininrgDescr,
				(this.TraininrgAddress == null) ? string.Empty : this.TraininrgAddress.ToString(),
				(this.TraininrgContactPerson == null) ? string.Empty : this.TraininrgContactPerson.ToString(),
				this.GsCountryNodeId,
				this.GsContactMethodHId,
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'SA_CODE_TRAINING_ORG' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class SaCodeTrainingOrgEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// SA_CODE_TRAINING_ORG_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "SA_CODE_TRAINING_ORG"</remarks>
		public System.Decimal SaCodeTrainingOrgId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalSaCodeTrainingOrgId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// TRAININRG_CODE : 
		/// </summary>
		public System.String		  TraininrgCode = null;
		
		/// <summary>
		/// TRAININRG_DESCR : 
		/// </summary>
		public System.String		  TraininrgDescr = string.Empty;
		
		/// <summary>
		/// TRAININRG_ADDRESS : 
		/// </summary>
		public System.String		  TraininrgAddress = null;
		
		/// <summary>
		/// TRAININRG_CONTACT_PERSON : 
		/// </summary>
		public System.String		  TraininrgContactPerson = null;
		
		/// <summary>
		/// GS_COUNTRY_NODE_ID : 
		/// </summary>
		public System.Decimal		  GsCountryNodeId = 0.0m;
		
		/// <summary>
		/// GS_CONTACT_METHOD_H_ID : 
		/// </summary>
		public System.Decimal		  GsContactMethodHId = 0.0m;
		#endregion
			
		#region Source Foreign Key Property
				
		private GsContactMethodH _gsContactMethodHidSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsContactMethodH"/>.
		/// </summary>
		/// <value>The source GsContactMethodH for GsContactMethodHId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsContactMethodH GsContactMethodHIdSource
      	{
            get { return this._gsContactMethodHidSource; }
            set { this._gsContactMethodHidSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region SaTrainingCourseCollection
		
		private TList<SaTrainingCourse> _saTrainingCourseSaCodeTrainingOrgId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saTrainingCourseSaCodeTrainingOrgId
		/// </summary>
		
		public TList<SaTrainingCourse> SaTrainingCourseCollection
		{
			get
			{
				if (_saTrainingCourseSaCodeTrainingOrgId == null)
				{
				_saTrainingCourseSaCodeTrainingOrgId = new TList<SaTrainingCourse>();
				}
	
				return _saTrainingCourseSaCodeTrainingOrgId;
			}
			set { _saTrainingCourseSaCodeTrainingOrgId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			SaCodeTrainingOrgEntityData _tmp = new SaCodeTrainingOrgEntityData();
						
			_tmp.SaCodeTrainingOrgId = this.SaCodeTrainingOrgId;
			_tmp.OriginalSaCodeTrainingOrgId = this.OriginalSaCodeTrainingOrgId;
			
			_tmp.TraininrgCode = this.TraininrgCode;
			_tmp.TraininrgDescr = this.TraininrgDescr;
			_tmp.TraininrgAddress = this.TraininrgAddress;
			_tmp.TraininrgContactPerson = this.TraininrgContactPerson;
			_tmp.GsCountryNodeId = this.GsCountryNodeId;
			_tmp.GsContactMethodHId = this.GsContactMethodHId;
			
			#region Source Parent Composite Entities
			if (this.GsContactMethodHIdSource != null)
				_tmp.GsContactMethodHIdSource = MakeCopyOf(this.GsContactMethodHIdSource) as GsContactMethodH;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._saTrainingCourseSaCodeTrainingOrgId != null)
				_tmp.SaTrainingCourseCollection = (TList<SaTrainingCourse>) MakeCopyOf(this.SaTrainingCourseCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			SaCodeTrainingOrgEntityData _tmp = new SaCodeTrainingOrgEntityData();
						
			_tmp.SaCodeTrainingOrgId = this.SaCodeTrainingOrgId;
			_tmp.OriginalSaCodeTrainingOrgId = this.OriginalSaCodeTrainingOrgId;
			
			_tmp.TraininrgCode = this.TraininrgCode;
			_tmp.TraininrgDescr = this.TraininrgDescr;
			_tmp.TraininrgAddress = this.TraininrgAddress;
			_tmp.TraininrgContactPerson = this.TraininrgContactPerson;
			_tmp.GsCountryNodeId = this.GsCountryNodeId;
			_tmp.GsContactMethodHId = this.GsContactMethodHId;
			
			#region Source Parent Composite Entities
			if (this.GsContactMethodHIdSource != null && existingCopies.Contains(this.GsContactMethodHIdSource))
				_tmp.GsContactMethodHIdSource = existingCopies[this.GsContactMethodHIdSource] as GsContactMethodH;
			else
				_tmp.GsContactMethodHIdSource = MakeCopyOf(this.GsContactMethodHIdSource, existingCopies) as GsContactMethodH;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.SaTrainingCourseCollection = (TList<SaTrainingCourse>) MakeCopyOf(this.SaTrainingCourseCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaCodeTrainingOrgColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(SaCodeTrainingOrgColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaCodeTrainingOrgColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(SaCodeTrainingOrgColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaCodeTrainingOrgColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(SaCodeTrainingOrgColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				SaCodeTrainingOrgEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new SaCodeTrainingOrgEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SaCodeTrainingOrgColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(SaCodeTrainingOrgColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				SaCodeTrainingOrgEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new SaCodeTrainingOrgEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region SaCodeTrainingOrgEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="SaCodeTrainingOrg"/> object.
	/// </remarks>
	public class SaCodeTrainingOrgEventArgs : System.EventArgs
	{
		private SaCodeTrainingOrgColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the SaCodeTrainingOrgEventArgs class.
		///</summary>
		public SaCodeTrainingOrgEventArgs(SaCodeTrainingOrgColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the SaCodeTrainingOrgEventArgs class.
		///</summary>
		public SaCodeTrainingOrgEventArgs(SaCodeTrainingOrgColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The SaCodeTrainingOrgColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="SaCodeTrainingOrgColumn" />
		public SaCodeTrainingOrgColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all SaCodeTrainingOrg related events.
	///</summary>
	public delegate void SaCodeTrainingOrgEventHandler(object sender, SaCodeTrainingOrgEventArgs e);
	
	#region SaCodeTrainingOrgComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class SaCodeTrainingOrgComparer : System.Collections.Generic.IComparer<SaCodeTrainingOrg>
	{
		SaCodeTrainingOrgColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:SaCodeTrainingOrgComparer"/> class.
        /// </summary>
		public SaCodeTrainingOrgComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:SaCodeTrainingOrgComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public SaCodeTrainingOrgComparer(SaCodeTrainingOrgColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="SaCodeTrainingOrg"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="SaCodeTrainingOrg"/> to compare.</param>
        /// <param name="b">The second <c>SaCodeTrainingOrg</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(SaCodeTrainingOrg a, SaCodeTrainingOrg b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(SaCodeTrainingOrg entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(SaCodeTrainingOrg a, SaCodeTrainingOrg b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public SaCodeTrainingOrgColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region SaCodeTrainingOrgKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="SaCodeTrainingOrg"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class SaCodeTrainingOrgKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the SaCodeTrainingOrgKey class.
		/// </summary>
		public SaCodeTrainingOrgKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the SaCodeTrainingOrgKey class.
		/// </summary>
		public SaCodeTrainingOrgKey(SaCodeTrainingOrgBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.SaCodeTrainingOrgId = entity.SaCodeTrainingOrgId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the SaCodeTrainingOrgKey class.
		/// </summary>
		public SaCodeTrainingOrgKey(System.Decimal _saCodeTrainingOrgId)
		{
			#region Init Properties

			this.SaCodeTrainingOrgId = _saCodeTrainingOrgId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private SaCodeTrainingOrgBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public SaCodeTrainingOrgBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the SaCodeTrainingOrgId property
		private System.Decimal _saCodeTrainingOrgId;
		
		/// <summary>
		/// Gets or sets the SaCodeTrainingOrgId property.
		/// </summary>
		public System.Decimal SaCodeTrainingOrgId
		{
			get { return _saCodeTrainingOrgId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.SaCodeTrainingOrgId = value;
				
				_saCodeTrainingOrgId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				SaCodeTrainingOrgId = ( values["SaCodeTrainingOrgId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["SaCodeTrainingOrgId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("SaCodeTrainingOrgId", SaCodeTrainingOrgId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("SaCodeTrainingOrgId: {0}{1}",
								SaCodeTrainingOrgId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region SaCodeTrainingOrgColumn Enum
	
	/// <summary>
	/// Enumerate the SaCodeTrainingOrg columns.
	/// </summary>
	[Serializable]
	public enum SaCodeTrainingOrgColumn : int
	{
		/// <summary>
		/// SaCodeTrainingOrgId : 
		/// </summary>
		[EnumTextValue("SA_CODE_TRAINING_ORG_ID")]
		[ColumnEnum("SA_CODE_TRAINING_ORG_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		SaCodeTrainingOrgId = 1,
		/// <summary>
		/// TraininrgCode : 
		/// </summary>
		[EnumTextValue("TRAININRG_CODE")]
		[ColumnEnum("TRAININRG_CODE", typeof(System.String), System.Data.DbType.String, false, false, true, 10)]
		TraininrgCode = 2,
		/// <summary>
		/// TraininrgDescr : 
		/// </summary>
		[EnumTextValue("TRAININRG_DESCR")]
		[ColumnEnum("TRAININRG_DESCR", typeof(System.String), System.Data.DbType.String, false, false, false, 100)]
		TraininrgDescr = 3,
		/// <summary>
		/// TraininrgAddress : 
		/// </summary>
		[EnumTextValue("TRAININRG_ADDRESS")]
		[ColumnEnum("TRAININRG_ADDRESS", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		TraininrgAddress = 4,
		/// <summary>
		/// TraininrgContactPerson : 
		/// </summary>
		[EnumTextValue("TRAININRG_CONTACT_PERSON")]
		[ColumnEnum("TRAININRG_CONTACT_PERSON", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		TraininrgContactPerson = 5,
		/// <summary>
		/// GsCountryNodeId : 
		/// </summary>
		[EnumTextValue("GS_COUNTRY_NODE_ID")]
		[ColumnEnum("GS_COUNTRY_NODE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		GsCountryNodeId = 6,
		/// <summary>
		/// GsContactMethodHId : 
		/// </summary>
		[EnumTextValue("GS_CONTACT_METHOD_H_ID")]
		[ColumnEnum("GS_CONTACT_METHOD_H_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		GsContactMethodHId = 7
	}//End enum

	#endregion SaCodeTrainingOrgColumn Enum

} // end namespace
