
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file FeeItemTrnsBlnc.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'FEE_ITEM_TRNS_BLNC' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class FeeItemTrnsBlncBase : EntityBase, IFeeItemTrnsBlnc, IEntityId<FeeItemTrnsBlncKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private FeeItemTrnsBlncEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private FeeItemTrnsBlncEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private FeeItemTrnsBlncEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<FeeItemTrnsBlnc> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event FeeItemTrnsBlncEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event FeeItemTrnsBlncEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="FeeItemTrnsBlncBase"/> instance.
		///</summary>
		public FeeItemTrnsBlncBase()
		{
			this.entityData = new FeeItemTrnsBlncEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="FeeItemTrnsBlncBase"/> instance.
		///</summary>
		///<param name="_feeItemTrnsBlncId">عمليات الحسابات على بنود والرصيد</param>
		///<param name="_edStudId"></param>
		///<param name="_edAcadYearId"></param>
		///<param name="_edCodeSemesterId">مسلسل الفصل الدراسي</param>
		///<param name="_feeCodeItemId">بند حساب -بند رصيد 0</param>
		///<param name="_debitAmnt"></param>
		///<param name="_creditAmnt"></param>
		///<param name="_balanceAmnt"></param>
		///<param name="_trnsDate"></param>
		///<param name="_trnsDesc"></param>
		///<param name="_feeStudVoucherItemId">اذن دفع/ايصال سداد</param>
		///<param name="_feeRefndStdReqId"></param>
		///<param name="_edStudCourseRegId"></param>
		///<param name="_feeStudDiscId"></param>
		///<param name="_feeStudFeeItemId">بنود المصروفات على  طالب</param>
		///<param name="_trnsTypeId">Insert/Update/Delete</param>
		///<param name="_seUserTrnsId"></param>
		public FeeItemTrnsBlncBase(System.Decimal _feeItemTrnsBlncId, System.Decimal _edStudId, 
			System.Decimal _edAcadYearId, System.Decimal _edCodeSemesterId, System.Decimal _feeCodeItemId, 
			System.Decimal? _debitAmnt, System.Decimal? _creditAmnt, System.Decimal? _balanceAmnt, 
			System.DateTime _trnsDate, System.String _trnsDesc, System.Decimal? _feeStudVoucherItemId, 
			System.Decimal? _feeRefndStdReqId, System.Decimal? _edStudCourseRegId, System.Decimal? _feeStudDiscId, 
			System.Decimal? _feeStudFeeItemId, System.Int32? _trnsTypeId, System.Decimal? _seUserTrnsId)
		{
			this.entityData = new FeeItemTrnsBlncEntityData();
			this.backupData = null;

			this.FeeItemTrnsBlncId = _feeItemTrnsBlncId;
			this.EdStudId = _edStudId;
			this.EdAcadYearId = _edAcadYearId;
			this.EdCodeSemesterId = _edCodeSemesterId;
			this.FeeCodeItemId = _feeCodeItemId;
			this.DebitAmnt = _debitAmnt;
			this.CreditAmnt = _creditAmnt;
			this.BalanceAmnt = _balanceAmnt;
			this.TrnsDate = _trnsDate;
			this.TrnsDesc = _trnsDesc;
			this.FeeStudVoucherItemId = _feeStudVoucherItemId;
			this.FeeRefndStdReqId = _feeRefndStdReqId;
			this.EdStudCourseRegId = _edStudCourseRegId;
			this.FeeStudDiscId = _feeStudDiscId;
			this.FeeStudFeeItemId = _feeStudFeeItemId;
			this.TrnsTypeId = _trnsTypeId;
			this.SeUserTrnsId = _seUserTrnsId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="FeeItemTrnsBlnc"/> instance.
		///</summary>
		///<param name="_feeItemTrnsBlncId">عمليات الحسابات على بنود والرصيد</param>
		///<param name="_edStudId"></param>
		///<param name="_edAcadYearId"></param>
		///<param name="_edCodeSemesterId">مسلسل الفصل الدراسي</param>
		///<param name="_feeCodeItemId">بند حساب -بند رصيد 0</param>
		///<param name="_debitAmnt"></param>
		///<param name="_creditAmnt"></param>
		///<param name="_balanceAmnt"></param>
		///<param name="_trnsDate"></param>
		///<param name="_trnsDesc"></param>
		///<param name="_feeStudVoucherItemId">اذن دفع/ايصال سداد</param>
		///<param name="_feeRefndStdReqId"></param>
		///<param name="_edStudCourseRegId"></param>
		///<param name="_feeStudDiscId"></param>
		///<param name="_feeStudFeeItemId">بنود المصروفات على  طالب</param>
		///<param name="_trnsTypeId">Insert/Update/Delete</param>
		///<param name="_seUserTrnsId"></param>
		public static FeeItemTrnsBlnc CreateFeeItemTrnsBlnc(System.Decimal _feeItemTrnsBlncId, System.Decimal _edStudId, 
			System.Decimal _edAcadYearId, System.Decimal _edCodeSemesterId, System.Decimal _feeCodeItemId, 
			System.Decimal? _debitAmnt, System.Decimal? _creditAmnt, System.Decimal? _balanceAmnt, 
			System.DateTime _trnsDate, System.String _trnsDesc, System.Decimal? _feeStudVoucherItemId, 
			System.Decimal? _feeRefndStdReqId, System.Decimal? _edStudCourseRegId, System.Decimal? _feeStudDiscId, 
			System.Decimal? _feeStudFeeItemId, System.Int32? _trnsTypeId, System.Decimal? _seUserTrnsId)
		{
			FeeItemTrnsBlnc newFeeItemTrnsBlnc = new FeeItemTrnsBlnc();
			newFeeItemTrnsBlnc.FeeItemTrnsBlncId = _feeItemTrnsBlncId;
			newFeeItemTrnsBlnc.EdStudId = _edStudId;
			newFeeItemTrnsBlnc.EdAcadYearId = _edAcadYearId;
			newFeeItemTrnsBlnc.EdCodeSemesterId = _edCodeSemesterId;
			newFeeItemTrnsBlnc.FeeCodeItemId = _feeCodeItemId;
			newFeeItemTrnsBlnc.DebitAmnt = _debitAmnt;
			newFeeItemTrnsBlnc.CreditAmnt = _creditAmnt;
			newFeeItemTrnsBlnc.BalanceAmnt = _balanceAmnt;
			newFeeItemTrnsBlnc.TrnsDate = _trnsDate;
			newFeeItemTrnsBlnc.TrnsDesc = _trnsDesc;
			newFeeItemTrnsBlnc.FeeStudVoucherItemId = _feeStudVoucherItemId;
			newFeeItemTrnsBlnc.FeeRefndStdReqId = _feeRefndStdReqId;
			newFeeItemTrnsBlnc.EdStudCourseRegId = _edStudCourseRegId;
			newFeeItemTrnsBlnc.FeeStudDiscId = _feeStudDiscId;
			newFeeItemTrnsBlnc.FeeStudFeeItemId = _feeStudFeeItemId;
			newFeeItemTrnsBlnc.TrnsTypeId = _trnsTypeId;
			newFeeItemTrnsBlnc.SeUserTrnsId = _seUserTrnsId;
			return newFeeItemTrnsBlnc;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the FeeItemTrnsBlncId property. 
		///		عمليات الحسابات على بنود والرصيد
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"عمليات الحسابات على بنود والرصيد"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal FeeItemTrnsBlncId
		{
			get
			{
				return this.entityData.FeeItemTrnsBlncId; 
			}
			
			set
			{
				if (this.entityData.FeeItemTrnsBlncId == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.FeeItemTrnsBlncId, this.entityData.FeeItemTrnsBlncId);
				this.entityData.FeeItemTrnsBlncId = value;
				this.EntityId.FeeItemTrnsBlncId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.FeeItemTrnsBlncId, this.entityData.FeeItemTrnsBlncId);
				OnPropertyChanged("FeeItemTrnsBlncId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the FEE_ITEM_TRNS_BLNC_ID property.
		///		عمليات الحسابات على بنود والرصيد
		/// </summary>
		/// <remarks>This is the original value of the FEE_ITEM_TRNS_BLNC_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalFeeItemTrnsBlncId
		{
			get { return this.entityData.OriginalFeeItemTrnsBlncId; }
			set { this.entityData.OriginalFeeItemTrnsBlncId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EdStudId
		{
			get
			{
				return this.entityData.EdStudId; 
			}
			
			set
			{
				if (this.entityData.EdStudId == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.EdStudId, this.entityData.EdStudId);
				this.entityData.EdStudId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.EdStudId, this.entityData.EdStudId);
				OnPropertyChanged("EdStudId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdAcadYearId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EdAcadYearId
		{
			get
			{
				return this.entityData.EdAcadYearId; 
			}
			
			set
			{
				if (this.entityData.EdAcadYearId == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.EdAcadYearId, this.entityData.EdAcadYearId);
				this.entityData.EdAcadYearId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.EdAcadYearId, this.entityData.EdAcadYearId);
				OnPropertyChanged("EdAcadYearId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeSemesterId property. 
		///		مسلسل الفصل الدراسي
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"مسلسل الفصل الدراسي"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EdCodeSemesterId
		{
			get
			{
				return this.entityData.EdCodeSemesterId; 
			}
			
			set
			{
				if (this.entityData.EdCodeSemesterId == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.EdCodeSemesterId, this.entityData.EdCodeSemesterId);
				this.entityData.EdCodeSemesterId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.EdCodeSemesterId, this.entityData.EdCodeSemesterId);
				OnPropertyChanged("EdCodeSemesterId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeCodeItemId property. 
		///		بند حساب -بند رصيد 0
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"بند حساب -بند رصيد 0"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal FeeCodeItemId
		{
			get
			{
				return this.entityData.FeeCodeItemId; 
			}
			
			set
			{
				if (this.entityData.FeeCodeItemId == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.FeeCodeItemId, this.entityData.FeeCodeItemId);
				this.entityData.FeeCodeItemId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.FeeCodeItemId, this.entityData.FeeCodeItemId);
				OnPropertyChanged("FeeCodeItemId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DebitAmnt property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsDebitAmntNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DebitAmnt
		{
			get
			{
				return this.entityData.DebitAmnt; 
			}
			
			set
			{
				if (this.entityData.DebitAmnt == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.DebitAmnt, this.entityData.DebitAmnt);
				this.entityData.DebitAmnt = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.DebitAmnt, this.entityData.DebitAmnt);
				OnPropertyChanged("DebitAmnt");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CreditAmnt property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCreditAmntNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? CreditAmnt
		{
			get
			{
				return this.entityData.CreditAmnt; 
			}
			
			set
			{
				if (this.entityData.CreditAmnt == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.CreditAmnt, this.entityData.CreditAmnt);
				this.entityData.CreditAmnt = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.CreditAmnt, this.entityData.CreditAmnt);
				OnPropertyChanged("CreditAmnt");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BalanceAmnt property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsBalanceAmntNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? BalanceAmnt
		{
			get
			{
				return this.entityData.BalanceAmnt; 
			}
			
			set
			{
				if (this.entityData.BalanceAmnt == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.BalanceAmnt, this.entityData.BalanceAmnt);
				this.entityData.BalanceAmnt = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.BalanceAmnt, this.entityData.BalanceAmnt);
				OnPropertyChanged("BalanceAmnt");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TrnsDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.DateTime TrnsDate
		{
			get
			{
				return this.entityData.TrnsDate; 
			}
			
			set
			{
				if (this.entityData.TrnsDate == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.TrnsDate, this.entityData.TrnsDate);
				this.entityData.TrnsDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.TrnsDate, this.entityData.TrnsDate);
				OnPropertyChanged("TrnsDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TrnsDesc property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String TrnsDesc
		{
			get
			{
				return this.entityData.TrnsDesc; 
			}
			
			set
			{
				if (this.entityData.TrnsDesc == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.TrnsDesc, this.entityData.TrnsDesc);
				this.entityData.TrnsDesc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.TrnsDesc, this.entityData.TrnsDesc);
				OnPropertyChanged("TrnsDesc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeStudVoucherItemId property. 
		///		اذن دفع/ايصال سداد
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFeeStudVoucherItemIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"اذن دفع/ايصال سداد"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FeeStudVoucherItemId
		{
			get
			{
				return this.entityData.FeeStudVoucherItemId; 
			}
			
			set
			{
				if (this.entityData.FeeStudVoucherItemId == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.FeeStudVoucherItemId, this.entityData.FeeStudVoucherItemId);
				this.entityData.FeeStudVoucherItemId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.FeeStudVoucherItemId, this.entityData.FeeStudVoucherItemId);
				OnPropertyChanged("FeeStudVoucherItemId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeRefndStdReqId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFeeRefndStdReqIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FeeRefndStdReqId
		{
			get
			{
				return this.entityData.FeeRefndStdReqId; 
			}
			
			set
			{
				if (this.entityData.FeeRefndStdReqId == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.FeeRefndStdReqId, this.entityData.FeeRefndStdReqId);
				this.entityData.FeeRefndStdReqId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.FeeRefndStdReqId, this.entityData.FeeRefndStdReqId);
				OnPropertyChanged("FeeRefndStdReqId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudCourseRegId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudCourseRegIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudCourseRegId
		{
			get
			{
				return this.entityData.EdStudCourseRegId; 
			}
			
			set
			{
				if (this.entityData.EdStudCourseRegId == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.EdStudCourseRegId, this.entityData.EdStudCourseRegId);
				this.entityData.EdStudCourseRegId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.EdStudCourseRegId, this.entityData.EdStudCourseRegId);
				OnPropertyChanged("EdStudCourseRegId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeStudDiscId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFeeStudDiscIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FeeStudDiscId
		{
			get
			{
				return this.entityData.FeeStudDiscId; 
			}
			
			set
			{
				if (this.entityData.FeeStudDiscId == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.FeeStudDiscId, this.entityData.FeeStudDiscId);
				this.entityData.FeeStudDiscId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.FeeStudDiscId, this.entityData.FeeStudDiscId);
				OnPropertyChanged("FeeStudDiscId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeStudFeeItemId property. 
		///		بنود المصروفات على  طالب
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFeeStudFeeItemIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"بنود المصروفات على  طالب"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FeeStudFeeItemId
		{
			get
			{
				return this.entityData.FeeStudFeeItemId; 
			}
			
			set
			{
				if (this.entityData.FeeStudFeeItemId == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.FeeStudFeeItemId, this.entityData.FeeStudFeeItemId);
				this.entityData.FeeStudFeeItemId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.FeeStudFeeItemId, this.entityData.FeeStudFeeItemId);
				OnPropertyChanged("FeeStudFeeItemId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TrnsTypeId property. 
		///		Insert/Update/Delete
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsTrnsTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"Insert/Update/Delete"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? TrnsTypeId
		{
			get
			{
				return this.entityData.TrnsTypeId; 
			}
			
			set
			{
				if (this.entityData.TrnsTypeId == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.TrnsTypeId, this.entityData.TrnsTypeId);
				this.entityData.TrnsTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.TrnsTypeId, this.entityData.TrnsTypeId);
				OnPropertyChanged("TrnsTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserTrnsId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserTrnsIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserTrnsId
		{
			get
			{
				return this.entityData.SeUserTrnsId; 
			}
			
			set
			{
				if (this.entityData.SeUserTrnsId == value)
					return;
					
				OnColumnChanging(FeeItemTrnsBlncColumn.SeUserTrnsId, this.entityData.SeUserTrnsId);
				this.entityData.SeUserTrnsId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeItemTrnsBlncColumn.SeUserTrnsId, this.entityData.SeUserTrnsId);
				OnPropertyChanged("SeUserTrnsId");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="EdAcadYear"/>.
		/// </summary>
		/// <value>The source EdAcadYear for EdAcadYearId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdAcadYear EdAcadYearIdSource
      	{
            get { return entityData.EdAcadYearIdSource; }
            set { entityData.EdAcadYearIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeSemester"/>.
		/// </summary>
		/// <value>The source EdCodeSemester for EdCodeSemesterId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeSemester EdCodeSemesterIdSource
      	{
            get { return entityData.EdCodeSemesterIdSource; }
            set { entityData.EdCodeSemesterIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStud"/>.
		/// </summary>
		/// <value>The source EdStud for EdStudId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStud EdStudIdSource
      	{
            get { return entityData.EdStudIdSource; }
            set { entityData.EdStudIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStudCourseReg"/>.
		/// </summary>
		/// <value>The source EdStudCourseReg for EdStudCourseRegId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStudCourseReg EdStudCourseRegIdSource
      	{
            get { return entityData.EdStudCourseRegIdSource; }
            set { entityData.EdStudCourseRegIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="FeeCodeItem"/>.
		/// </summary>
		/// <value>The source FeeCodeItem for FeeCodeItemId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeCodeItem FeeCodeItemIdSource
      	{
            get { return entityData.FeeCodeItemIdSource; }
            set { entityData.FeeCodeItemIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="FeeStudDisc"/>.
		/// </summary>
		/// <value>The source FeeStudDisc for FeeStudDiscId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeStudDisc FeeStudDiscIdSource
      	{
            get { return entityData.FeeStudDiscIdSource; }
            set { entityData.FeeStudDiscIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="FeeStudFeeItem"/>.
		/// </summary>
		/// <value>The source FeeStudFeeItem for FeeStudFeeItemId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeStudFeeItem FeeStudFeeItemIdSource
      	{
            get { return entityData.FeeStudFeeItemIdSource; }
            set { entityData.FeeStudFeeItemIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="FeeStudVoucherItem"/>.
		/// </summary>
		/// <value>The source FeeStudVoucherItem for FeeStudVoucherItemId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeStudVoucherItem FeeStudVoucherItemIdSource
      	{
            get { return entityData.FeeStudVoucherItemIdSource; }
            set { entityData.FeeStudVoucherItemIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SeUser"/>.
		/// </summary>
		/// <value>The source SeUser for SeUserTrnsId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SeUser SeUserTrnsIdSource
      	{
            get { return entityData.SeUserTrnsIdSource; }
            set { entityData.SeUserTrnsIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TrnsDesc", "Trns Desc", 250));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "FEE_ITEM_TRNS_BLNC"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"FEE_ITEM_TRNS_BLNC_ID", "ED_STUD_ID", "ED_ACAD_YEAR_ID", "ED_CODE_SEMESTER_ID", "FEE_CODE_ITEM_ID", "DEBIT_AMNT", "CREDIT_AMNT", "BALANCE_AMNT", "TRNS_DATE", "TRNS_DESC", "FEE_STUD_VOUCHER_ITEM_ID", "FEE_REFND_STD_REQ_ID", "ED_STUD_COURSE_REG_ID", "FEE_STUD_DISC_ID", "FEE_STUD_FEE_ITEM_ID", "TRNS_TYPE_ID", "SE_USER_TRNS_ID"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as FeeItemTrnsBlncEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (FeeItemTrnsBlnc) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<FeeItemTrnsBlnc>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as FeeItemTrnsBlnc);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed FeeItemTrnsBlnc Entity 
		///</summary>
		protected virtual FeeItemTrnsBlnc Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			FeeItemTrnsBlnc copy = new FeeItemTrnsBlnc();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.FeeItemTrnsBlncId = this.FeeItemTrnsBlncId;
					copy.OriginalFeeItemTrnsBlncId = this.OriginalFeeItemTrnsBlncId;
				copy.EdStudId = this.EdStudId;
				copy.EdAcadYearId = this.EdAcadYearId;
				copy.EdCodeSemesterId = this.EdCodeSemesterId;
				copy.FeeCodeItemId = this.FeeCodeItemId;
				copy.DebitAmnt = this.DebitAmnt;
				copy.CreditAmnt = this.CreditAmnt;
				copy.BalanceAmnt = this.BalanceAmnt;
				copy.TrnsDate = this.TrnsDate;
				copy.TrnsDesc = this.TrnsDesc;
				copy.FeeStudVoucherItemId = this.FeeStudVoucherItemId;
				copy.FeeRefndStdReqId = this.FeeRefndStdReqId;
				copy.EdStudCourseRegId = this.EdStudCourseRegId;
				copy.FeeStudDiscId = this.FeeStudDiscId;
				copy.FeeStudFeeItemId = this.FeeStudFeeItemId;
				copy.TrnsTypeId = this.TrnsTypeId;
				copy.SeUserTrnsId = this.SeUserTrnsId;
			
			if (this.EdAcadYearIdSource != null && existingCopies.Contains(this.EdAcadYearIdSource))
				copy.EdAcadYearIdSource = existingCopies[this.EdAcadYearIdSource] as EdAcadYear;
			else
				copy.EdAcadYearIdSource = MakeCopyOf(this.EdAcadYearIdSource, existingCopies) as EdAcadYear;
			if (this.EdCodeSemesterIdSource != null && existingCopies.Contains(this.EdCodeSemesterIdSource))
				copy.EdCodeSemesterIdSource = existingCopies[this.EdCodeSemesterIdSource] as EdCodeSemester;
			else
				copy.EdCodeSemesterIdSource = MakeCopyOf(this.EdCodeSemesterIdSource, existingCopies) as EdCodeSemester;
			if (this.EdStudIdSource != null && existingCopies.Contains(this.EdStudIdSource))
				copy.EdStudIdSource = existingCopies[this.EdStudIdSource] as EdStud;
			else
				copy.EdStudIdSource = MakeCopyOf(this.EdStudIdSource, existingCopies) as EdStud;
			if (this.EdStudCourseRegIdSource != null && existingCopies.Contains(this.EdStudCourseRegIdSource))
				copy.EdStudCourseRegIdSource = existingCopies[this.EdStudCourseRegIdSource] as EdStudCourseReg;
			else
				copy.EdStudCourseRegIdSource = MakeCopyOf(this.EdStudCourseRegIdSource, existingCopies) as EdStudCourseReg;
			if (this.FeeCodeItemIdSource != null && existingCopies.Contains(this.FeeCodeItemIdSource))
				copy.FeeCodeItemIdSource = existingCopies[this.FeeCodeItemIdSource] as FeeCodeItem;
			else
				copy.FeeCodeItemIdSource = MakeCopyOf(this.FeeCodeItemIdSource, existingCopies) as FeeCodeItem;
			if (this.FeeStudDiscIdSource != null && existingCopies.Contains(this.FeeStudDiscIdSource))
				copy.FeeStudDiscIdSource = existingCopies[this.FeeStudDiscIdSource] as FeeStudDisc;
			else
				copy.FeeStudDiscIdSource = MakeCopyOf(this.FeeStudDiscIdSource, existingCopies) as FeeStudDisc;
			if (this.FeeStudFeeItemIdSource != null && existingCopies.Contains(this.FeeStudFeeItemIdSource))
				copy.FeeStudFeeItemIdSource = existingCopies[this.FeeStudFeeItemIdSource] as FeeStudFeeItem;
			else
				copy.FeeStudFeeItemIdSource = MakeCopyOf(this.FeeStudFeeItemIdSource, existingCopies) as FeeStudFeeItem;
			if (this.FeeStudVoucherItemIdSource != null && existingCopies.Contains(this.FeeStudVoucherItemIdSource))
				copy.FeeStudVoucherItemIdSource = existingCopies[this.FeeStudVoucherItemIdSource] as FeeStudVoucherItem;
			else
				copy.FeeStudVoucherItemIdSource = MakeCopyOf(this.FeeStudVoucherItemIdSource, existingCopies) as FeeStudVoucherItem;
			if (this.SeUserTrnsIdSource != null && existingCopies.Contains(this.SeUserTrnsIdSource))
				copy.SeUserTrnsIdSource = existingCopies[this.SeUserTrnsIdSource] as SeUser;
			else
				copy.SeUserTrnsIdSource = MakeCopyOf(this.SeUserTrnsIdSource, existingCopies) as SeUser;
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed FeeItemTrnsBlnc Entity 
		///</summary>
		public virtual FeeItemTrnsBlnc Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed FeeItemTrnsBlnc Entity which is a deep copy of the current entity.
		///</summary>
		public virtual FeeItemTrnsBlnc DeepCopy()
		{
			return EntityHelper.Clone<FeeItemTrnsBlnc>(this as FeeItemTrnsBlnc);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as FeeItemTrnsBlncEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new FeeItemTrnsBlncEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as FeeItemTrnsBlncEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(FeeItemTrnsBlncColumn column)
		{
			switch(column)
			{
					case FeeItemTrnsBlncColumn.FeeItemTrnsBlncId:
					return entityData.FeeItemTrnsBlncId != _originalData.FeeItemTrnsBlncId;
					case FeeItemTrnsBlncColumn.EdStudId:
					return entityData.EdStudId != _originalData.EdStudId;
					case FeeItemTrnsBlncColumn.EdAcadYearId:
					return entityData.EdAcadYearId != _originalData.EdAcadYearId;
					case FeeItemTrnsBlncColumn.EdCodeSemesterId:
					return entityData.EdCodeSemesterId != _originalData.EdCodeSemesterId;
					case FeeItemTrnsBlncColumn.FeeCodeItemId:
					return entityData.FeeCodeItemId != _originalData.FeeCodeItemId;
					case FeeItemTrnsBlncColumn.DebitAmnt:
					return entityData.DebitAmnt != _originalData.DebitAmnt;
					case FeeItemTrnsBlncColumn.CreditAmnt:
					return entityData.CreditAmnt != _originalData.CreditAmnt;
					case FeeItemTrnsBlncColumn.BalanceAmnt:
					return entityData.BalanceAmnt != _originalData.BalanceAmnt;
					case FeeItemTrnsBlncColumn.TrnsDate:
					return entityData.TrnsDate != _originalData.TrnsDate;
					case FeeItemTrnsBlncColumn.TrnsDesc:
					return entityData.TrnsDesc != _originalData.TrnsDesc;
					case FeeItemTrnsBlncColumn.FeeStudVoucherItemId:
					return entityData.FeeStudVoucherItemId != _originalData.FeeStudVoucherItemId;
					case FeeItemTrnsBlncColumn.FeeRefndStdReqId:
					return entityData.FeeRefndStdReqId != _originalData.FeeRefndStdReqId;
					case FeeItemTrnsBlncColumn.EdStudCourseRegId:
					return entityData.EdStudCourseRegId != _originalData.EdStudCourseRegId;
					case FeeItemTrnsBlncColumn.FeeStudDiscId:
					return entityData.FeeStudDiscId != _originalData.FeeStudDiscId;
					case FeeItemTrnsBlncColumn.FeeStudFeeItemId:
					return entityData.FeeStudFeeItemId != _originalData.FeeStudFeeItemId;
					case FeeItemTrnsBlncColumn.TrnsTypeId:
					return entityData.TrnsTypeId != _originalData.TrnsTypeId;
					case FeeItemTrnsBlncColumn.SeUserTrnsId:
					return entityData.SeUserTrnsId != _originalData.SeUserTrnsId;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< FeeItemTrnsBlncColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.FeeItemTrnsBlncId != _originalData.FeeItemTrnsBlncId;
			result = result || entityData.EdStudId != _originalData.EdStudId;
			result = result || entityData.EdAcadYearId != _originalData.EdAcadYearId;
			result = result || entityData.EdCodeSemesterId != _originalData.EdCodeSemesterId;
			result = result || entityData.FeeCodeItemId != _originalData.FeeCodeItemId;
			result = result || entityData.DebitAmnt != _originalData.DebitAmnt;
			result = result || entityData.CreditAmnt != _originalData.CreditAmnt;
			result = result || entityData.BalanceAmnt != _originalData.BalanceAmnt;
			result = result || entityData.TrnsDate != _originalData.TrnsDate;
			result = result || entityData.TrnsDesc != _originalData.TrnsDesc;
			result = result || entityData.FeeStudVoucherItemId != _originalData.FeeStudVoucherItemId;
			result = result || entityData.FeeRefndStdReqId != _originalData.FeeRefndStdReqId;
			result = result || entityData.EdStudCourseRegId != _originalData.EdStudCourseRegId;
			result = result || entityData.FeeStudDiscId != _originalData.FeeStudDiscId;
			result = result || entityData.FeeStudFeeItemId != _originalData.FeeStudFeeItemId;
			result = result || entityData.TrnsTypeId != _originalData.TrnsTypeId;
			result = result || entityData.SeUserTrnsId != _originalData.SeUserTrnsId;
			return result;
		}	
		
		///<summary>
		///  Returns a FeeItemTrnsBlnc Entity with the original data.
		///</summary>
		public FeeItemTrnsBlnc GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateFeeItemTrnsBlnc(
				_originalData.FeeItemTrnsBlncId,
				_originalData.EdStudId,
				_originalData.EdAcadYearId,
				_originalData.EdCodeSemesterId,
				_originalData.FeeCodeItemId,
				_originalData.DebitAmnt,
				_originalData.CreditAmnt,
				_originalData.BalanceAmnt,
				_originalData.TrnsDate,
				_originalData.TrnsDesc,
				_originalData.FeeStudVoucherItemId,
				_originalData.FeeRefndStdReqId,
				_originalData.EdStudCourseRegId,
				_originalData.FeeStudDiscId,
				_originalData.FeeStudFeeItemId,
				_originalData.TrnsTypeId,
				_originalData.SeUserTrnsId
				);
				
			return (FeeItemTrnsBlnc)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="FeeItemTrnsBlncBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is FeeItemTrnsBlncBase)
				return ValueEquals(this, (FeeItemTrnsBlncBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="FeeItemTrnsBlncBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.FeeItemTrnsBlncId.GetHashCode() ^ 
					this.EdStudId.GetHashCode() ^ 
					this.EdAcadYearId.GetHashCode() ^ 
					this.EdCodeSemesterId.GetHashCode() ^ 
					this.FeeCodeItemId.GetHashCode() ^ 
					((this.DebitAmnt == null) ? string.Empty : this.DebitAmnt.ToString()).GetHashCode() ^ 
					((this.CreditAmnt == null) ? string.Empty : this.CreditAmnt.ToString()).GetHashCode() ^ 
					((this.BalanceAmnt == null) ? string.Empty : this.BalanceAmnt.ToString()).GetHashCode() ^ 
					this.TrnsDate.GetHashCode() ^ 
					((this.TrnsDesc == null) ? string.Empty : this.TrnsDesc.ToString()).GetHashCode() ^ 
					((this.FeeStudVoucherItemId == null) ? string.Empty : this.FeeStudVoucherItemId.ToString()).GetHashCode() ^ 
					((this.FeeRefndStdReqId == null) ? string.Empty : this.FeeRefndStdReqId.ToString()).GetHashCode() ^ 
					((this.EdStudCourseRegId == null) ? string.Empty : this.EdStudCourseRegId.ToString()).GetHashCode() ^ 
					((this.FeeStudDiscId == null) ? string.Empty : this.FeeStudDiscId.ToString()).GetHashCode() ^ 
					((this.FeeStudFeeItemId == null) ? string.Empty : this.FeeStudFeeItemId.ToString()).GetHashCode() ^ 
					((this.TrnsTypeId == null) ? string.Empty : this.TrnsTypeId.ToString()).GetHashCode() ^ 
					((this.SeUserTrnsId == null) ? string.Empty : this.SeUserTrnsId.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="FeeItemTrnsBlncBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(FeeItemTrnsBlncBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="FeeItemTrnsBlncBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="FeeItemTrnsBlncBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="FeeItemTrnsBlncBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(FeeItemTrnsBlncBase Object1, FeeItemTrnsBlncBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.FeeItemTrnsBlncId != Object2.FeeItemTrnsBlncId)
				equal = false;
			if (Object1.EdStudId != Object2.EdStudId)
				equal = false;
			if (Object1.EdAcadYearId != Object2.EdAcadYearId)
				equal = false;
			if (Object1.EdCodeSemesterId != Object2.EdCodeSemesterId)
				equal = false;
			if (Object1.FeeCodeItemId != Object2.FeeCodeItemId)
				equal = false;
			if ( Object1.DebitAmnt != null && Object2.DebitAmnt != null )
			{
				if (Object1.DebitAmnt != Object2.DebitAmnt)
					equal = false;
			}
			else if (Object1.DebitAmnt == null ^ Object2.DebitAmnt == null )
			{
				equal = false;
			}
			if ( Object1.CreditAmnt != null && Object2.CreditAmnt != null )
			{
				if (Object1.CreditAmnt != Object2.CreditAmnt)
					equal = false;
			}
			else if (Object1.CreditAmnt == null ^ Object2.CreditAmnt == null )
			{
				equal = false;
			}
			if ( Object1.BalanceAmnt != null && Object2.BalanceAmnt != null )
			{
				if (Object1.BalanceAmnt != Object2.BalanceAmnt)
					equal = false;
			}
			else if (Object1.BalanceAmnt == null ^ Object2.BalanceAmnt == null )
			{
				equal = false;
			}
			if (Object1.TrnsDate != Object2.TrnsDate)
				equal = false;
			if ( Object1.TrnsDesc != null && Object2.TrnsDesc != null )
			{
				if (Object1.TrnsDesc != Object2.TrnsDesc)
					equal = false;
			}
			else if (Object1.TrnsDesc == null ^ Object2.TrnsDesc == null )
			{
				equal = false;
			}
			if ( Object1.FeeStudVoucherItemId != null && Object2.FeeStudVoucherItemId != null )
			{
				if (Object1.FeeStudVoucherItemId != Object2.FeeStudVoucherItemId)
					equal = false;
			}
			else if (Object1.FeeStudVoucherItemId == null ^ Object2.FeeStudVoucherItemId == null )
			{
				equal = false;
			}
			if ( Object1.FeeRefndStdReqId != null && Object2.FeeRefndStdReqId != null )
			{
				if (Object1.FeeRefndStdReqId != Object2.FeeRefndStdReqId)
					equal = false;
			}
			else if (Object1.FeeRefndStdReqId == null ^ Object2.FeeRefndStdReqId == null )
			{
				equal = false;
			}
			if ( Object1.EdStudCourseRegId != null && Object2.EdStudCourseRegId != null )
			{
				if (Object1.EdStudCourseRegId != Object2.EdStudCourseRegId)
					equal = false;
			}
			else if (Object1.EdStudCourseRegId == null ^ Object2.EdStudCourseRegId == null )
			{
				equal = false;
			}
			if ( Object1.FeeStudDiscId != null && Object2.FeeStudDiscId != null )
			{
				if (Object1.FeeStudDiscId != Object2.FeeStudDiscId)
					equal = false;
			}
			else if (Object1.FeeStudDiscId == null ^ Object2.FeeStudDiscId == null )
			{
				equal = false;
			}
			if ( Object1.FeeStudFeeItemId != null && Object2.FeeStudFeeItemId != null )
			{
				if (Object1.FeeStudFeeItemId != Object2.FeeStudFeeItemId)
					equal = false;
			}
			else if (Object1.FeeStudFeeItemId == null ^ Object2.FeeStudFeeItemId == null )
			{
				equal = false;
			}
			if ( Object1.TrnsTypeId != null && Object2.TrnsTypeId != null )
			{
				if (Object1.TrnsTypeId != Object2.TrnsTypeId)
					equal = false;
			}
			else if (Object1.TrnsTypeId == null ^ Object2.TrnsTypeId == null )
			{
				equal = false;
			}
			if ( Object1.SeUserTrnsId != null && Object2.SeUserTrnsId != null )
			{
				if (Object1.SeUserTrnsId != Object2.SeUserTrnsId)
					equal = false;
			}
			else if (Object1.SeUserTrnsId == null ^ Object2.SeUserTrnsId == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((FeeItemTrnsBlncBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static FeeItemTrnsBlncComparer GetComparer()
        {
            return new FeeItemTrnsBlncComparer();
        }
        */

        // Comparer delegates back to FeeItemTrnsBlnc
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(FeeItemTrnsBlnc rhs, FeeItemTrnsBlncColumn which)
        {
            switch (which)
            {
            	
            	
            	case FeeItemTrnsBlncColumn.FeeItemTrnsBlncId:
            		return this.FeeItemTrnsBlncId.CompareTo(rhs.FeeItemTrnsBlncId);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.EdStudId:
            		return this.EdStudId.CompareTo(rhs.EdStudId);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.EdAcadYearId:
            		return this.EdAcadYearId.CompareTo(rhs.EdAcadYearId);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.EdCodeSemesterId:
            		return this.EdCodeSemesterId.CompareTo(rhs.EdCodeSemesterId);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.FeeCodeItemId:
            		return this.FeeCodeItemId.CompareTo(rhs.FeeCodeItemId);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.DebitAmnt:
            		return this.DebitAmnt.Value.CompareTo(rhs.DebitAmnt.Value);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.CreditAmnt:
            		return this.CreditAmnt.Value.CompareTo(rhs.CreditAmnt.Value);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.BalanceAmnt:
            		return this.BalanceAmnt.Value.CompareTo(rhs.BalanceAmnt.Value);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.TrnsDate:
            		return this.TrnsDate.CompareTo(rhs.TrnsDate);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.TrnsDesc:
            		return this.TrnsDesc.CompareTo(rhs.TrnsDesc);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.FeeStudVoucherItemId:
            		return this.FeeStudVoucherItemId.Value.CompareTo(rhs.FeeStudVoucherItemId.Value);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.FeeRefndStdReqId:
            		return this.FeeRefndStdReqId.Value.CompareTo(rhs.FeeRefndStdReqId.Value);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.EdStudCourseRegId:
            		return this.EdStudCourseRegId.Value.CompareTo(rhs.EdStudCourseRegId.Value);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.FeeStudDiscId:
            		return this.FeeStudDiscId.Value.CompareTo(rhs.FeeStudDiscId.Value);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.FeeStudFeeItemId:
            		return this.FeeStudFeeItemId.Value.CompareTo(rhs.FeeStudFeeItemId.Value);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.TrnsTypeId:
            		return this.TrnsTypeId.Value.CompareTo(rhs.TrnsTypeId.Value);
            		
            		                 
            	
            	
            	case FeeItemTrnsBlncColumn.SeUserTrnsId:
            		return this.SeUserTrnsId.Value.CompareTo(rhs.SeUserTrnsId.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<FeeItemTrnsBlncKey> Members
		
		// member variable for the EntityId property
		private FeeItemTrnsBlncKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual FeeItemTrnsBlncKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new FeeItemTrnsBlncKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("FeeItemTrnsBlnc")
					.Append("|").Append( this.FeeItemTrnsBlncId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{18}{17}- FeeItemTrnsBlncId: {0}{17}- EdStudId: {1}{17}- EdAcadYearId: {2}{17}- EdCodeSemesterId: {3}{17}- FeeCodeItemId: {4}{17}- DebitAmnt: {5}{17}- CreditAmnt: {6}{17}- BalanceAmnt: {7}{17}- TrnsDate: {8}{17}- TrnsDesc: {9}{17}- FeeStudVoucherItemId: {10}{17}- FeeRefndStdReqId: {11}{17}- EdStudCourseRegId: {12}{17}- FeeStudDiscId: {13}{17}- FeeStudFeeItemId: {14}{17}- TrnsTypeId: {15}{17}- SeUserTrnsId: {16}{17}{19}", 
				this.FeeItemTrnsBlncId,
				this.EdStudId,
				this.EdAcadYearId,
				this.EdCodeSemesterId,
				this.FeeCodeItemId,
				(this.DebitAmnt == null) ? string.Empty : this.DebitAmnt.ToString(),
				(this.CreditAmnt == null) ? string.Empty : this.CreditAmnt.ToString(),
				(this.BalanceAmnt == null) ? string.Empty : this.BalanceAmnt.ToString(),
				this.TrnsDate,
				(this.TrnsDesc == null) ? string.Empty : this.TrnsDesc.ToString(),
				(this.FeeStudVoucherItemId == null) ? string.Empty : this.FeeStudVoucherItemId.ToString(),
				(this.FeeRefndStdReqId == null) ? string.Empty : this.FeeRefndStdReqId.ToString(),
				(this.EdStudCourseRegId == null) ? string.Empty : this.EdStudCourseRegId.ToString(),
				(this.FeeStudDiscId == null) ? string.Empty : this.FeeStudDiscId.ToString(),
				(this.FeeStudFeeItemId == null) ? string.Empty : this.FeeStudFeeItemId.ToString(),
				(this.TrnsTypeId == null) ? string.Empty : this.TrnsTypeId.ToString(),
				(this.SeUserTrnsId == null) ? string.Empty : this.SeUserTrnsId.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'FEE_ITEM_TRNS_BLNC' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class FeeItemTrnsBlncEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// FEE_ITEM_TRNS_BLNC_ID : عمليات الحسابات على بنود والرصيد
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "FEE_ITEM_TRNS_BLNC"</remarks>
		public System.Decimal FeeItemTrnsBlncId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalFeeItemTrnsBlncId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// ED_STUD_ID : 
		/// </summary>
		public System.Decimal		  EdStudId = 0.0m;
		
		/// <summary>
		/// ED_ACAD_YEAR_ID : 
		/// </summary>
		public System.Decimal		  EdAcadYearId = 0.0m;
		
		/// <summary>
		/// ED_CODE_SEMESTER_ID : مسلسل الفصل الدراسي
		/// </summary>
		public System.Decimal		  EdCodeSemesterId = 0.0m;
		
		/// <summary>
		/// FEE_CODE_ITEM_ID : بند حساب -بند رصيد 0
		/// </summary>
		public System.Decimal		  FeeCodeItemId = 0.0m;
		
		/// <summary>
		/// DEBIT_AMNT : 
		/// </summary>
		public System.Decimal?		  DebitAmnt = null;
		
		/// <summary>
		/// CREDIT_AMNT : 
		/// </summary>
		public System.Decimal?		  CreditAmnt = null;
		
		/// <summary>
		/// BALANCE_AMNT : 
		/// </summary>
		public System.Decimal?		  BalanceAmnt = null;
		
		/// <summary>
		/// TRNS_DATE : 
		/// </summary>
		public System.DateTime		  TrnsDate = DateTime.MinValue;
		
		/// <summary>
		/// TRNS_DESC : 
		/// </summary>
		public System.String		  TrnsDesc = null;
		
		/// <summary>
		/// FEE_STUD_VOUCHER_ITEM_ID : اذن دفع/ايصال سداد
		/// </summary>
		public System.Decimal?		  FeeStudVoucherItemId = null;
		
		/// <summary>
		/// FEE_REFND_STD_REQ_ID : 
		/// </summary>
		public System.Decimal?		  FeeRefndStdReqId = null;
		
		/// <summary>
		/// ED_STUD_COURSE_REG_ID : 
		/// </summary>
		public System.Decimal?		  EdStudCourseRegId = null;
		
		/// <summary>
		/// FEE_STUD_DISC_ID : 
		/// </summary>
		public System.Decimal?		  FeeStudDiscId = null;
		
		/// <summary>
		/// FEE_STUD_FEE_ITEM_ID : بنود المصروفات على  طالب
		/// </summary>
		public System.Decimal?		  FeeStudFeeItemId = null;
		
		/// <summary>
		/// TRNS_TYPE_ID : Insert/Update/Delete
		/// </summary>
		public System.Int32?		  TrnsTypeId = null;
		
		/// <summary>
		/// SE_USER_TRNS_ID : 
		/// </summary>
		public System.Decimal?		  SeUserTrnsId = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private EdAcadYear _edAcadYearIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdAcadYear"/>.
		/// </summary>
		/// <value>The source EdAcadYear for EdAcadYearId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdAcadYear EdAcadYearIdSource
      	{
            get { return this._edAcadYearIdSource; }
            set { this._edAcadYearIdSource = value; }
      	}
		private EdCodeSemester _edCodeSemesterIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeSemester"/>.
		/// </summary>
		/// <value>The source EdCodeSemester for EdCodeSemesterId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeSemester EdCodeSemesterIdSource
      	{
            get { return this._edCodeSemesterIdSource; }
            set { this._edCodeSemesterIdSource = value; }
      	}
		private EdStud _edStudIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStud"/>.
		/// </summary>
		/// <value>The source EdStud for EdStudId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStud EdStudIdSource
      	{
            get { return this._edStudIdSource; }
            set { this._edStudIdSource = value; }
      	}
		private EdStudCourseReg _edStudCourseRegIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStudCourseReg"/>.
		/// </summary>
		/// <value>The source EdStudCourseReg for EdStudCourseRegId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStudCourseReg EdStudCourseRegIdSource
      	{
            get { return this._edStudCourseRegIdSource; }
            set { this._edStudCourseRegIdSource = value; }
      	}
		private FeeCodeItem _feeCodeItemIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeCodeItem"/>.
		/// </summary>
		/// <value>The source FeeCodeItem for FeeCodeItemId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeCodeItem FeeCodeItemIdSource
      	{
            get { return this._feeCodeItemIdSource; }
            set { this._feeCodeItemIdSource = value; }
      	}
		private FeeStudDisc _feeStudDiscIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeStudDisc"/>.
		/// </summary>
		/// <value>The source FeeStudDisc for FeeStudDiscId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeStudDisc FeeStudDiscIdSource
      	{
            get { return this._feeStudDiscIdSource; }
            set { this._feeStudDiscIdSource = value; }
      	}
		private FeeStudFeeItem _feeStudFeeItemIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeStudFeeItem"/>.
		/// </summary>
		/// <value>The source FeeStudFeeItem for FeeStudFeeItemId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeStudFeeItem FeeStudFeeItemIdSource
      	{
            get { return this._feeStudFeeItemIdSource; }
            set { this._feeStudFeeItemIdSource = value; }
      	}
		private FeeStudVoucherItem _feeStudVoucherItemIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeStudVoucherItem"/>.
		/// </summary>
		/// <value>The source FeeStudVoucherItem for FeeStudVoucherItemId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeStudVoucherItem FeeStudVoucherItemIdSource
      	{
            get { return this._feeStudVoucherItemIdSource; }
            set { this._feeStudVoucherItemIdSource = value; }
      	}
		private SeUser _seUserTrnsIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SeUser"/>.
		/// </summary>
		/// <value>The source SeUser for SeUserTrnsId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SeUser SeUserTrnsIdSource
      	{
            get { return this._seUserTrnsIdSource; }
            set { this._seUserTrnsIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			FeeItemTrnsBlncEntityData _tmp = new FeeItemTrnsBlncEntityData();
						
			_tmp.FeeItemTrnsBlncId = this.FeeItemTrnsBlncId;
			_tmp.OriginalFeeItemTrnsBlncId = this.OriginalFeeItemTrnsBlncId;
			
			_tmp.EdStudId = this.EdStudId;
			_tmp.EdAcadYearId = this.EdAcadYearId;
			_tmp.EdCodeSemesterId = this.EdCodeSemesterId;
			_tmp.FeeCodeItemId = this.FeeCodeItemId;
			_tmp.DebitAmnt = this.DebitAmnt;
			_tmp.CreditAmnt = this.CreditAmnt;
			_tmp.BalanceAmnt = this.BalanceAmnt;
			_tmp.TrnsDate = this.TrnsDate;
			_tmp.TrnsDesc = this.TrnsDesc;
			_tmp.FeeStudVoucherItemId = this.FeeStudVoucherItemId;
			_tmp.FeeRefndStdReqId = this.FeeRefndStdReqId;
			_tmp.EdStudCourseRegId = this.EdStudCourseRegId;
			_tmp.FeeStudDiscId = this.FeeStudDiscId;
			_tmp.FeeStudFeeItemId = this.FeeStudFeeItemId;
			_tmp.TrnsTypeId = this.TrnsTypeId;
			_tmp.SeUserTrnsId = this.SeUserTrnsId;
			
			#region Source Parent Composite Entities
			if (this.EdAcadYearIdSource != null)
				_tmp.EdAcadYearIdSource = MakeCopyOf(this.EdAcadYearIdSource) as EdAcadYear;
			if (this.EdCodeSemesterIdSource != null)
				_tmp.EdCodeSemesterIdSource = MakeCopyOf(this.EdCodeSemesterIdSource) as EdCodeSemester;
			if (this.EdStudIdSource != null)
				_tmp.EdStudIdSource = MakeCopyOf(this.EdStudIdSource) as EdStud;
			if (this.EdStudCourseRegIdSource != null)
				_tmp.EdStudCourseRegIdSource = MakeCopyOf(this.EdStudCourseRegIdSource) as EdStudCourseReg;
			if (this.FeeCodeItemIdSource != null)
				_tmp.FeeCodeItemIdSource = MakeCopyOf(this.FeeCodeItemIdSource) as FeeCodeItem;
			if (this.FeeStudDiscIdSource != null)
				_tmp.FeeStudDiscIdSource = MakeCopyOf(this.FeeStudDiscIdSource) as FeeStudDisc;
			if (this.FeeStudFeeItemIdSource != null)
				_tmp.FeeStudFeeItemIdSource = MakeCopyOf(this.FeeStudFeeItemIdSource) as FeeStudFeeItem;
			if (this.FeeStudVoucherItemIdSource != null)
				_tmp.FeeStudVoucherItemIdSource = MakeCopyOf(this.FeeStudVoucherItemIdSource) as FeeStudVoucherItem;
			if (this.SeUserTrnsIdSource != null)
				_tmp.SeUserTrnsIdSource = MakeCopyOf(this.SeUserTrnsIdSource) as SeUser;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			FeeItemTrnsBlncEntityData _tmp = new FeeItemTrnsBlncEntityData();
						
			_tmp.FeeItemTrnsBlncId = this.FeeItemTrnsBlncId;
			_tmp.OriginalFeeItemTrnsBlncId = this.OriginalFeeItemTrnsBlncId;
			
			_tmp.EdStudId = this.EdStudId;
			_tmp.EdAcadYearId = this.EdAcadYearId;
			_tmp.EdCodeSemesterId = this.EdCodeSemesterId;
			_tmp.FeeCodeItemId = this.FeeCodeItemId;
			_tmp.DebitAmnt = this.DebitAmnt;
			_tmp.CreditAmnt = this.CreditAmnt;
			_tmp.BalanceAmnt = this.BalanceAmnt;
			_tmp.TrnsDate = this.TrnsDate;
			_tmp.TrnsDesc = this.TrnsDesc;
			_tmp.FeeStudVoucherItemId = this.FeeStudVoucherItemId;
			_tmp.FeeRefndStdReqId = this.FeeRefndStdReqId;
			_tmp.EdStudCourseRegId = this.EdStudCourseRegId;
			_tmp.FeeStudDiscId = this.FeeStudDiscId;
			_tmp.FeeStudFeeItemId = this.FeeStudFeeItemId;
			_tmp.TrnsTypeId = this.TrnsTypeId;
			_tmp.SeUserTrnsId = this.SeUserTrnsId;
			
			#region Source Parent Composite Entities
			if (this.EdAcadYearIdSource != null && existingCopies.Contains(this.EdAcadYearIdSource))
				_tmp.EdAcadYearIdSource = existingCopies[this.EdAcadYearIdSource] as EdAcadYear;
			else
				_tmp.EdAcadYearIdSource = MakeCopyOf(this.EdAcadYearIdSource, existingCopies) as EdAcadYear;
			if (this.EdCodeSemesterIdSource != null && existingCopies.Contains(this.EdCodeSemesterIdSource))
				_tmp.EdCodeSemesterIdSource = existingCopies[this.EdCodeSemesterIdSource] as EdCodeSemester;
			else
				_tmp.EdCodeSemesterIdSource = MakeCopyOf(this.EdCodeSemesterIdSource, existingCopies) as EdCodeSemester;
			if (this.EdStudIdSource != null && existingCopies.Contains(this.EdStudIdSource))
				_tmp.EdStudIdSource = existingCopies[this.EdStudIdSource] as EdStud;
			else
				_tmp.EdStudIdSource = MakeCopyOf(this.EdStudIdSource, existingCopies) as EdStud;
			if (this.EdStudCourseRegIdSource != null && existingCopies.Contains(this.EdStudCourseRegIdSource))
				_tmp.EdStudCourseRegIdSource = existingCopies[this.EdStudCourseRegIdSource] as EdStudCourseReg;
			else
				_tmp.EdStudCourseRegIdSource = MakeCopyOf(this.EdStudCourseRegIdSource, existingCopies) as EdStudCourseReg;
			if (this.FeeCodeItemIdSource != null && existingCopies.Contains(this.FeeCodeItemIdSource))
				_tmp.FeeCodeItemIdSource = existingCopies[this.FeeCodeItemIdSource] as FeeCodeItem;
			else
				_tmp.FeeCodeItemIdSource = MakeCopyOf(this.FeeCodeItemIdSource, existingCopies) as FeeCodeItem;
			if (this.FeeStudDiscIdSource != null && existingCopies.Contains(this.FeeStudDiscIdSource))
				_tmp.FeeStudDiscIdSource = existingCopies[this.FeeStudDiscIdSource] as FeeStudDisc;
			else
				_tmp.FeeStudDiscIdSource = MakeCopyOf(this.FeeStudDiscIdSource, existingCopies) as FeeStudDisc;
			if (this.FeeStudFeeItemIdSource != null && existingCopies.Contains(this.FeeStudFeeItemIdSource))
				_tmp.FeeStudFeeItemIdSource = existingCopies[this.FeeStudFeeItemIdSource] as FeeStudFeeItem;
			else
				_tmp.FeeStudFeeItemIdSource = MakeCopyOf(this.FeeStudFeeItemIdSource, existingCopies) as FeeStudFeeItem;
			if (this.FeeStudVoucherItemIdSource != null && existingCopies.Contains(this.FeeStudVoucherItemIdSource))
				_tmp.FeeStudVoucherItemIdSource = existingCopies[this.FeeStudVoucherItemIdSource] as FeeStudVoucherItem;
			else
				_tmp.FeeStudVoucherItemIdSource = MakeCopyOf(this.FeeStudVoucherItemIdSource, existingCopies) as FeeStudVoucherItem;
			if (this.SeUserTrnsIdSource != null && existingCopies.Contains(this.SeUserTrnsIdSource))
				_tmp.SeUserTrnsIdSource = existingCopies[this.SeUserTrnsIdSource] as SeUser;
			else
				_tmp.SeUserTrnsIdSource = MakeCopyOf(this.SeUserTrnsIdSource, existingCopies) as SeUser;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeItemTrnsBlncColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(FeeItemTrnsBlncColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeItemTrnsBlncColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(FeeItemTrnsBlncColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeItemTrnsBlncColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(FeeItemTrnsBlncColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				FeeItemTrnsBlncEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new FeeItemTrnsBlncEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeItemTrnsBlncColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(FeeItemTrnsBlncColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				FeeItemTrnsBlncEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new FeeItemTrnsBlncEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region FeeItemTrnsBlncEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="FeeItemTrnsBlnc"/> object.
	/// </remarks>
	public class FeeItemTrnsBlncEventArgs : System.EventArgs
	{
		private FeeItemTrnsBlncColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the FeeItemTrnsBlncEventArgs class.
		///</summary>
		public FeeItemTrnsBlncEventArgs(FeeItemTrnsBlncColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the FeeItemTrnsBlncEventArgs class.
		///</summary>
		public FeeItemTrnsBlncEventArgs(FeeItemTrnsBlncColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The FeeItemTrnsBlncColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="FeeItemTrnsBlncColumn" />
		public FeeItemTrnsBlncColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all FeeItemTrnsBlnc related events.
	///</summary>
	public delegate void FeeItemTrnsBlncEventHandler(object sender, FeeItemTrnsBlncEventArgs e);
	
	#region FeeItemTrnsBlncComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class FeeItemTrnsBlncComparer : System.Collections.Generic.IComparer<FeeItemTrnsBlnc>
	{
		FeeItemTrnsBlncColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:FeeItemTrnsBlncComparer"/> class.
        /// </summary>
		public FeeItemTrnsBlncComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:FeeItemTrnsBlncComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public FeeItemTrnsBlncComparer(FeeItemTrnsBlncColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="FeeItemTrnsBlnc"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="FeeItemTrnsBlnc"/> to compare.</param>
        /// <param name="b">The second <c>FeeItemTrnsBlnc</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(FeeItemTrnsBlnc a, FeeItemTrnsBlnc b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(FeeItemTrnsBlnc entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(FeeItemTrnsBlnc a, FeeItemTrnsBlnc b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public FeeItemTrnsBlncColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region FeeItemTrnsBlncKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="FeeItemTrnsBlnc"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class FeeItemTrnsBlncKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the FeeItemTrnsBlncKey class.
		/// </summary>
		public FeeItemTrnsBlncKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the FeeItemTrnsBlncKey class.
		/// </summary>
		public FeeItemTrnsBlncKey(FeeItemTrnsBlncBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.FeeItemTrnsBlncId = entity.FeeItemTrnsBlncId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the FeeItemTrnsBlncKey class.
		/// </summary>
		public FeeItemTrnsBlncKey(System.Decimal _feeItemTrnsBlncId)
		{
			#region Init Properties

			this.FeeItemTrnsBlncId = _feeItemTrnsBlncId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private FeeItemTrnsBlncBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public FeeItemTrnsBlncBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the FeeItemTrnsBlncId property
		private System.Decimal _feeItemTrnsBlncId;
		
		/// <summary>
		/// Gets or sets the FeeItemTrnsBlncId property.
		/// </summary>
		public System.Decimal FeeItemTrnsBlncId
		{
			get { return _feeItemTrnsBlncId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.FeeItemTrnsBlncId = value;
				
				_feeItemTrnsBlncId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				FeeItemTrnsBlncId = ( values["FeeItemTrnsBlncId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["FeeItemTrnsBlncId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("FeeItemTrnsBlncId", FeeItemTrnsBlncId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("FeeItemTrnsBlncId: {0}{1}",
								FeeItemTrnsBlncId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region FeeItemTrnsBlncColumn Enum
	
	/// <summary>
	/// Enumerate the FeeItemTrnsBlnc columns.
	/// </summary>
	[Serializable]
	public enum FeeItemTrnsBlncColumn : int
	{
		/// <summary>
		/// FeeItemTrnsBlncId : عمليات الحسابات على بنود والرصيد
		/// </summary>
		[EnumTextValue("FEE_ITEM_TRNS_BLNC_ID")]
		[ColumnEnum("FEE_ITEM_TRNS_BLNC_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		FeeItemTrnsBlncId = 1,
		/// <summary>
		/// EdStudId : 
		/// </summary>
		[EnumTextValue("ED_STUD_ID")]
		[ColumnEnum("ED_STUD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdStudId = 2,
		/// <summary>
		/// EdAcadYearId : 
		/// </summary>
		[EnumTextValue("ED_ACAD_YEAR_ID")]
		[ColumnEnum("ED_ACAD_YEAR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdAcadYearId = 3,
		/// <summary>
		/// EdCodeSemesterId : مسلسل الفصل الدراسي
		/// </summary>
		[EnumTextValue("ED_CODE_SEMESTER_ID")]
		[ColumnEnum("ED_CODE_SEMESTER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdCodeSemesterId = 4,
		/// <summary>
		/// FeeCodeItemId : بند حساب -بند رصيد 0
		/// </summary>
		[EnumTextValue("FEE_CODE_ITEM_ID")]
		[ColumnEnum("FEE_CODE_ITEM_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		FeeCodeItemId = 5,
		/// <summary>
		/// DebitAmnt : 
		/// </summary>
		[EnumTextValue("DEBIT_AMNT")]
		[ColumnEnum("DEBIT_AMNT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DebitAmnt = 6,
		/// <summary>
		/// CreditAmnt : 
		/// </summary>
		[EnumTextValue("CREDIT_AMNT")]
		[ColumnEnum("CREDIT_AMNT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CreditAmnt = 7,
		/// <summary>
		/// BalanceAmnt : 
		/// </summary>
		[EnumTextValue("BALANCE_AMNT")]
		[ColumnEnum("BALANCE_AMNT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		BalanceAmnt = 8,
		/// <summary>
		/// TrnsDate : 
		/// </summary>
		[EnumTextValue("TRNS_DATE")]
		[ColumnEnum("TRNS_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, false)]
		TrnsDate = 9,
		/// <summary>
		/// TrnsDesc : 
		/// </summary>
		[EnumTextValue("TRNS_DESC")]
		[ColumnEnum("TRNS_DESC", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		TrnsDesc = 10,
		/// <summary>
		/// FeeStudVoucherItemId : اذن دفع/ايصال سداد
		/// </summary>
		[EnumTextValue("FEE_STUD_VOUCHER_ITEM_ID")]
		[ColumnEnum("FEE_STUD_VOUCHER_ITEM_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FeeStudVoucherItemId = 11,
		/// <summary>
		/// FeeRefndStdReqId : 
		/// </summary>
		[EnumTextValue("FEE_REFND_STD_REQ_ID")]
		[ColumnEnum("FEE_REFND_STD_REQ_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FeeRefndStdReqId = 12,
		/// <summary>
		/// EdStudCourseRegId : 
		/// </summary>
		[EnumTextValue("ED_STUD_COURSE_REG_ID")]
		[ColumnEnum("ED_STUD_COURSE_REG_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudCourseRegId = 13,
		/// <summary>
		/// FeeStudDiscId : 
		/// </summary>
		[EnumTextValue("FEE_STUD_DISC_ID")]
		[ColumnEnum("FEE_STUD_DISC_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FeeStudDiscId = 14,
		/// <summary>
		/// FeeStudFeeItemId : بنود المصروفات على  طالب
		/// </summary>
		[EnumTextValue("FEE_STUD_FEE_ITEM_ID")]
		[ColumnEnum("FEE_STUD_FEE_ITEM_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FeeStudFeeItemId = 15,
		/// <summary>
		/// TrnsTypeId : Insert/Update/Delete
		/// </summary>
		[EnumTextValue("TRNS_TYPE_ID")]
		[ColumnEnum("TRNS_TYPE_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		TrnsTypeId = 16,
		/// <summary>
		/// SeUserTrnsId : 
		/// </summary>
		[EnumTextValue("SE_USER_TRNS_ID")]
		[ColumnEnum("SE_USER_TRNS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserTrnsId = 17
	}//End enum

	#endregion FeeItemTrnsBlncColumn Enum

} // end namespace
