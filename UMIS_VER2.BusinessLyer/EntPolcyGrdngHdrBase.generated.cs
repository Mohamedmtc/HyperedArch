
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file EntPolcyGrdngHdr.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ENT_POLCY_GRDNG_HDR' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class EntPolcyGrdngHdrBase : EntityBase, IEntPolcyGrdngHdr, IEntityId<EntPolcyGrdngHdrKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private EntPolcyGrdngHdrEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private EntPolcyGrdngHdrEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private EntPolcyGrdngHdrEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<EntPolcyGrdngHdr> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EntPolcyGrdngHdrEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EntPolcyGrdngHdrEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="EntPolcyGrdngHdrBase"/> instance.
		///</summary>
		public EntPolcyGrdngHdrBase()
		{
			this.entityData = new EntPolcyGrdngHdrEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="EntPolcyGrdngHdrBase"/> instance.
		///</summary>
		///<param name="_entPolcyGrdngHdrId">قواعد الرصد المؤقتة</param>
		///<param name="_edAcadYearId"></param>
		///<param name="_edCodeSemesterId"></param>
		///<param name="_asFacultyInfoId"></param>
		///<param name="_entMainId"></param>
		///<param name="_edCodeLevelId"></param>
		///<param name="_edBylawId"></param>
		///<param name="_edCodeLoadTypeId"></param>
		///<param name="_repeatTypeFlg">0 not repeated 
		/// 		/// 1 repeat fail
		/// 		/// 2 repeat pass t7seen</param>
		///<param name="_edCodeCourseAssessId"></param>
		///<param name="_pfFlg">1 pass fail
		/// 		/// 0  grades</param>
		///<param name="_edCodeMaxGradId">اقصى تقدير</param>
		///<param name="_acadWarnFlg">حساب الانذار الاكاديمى:</param>
		///<param name="_addGpaFlg">=0 not calculated --- 
		/// 		/// =1 calculate course in gpa&CH ---
		/// 		/// =2 Calculated in CH only</param>
		///<param name="_edCodeCourseStatusNewId">الحاله الجديدة للمقرر على الطلاب</param>
		///<param name="_isApplied">تم  التطبيق على الطلاب</param>
		///<param name="_lastDate"></param>
		///<param name="_seUserId"></param>
		public EntPolcyGrdngHdrBase(System.Decimal _entPolcyGrdngHdrId, System.Decimal _edAcadYearId, 
			System.Decimal _edCodeSemesterId, System.Decimal? _asFacultyInfoId, System.Decimal? _entMainId, 
			System.Decimal? _edCodeLevelId, System.Decimal? _edBylawId, System.Decimal _edCodeLoadTypeId, 
			System.Int16? _repeatTypeFlg, System.Decimal? _edCodeCourseAssessId, System.Int16? _pfFlg, 
			System.Decimal? _edCodeMaxGradId, System.Int16? _acadWarnFlg, System.Decimal _addGpaFlg, 
			System.Decimal? _edCodeCourseStatusNewId, System.Boolean? _isApplied, System.DateTime? _lastDate, 
			System.Decimal? _seUserId)
		{
			this.entityData = new EntPolcyGrdngHdrEntityData();
			this.backupData = null;

			this.EntPolcyGrdngHdrId = _entPolcyGrdngHdrId;
			this.EdAcadYearId = _edAcadYearId;
			this.EdCodeSemesterId = _edCodeSemesterId;
			this.AsFacultyInfoId = _asFacultyInfoId;
			this.EntMainId = _entMainId;
			this.EdCodeLevelId = _edCodeLevelId;
			this.EdBylawId = _edBylawId;
			this.EdCodeLoadTypeId = _edCodeLoadTypeId;
			this.RepeatTypeFlg = _repeatTypeFlg;
			this.EdCodeCourseAssessId = _edCodeCourseAssessId;
			this.PfFlg = _pfFlg;
			this.EdCodeMaxGradId = _edCodeMaxGradId;
			this.AcadWarnFlg = _acadWarnFlg;
			this.AddGpaFlg = _addGpaFlg;
			this.EdCodeCourseStatusNewId = _edCodeCourseStatusNewId;
			this.IsApplied = _isApplied;
			this.LastDate = _lastDate;
			this.SeUserId = _seUserId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="EntPolcyGrdngHdr"/> instance.
		///</summary>
		///<param name="_entPolcyGrdngHdrId">قواعد الرصد المؤقتة</param>
		///<param name="_edAcadYearId"></param>
		///<param name="_edCodeSemesterId"></param>
		///<param name="_asFacultyInfoId"></param>
		///<param name="_entMainId"></param>
		///<param name="_edCodeLevelId"></param>
		///<param name="_edBylawId"></param>
		///<param name="_edCodeLoadTypeId"></param>
		///<param name="_repeatTypeFlg">0 not repeated 
		/// 		/// 1 repeat fail
		/// 		/// 2 repeat pass t7seen</param>
		///<param name="_edCodeCourseAssessId"></param>
		///<param name="_pfFlg">1 pass fail
		/// 		/// 0  grades</param>
		///<param name="_edCodeMaxGradId">اقصى تقدير</param>
		///<param name="_acadWarnFlg">حساب الانذار الاكاديمى:</param>
		///<param name="_addGpaFlg">=0 not calculated --- 
		/// 		/// =1 calculate course in gpa&CH ---
		/// 		/// =2 Calculated in CH only</param>
		///<param name="_edCodeCourseStatusNewId">الحاله الجديدة للمقرر على الطلاب</param>
		///<param name="_isApplied">تم  التطبيق على الطلاب</param>
		///<param name="_lastDate"></param>
		///<param name="_seUserId"></param>
		public static EntPolcyGrdngHdr CreateEntPolcyGrdngHdr(System.Decimal _entPolcyGrdngHdrId, System.Decimal _edAcadYearId, 
			System.Decimal _edCodeSemesterId, System.Decimal? _asFacultyInfoId, System.Decimal? _entMainId, 
			System.Decimal? _edCodeLevelId, System.Decimal? _edBylawId, System.Decimal _edCodeLoadTypeId, 
			System.Int16? _repeatTypeFlg, System.Decimal? _edCodeCourseAssessId, System.Int16? _pfFlg, 
			System.Decimal? _edCodeMaxGradId, System.Int16? _acadWarnFlg, System.Decimal _addGpaFlg, 
			System.Decimal? _edCodeCourseStatusNewId, System.Boolean? _isApplied, System.DateTime? _lastDate, 
			System.Decimal? _seUserId)
		{
			EntPolcyGrdngHdr newEntPolcyGrdngHdr = new EntPolcyGrdngHdr();
			newEntPolcyGrdngHdr.EntPolcyGrdngHdrId = _entPolcyGrdngHdrId;
			newEntPolcyGrdngHdr.EdAcadYearId = _edAcadYearId;
			newEntPolcyGrdngHdr.EdCodeSemesterId = _edCodeSemesterId;
			newEntPolcyGrdngHdr.AsFacultyInfoId = _asFacultyInfoId;
			newEntPolcyGrdngHdr.EntMainId = _entMainId;
			newEntPolcyGrdngHdr.EdCodeLevelId = _edCodeLevelId;
			newEntPolcyGrdngHdr.EdBylawId = _edBylawId;
			newEntPolcyGrdngHdr.EdCodeLoadTypeId = _edCodeLoadTypeId;
			newEntPolcyGrdngHdr.RepeatTypeFlg = _repeatTypeFlg;
			newEntPolcyGrdngHdr.EdCodeCourseAssessId = _edCodeCourseAssessId;
			newEntPolcyGrdngHdr.PfFlg = _pfFlg;
			newEntPolcyGrdngHdr.EdCodeMaxGradId = _edCodeMaxGradId;
			newEntPolcyGrdngHdr.AcadWarnFlg = _acadWarnFlg;
			newEntPolcyGrdngHdr.AddGpaFlg = _addGpaFlg;
			newEntPolcyGrdngHdr.EdCodeCourseStatusNewId = _edCodeCourseStatusNewId;
			newEntPolcyGrdngHdr.IsApplied = _isApplied;
			newEntPolcyGrdngHdr.LastDate = _lastDate;
			newEntPolcyGrdngHdr.SeUserId = _seUserId;
			return newEntPolcyGrdngHdr;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the EntPolcyGrdngHdrId property. 
		///		قواعد الرصد المؤقتة
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"قواعد الرصد المؤقتة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal EntPolcyGrdngHdrId
		{
			get
			{
				return this.entityData.EntPolcyGrdngHdrId; 
			}
			
			set
			{
				if (this.entityData.EntPolcyGrdngHdrId == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.EntPolcyGrdngHdrId, this.entityData.EntPolcyGrdngHdrId);
				this.entityData.EntPolcyGrdngHdrId = value;
				this.EntityId.EntPolcyGrdngHdrId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.EntPolcyGrdngHdrId, this.entityData.EntPolcyGrdngHdrId);
				OnPropertyChanged("EntPolcyGrdngHdrId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ENT_POLCY_GRDNG_HDR_ID property.
		///		قواعد الرصد المؤقتة
		/// </summary>
		/// <remarks>This is the original value of the ENT_POLCY_GRDNG_HDR_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalEntPolcyGrdngHdrId
		{
			get { return this.entityData.OriginalEntPolcyGrdngHdrId; }
			set { this.entityData.OriginalEntPolcyGrdngHdrId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the EdAcadYearId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EdAcadYearId
		{
			get
			{
				return this.entityData.EdAcadYearId; 
			}
			
			set
			{
				if (this.entityData.EdAcadYearId == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.EdAcadYearId, this.entityData.EdAcadYearId);
				this.entityData.EdAcadYearId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.EdAcadYearId, this.entityData.EdAcadYearId);
				OnPropertyChanged("EdAcadYearId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeSemesterId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EdCodeSemesterId
		{
			get
			{
				return this.entityData.EdCodeSemesterId; 
			}
			
			set
			{
				if (this.entityData.EdCodeSemesterId == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.EdCodeSemesterId, this.entityData.EdCodeSemesterId);
				this.entityData.EdCodeSemesterId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.EdCodeSemesterId, this.entityData.EdCodeSemesterId);
				OnPropertyChanged("EdCodeSemesterId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AsFacultyInfoId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAsFacultyInfoIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AsFacultyInfoId
		{
			get
			{
				return this.entityData.AsFacultyInfoId; 
			}
			
			set
			{
				if (this.entityData.AsFacultyInfoId == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.AsFacultyInfoId, this.entityData.AsFacultyInfoId);
				this.entityData.AsFacultyInfoId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.AsFacultyInfoId, this.entityData.AsFacultyInfoId);
				OnPropertyChanged("AsFacultyInfoId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EntMainId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEntMainIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EntMainId
		{
			get
			{
				return this.entityData.EntMainId; 
			}
			
			set
			{
				if (this.entityData.EntMainId == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.EntMainId, this.entityData.EntMainId);
				this.entityData.EntMainId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.EntMainId, this.entityData.EntMainId);
				OnPropertyChanged("EntMainId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeLevelId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeLevelIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCodeLevelId
		{
			get
			{
				return this.entityData.EdCodeLevelId; 
			}
			
			set
			{
				if (this.entityData.EdCodeLevelId == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.EdCodeLevelId, this.entityData.EdCodeLevelId);
				this.entityData.EdCodeLevelId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.EdCodeLevelId, this.entityData.EdCodeLevelId);
				OnPropertyChanged("EdCodeLevelId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdBylawId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdBylawIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdBylawId
		{
			get
			{
				return this.entityData.EdBylawId; 
			}
			
			set
			{
				if (this.entityData.EdBylawId == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.EdBylawId, this.entityData.EdBylawId);
				this.entityData.EdBylawId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.EdBylawId, this.entityData.EdBylawId);
				OnPropertyChanged("EdBylawId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeLoadTypeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EdCodeLoadTypeId
		{
			get
			{
				return this.entityData.EdCodeLoadTypeId; 
			}
			
			set
			{
				if (this.entityData.EdCodeLoadTypeId == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.EdCodeLoadTypeId, this.entityData.EdCodeLoadTypeId);
				this.entityData.EdCodeLoadTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.EdCodeLoadTypeId, this.entityData.EdCodeLoadTypeId);
				OnPropertyChanged("EdCodeLoadTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RepeatTypeFlg property. 
		///		0 not repeated 
		/// 		/// 1 repeat fail
		/// 		/// 2 repeat pass t7seen
		/// </summary>
		/// <value>This type is smallint.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (short)0. It is up to the developer
		/// to check the value of IsRepeatTypeFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"0 not repeated  1 repeat fail 2 repeat pass t7seen"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int16? RepeatTypeFlg
		{
			get
			{
				return this.entityData.RepeatTypeFlg; 
			}
			
			set
			{
				if (this.entityData.RepeatTypeFlg == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.RepeatTypeFlg, this.entityData.RepeatTypeFlg);
				this.entityData.RepeatTypeFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.RepeatTypeFlg, this.entityData.RepeatTypeFlg);
				OnPropertyChanged("RepeatTypeFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeCourseAssessId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeCourseAssessIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCodeCourseAssessId
		{
			get
			{
				return this.entityData.EdCodeCourseAssessId; 
			}
			
			set
			{
				if (this.entityData.EdCodeCourseAssessId == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.EdCodeCourseAssessId, this.entityData.EdCodeCourseAssessId);
				this.entityData.EdCodeCourseAssessId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.EdCodeCourseAssessId, this.entityData.EdCodeCourseAssessId);
				OnPropertyChanged("EdCodeCourseAssessId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PfFlg property. 
		///		1 pass fail
		/// 		/// 0  grades
		/// </summary>
		/// <value>This type is smallint.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (short)0. It is up to the developer
		/// to check the value of IsPfFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"1 pass fail 0  grades"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int16? PfFlg
		{
			get
			{
				return this.entityData.PfFlg; 
			}
			
			set
			{
				if (this.entityData.PfFlg == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.PfFlg, this.entityData.PfFlg);
				this.entityData.PfFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.PfFlg, this.entityData.PfFlg);
				OnPropertyChanged("PfFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeMaxGradId property. 
		///		اقصى تقدير
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeMaxGradIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"اقصى تقدير"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCodeMaxGradId
		{
			get
			{
				return this.entityData.EdCodeMaxGradId; 
			}
			
			set
			{
				if (this.entityData.EdCodeMaxGradId == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.EdCodeMaxGradId, this.entityData.EdCodeMaxGradId);
				this.entityData.EdCodeMaxGradId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.EdCodeMaxGradId, this.entityData.EdCodeMaxGradId);
				OnPropertyChanged("EdCodeMaxGradId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AcadWarnFlg property. 
		///		حساب الانذار الاكاديمى:
		/// </summary>
		/// <value>This type is smallint.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (short)0. It is up to the developer
		/// to check the value of IsAcadWarnFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"حساب الانذار الاكاديمى:"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int16? AcadWarnFlg
		{
			get
			{
				return this.entityData.AcadWarnFlg; 
			}
			
			set
			{
				if (this.entityData.AcadWarnFlg == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.AcadWarnFlg, this.entityData.AcadWarnFlg);
				this.entityData.AcadWarnFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.AcadWarnFlg, this.entityData.AcadWarnFlg);
				OnPropertyChanged("AcadWarnFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AddGpaFlg property. 
		///		=0 not calculated --- 
		/// 		/// =1 calculate course in gpa&CH ---
		/// 		/// =2 Calculated in CH only
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"=0 not calculated ---  =1 calculate course in gpa&CH --- =2 Calculated in CH only"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal AddGpaFlg
		{
			get
			{
				return this.entityData.AddGpaFlg; 
			}
			
			set
			{
				if (this.entityData.AddGpaFlg == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.AddGpaFlg, this.entityData.AddGpaFlg);
				this.entityData.AddGpaFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.AddGpaFlg, this.entityData.AddGpaFlg);
				OnPropertyChanged("AddGpaFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeCourseStatusNewId property. 
		///		الحاله الجديدة للمقرر على الطلاب
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeCourseStatusNewIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"الحاله الجديدة للمقرر على الطلاب"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCodeCourseStatusNewId
		{
			get
			{
				return this.entityData.EdCodeCourseStatusNewId; 
			}
			
			set
			{
				if (this.entityData.EdCodeCourseStatusNewId == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.EdCodeCourseStatusNewId, this.entityData.EdCodeCourseStatusNewId);
				this.entityData.EdCodeCourseStatusNewId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.EdCodeCourseStatusNewId, this.entityData.EdCodeCourseStatusNewId);
				OnPropertyChanged("EdCodeCourseStatusNewId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IsApplied property. 
		///		تم  التطبيق على الطلاب
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsIsAppliedNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"تم  التطبيق على الطلاب"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? IsApplied
		{
			get
			{
				return this.entityData.IsApplied; 
			}
			
			set
			{
				if (this.entityData.IsApplied == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.IsApplied, this.entityData.IsApplied);
				this.entityData.IsApplied = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.IsApplied, this.entityData.IsApplied);
				OnPropertyChanged("IsApplied");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(EntPolcyGrdngHdrColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolcyGrdngHdrColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="AsFacultyInfo"/>.
		/// </summary>
		/// <value>The source AsFacultyInfo for AsFacultyInfoId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AsFacultyInfo AsFacultyInfoIdSource
      	{
            get { return entityData.AsFacultyInfoIdSource; }
            set { entityData.AsFacultyInfoIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdAcadYear"/>.
		/// </summary>
		/// <value>The source EdAcadYear for EdAcadYearId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdAcadYear EdAcadYearIdSource
      	{
            get { return entityData.EdAcadYearIdSource; }
            set { entityData.EdAcadYearIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdBylaw"/>.
		/// </summary>
		/// <value>The source EdBylaw for EdBylawId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdBylaw EdBylawIdSource
      	{
            get { return entityData.EdBylawIdSource; }
            set { entityData.EdBylawIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeCourseAssess"/>.
		/// </summary>
		/// <value>The source EdCodeCourseAssess for EdCodeCourseAssessId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeCourseAssess EdCodeCourseAssessIdSource
      	{
            get { return entityData.EdCodeCourseAssessIdSource; }
            set { entityData.EdCodeCourseAssessIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeCourseStatus"/>.
		/// </summary>
		/// <value>The source EdCodeCourseStatus for EdCodeCourseStatusNewId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeCourseStatus EdCodeCourseStatusNewIdSource
      	{
            get { return entityData.EdCodeCourseStatusNewIdSource; }
            set { entityData.EdCodeCourseStatusNewIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeGrading"/>.
		/// </summary>
		/// <value>The source EdCodeGrading for EdCodeMaxGradId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeGrading EdCodeMaxGradIdSource
      	{
            get { return entityData.EdCodeMaxGradIdSource; }
            set { entityData.EdCodeMaxGradIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeLevel"/>.
		/// </summary>
		/// <value>The source EdCodeLevel for EdCodeLevelId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeLevel EdCodeLevelIdSource
      	{
            get { return entityData.EdCodeLevelIdSource; }
            set { entityData.EdCodeLevelIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeLoadType"/>.
		/// </summary>
		/// <value>The source EdCodeLoadType for EdCodeLoadTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeLoadType EdCodeLoadTypeIdSource
      	{
            get { return entityData.EdCodeLoadTypeIdSource; }
            set { entityData.EdCodeLoadTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeSemester"/>.
		/// </summary>
		/// <value>The source EdCodeSemester for EdCodeSemesterId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeSemester EdCodeSemesterIdSource
      	{
            get { return entityData.EdCodeSemesterIdSource; }
            set { entityData.EdCodeSemesterIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EntityMain"/>.
		/// </summary>
		/// <value>The source EntityMain for EntMainId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EntityMain EntMainIdSource
      	{
            get { return entityData.EntMainIdSource; }
            set { entityData.EntMainIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of EntPolcyGrdngCourse objects
		///	which are related to this object through the relation FK_ENT_POLCY_GRDNG_COURSE_ENT_POLCY_GRDNG_HDR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntPolcyGrdngCourse> EntPolcyGrdngCourseCollection
		{
			get { return entityData.EntPolcyGrdngCourseCollection; }
			set { entityData.EntPolcyGrdngCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRegPolcy objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_POLCY_ENT_POLCY_GRDNG_HDR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRegPolcy> EdStudCourseRegPolcyCollection
		{
			get { return entityData.EdStudCourseRegPolcyCollection; }
			set { entityData.EdStudCourseRegPolcyCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ENT_POLCY_GRDNG_HDR"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ENT_POLCY_GRDNG_HDR_ID", "ED_ACAD_YEAR_ID", "ED_CODE_SEMESTER_ID", "AS_FACULTY_INFO_ID", "ENT_MAIN_ID", "ED_CODE_LEVEL_ID", "ED_BYLAW_ID", "ED_CODE_LOAD_TYPE_ID", "REPEAT_TYPE_FLG", "ED_CODE_COURSE_ASSESS_ID", "PF_FLG", "ED_CODE_MAX_GRAD_ID", "ACAD_WARN_FLG", "ADD_GPA_FLG", "ED_CODE_COURSE_STATUS_NEW_ID", "IS_APPLIED", "LAST_DATE", "SE_USER_ID"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as EntPolcyGrdngHdrEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (EntPolcyGrdngHdr) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<EntPolcyGrdngHdr>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as EntPolcyGrdngHdr);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed EntPolcyGrdngHdr Entity 
		///</summary>
		protected virtual EntPolcyGrdngHdr Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			EntPolcyGrdngHdr copy = new EntPolcyGrdngHdr();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.EntPolcyGrdngHdrId = this.EntPolcyGrdngHdrId;
					copy.OriginalEntPolcyGrdngHdrId = this.OriginalEntPolcyGrdngHdrId;
				copy.EdAcadYearId = this.EdAcadYearId;
				copy.EdCodeSemesterId = this.EdCodeSemesterId;
				copy.AsFacultyInfoId = this.AsFacultyInfoId;
				copy.EntMainId = this.EntMainId;
				copy.EdCodeLevelId = this.EdCodeLevelId;
				copy.EdBylawId = this.EdBylawId;
				copy.EdCodeLoadTypeId = this.EdCodeLoadTypeId;
				copy.RepeatTypeFlg = this.RepeatTypeFlg;
				copy.EdCodeCourseAssessId = this.EdCodeCourseAssessId;
				copy.PfFlg = this.PfFlg;
				copy.EdCodeMaxGradId = this.EdCodeMaxGradId;
				copy.AcadWarnFlg = this.AcadWarnFlg;
				copy.AddGpaFlg = this.AddGpaFlg;
				copy.EdCodeCourseStatusNewId = this.EdCodeCourseStatusNewId;
				copy.IsApplied = this.IsApplied;
				copy.LastDate = this.LastDate;
				copy.SeUserId = this.SeUserId;
			
			if (this.AsFacultyInfoIdSource != null && existingCopies.Contains(this.AsFacultyInfoIdSource))
				copy.AsFacultyInfoIdSource = existingCopies[this.AsFacultyInfoIdSource] as AsFacultyInfo;
			else
				copy.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource, existingCopies) as AsFacultyInfo;
			if (this.EdAcadYearIdSource != null && existingCopies.Contains(this.EdAcadYearIdSource))
				copy.EdAcadYearIdSource = existingCopies[this.EdAcadYearIdSource] as EdAcadYear;
			else
				copy.EdAcadYearIdSource = MakeCopyOf(this.EdAcadYearIdSource, existingCopies) as EdAcadYear;
			if (this.EdBylawIdSource != null && existingCopies.Contains(this.EdBylawIdSource))
				copy.EdBylawIdSource = existingCopies[this.EdBylawIdSource] as EdBylaw;
			else
				copy.EdBylawIdSource = MakeCopyOf(this.EdBylawIdSource, existingCopies) as EdBylaw;
			if (this.EdCodeCourseAssessIdSource != null && existingCopies.Contains(this.EdCodeCourseAssessIdSource))
				copy.EdCodeCourseAssessIdSource = existingCopies[this.EdCodeCourseAssessIdSource] as EdCodeCourseAssess;
			else
				copy.EdCodeCourseAssessIdSource = MakeCopyOf(this.EdCodeCourseAssessIdSource, existingCopies) as EdCodeCourseAssess;
			if (this.EdCodeCourseStatusNewIdSource != null && existingCopies.Contains(this.EdCodeCourseStatusNewIdSource))
				copy.EdCodeCourseStatusNewIdSource = existingCopies[this.EdCodeCourseStatusNewIdSource] as EdCodeCourseStatus;
			else
				copy.EdCodeCourseStatusNewIdSource = MakeCopyOf(this.EdCodeCourseStatusNewIdSource, existingCopies) as EdCodeCourseStatus;
			if (this.EdCodeMaxGradIdSource != null && existingCopies.Contains(this.EdCodeMaxGradIdSource))
				copy.EdCodeMaxGradIdSource = existingCopies[this.EdCodeMaxGradIdSource] as EdCodeGrading;
			else
				copy.EdCodeMaxGradIdSource = MakeCopyOf(this.EdCodeMaxGradIdSource, existingCopies) as EdCodeGrading;
			if (this.EdCodeLevelIdSource != null && existingCopies.Contains(this.EdCodeLevelIdSource))
				copy.EdCodeLevelIdSource = existingCopies[this.EdCodeLevelIdSource] as EdCodeLevel;
			else
				copy.EdCodeLevelIdSource = MakeCopyOf(this.EdCodeLevelIdSource, existingCopies) as EdCodeLevel;
			if (this.EdCodeLoadTypeIdSource != null && existingCopies.Contains(this.EdCodeLoadTypeIdSource))
				copy.EdCodeLoadTypeIdSource = existingCopies[this.EdCodeLoadTypeIdSource] as EdCodeLoadType;
			else
				copy.EdCodeLoadTypeIdSource = MakeCopyOf(this.EdCodeLoadTypeIdSource, existingCopies) as EdCodeLoadType;
			if (this.EdCodeSemesterIdSource != null && existingCopies.Contains(this.EdCodeSemesterIdSource))
				copy.EdCodeSemesterIdSource = existingCopies[this.EdCodeSemesterIdSource] as EdCodeSemester;
			else
				copy.EdCodeSemesterIdSource = MakeCopyOf(this.EdCodeSemesterIdSource, existingCopies) as EdCodeSemester;
			if (this.EntMainIdSource != null && existingCopies.Contains(this.EntMainIdSource))
				copy.EntMainIdSource = existingCopies[this.EntMainIdSource] as EntityMain;
			else
				copy.EntMainIdSource = MakeCopyOf(this.EntMainIdSource, existingCopies) as EntityMain;
		
			//deep copy nested objects
			copy.EntPolcyGrdngCourseCollection = (TList<EntPolcyGrdngCourse>) MakeCopyOf(this.EntPolcyGrdngCourseCollection, existingCopies); 
			copy.EdStudCourseRegPolcyCollection = (TList<EdStudCourseRegPolcy>) MakeCopyOf(this.EdStudCourseRegPolcyCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed EntPolcyGrdngHdr Entity 
		///</summary>
		public virtual EntPolcyGrdngHdr Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed EntPolcyGrdngHdr Entity which is a deep copy of the current entity.
		///</summary>
		public virtual EntPolcyGrdngHdr DeepCopy()
		{
			return EntityHelper.Clone<EntPolcyGrdngHdr>(this as EntPolcyGrdngHdr);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as EntPolcyGrdngHdrEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new EntPolcyGrdngHdrEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as EntPolcyGrdngHdrEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(EntPolcyGrdngHdrColumn column)
		{
			switch(column)
			{
					case EntPolcyGrdngHdrColumn.EntPolcyGrdngHdrId:
					return entityData.EntPolcyGrdngHdrId != _originalData.EntPolcyGrdngHdrId;
					case EntPolcyGrdngHdrColumn.EdAcadYearId:
					return entityData.EdAcadYearId != _originalData.EdAcadYearId;
					case EntPolcyGrdngHdrColumn.EdCodeSemesterId:
					return entityData.EdCodeSemesterId != _originalData.EdCodeSemesterId;
					case EntPolcyGrdngHdrColumn.AsFacultyInfoId:
					return entityData.AsFacultyInfoId != _originalData.AsFacultyInfoId;
					case EntPolcyGrdngHdrColumn.EntMainId:
					return entityData.EntMainId != _originalData.EntMainId;
					case EntPolcyGrdngHdrColumn.EdCodeLevelId:
					return entityData.EdCodeLevelId != _originalData.EdCodeLevelId;
					case EntPolcyGrdngHdrColumn.EdBylawId:
					return entityData.EdBylawId != _originalData.EdBylawId;
					case EntPolcyGrdngHdrColumn.EdCodeLoadTypeId:
					return entityData.EdCodeLoadTypeId != _originalData.EdCodeLoadTypeId;
					case EntPolcyGrdngHdrColumn.RepeatTypeFlg:
					return entityData.RepeatTypeFlg != _originalData.RepeatTypeFlg;
					case EntPolcyGrdngHdrColumn.EdCodeCourseAssessId:
					return entityData.EdCodeCourseAssessId != _originalData.EdCodeCourseAssessId;
					case EntPolcyGrdngHdrColumn.PfFlg:
					return entityData.PfFlg != _originalData.PfFlg;
					case EntPolcyGrdngHdrColumn.EdCodeMaxGradId:
					return entityData.EdCodeMaxGradId != _originalData.EdCodeMaxGradId;
					case EntPolcyGrdngHdrColumn.AcadWarnFlg:
					return entityData.AcadWarnFlg != _originalData.AcadWarnFlg;
					case EntPolcyGrdngHdrColumn.AddGpaFlg:
					return entityData.AddGpaFlg != _originalData.AddGpaFlg;
					case EntPolcyGrdngHdrColumn.EdCodeCourseStatusNewId:
					return entityData.EdCodeCourseStatusNewId != _originalData.EdCodeCourseStatusNewId;
					case EntPolcyGrdngHdrColumn.IsApplied:
					return entityData.IsApplied != _originalData.IsApplied;
					case EntPolcyGrdngHdrColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
					case EntPolcyGrdngHdrColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< EntPolcyGrdngHdrColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.EntPolcyGrdngHdrId != _originalData.EntPolcyGrdngHdrId;
			result = result || entityData.EdAcadYearId != _originalData.EdAcadYearId;
			result = result || entityData.EdCodeSemesterId != _originalData.EdCodeSemesterId;
			result = result || entityData.AsFacultyInfoId != _originalData.AsFacultyInfoId;
			result = result || entityData.EntMainId != _originalData.EntMainId;
			result = result || entityData.EdCodeLevelId != _originalData.EdCodeLevelId;
			result = result || entityData.EdBylawId != _originalData.EdBylawId;
			result = result || entityData.EdCodeLoadTypeId != _originalData.EdCodeLoadTypeId;
			result = result || entityData.RepeatTypeFlg != _originalData.RepeatTypeFlg;
			result = result || entityData.EdCodeCourseAssessId != _originalData.EdCodeCourseAssessId;
			result = result || entityData.PfFlg != _originalData.PfFlg;
			result = result || entityData.EdCodeMaxGradId != _originalData.EdCodeMaxGradId;
			result = result || entityData.AcadWarnFlg != _originalData.AcadWarnFlg;
			result = result || entityData.AddGpaFlg != _originalData.AddGpaFlg;
			result = result || entityData.EdCodeCourseStatusNewId != _originalData.EdCodeCourseStatusNewId;
			result = result || entityData.IsApplied != _originalData.IsApplied;
			result = result || entityData.LastDate != _originalData.LastDate;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			return result;
		}	
		
		///<summary>
		///  Returns a EntPolcyGrdngHdr Entity with the original data.
		///</summary>
		public EntPolcyGrdngHdr GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateEntPolcyGrdngHdr(
				_originalData.EntPolcyGrdngHdrId,
				_originalData.EdAcadYearId,
				_originalData.EdCodeSemesterId,
				_originalData.AsFacultyInfoId,
				_originalData.EntMainId,
				_originalData.EdCodeLevelId,
				_originalData.EdBylawId,
				_originalData.EdCodeLoadTypeId,
				_originalData.RepeatTypeFlg,
				_originalData.EdCodeCourseAssessId,
				_originalData.PfFlg,
				_originalData.EdCodeMaxGradId,
				_originalData.AcadWarnFlg,
				_originalData.AddGpaFlg,
				_originalData.EdCodeCourseStatusNewId,
				_originalData.IsApplied,
				_originalData.LastDate,
				_originalData.SeUserId
				);
				
			return (EntPolcyGrdngHdr)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="EntPolcyGrdngHdrBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is EntPolcyGrdngHdrBase)
				return ValueEquals(this, (EntPolcyGrdngHdrBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="EntPolcyGrdngHdrBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.EntPolcyGrdngHdrId.GetHashCode() ^ 
					this.EdAcadYearId.GetHashCode() ^ 
					this.EdCodeSemesterId.GetHashCode() ^ 
					((this.AsFacultyInfoId == null) ? string.Empty : this.AsFacultyInfoId.ToString()).GetHashCode() ^ 
					((this.EntMainId == null) ? string.Empty : this.EntMainId.ToString()).GetHashCode() ^ 
					((this.EdCodeLevelId == null) ? string.Empty : this.EdCodeLevelId.ToString()).GetHashCode() ^ 
					((this.EdBylawId == null) ? string.Empty : this.EdBylawId.ToString()).GetHashCode() ^ 
					this.EdCodeLoadTypeId.GetHashCode() ^ 
					((this.RepeatTypeFlg == null) ? string.Empty : this.RepeatTypeFlg.ToString()).GetHashCode() ^ 
					((this.EdCodeCourseAssessId == null) ? string.Empty : this.EdCodeCourseAssessId.ToString()).GetHashCode() ^ 
					((this.PfFlg == null) ? string.Empty : this.PfFlg.ToString()).GetHashCode() ^ 
					((this.EdCodeMaxGradId == null) ? string.Empty : this.EdCodeMaxGradId.ToString()).GetHashCode() ^ 
					((this.AcadWarnFlg == null) ? string.Empty : this.AcadWarnFlg.ToString()).GetHashCode() ^ 
					this.AddGpaFlg.GetHashCode() ^ 
					((this.EdCodeCourseStatusNewId == null) ? string.Empty : this.EdCodeCourseStatusNewId.ToString()).GetHashCode() ^ 
					((this.IsApplied == null) ? string.Empty : this.IsApplied.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="EntPolcyGrdngHdrBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(EntPolcyGrdngHdrBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="EntPolcyGrdngHdrBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="EntPolcyGrdngHdrBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="EntPolcyGrdngHdrBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(EntPolcyGrdngHdrBase Object1, EntPolcyGrdngHdrBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.EntPolcyGrdngHdrId != Object2.EntPolcyGrdngHdrId)
				equal = false;
			if (Object1.EdAcadYearId != Object2.EdAcadYearId)
				equal = false;
			if (Object1.EdCodeSemesterId != Object2.EdCodeSemesterId)
				equal = false;
			if ( Object1.AsFacultyInfoId != null && Object2.AsFacultyInfoId != null )
			{
				if (Object1.AsFacultyInfoId != Object2.AsFacultyInfoId)
					equal = false;
			}
			else if (Object1.AsFacultyInfoId == null ^ Object2.AsFacultyInfoId == null )
			{
				equal = false;
			}
			if ( Object1.EntMainId != null && Object2.EntMainId != null )
			{
				if (Object1.EntMainId != Object2.EntMainId)
					equal = false;
			}
			else if (Object1.EntMainId == null ^ Object2.EntMainId == null )
			{
				equal = false;
			}
			if ( Object1.EdCodeLevelId != null && Object2.EdCodeLevelId != null )
			{
				if (Object1.EdCodeLevelId != Object2.EdCodeLevelId)
					equal = false;
			}
			else if (Object1.EdCodeLevelId == null ^ Object2.EdCodeLevelId == null )
			{
				equal = false;
			}
			if ( Object1.EdBylawId != null && Object2.EdBylawId != null )
			{
				if (Object1.EdBylawId != Object2.EdBylawId)
					equal = false;
			}
			else if (Object1.EdBylawId == null ^ Object2.EdBylawId == null )
			{
				equal = false;
			}
			if (Object1.EdCodeLoadTypeId != Object2.EdCodeLoadTypeId)
				equal = false;
			if ( Object1.RepeatTypeFlg != null && Object2.RepeatTypeFlg != null )
			{
				if (Object1.RepeatTypeFlg != Object2.RepeatTypeFlg)
					equal = false;
			}
			else if (Object1.RepeatTypeFlg == null ^ Object2.RepeatTypeFlg == null )
			{
				equal = false;
			}
			if ( Object1.EdCodeCourseAssessId != null && Object2.EdCodeCourseAssessId != null )
			{
				if (Object1.EdCodeCourseAssessId != Object2.EdCodeCourseAssessId)
					equal = false;
			}
			else if (Object1.EdCodeCourseAssessId == null ^ Object2.EdCodeCourseAssessId == null )
			{
				equal = false;
			}
			if ( Object1.PfFlg != null && Object2.PfFlg != null )
			{
				if (Object1.PfFlg != Object2.PfFlg)
					equal = false;
			}
			else if (Object1.PfFlg == null ^ Object2.PfFlg == null )
			{
				equal = false;
			}
			if ( Object1.EdCodeMaxGradId != null && Object2.EdCodeMaxGradId != null )
			{
				if (Object1.EdCodeMaxGradId != Object2.EdCodeMaxGradId)
					equal = false;
			}
			else if (Object1.EdCodeMaxGradId == null ^ Object2.EdCodeMaxGradId == null )
			{
				equal = false;
			}
			if ( Object1.AcadWarnFlg != null && Object2.AcadWarnFlg != null )
			{
				if (Object1.AcadWarnFlg != Object2.AcadWarnFlg)
					equal = false;
			}
			else if (Object1.AcadWarnFlg == null ^ Object2.AcadWarnFlg == null )
			{
				equal = false;
			}
			if (Object1.AddGpaFlg != Object2.AddGpaFlg)
				equal = false;
			if ( Object1.EdCodeCourseStatusNewId != null && Object2.EdCodeCourseStatusNewId != null )
			{
				if (Object1.EdCodeCourseStatusNewId != Object2.EdCodeCourseStatusNewId)
					equal = false;
			}
			else if (Object1.EdCodeCourseStatusNewId == null ^ Object2.EdCodeCourseStatusNewId == null )
			{
				equal = false;
			}
			if ( Object1.IsApplied != null && Object2.IsApplied != null )
			{
				if (Object1.IsApplied != Object2.IsApplied)
					equal = false;
			}
			else if (Object1.IsApplied == null ^ Object2.IsApplied == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((EntPolcyGrdngHdrBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static EntPolcyGrdngHdrComparer GetComparer()
        {
            return new EntPolcyGrdngHdrComparer();
        }
        */

        // Comparer delegates back to EntPolcyGrdngHdr
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(EntPolcyGrdngHdr rhs, EntPolcyGrdngHdrColumn which)
        {
            switch (which)
            {
            	
            	
            	case EntPolcyGrdngHdrColumn.EntPolcyGrdngHdrId:
            		return this.EntPolcyGrdngHdrId.CompareTo(rhs.EntPolcyGrdngHdrId);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.EdAcadYearId:
            		return this.EdAcadYearId.CompareTo(rhs.EdAcadYearId);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.EdCodeSemesterId:
            		return this.EdCodeSemesterId.CompareTo(rhs.EdCodeSemesterId);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.AsFacultyInfoId:
            		return this.AsFacultyInfoId.Value.CompareTo(rhs.AsFacultyInfoId.Value);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.EntMainId:
            		return this.EntMainId.Value.CompareTo(rhs.EntMainId.Value);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.EdCodeLevelId:
            		return this.EdCodeLevelId.Value.CompareTo(rhs.EdCodeLevelId.Value);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.EdBylawId:
            		return this.EdBylawId.Value.CompareTo(rhs.EdBylawId.Value);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.EdCodeLoadTypeId:
            		return this.EdCodeLoadTypeId.CompareTo(rhs.EdCodeLoadTypeId);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.RepeatTypeFlg:
            		return this.RepeatTypeFlg.Value.CompareTo(rhs.RepeatTypeFlg.Value);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.EdCodeCourseAssessId:
            		return this.EdCodeCourseAssessId.Value.CompareTo(rhs.EdCodeCourseAssessId.Value);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.PfFlg:
            		return this.PfFlg.Value.CompareTo(rhs.PfFlg.Value);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.EdCodeMaxGradId:
            		return this.EdCodeMaxGradId.Value.CompareTo(rhs.EdCodeMaxGradId.Value);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.AcadWarnFlg:
            		return this.AcadWarnFlg.Value.CompareTo(rhs.AcadWarnFlg.Value);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.AddGpaFlg:
            		return this.AddGpaFlg.CompareTo(rhs.AddGpaFlg);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.EdCodeCourseStatusNewId:
            		return this.EdCodeCourseStatusNewId.Value.CompareTo(rhs.EdCodeCourseStatusNewId.Value);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.IsApplied:
            		return this.IsApplied.Value.CompareTo(rhs.IsApplied.Value);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            	
            	
            	case EntPolcyGrdngHdrColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<EntPolcyGrdngHdrKey> Members
		
		// member variable for the EntityId property
		private EntPolcyGrdngHdrKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual EntPolcyGrdngHdrKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new EntPolcyGrdngHdrKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("EntPolcyGrdngHdr")
					.Append("|").Append( this.EntPolcyGrdngHdrId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{19}{18}- EntPolcyGrdngHdrId: {0}{18}- EdAcadYearId: {1}{18}- EdCodeSemesterId: {2}{18}- AsFacultyInfoId: {3}{18}- EntMainId: {4}{18}- EdCodeLevelId: {5}{18}- EdBylawId: {6}{18}- EdCodeLoadTypeId: {7}{18}- RepeatTypeFlg: {8}{18}- EdCodeCourseAssessId: {9}{18}- PfFlg: {10}{18}- EdCodeMaxGradId: {11}{18}- AcadWarnFlg: {12}{18}- AddGpaFlg: {13}{18}- EdCodeCourseStatusNewId: {14}{18}- IsApplied: {15}{18}- LastDate: {16}{18}- SeUserId: {17}{18}{20}", 
				this.EntPolcyGrdngHdrId,
				this.EdAcadYearId,
				this.EdCodeSemesterId,
				(this.AsFacultyInfoId == null) ? string.Empty : this.AsFacultyInfoId.ToString(),
				(this.EntMainId == null) ? string.Empty : this.EntMainId.ToString(),
				(this.EdCodeLevelId == null) ? string.Empty : this.EdCodeLevelId.ToString(),
				(this.EdBylawId == null) ? string.Empty : this.EdBylawId.ToString(),
				this.EdCodeLoadTypeId,
				(this.RepeatTypeFlg == null) ? string.Empty : this.RepeatTypeFlg.ToString(),
				(this.EdCodeCourseAssessId == null) ? string.Empty : this.EdCodeCourseAssessId.ToString(),
				(this.PfFlg == null) ? string.Empty : this.PfFlg.ToString(),
				(this.EdCodeMaxGradId == null) ? string.Empty : this.EdCodeMaxGradId.ToString(),
				(this.AcadWarnFlg == null) ? string.Empty : this.AcadWarnFlg.ToString(),
				this.AddGpaFlg,
				(this.EdCodeCourseStatusNewId == null) ? string.Empty : this.EdCodeCourseStatusNewId.ToString(),
				(this.IsApplied == null) ? string.Empty : this.IsApplied.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ENT_POLCY_GRDNG_HDR' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class EntPolcyGrdngHdrEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ENT_POLCY_GRDNG_HDR_ID : قواعد الرصد المؤقتة
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ENT_POLCY_GRDNG_HDR"</remarks>
		public System.Decimal EntPolcyGrdngHdrId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalEntPolcyGrdngHdrId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// ED_ACAD_YEAR_ID : 
		/// </summary>
		public System.Decimal		  EdAcadYearId = 0.0m;
		
		/// <summary>
		/// ED_CODE_SEMESTER_ID : 
		/// </summary>
		public System.Decimal		  EdCodeSemesterId = 0.0m;
		
		/// <summary>
		/// AS_FACULTY_INFO_ID : 
		/// </summary>
		public System.Decimal?		  AsFacultyInfoId = null;
		
		/// <summary>
		/// ENT_MAIN_ID : 
		/// </summary>
		public System.Decimal?		  EntMainId = null;
		
		/// <summary>
		/// ED_CODE_LEVEL_ID : 
		/// </summary>
		public System.Decimal?		  EdCodeLevelId = null;
		
		/// <summary>
		/// ED_BYLAW_ID : 
		/// </summary>
		public System.Decimal?		  EdBylawId = null;
		
		/// <summary>
		/// ED_CODE_LOAD_TYPE_ID : 
		/// </summary>
		public System.Decimal		  EdCodeLoadTypeId = 0.0m;
		
		/// <summary>
		/// REPEAT_TYPE_FLG : 0 not repeated 
		/// 		/// 1 repeat fail
		/// 		/// 2 repeat pass t7seen
		/// </summary>
		public System.Int16?		  RepeatTypeFlg = null;
		
		/// <summary>
		/// ED_CODE_COURSE_ASSESS_ID : 
		/// </summary>
		public System.Decimal?		  EdCodeCourseAssessId = null;
		
		/// <summary>
		/// PF_FLG : 1 pass fail
		/// 		/// 0  grades
		/// </summary>
		public System.Int16?		  PfFlg = null;
		
		/// <summary>
		/// ED_CODE_MAX_GRAD_ID : اقصى تقدير
		/// </summary>
		public System.Decimal?		  EdCodeMaxGradId = null;
		
		/// <summary>
		/// ACAD_WARN_FLG : حساب الانذار الاكاديمى:
		/// </summary>
		public System.Int16?		  AcadWarnFlg = null;
		
		/// <summary>
		/// ADD_GPA_FLG : =0 not calculated --- 
		/// 		/// =1 calculate course in gpa&CH ---
		/// 		/// =2 Calculated in CH only
		/// </summary>
		public System.Decimal		  AddGpaFlg = 0.0m;
		
		/// <summary>
		/// ED_CODE_COURSE_STATUS_NEW_ID : الحاله الجديدة للمقرر على الطلاب
		/// </summary>
		public System.Decimal?		  EdCodeCourseStatusNewId = null;
		
		/// <summary>
		/// IS_APPLIED : تم  التطبيق على الطلاب
		/// </summary>
		public System.Boolean?		  IsApplied = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private AsFacultyInfo _asFacultyInfoIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AsFacultyInfo"/>.
		/// </summary>
		/// <value>The source AsFacultyInfo for AsFacultyInfoId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AsFacultyInfo AsFacultyInfoIdSource
      	{
            get { return this._asFacultyInfoIdSource; }
            set { this._asFacultyInfoIdSource = value; }
      	}
		private EdAcadYear _edAcadYearIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdAcadYear"/>.
		/// </summary>
		/// <value>The source EdAcadYear for EdAcadYearId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdAcadYear EdAcadYearIdSource
      	{
            get { return this._edAcadYearIdSource; }
            set { this._edAcadYearIdSource = value; }
      	}
		private EdBylaw _edBylawIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdBylaw"/>.
		/// </summary>
		/// <value>The source EdBylaw for EdBylawId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdBylaw EdBylawIdSource
      	{
            get { return this._edBylawIdSource; }
            set { this._edBylawIdSource = value; }
      	}
		private EdCodeCourseAssess _edCodeCourseAssessIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeCourseAssess"/>.
		/// </summary>
		/// <value>The source EdCodeCourseAssess for EdCodeCourseAssessId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeCourseAssess EdCodeCourseAssessIdSource
      	{
            get { return this._edCodeCourseAssessIdSource; }
            set { this._edCodeCourseAssessIdSource = value; }
      	}
		private EdCodeCourseStatus _edCodeCourseStatusNewIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeCourseStatus"/>.
		/// </summary>
		/// <value>The source EdCodeCourseStatus for EdCodeCourseStatusNewId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeCourseStatus EdCodeCourseStatusNewIdSource
      	{
            get { return this._edCodeCourseStatusNewIdSource; }
            set { this._edCodeCourseStatusNewIdSource = value; }
      	}
		private EdCodeGrading _edCodeMaxGradIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeGrading"/>.
		/// </summary>
		/// <value>The source EdCodeGrading for EdCodeMaxGradId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeGrading EdCodeMaxGradIdSource
      	{
            get { return this._edCodeMaxGradIdSource; }
            set { this._edCodeMaxGradIdSource = value; }
      	}
		private EdCodeLevel _edCodeLevelIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeLevel"/>.
		/// </summary>
		/// <value>The source EdCodeLevel for EdCodeLevelId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeLevel EdCodeLevelIdSource
      	{
            get { return this._edCodeLevelIdSource; }
            set { this._edCodeLevelIdSource = value; }
      	}
		private EdCodeLoadType _edCodeLoadTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeLoadType"/>.
		/// </summary>
		/// <value>The source EdCodeLoadType for EdCodeLoadTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeLoadType EdCodeLoadTypeIdSource
      	{
            get { return this._edCodeLoadTypeIdSource; }
            set { this._edCodeLoadTypeIdSource = value; }
      	}
		private EdCodeSemester _edCodeSemesterIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeSemester"/>.
		/// </summary>
		/// <value>The source EdCodeSemester for EdCodeSemesterId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeSemester EdCodeSemesterIdSource
      	{
            get { return this._edCodeSemesterIdSource; }
            set { this._edCodeSemesterIdSource = value; }
      	}
		private EntityMain _entMainIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EntityMain"/>.
		/// </summary>
		/// <value>The source EntityMain for EntMainId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EntityMain EntMainIdSource
      	{
            get { return this._entMainIdSource; }
            set { this._entMainIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region EntPolcyGrdngCourseCollection
		
		private TList<EntPolcyGrdngCourse> _entPolcyGrdngCourseEntPolcyGrdngHdrId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entPolcyGrdngCourseEntPolcyGrdngHdrId
		/// </summary>
		
		public TList<EntPolcyGrdngCourse> EntPolcyGrdngCourseCollection
		{
			get
			{
				if (_entPolcyGrdngCourseEntPolcyGrdngHdrId == null)
				{
				_entPolcyGrdngCourseEntPolcyGrdngHdrId = new TList<EntPolcyGrdngCourse>();
				}
	
				return _entPolcyGrdngCourseEntPolcyGrdngHdrId;
			}
			set { _entPolcyGrdngCourseEntPolcyGrdngHdrId = value; }
		}
		
		#endregion

		#region EdStudCourseRegPolcyCollection
		
		private TList<EdStudCourseRegPolcy> _edStudCourseRegPolcyEntPolcyGrdngHdrId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegPolcyEntPolcyGrdngHdrId
		/// </summary>
		
		public TList<EdStudCourseRegPolcy> EdStudCourseRegPolcyCollection
		{
			get
			{
				if (_edStudCourseRegPolcyEntPolcyGrdngHdrId == null)
				{
				_edStudCourseRegPolcyEntPolcyGrdngHdrId = new TList<EdStudCourseRegPolcy>();
				}
	
				return _edStudCourseRegPolcyEntPolcyGrdngHdrId;
			}
			set { _edStudCourseRegPolcyEntPolcyGrdngHdrId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			EntPolcyGrdngHdrEntityData _tmp = new EntPolcyGrdngHdrEntityData();
						
			_tmp.EntPolcyGrdngHdrId = this.EntPolcyGrdngHdrId;
			_tmp.OriginalEntPolcyGrdngHdrId = this.OriginalEntPolcyGrdngHdrId;
			
			_tmp.EdAcadYearId = this.EdAcadYearId;
			_tmp.EdCodeSemesterId = this.EdCodeSemesterId;
			_tmp.AsFacultyInfoId = this.AsFacultyInfoId;
			_tmp.EntMainId = this.EntMainId;
			_tmp.EdCodeLevelId = this.EdCodeLevelId;
			_tmp.EdBylawId = this.EdBylawId;
			_tmp.EdCodeLoadTypeId = this.EdCodeLoadTypeId;
			_tmp.RepeatTypeFlg = this.RepeatTypeFlg;
			_tmp.EdCodeCourseAssessId = this.EdCodeCourseAssessId;
			_tmp.PfFlg = this.PfFlg;
			_tmp.EdCodeMaxGradId = this.EdCodeMaxGradId;
			_tmp.AcadWarnFlg = this.AcadWarnFlg;
			_tmp.AddGpaFlg = this.AddGpaFlg;
			_tmp.EdCodeCourseStatusNewId = this.EdCodeCourseStatusNewId;
			_tmp.IsApplied = this.IsApplied;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserId = this.SeUserId;
			
			#region Source Parent Composite Entities
			if (this.AsFacultyInfoIdSource != null)
				_tmp.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource) as AsFacultyInfo;
			if (this.EdAcadYearIdSource != null)
				_tmp.EdAcadYearIdSource = MakeCopyOf(this.EdAcadYearIdSource) as EdAcadYear;
			if (this.EdBylawIdSource != null)
				_tmp.EdBylawIdSource = MakeCopyOf(this.EdBylawIdSource) as EdBylaw;
			if (this.EdCodeCourseAssessIdSource != null)
				_tmp.EdCodeCourseAssessIdSource = MakeCopyOf(this.EdCodeCourseAssessIdSource) as EdCodeCourseAssess;
			if (this.EdCodeCourseStatusNewIdSource != null)
				_tmp.EdCodeCourseStatusNewIdSource = MakeCopyOf(this.EdCodeCourseStatusNewIdSource) as EdCodeCourseStatus;
			if (this.EdCodeMaxGradIdSource != null)
				_tmp.EdCodeMaxGradIdSource = MakeCopyOf(this.EdCodeMaxGradIdSource) as EdCodeGrading;
			if (this.EdCodeLevelIdSource != null)
				_tmp.EdCodeLevelIdSource = MakeCopyOf(this.EdCodeLevelIdSource) as EdCodeLevel;
			if (this.EdCodeLoadTypeIdSource != null)
				_tmp.EdCodeLoadTypeIdSource = MakeCopyOf(this.EdCodeLoadTypeIdSource) as EdCodeLoadType;
			if (this.EdCodeSemesterIdSource != null)
				_tmp.EdCodeSemesterIdSource = MakeCopyOf(this.EdCodeSemesterIdSource) as EdCodeSemester;
			if (this.EntMainIdSource != null)
				_tmp.EntMainIdSource = MakeCopyOf(this.EntMainIdSource) as EntityMain;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._entPolcyGrdngCourseEntPolcyGrdngHdrId != null)
				_tmp.EntPolcyGrdngCourseCollection = (TList<EntPolcyGrdngCourse>) MakeCopyOf(this.EntPolcyGrdngCourseCollection); 
			if (this._edStudCourseRegPolcyEntPolcyGrdngHdrId != null)
				_tmp.EdStudCourseRegPolcyCollection = (TList<EdStudCourseRegPolcy>) MakeCopyOf(this.EdStudCourseRegPolcyCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			EntPolcyGrdngHdrEntityData _tmp = new EntPolcyGrdngHdrEntityData();
						
			_tmp.EntPolcyGrdngHdrId = this.EntPolcyGrdngHdrId;
			_tmp.OriginalEntPolcyGrdngHdrId = this.OriginalEntPolcyGrdngHdrId;
			
			_tmp.EdAcadYearId = this.EdAcadYearId;
			_tmp.EdCodeSemesterId = this.EdCodeSemesterId;
			_tmp.AsFacultyInfoId = this.AsFacultyInfoId;
			_tmp.EntMainId = this.EntMainId;
			_tmp.EdCodeLevelId = this.EdCodeLevelId;
			_tmp.EdBylawId = this.EdBylawId;
			_tmp.EdCodeLoadTypeId = this.EdCodeLoadTypeId;
			_tmp.RepeatTypeFlg = this.RepeatTypeFlg;
			_tmp.EdCodeCourseAssessId = this.EdCodeCourseAssessId;
			_tmp.PfFlg = this.PfFlg;
			_tmp.EdCodeMaxGradId = this.EdCodeMaxGradId;
			_tmp.AcadWarnFlg = this.AcadWarnFlg;
			_tmp.AddGpaFlg = this.AddGpaFlg;
			_tmp.EdCodeCourseStatusNewId = this.EdCodeCourseStatusNewId;
			_tmp.IsApplied = this.IsApplied;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserId = this.SeUserId;
			
			#region Source Parent Composite Entities
			if (this.AsFacultyInfoIdSource != null && existingCopies.Contains(this.AsFacultyInfoIdSource))
				_tmp.AsFacultyInfoIdSource = existingCopies[this.AsFacultyInfoIdSource] as AsFacultyInfo;
			else
				_tmp.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource, existingCopies) as AsFacultyInfo;
			if (this.EdAcadYearIdSource != null && existingCopies.Contains(this.EdAcadYearIdSource))
				_tmp.EdAcadYearIdSource = existingCopies[this.EdAcadYearIdSource] as EdAcadYear;
			else
				_tmp.EdAcadYearIdSource = MakeCopyOf(this.EdAcadYearIdSource, existingCopies) as EdAcadYear;
			if (this.EdBylawIdSource != null && existingCopies.Contains(this.EdBylawIdSource))
				_tmp.EdBylawIdSource = existingCopies[this.EdBylawIdSource] as EdBylaw;
			else
				_tmp.EdBylawIdSource = MakeCopyOf(this.EdBylawIdSource, existingCopies) as EdBylaw;
			if (this.EdCodeCourseAssessIdSource != null && existingCopies.Contains(this.EdCodeCourseAssessIdSource))
				_tmp.EdCodeCourseAssessIdSource = existingCopies[this.EdCodeCourseAssessIdSource] as EdCodeCourseAssess;
			else
				_tmp.EdCodeCourseAssessIdSource = MakeCopyOf(this.EdCodeCourseAssessIdSource, existingCopies) as EdCodeCourseAssess;
			if (this.EdCodeCourseStatusNewIdSource != null && existingCopies.Contains(this.EdCodeCourseStatusNewIdSource))
				_tmp.EdCodeCourseStatusNewIdSource = existingCopies[this.EdCodeCourseStatusNewIdSource] as EdCodeCourseStatus;
			else
				_tmp.EdCodeCourseStatusNewIdSource = MakeCopyOf(this.EdCodeCourseStatusNewIdSource, existingCopies) as EdCodeCourseStatus;
			if (this.EdCodeMaxGradIdSource != null && existingCopies.Contains(this.EdCodeMaxGradIdSource))
				_tmp.EdCodeMaxGradIdSource = existingCopies[this.EdCodeMaxGradIdSource] as EdCodeGrading;
			else
				_tmp.EdCodeMaxGradIdSource = MakeCopyOf(this.EdCodeMaxGradIdSource, existingCopies) as EdCodeGrading;
			if (this.EdCodeLevelIdSource != null && existingCopies.Contains(this.EdCodeLevelIdSource))
				_tmp.EdCodeLevelIdSource = existingCopies[this.EdCodeLevelIdSource] as EdCodeLevel;
			else
				_tmp.EdCodeLevelIdSource = MakeCopyOf(this.EdCodeLevelIdSource, existingCopies) as EdCodeLevel;
			if (this.EdCodeLoadTypeIdSource != null && existingCopies.Contains(this.EdCodeLoadTypeIdSource))
				_tmp.EdCodeLoadTypeIdSource = existingCopies[this.EdCodeLoadTypeIdSource] as EdCodeLoadType;
			else
				_tmp.EdCodeLoadTypeIdSource = MakeCopyOf(this.EdCodeLoadTypeIdSource, existingCopies) as EdCodeLoadType;
			if (this.EdCodeSemesterIdSource != null && existingCopies.Contains(this.EdCodeSemesterIdSource))
				_tmp.EdCodeSemesterIdSource = existingCopies[this.EdCodeSemesterIdSource] as EdCodeSemester;
			else
				_tmp.EdCodeSemesterIdSource = MakeCopyOf(this.EdCodeSemesterIdSource, existingCopies) as EdCodeSemester;
			if (this.EntMainIdSource != null && existingCopies.Contains(this.EntMainIdSource))
				_tmp.EntMainIdSource = existingCopies[this.EntMainIdSource] as EntityMain;
			else
				_tmp.EntMainIdSource = MakeCopyOf(this.EntMainIdSource, existingCopies) as EntityMain;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.EntPolcyGrdngCourseCollection = (TList<EntPolcyGrdngCourse>) MakeCopyOf(this.EntPolcyGrdngCourseCollection, existingCopies); 
			_tmp.EdStudCourseRegPolcyCollection = (TList<EdStudCourseRegPolcy>) MakeCopyOf(this.EdStudCourseRegPolcyCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EntPolcyGrdngHdrColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(EntPolcyGrdngHdrColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EntPolcyGrdngHdrColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(EntPolcyGrdngHdrColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EntPolcyGrdngHdrColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(EntPolcyGrdngHdrColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				EntPolcyGrdngHdrEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new EntPolcyGrdngHdrEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EntPolcyGrdngHdrColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(EntPolcyGrdngHdrColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				EntPolcyGrdngHdrEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new EntPolcyGrdngHdrEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region EntPolcyGrdngHdrEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="EntPolcyGrdngHdr"/> object.
	/// </remarks>
	public class EntPolcyGrdngHdrEventArgs : System.EventArgs
	{
		private EntPolcyGrdngHdrColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the EntPolcyGrdngHdrEventArgs class.
		///</summary>
		public EntPolcyGrdngHdrEventArgs(EntPolcyGrdngHdrColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the EntPolcyGrdngHdrEventArgs class.
		///</summary>
		public EntPolcyGrdngHdrEventArgs(EntPolcyGrdngHdrColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The EntPolcyGrdngHdrColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="EntPolcyGrdngHdrColumn" />
		public EntPolcyGrdngHdrColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all EntPolcyGrdngHdr related events.
	///</summary>
	public delegate void EntPolcyGrdngHdrEventHandler(object sender, EntPolcyGrdngHdrEventArgs e);
	
	#region EntPolcyGrdngHdrComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class EntPolcyGrdngHdrComparer : System.Collections.Generic.IComparer<EntPolcyGrdngHdr>
	{
		EntPolcyGrdngHdrColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:EntPolcyGrdngHdrComparer"/> class.
        /// </summary>
		public EntPolcyGrdngHdrComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:EntPolcyGrdngHdrComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public EntPolcyGrdngHdrComparer(EntPolcyGrdngHdrColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="EntPolcyGrdngHdr"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="EntPolcyGrdngHdr"/> to compare.</param>
        /// <param name="b">The second <c>EntPolcyGrdngHdr</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(EntPolcyGrdngHdr a, EntPolcyGrdngHdr b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(EntPolcyGrdngHdr entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(EntPolcyGrdngHdr a, EntPolcyGrdngHdr b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public EntPolcyGrdngHdrColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region EntPolcyGrdngHdrKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="EntPolcyGrdngHdr"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class EntPolcyGrdngHdrKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the EntPolcyGrdngHdrKey class.
		/// </summary>
		public EntPolcyGrdngHdrKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the EntPolcyGrdngHdrKey class.
		/// </summary>
		public EntPolcyGrdngHdrKey(EntPolcyGrdngHdrBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.EntPolcyGrdngHdrId = entity.EntPolcyGrdngHdrId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the EntPolcyGrdngHdrKey class.
		/// </summary>
		public EntPolcyGrdngHdrKey(System.Decimal _entPolcyGrdngHdrId)
		{
			#region Init Properties

			this.EntPolcyGrdngHdrId = _entPolcyGrdngHdrId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private EntPolcyGrdngHdrBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public EntPolcyGrdngHdrBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the EntPolcyGrdngHdrId property
		private System.Decimal _entPolcyGrdngHdrId;
		
		/// <summary>
		/// Gets or sets the EntPolcyGrdngHdrId property.
		/// </summary>
		public System.Decimal EntPolcyGrdngHdrId
		{
			get { return _entPolcyGrdngHdrId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.EntPolcyGrdngHdrId = value;
				
				_entPolcyGrdngHdrId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				EntPolcyGrdngHdrId = ( values["EntPolcyGrdngHdrId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["EntPolcyGrdngHdrId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("EntPolcyGrdngHdrId", EntPolcyGrdngHdrId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("EntPolcyGrdngHdrId: {0}{1}",
								EntPolcyGrdngHdrId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region EntPolcyGrdngHdrColumn Enum
	
	/// <summary>
	/// Enumerate the EntPolcyGrdngHdr columns.
	/// </summary>
	[Serializable]
	public enum EntPolcyGrdngHdrColumn : int
	{
		/// <summary>
		/// EntPolcyGrdngHdrId : قواعد الرصد المؤقتة
		/// </summary>
		[EnumTextValue("ENT_POLCY_GRDNG_HDR_ID")]
		[ColumnEnum("ENT_POLCY_GRDNG_HDR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		EntPolcyGrdngHdrId = 1,
		/// <summary>
		/// EdAcadYearId : 
		/// </summary>
		[EnumTextValue("ED_ACAD_YEAR_ID")]
		[ColumnEnum("ED_ACAD_YEAR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdAcadYearId = 2,
		/// <summary>
		/// EdCodeSemesterId : 
		/// </summary>
		[EnumTextValue("ED_CODE_SEMESTER_ID")]
		[ColumnEnum("ED_CODE_SEMESTER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdCodeSemesterId = 3,
		/// <summary>
		/// AsFacultyInfoId : 
		/// </summary>
		[EnumTextValue("AS_FACULTY_INFO_ID")]
		[ColumnEnum("AS_FACULTY_INFO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AsFacultyInfoId = 4,
		/// <summary>
		/// EntMainId : 
		/// </summary>
		[EnumTextValue("ENT_MAIN_ID")]
		[ColumnEnum("ENT_MAIN_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EntMainId = 5,
		/// <summary>
		/// EdCodeLevelId : 
		/// </summary>
		[EnumTextValue("ED_CODE_LEVEL_ID")]
		[ColumnEnum("ED_CODE_LEVEL_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeLevelId = 6,
		/// <summary>
		/// EdBylawId : 
		/// </summary>
		[EnumTextValue("ED_BYLAW_ID")]
		[ColumnEnum("ED_BYLAW_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdBylawId = 7,
		/// <summary>
		/// EdCodeLoadTypeId : 
		/// </summary>
		[EnumTextValue("ED_CODE_LOAD_TYPE_ID")]
		[ColumnEnum("ED_CODE_LOAD_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdCodeLoadTypeId = 8,
		/// <summary>
		/// RepeatTypeFlg : 0 not repeated 
		/// 		/// 1 repeat fail
		/// 		/// 2 repeat pass t7seen
		/// </summary>
		[EnumTextValue("REPEAT_TYPE_FLG")]
		[ColumnEnum("REPEAT_TYPE_FLG", typeof(System.Int16), System.Data.DbType.Int16, false, false, true)]
		RepeatTypeFlg = 9,
		/// <summary>
		/// EdCodeCourseAssessId : 
		/// </summary>
		[EnumTextValue("ED_CODE_COURSE_ASSESS_ID")]
		[ColumnEnum("ED_CODE_COURSE_ASSESS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeCourseAssessId = 10,
		/// <summary>
		/// PfFlg : 1 pass fail
		/// 		/// 0  grades
		/// </summary>
		[EnumTextValue("PF_FLG")]
		[ColumnEnum("PF_FLG", typeof(System.Int16), System.Data.DbType.Int16, false, false, true)]
		PfFlg = 11,
		/// <summary>
		/// EdCodeMaxGradId : اقصى تقدير
		/// </summary>
		[EnumTextValue("ED_CODE_MAX_GRAD_ID")]
		[ColumnEnum("ED_CODE_MAX_GRAD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeMaxGradId = 12,
		/// <summary>
		/// AcadWarnFlg : حساب الانذار الاكاديمى:
		/// </summary>
		[EnumTextValue("ACAD_WARN_FLG")]
		[ColumnEnum("ACAD_WARN_FLG", typeof(System.Int16), System.Data.DbType.Int16, false, false, true)]
		AcadWarnFlg = 13,
		/// <summary>
		/// AddGpaFlg : =0 not calculated --- 
		/// 		/// =1 calculate course in gpa&CH ---
		/// 		/// =2 Calculated in CH only
		/// </summary>
		[EnumTextValue("ADD_GPA_FLG")]
		[ColumnEnum("ADD_GPA_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		AddGpaFlg = 14,
		/// <summary>
		/// EdCodeCourseStatusNewId : الحاله الجديدة للمقرر على الطلاب
		/// </summary>
		[EnumTextValue("ED_CODE_COURSE_STATUS_NEW_ID")]
		[ColumnEnum("ED_CODE_COURSE_STATUS_NEW_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeCourseStatusNewId = 15,
		/// <summary>
		/// IsApplied : تم  التطبيق على الطلاب
		/// </summary>
		[EnumTextValue("IS_APPLIED")]
		[ColumnEnum("IS_APPLIED", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		IsApplied = 16,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 17,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 18
	}//End enum

	#endregion EntPolcyGrdngHdrColumn Enum

} // end namespace
