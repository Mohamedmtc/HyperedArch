
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file SpoSponsorOffer.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'SPO_SPONSOR_OFFER' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class SpoSponsorOfferBase : EntityBase, ISpoSponsorOffer, IEntityId<SpoSponsorOfferKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private SpoSponsorOfferEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private SpoSponsorOfferEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private SpoSponsorOfferEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<SpoSponsorOffer> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event SpoSponsorOfferEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event SpoSponsorOfferEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="SpoSponsorOfferBase"/> instance.
		///</summary>
		public SpoSponsorOfferBase()
		{
			this.entityData = new SpoSponsorOfferEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="SpoSponsorOfferBase"/> instance.
		///</summary>
		///<param name="_spoSponsorOfferId"></param>
		///<param name="_spoSponsorId"></param>
		///<param name="_offerNameAr"></param>
		///<param name="_offerNameEn"></param>
		///<param name="_asFacultyInfoId">NULL default=UNIV</param>
		///<param name="_asCodeDegreeClassId">Default=All</param>
		///<param name="_reqDate"></param>
		///<param name="_isActive"></param>
		///<param name="_maxStudCount">عدد الطلابXXX</param>
		///<param name="_spoPercent">نوع الكفالة "نسبة /قيمةXXXXX"</param>
		///<param name="_spoAmount">نوع الكفالة "نسبة /قيمةXXXXX"</param>
		///<param name="_gsCodeCurrencyId">XXX Later</param>
		///<param name="_repeatCrsFlg">مقررات معادة  رسوب</param>
		///<param name="_repeatCrsCount">عدد مرات تحمل الكفيل اعادة رسوب</param>
		///<param name="_wthdrwCrsFlg">مقررات اعاده انسحاب</param>
		///<param name="_wthdrwCrsCount">عدد مرات تحمل الكفيل الانسحاب</param>
		///<param name="_repeatAbsCrsFlg">مقررات معادة  رسوب غياب</param>
		///<param name="_repeatPassedCrsFlg">اعاده تحسين</param>
		///<param name="_thesisFlg">مقرر رسالةXXX</param>
		///<param name="_semTypeFlg">الفصول "اجبارية - الكل">0 all</param>
		///<param name="_feeTypeFlg">ALL-STUDY FEES-OTHER  >0 all</param>
		///<param name="_feeCodeTypeId">نوع المصروف "الكل - دراسي – اخريXXX "</param>
		///<param name="_orientSemCount">عدد فصول تمهيدى</param>
		///<param name="_semCount">عدد فصول الدراسية المكفولة بعد التمهيدى ان وجد</param>
		///<param name="_edAcadYearFromId">من عام</param>
		///<param name="_edCodeSemesterFromId">من فصل</param>
		///<param name="_edAcadYearToId">الى عام</param>
		///<param name="_edCodeSemesterToId">الى فصل</param>
		///<param name="_returnStudBalance">KU BDF Sponsor 1000 ثابتة ولو فى باقى ترجع لرصيد الطالب</param>
		///<param name="_notes"></param>
		///<param name="_seUserId"></param>
		///<param name="_lastDate"></param>
		public SpoSponsorOfferBase(System.Decimal _spoSponsorOfferId, System.Decimal _spoSponsorId, 
			System.String _offerNameAr, System.String _offerNameEn, System.Decimal? _asFacultyInfoId, 
			System.Decimal? _asCodeDegreeClassId, System.DateTime? _reqDate, System.Boolean? _isActive, 
			System.Int32? _maxStudCount, System.Decimal? _spoPercent, System.Decimal? _spoAmount, 
			System.Decimal? _gsCodeCurrencyId, System.Boolean? _repeatCrsFlg, System.Int32? _repeatCrsCount, 
			System.Boolean? _wthdrwCrsFlg, System.Int32? _wthdrwCrsCount, System.Boolean? _repeatAbsCrsFlg, 
			System.Boolean? _repeatPassedCrsFlg, System.Boolean? _thesisFlg, System.Decimal? _semTypeFlg, 
			System.Int32? _feeTypeFlg, System.Decimal? _feeCodeTypeId, System.Decimal? _orientSemCount, 
			System.Decimal? _semCount, System.Decimal? _edAcadYearFromId, System.Decimal? _edCodeSemesterFromId, 
			System.Decimal? _edAcadYearToId, System.Decimal? _edCodeSemesterToId, System.Boolean? _returnStudBalance, 
			System.String _notes, System.Decimal? _seUserId, System.DateTime? _lastDate)
		{
			this.entityData = new SpoSponsorOfferEntityData();
			this.backupData = null;

			this.SpoSponsorOfferId = _spoSponsorOfferId;
			this.SpoSponsorId = _spoSponsorId;
			this.OfferNameAr = _offerNameAr;
			this.OfferNameEn = _offerNameEn;
			this.AsFacultyInfoId = _asFacultyInfoId;
			this.AsCodeDegreeClassId = _asCodeDegreeClassId;
			this.ReqDate = _reqDate;
			this.IsActive = _isActive;
			this.MaxStudCount = _maxStudCount;
			this.SpoPercent = _spoPercent;
			this.SpoAmount = _spoAmount;
			this.GsCodeCurrencyId = _gsCodeCurrencyId;
			this.RepeatCrsFlg = _repeatCrsFlg;
			this.RepeatCrsCount = _repeatCrsCount;
			this.WthdrwCrsFlg = _wthdrwCrsFlg;
			this.WthdrwCrsCount = _wthdrwCrsCount;
			this.RepeatAbsCrsFlg = _repeatAbsCrsFlg;
			this.RepeatPassedCrsFlg = _repeatPassedCrsFlg;
			this.ThesisFlg = _thesisFlg;
			this.SemTypeFlg = _semTypeFlg;
			this.FeeTypeFlg = _feeTypeFlg;
			this.FeeCodeTypeId = _feeCodeTypeId;
			this.OrientSemCount = _orientSemCount;
			this.SemCount = _semCount;
			this.EdAcadYearFromId = _edAcadYearFromId;
			this.EdCodeSemesterFromId = _edCodeSemesterFromId;
			this.EdAcadYearToId = _edAcadYearToId;
			this.EdCodeSemesterToId = _edCodeSemesterToId;
			this.ReturnStudBalance = _returnStudBalance;
			this.Notes = _notes;
			this.SeUserId = _seUserId;
			this.LastDate = _lastDate;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="SpoSponsorOffer"/> instance.
		///</summary>
		///<param name="_spoSponsorOfferId"></param>
		///<param name="_spoSponsorId"></param>
		///<param name="_offerNameAr"></param>
		///<param name="_offerNameEn"></param>
		///<param name="_asFacultyInfoId">NULL default=UNIV</param>
		///<param name="_asCodeDegreeClassId">Default=All</param>
		///<param name="_reqDate"></param>
		///<param name="_isActive"></param>
		///<param name="_maxStudCount">عدد الطلابXXX</param>
		///<param name="_spoPercent">نوع الكفالة "نسبة /قيمةXXXXX"</param>
		///<param name="_spoAmount">نوع الكفالة "نسبة /قيمةXXXXX"</param>
		///<param name="_gsCodeCurrencyId">XXX Later</param>
		///<param name="_repeatCrsFlg">مقررات معادة  رسوب</param>
		///<param name="_repeatCrsCount">عدد مرات تحمل الكفيل اعادة رسوب</param>
		///<param name="_wthdrwCrsFlg">مقررات اعاده انسحاب</param>
		///<param name="_wthdrwCrsCount">عدد مرات تحمل الكفيل الانسحاب</param>
		///<param name="_repeatAbsCrsFlg">مقررات معادة  رسوب غياب</param>
		///<param name="_repeatPassedCrsFlg">اعاده تحسين</param>
		///<param name="_thesisFlg">مقرر رسالةXXX</param>
		///<param name="_semTypeFlg">الفصول "اجبارية - الكل">0 all</param>
		///<param name="_feeTypeFlg">ALL-STUDY FEES-OTHER  >0 all</param>
		///<param name="_feeCodeTypeId">نوع المصروف "الكل - دراسي – اخريXXX "</param>
		///<param name="_orientSemCount">عدد فصول تمهيدى</param>
		///<param name="_semCount">عدد فصول الدراسية المكفولة بعد التمهيدى ان وجد</param>
		///<param name="_edAcadYearFromId">من عام</param>
		///<param name="_edCodeSemesterFromId">من فصل</param>
		///<param name="_edAcadYearToId">الى عام</param>
		///<param name="_edCodeSemesterToId">الى فصل</param>
		///<param name="_returnStudBalance">KU BDF Sponsor 1000 ثابتة ولو فى باقى ترجع لرصيد الطالب</param>
		///<param name="_notes"></param>
		///<param name="_seUserId"></param>
		///<param name="_lastDate"></param>
		public static SpoSponsorOffer CreateSpoSponsorOffer(System.Decimal _spoSponsorOfferId, System.Decimal _spoSponsorId, 
			System.String _offerNameAr, System.String _offerNameEn, System.Decimal? _asFacultyInfoId, 
			System.Decimal? _asCodeDegreeClassId, System.DateTime? _reqDate, System.Boolean? _isActive, 
			System.Int32? _maxStudCount, System.Decimal? _spoPercent, System.Decimal? _spoAmount, 
			System.Decimal? _gsCodeCurrencyId, System.Boolean? _repeatCrsFlg, System.Int32? _repeatCrsCount, 
			System.Boolean? _wthdrwCrsFlg, System.Int32? _wthdrwCrsCount, System.Boolean? _repeatAbsCrsFlg, 
			System.Boolean? _repeatPassedCrsFlg, System.Boolean? _thesisFlg, System.Decimal? _semTypeFlg, 
			System.Int32? _feeTypeFlg, System.Decimal? _feeCodeTypeId, System.Decimal? _orientSemCount, 
			System.Decimal? _semCount, System.Decimal? _edAcadYearFromId, System.Decimal? _edCodeSemesterFromId, 
			System.Decimal? _edAcadYearToId, System.Decimal? _edCodeSemesterToId, System.Boolean? _returnStudBalance, 
			System.String _notes, System.Decimal? _seUserId, System.DateTime? _lastDate)
		{
			SpoSponsorOffer newSpoSponsorOffer = new SpoSponsorOffer();
			newSpoSponsorOffer.SpoSponsorOfferId = _spoSponsorOfferId;
			newSpoSponsorOffer.SpoSponsorId = _spoSponsorId;
			newSpoSponsorOffer.OfferNameAr = _offerNameAr;
			newSpoSponsorOffer.OfferNameEn = _offerNameEn;
			newSpoSponsorOffer.AsFacultyInfoId = _asFacultyInfoId;
			newSpoSponsorOffer.AsCodeDegreeClassId = _asCodeDegreeClassId;
			newSpoSponsorOffer.ReqDate = _reqDate;
			newSpoSponsorOffer.IsActive = _isActive;
			newSpoSponsorOffer.MaxStudCount = _maxStudCount;
			newSpoSponsorOffer.SpoPercent = _spoPercent;
			newSpoSponsorOffer.SpoAmount = _spoAmount;
			newSpoSponsorOffer.GsCodeCurrencyId = _gsCodeCurrencyId;
			newSpoSponsorOffer.RepeatCrsFlg = _repeatCrsFlg;
			newSpoSponsorOffer.RepeatCrsCount = _repeatCrsCount;
			newSpoSponsorOffer.WthdrwCrsFlg = _wthdrwCrsFlg;
			newSpoSponsorOffer.WthdrwCrsCount = _wthdrwCrsCount;
			newSpoSponsorOffer.RepeatAbsCrsFlg = _repeatAbsCrsFlg;
			newSpoSponsorOffer.RepeatPassedCrsFlg = _repeatPassedCrsFlg;
			newSpoSponsorOffer.ThesisFlg = _thesisFlg;
			newSpoSponsorOffer.SemTypeFlg = _semTypeFlg;
			newSpoSponsorOffer.FeeTypeFlg = _feeTypeFlg;
			newSpoSponsorOffer.FeeCodeTypeId = _feeCodeTypeId;
			newSpoSponsorOffer.OrientSemCount = _orientSemCount;
			newSpoSponsorOffer.SemCount = _semCount;
			newSpoSponsorOffer.EdAcadYearFromId = _edAcadYearFromId;
			newSpoSponsorOffer.EdCodeSemesterFromId = _edCodeSemesterFromId;
			newSpoSponsorOffer.EdAcadYearToId = _edAcadYearToId;
			newSpoSponsorOffer.EdCodeSemesterToId = _edCodeSemesterToId;
			newSpoSponsorOffer.ReturnStudBalance = _returnStudBalance;
			newSpoSponsorOffer.Notes = _notes;
			newSpoSponsorOffer.SeUserId = _seUserId;
			newSpoSponsorOffer.LastDate = _lastDate;
			return newSpoSponsorOffer;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the SpoSponsorOfferId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal SpoSponsorOfferId
		{
			get
			{
				return this.entityData.SpoSponsorOfferId; 
			}
			
			set
			{
				if (this.entityData.SpoSponsorOfferId == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.SpoSponsorOfferId, this.entityData.SpoSponsorOfferId);
				this.entityData.SpoSponsorOfferId = value;
				this.EntityId.SpoSponsorOfferId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.SpoSponsorOfferId, this.entityData.SpoSponsorOfferId);
				OnPropertyChanged("SpoSponsorOfferId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the SPO_SPONSOR_OFFER_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the SPO_SPONSOR_OFFER_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalSpoSponsorOfferId
		{
			get { return this.entityData.OriginalSpoSponsorOfferId; }
			set { this.entityData.OriginalSpoSponsorOfferId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the SpoSponsorId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal SpoSponsorId
		{
			get
			{
				return this.entityData.SpoSponsorId; 
			}
			
			set
			{
				if (this.entityData.SpoSponsorId == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.SpoSponsorId, this.entityData.SpoSponsorId);
				this.entityData.SpoSponsorId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.SpoSponsorId, this.entityData.SpoSponsorId);
				OnPropertyChanged("SpoSponsorId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OfferNameAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String OfferNameAr
		{
			get
			{
				return this.entityData.OfferNameAr; 
			}
			
			set
			{
				if (this.entityData.OfferNameAr == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.OfferNameAr, this.entityData.OfferNameAr);
				this.entityData.OfferNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.OfferNameAr, this.entityData.OfferNameAr);
				OnPropertyChanged("OfferNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OfferNameEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String OfferNameEn
		{
			get
			{
				return this.entityData.OfferNameEn; 
			}
			
			set
			{
				if (this.entityData.OfferNameEn == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.OfferNameEn, this.entityData.OfferNameEn);
				this.entityData.OfferNameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.OfferNameEn, this.entityData.OfferNameEn);
				OnPropertyChanged("OfferNameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AsFacultyInfoId property. 
		///		NULL default=UNIV
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAsFacultyInfoIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"NULL default=UNIV"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AsFacultyInfoId
		{
			get
			{
				return this.entityData.AsFacultyInfoId; 
			}
			
			set
			{
				if (this.entityData.AsFacultyInfoId == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.AsFacultyInfoId, this.entityData.AsFacultyInfoId);
				this.entityData.AsFacultyInfoId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.AsFacultyInfoId, this.entityData.AsFacultyInfoId);
				OnPropertyChanged("AsFacultyInfoId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AsCodeDegreeClassId property. 
		///		Default=All
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAsCodeDegreeClassIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"Default=All"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AsCodeDegreeClassId
		{
			get
			{
				return this.entityData.AsCodeDegreeClassId; 
			}
			
			set
			{
				if (this.entityData.AsCodeDegreeClassId == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.AsCodeDegreeClassId, this.entityData.AsCodeDegreeClassId);
				this.entityData.AsCodeDegreeClassId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.AsCodeDegreeClassId, this.entityData.AsCodeDegreeClassId);
				OnPropertyChanged("AsCodeDegreeClassId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ReqDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsReqDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? ReqDate
		{
			get
			{
				return this.entityData.ReqDate; 
			}
			
			set
			{
				if (this.entityData.ReqDate == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.ReqDate, this.entityData.ReqDate);
				this.entityData.ReqDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.ReqDate, this.entityData.ReqDate);
				OnPropertyChanged("ReqDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IsActive property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsIsActiveNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? IsActive
		{
			get
			{
				return this.entityData.IsActive; 
			}
			
			set
			{
				if (this.entityData.IsActive == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.IsActive, this.entityData.IsActive);
				this.entityData.IsActive = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.IsActive, this.entityData.IsActive);
				OnPropertyChanged("IsActive");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaxStudCount property. 
		///		عدد الطلابXXX
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsMaxStudCountNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"عدد الطلابXXX"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? MaxStudCount
		{
			get
			{
				return this.entityData.MaxStudCount; 
			}
			
			set
			{
				if (this.entityData.MaxStudCount == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.MaxStudCount, this.entityData.MaxStudCount);
				this.entityData.MaxStudCount = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.MaxStudCount, this.entityData.MaxStudCount);
				OnPropertyChanged("MaxStudCount");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SpoPercent property. 
		///		نوع الكفالة "نسبة /قيمةXXXXX"
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSpoPercentNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"نوع الكفالة 'نسبة /قيمةXXXXX'"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SpoPercent
		{
			get
			{
				return this.entityData.SpoPercent; 
			}
			
			set
			{
				if (this.entityData.SpoPercent == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.SpoPercent, this.entityData.SpoPercent);
				this.entityData.SpoPercent = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.SpoPercent, this.entityData.SpoPercent);
				OnPropertyChanged("SpoPercent");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SpoAmount property. 
		///		نوع الكفالة "نسبة /قيمةXXXXX"
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSpoAmountNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"نوع الكفالة 'نسبة /قيمةXXXXX'"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SpoAmount
		{
			get
			{
				return this.entityData.SpoAmount; 
			}
			
			set
			{
				if (this.entityData.SpoAmount == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.SpoAmount, this.entityData.SpoAmount);
				this.entityData.SpoAmount = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.SpoAmount, this.entityData.SpoAmount);
				OnPropertyChanged("SpoAmount");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeCurrencyId property. 
		///		XXX Later
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeCurrencyIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXX Later"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeCurrencyId
		{
			get
			{
				return this.entityData.GsCodeCurrencyId; 
			}
			
			set
			{
				if (this.entityData.GsCodeCurrencyId == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.GsCodeCurrencyId, this.entityData.GsCodeCurrencyId);
				this.entityData.GsCodeCurrencyId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.GsCodeCurrencyId, this.entityData.GsCodeCurrencyId);
				OnPropertyChanged("GsCodeCurrencyId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RepeatCrsFlg property. 
		///		مقررات معادة  رسوب
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsRepeatCrsFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"مقررات معادة  رسوب"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? RepeatCrsFlg
		{
			get
			{
				return this.entityData.RepeatCrsFlg; 
			}
			
			set
			{
				if (this.entityData.RepeatCrsFlg == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.RepeatCrsFlg, this.entityData.RepeatCrsFlg);
				this.entityData.RepeatCrsFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.RepeatCrsFlg, this.entityData.RepeatCrsFlg);
				OnPropertyChanged("RepeatCrsFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RepeatCrsCount property. 
		///		عدد مرات تحمل الكفيل اعادة رسوب
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsRepeatCrsCountNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"عدد مرات تحمل الكفيل اعادة رسوب"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? RepeatCrsCount
		{
			get
			{
				return this.entityData.RepeatCrsCount; 
			}
			
			set
			{
				if (this.entityData.RepeatCrsCount == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.RepeatCrsCount, this.entityData.RepeatCrsCount);
				this.entityData.RepeatCrsCount = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.RepeatCrsCount, this.entityData.RepeatCrsCount);
				OnPropertyChanged("RepeatCrsCount");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WthdrwCrsFlg property. 
		///		مقررات اعاده انسحاب
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsWthdrwCrsFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"مقررات اعاده انسحاب"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? WthdrwCrsFlg
		{
			get
			{
				return this.entityData.WthdrwCrsFlg; 
			}
			
			set
			{
				if (this.entityData.WthdrwCrsFlg == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.WthdrwCrsFlg, this.entityData.WthdrwCrsFlg);
				this.entityData.WthdrwCrsFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.WthdrwCrsFlg, this.entityData.WthdrwCrsFlg);
				OnPropertyChanged("WthdrwCrsFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the WthdrwCrsCount property. 
		///		عدد مرات تحمل الكفيل الانسحاب
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsWthdrwCrsCountNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"عدد مرات تحمل الكفيل الانسحاب"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? WthdrwCrsCount
		{
			get
			{
				return this.entityData.WthdrwCrsCount; 
			}
			
			set
			{
				if (this.entityData.WthdrwCrsCount == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.WthdrwCrsCount, this.entityData.WthdrwCrsCount);
				this.entityData.WthdrwCrsCount = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.WthdrwCrsCount, this.entityData.WthdrwCrsCount);
				OnPropertyChanged("WthdrwCrsCount");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RepeatAbsCrsFlg property. 
		///		مقررات معادة  رسوب غياب
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsRepeatAbsCrsFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"مقررات معادة  رسوب غياب"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? RepeatAbsCrsFlg
		{
			get
			{
				return this.entityData.RepeatAbsCrsFlg; 
			}
			
			set
			{
				if (this.entityData.RepeatAbsCrsFlg == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.RepeatAbsCrsFlg, this.entityData.RepeatAbsCrsFlg);
				this.entityData.RepeatAbsCrsFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.RepeatAbsCrsFlg, this.entityData.RepeatAbsCrsFlg);
				OnPropertyChanged("RepeatAbsCrsFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the RepeatPassedCrsFlg property. 
		///		اعاده تحسين
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsRepeatPassedCrsFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"اعاده تحسين"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? RepeatPassedCrsFlg
		{
			get
			{
				return this.entityData.RepeatPassedCrsFlg; 
			}
			
			set
			{
				if (this.entityData.RepeatPassedCrsFlg == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.RepeatPassedCrsFlg, this.entityData.RepeatPassedCrsFlg);
				this.entityData.RepeatPassedCrsFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.RepeatPassedCrsFlg, this.entityData.RepeatPassedCrsFlg);
				OnPropertyChanged("RepeatPassedCrsFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ThesisFlg property. 
		///		مقرر رسالةXXX
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsThesisFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"مقرر رسالةXXX"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? ThesisFlg
		{
			get
			{
				return this.entityData.ThesisFlg; 
			}
			
			set
			{
				if (this.entityData.ThesisFlg == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.ThesisFlg, this.entityData.ThesisFlg);
				this.entityData.ThesisFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.ThesisFlg, this.entityData.ThesisFlg);
				OnPropertyChanged("ThesisFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SemTypeFlg property. 
		///		الفصول "اجبارية - الكل">0 all
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSemTypeFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"الفصول 'اجبارية - الكل'>0 all"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SemTypeFlg
		{
			get
			{
				return this.entityData.SemTypeFlg; 
			}
			
			set
			{
				if (this.entityData.SemTypeFlg == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.SemTypeFlg, this.entityData.SemTypeFlg);
				this.entityData.SemTypeFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.SemTypeFlg, this.entityData.SemTypeFlg);
				OnPropertyChanged("SemTypeFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeTypeFlg property. 
		///		ALL-STUDY FEES-OTHER  >0 all
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsFeeTypeFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"ALL-STUDY FEES-OTHER  >0 all"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? FeeTypeFlg
		{
			get
			{
				return this.entityData.FeeTypeFlg; 
			}
			
			set
			{
				if (this.entityData.FeeTypeFlg == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.FeeTypeFlg, this.entityData.FeeTypeFlg);
				this.entityData.FeeTypeFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.FeeTypeFlg, this.entityData.FeeTypeFlg);
				OnPropertyChanged("FeeTypeFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeCodeTypeId property. 
		///		نوع المصروف "الكل - دراسي – اخريXXX "
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFeeCodeTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"نوع المصروف 'الكل - دراسي – اخريXXX '"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FeeCodeTypeId
		{
			get
			{
				return this.entityData.FeeCodeTypeId; 
			}
			
			set
			{
				if (this.entityData.FeeCodeTypeId == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.FeeCodeTypeId, this.entityData.FeeCodeTypeId);
				this.entityData.FeeCodeTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.FeeCodeTypeId, this.entityData.FeeCodeTypeId);
				OnPropertyChanged("FeeCodeTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OrientSemCount property. 
		///		عدد فصول تمهيدى
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsOrientSemCountNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"عدد فصول تمهيدى"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? OrientSemCount
		{
			get
			{
				return this.entityData.OrientSemCount; 
			}
			
			set
			{
				if (this.entityData.OrientSemCount == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.OrientSemCount, this.entityData.OrientSemCount);
				this.entityData.OrientSemCount = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.OrientSemCount, this.entityData.OrientSemCount);
				OnPropertyChanged("OrientSemCount");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SemCount property. 
		///		عدد فصول الدراسية المكفولة بعد التمهيدى ان وجد
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSemCountNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"عدد فصول الدراسية المكفولة بعد التمهيدى ان وجد"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SemCount
		{
			get
			{
				return this.entityData.SemCount; 
			}
			
			set
			{
				if (this.entityData.SemCount == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.SemCount, this.entityData.SemCount);
				this.entityData.SemCount = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.SemCount, this.entityData.SemCount);
				OnPropertyChanged("SemCount");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdAcadYearFromId property. 
		///		من عام
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdAcadYearFromIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"من عام"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdAcadYearFromId
		{
			get
			{
				return this.entityData.EdAcadYearFromId; 
			}
			
			set
			{
				if (this.entityData.EdAcadYearFromId == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.EdAcadYearFromId, this.entityData.EdAcadYearFromId);
				this.entityData.EdAcadYearFromId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.EdAcadYearFromId, this.entityData.EdAcadYearFromId);
				OnPropertyChanged("EdAcadYearFromId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeSemesterFromId property. 
		///		من فصل
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeSemesterFromIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"من فصل"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCodeSemesterFromId
		{
			get
			{
				return this.entityData.EdCodeSemesterFromId; 
			}
			
			set
			{
				if (this.entityData.EdCodeSemesterFromId == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.EdCodeSemesterFromId, this.entityData.EdCodeSemesterFromId);
				this.entityData.EdCodeSemesterFromId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.EdCodeSemesterFromId, this.entityData.EdCodeSemesterFromId);
				OnPropertyChanged("EdCodeSemesterFromId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdAcadYearToId property. 
		///		الى عام
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdAcadYearToIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"الى عام"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdAcadYearToId
		{
			get
			{
				return this.entityData.EdAcadYearToId; 
			}
			
			set
			{
				if (this.entityData.EdAcadYearToId == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.EdAcadYearToId, this.entityData.EdAcadYearToId);
				this.entityData.EdAcadYearToId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.EdAcadYearToId, this.entityData.EdAcadYearToId);
				OnPropertyChanged("EdAcadYearToId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeSemesterToId property. 
		///		الى فصل
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeSemesterToIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"الى فصل"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCodeSemesterToId
		{
			get
			{
				return this.entityData.EdCodeSemesterToId; 
			}
			
			set
			{
				if (this.entityData.EdCodeSemesterToId == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.EdCodeSemesterToId, this.entityData.EdCodeSemesterToId);
				this.entityData.EdCodeSemesterToId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.EdCodeSemesterToId, this.entityData.EdCodeSemesterToId);
				OnPropertyChanged("EdCodeSemesterToId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ReturnStudBalance property. 
		///		KU BDF Sponsor 1000 ثابتة ولو فى باقى ترجع لرصيد الطالب
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsReturnStudBalanceNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"KU BDF Sponsor 1000 ثابتة ولو فى باقى ترجع لرصيد الطالب"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? ReturnStudBalance
		{
			get
			{
				return this.entityData.ReturnStudBalance; 
			}
			
			set
			{
				if (this.entityData.ReturnStudBalance == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.ReturnStudBalance, this.entityData.ReturnStudBalance);
				this.entityData.ReturnStudBalance = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.ReturnStudBalance, this.entityData.ReturnStudBalance);
				OnPropertyChanged("ReturnStudBalance");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Notes property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String Notes
		{
			get
			{
				return this.entityData.Notes; 
			}
			
			set
			{
				if (this.entityData.Notes == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.Notes, this.entityData.Notes);
				this.entityData.Notes = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.Notes, this.entityData.Notes);
				OnPropertyChanged("Notes");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(SpoSponsorOfferColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(SpoSponsorOfferColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="AsCodeDegreeClass"/>.
		/// </summary>
		/// <value>The source AsCodeDegreeClass for AsCodeDegreeClassId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AsCodeDegreeClass AsCodeDegreeClassIdSource
      	{
            get { return entityData.AsCodeDegreeClassIdSource; }
            set { entityData.AsCodeDegreeClassIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AsFacultyInfo"/>.
		/// </summary>
		/// <value>The source AsFacultyInfo for AsFacultyInfoId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AsFacultyInfo AsFacultyInfoIdSource
      	{
            get { return entityData.AsFacultyInfoIdSource; }
            set { entityData.AsFacultyInfoIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdAcadYear"/>.
		/// </summary>
		/// <value>The source EdAcadYear for EdAcadYearFromId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdAcadYear EdAcadYearFromIdSource
      	{
            get { return entityData.EdAcadYearFromIdSource; }
            set { entityData.EdAcadYearFromIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdAcadYear"/>.
		/// </summary>
		/// <value>The source EdAcadYear for EdAcadYearToId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdAcadYear EdAcadYearToIdSource
      	{
            get { return entityData.EdAcadYearToIdSource; }
            set { entityData.EdAcadYearToIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeSemester"/>.
		/// </summary>
		/// <value>The source EdCodeSemester for EdCodeSemesterToId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeSemester EdCodeSemesterToIdSource
      	{
            get { return entityData.EdCodeSemesterToIdSource; }
            set { entityData.EdCodeSemesterToIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeSemester"/>.
		/// </summary>
		/// <value>The source EdCodeSemester for EdCodeSemesterFromId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeSemester EdCodeSemesterFromIdSource
      	{
            get { return entityData.EdCodeSemesterFromIdSource; }
            set { entityData.EdCodeSemesterFromIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="FeeCodeType"/>.
		/// </summary>
		/// <value>The source FeeCodeType for FeeCodeTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeCodeType FeeCodeTypeIdSource
      	{
            get { return entityData.FeeCodeTypeIdSource; }
            set { entityData.FeeCodeTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeCurrency"/>.
		/// </summary>
		/// <value>The source GsCodeCurrency for GsCodeCurrencyId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeCurrency GsCodeCurrencyIdSource
      	{
            get { return entityData.GsCodeCurrencyIdSource; }
            set { entityData.GsCodeCurrencyIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SpoSponsor"/>.
		/// </summary>
		/// <value>The source SpoSponsor for SpoSponsorId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SpoSponsor SpoSponsorIdSource
      	{
            get { return entityData.SpoSponsorIdSource; }
            set { entityData.SpoSponsorIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of SpoSponsorStudSemester objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_STUD_SEMESTER_SPO_SPONSOR_OFFER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorStudSemester> SpoSponsorStudSemesterCollection
		{
			get { return entityData.SpoSponsorStudSemesterCollection; }
			set { entityData.SpoSponsorStudSemesterCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoOfferStudException objects
		///	which are related to this object through the relation FK_SPO_OFFER_STUD_EXCEPTION_SPO_SPONSOR_OFFER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoOfferStudException> SpoOfferStudExceptionCollection
		{
			get { return entityData.SpoOfferStudExceptionCollection; }
			set { entityData.SpoOfferStudExceptionCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoSponsorStud objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_STUD_SPO_SPONSOR_OFFER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorStud> SpoSponsorStudCollection
		{
			get { return entityData.SpoSponsorStudCollection; }
			set { entityData.SpoSponsorStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoSponsorOfferExt objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_OFFER_EXT_SPO_SPONSOR_OFFER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorOfferExt> SpoSponsorOfferExtCollection
		{
			get { return entityData.SpoSponsorOfferExtCollection; }
			set { entityData.SpoSponsorOfferExtCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoSponsorFeeItem objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_FEE_ITEM_SPO_SPONSOR_OFFER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorFeeItem> SpoSponsorFeeItemCollection
		{
			get { return entityData.SpoSponsorFeeItemCollection; }
			set { entityData.SpoSponsorFeeItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoOfferContinue objects
		///	which are related to this object through the relation FK_SPO_OFFER_CONTINUE_SPO_SPONSOR_OFFER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoOfferContinue> SpoOfferContinueCollection
		{
			get { return entityData.SpoOfferContinueCollection; }
			set { entityData.SpoOfferContinueCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("OfferNameAr", "Offer Name Ar", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("OfferNameEn", "Offer Name En", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Notes", "Notes", 150));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "SPO_SPONSOR_OFFER"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"SPO_SPONSOR_OFFER_ID", "SPO_SPONSOR_ID", "OFFER_NAME_AR", "OFFER_NAME_EN", "AS_FACULTY_INFO_ID", "AS_CODE_DEGREE_CLASS_ID", "REQ_DATE", "IS_ACTIVE", "MAX_STUD_COUNT", "SPO_PERCENT", "SPO_AMOUNT", "GS_CODE_CURRENCY_ID", "REPEAT_CRS_FLG", "REPEAT_CRS_COUNT", "WTHDRW_CRS_FLG", "WTHDRW_CRS_COUNT", "REPEAT_ABS_CRS_FLG", "REPEAT_PASSED_CRS_FLG", "THESIS_FLG", "SEM_TYPE_FLG", "FEE_TYPE_FLG", "FEE_CODE_TYPE_ID", "ORIENT_SEM_COUNT", "SEM_COUNT", "ED_ACAD_YEAR_FROM_ID", "ED_CODE_SEMESTER_FROM_ID", "ED_ACAD_YEAR_TO_ID", "ED_CODE_SEMESTER_TO_ID", "RETURN_STUD_BALANCE", "NOTES", "SE_USER_ID", "LAST_DATE"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as SpoSponsorOfferEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (SpoSponsorOffer) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<SpoSponsorOffer>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as SpoSponsorOffer);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed SpoSponsorOffer Entity 
		///</summary>
		protected virtual SpoSponsorOffer Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			SpoSponsorOffer copy = new SpoSponsorOffer();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.SpoSponsorOfferId = this.SpoSponsorOfferId;
					copy.OriginalSpoSponsorOfferId = this.OriginalSpoSponsorOfferId;
				copy.SpoSponsorId = this.SpoSponsorId;
				copy.OfferNameAr = this.OfferNameAr;
				copy.OfferNameEn = this.OfferNameEn;
				copy.AsFacultyInfoId = this.AsFacultyInfoId;
				copy.AsCodeDegreeClassId = this.AsCodeDegreeClassId;
				copy.ReqDate = this.ReqDate;
				copy.IsActive = this.IsActive;
				copy.MaxStudCount = this.MaxStudCount;
				copy.SpoPercent = this.SpoPercent;
				copy.SpoAmount = this.SpoAmount;
				copy.GsCodeCurrencyId = this.GsCodeCurrencyId;
				copy.RepeatCrsFlg = this.RepeatCrsFlg;
				copy.RepeatCrsCount = this.RepeatCrsCount;
				copy.WthdrwCrsFlg = this.WthdrwCrsFlg;
				copy.WthdrwCrsCount = this.WthdrwCrsCount;
				copy.RepeatAbsCrsFlg = this.RepeatAbsCrsFlg;
				copy.RepeatPassedCrsFlg = this.RepeatPassedCrsFlg;
				copy.ThesisFlg = this.ThesisFlg;
				copy.SemTypeFlg = this.SemTypeFlg;
				copy.FeeTypeFlg = this.FeeTypeFlg;
				copy.FeeCodeTypeId = this.FeeCodeTypeId;
				copy.OrientSemCount = this.OrientSemCount;
				copy.SemCount = this.SemCount;
				copy.EdAcadYearFromId = this.EdAcadYearFromId;
				copy.EdCodeSemesterFromId = this.EdCodeSemesterFromId;
				copy.EdAcadYearToId = this.EdAcadYearToId;
				copy.EdCodeSemesterToId = this.EdCodeSemesterToId;
				copy.ReturnStudBalance = this.ReturnStudBalance;
				copy.Notes = this.Notes;
				copy.SeUserId = this.SeUserId;
				copy.LastDate = this.LastDate;
			
			if (this.AsCodeDegreeClassIdSource != null && existingCopies.Contains(this.AsCodeDegreeClassIdSource))
				copy.AsCodeDegreeClassIdSource = existingCopies[this.AsCodeDegreeClassIdSource] as AsCodeDegreeClass;
			else
				copy.AsCodeDegreeClassIdSource = MakeCopyOf(this.AsCodeDegreeClassIdSource, existingCopies) as AsCodeDegreeClass;
			if (this.AsFacultyInfoIdSource != null && existingCopies.Contains(this.AsFacultyInfoIdSource))
				copy.AsFacultyInfoIdSource = existingCopies[this.AsFacultyInfoIdSource] as AsFacultyInfo;
			else
				copy.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource, existingCopies) as AsFacultyInfo;
			if (this.EdAcadYearFromIdSource != null && existingCopies.Contains(this.EdAcadYearFromIdSource))
				copy.EdAcadYearFromIdSource = existingCopies[this.EdAcadYearFromIdSource] as EdAcadYear;
			else
				copy.EdAcadYearFromIdSource = MakeCopyOf(this.EdAcadYearFromIdSource, existingCopies) as EdAcadYear;
			if (this.EdAcadYearToIdSource != null && existingCopies.Contains(this.EdAcadYearToIdSource))
				copy.EdAcadYearToIdSource = existingCopies[this.EdAcadYearToIdSource] as EdAcadYear;
			else
				copy.EdAcadYearToIdSource = MakeCopyOf(this.EdAcadYearToIdSource, existingCopies) as EdAcadYear;
			if (this.EdCodeSemesterToIdSource != null && existingCopies.Contains(this.EdCodeSemesterToIdSource))
				copy.EdCodeSemesterToIdSource = existingCopies[this.EdCodeSemesterToIdSource] as EdCodeSemester;
			else
				copy.EdCodeSemesterToIdSource = MakeCopyOf(this.EdCodeSemesterToIdSource, existingCopies) as EdCodeSemester;
			if (this.EdCodeSemesterFromIdSource != null && existingCopies.Contains(this.EdCodeSemesterFromIdSource))
				copy.EdCodeSemesterFromIdSource = existingCopies[this.EdCodeSemesterFromIdSource] as EdCodeSemester;
			else
				copy.EdCodeSemesterFromIdSource = MakeCopyOf(this.EdCodeSemesterFromIdSource, existingCopies) as EdCodeSemester;
			if (this.FeeCodeTypeIdSource != null && existingCopies.Contains(this.FeeCodeTypeIdSource))
				copy.FeeCodeTypeIdSource = existingCopies[this.FeeCodeTypeIdSource] as FeeCodeType;
			else
				copy.FeeCodeTypeIdSource = MakeCopyOf(this.FeeCodeTypeIdSource, existingCopies) as FeeCodeType;
			if (this.GsCodeCurrencyIdSource != null && existingCopies.Contains(this.GsCodeCurrencyIdSource))
				copy.GsCodeCurrencyIdSource = existingCopies[this.GsCodeCurrencyIdSource] as GsCodeCurrency;
			else
				copy.GsCodeCurrencyIdSource = MakeCopyOf(this.GsCodeCurrencyIdSource, existingCopies) as GsCodeCurrency;
			if (this.SpoSponsorIdSource != null && existingCopies.Contains(this.SpoSponsorIdSource))
				copy.SpoSponsorIdSource = existingCopies[this.SpoSponsorIdSource] as SpoSponsor;
			else
				copy.SpoSponsorIdSource = MakeCopyOf(this.SpoSponsorIdSource, existingCopies) as SpoSponsor;
		
			//deep copy nested objects
			copy.SpoSponsorStudSemesterCollection = (TList<SpoSponsorStudSemester>) MakeCopyOf(this.SpoSponsorStudSemesterCollection, existingCopies); 
			copy.SpoOfferStudExceptionCollection = (TList<SpoOfferStudException>) MakeCopyOf(this.SpoOfferStudExceptionCollection, existingCopies); 
			copy.SpoSponsorStudCollection = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollection, existingCopies); 
			copy.SpoSponsorOfferExtCollection = (TList<SpoSponsorOfferExt>) MakeCopyOf(this.SpoSponsorOfferExtCollection, existingCopies); 
			copy.SpoSponsorFeeItemCollection = (TList<SpoSponsorFeeItem>) MakeCopyOf(this.SpoSponsorFeeItemCollection, existingCopies); 
			copy.SpoOfferContinueCollection = (TList<SpoOfferContinue>) MakeCopyOf(this.SpoOfferContinueCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed SpoSponsorOffer Entity 
		///</summary>
		public virtual SpoSponsorOffer Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed SpoSponsorOffer Entity which is a deep copy of the current entity.
		///</summary>
		public virtual SpoSponsorOffer DeepCopy()
		{
			return EntityHelper.Clone<SpoSponsorOffer>(this as SpoSponsorOffer);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as SpoSponsorOfferEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new SpoSponsorOfferEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as SpoSponsorOfferEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(SpoSponsorOfferColumn column)
		{
			switch(column)
			{
					case SpoSponsorOfferColumn.SpoSponsorOfferId:
					return entityData.SpoSponsorOfferId != _originalData.SpoSponsorOfferId;
					case SpoSponsorOfferColumn.SpoSponsorId:
					return entityData.SpoSponsorId != _originalData.SpoSponsorId;
					case SpoSponsorOfferColumn.OfferNameAr:
					return entityData.OfferNameAr != _originalData.OfferNameAr;
					case SpoSponsorOfferColumn.OfferNameEn:
					return entityData.OfferNameEn != _originalData.OfferNameEn;
					case SpoSponsorOfferColumn.AsFacultyInfoId:
					return entityData.AsFacultyInfoId != _originalData.AsFacultyInfoId;
					case SpoSponsorOfferColumn.AsCodeDegreeClassId:
					return entityData.AsCodeDegreeClassId != _originalData.AsCodeDegreeClassId;
					case SpoSponsorOfferColumn.ReqDate:
					return entityData.ReqDate != _originalData.ReqDate;
					case SpoSponsorOfferColumn.IsActive:
					return entityData.IsActive != _originalData.IsActive;
					case SpoSponsorOfferColumn.MaxStudCount:
					return entityData.MaxStudCount != _originalData.MaxStudCount;
					case SpoSponsorOfferColumn.SpoPercent:
					return entityData.SpoPercent != _originalData.SpoPercent;
					case SpoSponsorOfferColumn.SpoAmount:
					return entityData.SpoAmount != _originalData.SpoAmount;
					case SpoSponsorOfferColumn.GsCodeCurrencyId:
					return entityData.GsCodeCurrencyId != _originalData.GsCodeCurrencyId;
					case SpoSponsorOfferColumn.RepeatCrsFlg:
					return entityData.RepeatCrsFlg != _originalData.RepeatCrsFlg;
					case SpoSponsorOfferColumn.RepeatCrsCount:
					return entityData.RepeatCrsCount != _originalData.RepeatCrsCount;
					case SpoSponsorOfferColumn.WthdrwCrsFlg:
					return entityData.WthdrwCrsFlg != _originalData.WthdrwCrsFlg;
					case SpoSponsorOfferColumn.WthdrwCrsCount:
					return entityData.WthdrwCrsCount != _originalData.WthdrwCrsCount;
					case SpoSponsorOfferColumn.RepeatAbsCrsFlg:
					return entityData.RepeatAbsCrsFlg != _originalData.RepeatAbsCrsFlg;
					case SpoSponsorOfferColumn.RepeatPassedCrsFlg:
					return entityData.RepeatPassedCrsFlg != _originalData.RepeatPassedCrsFlg;
					case SpoSponsorOfferColumn.ThesisFlg:
					return entityData.ThesisFlg != _originalData.ThesisFlg;
					case SpoSponsorOfferColumn.SemTypeFlg:
					return entityData.SemTypeFlg != _originalData.SemTypeFlg;
					case SpoSponsorOfferColumn.FeeTypeFlg:
					return entityData.FeeTypeFlg != _originalData.FeeTypeFlg;
					case SpoSponsorOfferColumn.FeeCodeTypeId:
					return entityData.FeeCodeTypeId != _originalData.FeeCodeTypeId;
					case SpoSponsorOfferColumn.OrientSemCount:
					return entityData.OrientSemCount != _originalData.OrientSemCount;
					case SpoSponsorOfferColumn.SemCount:
					return entityData.SemCount != _originalData.SemCount;
					case SpoSponsorOfferColumn.EdAcadYearFromId:
					return entityData.EdAcadYearFromId != _originalData.EdAcadYearFromId;
					case SpoSponsorOfferColumn.EdCodeSemesterFromId:
					return entityData.EdCodeSemesterFromId != _originalData.EdCodeSemesterFromId;
					case SpoSponsorOfferColumn.EdAcadYearToId:
					return entityData.EdAcadYearToId != _originalData.EdAcadYearToId;
					case SpoSponsorOfferColumn.EdCodeSemesterToId:
					return entityData.EdCodeSemesterToId != _originalData.EdCodeSemesterToId;
					case SpoSponsorOfferColumn.ReturnStudBalance:
					return entityData.ReturnStudBalance != _originalData.ReturnStudBalance;
					case SpoSponsorOfferColumn.Notes:
					return entityData.Notes != _originalData.Notes;
					case SpoSponsorOfferColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
					case SpoSponsorOfferColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< SpoSponsorOfferColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.SpoSponsorOfferId != _originalData.SpoSponsorOfferId;
			result = result || entityData.SpoSponsorId != _originalData.SpoSponsorId;
			result = result || entityData.OfferNameAr != _originalData.OfferNameAr;
			result = result || entityData.OfferNameEn != _originalData.OfferNameEn;
			result = result || entityData.AsFacultyInfoId != _originalData.AsFacultyInfoId;
			result = result || entityData.AsCodeDegreeClassId != _originalData.AsCodeDegreeClassId;
			result = result || entityData.ReqDate != _originalData.ReqDate;
			result = result || entityData.IsActive != _originalData.IsActive;
			result = result || entityData.MaxStudCount != _originalData.MaxStudCount;
			result = result || entityData.SpoPercent != _originalData.SpoPercent;
			result = result || entityData.SpoAmount != _originalData.SpoAmount;
			result = result || entityData.GsCodeCurrencyId != _originalData.GsCodeCurrencyId;
			result = result || entityData.RepeatCrsFlg != _originalData.RepeatCrsFlg;
			result = result || entityData.RepeatCrsCount != _originalData.RepeatCrsCount;
			result = result || entityData.WthdrwCrsFlg != _originalData.WthdrwCrsFlg;
			result = result || entityData.WthdrwCrsCount != _originalData.WthdrwCrsCount;
			result = result || entityData.RepeatAbsCrsFlg != _originalData.RepeatAbsCrsFlg;
			result = result || entityData.RepeatPassedCrsFlg != _originalData.RepeatPassedCrsFlg;
			result = result || entityData.ThesisFlg != _originalData.ThesisFlg;
			result = result || entityData.SemTypeFlg != _originalData.SemTypeFlg;
			result = result || entityData.FeeTypeFlg != _originalData.FeeTypeFlg;
			result = result || entityData.FeeCodeTypeId != _originalData.FeeCodeTypeId;
			result = result || entityData.OrientSemCount != _originalData.OrientSemCount;
			result = result || entityData.SemCount != _originalData.SemCount;
			result = result || entityData.EdAcadYearFromId != _originalData.EdAcadYearFromId;
			result = result || entityData.EdCodeSemesterFromId != _originalData.EdCodeSemesterFromId;
			result = result || entityData.EdAcadYearToId != _originalData.EdAcadYearToId;
			result = result || entityData.EdCodeSemesterToId != _originalData.EdCodeSemesterToId;
			result = result || entityData.ReturnStudBalance != _originalData.ReturnStudBalance;
			result = result || entityData.Notes != _originalData.Notes;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			result = result || entityData.LastDate != _originalData.LastDate;
			return result;
		}	
		
		///<summary>
		///  Returns a SpoSponsorOffer Entity with the original data.
		///</summary>
		public SpoSponsorOffer GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateSpoSponsorOffer(
				_originalData.SpoSponsorOfferId,
				_originalData.SpoSponsorId,
				_originalData.OfferNameAr,
				_originalData.OfferNameEn,
				_originalData.AsFacultyInfoId,
				_originalData.AsCodeDegreeClassId,
				_originalData.ReqDate,
				_originalData.IsActive,
				_originalData.MaxStudCount,
				_originalData.SpoPercent,
				_originalData.SpoAmount,
				_originalData.GsCodeCurrencyId,
				_originalData.RepeatCrsFlg,
				_originalData.RepeatCrsCount,
				_originalData.WthdrwCrsFlg,
				_originalData.WthdrwCrsCount,
				_originalData.RepeatAbsCrsFlg,
				_originalData.RepeatPassedCrsFlg,
				_originalData.ThesisFlg,
				_originalData.SemTypeFlg,
				_originalData.FeeTypeFlg,
				_originalData.FeeCodeTypeId,
				_originalData.OrientSemCount,
				_originalData.SemCount,
				_originalData.EdAcadYearFromId,
				_originalData.EdCodeSemesterFromId,
				_originalData.EdAcadYearToId,
				_originalData.EdCodeSemesterToId,
				_originalData.ReturnStudBalance,
				_originalData.Notes,
				_originalData.SeUserId,
				_originalData.LastDate
				);
				
			return (SpoSponsorOffer)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="SpoSponsorOfferBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is SpoSponsorOfferBase)
				return ValueEquals(this, (SpoSponsorOfferBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="SpoSponsorOfferBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.SpoSponsorOfferId.GetHashCode() ^ 
					this.SpoSponsorId.GetHashCode() ^ 
					((this.OfferNameAr == null) ? string.Empty : this.OfferNameAr.ToString()).GetHashCode() ^ 
					((this.OfferNameEn == null) ? string.Empty : this.OfferNameEn.ToString()).GetHashCode() ^ 
					((this.AsFacultyInfoId == null) ? string.Empty : this.AsFacultyInfoId.ToString()).GetHashCode() ^ 
					((this.AsCodeDegreeClassId == null) ? string.Empty : this.AsCodeDegreeClassId.ToString()).GetHashCode() ^ 
					((this.ReqDate == null) ? string.Empty : this.ReqDate.ToString()).GetHashCode() ^ 
					((this.IsActive == null) ? string.Empty : this.IsActive.ToString()).GetHashCode() ^ 
					((this.MaxStudCount == null) ? string.Empty : this.MaxStudCount.ToString()).GetHashCode() ^ 
					((this.SpoPercent == null) ? string.Empty : this.SpoPercent.ToString()).GetHashCode() ^ 
					((this.SpoAmount == null) ? string.Empty : this.SpoAmount.ToString()).GetHashCode() ^ 
					((this.GsCodeCurrencyId == null) ? string.Empty : this.GsCodeCurrencyId.ToString()).GetHashCode() ^ 
					((this.RepeatCrsFlg == null) ? string.Empty : this.RepeatCrsFlg.ToString()).GetHashCode() ^ 
					((this.RepeatCrsCount == null) ? string.Empty : this.RepeatCrsCount.ToString()).GetHashCode() ^ 
					((this.WthdrwCrsFlg == null) ? string.Empty : this.WthdrwCrsFlg.ToString()).GetHashCode() ^ 
					((this.WthdrwCrsCount == null) ? string.Empty : this.WthdrwCrsCount.ToString()).GetHashCode() ^ 
					((this.RepeatAbsCrsFlg == null) ? string.Empty : this.RepeatAbsCrsFlg.ToString()).GetHashCode() ^ 
					((this.RepeatPassedCrsFlg == null) ? string.Empty : this.RepeatPassedCrsFlg.ToString()).GetHashCode() ^ 
					((this.ThesisFlg == null) ? string.Empty : this.ThesisFlg.ToString()).GetHashCode() ^ 
					((this.SemTypeFlg == null) ? string.Empty : this.SemTypeFlg.ToString()).GetHashCode() ^ 
					((this.FeeTypeFlg == null) ? string.Empty : this.FeeTypeFlg.ToString()).GetHashCode() ^ 
					((this.FeeCodeTypeId == null) ? string.Empty : this.FeeCodeTypeId.ToString()).GetHashCode() ^ 
					((this.OrientSemCount == null) ? string.Empty : this.OrientSemCount.ToString()).GetHashCode() ^ 
					((this.SemCount == null) ? string.Empty : this.SemCount.ToString()).GetHashCode() ^ 
					((this.EdAcadYearFromId == null) ? string.Empty : this.EdAcadYearFromId.ToString()).GetHashCode() ^ 
					((this.EdCodeSemesterFromId == null) ? string.Empty : this.EdCodeSemesterFromId.ToString()).GetHashCode() ^ 
					((this.EdAcadYearToId == null) ? string.Empty : this.EdAcadYearToId.ToString()).GetHashCode() ^ 
					((this.EdCodeSemesterToId == null) ? string.Empty : this.EdCodeSemesterToId.ToString()).GetHashCode() ^ 
					((this.ReturnStudBalance == null) ? string.Empty : this.ReturnStudBalance.ToString()).GetHashCode() ^ 
					((this.Notes == null) ? string.Empty : this.Notes.ToString()).GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="SpoSponsorOfferBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(SpoSponsorOfferBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="SpoSponsorOfferBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="SpoSponsorOfferBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="SpoSponsorOfferBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(SpoSponsorOfferBase Object1, SpoSponsorOfferBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.SpoSponsorOfferId != Object2.SpoSponsorOfferId)
				equal = false;
			if (Object1.SpoSponsorId != Object2.SpoSponsorId)
				equal = false;
			if ( Object1.OfferNameAr != null && Object2.OfferNameAr != null )
			{
				if (Object1.OfferNameAr != Object2.OfferNameAr)
					equal = false;
			}
			else if (Object1.OfferNameAr == null ^ Object2.OfferNameAr == null )
			{
				equal = false;
			}
			if ( Object1.OfferNameEn != null && Object2.OfferNameEn != null )
			{
				if (Object1.OfferNameEn != Object2.OfferNameEn)
					equal = false;
			}
			else if (Object1.OfferNameEn == null ^ Object2.OfferNameEn == null )
			{
				equal = false;
			}
			if ( Object1.AsFacultyInfoId != null && Object2.AsFacultyInfoId != null )
			{
				if (Object1.AsFacultyInfoId != Object2.AsFacultyInfoId)
					equal = false;
			}
			else if (Object1.AsFacultyInfoId == null ^ Object2.AsFacultyInfoId == null )
			{
				equal = false;
			}
			if ( Object1.AsCodeDegreeClassId != null && Object2.AsCodeDegreeClassId != null )
			{
				if (Object1.AsCodeDegreeClassId != Object2.AsCodeDegreeClassId)
					equal = false;
			}
			else if (Object1.AsCodeDegreeClassId == null ^ Object2.AsCodeDegreeClassId == null )
			{
				equal = false;
			}
			if ( Object1.ReqDate != null && Object2.ReqDate != null )
			{
				if (Object1.ReqDate != Object2.ReqDate)
					equal = false;
			}
			else if (Object1.ReqDate == null ^ Object2.ReqDate == null )
			{
				equal = false;
			}
			if ( Object1.IsActive != null && Object2.IsActive != null )
			{
				if (Object1.IsActive != Object2.IsActive)
					equal = false;
			}
			else if (Object1.IsActive == null ^ Object2.IsActive == null )
			{
				equal = false;
			}
			if ( Object1.MaxStudCount != null && Object2.MaxStudCount != null )
			{
				if (Object1.MaxStudCount != Object2.MaxStudCount)
					equal = false;
			}
			else if (Object1.MaxStudCount == null ^ Object2.MaxStudCount == null )
			{
				equal = false;
			}
			if ( Object1.SpoPercent != null && Object2.SpoPercent != null )
			{
				if (Object1.SpoPercent != Object2.SpoPercent)
					equal = false;
			}
			else if (Object1.SpoPercent == null ^ Object2.SpoPercent == null )
			{
				equal = false;
			}
			if ( Object1.SpoAmount != null && Object2.SpoAmount != null )
			{
				if (Object1.SpoAmount != Object2.SpoAmount)
					equal = false;
			}
			else if (Object1.SpoAmount == null ^ Object2.SpoAmount == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeCurrencyId != null && Object2.GsCodeCurrencyId != null )
			{
				if (Object1.GsCodeCurrencyId != Object2.GsCodeCurrencyId)
					equal = false;
			}
			else if (Object1.GsCodeCurrencyId == null ^ Object2.GsCodeCurrencyId == null )
			{
				equal = false;
			}
			if ( Object1.RepeatCrsFlg != null && Object2.RepeatCrsFlg != null )
			{
				if (Object1.RepeatCrsFlg != Object2.RepeatCrsFlg)
					equal = false;
			}
			else if (Object1.RepeatCrsFlg == null ^ Object2.RepeatCrsFlg == null )
			{
				equal = false;
			}
			if ( Object1.RepeatCrsCount != null && Object2.RepeatCrsCount != null )
			{
				if (Object1.RepeatCrsCount != Object2.RepeatCrsCount)
					equal = false;
			}
			else if (Object1.RepeatCrsCount == null ^ Object2.RepeatCrsCount == null )
			{
				equal = false;
			}
			if ( Object1.WthdrwCrsFlg != null && Object2.WthdrwCrsFlg != null )
			{
				if (Object1.WthdrwCrsFlg != Object2.WthdrwCrsFlg)
					equal = false;
			}
			else if (Object1.WthdrwCrsFlg == null ^ Object2.WthdrwCrsFlg == null )
			{
				equal = false;
			}
			if ( Object1.WthdrwCrsCount != null && Object2.WthdrwCrsCount != null )
			{
				if (Object1.WthdrwCrsCount != Object2.WthdrwCrsCount)
					equal = false;
			}
			else if (Object1.WthdrwCrsCount == null ^ Object2.WthdrwCrsCount == null )
			{
				equal = false;
			}
			if ( Object1.RepeatAbsCrsFlg != null && Object2.RepeatAbsCrsFlg != null )
			{
				if (Object1.RepeatAbsCrsFlg != Object2.RepeatAbsCrsFlg)
					equal = false;
			}
			else if (Object1.RepeatAbsCrsFlg == null ^ Object2.RepeatAbsCrsFlg == null )
			{
				equal = false;
			}
			if ( Object1.RepeatPassedCrsFlg != null && Object2.RepeatPassedCrsFlg != null )
			{
				if (Object1.RepeatPassedCrsFlg != Object2.RepeatPassedCrsFlg)
					equal = false;
			}
			else if (Object1.RepeatPassedCrsFlg == null ^ Object2.RepeatPassedCrsFlg == null )
			{
				equal = false;
			}
			if ( Object1.ThesisFlg != null && Object2.ThesisFlg != null )
			{
				if (Object1.ThesisFlg != Object2.ThesisFlg)
					equal = false;
			}
			else if (Object1.ThesisFlg == null ^ Object2.ThesisFlg == null )
			{
				equal = false;
			}
			if ( Object1.SemTypeFlg != null && Object2.SemTypeFlg != null )
			{
				if (Object1.SemTypeFlg != Object2.SemTypeFlg)
					equal = false;
			}
			else if (Object1.SemTypeFlg == null ^ Object2.SemTypeFlg == null )
			{
				equal = false;
			}
			if ( Object1.FeeTypeFlg != null && Object2.FeeTypeFlg != null )
			{
				if (Object1.FeeTypeFlg != Object2.FeeTypeFlg)
					equal = false;
			}
			else if (Object1.FeeTypeFlg == null ^ Object2.FeeTypeFlg == null )
			{
				equal = false;
			}
			if ( Object1.FeeCodeTypeId != null && Object2.FeeCodeTypeId != null )
			{
				if (Object1.FeeCodeTypeId != Object2.FeeCodeTypeId)
					equal = false;
			}
			else if (Object1.FeeCodeTypeId == null ^ Object2.FeeCodeTypeId == null )
			{
				equal = false;
			}
			if ( Object1.OrientSemCount != null && Object2.OrientSemCount != null )
			{
				if (Object1.OrientSemCount != Object2.OrientSemCount)
					equal = false;
			}
			else if (Object1.OrientSemCount == null ^ Object2.OrientSemCount == null )
			{
				equal = false;
			}
			if ( Object1.SemCount != null && Object2.SemCount != null )
			{
				if (Object1.SemCount != Object2.SemCount)
					equal = false;
			}
			else if (Object1.SemCount == null ^ Object2.SemCount == null )
			{
				equal = false;
			}
			if ( Object1.EdAcadYearFromId != null && Object2.EdAcadYearFromId != null )
			{
				if (Object1.EdAcadYearFromId != Object2.EdAcadYearFromId)
					equal = false;
			}
			else if (Object1.EdAcadYearFromId == null ^ Object2.EdAcadYearFromId == null )
			{
				equal = false;
			}
			if ( Object1.EdCodeSemesterFromId != null && Object2.EdCodeSemesterFromId != null )
			{
				if (Object1.EdCodeSemesterFromId != Object2.EdCodeSemesterFromId)
					equal = false;
			}
			else if (Object1.EdCodeSemesterFromId == null ^ Object2.EdCodeSemesterFromId == null )
			{
				equal = false;
			}
			if ( Object1.EdAcadYearToId != null && Object2.EdAcadYearToId != null )
			{
				if (Object1.EdAcadYearToId != Object2.EdAcadYearToId)
					equal = false;
			}
			else if (Object1.EdAcadYearToId == null ^ Object2.EdAcadYearToId == null )
			{
				equal = false;
			}
			if ( Object1.EdCodeSemesterToId != null && Object2.EdCodeSemesterToId != null )
			{
				if (Object1.EdCodeSemesterToId != Object2.EdCodeSemesterToId)
					equal = false;
			}
			else if (Object1.EdCodeSemesterToId == null ^ Object2.EdCodeSemesterToId == null )
			{
				equal = false;
			}
			if ( Object1.ReturnStudBalance != null && Object2.ReturnStudBalance != null )
			{
				if (Object1.ReturnStudBalance != Object2.ReturnStudBalance)
					equal = false;
			}
			else if (Object1.ReturnStudBalance == null ^ Object2.ReturnStudBalance == null )
			{
				equal = false;
			}
			if ( Object1.Notes != null && Object2.Notes != null )
			{
				if (Object1.Notes != Object2.Notes)
					equal = false;
			}
			else if (Object1.Notes == null ^ Object2.Notes == null )
			{
				equal = false;
			}
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((SpoSponsorOfferBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static SpoSponsorOfferComparer GetComparer()
        {
            return new SpoSponsorOfferComparer();
        }
        */

        // Comparer delegates back to SpoSponsorOffer
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(SpoSponsorOffer rhs, SpoSponsorOfferColumn which)
        {
            switch (which)
            {
            	
            	
            	case SpoSponsorOfferColumn.SpoSponsorOfferId:
            		return this.SpoSponsorOfferId.CompareTo(rhs.SpoSponsorOfferId);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.SpoSponsorId:
            		return this.SpoSponsorId.CompareTo(rhs.SpoSponsorId);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.OfferNameAr:
            		return this.OfferNameAr.CompareTo(rhs.OfferNameAr);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.OfferNameEn:
            		return this.OfferNameEn.CompareTo(rhs.OfferNameEn);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.AsFacultyInfoId:
            		return this.AsFacultyInfoId.Value.CompareTo(rhs.AsFacultyInfoId.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.AsCodeDegreeClassId:
            		return this.AsCodeDegreeClassId.Value.CompareTo(rhs.AsCodeDegreeClassId.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.ReqDate:
            		return this.ReqDate.Value.CompareTo(rhs.ReqDate.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.IsActive:
            		return this.IsActive.Value.CompareTo(rhs.IsActive.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.MaxStudCount:
            		return this.MaxStudCount.Value.CompareTo(rhs.MaxStudCount.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.SpoPercent:
            		return this.SpoPercent.Value.CompareTo(rhs.SpoPercent.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.SpoAmount:
            		return this.SpoAmount.Value.CompareTo(rhs.SpoAmount.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.GsCodeCurrencyId:
            		return this.GsCodeCurrencyId.Value.CompareTo(rhs.GsCodeCurrencyId.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.RepeatCrsFlg:
            		return this.RepeatCrsFlg.Value.CompareTo(rhs.RepeatCrsFlg.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.RepeatCrsCount:
            		return this.RepeatCrsCount.Value.CompareTo(rhs.RepeatCrsCount.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.WthdrwCrsFlg:
            		return this.WthdrwCrsFlg.Value.CompareTo(rhs.WthdrwCrsFlg.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.WthdrwCrsCount:
            		return this.WthdrwCrsCount.Value.CompareTo(rhs.WthdrwCrsCount.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.RepeatAbsCrsFlg:
            		return this.RepeatAbsCrsFlg.Value.CompareTo(rhs.RepeatAbsCrsFlg.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.RepeatPassedCrsFlg:
            		return this.RepeatPassedCrsFlg.Value.CompareTo(rhs.RepeatPassedCrsFlg.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.ThesisFlg:
            		return this.ThesisFlg.Value.CompareTo(rhs.ThesisFlg.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.SemTypeFlg:
            		return this.SemTypeFlg.Value.CompareTo(rhs.SemTypeFlg.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.FeeTypeFlg:
            		return this.FeeTypeFlg.Value.CompareTo(rhs.FeeTypeFlg.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.FeeCodeTypeId:
            		return this.FeeCodeTypeId.Value.CompareTo(rhs.FeeCodeTypeId.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.OrientSemCount:
            		return this.OrientSemCount.Value.CompareTo(rhs.OrientSemCount.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.SemCount:
            		return this.SemCount.Value.CompareTo(rhs.SemCount.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.EdAcadYearFromId:
            		return this.EdAcadYearFromId.Value.CompareTo(rhs.EdAcadYearFromId.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.EdCodeSemesterFromId:
            		return this.EdCodeSemesterFromId.Value.CompareTo(rhs.EdCodeSemesterFromId.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.EdAcadYearToId:
            		return this.EdAcadYearToId.Value.CompareTo(rhs.EdAcadYearToId.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.EdCodeSemesterToId:
            		return this.EdCodeSemesterToId.Value.CompareTo(rhs.EdCodeSemesterToId.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.ReturnStudBalance:
            		return this.ReturnStudBalance.Value.CompareTo(rhs.ReturnStudBalance.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.Notes:
            		return this.Notes.CompareTo(rhs.Notes);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            	
            	
            	case SpoSponsorOfferColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<SpoSponsorOfferKey> Members
		
		// member variable for the EntityId property
		private SpoSponsorOfferKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual SpoSponsorOfferKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new SpoSponsorOfferKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("SpoSponsorOffer")
					.Append("|").Append( this.SpoSponsorOfferId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{33}{32}- SpoSponsorOfferId: {0}{32}- SpoSponsorId: {1}{32}- OfferNameAr: {2}{32}- OfferNameEn: {3}{32}- AsFacultyInfoId: {4}{32}- AsCodeDegreeClassId: {5}{32}- ReqDate: {6}{32}- IsActive: {7}{32}- MaxStudCount: {8}{32}- SpoPercent: {9}{32}- SpoAmount: {10}{32}- GsCodeCurrencyId: {11}{32}- RepeatCrsFlg: {12}{32}- RepeatCrsCount: {13}{32}- WthdrwCrsFlg: {14}{32}- WthdrwCrsCount: {15}{32}- RepeatAbsCrsFlg: {16}{32}- RepeatPassedCrsFlg: {17}{32}- ThesisFlg: {18}{32}- SemTypeFlg: {19}{32}- FeeTypeFlg: {20}{32}- FeeCodeTypeId: {21}{32}- OrientSemCount: {22}{32}- SemCount: {23}{32}- EdAcadYearFromId: {24}{32}- EdCodeSemesterFromId: {25}{32}- EdAcadYearToId: {26}{32}- EdCodeSemesterToId: {27}{32}- ReturnStudBalance: {28}{32}- Notes: {29}{32}- SeUserId: {30}{32}- LastDate: {31}{32}{34}", 
				this.SpoSponsorOfferId,
				this.SpoSponsorId,
				(this.OfferNameAr == null) ? string.Empty : this.OfferNameAr.ToString(),
				(this.OfferNameEn == null) ? string.Empty : this.OfferNameEn.ToString(),
				(this.AsFacultyInfoId == null) ? string.Empty : this.AsFacultyInfoId.ToString(),
				(this.AsCodeDegreeClassId == null) ? string.Empty : this.AsCodeDegreeClassId.ToString(),
				(this.ReqDate == null) ? string.Empty : this.ReqDate.ToString(),
				(this.IsActive == null) ? string.Empty : this.IsActive.ToString(),
				(this.MaxStudCount == null) ? string.Empty : this.MaxStudCount.ToString(),
				(this.SpoPercent == null) ? string.Empty : this.SpoPercent.ToString(),
				(this.SpoAmount == null) ? string.Empty : this.SpoAmount.ToString(),
				(this.GsCodeCurrencyId == null) ? string.Empty : this.GsCodeCurrencyId.ToString(),
				(this.RepeatCrsFlg == null) ? string.Empty : this.RepeatCrsFlg.ToString(),
				(this.RepeatCrsCount == null) ? string.Empty : this.RepeatCrsCount.ToString(),
				(this.WthdrwCrsFlg == null) ? string.Empty : this.WthdrwCrsFlg.ToString(),
				(this.WthdrwCrsCount == null) ? string.Empty : this.WthdrwCrsCount.ToString(),
				(this.RepeatAbsCrsFlg == null) ? string.Empty : this.RepeatAbsCrsFlg.ToString(),
				(this.RepeatPassedCrsFlg == null) ? string.Empty : this.RepeatPassedCrsFlg.ToString(),
				(this.ThesisFlg == null) ? string.Empty : this.ThesisFlg.ToString(),
				(this.SemTypeFlg == null) ? string.Empty : this.SemTypeFlg.ToString(),
				(this.FeeTypeFlg == null) ? string.Empty : this.FeeTypeFlg.ToString(),
				(this.FeeCodeTypeId == null) ? string.Empty : this.FeeCodeTypeId.ToString(),
				(this.OrientSemCount == null) ? string.Empty : this.OrientSemCount.ToString(),
				(this.SemCount == null) ? string.Empty : this.SemCount.ToString(),
				(this.EdAcadYearFromId == null) ? string.Empty : this.EdAcadYearFromId.ToString(),
				(this.EdCodeSemesterFromId == null) ? string.Empty : this.EdCodeSemesterFromId.ToString(),
				(this.EdAcadYearToId == null) ? string.Empty : this.EdAcadYearToId.ToString(),
				(this.EdCodeSemesterToId == null) ? string.Empty : this.EdCodeSemesterToId.ToString(),
				(this.ReturnStudBalance == null) ? string.Empty : this.ReturnStudBalance.ToString(),
				(this.Notes == null) ? string.Empty : this.Notes.ToString(),
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'SPO_SPONSOR_OFFER' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class SpoSponsorOfferEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// SPO_SPONSOR_OFFER_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "SPO_SPONSOR_OFFER"</remarks>
		public System.Decimal SpoSponsorOfferId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalSpoSponsorOfferId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// SPO_SPONSOR_ID : 
		/// </summary>
		public System.Decimal		  SpoSponsorId = 0.0m;
		
		/// <summary>
		/// OFFER_NAME_AR : 
		/// </summary>
		public System.String		  OfferNameAr = null;
		
		/// <summary>
		/// OFFER_NAME_EN : 
		/// </summary>
		public System.String		  OfferNameEn = null;
		
		/// <summary>
		/// AS_FACULTY_INFO_ID : NULL default=UNIV
		/// </summary>
		public System.Decimal?		  AsFacultyInfoId = null;
		
		/// <summary>
		/// AS_CODE_DEGREE_CLASS_ID : Default=All
		/// </summary>
		public System.Decimal?		  AsCodeDegreeClassId = null;
		
		/// <summary>
		/// REQ_DATE : 
		/// </summary>
		public System.DateTime?		  ReqDate = null;
		
		/// <summary>
		/// IS_ACTIVE : 
		/// </summary>
		public System.Boolean?		  IsActive = null;
		
		/// <summary>
		/// MAX_STUD_COUNT : عدد الطلابXXX
		/// </summary>
		public System.Int32?		  MaxStudCount = null;
		
		/// <summary>
		/// SPO_PERCENT : نوع الكفالة "نسبة /قيمةXXXXX"
		/// </summary>
		public System.Decimal?		  SpoPercent = null;
		
		/// <summary>
		/// SPO_AMOUNT : نوع الكفالة "نسبة /قيمةXXXXX"
		/// </summary>
		public System.Decimal?		  SpoAmount = null;
		
		/// <summary>
		/// GS_CODE_CURRENCY_ID : XXX Later
		/// </summary>
		public System.Decimal?		  GsCodeCurrencyId = null;
		
		/// <summary>
		/// REPEAT_CRS_FLG : مقررات معادة  رسوب
		/// </summary>
		public System.Boolean?		  RepeatCrsFlg = null;
		
		/// <summary>
		/// REPEAT_CRS_COUNT : عدد مرات تحمل الكفيل اعادة رسوب
		/// </summary>
		public System.Int32?		  RepeatCrsCount = null;
		
		/// <summary>
		/// WTHDRW_CRS_FLG : مقررات اعاده انسحاب
		/// </summary>
		public System.Boolean?		  WthdrwCrsFlg = null;
		
		/// <summary>
		/// WTHDRW_CRS_COUNT : عدد مرات تحمل الكفيل الانسحاب
		/// </summary>
		public System.Int32?		  WthdrwCrsCount = null;
		
		/// <summary>
		/// REPEAT_ABS_CRS_FLG : مقررات معادة  رسوب غياب
		/// </summary>
		public System.Boolean?		  RepeatAbsCrsFlg = null;
		
		/// <summary>
		/// REPEAT_PASSED_CRS_FLG : اعاده تحسين
		/// </summary>
		public System.Boolean?		  RepeatPassedCrsFlg = null;
		
		/// <summary>
		/// THESIS_FLG : مقرر رسالةXXX
		/// </summary>
		public System.Boolean?		  ThesisFlg = null;
		
		/// <summary>
		/// SEM_TYPE_FLG : الفصول "اجبارية - الكل">0 all
		/// </summary>
		public System.Decimal?		  SemTypeFlg = null;
		
		/// <summary>
		/// FEE_TYPE_FLG : ALL-STUDY FEES-OTHER  >0 all
		/// </summary>
		public System.Int32?		  FeeTypeFlg = null;
		
		/// <summary>
		/// FEE_CODE_TYPE_ID : نوع المصروف "الكل - دراسي – اخريXXX "
		/// </summary>
		public System.Decimal?		  FeeCodeTypeId = null;
		
		/// <summary>
		/// ORIENT_SEM_COUNT : عدد فصول تمهيدى
		/// </summary>
		public System.Decimal?		  OrientSemCount = null;
		
		/// <summary>
		/// SEM_COUNT : عدد فصول الدراسية المكفولة بعد التمهيدى ان وجد
		/// </summary>
		public System.Decimal?		  SemCount = null;
		
		/// <summary>
		/// ED_ACAD_YEAR_FROM_ID : من عام
		/// </summary>
		public System.Decimal?		  EdAcadYearFromId = null;
		
		/// <summary>
		/// ED_CODE_SEMESTER_FROM_ID : من فصل
		/// </summary>
		public System.Decimal?		  EdCodeSemesterFromId = null;
		
		/// <summary>
		/// ED_ACAD_YEAR_TO_ID : الى عام
		/// </summary>
		public System.Decimal?		  EdAcadYearToId = null;
		
		/// <summary>
		/// ED_CODE_SEMESTER_TO_ID : الى فصل
		/// </summary>
		public System.Decimal?		  EdCodeSemesterToId = null;
		
		/// <summary>
		/// RETURN_STUD_BALANCE : KU BDF Sponsor 1000 ثابتة ولو فى باقى ترجع لرصيد الطالب
		/// </summary>
		public System.Boolean?		  ReturnStudBalance = null;
		
		/// <summary>
		/// NOTES : 
		/// </summary>
		public System.String		  Notes = null;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private AsCodeDegreeClass _asCodeDegreeClassIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AsCodeDegreeClass"/>.
		/// </summary>
		/// <value>The source AsCodeDegreeClass for AsCodeDegreeClassId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AsCodeDegreeClass AsCodeDegreeClassIdSource
      	{
            get { return this._asCodeDegreeClassIdSource; }
            set { this._asCodeDegreeClassIdSource = value; }
      	}
		private AsFacultyInfo _asFacultyInfoIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AsFacultyInfo"/>.
		/// </summary>
		/// <value>The source AsFacultyInfo for AsFacultyInfoId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AsFacultyInfo AsFacultyInfoIdSource
      	{
            get { return this._asFacultyInfoIdSource; }
            set { this._asFacultyInfoIdSource = value; }
      	}
		private EdAcadYear _edAcadYearFromIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdAcadYear"/>.
		/// </summary>
		/// <value>The source EdAcadYear for EdAcadYearFromId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdAcadYear EdAcadYearFromIdSource
      	{
            get { return this._edAcadYearFromIdSource; }
            set { this._edAcadYearFromIdSource = value; }
      	}
		private EdAcadYear _edAcadYearToIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdAcadYear"/>.
		/// </summary>
		/// <value>The source EdAcadYear for EdAcadYearToId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdAcadYear EdAcadYearToIdSource
      	{
            get { return this._edAcadYearToIdSource; }
            set { this._edAcadYearToIdSource = value; }
      	}
		private EdCodeSemester _edCodeSemesterToIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeSemester"/>.
		/// </summary>
		/// <value>The source EdCodeSemester for EdCodeSemesterToId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeSemester EdCodeSemesterToIdSource
      	{
            get { return this._edCodeSemesterToIdSource; }
            set { this._edCodeSemesterToIdSource = value; }
      	}
		private EdCodeSemester _edCodeSemesterFromIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeSemester"/>.
		/// </summary>
		/// <value>The source EdCodeSemester for EdCodeSemesterFromId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeSemester EdCodeSemesterFromIdSource
      	{
            get { return this._edCodeSemesterFromIdSource; }
            set { this._edCodeSemesterFromIdSource = value; }
      	}
		private FeeCodeType _feeCodeTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeCodeType"/>.
		/// </summary>
		/// <value>The source FeeCodeType for FeeCodeTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeCodeType FeeCodeTypeIdSource
      	{
            get { return this._feeCodeTypeIdSource; }
            set { this._feeCodeTypeIdSource = value; }
      	}
		private GsCodeCurrency _gsCodeCurrencyIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeCurrency"/>.
		/// </summary>
		/// <value>The source GsCodeCurrency for GsCodeCurrencyId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeCurrency GsCodeCurrencyIdSource
      	{
            get { return this._gsCodeCurrencyIdSource; }
            set { this._gsCodeCurrencyIdSource = value; }
      	}
		private SpoSponsor _spoSponsorIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SpoSponsor"/>.
		/// </summary>
		/// <value>The source SpoSponsor for SpoSponsorId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SpoSponsor SpoSponsorIdSource
      	{
            get { return this._spoSponsorIdSource; }
            set { this._spoSponsorIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region SpoSponsorStudSemesterCollection
		
		private TList<SpoSponsorStudSemester> _spoSponsorStudSemesterSpoSponsorOfferId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorStudSemesterSpoSponsorOfferId
		/// </summary>
		
		public TList<SpoSponsorStudSemester> SpoSponsorStudSemesterCollection
		{
			get
			{
				if (_spoSponsorStudSemesterSpoSponsorOfferId == null)
				{
				_spoSponsorStudSemesterSpoSponsorOfferId = new TList<SpoSponsorStudSemester>();
				}
	
				return _spoSponsorStudSemesterSpoSponsorOfferId;
			}
			set { _spoSponsorStudSemesterSpoSponsorOfferId = value; }
		}
		
		#endregion

		#region SpoOfferStudExceptionCollection
		
		private TList<SpoOfferStudException> _spoOfferStudExceptionSpoSponsorOfferId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoOfferStudExceptionSpoSponsorOfferId
		/// </summary>
		
		public TList<SpoOfferStudException> SpoOfferStudExceptionCollection
		{
			get
			{
				if (_spoOfferStudExceptionSpoSponsorOfferId == null)
				{
				_spoOfferStudExceptionSpoSponsorOfferId = new TList<SpoOfferStudException>();
				}
	
				return _spoOfferStudExceptionSpoSponsorOfferId;
			}
			set { _spoOfferStudExceptionSpoSponsorOfferId = value; }
		}
		
		#endregion

		#region SpoSponsorStudCollection
		
		private TList<SpoSponsorStud> _spoSponsorStudSpoSponsorOfferId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorStudSpoSponsorOfferId
		/// </summary>
		
		public TList<SpoSponsorStud> SpoSponsorStudCollection
		{
			get
			{
				if (_spoSponsorStudSpoSponsorOfferId == null)
				{
				_spoSponsorStudSpoSponsorOfferId = new TList<SpoSponsorStud>();
				}
	
				return _spoSponsorStudSpoSponsorOfferId;
			}
			set { _spoSponsorStudSpoSponsorOfferId = value; }
		}
		
		#endregion

		#region SpoSponsorOfferExtCollection
		
		private TList<SpoSponsorOfferExt> _spoSponsorOfferExtSpoSponsorOfferId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorOfferExtSpoSponsorOfferId
		/// </summary>
		
		public TList<SpoSponsorOfferExt> SpoSponsorOfferExtCollection
		{
			get
			{
				if (_spoSponsorOfferExtSpoSponsorOfferId == null)
				{
				_spoSponsorOfferExtSpoSponsorOfferId = new TList<SpoSponsorOfferExt>();
				}
	
				return _spoSponsorOfferExtSpoSponsorOfferId;
			}
			set { _spoSponsorOfferExtSpoSponsorOfferId = value; }
		}
		
		#endregion

		#region SpoSponsorFeeItemCollection
		
		private TList<SpoSponsorFeeItem> _spoSponsorFeeItemSpoSponsorOfferId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorFeeItemSpoSponsorOfferId
		/// </summary>
		
		public TList<SpoSponsorFeeItem> SpoSponsorFeeItemCollection
		{
			get
			{
				if (_spoSponsorFeeItemSpoSponsorOfferId == null)
				{
				_spoSponsorFeeItemSpoSponsorOfferId = new TList<SpoSponsorFeeItem>();
				}
	
				return _spoSponsorFeeItemSpoSponsorOfferId;
			}
			set { _spoSponsorFeeItemSpoSponsorOfferId = value; }
		}
		
		#endregion

		#region SpoOfferContinueCollection
		
		private TList<SpoOfferContinue> _spoOfferContinueSpoSponsorOfferId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoOfferContinueSpoSponsorOfferId
		/// </summary>
		
		public TList<SpoOfferContinue> SpoOfferContinueCollection
		{
			get
			{
				if (_spoOfferContinueSpoSponsorOfferId == null)
				{
				_spoOfferContinueSpoSponsorOfferId = new TList<SpoOfferContinue>();
				}
	
				return _spoOfferContinueSpoSponsorOfferId;
			}
			set { _spoOfferContinueSpoSponsorOfferId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			SpoSponsorOfferEntityData _tmp = new SpoSponsorOfferEntityData();
						
			_tmp.SpoSponsorOfferId = this.SpoSponsorOfferId;
			_tmp.OriginalSpoSponsorOfferId = this.OriginalSpoSponsorOfferId;
			
			_tmp.SpoSponsorId = this.SpoSponsorId;
			_tmp.OfferNameAr = this.OfferNameAr;
			_tmp.OfferNameEn = this.OfferNameEn;
			_tmp.AsFacultyInfoId = this.AsFacultyInfoId;
			_tmp.AsCodeDegreeClassId = this.AsCodeDegreeClassId;
			_tmp.ReqDate = this.ReqDate;
			_tmp.IsActive = this.IsActive;
			_tmp.MaxStudCount = this.MaxStudCount;
			_tmp.SpoPercent = this.SpoPercent;
			_tmp.SpoAmount = this.SpoAmount;
			_tmp.GsCodeCurrencyId = this.GsCodeCurrencyId;
			_tmp.RepeatCrsFlg = this.RepeatCrsFlg;
			_tmp.RepeatCrsCount = this.RepeatCrsCount;
			_tmp.WthdrwCrsFlg = this.WthdrwCrsFlg;
			_tmp.WthdrwCrsCount = this.WthdrwCrsCount;
			_tmp.RepeatAbsCrsFlg = this.RepeatAbsCrsFlg;
			_tmp.RepeatPassedCrsFlg = this.RepeatPassedCrsFlg;
			_tmp.ThesisFlg = this.ThesisFlg;
			_tmp.SemTypeFlg = this.SemTypeFlg;
			_tmp.FeeTypeFlg = this.FeeTypeFlg;
			_tmp.FeeCodeTypeId = this.FeeCodeTypeId;
			_tmp.OrientSemCount = this.OrientSemCount;
			_tmp.SemCount = this.SemCount;
			_tmp.EdAcadYearFromId = this.EdAcadYearFromId;
			_tmp.EdCodeSemesterFromId = this.EdCodeSemesterFromId;
			_tmp.EdAcadYearToId = this.EdAcadYearToId;
			_tmp.EdCodeSemesterToId = this.EdCodeSemesterToId;
			_tmp.ReturnStudBalance = this.ReturnStudBalance;
			_tmp.Notes = this.Notes;
			_tmp.SeUserId = this.SeUserId;
			_tmp.LastDate = this.LastDate;
			
			#region Source Parent Composite Entities
			if (this.AsCodeDegreeClassIdSource != null)
				_tmp.AsCodeDegreeClassIdSource = MakeCopyOf(this.AsCodeDegreeClassIdSource) as AsCodeDegreeClass;
			if (this.AsFacultyInfoIdSource != null)
				_tmp.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource) as AsFacultyInfo;
			if (this.EdAcadYearFromIdSource != null)
				_tmp.EdAcadYearFromIdSource = MakeCopyOf(this.EdAcadYearFromIdSource) as EdAcadYear;
			if (this.EdAcadYearToIdSource != null)
				_tmp.EdAcadYearToIdSource = MakeCopyOf(this.EdAcadYearToIdSource) as EdAcadYear;
			if (this.EdCodeSemesterToIdSource != null)
				_tmp.EdCodeSemesterToIdSource = MakeCopyOf(this.EdCodeSemesterToIdSource) as EdCodeSemester;
			if (this.EdCodeSemesterFromIdSource != null)
				_tmp.EdCodeSemesterFromIdSource = MakeCopyOf(this.EdCodeSemesterFromIdSource) as EdCodeSemester;
			if (this.FeeCodeTypeIdSource != null)
				_tmp.FeeCodeTypeIdSource = MakeCopyOf(this.FeeCodeTypeIdSource) as FeeCodeType;
			if (this.GsCodeCurrencyIdSource != null)
				_tmp.GsCodeCurrencyIdSource = MakeCopyOf(this.GsCodeCurrencyIdSource) as GsCodeCurrency;
			if (this.SpoSponsorIdSource != null)
				_tmp.SpoSponsorIdSource = MakeCopyOf(this.SpoSponsorIdSource) as SpoSponsor;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._spoSponsorStudSemesterSpoSponsorOfferId != null)
				_tmp.SpoSponsorStudSemesterCollection = (TList<SpoSponsorStudSemester>) MakeCopyOf(this.SpoSponsorStudSemesterCollection); 
			if (this._spoOfferStudExceptionSpoSponsorOfferId != null)
				_tmp.SpoOfferStudExceptionCollection = (TList<SpoOfferStudException>) MakeCopyOf(this.SpoOfferStudExceptionCollection); 
			if (this._spoSponsorStudSpoSponsorOfferId != null)
				_tmp.SpoSponsorStudCollection = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollection); 
			if (this._spoSponsorOfferExtSpoSponsorOfferId != null)
				_tmp.SpoSponsorOfferExtCollection = (TList<SpoSponsorOfferExt>) MakeCopyOf(this.SpoSponsorOfferExtCollection); 
			if (this._spoSponsorFeeItemSpoSponsorOfferId != null)
				_tmp.SpoSponsorFeeItemCollection = (TList<SpoSponsorFeeItem>) MakeCopyOf(this.SpoSponsorFeeItemCollection); 
			if (this._spoOfferContinueSpoSponsorOfferId != null)
				_tmp.SpoOfferContinueCollection = (TList<SpoOfferContinue>) MakeCopyOf(this.SpoOfferContinueCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			SpoSponsorOfferEntityData _tmp = new SpoSponsorOfferEntityData();
						
			_tmp.SpoSponsorOfferId = this.SpoSponsorOfferId;
			_tmp.OriginalSpoSponsorOfferId = this.OriginalSpoSponsorOfferId;
			
			_tmp.SpoSponsorId = this.SpoSponsorId;
			_tmp.OfferNameAr = this.OfferNameAr;
			_tmp.OfferNameEn = this.OfferNameEn;
			_tmp.AsFacultyInfoId = this.AsFacultyInfoId;
			_tmp.AsCodeDegreeClassId = this.AsCodeDegreeClassId;
			_tmp.ReqDate = this.ReqDate;
			_tmp.IsActive = this.IsActive;
			_tmp.MaxStudCount = this.MaxStudCount;
			_tmp.SpoPercent = this.SpoPercent;
			_tmp.SpoAmount = this.SpoAmount;
			_tmp.GsCodeCurrencyId = this.GsCodeCurrencyId;
			_tmp.RepeatCrsFlg = this.RepeatCrsFlg;
			_tmp.RepeatCrsCount = this.RepeatCrsCount;
			_tmp.WthdrwCrsFlg = this.WthdrwCrsFlg;
			_tmp.WthdrwCrsCount = this.WthdrwCrsCount;
			_tmp.RepeatAbsCrsFlg = this.RepeatAbsCrsFlg;
			_tmp.RepeatPassedCrsFlg = this.RepeatPassedCrsFlg;
			_tmp.ThesisFlg = this.ThesisFlg;
			_tmp.SemTypeFlg = this.SemTypeFlg;
			_tmp.FeeTypeFlg = this.FeeTypeFlg;
			_tmp.FeeCodeTypeId = this.FeeCodeTypeId;
			_tmp.OrientSemCount = this.OrientSemCount;
			_tmp.SemCount = this.SemCount;
			_tmp.EdAcadYearFromId = this.EdAcadYearFromId;
			_tmp.EdCodeSemesterFromId = this.EdCodeSemesterFromId;
			_tmp.EdAcadYearToId = this.EdAcadYearToId;
			_tmp.EdCodeSemesterToId = this.EdCodeSemesterToId;
			_tmp.ReturnStudBalance = this.ReturnStudBalance;
			_tmp.Notes = this.Notes;
			_tmp.SeUserId = this.SeUserId;
			_tmp.LastDate = this.LastDate;
			
			#region Source Parent Composite Entities
			if (this.AsCodeDegreeClassIdSource != null && existingCopies.Contains(this.AsCodeDegreeClassIdSource))
				_tmp.AsCodeDegreeClassIdSource = existingCopies[this.AsCodeDegreeClassIdSource] as AsCodeDegreeClass;
			else
				_tmp.AsCodeDegreeClassIdSource = MakeCopyOf(this.AsCodeDegreeClassIdSource, existingCopies) as AsCodeDegreeClass;
			if (this.AsFacultyInfoIdSource != null && existingCopies.Contains(this.AsFacultyInfoIdSource))
				_tmp.AsFacultyInfoIdSource = existingCopies[this.AsFacultyInfoIdSource] as AsFacultyInfo;
			else
				_tmp.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource, existingCopies) as AsFacultyInfo;
			if (this.EdAcadYearFromIdSource != null && existingCopies.Contains(this.EdAcadYearFromIdSource))
				_tmp.EdAcadYearFromIdSource = existingCopies[this.EdAcadYearFromIdSource] as EdAcadYear;
			else
				_tmp.EdAcadYearFromIdSource = MakeCopyOf(this.EdAcadYearFromIdSource, existingCopies) as EdAcadYear;
			if (this.EdAcadYearToIdSource != null && existingCopies.Contains(this.EdAcadYearToIdSource))
				_tmp.EdAcadYearToIdSource = existingCopies[this.EdAcadYearToIdSource] as EdAcadYear;
			else
				_tmp.EdAcadYearToIdSource = MakeCopyOf(this.EdAcadYearToIdSource, existingCopies) as EdAcadYear;
			if (this.EdCodeSemesterToIdSource != null && existingCopies.Contains(this.EdCodeSemesterToIdSource))
				_tmp.EdCodeSemesterToIdSource = existingCopies[this.EdCodeSemesterToIdSource] as EdCodeSemester;
			else
				_tmp.EdCodeSemesterToIdSource = MakeCopyOf(this.EdCodeSemesterToIdSource, existingCopies) as EdCodeSemester;
			if (this.EdCodeSemesterFromIdSource != null && existingCopies.Contains(this.EdCodeSemesterFromIdSource))
				_tmp.EdCodeSemesterFromIdSource = existingCopies[this.EdCodeSemesterFromIdSource] as EdCodeSemester;
			else
				_tmp.EdCodeSemesterFromIdSource = MakeCopyOf(this.EdCodeSemesterFromIdSource, existingCopies) as EdCodeSemester;
			if (this.FeeCodeTypeIdSource != null && existingCopies.Contains(this.FeeCodeTypeIdSource))
				_tmp.FeeCodeTypeIdSource = existingCopies[this.FeeCodeTypeIdSource] as FeeCodeType;
			else
				_tmp.FeeCodeTypeIdSource = MakeCopyOf(this.FeeCodeTypeIdSource, existingCopies) as FeeCodeType;
			if (this.GsCodeCurrencyIdSource != null && existingCopies.Contains(this.GsCodeCurrencyIdSource))
				_tmp.GsCodeCurrencyIdSource = existingCopies[this.GsCodeCurrencyIdSource] as GsCodeCurrency;
			else
				_tmp.GsCodeCurrencyIdSource = MakeCopyOf(this.GsCodeCurrencyIdSource, existingCopies) as GsCodeCurrency;
			if (this.SpoSponsorIdSource != null && existingCopies.Contains(this.SpoSponsorIdSource))
				_tmp.SpoSponsorIdSource = existingCopies[this.SpoSponsorIdSource] as SpoSponsor;
			else
				_tmp.SpoSponsorIdSource = MakeCopyOf(this.SpoSponsorIdSource, existingCopies) as SpoSponsor;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.SpoSponsorStudSemesterCollection = (TList<SpoSponsorStudSemester>) MakeCopyOf(this.SpoSponsorStudSemesterCollection, existingCopies); 
			_tmp.SpoOfferStudExceptionCollection = (TList<SpoOfferStudException>) MakeCopyOf(this.SpoOfferStudExceptionCollection, existingCopies); 
			_tmp.SpoSponsorStudCollection = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollection, existingCopies); 
			_tmp.SpoSponsorOfferExtCollection = (TList<SpoSponsorOfferExt>) MakeCopyOf(this.SpoSponsorOfferExtCollection, existingCopies); 
			_tmp.SpoSponsorFeeItemCollection = (TList<SpoSponsorFeeItem>) MakeCopyOf(this.SpoSponsorFeeItemCollection, existingCopies); 
			_tmp.SpoOfferContinueCollection = (TList<SpoOfferContinue>) MakeCopyOf(this.SpoOfferContinueCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SpoSponsorOfferColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(SpoSponsorOfferColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SpoSponsorOfferColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(SpoSponsorOfferColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SpoSponsorOfferColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(SpoSponsorOfferColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				SpoSponsorOfferEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new SpoSponsorOfferEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="SpoSponsorOfferColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(SpoSponsorOfferColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				SpoSponsorOfferEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new SpoSponsorOfferEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region SpoSponsorOfferEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="SpoSponsorOffer"/> object.
	/// </remarks>
	public class SpoSponsorOfferEventArgs : System.EventArgs
	{
		private SpoSponsorOfferColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the SpoSponsorOfferEventArgs class.
		///</summary>
		public SpoSponsorOfferEventArgs(SpoSponsorOfferColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the SpoSponsorOfferEventArgs class.
		///</summary>
		public SpoSponsorOfferEventArgs(SpoSponsorOfferColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The SpoSponsorOfferColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="SpoSponsorOfferColumn" />
		public SpoSponsorOfferColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all SpoSponsorOffer related events.
	///</summary>
	public delegate void SpoSponsorOfferEventHandler(object sender, SpoSponsorOfferEventArgs e);
	
	#region SpoSponsorOfferComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class SpoSponsorOfferComparer : System.Collections.Generic.IComparer<SpoSponsorOffer>
	{
		SpoSponsorOfferColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:SpoSponsorOfferComparer"/> class.
        /// </summary>
		public SpoSponsorOfferComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:SpoSponsorOfferComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public SpoSponsorOfferComparer(SpoSponsorOfferColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="SpoSponsorOffer"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="SpoSponsorOffer"/> to compare.</param>
        /// <param name="b">The second <c>SpoSponsorOffer</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(SpoSponsorOffer a, SpoSponsorOffer b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(SpoSponsorOffer entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(SpoSponsorOffer a, SpoSponsorOffer b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public SpoSponsorOfferColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region SpoSponsorOfferKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="SpoSponsorOffer"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class SpoSponsorOfferKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the SpoSponsorOfferKey class.
		/// </summary>
		public SpoSponsorOfferKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the SpoSponsorOfferKey class.
		/// </summary>
		public SpoSponsorOfferKey(SpoSponsorOfferBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.SpoSponsorOfferId = entity.SpoSponsorOfferId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the SpoSponsorOfferKey class.
		/// </summary>
		public SpoSponsorOfferKey(System.Decimal _spoSponsorOfferId)
		{
			#region Init Properties

			this.SpoSponsorOfferId = _spoSponsorOfferId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private SpoSponsorOfferBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public SpoSponsorOfferBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the SpoSponsorOfferId property
		private System.Decimal _spoSponsorOfferId;
		
		/// <summary>
		/// Gets or sets the SpoSponsorOfferId property.
		/// </summary>
		public System.Decimal SpoSponsorOfferId
		{
			get { return _spoSponsorOfferId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.SpoSponsorOfferId = value;
				
				_spoSponsorOfferId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				SpoSponsorOfferId = ( values["SpoSponsorOfferId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["SpoSponsorOfferId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("SpoSponsorOfferId", SpoSponsorOfferId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("SpoSponsorOfferId: {0}{1}",
								SpoSponsorOfferId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region SpoSponsorOfferColumn Enum
	
	/// <summary>
	/// Enumerate the SpoSponsorOffer columns.
	/// </summary>
	[Serializable]
	public enum SpoSponsorOfferColumn : int
	{
		/// <summary>
		/// SpoSponsorOfferId : 
		/// </summary>
		[EnumTextValue("SPO_SPONSOR_OFFER_ID")]
		[ColumnEnum("SPO_SPONSOR_OFFER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		SpoSponsorOfferId = 1,
		/// <summary>
		/// SpoSponsorId : 
		/// </summary>
		[EnumTextValue("SPO_SPONSOR_ID")]
		[ColumnEnum("SPO_SPONSOR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		SpoSponsorId = 2,
		/// <summary>
		/// OfferNameAr : 
		/// </summary>
		[EnumTextValue("OFFER_NAME_AR")]
		[ColumnEnum("OFFER_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		OfferNameAr = 3,
		/// <summary>
		/// OfferNameEn : 
		/// </summary>
		[EnumTextValue("OFFER_NAME_EN")]
		[ColumnEnum("OFFER_NAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		OfferNameEn = 4,
		/// <summary>
		/// AsFacultyInfoId : NULL default=UNIV
		/// </summary>
		[EnumTextValue("AS_FACULTY_INFO_ID")]
		[ColumnEnum("AS_FACULTY_INFO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AsFacultyInfoId = 5,
		/// <summary>
		/// AsCodeDegreeClassId : Default=All
		/// </summary>
		[EnumTextValue("AS_CODE_DEGREE_CLASS_ID")]
		[ColumnEnum("AS_CODE_DEGREE_CLASS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AsCodeDegreeClassId = 6,
		/// <summary>
		/// ReqDate : 
		/// </summary>
		[EnumTextValue("REQ_DATE")]
		[ColumnEnum("REQ_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		ReqDate = 7,
		/// <summary>
		/// IsActive : 
		/// </summary>
		[EnumTextValue("IS_ACTIVE")]
		[ColumnEnum("IS_ACTIVE", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		IsActive = 8,
		/// <summary>
		/// MaxStudCount : عدد الطلابXXX
		/// </summary>
		[EnumTextValue("MAX_STUD_COUNT")]
		[ColumnEnum("MAX_STUD_COUNT", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		MaxStudCount = 9,
		/// <summary>
		/// SpoPercent : نوع الكفالة "نسبة /قيمةXXXXX"
		/// </summary>
		[EnumTextValue("SPO_PERCENT")]
		[ColumnEnum("SPO_PERCENT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SpoPercent = 10,
		/// <summary>
		/// SpoAmount : نوع الكفالة "نسبة /قيمةXXXXX"
		/// </summary>
		[EnumTextValue("SPO_AMOUNT")]
		[ColumnEnum("SPO_AMOUNT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SpoAmount = 11,
		/// <summary>
		/// GsCodeCurrencyId : XXX Later
		/// </summary>
		[EnumTextValue("GS_CODE_CURRENCY_ID")]
		[ColumnEnum("GS_CODE_CURRENCY_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeCurrencyId = 12,
		/// <summary>
		/// RepeatCrsFlg : مقررات معادة  رسوب
		/// </summary>
		[EnumTextValue("REPEAT_CRS_FLG")]
		[ColumnEnum("REPEAT_CRS_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		RepeatCrsFlg = 13,
		/// <summary>
		/// RepeatCrsCount : عدد مرات تحمل الكفيل اعادة رسوب
		/// </summary>
		[EnumTextValue("REPEAT_CRS_COUNT")]
		[ColumnEnum("REPEAT_CRS_COUNT", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		RepeatCrsCount = 14,
		/// <summary>
		/// WthdrwCrsFlg : مقررات اعاده انسحاب
		/// </summary>
		[EnumTextValue("WTHDRW_CRS_FLG")]
		[ColumnEnum("WTHDRW_CRS_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		WthdrwCrsFlg = 15,
		/// <summary>
		/// WthdrwCrsCount : عدد مرات تحمل الكفيل الانسحاب
		/// </summary>
		[EnumTextValue("WTHDRW_CRS_COUNT")]
		[ColumnEnum("WTHDRW_CRS_COUNT", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		WthdrwCrsCount = 16,
		/// <summary>
		/// RepeatAbsCrsFlg : مقررات معادة  رسوب غياب
		/// </summary>
		[EnumTextValue("REPEAT_ABS_CRS_FLG")]
		[ColumnEnum("REPEAT_ABS_CRS_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		RepeatAbsCrsFlg = 17,
		/// <summary>
		/// RepeatPassedCrsFlg : اعاده تحسين
		/// </summary>
		[EnumTextValue("REPEAT_PASSED_CRS_FLG")]
		[ColumnEnum("REPEAT_PASSED_CRS_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		RepeatPassedCrsFlg = 18,
		/// <summary>
		/// ThesisFlg : مقرر رسالةXXX
		/// </summary>
		[EnumTextValue("THESIS_FLG")]
		[ColumnEnum("THESIS_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		ThesisFlg = 19,
		/// <summary>
		/// SemTypeFlg : الفصول "اجبارية - الكل">0 all
		/// </summary>
		[EnumTextValue("SEM_TYPE_FLG")]
		[ColumnEnum("SEM_TYPE_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SemTypeFlg = 20,
		/// <summary>
		/// FeeTypeFlg : ALL-STUDY FEES-OTHER  >0 all
		/// </summary>
		[EnumTextValue("FEE_TYPE_FLG")]
		[ColumnEnum("FEE_TYPE_FLG", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		FeeTypeFlg = 21,
		/// <summary>
		/// FeeCodeTypeId : نوع المصروف "الكل - دراسي – اخريXXX "
		/// </summary>
		[EnumTextValue("FEE_CODE_TYPE_ID")]
		[ColumnEnum("FEE_CODE_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FeeCodeTypeId = 22,
		/// <summary>
		/// OrientSemCount : عدد فصول تمهيدى
		/// </summary>
		[EnumTextValue("ORIENT_SEM_COUNT")]
		[ColumnEnum("ORIENT_SEM_COUNT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		OrientSemCount = 23,
		/// <summary>
		/// SemCount : عدد فصول الدراسية المكفولة بعد التمهيدى ان وجد
		/// </summary>
		[EnumTextValue("SEM_COUNT")]
		[ColumnEnum("SEM_COUNT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SemCount = 24,
		/// <summary>
		/// EdAcadYearFromId : من عام
		/// </summary>
		[EnumTextValue("ED_ACAD_YEAR_FROM_ID")]
		[ColumnEnum("ED_ACAD_YEAR_FROM_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdAcadYearFromId = 25,
		/// <summary>
		/// EdCodeSemesterFromId : من فصل
		/// </summary>
		[EnumTextValue("ED_CODE_SEMESTER_FROM_ID")]
		[ColumnEnum("ED_CODE_SEMESTER_FROM_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeSemesterFromId = 26,
		/// <summary>
		/// EdAcadYearToId : الى عام
		/// </summary>
		[EnumTextValue("ED_ACAD_YEAR_TO_ID")]
		[ColumnEnum("ED_ACAD_YEAR_TO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdAcadYearToId = 27,
		/// <summary>
		/// EdCodeSemesterToId : الى فصل
		/// </summary>
		[EnumTextValue("ED_CODE_SEMESTER_TO_ID")]
		[ColumnEnum("ED_CODE_SEMESTER_TO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeSemesterToId = 28,
		/// <summary>
		/// ReturnStudBalance : KU BDF Sponsor 1000 ثابتة ولو فى باقى ترجع لرصيد الطالب
		/// </summary>
		[EnumTextValue("RETURN_STUD_BALANCE")]
		[ColumnEnum("RETURN_STUD_BALANCE", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		ReturnStudBalance = 29,
		/// <summary>
		/// Notes : 
		/// </summary>
		[EnumTextValue("NOTES")]
		[ColumnEnum("NOTES", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		Notes = 30,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 31,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 32
	}//End enum

	#endregion SpoSponsorOfferColumn Enum

} // end namespace
