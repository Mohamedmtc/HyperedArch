
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file FeeStudVoucher.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'FEE_STUD_VOUCHER' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class FeeStudVoucherBase : EntityBase, IFeeStudVoucher, IEntityId<FeeStudVoucherKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private FeeStudVoucherEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private FeeStudVoucherEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private FeeStudVoucherEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<FeeStudVoucher> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event FeeStudVoucherEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event FeeStudVoucherEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="FeeStudVoucherBase"/> instance.
		///</summary>
		public FeeStudVoucherBase()
		{
			this.entityData = new FeeStudVoucherEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="FeeStudVoucherBase"/> instance.
		///</summary>
		///<param name="_feeStudVoucherId">اذن دفع/ايصال سداد</param>
		///<param name="_voucherSerial"></param>
		///<param name="_voucherDate"></param>
		///<param name="_edStudId">KU sponsor</param>
		///<param name="_edAcadYearId"></param>
		///<param name="_asFacultyInfoId"></param>
		///<param name="_totalAmount">اجمالى القيم المسددة</param>
		///<param name="_receiptNum"></param>
		///<param name="_receiptDate"></param>
		///<param name="_gsCodeCurrencyId"></param>
		///<param name="_gsCodePayMethodId"></param>
		///<param name="_feeCodeBankId"></param>
		///<param name="_feeCodeTypeId"></param>
		///<param name="_payFlg"></param>
		///<param name="_balanceFlg">1: add to balance, 0 payy balance,3:Current balance of student</param>
		///<param name="_cancelFlg"></param>
		///<param name="_edCodeSemesterId"></param>
		///<param name="_notes">بيان ايصال السداد</param>
		///<param name="_seUserId"></param>
		///<param name="_userName">=web if online</param>
		///<param name="_cheqNum">رقم الشيك فى حالة دفع بالشيك</param>
		///<param name="_accntNum">رقم حساب البنك  فى حالة ايداع</param>
		///<param name="_attchdDoc">صورة الشيك او مرفق</param>
		///<param name="_studFeeBalance">رصيد الطالب المستخدم فى الفاتورة</param>
		///<param name="_totalPayed">اجمالى المدفوع</param>
		///<param name="_lastDate"></param>
		///<param name="_onlineFlg">Angham:
		/// 		/// 1 فى ku فيزا   XXXX  (Should use PAYMENT_METHOD)
		/// 		/// 
		/// 		/// شاشه فورى للططالب بيكون Fee_Stud_Voucher.Online=2
		/// 		/// وشاشه فورى للمتقدم بيكون Fee_Stud_Voucher.Online=1هلى فيه فرق بين المتقدم والطالب هوه مش المفروض online=1 in visa
		/// 		/// online =2 in Fawry
		/// 		/// 
		/// 		/// بروسيجور بتحذف ايصالات فورى لو هيا pending وعدا 24 ساعه عليها وكنت بتشيك على انها online=2
		/// 		/// 
		/// 		/// </param>
		///<param name="_cancelDate"></param>
		///<param name="_seUserCnclId"></param>
		///<param name="_spoSponsorId"></param>
		///<param name="_spoFeeBalance">رصيد الكفيل  المستخدم فى الفاتورة</param>
		///<param name="_admApplicantId"></param>
		///<param name="_discAmount">usednot affect items</param>
		///<param name="_curTotBalance">اجمالى المدفوع</param>
		///<param name="_curTotRemain">اجمالى المدفوع</param>
		///<param name="_exchangeRate">سعر تغيير العملة</param>
		public FeeStudVoucherBase(System.Decimal _feeStudVoucherId, System.Decimal? _voucherSerial, 
			System.DateTime _voucherDate, System.Decimal? _edStudId, System.Decimal _edAcadYearId, 
			System.Decimal? _asFacultyInfoId, System.Decimal _totalAmount, System.String _receiptNum, 
			System.DateTime? _receiptDate, System.Decimal _gsCodeCurrencyId, System.Decimal? _gsCodePayMethodId, 
			System.Decimal? _feeCodeBankId, System.Decimal? _feeCodeTypeId, System.Decimal? _payFlg, 
			System.Decimal _balanceFlg, System.Boolean? _cancelFlg, System.Decimal _edCodeSemesterId, 
			System.String _notes, System.Decimal? _seUserId, System.String _userName, 
			System.String _cheqNum, System.String _accntNum, System.String _attchdDoc, 
			System.Decimal? _studFeeBalance, System.Decimal? _totalPayed, System.DateTime? _lastDate, 
			System.Int32? _onlineFlg, System.DateTime? _cancelDate, System.Decimal? _seUserCnclId, 
			System.Decimal? _spoSponsorId, System.Decimal? _spoFeeBalance, System.Decimal? _admApplicantId, 
			System.Decimal? _discAmount, System.Decimal? _curTotBalance, System.Decimal? _curTotRemain, 
			System.Decimal? _exchangeRate)
		{
			this.entityData = new FeeStudVoucherEntityData();
			this.backupData = null;

			this.FeeStudVoucherId = _feeStudVoucherId;
			this.VoucherSerial = _voucherSerial;
			this.VoucherDate = _voucherDate;
			this.EdStudId = _edStudId;
			this.EdAcadYearId = _edAcadYearId;
			this.AsFacultyInfoId = _asFacultyInfoId;
			this.TotalAmount = _totalAmount;
			this.ReceiptNum = _receiptNum;
			this.ReceiptDate = _receiptDate;
			this.GsCodeCurrencyId = _gsCodeCurrencyId;
			this.GsCodePayMethodId = _gsCodePayMethodId;
			this.FeeCodeBankId = _feeCodeBankId;
			this.FeeCodeTypeId = _feeCodeTypeId;
			this.PayFlg = _payFlg;
			this.BalanceFlg = _balanceFlg;
			this.CancelFlg = _cancelFlg;
			this.EdCodeSemesterId = _edCodeSemesterId;
			this.Notes = _notes;
			this.SeUserId = _seUserId;
			this.UserName = _userName;
			this.CheqNum = _cheqNum;
			this.AccntNum = _accntNum;
			this.AttchdDoc = _attchdDoc;
			this.StudFeeBalance = _studFeeBalance;
			this.TotalPayed = _totalPayed;
			this.LastDate = _lastDate;
			this.OnlineFlg = _onlineFlg;
			this.CancelDate = _cancelDate;
			this.SeUserCnclId = _seUserCnclId;
			this.SpoSponsorId = _spoSponsorId;
			this.SpoFeeBalance = _spoFeeBalance;
			this.AdmApplicantId = _admApplicantId;
			this.DiscAmount = _discAmount;
			this.CurTotBalance = _curTotBalance;
			this.CurTotRemain = _curTotRemain;
			this.ExchangeRate = _exchangeRate;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="FeeStudVoucher"/> instance.
		///</summary>
		///<param name="_feeStudVoucherId">اذن دفع/ايصال سداد</param>
		///<param name="_voucherSerial"></param>
		///<param name="_voucherDate"></param>
		///<param name="_edStudId">KU sponsor</param>
		///<param name="_edAcadYearId"></param>
		///<param name="_asFacultyInfoId"></param>
		///<param name="_totalAmount">اجمالى القيم المسددة</param>
		///<param name="_receiptNum"></param>
		///<param name="_receiptDate"></param>
		///<param name="_gsCodeCurrencyId"></param>
		///<param name="_gsCodePayMethodId"></param>
		///<param name="_feeCodeBankId"></param>
		///<param name="_feeCodeTypeId"></param>
		///<param name="_payFlg"></param>
		///<param name="_balanceFlg">1: add to balance, 0 payy balance,3:Current balance of student</param>
		///<param name="_cancelFlg"></param>
		///<param name="_edCodeSemesterId"></param>
		///<param name="_notes">بيان ايصال السداد</param>
		///<param name="_seUserId"></param>
		///<param name="_userName">=web if online</param>
		///<param name="_cheqNum">رقم الشيك فى حالة دفع بالشيك</param>
		///<param name="_accntNum">رقم حساب البنك  فى حالة ايداع</param>
		///<param name="_attchdDoc">صورة الشيك او مرفق</param>
		///<param name="_studFeeBalance">رصيد الطالب المستخدم فى الفاتورة</param>
		///<param name="_totalPayed">اجمالى المدفوع</param>
		///<param name="_lastDate"></param>
		///<param name="_onlineFlg">Angham:
		/// 		/// 1 فى ku فيزا   XXXX  (Should use PAYMENT_METHOD)
		/// 		/// 
		/// 		/// شاشه فورى للططالب بيكون Fee_Stud_Voucher.Online=2
		/// 		/// وشاشه فورى للمتقدم بيكون Fee_Stud_Voucher.Online=1هلى فيه فرق بين المتقدم والطالب هوه مش المفروض online=1 in visa
		/// 		/// online =2 in Fawry
		/// 		/// 
		/// 		/// بروسيجور بتحذف ايصالات فورى لو هيا pending وعدا 24 ساعه عليها وكنت بتشيك على انها online=2
		/// 		/// 
		/// 		/// </param>
		///<param name="_cancelDate"></param>
		///<param name="_seUserCnclId"></param>
		///<param name="_spoSponsorId"></param>
		///<param name="_spoFeeBalance">رصيد الكفيل  المستخدم فى الفاتورة</param>
		///<param name="_admApplicantId"></param>
		///<param name="_discAmount">usednot affect items</param>
		///<param name="_curTotBalance">اجمالى المدفوع</param>
		///<param name="_curTotRemain">اجمالى المدفوع</param>
		///<param name="_exchangeRate">سعر تغيير العملة</param>
		public static FeeStudVoucher CreateFeeStudVoucher(System.Decimal _feeStudVoucherId, System.Decimal? _voucherSerial, 
			System.DateTime _voucherDate, System.Decimal? _edStudId, System.Decimal _edAcadYearId, 
			System.Decimal? _asFacultyInfoId, System.Decimal _totalAmount, System.String _receiptNum, 
			System.DateTime? _receiptDate, System.Decimal _gsCodeCurrencyId, System.Decimal? _gsCodePayMethodId, 
			System.Decimal? _feeCodeBankId, System.Decimal? _feeCodeTypeId, System.Decimal? _payFlg, 
			System.Decimal _balanceFlg, System.Boolean? _cancelFlg, System.Decimal _edCodeSemesterId, 
			System.String _notes, System.Decimal? _seUserId, System.String _userName, 
			System.String _cheqNum, System.String _accntNum, System.String _attchdDoc, 
			System.Decimal? _studFeeBalance, System.Decimal? _totalPayed, System.DateTime? _lastDate, 
			System.Int32? _onlineFlg, System.DateTime? _cancelDate, System.Decimal? _seUserCnclId, 
			System.Decimal? _spoSponsorId, System.Decimal? _spoFeeBalance, System.Decimal? _admApplicantId, 
			System.Decimal? _discAmount, System.Decimal? _curTotBalance, System.Decimal? _curTotRemain, 
			System.Decimal? _exchangeRate)
		{
			FeeStudVoucher newFeeStudVoucher = new FeeStudVoucher();
			newFeeStudVoucher.FeeStudVoucherId = _feeStudVoucherId;
			newFeeStudVoucher.VoucherSerial = _voucherSerial;
			newFeeStudVoucher.VoucherDate = _voucherDate;
			newFeeStudVoucher.EdStudId = _edStudId;
			newFeeStudVoucher.EdAcadYearId = _edAcadYearId;
			newFeeStudVoucher.AsFacultyInfoId = _asFacultyInfoId;
			newFeeStudVoucher.TotalAmount = _totalAmount;
			newFeeStudVoucher.ReceiptNum = _receiptNum;
			newFeeStudVoucher.ReceiptDate = _receiptDate;
			newFeeStudVoucher.GsCodeCurrencyId = _gsCodeCurrencyId;
			newFeeStudVoucher.GsCodePayMethodId = _gsCodePayMethodId;
			newFeeStudVoucher.FeeCodeBankId = _feeCodeBankId;
			newFeeStudVoucher.FeeCodeTypeId = _feeCodeTypeId;
			newFeeStudVoucher.PayFlg = _payFlg;
			newFeeStudVoucher.BalanceFlg = _balanceFlg;
			newFeeStudVoucher.CancelFlg = _cancelFlg;
			newFeeStudVoucher.EdCodeSemesterId = _edCodeSemesterId;
			newFeeStudVoucher.Notes = _notes;
			newFeeStudVoucher.SeUserId = _seUserId;
			newFeeStudVoucher.UserName = _userName;
			newFeeStudVoucher.CheqNum = _cheqNum;
			newFeeStudVoucher.AccntNum = _accntNum;
			newFeeStudVoucher.AttchdDoc = _attchdDoc;
			newFeeStudVoucher.StudFeeBalance = _studFeeBalance;
			newFeeStudVoucher.TotalPayed = _totalPayed;
			newFeeStudVoucher.LastDate = _lastDate;
			newFeeStudVoucher.OnlineFlg = _onlineFlg;
			newFeeStudVoucher.CancelDate = _cancelDate;
			newFeeStudVoucher.SeUserCnclId = _seUserCnclId;
			newFeeStudVoucher.SpoSponsorId = _spoSponsorId;
			newFeeStudVoucher.SpoFeeBalance = _spoFeeBalance;
			newFeeStudVoucher.AdmApplicantId = _admApplicantId;
			newFeeStudVoucher.DiscAmount = _discAmount;
			newFeeStudVoucher.CurTotBalance = _curTotBalance;
			newFeeStudVoucher.CurTotRemain = _curTotRemain;
			newFeeStudVoucher.ExchangeRate = _exchangeRate;
			return newFeeStudVoucher;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the FeeStudVoucherId property. 
		///		اذن دفع/ايصال سداد
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"اذن دفع/ايصال سداد"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal FeeStudVoucherId
		{
			get
			{
				return this.entityData.FeeStudVoucherId; 
			}
			
			set
			{
				if (this.entityData.FeeStudVoucherId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.FeeStudVoucherId, this.entityData.FeeStudVoucherId);
				this.entityData.FeeStudVoucherId = value;
				this.EntityId.FeeStudVoucherId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.FeeStudVoucherId, this.entityData.FeeStudVoucherId);
				OnPropertyChanged("FeeStudVoucherId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the FEE_STUD_VOUCHER_ID property.
		///		اذن دفع/ايصال سداد
		/// </summary>
		/// <remarks>This is the original value of the FEE_STUD_VOUCHER_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalFeeStudVoucherId
		{
			get { return this.entityData.OriginalFeeStudVoucherId; }
			set { this.entityData.OriginalFeeStudVoucherId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the VoucherSerial property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsVoucherSerialNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? VoucherSerial
		{
			get
			{
				return this.entityData.VoucherSerial; 
			}
			
			set
			{
				if (this.entityData.VoucherSerial == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.VoucherSerial, this.entityData.VoucherSerial);
				this.entityData.VoucherSerial = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.VoucherSerial, this.entityData.VoucherSerial);
				OnPropertyChanged("VoucherSerial");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the VoucherDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.DateTime VoucherDate
		{
			get
			{
				return this.entityData.VoucherDate; 
			}
			
			set
			{
				if (this.entityData.VoucherDate == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.VoucherDate, this.entityData.VoucherDate);
				this.entityData.VoucherDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.VoucherDate, this.entityData.VoucherDate);
				OnPropertyChanged("VoucherDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudId property. 
		///		KU sponsor
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"KU sponsor"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudId
		{
			get
			{
				return this.entityData.EdStudId; 
			}
			
			set
			{
				if (this.entityData.EdStudId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.EdStudId, this.entityData.EdStudId);
				this.entityData.EdStudId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.EdStudId, this.entityData.EdStudId);
				OnPropertyChanged("EdStudId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdAcadYearId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EdAcadYearId
		{
			get
			{
				return this.entityData.EdAcadYearId; 
			}
			
			set
			{
				if (this.entityData.EdAcadYearId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.EdAcadYearId, this.entityData.EdAcadYearId);
				this.entityData.EdAcadYearId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.EdAcadYearId, this.entityData.EdAcadYearId);
				OnPropertyChanged("EdAcadYearId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AsFacultyInfoId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAsFacultyInfoIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AsFacultyInfoId
		{
			get
			{
				return this.entityData.AsFacultyInfoId; 
			}
			
			set
			{
				if (this.entityData.AsFacultyInfoId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.AsFacultyInfoId, this.entityData.AsFacultyInfoId);
				this.entityData.AsFacultyInfoId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.AsFacultyInfoId, this.entityData.AsFacultyInfoId);
				OnPropertyChanged("AsFacultyInfoId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TotalAmount property. 
		///		اجمالى القيم المسددة
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"اجمالى القيم المسددة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal TotalAmount
		{
			get
			{
				return this.entityData.TotalAmount; 
			}
			
			set
			{
				if (this.entityData.TotalAmount == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.TotalAmount, this.entityData.TotalAmount);
				this.entityData.TotalAmount = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.TotalAmount, this.entityData.TotalAmount);
				OnPropertyChanged("TotalAmount");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ReceiptNum property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String ReceiptNum
		{
			get
			{
				return this.entityData.ReceiptNum; 
			}
			
			set
			{
				if (this.entityData.ReceiptNum == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.ReceiptNum, this.entityData.ReceiptNum);
				this.entityData.ReceiptNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.ReceiptNum, this.entityData.ReceiptNum);
				OnPropertyChanged("ReceiptNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ReceiptDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsReceiptDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? ReceiptDate
		{
			get
			{
				return this.entityData.ReceiptDate; 
			}
			
			set
			{
				if (this.entityData.ReceiptDate == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.ReceiptDate, this.entityData.ReceiptDate);
				this.entityData.ReceiptDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.ReceiptDate, this.entityData.ReceiptDate);
				OnPropertyChanged("ReceiptDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeCurrencyId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal GsCodeCurrencyId
		{
			get
			{
				return this.entityData.GsCodeCurrencyId; 
			}
			
			set
			{
				if (this.entityData.GsCodeCurrencyId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.GsCodeCurrencyId, this.entityData.GsCodeCurrencyId);
				this.entityData.GsCodeCurrencyId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.GsCodeCurrencyId, this.entityData.GsCodeCurrencyId);
				OnPropertyChanged("GsCodeCurrencyId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodePayMethodId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodePayMethodIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodePayMethodId
		{
			get
			{
				return this.entityData.GsCodePayMethodId; 
			}
			
			set
			{
				if (this.entityData.GsCodePayMethodId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.GsCodePayMethodId, this.entityData.GsCodePayMethodId);
				this.entityData.GsCodePayMethodId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.GsCodePayMethodId, this.entityData.GsCodePayMethodId);
				OnPropertyChanged("GsCodePayMethodId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeCodeBankId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFeeCodeBankIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FeeCodeBankId
		{
			get
			{
				return this.entityData.FeeCodeBankId; 
			}
			
			set
			{
				if (this.entityData.FeeCodeBankId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.FeeCodeBankId, this.entityData.FeeCodeBankId);
				this.entityData.FeeCodeBankId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.FeeCodeBankId, this.entityData.FeeCodeBankId);
				OnPropertyChanged("FeeCodeBankId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeCodeTypeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFeeCodeTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FeeCodeTypeId
		{
			get
			{
				return this.entityData.FeeCodeTypeId; 
			}
			
			set
			{
				if (this.entityData.FeeCodeTypeId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.FeeCodeTypeId, this.entityData.FeeCodeTypeId);
				this.entityData.FeeCodeTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.FeeCodeTypeId, this.entityData.FeeCodeTypeId);
				OnPropertyChanged("FeeCodeTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PayFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPayFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? PayFlg
		{
			get
			{
				return this.entityData.PayFlg; 
			}
			
			set
			{
				if (this.entityData.PayFlg == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.PayFlg, this.entityData.PayFlg);
				this.entityData.PayFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.PayFlg, this.entityData.PayFlg);
				OnPropertyChanged("PayFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the BalanceFlg property. 
		///		1: add to balance, 0 payy balance,3:Current balance of student
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"1: add to balance, 0 payy balance,3:Current balance of student"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal BalanceFlg
		{
			get
			{
				return this.entityData.BalanceFlg; 
			}
			
			set
			{
				if (this.entityData.BalanceFlg == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.BalanceFlg, this.entityData.BalanceFlg);
				this.entityData.BalanceFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.BalanceFlg, this.entityData.BalanceFlg);
				OnPropertyChanged("BalanceFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CancelFlg property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsCancelFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? CancelFlg
		{
			get
			{
				return this.entityData.CancelFlg; 
			}
			
			set
			{
				if (this.entityData.CancelFlg == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.CancelFlg, this.entityData.CancelFlg);
				this.entityData.CancelFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.CancelFlg, this.entityData.CancelFlg);
				OnPropertyChanged("CancelFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeSemesterId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EdCodeSemesterId
		{
			get
			{
				return this.entityData.EdCodeSemesterId; 
			}
			
			set
			{
				if (this.entityData.EdCodeSemesterId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.EdCodeSemesterId, this.entityData.EdCodeSemesterId);
				this.entityData.EdCodeSemesterId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.EdCodeSemesterId, this.entityData.EdCodeSemesterId);
				OnPropertyChanged("EdCodeSemesterId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Notes property. 
		///		بيان ايصال السداد
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"بيان ايصال السداد"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String Notes
		{
			get
			{
				return this.entityData.Notes; 
			}
			
			set
			{
				if (this.entityData.Notes == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.Notes, this.entityData.Notes);
				this.entityData.Notes = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.Notes, this.entityData.Notes);
				OnPropertyChanged("Notes");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the UserName property. 
		///		=web if online
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"=web if online"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String UserName
		{
			get
			{
				return this.entityData.UserName; 
			}
			
			set
			{
				if (this.entityData.UserName == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.UserName, this.entityData.UserName);
				this.entityData.UserName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.UserName, this.entityData.UserName);
				OnPropertyChanged("UserName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CheqNum property. 
		///		رقم الشيك فى حالة دفع بالشيك
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"رقم الشيك فى حالة دفع بالشيك"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String CheqNum
		{
			get
			{
				return this.entityData.CheqNum; 
			}
			
			set
			{
				if (this.entityData.CheqNum == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.CheqNum, this.entityData.CheqNum);
				this.entityData.CheqNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.CheqNum, this.entityData.CheqNum);
				OnPropertyChanged("CheqNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AccntNum property. 
		///		رقم حساب البنك  فى حالة ايداع
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"رقم حساب البنك  فى حالة ايداع"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 150)]
		public virtual System.String AccntNum
		{
			get
			{
				return this.entityData.AccntNum; 
			}
			
			set
			{
				if (this.entityData.AccntNum == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.AccntNum, this.entityData.AccntNum);
				this.entityData.AccntNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.AccntNum, this.entityData.AccntNum);
				OnPropertyChanged("AccntNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AttchdDoc property. 
		///		صورة الشيك او مرفق
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"صورة الشيك او مرفق"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String AttchdDoc
		{
			get
			{
				return this.entityData.AttchdDoc; 
			}
			
			set
			{
				if (this.entityData.AttchdDoc == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.AttchdDoc, this.entityData.AttchdDoc);
				this.entityData.AttchdDoc = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.AttchdDoc, this.entityData.AttchdDoc);
				OnPropertyChanged("AttchdDoc");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StudFeeBalance property. 
		///		رصيد الطالب المستخدم فى الفاتورة
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsStudFeeBalanceNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"رصيد الطالب المستخدم فى الفاتورة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? StudFeeBalance
		{
			get
			{
				return this.entityData.StudFeeBalance; 
			}
			
			set
			{
				if (this.entityData.StudFeeBalance == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.StudFeeBalance, this.entityData.StudFeeBalance);
				this.entityData.StudFeeBalance = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.StudFeeBalance, this.entityData.StudFeeBalance);
				OnPropertyChanged("StudFeeBalance");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TotalPayed property. 
		///		اجمالى المدفوع
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTotalPayedNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"اجمالى المدفوع"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TotalPayed
		{
			get
			{
				return this.entityData.TotalPayed; 
			}
			
			set
			{
				if (this.entityData.TotalPayed == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.TotalPayed, this.entityData.TotalPayed);
				this.entityData.TotalPayed = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.TotalPayed, this.entityData.TotalPayed);
				OnPropertyChanged("TotalPayed");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the OnlineFlg property. 
		///		Angham:
		/// 		/// 1 فى ku فيزا   XXXX  (Should use PAYMENT_METHOD)
		/// 		/// 
		/// 		/// شاشه فورى للططالب بيكون Fee_Stud_Voucher.Online=2
		/// 		/// وشاشه فورى للمتقدم بيكون Fee_Stud_Voucher.Online=1هلى فيه فرق بين المتقدم والطالب هوه مش المفروض online=1 in visa
		/// 		/// online =2 in Fawry
		/// 		/// 
		/// 		/// بروسيجور بتحذف ايصالات فورى لو هيا pending وعدا 24 ساعه عليها وكنت بتشيك على انها online=2
		/// 		/// 
		/// 		/// 
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsOnlineFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"Angham: 1 فى ku فيزا   XXXX  (Should use PAYMENT_METHOD)  شاشه فورى للططالب بيكون Fee_Stud_Voucher.Online=2 وشاشه فورى للمتقدم بيكون Fee_Stud_Voucher.Online=1هلى فيه فرق بين المتقدم والطالب هوه مش المفروض online=1 in visa online =2 in Fawry  بروسيجور بتحذف ايصالات فورى لو هيا pending وعدا 24 ساعه عليها وكنت بتشيك على انها online=2  "), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? OnlineFlg
		{
			get
			{
				return this.entityData.OnlineFlg; 
			}
			
			set
			{
				if (this.entityData.OnlineFlg == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.OnlineFlg, this.entityData.OnlineFlg);
				this.entityData.OnlineFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.OnlineFlg, this.entityData.OnlineFlg);
				OnPropertyChanged("OnlineFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CancelDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsCancelDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? CancelDate
		{
			get
			{
				return this.entityData.CancelDate; 
			}
			
			set
			{
				if (this.entityData.CancelDate == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.CancelDate, this.entityData.CancelDate);
				this.entityData.CancelDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.CancelDate, this.entityData.CancelDate);
				OnPropertyChanged("CancelDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserCnclId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserCnclIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserCnclId
		{
			get
			{
				return this.entityData.SeUserCnclId; 
			}
			
			set
			{
				if (this.entityData.SeUserCnclId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.SeUserCnclId, this.entityData.SeUserCnclId);
				this.entityData.SeUserCnclId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.SeUserCnclId, this.entityData.SeUserCnclId);
				OnPropertyChanged("SeUserCnclId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SpoSponsorId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSpoSponsorIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SpoSponsorId
		{
			get
			{
				return this.entityData.SpoSponsorId; 
			}
			
			set
			{
				if (this.entityData.SpoSponsorId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.SpoSponsorId, this.entityData.SpoSponsorId);
				this.entityData.SpoSponsorId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.SpoSponsorId, this.entityData.SpoSponsorId);
				OnPropertyChanged("SpoSponsorId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SpoFeeBalance property. 
		///		رصيد الكفيل  المستخدم فى الفاتورة
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSpoFeeBalanceNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"رصيد الكفيل  المستخدم فى الفاتورة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SpoFeeBalance
		{
			get
			{
				return this.entityData.SpoFeeBalance; 
			}
			
			set
			{
				if (this.entityData.SpoFeeBalance == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.SpoFeeBalance, this.entityData.SpoFeeBalance);
				this.entityData.SpoFeeBalance = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.SpoFeeBalance, this.entityData.SpoFeeBalance);
				OnPropertyChanged("SpoFeeBalance");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmApplicantId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmApplicantIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmApplicantId
		{
			get
			{
				return this.entityData.AdmApplicantId; 
			}
			
			set
			{
				if (this.entityData.AdmApplicantId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.AdmApplicantId, this.entityData.AdmApplicantId);
				this.entityData.AdmApplicantId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.AdmApplicantId, this.entityData.AdmApplicantId);
				OnPropertyChanged("AdmApplicantId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DiscAmount property. 
		///		usednot affect items
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsDiscAmountNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"usednot affect items"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? DiscAmount
		{
			get
			{
				return this.entityData.DiscAmount; 
			}
			
			set
			{
				if (this.entityData.DiscAmount == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.DiscAmount, this.entityData.DiscAmount);
				this.entityData.DiscAmount = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.DiscAmount, this.entityData.DiscAmount);
				OnPropertyChanged("DiscAmount");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CurTotBalance property. 
		///		اجمالى المدفوع
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCurTotBalanceNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"اجمالى المدفوع"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? CurTotBalance
		{
			get
			{
				return this.entityData.CurTotBalance; 
			}
			
			set
			{
				if (this.entityData.CurTotBalance == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.CurTotBalance, this.entityData.CurTotBalance);
				this.entityData.CurTotBalance = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.CurTotBalance, this.entityData.CurTotBalance);
				OnPropertyChanged("CurTotBalance");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CurTotRemain property. 
		///		اجمالى المدفوع
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCurTotRemainNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"اجمالى المدفوع"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? CurTotRemain
		{
			get
			{
				return this.entityData.CurTotRemain; 
			}
			
			set
			{
				if (this.entityData.CurTotRemain == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.CurTotRemain, this.entityData.CurTotRemain);
				this.entityData.CurTotRemain = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.CurTotRemain, this.entityData.CurTotRemain);
				OnPropertyChanged("CurTotRemain");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ExchangeRate property. 
		///		سعر تغيير العملة
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsExchangeRateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"سعر تغيير العملة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ExchangeRate
		{
			get
			{
				return this.entityData.ExchangeRate; 
			}
			
			set
			{
				if (this.entityData.ExchangeRate == value)
					return;
					
				OnColumnChanging(FeeStudVoucherColumn.ExchangeRate, this.entityData.ExchangeRate);
				this.entityData.ExchangeRate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherColumn.ExchangeRate, this.entityData.ExchangeRate);
				OnPropertyChanged("ExchangeRate");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="FeeCodeType"/>.
		/// </summary>
		/// <value>The source FeeCodeType for FeeCodeTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeCodeType FeeCodeTypeIdSource
      	{
            get { return entityData.FeeCodeTypeIdSource; }
            set { entityData.FeeCodeTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmApplicant"/>.
		/// </summary>
		/// <value>The source AdmApplicant for AdmApplicantId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmApplicant AdmApplicantIdSource
      	{
            get { return entityData.AdmApplicantIdSource; }
            set { entityData.AdmApplicantIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AsFacultyInfo"/>.
		/// </summary>
		/// <value>The source AsFacultyInfo for AsFacultyInfoId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AsFacultyInfo AsFacultyInfoIdSource
      	{
            get { return entityData.AsFacultyInfoIdSource; }
            set { entityData.AsFacultyInfoIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdAcadYear"/>.
		/// </summary>
		/// <value>The source EdAcadYear for EdAcadYearId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdAcadYear EdAcadYearIdSource
      	{
            get { return entityData.EdAcadYearIdSource; }
            set { entityData.EdAcadYearIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeSemester"/>.
		/// </summary>
		/// <value>The source EdCodeSemester for EdCodeSemesterId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeSemester EdCodeSemesterIdSource
      	{
            get { return entityData.EdCodeSemesterIdSource; }
            set { entityData.EdCodeSemesterIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStud"/>.
		/// </summary>
		/// <value>The source EdStud for EdStudId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStud EdStudIdSource
      	{
            get { return entityData.EdStudIdSource; }
            set { entityData.EdStudIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="FeeCodeBanks"/>.
		/// </summary>
		/// <value>The source FeeCodeBanks for FeeCodeBankId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeCodeBanks FeeCodeBankIdSource
      	{
            get { return entityData.FeeCodeBankIdSource; }
            set { entityData.FeeCodeBankIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeCurrency"/>.
		/// </summary>
		/// <value>The source GsCodeCurrency for GsCodeCurrencyId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeCurrency GsCodeCurrencyIdSource
      	{
            get { return entityData.GsCodeCurrencyIdSource; }
            set { entityData.GsCodeCurrencyIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodePayMethod"/>.
		/// </summary>
		/// <value>The source GsCodePayMethod for GsCodePayMethodId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodePayMethod GsCodePayMethodIdSource
      	{
            get { return entityData.GsCodePayMethodIdSource; }
            set { entityData.GsCodePayMethodIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SeUser"/>.
		/// </summary>
		/// <value>The source SeUser for SeUserId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SeUser SeUserIdSource
      	{
            get { return entityData.SeUserIdSource; }
            set { entityData.SeUserIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SeUser"/>.
		/// </summary>
		/// <value>The source SeUser for SeUserCnclId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SeUser SeUserCnclIdSource
      	{
            get { return entityData.SeUserCnclIdSource; }
            set { entityData.SeUserCnclIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SpoSponsor"/>.
		/// </summary>
		/// <value>The source SpoSponsor for SpoSponsorId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SpoSponsor SpoSponsorIdSource
      	{
            get { return entityData.SpoSponsorIdSource; }
            set { entityData.SpoSponsorIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of FeeTreasury objects
		///	which are related to this object through the relation FK_FEE_TREASURY_FEE_STUD_VOUCHER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeTreasury> FeeTreasuryCollection
		{
			get { return entityData.FeeTreasuryCollection; }
			set { entityData.FeeTreasuryCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudVoucherPayMthod objects
		///	which are related to this object through the relation FK_FEE_STUD_VOUCHER_PAY_MTHOD_FEE_STUD_VOUCHER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudVoucherPayMthod> FeeStudVoucherPayMthodCollection
		{
			get { return entityData.FeeStudVoucherPayMthodCollection; }
			set { entityData.FeeStudVoucherPayMthodCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudVoucherItem objects
		///	which are related to this object through the relation FK_FEE_STUD_VOUCHER_ITEM_FEE_STUD_VOUCHER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudVoucherItem> FeeStudVoucherItemCollection
		{
			get { return entityData.FeeStudVoucherItemCollection; }
			set { entityData.FeeStudVoucherItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeVoucherInvoc objects
		///	which are related to this object through the relation FK_FEE_VOUCHER_INVOC_FEE_STUD_VOUCHER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeVoucherInvoc> FeeVoucherInvocCollection
		{
			get { return entityData.FeeVoucherInvocCollection; }
			set { entityData.FeeVoucherInvocCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("ReceiptNum", "Receipt Num", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Notes", "Notes", 250));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("UserName", "User Name", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("CheqNum", "Cheq Num", 150));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("AccntNum", "Accnt Num", 150));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "FEE_STUD_VOUCHER"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"FEE_STUD_VOUCHER_ID", "VOUCHER_SERIAL", "VOUCHER_DATE", "ED_STUD_ID", "ED_ACAD_YEAR_ID", "AS_FACULTY_INFO_ID", "TOTAL_AMOUNT", "RECEIPT_NUM", "RECEIPT_DATE", "GS_CODE_CURRENCY_ID", "GS_CODE_PAY_METHOD_ID", "FEE_CODE_BANK_ID", "FEE_CODE_TYPE_ID", "PAY_FLG", "BALANCE_FLG", "CANCEL_FLG", "ED_CODE_SEMESTER_ID", "NOTES", "SE_USER_ID", "User_Name", "CHEQ_NUM", "ACCNT_NUM", "ATTCHD_DOC", "STUD_FEE_BALANCE", "TOTAL_PAYED", "LAST_DATE", "ONLINE_FLG", "CANCEL_DATE", "SE_USER_CNCL_ID", "SPO_SPONSOR_ID", "SPO_FEE_BALANCE", "ADM_APPLICANT_ID", "DISC_AMOUNT", "CUR_TOT_BALANCE", "CUR_TOT_REMAIN", "EXCHANGE_RATE"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as FeeStudVoucherEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (FeeStudVoucher) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<FeeStudVoucher>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as FeeStudVoucher);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed FeeStudVoucher Entity 
		///</summary>
		protected virtual FeeStudVoucher Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			FeeStudVoucher copy = new FeeStudVoucher();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.FeeStudVoucherId = this.FeeStudVoucherId;
					copy.OriginalFeeStudVoucherId = this.OriginalFeeStudVoucherId;
				copy.VoucherSerial = this.VoucherSerial;
				copy.VoucherDate = this.VoucherDate;
				copy.EdStudId = this.EdStudId;
				copy.EdAcadYearId = this.EdAcadYearId;
				copy.AsFacultyInfoId = this.AsFacultyInfoId;
				copy.TotalAmount = this.TotalAmount;
				copy.ReceiptNum = this.ReceiptNum;
				copy.ReceiptDate = this.ReceiptDate;
				copy.GsCodeCurrencyId = this.GsCodeCurrencyId;
				copy.GsCodePayMethodId = this.GsCodePayMethodId;
				copy.FeeCodeBankId = this.FeeCodeBankId;
				copy.FeeCodeTypeId = this.FeeCodeTypeId;
				copy.PayFlg = this.PayFlg;
				copy.BalanceFlg = this.BalanceFlg;
				copy.CancelFlg = this.CancelFlg;
				copy.EdCodeSemesterId = this.EdCodeSemesterId;
				copy.Notes = this.Notes;
				copy.SeUserId = this.SeUserId;
				copy.UserName = this.UserName;
				copy.CheqNum = this.CheqNum;
				copy.AccntNum = this.AccntNum;
				copy.AttchdDoc = this.AttchdDoc;
				copy.StudFeeBalance = this.StudFeeBalance;
				copy.TotalPayed = this.TotalPayed;
				copy.LastDate = this.LastDate;
				copy.OnlineFlg = this.OnlineFlg;
				copy.CancelDate = this.CancelDate;
				copy.SeUserCnclId = this.SeUserCnclId;
				copy.SpoSponsorId = this.SpoSponsorId;
				copy.SpoFeeBalance = this.SpoFeeBalance;
				copy.AdmApplicantId = this.AdmApplicantId;
				copy.DiscAmount = this.DiscAmount;
				copy.CurTotBalance = this.CurTotBalance;
				copy.CurTotRemain = this.CurTotRemain;
				copy.ExchangeRate = this.ExchangeRate;
			
			if (this.FeeCodeTypeIdSource != null && existingCopies.Contains(this.FeeCodeTypeIdSource))
				copy.FeeCodeTypeIdSource = existingCopies[this.FeeCodeTypeIdSource] as FeeCodeType;
			else
				copy.FeeCodeTypeIdSource = MakeCopyOf(this.FeeCodeTypeIdSource, existingCopies) as FeeCodeType;
			if (this.AdmApplicantIdSource != null && existingCopies.Contains(this.AdmApplicantIdSource))
				copy.AdmApplicantIdSource = existingCopies[this.AdmApplicantIdSource] as AdmApplicant;
			else
				copy.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource, existingCopies) as AdmApplicant;
			if (this.AsFacultyInfoIdSource != null && existingCopies.Contains(this.AsFacultyInfoIdSource))
				copy.AsFacultyInfoIdSource = existingCopies[this.AsFacultyInfoIdSource] as AsFacultyInfo;
			else
				copy.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource, existingCopies) as AsFacultyInfo;
			if (this.EdAcadYearIdSource != null && existingCopies.Contains(this.EdAcadYearIdSource))
				copy.EdAcadYearIdSource = existingCopies[this.EdAcadYearIdSource] as EdAcadYear;
			else
				copy.EdAcadYearIdSource = MakeCopyOf(this.EdAcadYearIdSource, existingCopies) as EdAcadYear;
			if (this.EdCodeSemesterIdSource != null && existingCopies.Contains(this.EdCodeSemesterIdSource))
				copy.EdCodeSemesterIdSource = existingCopies[this.EdCodeSemesterIdSource] as EdCodeSemester;
			else
				copy.EdCodeSemesterIdSource = MakeCopyOf(this.EdCodeSemesterIdSource, existingCopies) as EdCodeSemester;
			if (this.EdStudIdSource != null && existingCopies.Contains(this.EdStudIdSource))
				copy.EdStudIdSource = existingCopies[this.EdStudIdSource] as EdStud;
			else
				copy.EdStudIdSource = MakeCopyOf(this.EdStudIdSource, existingCopies) as EdStud;
			if (this.FeeCodeBankIdSource != null && existingCopies.Contains(this.FeeCodeBankIdSource))
				copy.FeeCodeBankIdSource = existingCopies[this.FeeCodeBankIdSource] as FeeCodeBanks;
			else
				copy.FeeCodeBankIdSource = MakeCopyOf(this.FeeCodeBankIdSource, existingCopies) as FeeCodeBanks;
			if (this.GsCodeCurrencyIdSource != null && existingCopies.Contains(this.GsCodeCurrencyIdSource))
				copy.GsCodeCurrencyIdSource = existingCopies[this.GsCodeCurrencyIdSource] as GsCodeCurrency;
			else
				copy.GsCodeCurrencyIdSource = MakeCopyOf(this.GsCodeCurrencyIdSource, existingCopies) as GsCodeCurrency;
			if (this.GsCodePayMethodIdSource != null && existingCopies.Contains(this.GsCodePayMethodIdSource))
				copy.GsCodePayMethodIdSource = existingCopies[this.GsCodePayMethodIdSource] as GsCodePayMethod;
			else
				copy.GsCodePayMethodIdSource = MakeCopyOf(this.GsCodePayMethodIdSource, existingCopies) as GsCodePayMethod;
			if (this.SeUserIdSource != null && existingCopies.Contains(this.SeUserIdSource))
				copy.SeUserIdSource = existingCopies[this.SeUserIdSource] as SeUser;
			else
				copy.SeUserIdSource = MakeCopyOf(this.SeUserIdSource, existingCopies) as SeUser;
			if (this.SeUserCnclIdSource != null && existingCopies.Contains(this.SeUserCnclIdSource))
				copy.SeUserCnclIdSource = existingCopies[this.SeUserCnclIdSource] as SeUser;
			else
				copy.SeUserCnclIdSource = MakeCopyOf(this.SeUserCnclIdSource, existingCopies) as SeUser;
			if (this.SpoSponsorIdSource != null && existingCopies.Contains(this.SpoSponsorIdSource))
				copy.SpoSponsorIdSource = existingCopies[this.SpoSponsorIdSource] as SpoSponsor;
			else
				copy.SpoSponsorIdSource = MakeCopyOf(this.SpoSponsorIdSource, existingCopies) as SpoSponsor;
		
			//deep copy nested objects
			copy.FeeTreasuryCollection = (TList<FeeTreasury>) MakeCopyOf(this.FeeTreasuryCollection, existingCopies); 
			copy.FeeStudVoucherPayMthodCollection = (TList<FeeStudVoucherPayMthod>) MakeCopyOf(this.FeeStudVoucherPayMthodCollection, existingCopies); 
			copy.FeeStudVoucherItemCollection = (TList<FeeStudVoucherItem>) MakeCopyOf(this.FeeStudVoucherItemCollection, existingCopies); 
			copy.FeeVoucherInvocCollection = (TList<FeeVoucherInvoc>) MakeCopyOf(this.FeeVoucherInvocCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed FeeStudVoucher Entity 
		///</summary>
		public virtual FeeStudVoucher Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed FeeStudVoucher Entity which is a deep copy of the current entity.
		///</summary>
		public virtual FeeStudVoucher DeepCopy()
		{
			return EntityHelper.Clone<FeeStudVoucher>(this as FeeStudVoucher);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as FeeStudVoucherEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new FeeStudVoucherEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as FeeStudVoucherEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(FeeStudVoucherColumn column)
		{
			switch(column)
			{
					case FeeStudVoucherColumn.FeeStudVoucherId:
					return entityData.FeeStudVoucherId != _originalData.FeeStudVoucherId;
					case FeeStudVoucherColumn.VoucherSerial:
					return entityData.VoucherSerial != _originalData.VoucherSerial;
					case FeeStudVoucherColumn.VoucherDate:
					return entityData.VoucherDate != _originalData.VoucherDate;
					case FeeStudVoucherColumn.EdStudId:
					return entityData.EdStudId != _originalData.EdStudId;
					case FeeStudVoucherColumn.EdAcadYearId:
					return entityData.EdAcadYearId != _originalData.EdAcadYearId;
					case FeeStudVoucherColumn.AsFacultyInfoId:
					return entityData.AsFacultyInfoId != _originalData.AsFacultyInfoId;
					case FeeStudVoucherColumn.TotalAmount:
					return entityData.TotalAmount != _originalData.TotalAmount;
					case FeeStudVoucherColumn.ReceiptNum:
					return entityData.ReceiptNum != _originalData.ReceiptNum;
					case FeeStudVoucherColumn.ReceiptDate:
					return entityData.ReceiptDate != _originalData.ReceiptDate;
					case FeeStudVoucherColumn.GsCodeCurrencyId:
					return entityData.GsCodeCurrencyId != _originalData.GsCodeCurrencyId;
					case FeeStudVoucherColumn.GsCodePayMethodId:
					return entityData.GsCodePayMethodId != _originalData.GsCodePayMethodId;
					case FeeStudVoucherColumn.FeeCodeBankId:
					return entityData.FeeCodeBankId != _originalData.FeeCodeBankId;
					case FeeStudVoucherColumn.FeeCodeTypeId:
					return entityData.FeeCodeTypeId != _originalData.FeeCodeTypeId;
					case FeeStudVoucherColumn.PayFlg:
					return entityData.PayFlg != _originalData.PayFlg;
					case FeeStudVoucherColumn.BalanceFlg:
					return entityData.BalanceFlg != _originalData.BalanceFlg;
					case FeeStudVoucherColumn.CancelFlg:
					return entityData.CancelFlg != _originalData.CancelFlg;
					case FeeStudVoucherColumn.EdCodeSemesterId:
					return entityData.EdCodeSemesterId != _originalData.EdCodeSemesterId;
					case FeeStudVoucherColumn.Notes:
					return entityData.Notes != _originalData.Notes;
					case FeeStudVoucherColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
					case FeeStudVoucherColumn.UserName:
					return entityData.UserName != _originalData.UserName;
					case FeeStudVoucherColumn.CheqNum:
					return entityData.CheqNum != _originalData.CheqNum;
					case FeeStudVoucherColumn.AccntNum:
					return entityData.AccntNum != _originalData.AccntNum;
					case FeeStudVoucherColumn.AttchdDoc:
					return entityData.AttchdDoc != _originalData.AttchdDoc;
					case FeeStudVoucherColumn.StudFeeBalance:
					return entityData.StudFeeBalance != _originalData.StudFeeBalance;
					case FeeStudVoucherColumn.TotalPayed:
					return entityData.TotalPayed != _originalData.TotalPayed;
					case FeeStudVoucherColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
					case FeeStudVoucherColumn.OnlineFlg:
					return entityData.OnlineFlg != _originalData.OnlineFlg;
					case FeeStudVoucherColumn.CancelDate:
					return entityData.CancelDate != _originalData.CancelDate;
					case FeeStudVoucherColumn.SeUserCnclId:
					return entityData.SeUserCnclId != _originalData.SeUserCnclId;
					case FeeStudVoucherColumn.SpoSponsorId:
					return entityData.SpoSponsorId != _originalData.SpoSponsorId;
					case FeeStudVoucherColumn.SpoFeeBalance:
					return entityData.SpoFeeBalance != _originalData.SpoFeeBalance;
					case FeeStudVoucherColumn.AdmApplicantId:
					return entityData.AdmApplicantId != _originalData.AdmApplicantId;
					case FeeStudVoucherColumn.DiscAmount:
					return entityData.DiscAmount != _originalData.DiscAmount;
					case FeeStudVoucherColumn.CurTotBalance:
					return entityData.CurTotBalance != _originalData.CurTotBalance;
					case FeeStudVoucherColumn.CurTotRemain:
					return entityData.CurTotRemain != _originalData.CurTotRemain;
					case FeeStudVoucherColumn.ExchangeRate:
					return entityData.ExchangeRate != _originalData.ExchangeRate;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< FeeStudVoucherColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.FeeStudVoucherId != _originalData.FeeStudVoucherId;
			result = result || entityData.VoucherSerial != _originalData.VoucherSerial;
			result = result || entityData.VoucherDate != _originalData.VoucherDate;
			result = result || entityData.EdStudId != _originalData.EdStudId;
			result = result || entityData.EdAcadYearId != _originalData.EdAcadYearId;
			result = result || entityData.AsFacultyInfoId != _originalData.AsFacultyInfoId;
			result = result || entityData.TotalAmount != _originalData.TotalAmount;
			result = result || entityData.ReceiptNum != _originalData.ReceiptNum;
			result = result || entityData.ReceiptDate != _originalData.ReceiptDate;
			result = result || entityData.GsCodeCurrencyId != _originalData.GsCodeCurrencyId;
			result = result || entityData.GsCodePayMethodId != _originalData.GsCodePayMethodId;
			result = result || entityData.FeeCodeBankId != _originalData.FeeCodeBankId;
			result = result || entityData.FeeCodeTypeId != _originalData.FeeCodeTypeId;
			result = result || entityData.PayFlg != _originalData.PayFlg;
			result = result || entityData.BalanceFlg != _originalData.BalanceFlg;
			result = result || entityData.CancelFlg != _originalData.CancelFlg;
			result = result || entityData.EdCodeSemesterId != _originalData.EdCodeSemesterId;
			result = result || entityData.Notes != _originalData.Notes;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			result = result || entityData.UserName != _originalData.UserName;
			result = result || entityData.CheqNum != _originalData.CheqNum;
			result = result || entityData.AccntNum != _originalData.AccntNum;
			result = result || entityData.AttchdDoc != _originalData.AttchdDoc;
			result = result || entityData.StudFeeBalance != _originalData.StudFeeBalance;
			result = result || entityData.TotalPayed != _originalData.TotalPayed;
			result = result || entityData.LastDate != _originalData.LastDate;
			result = result || entityData.OnlineFlg != _originalData.OnlineFlg;
			result = result || entityData.CancelDate != _originalData.CancelDate;
			result = result || entityData.SeUserCnclId != _originalData.SeUserCnclId;
			result = result || entityData.SpoSponsorId != _originalData.SpoSponsorId;
			result = result || entityData.SpoFeeBalance != _originalData.SpoFeeBalance;
			result = result || entityData.AdmApplicantId != _originalData.AdmApplicantId;
			result = result || entityData.DiscAmount != _originalData.DiscAmount;
			result = result || entityData.CurTotBalance != _originalData.CurTotBalance;
			result = result || entityData.CurTotRemain != _originalData.CurTotRemain;
			result = result || entityData.ExchangeRate != _originalData.ExchangeRate;
			return result;
		}	
		
		///<summary>
		///  Returns a FeeStudVoucher Entity with the original data.
		///</summary>
		public FeeStudVoucher GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateFeeStudVoucher(
				_originalData.FeeStudVoucherId,
				_originalData.VoucherSerial,
				_originalData.VoucherDate,
				_originalData.EdStudId,
				_originalData.EdAcadYearId,
				_originalData.AsFacultyInfoId,
				_originalData.TotalAmount,
				_originalData.ReceiptNum,
				_originalData.ReceiptDate,
				_originalData.GsCodeCurrencyId,
				_originalData.GsCodePayMethodId,
				_originalData.FeeCodeBankId,
				_originalData.FeeCodeTypeId,
				_originalData.PayFlg,
				_originalData.BalanceFlg,
				_originalData.CancelFlg,
				_originalData.EdCodeSemesterId,
				_originalData.Notes,
				_originalData.SeUserId,
				_originalData.UserName,
				_originalData.CheqNum,
				_originalData.AccntNum,
				_originalData.AttchdDoc,
				_originalData.StudFeeBalance,
				_originalData.TotalPayed,
				_originalData.LastDate,
				_originalData.OnlineFlg,
				_originalData.CancelDate,
				_originalData.SeUserCnclId,
				_originalData.SpoSponsorId,
				_originalData.SpoFeeBalance,
				_originalData.AdmApplicantId,
				_originalData.DiscAmount,
				_originalData.CurTotBalance,
				_originalData.CurTotRemain,
				_originalData.ExchangeRate
				);
				
			return (FeeStudVoucher)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="FeeStudVoucherBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is FeeStudVoucherBase)
				return ValueEquals(this, (FeeStudVoucherBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="FeeStudVoucherBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.FeeStudVoucherId.GetHashCode() ^ 
					((this.VoucherSerial == null) ? string.Empty : this.VoucherSerial.ToString()).GetHashCode() ^ 
					this.VoucherDate.GetHashCode() ^ 
					((this.EdStudId == null) ? string.Empty : this.EdStudId.ToString()).GetHashCode() ^ 
					this.EdAcadYearId.GetHashCode() ^ 
					((this.AsFacultyInfoId == null) ? string.Empty : this.AsFacultyInfoId.ToString()).GetHashCode() ^ 
					this.TotalAmount.GetHashCode() ^ 
					((this.ReceiptNum == null) ? string.Empty : this.ReceiptNum.ToString()).GetHashCode() ^ 
					((this.ReceiptDate == null) ? string.Empty : this.ReceiptDate.ToString()).GetHashCode() ^ 
					this.GsCodeCurrencyId.GetHashCode() ^ 
					((this.GsCodePayMethodId == null) ? string.Empty : this.GsCodePayMethodId.ToString()).GetHashCode() ^ 
					((this.FeeCodeBankId == null) ? string.Empty : this.FeeCodeBankId.ToString()).GetHashCode() ^ 
					((this.FeeCodeTypeId == null) ? string.Empty : this.FeeCodeTypeId.ToString()).GetHashCode() ^ 
					((this.PayFlg == null) ? string.Empty : this.PayFlg.ToString()).GetHashCode() ^ 
					this.BalanceFlg.GetHashCode() ^ 
					((this.CancelFlg == null) ? string.Empty : this.CancelFlg.ToString()).GetHashCode() ^ 
					this.EdCodeSemesterId.GetHashCode() ^ 
					((this.Notes == null) ? string.Empty : this.Notes.ToString()).GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode() ^ 
					((this.UserName == null) ? string.Empty : this.UserName.ToString()).GetHashCode() ^ 
					((this.CheqNum == null) ? string.Empty : this.CheqNum.ToString()).GetHashCode() ^ 
					((this.AccntNum == null) ? string.Empty : this.AccntNum.ToString()).GetHashCode() ^ 
					((this.AttchdDoc == null) ? string.Empty : this.AttchdDoc.ToString()).GetHashCode() ^ 
					((this.StudFeeBalance == null) ? string.Empty : this.StudFeeBalance.ToString()).GetHashCode() ^ 
					((this.TotalPayed == null) ? string.Empty : this.TotalPayed.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode() ^ 
					((this.OnlineFlg == null) ? string.Empty : this.OnlineFlg.ToString()).GetHashCode() ^ 
					((this.CancelDate == null) ? string.Empty : this.CancelDate.ToString()).GetHashCode() ^ 
					((this.SeUserCnclId == null) ? string.Empty : this.SeUserCnclId.ToString()).GetHashCode() ^ 
					((this.SpoSponsorId == null) ? string.Empty : this.SpoSponsorId.ToString()).GetHashCode() ^ 
					((this.SpoFeeBalance == null) ? string.Empty : this.SpoFeeBalance.ToString()).GetHashCode() ^ 
					((this.AdmApplicantId == null) ? string.Empty : this.AdmApplicantId.ToString()).GetHashCode() ^ 
					((this.DiscAmount == null) ? string.Empty : this.DiscAmount.ToString()).GetHashCode() ^ 
					((this.CurTotBalance == null) ? string.Empty : this.CurTotBalance.ToString()).GetHashCode() ^ 
					((this.CurTotRemain == null) ? string.Empty : this.CurTotRemain.ToString()).GetHashCode() ^ 
					((this.ExchangeRate == null) ? string.Empty : this.ExchangeRate.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="FeeStudVoucherBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(FeeStudVoucherBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="FeeStudVoucherBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="FeeStudVoucherBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="FeeStudVoucherBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(FeeStudVoucherBase Object1, FeeStudVoucherBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.FeeStudVoucherId != Object2.FeeStudVoucherId)
				equal = false;
			if ( Object1.VoucherSerial != null && Object2.VoucherSerial != null )
			{
				if (Object1.VoucherSerial != Object2.VoucherSerial)
					equal = false;
			}
			else if (Object1.VoucherSerial == null ^ Object2.VoucherSerial == null )
			{
				equal = false;
			}
			if (Object1.VoucherDate != Object2.VoucherDate)
				equal = false;
			if ( Object1.EdStudId != null && Object2.EdStudId != null )
			{
				if (Object1.EdStudId != Object2.EdStudId)
					equal = false;
			}
			else if (Object1.EdStudId == null ^ Object2.EdStudId == null )
			{
				equal = false;
			}
			if (Object1.EdAcadYearId != Object2.EdAcadYearId)
				equal = false;
			if ( Object1.AsFacultyInfoId != null && Object2.AsFacultyInfoId != null )
			{
				if (Object1.AsFacultyInfoId != Object2.AsFacultyInfoId)
					equal = false;
			}
			else if (Object1.AsFacultyInfoId == null ^ Object2.AsFacultyInfoId == null )
			{
				equal = false;
			}
			if (Object1.TotalAmount != Object2.TotalAmount)
				equal = false;
			if ( Object1.ReceiptNum != null && Object2.ReceiptNum != null )
			{
				if (Object1.ReceiptNum != Object2.ReceiptNum)
					equal = false;
			}
			else if (Object1.ReceiptNum == null ^ Object2.ReceiptNum == null )
			{
				equal = false;
			}
			if ( Object1.ReceiptDate != null && Object2.ReceiptDate != null )
			{
				if (Object1.ReceiptDate != Object2.ReceiptDate)
					equal = false;
			}
			else if (Object1.ReceiptDate == null ^ Object2.ReceiptDate == null )
			{
				equal = false;
			}
			if (Object1.GsCodeCurrencyId != Object2.GsCodeCurrencyId)
				equal = false;
			if ( Object1.GsCodePayMethodId != null && Object2.GsCodePayMethodId != null )
			{
				if (Object1.GsCodePayMethodId != Object2.GsCodePayMethodId)
					equal = false;
			}
			else if (Object1.GsCodePayMethodId == null ^ Object2.GsCodePayMethodId == null )
			{
				equal = false;
			}
			if ( Object1.FeeCodeBankId != null && Object2.FeeCodeBankId != null )
			{
				if (Object1.FeeCodeBankId != Object2.FeeCodeBankId)
					equal = false;
			}
			else if (Object1.FeeCodeBankId == null ^ Object2.FeeCodeBankId == null )
			{
				equal = false;
			}
			if ( Object1.FeeCodeTypeId != null && Object2.FeeCodeTypeId != null )
			{
				if (Object1.FeeCodeTypeId != Object2.FeeCodeTypeId)
					equal = false;
			}
			else if (Object1.FeeCodeTypeId == null ^ Object2.FeeCodeTypeId == null )
			{
				equal = false;
			}
			if ( Object1.PayFlg != null && Object2.PayFlg != null )
			{
				if (Object1.PayFlg != Object2.PayFlg)
					equal = false;
			}
			else if (Object1.PayFlg == null ^ Object2.PayFlg == null )
			{
				equal = false;
			}
			if (Object1.BalanceFlg != Object2.BalanceFlg)
				equal = false;
			if ( Object1.CancelFlg != null && Object2.CancelFlg != null )
			{
				if (Object1.CancelFlg != Object2.CancelFlg)
					equal = false;
			}
			else if (Object1.CancelFlg == null ^ Object2.CancelFlg == null )
			{
				equal = false;
			}
			if (Object1.EdCodeSemesterId != Object2.EdCodeSemesterId)
				equal = false;
			if ( Object1.Notes != null && Object2.Notes != null )
			{
				if (Object1.Notes != Object2.Notes)
					equal = false;
			}
			else if (Object1.Notes == null ^ Object2.Notes == null )
			{
				equal = false;
			}
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
			if ( Object1.UserName != null && Object2.UserName != null )
			{
				if (Object1.UserName != Object2.UserName)
					equal = false;
			}
			else if (Object1.UserName == null ^ Object2.UserName == null )
			{
				equal = false;
			}
			if ( Object1.CheqNum != null && Object2.CheqNum != null )
			{
				if (Object1.CheqNum != Object2.CheqNum)
					equal = false;
			}
			else if (Object1.CheqNum == null ^ Object2.CheqNum == null )
			{
				equal = false;
			}
			if ( Object1.AccntNum != null && Object2.AccntNum != null )
			{
				if (Object1.AccntNum != Object2.AccntNum)
					equal = false;
			}
			else if (Object1.AccntNum == null ^ Object2.AccntNum == null )
			{
				equal = false;
			}
			if ( Object1.AttchdDoc != null && Object2.AttchdDoc != null )
			{
				if (Object1.AttchdDoc != Object2.AttchdDoc)
					equal = false;
			}
			else if (Object1.AttchdDoc == null ^ Object2.AttchdDoc == null )
			{
				equal = false;
			}
			if ( Object1.StudFeeBalance != null && Object2.StudFeeBalance != null )
			{
				if (Object1.StudFeeBalance != Object2.StudFeeBalance)
					equal = false;
			}
			else if (Object1.StudFeeBalance == null ^ Object2.StudFeeBalance == null )
			{
				equal = false;
			}
			if ( Object1.TotalPayed != null && Object2.TotalPayed != null )
			{
				if (Object1.TotalPayed != Object2.TotalPayed)
					equal = false;
			}
			else if (Object1.TotalPayed == null ^ Object2.TotalPayed == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
			if ( Object1.OnlineFlg != null && Object2.OnlineFlg != null )
			{
				if (Object1.OnlineFlg != Object2.OnlineFlg)
					equal = false;
			}
			else if (Object1.OnlineFlg == null ^ Object2.OnlineFlg == null )
			{
				equal = false;
			}
			if ( Object1.CancelDate != null && Object2.CancelDate != null )
			{
				if (Object1.CancelDate != Object2.CancelDate)
					equal = false;
			}
			else if (Object1.CancelDate == null ^ Object2.CancelDate == null )
			{
				equal = false;
			}
			if ( Object1.SeUserCnclId != null && Object2.SeUserCnclId != null )
			{
				if (Object1.SeUserCnclId != Object2.SeUserCnclId)
					equal = false;
			}
			else if (Object1.SeUserCnclId == null ^ Object2.SeUserCnclId == null )
			{
				equal = false;
			}
			if ( Object1.SpoSponsorId != null && Object2.SpoSponsorId != null )
			{
				if (Object1.SpoSponsorId != Object2.SpoSponsorId)
					equal = false;
			}
			else if (Object1.SpoSponsorId == null ^ Object2.SpoSponsorId == null )
			{
				equal = false;
			}
			if ( Object1.SpoFeeBalance != null && Object2.SpoFeeBalance != null )
			{
				if (Object1.SpoFeeBalance != Object2.SpoFeeBalance)
					equal = false;
			}
			else if (Object1.SpoFeeBalance == null ^ Object2.SpoFeeBalance == null )
			{
				equal = false;
			}
			if ( Object1.AdmApplicantId != null && Object2.AdmApplicantId != null )
			{
				if (Object1.AdmApplicantId != Object2.AdmApplicantId)
					equal = false;
			}
			else if (Object1.AdmApplicantId == null ^ Object2.AdmApplicantId == null )
			{
				equal = false;
			}
			if ( Object1.DiscAmount != null && Object2.DiscAmount != null )
			{
				if (Object1.DiscAmount != Object2.DiscAmount)
					equal = false;
			}
			else if (Object1.DiscAmount == null ^ Object2.DiscAmount == null )
			{
				equal = false;
			}
			if ( Object1.CurTotBalance != null && Object2.CurTotBalance != null )
			{
				if (Object1.CurTotBalance != Object2.CurTotBalance)
					equal = false;
			}
			else if (Object1.CurTotBalance == null ^ Object2.CurTotBalance == null )
			{
				equal = false;
			}
			if ( Object1.CurTotRemain != null && Object2.CurTotRemain != null )
			{
				if (Object1.CurTotRemain != Object2.CurTotRemain)
					equal = false;
			}
			else if (Object1.CurTotRemain == null ^ Object2.CurTotRemain == null )
			{
				equal = false;
			}
			if ( Object1.ExchangeRate != null && Object2.ExchangeRate != null )
			{
				if (Object1.ExchangeRate != Object2.ExchangeRate)
					equal = false;
			}
			else if (Object1.ExchangeRate == null ^ Object2.ExchangeRate == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((FeeStudVoucherBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static FeeStudVoucherComparer GetComparer()
        {
            return new FeeStudVoucherComparer();
        }
        */

        // Comparer delegates back to FeeStudVoucher
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(FeeStudVoucher rhs, FeeStudVoucherColumn which)
        {
            switch (which)
            {
            	
            	
            	case FeeStudVoucherColumn.FeeStudVoucherId:
            		return this.FeeStudVoucherId.CompareTo(rhs.FeeStudVoucherId);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.VoucherSerial:
            		return this.VoucherSerial.Value.CompareTo(rhs.VoucherSerial.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.VoucherDate:
            		return this.VoucherDate.CompareTo(rhs.VoucherDate);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.EdStudId:
            		return this.EdStudId.Value.CompareTo(rhs.EdStudId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.EdAcadYearId:
            		return this.EdAcadYearId.CompareTo(rhs.EdAcadYearId);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.AsFacultyInfoId:
            		return this.AsFacultyInfoId.Value.CompareTo(rhs.AsFacultyInfoId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.TotalAmount:
            		return this.TotalAmount.CompareTo(rhs.TotalAmount);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.ReceiptNum:
            		return this.ReceiptNum.CompareTo(rhs.ReceiptNum);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.ReceiptDate:
            		return this.ReceiptDate.Value.CompareTo(rhs.ReceiptDate.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.GsCodeCurrencyId:
            		return this.GsCodeCurrencyId.CompareTo(rhs.GsCodeCurrencyId);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.GsCodePayMethodId:
            		return this.GsCodePayMethodId.Value.CompareTo(rhs.GsCodePayMethodId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.FeeCodeBankId:
            		return this.FeeCodeBankId.Value.CompareTo(rhs.FeeCodeBankId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.FeeCodeTypeId:
            		return this.FeeCodeTypeId.Value.CompareTo(rhs.FeeCodeTypeId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.PayFlg:
            		return this.PayFlg.Value.CompareTo(rhs.PayFlg.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.BalanceFlg:
            		return this.BalanceFlg.CompareTo(rhs.BalanceFlg);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.CancelFlg:
            		return this.CancelFlg.Value.CompareTo(rhs.CancelFlg.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.EdCodeSemesterId:
            		return this.EdCodeSemesterId.CompareTo(rhs.EdCodeSemesterId);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.Notes:
            		return this.Notes.CompareTo(rhs.Notes);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.UserName:
            		return this.UserName.CompareTo(rhs.UserName);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.CheqNum:
            		return this.CheqNum.CompareTo(rhs.CheqNum);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.AccntNum:
            		return this.AccntNum.CompareTo(rhs.AccntNum);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.AttchdDoc:
            		return this.AttchdDoc.CompareTo(rhs.AttchdDoc);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.StudFeeBalance:
            		return this.StudFeeBalance.Value.CompareTo(rhs.StudFeeBalance.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.TotalPayed:
            		return this.TotalPayed.Value.CompareTo(rhs.TotalPayed.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.OnlineFlg:
            		return this.OnlineFlg.Value.CompareTo(rhs.OnlineFlg.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.CancelDate:
            		return this.CancelDate.Value.CompareTo(rhs.CancelDate.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.SeUserCnclId:
            		return this.SeUserCnclId.Value.CompareTo(rhs.SeUserCnclId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.SpoSponsorId:
            		return this.SpoSponsorId.Value.CompareTo(rhs.SpoSponsorId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.SpoFeeBalance:
            		return this.SpoFeeBalance.Value.CompareTo(rhs.SpoFeeBalance.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.AdmApplicantId:
            		return this.AdmApplicantId.Value.CompareTo(rhs.AdmApplicantId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.DiscAmount:
            		return this.DiscAmount.Value.CompareTo(rhs.DiscAmount.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.CurTotBalance:
            		return this.CurTotBalance.Value.CompareTo(rhs.CurTotBalance.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.CurTotRemain:
            		return this.CurTotRemain.Value.CompareTo(rhs.CurTotRemain.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherColumn.ExchangeRate:
            		return this.ExchangeRate.Value.CompareTo(rhs.ExchangeRate.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<FeeStudVoucherKey> Members
		
		// member variable for the EntityId property
		private FeeStudVoucherKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual FeeStudVoucherKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new FeeStudVoucherKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("FeeStudVoucher")
					.Append("|").Append( this.FeeStudVoucherId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{37}{36}- FeeStudVoucherId: {0}{36}- VoucherSerial: {1}{36}- VoucherDate: {2}{36}- EdStudId: {3}{36}- EdAcadYearId: {4}{36}- AsFacultyInfoId: {5}{36}- TotalAmount: {6}{36}- ReceiptNum: {7}{36}- ReceiptDate: {8}{36}- GsCodeCurrencyId: {9}{36}- GsCodePayMethodId: {10}{36}- FeeCodeBankId: {11}{36}- FeeCodeTypeId: {12}{36}- PayFlg: {13}{36}- BalanceFlg: {14}{36}- CancelFlg: {15}{36}- EdCodeSemesterId: {16}{36}- Notes: {17}{36}- SeUserId: {18}{36}- UserName: {19}{36}- CheqNum: {20}{36}- AccntNum: {21}{36}- AttchdDoc: {22}{36}- StudFeeBalance: {23}{36}- TotalPayed: {24}{36}- LastDate: {25}{36}- OnlineFlg: {26}{36}- CancelDate: {27}{36}- SeUserCnclId: {28}{36}- SpoSponsorId: {29}{36}- SpoFeeBalance: {30}{36}- AdmApplicantId: {31}{36}- DiscAmount: {32}{36}- CurTotBalance: {33}{36}- CurTotRemain: {34}{36}- ExchangeRate: {35}{36}{38}", 
				this.FeeStudVoucherId,
				(this.VoucherSerial == null) ? string.Empty : this.VoucherSerial.ToString(),
				this.VoucherDate,
				(this.EdStudId == null) ? string.Empty : this.EdStudId.ToString(),
				this.EdAcadYearId,
				(this.AsFacultyInfoId == null) ? string.Empty : this.AsFacultyInfoId.ToString(),
				this.TotalAmount,
				(this.ReceiptNum == null) ? string.Empty : this.ReceiptNum.ToString(),
				(this.ReceiptDate == null) ? string.Empty : this.ReceiptDate.ToString(),
				this.GsCodeCurrencyId,
				(this.GsCodePayMethodId == null) ? string.Empty : this.GsCodePayMethodId.ToString(),
				(this.FeeCodeBankId == null) ? string.Empty : this.FeeCodeBankId.ToString(),
				(this.FeeCodeTypeId == null) ? string.Empty : this.FeeCodeTypeId.ToString(),
				(this.PayFlg == null) ? string.Empty : this.PayFlg.ToString(),
				this.BalanceFlg,
				(this.CancelFlg == null) ? string.Empty : this.CancelFlg.ToString(),
				this.EdCodeSemesterId,
				(this.Notes == null) ? string.Empty : this.Notes.ToString(),
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				(this.UserName == null) ? string.Empty : this.UserName.ToString(),
				(this.CheqNum == null) ? string.Empty : this.CheqNum.ToString(),
				(this.AccntNum == null) ? string.Empty : this.AccntNum.ToString(),
				(this.AttchdDoc == null) ? string.Empty : this.AttchdDoc.ToString(),
				(this.StudFeeBalance == null) ? string.Empty : this.StudFeeBalance.ToString(),
				(this.TotalPayed == null) ? string.Empty : this.TotalPayed.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				(this.OnlineFlg == null) ? string.Empty : this.OnlineFlg.ToString(),
				(this.CancelDate == null) ? string.Empty : this.CancelDate.ToString(),
				(this.SeUserCnclId == null) ? string.Empty : this.SeUserCnclId.ToString(),
				(this.SpoSponsorId == null) ? string.Empty : this.SpoSponsorId.ToString(),
				(this.SpoFeeBalance == null) ? string.Empty : this.SpoFeeBalance.ToString(),
				(this.AdmApplicantId == null) ? string.Empty : this.AdmApplicantId.ToString(),
				(this.DiscAmount == null) ? string.Empty : this.DiscAmount.ToString(),
				(this.CurTotBalance == null) ? string.Empty : this.CurTotBalance.ToString(),
				(this.CurTotRemain == null) ? string.Empty : this.CurTotRemain.ToString(),
				(this.ExchangeRate == null) ? string.Empty : this.ExchangeRate.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'FEE_STUD_VOUCHER' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class FeeStudVoucherEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// FEE_STUD_VOUCHER_ID : اذن دفع/ايصال سداد
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "FEE_STUD_VOUCHER"</remarks>
		public System.Decimal FeeStudVoucherId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalFeeStudVoucherId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// VOUCHER_SERIAL : 
		/// </summary>
		public System.Decimal?		  VoucherSerial = null;
		
		/// <summary>
		/// VOUCHER_DATE : 
		/// </summary>
		public System.DateTime		  VoucherDate = DateTime.MinValue;
		
		/// <summary>
		/// ED_STUD_ID : KU sponsor
		/// </summary>
		public System.Decimal?		  EdStudId = null;
		
		/// <summary>
		/// ED_ACAD_YEAR_ID : 
		/// </summary>
		public System.Decimal		  EdAcadYearId = 0.0m;
		
		/// <summary>
		/// AS_FACULTY_INFO_ID : 
		/// </summary>
		public System.Decimal?		  AsFacultyInfoId = null;
		
		/// <summary>
		/// TOTAL_AMOUNT : اجمالى القيم المسددة
		/// </summary>
		public System.Decimal		  TotalAmount = 0.0m;
		
		/// <summary>
		/// RECEIPT_NUM : 
		/// </summary>
		public System.String		  ReceiptNum = null;
		
		/// <summary>
		/// RECEIPT_DATE : 
		/// </summary>
		public System.DateTime?		  ReceiptDate = null;
		
		/// <summary>
		/// GS_CODE_CURRENCY_ID : 
		/// </summary>
		public System.Decimal		  GsCodeCurrencyId = 0.0m;
		
		/// <summary>
		/// GS_CODE_PAY_METHOD_ID : 
		/// </summary>
		public System.Decimal?		  GsCodePayMethodId = null;
		
		/// <summary>
		/// FEE_CODE_BANK_ID : 
		/// </summary>
		public System.Decimal?		  FeeCodeBankId = null;
		
		/// <summary>
		/// FEE_CODE_TYPE_ID : 
		/// </summary>
		public System.Decimal?		  FeeCodeTypeId = null;
		
		/// <summary>
		/// PAY_FLG : 
		/// </summary>
		public System.Decimal?		  PayFlg = null;
		
		/// <summary>
		/// BALANCE_FLG : 1: add to balance, 0 payy balance,3:Current balance of student
		/// </summary>
		public System.Decimal		  BalanceFlg = 0.0m;
		
		/// <summary>
		/// CANCEL_FLG : 
		/// </summary>
		public System.Boolean?		  CancelFlg = null;
		
		/// <summary>
		/// ED_CODE_SEMESTER_ID : 
		/// </summary>
		public System.Decimal		  EdCodeSemesterId = 0.0m;
		
		/// <summary>
		/// NOTES : بيان ايصال السداد
		/// </summary>
		public System.String		  Notes = null;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		
		/// <summary>
		/// User_Name : =web if online
		/// </summary>
		public System.String		  UserName = null;
		
		/// <summary>
		/// CHEQ_NUM : رقم الشيك فى حالة دفع بالشيك
		/// </summary>
		public System.String		  CheqNum = null;
		
		/// <summary>
		/// ACCNT_NUM : رقم حساب البنك  فى حالة ايداع
		/// </summary>
		public System.String		  AccntNum = null;
		
		/// <summary>
		/// ATTCHD_DOC : صورة الشيك او مرفق
		/// </summary>
		public System.String		  AttchdDoc = null;
		
		/// <summary>
		/// STUD_FEE_BALANCE : رصيد الطالب المستخدم فى الفاتورة
		/// </summary>
		public System.Decimal?		  StudFeeBalance = null;
		
		/// <summary>
		/// TOTAL_PAYED : اجمالى المدفوع
		/// </summary>
		public System.Decimal?		  TotalPayed = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		
		/// <summary>
		/// ONLINE_FLG : Angham:
		/// 		/// 1 فى ku فيزا   XXXX  (Should use PAYMENT_METHOD)
		/// 		/// 
		/// 		/// شاشه فورى للططالب بيكون Fee_Stud_Voucher.Online=2
		/// 		/// وشاشه فورى للمتقدم بيكون Fee_Stud_Voucher.Online=1هلى فيه فرق بين المتقدم والطالب هوه مش المفروض online=1 in visa
		/// 		/// online =2 in Fawry
		/// 		/// 
		/// 		/// بروسيجور بتحذف ايصالات فورى لو هيا pending وعدا 24 ساعه عليها وكنت بتشيك على انها online=2
		/// 		/// 
		/// 		/// 
		/// </summary>
		public System.Int32?		  OnlineFlg = null;
		
		/// <summary>
		/// CANCEL_DATE : 
		/// </summary>
		public System.DateTime?		  CancelDate = null;
		
		/// <summary>
		/// SE_USER_CNCL_ID : 
		/// </summary>
		public System.Decimal?		  SeUserCnclId = null;
		
		/// <summary>
		/// SPO_SPONSOR_ID : 
		/// </summary>
		public System.Decimal?		  SpoSponsorId = null;
		
		/// <summary>
		/// SPO_FEE_BALANCE : رصيد الكفيل  المستخدم فى الفاتورة
		/// </summary>
		public System.Decimal?		  SpoFeeBalance = null;
		
		/// <summary>
		/// ADM_APPLICANT_ID : 
		/// </summary>
		public System.Decimal?		  AdmApplicantId = null;
		
		/// <summary>
		/// DISC_AMOUNT : usednot affect items
		/// </summary>
		public System.Decimal?		  DiscAmount = null;
		
		/// <summary>
		/// CUR_TOT_BALANCE : اجمالى المدفوع
		/// </summary>
		public System.Decimal?		  CurTotBalance = null;
		
		/// <summary>
		/// CUR_TOT_REMAIN : اجمالى المدفوع
		/// </summary>
		public System.Decimal?		  CurTotRemain = null;
		
		/// <summary>
		/// EXCHANGE_RATE : سعر تغيير العملة
		/// </summary>
		public System.Decimal?		  ExchangeRate = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private FeeCodeType _feeCodeTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeCodeType"/>.
		/// </summary>
		/// <value>The source FeeCodeType for FeeCodeTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeCodeType FeeCodeTypeIdSource
      	{
            get { return this._feeCodeTypeIdSource; }
            set { this._feeCodeTypeIdSource = value; }
      	}
		private AdmApplicant _admApplicantIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmApplicant"/>.
		/// </summary>
		/// <value>The source AdmApplicant for AdmApplicantId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmApplicant AdmApplicantIdSource
      	{
            get { return this._admApplicantIdSource; }
            set { this._admApplicantIdSource = value; }
      	}
		private AsFacultyInfo _asFacultyInfoIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AsFacultyInfo"/>.
		/// </summary>
		/// <value>The source AsFacultyInfo for AsFacultyInfoId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AsFacultyInfo AsFacultyInfoIdSource
      	{
            get { return this._asFacultyInfoIdSource; }
            set { this._asFacultyInfoIdSource = value; }
      	}
		private EdAcadYear _edAcadYearIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdAcadYear"/>.
		/// </summary>
		/// <value>The source EdAcadYear for EdAcadYearId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdAcadYear EdAcadYearIdSource
      	{
            get { return this._edAcadYearIdSource; }
            set { this._edAcadYearIdSource = value; }
      	}
		private EdCodeSemester _edCodeSemesterIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeSemester"/>.
		/// </summary>
		/// <value>The source EdCodeSemester for EdCodeSemesterId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeSemester EdCodeSemesterIdSource
      	{
            get { return this._edCodeSemesterIdSource; }
            set { this._edCodeSemesterIdSource = value; }
      	}
		private EdStud _edStudIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStud"/>.
		/// </summary>
		/// <value>The source EdStud for EdStudId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStud EdStudIdSource
      	{
            get { return this._edStudIdSource; }
            set { this._edStudIdSource = value; }
      	}
		private FeeCodeBanks _feeCodeBankIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeCodeBanks"/>.
		/// </summary>
		/// <value>The source FeeCodeBanks for FeeCodeBankId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeCodeBanks FeeCodeBankIdSource
      	{
            get { return this._feeCodeBankIdSource; }
            set { this._feeCodeBankIdSource = value; }
      	}
		private GsCodeCurrency _gsCodeCurrencyIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeCurrency"/>.
		/// </summary>
		/// <value>The source GsCodeCurrency for GsCodeCurrencyId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeCurrency GsCodeCurrencyIdSource
      	{
            get { return this._gsCodeCurrencyIdSource; }
            set { this._gsCodeCurrencyIdSource = value; }
      	}
		private GsCodePayMethod _gsCodePayMethodIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodePayMethod"/>.
		/// </summary>
		/// <value>The source GsCodePayMethod for GsCodePayMethodId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodePayMethod GsCodePayMethodIdSource
      	{
            get { return this._gsCodePayMethodIdSource; }
            set { this._gsCodePayMethodIdSource = value; }
      	}
		private SeUser _seUserIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SeUser"/>.
		/// </summary>
		/// <value>The source SeUser for SeUserId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SeUser SeUserIdSource
      	{
            get { return this._seUserIdSource; }
            set { this._seUserIdSource = value; }
      	}
		private SeUser _seUserCnclIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SeUser"/>.
		/// </summary>
		/// <value>The source SeUser for SeUserCnclId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SeUser SeUserCnclIdSource
      	{
            get { return this._seUserCnclIdSource; }
            set { this._seUserCnclIdSource = value; }
      	}
		private SpoSponsor _spoSponsorIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SpoSponsor"/>.
		/// </summary>
		/// <value>The source SpoSponsor for SpoSponsorId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SpoSponsor SpoSponsorIdSource
      	{
            get { return this._spoSponsorIdSource; }
            set { this._spoSponsorIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region FeeTreasuryCollection
		
		private TList<FeeTreasury> _feeTreasuryFeeStudVoucherId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeTreasuryFeeStudVoucherId
		/// </summary>
		
		public TList<FeeTreasury> FeeTreasuryCollection
		{
			get
			{
				if (_feeTreasuryFeeStudVoucherId == null)
				{
				_feeTreasuryFeeStudVoucherId = new TList<FeeTreasury>();
				}
	
				return _feeTreasuryFeeStudVoucherId;
			}
			set { _feeTreasuryFeeStudVoucherId = value; }
		}
		
		#endregion

		#region FeeStudVoucherPayMthodCollection
		
		private TList<FeeStudVoucherPayMthod> _feeStudVoucherPayMthodFeeStudVoucherId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudVoucherPayMthodFeeStudVoucherId
		/// </summary>
		
		public TList<FeeStudVoucherPayMthod> FeeStudVoucherPayMthodCollection
		{
			get
			{
				if (_feeStudVoucherPayMthodFeeStudVoucherId == null)
				{
				_feeStudVoucherPayMthodFeeStudVoucherId = new TList<FeeStudVoucherPayMthod>();
				}
	
				return _feeStudVoucherPayMthodFeeStudVoucherId;
			}
			set { _feeStudVoucherPayMthodFeeStudVoucherId = value; }
		}
		
		#endregion

		#region FeeStudVoucherItemCollection
		
		private TList<FeeStudVoucherItem> _feeStudVoucherItemFeeStudVoucherId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudVoucherItemFeeStudVoucherId
		/// </summary>
		
		public TList<FeeStudVoucherItem> FeeStudVoucherItemCollection
		{
			get
			{
				if (_feeStudVoucherItemFeeStudVoucherId == null)
				{
				_feeStudVoucherItemFeeStudVoucherId = new TList<FeeStudVoucherItem>();
				}
	
				return _feeStudVoucherItemFeeStudVoucherId;
			}
			set { _feeStudVoucherItemFeeStudVoucherId = value; }
		}
		
		#endregion

		#region FeeVoucherInvocCollection
		
		private TList<FeeVoucherInvoc> _feeVoucherInvocFeeStudVoucherId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeVoucherInvocFeeStudVoucherId
		/// </summary>
		
		public TList<FeeVoucherInvoc> FeeVoucherInvocCollection
		{
			get
			{
				if (_feeVoucherInvocFeeStudVoucherId == null)
				{
				_feeVoucherInvocFeeStudVoucherId = new TList<FeeVoucherInvoc>();
				}
	
				return _feeVoucherInvocFeeStudVoucherId;
			}
			set { _feeVoucherInvocFeeStudVoucherId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			FeeStudVoucherEntityData _tmp = new FeeStudVoucherEntityData();
						
			_tmp.FeeStudVoucherId = this.FeeStudVoucherId;
			_tmp.OriginalFeeStudVoucherId = this.OriginalFeeStudVoucherId;
			
			_tmp.VoucherSerial = this.VoucherSerial;
			_tmp.VoucherDate = this.VoucherDate;
			_tmp.EdStudId = this.EdStudId;
			_tmp.EdAcadYearId = this.EdAcadYearId;
			_tmp.AsFacultyInfoId = this.AsFacultyInfoId;
			_tmp.TotalAmount = this.TotalAmount;
			_tmp.ReceiptNum = this.ReceiptNum;
			_tmp.ReceiptDate = this.ReceiptDate;
			_tmp.GsCodeCurrencyId = this.GsCodeCurrencyId;
			_tmp.GsCodePayMethodId = this.GsCodePayMethodId;
			_tmp.FeeCodeBankId = this.FeeCodeBankId;
			_tmp.FeeCodeTypeId = this.FeeCodeTypeId;
			_tmp.PayFlg = this.PayFlg;
			_tmp.BalanceFlg = this.BalanceFlg;
			_tmp.CancelFlg = this.CancelFlg;
			_tmp.EdCodeSemesterId = this.EdCodeSemesterId;
			_tmp.Notes = this.Notes;
			_tmp.SeUserId = this.SeUserId;
			_tmp.UserName = this.UserName;
			_tmp.CheqNum = this.CheqNum;
			_tmp.AccntNum = this.AccntNum;
			_tmp.AttchdDoc = this.AttchdDoc;
			_tmp.StudFeeBalance = this.StudFeeBalance;
			_tmp.TotalPayed = this.TotalPayed;
			_tmp.LastDate = this.LastDate;
			_tmp.OnlineFlg = this.OnlineFlg;
			_tmp.CancelDate = this.CancelDate;
			_tmp.SeUserCnclId = this.SeUserCnclId;
			_tmp.SpoSponsorId = this.SpoSponsorId;
			_tmp.SpoFeeBalance = this.SpoFeeBalance;
			_tmp.AdmApplicantId = this.AdmApplicantId;
			_tmp.DiscAmount = this.DiscAmount;
			_tmp.CurTotBalance = this.CurTotBalance;
			_tmp.CurTotRemain = this.CurTotRemain;
			_tmp.ExchangeRate = this.ExchangeRate;
			
			#region Source Parent Composite Entities
			if (this.FeeCodeTypeIdSource != null)
				_tmp.FeeCodeTypeIdSource = MakeCopyOf(this.FeeCodeTypeIdSource) as FeeCodeType;
			if (this.AdmApplicantIdSource != null)
				_tmp.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource) as AdmApplicant;
			if (this.AsFacultyInfoIdSource != null)
				_tmp.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource) as AsFacultyInfo;
			if (this.EdAcadYearIdSource != null)
				_tmp.EdAcadYearIdSource = MakeCopyOf(this.EdAcadYearIdSource) as EdAcadYear;
			if (this.EdCodeSemesterIdSource != null)
				_tmp.EdCodeSemesterIdSource = MakeCopyOf(this.EdCodeSemesterIdSource) as EdCodeSemester;
			if (this.EdStudIdSource != null)
				_tmp.EdStudIdSource = MakeCopyOf(this.EdStudIdSource) as EdStud;
			if (this.FeeCodeBankIdSource != null)
				_tmp.FeeCodeBankIdSource = MakeCopyOf(this.FeeCodeBankIdSource) as FeeCodeBanks;
			if (this.GsCodeCurrencyIdSource != null)
				_tmp.GsCodeCurrencyIdSource = MakeCopyOf(this.GsCodeCurrencyIdSource) as GsCodeCurrency;
			if (this.GsCodePayMethodIdSource != null)
				_tmp.GsCodePayMethodIdSource = MakeCopyOf(this.GsCodePayMethodIdSource) as GsCodePayMethod;
			if (this.SeUserIdSource != null)
				_tmp.SeUserIdSource = MakeCopyOf(this.SeUserIdSource) as SeUser;
			if (this.SeUserCnclIdSource != null)
				_tmp.SeUserCnclIdSource = MakeCopyOf(this.SeUserCnclIdSource) as SeUser;
			if (this.SpoSponsorIdSource != null)
				_tmp.SpoSponsorIdSource = MakeCopyOf(this.SpoSponsorIdSource) as SpoSponsor;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._feeTreasuryFeeStudVoucherId != null)
				_tmp.FeeTreasuryCollection = (TList<FeeTreasury>) MakeCopyOf(this.FeeTreasuryCollection); 
			if (this._feeStudVoucherPayMthodFeeStudVoucherId != null)
				_tmp.FeeStudVoucherPayMthodCollection = (TList<FeeStudVoucherPayMthod>) MakeCopyOf(this.FeeStudVoucherPayMthodCollection); 
			if (this._feeStudVoucherItemFeeStudVoucherId != null)
				_tmp.FeeStudVoucherItemCollection = (TList<FeeStudVoucherItem>) MakeCopyOf(this.FeeStudVoucherItemCollection); 
			if (this._feeVoucherInvocFeeStudVoucherId != null)
				_tmp.FeeVoucherInvocCollection = (TList<FeeVoucherInvoc>) MakeCopyOf(this.FeeVoucherInvocCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			FeeStudVoucherEntityData _tmp = new FeeStudVoucherEntityData();
						
			_tmp.FeeStudVoucherId = this.FeeStudVoucherId;
			_tmp.OriginalFeeStudVoucherId = this.OriginalFeeStudVoucherId;
			
			_tmp.VoucherSerial = this.VoucherSerial;
			_tmp.VoucherDate = this.VoucherDate;
			_tmp.EdStudId = this.EdStudId;
			_tmp.EdAcadYearId = this.EdAcadYearId;
			_tmp.AsFacultyInfoId = this.AsFacultyInfoId;
			_tmp.TotalAmount = this.TotalAmount;
			_tmp.ReceiptNum = this.ReceiptNum;
			_tmp.ReceiptDate = this.ReceiptDate;
			_tmp.GsCodeCurrencyId = this.GsCodeCurrencyId;
			_tmp.GsCodePayMethodId = this.GsCodePayMethodId;
			_tmp.FeeCodeBankId = this.FeeCodeBankId;
			_tmp.FeeCodeTypeId = this.FeeCodeTypeId;
			_tmp.PayFlg = this.PayFlg;
			_tmp.BalanceFlg = this.BalanceFlg;
			_tmp.CancelFlg = this.CancelFlg;
			_tmp.EdCodeSemesterId = this.EdCodeSemesterId;
			_tmp.Notes = this.Notes;
			_tmp.SeUserId = this.SeUserId;
			_tmp.UserName = this.UserName;
			_tmp.CheqNum = this.CheqNum;
			_tmp.AccntNum = this.AccntNum;
			_tmp.AttchdDoc = this.AttchdDoc;
			_tmp.StudFeeBalance = this.StudFeeBalance;
			_tmp.TotalPayed = this.TotalPayed;
			_tmp.LastDate = this.LastDate;
			_tmp.OnlineFlg = this.OnlineFlg;
			_tmp.CancelDate = this.CancelDate;
			_tmp.SeUserCnclId = this.SeUserCnclId;
			_tmp.SpoSponsorId = this.SpoSponsorId;
			_tmp.SpoFeeBalance = this.SpoFeeBalance;
			_tmp.AdmApplicantId = this.AdmApplicantId;
			_tmp.DiscAmount = this.DiscAmount;
			_tmp.CurTotBalance = this.CurTotBalance;
			_tmp.CurTotRemain = this.CurTotRemain;
			_tmp.ExchangeRate = this.ExchangeRate;
			
			#region Source Parent Composite Entities
			if (this.FeeCodeTypeIdSource != null && existingCopies.Contains(this.FeeCodeTypeIdSource))
				_tmp.FeeCodeTypeIdSource = existingCopies[this.FeeCodeTypeIdSource] as FeeCodeType;
			else
				_tmp.FeeCodeTypeIdSource = MakeCopyOf(this.FeeCodeTypeIdSource, existingCopies) as FeeCodeType;
			if (this.AdmApplicantIdSource != null && existingCopies.Contains(this.AdmApplicantIdSource))
				_tmp.AdmApplicantIdSource = existingCopies[this.AdmApplicantIdSource] as AdmApplicant;
			else
				_tmp.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource, existingCopies) as AdmApplicant;
			if (this.AsFacultyInfoIdSource != null && existingCopies.Contains(this.AsFacultyInfoIdSource))
				_tmp.AsFacultyInfoIdSource = existingCopies[this.AsFacultyInfoIdSource] as AsFacultyInfo;
			else
				_tmp.AsFacultyInfoIdSource = MakeCopyOf(this.AsFacultyInfoIdSource, existingCopies) as AsFacultyInfo;
			if (this.EdAcadYearIdSource != null && existingCopies.Contains(this.EdAcadYearIdSource))
				_tmp.EdAcadYearIdSource = existingCopies[this.EdAcadYearIdSource] as EdAcadYear;
			else
				_tmp.EdAcadYearIdSource = MakeCopyOf(this.EdAcadYearIdSource, existingCopies) as EdAcadYear;
			if (this.EdCodeSemesterIdSource != null && existingCopies.Contains(this.EdCodeSemesterIdSource))
				_tmp.EdCodeSemesterIdSource = existingCopies[this.EdCodeSemesterIdSource] as EdCodeSemester;
			else
				_tmp.EdCodeSemesterIdSource = MakeCopyOf(this.EdCodeSemesterIdSource, existingCopies) as EdCodeSemester;
			if (this.EdStudIdSource != null && existingCopies.Contains(this.EdStudIdSource))
				_tmp.EdStudIdSource = existingCopies[this.EdStudIdSource] as EdStud;
			else
				_tmp.EdStudIdSource = MakeCopyOf(this.EdStudIdSource, existingCopies) as EdStud;
			if (this.FeeCodeBankIdSource != null && existingCopies.Contains(this.FeeCodeBankIdSource))
				_tmp.FeeCodeBankIdSource = existingCopies[this.FeeCodeBankIdSource] as FeeCodeBanks;
			else
				_tmp.FeeCodeBankIdSource = MakeCopyOf(this.FeeCodeBankIdSource, existingCopies) as FeeCodeBanks;
			if (this.GsCodeCurrencyIdSource != null && existingCopies.Contains(this.GsCodeCurrencyIdSource))
				_tmp.GsCodeCurrencyIdSource = existingCopies[this.GsCodeCurrencyIdSource] as GsCodeCurrency;
			else
				_tmp.GsCodeCurrencyIdSource = MakeCopyOf(this.GsCodeCurrencyIdSource, existingCopies) as GsCodeCurrency;
			if (this.GsCodePayMethodIdSource != null && existingCopies.Contains(this.GsCodePayMethodIdSource))
				_tmp.GsCodePayMethodIdSource = existingCopies[this.GsCodePayMethodIdSource] as GsCodePayMethod;
			else
				_tmp.GsCodePayMethodIdSource = MakeCopyOf(this.GsCodePayMethodIdSource, existingCopies) as GsCodePayMethod;
			if (this.SeUserIdSource != null && existingCopies.Contains(this.SeUserIdSource))
				_tmp.SeUserIdSource = existingCopies[this.SeUserIdSource] as SeUser;
			else
				_tmp.SeUserIdSource = MakeCopyOf(this.SeUserIdSource, existingCopies) as SeUser;
			if (this.SeUserCnclIdSource != null && existingCopies.Contains(this.SeUserCnclIdSource))
				_tmp.SeUserCnclIdSource = existingCopies[this.SeUserCnclIdSource] as SeUser;
			else
				_tmp.SeUserCnclIdSource = MakeCopyOf(this.SeUserCnclIdSource, existingCopies) as SeUser;
			if (this.SpoSponsorIdSource != null && existingCopies.Contains(this.SpoSponsorIdSource))
				_tmp.SpoSponsorIdSource = existingCopies[this.SpoSponsorIdSource] as SpoSponsor;
			else
				_tmp.SpoSponsorIdSource = MakeCopyOf(this.SpoSponsorIdSource, existingCopies) as SpoSponsor;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.FeeTreasuryCollection = (TList<FeeTreasury>) MakeCopyOf(this.FeeTreasuryCollection, existingCopies); 
			_tmp.FeeStudVoucherPayMthodCollection = (TList<FeeStudVoucherPayMthod>) MakeCopyOf(this.FeeStudVoucherPayMthodCollection, existingCopies); 
			_tmp.FeeStudVoucherItemCollection = (TList<FeeStudVoucherItem>) MakeCopyOf(this.FeeStudVoucherItemCollection, existingCopies); 
			_tmp.FeeVoucherInvocCollection = (TList<FeeVoucherInvoc>) MakeCopyOf(this.FeeVoucherInvocCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeStudVoucherColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(FeeStudVoucherColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeStudVoucherColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(FeeStudVoucherColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeStudVoucherColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(FeeStudVoucherColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				FeeStudVoucherEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new FeeStudVoucherEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeStudVoucherColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(FeeStudVoucherColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				FeeStudVoucherEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new FeeStudVoucherEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region FeeStudVoucherEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="FeeStudVoucher"/> object.
	/// </remarks>
	public class FeeStudVoucherEventArgs : System.EventArgs
	{
		private FeeStudVoucherColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the FeeStudVoucherEventArgs class.
		///</summary>
		public FeeStudVoucherEventArgs(FeeStudVoucherColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the FeeStudVoucherEventArgs class.
		///</summary>
		public FeeStudVoucherEventArgs(FeeStudVoucherColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The FeeStudVoucherColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="FeeStudVoucherColumn" />
		public FeeStudVoucherColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all FeeStudVoucher related events.
	///</summary>
	public delegate void FeeStudVoucherEventHandler(object sender, FeeStudVoucherEventArgs e);
	
	#region FeeStudVoucherComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class FeeStudVoucherComparer : System.Collections.Generic.IComparer<FeeStudVoucher>
	{
		FeeStudVoucherColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:FeeStudVoucherComparer"/> class.
        /// </summary>
		public FeeStudVoucherComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:FeeStudVoucherComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public FeeStudVoucherComparer(FeeStudVoucherColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="FeeStudVoucher"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="FeeStudVoucher"/> to compare.</param>
        /// <param name="b">The second <c>FeeStudVoucher</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(FeeStudVoucher a, FeeStudVoucher b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(FeeStudVoucher entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(FeeStudVoucher a, FeeStudVoucher b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public FeeStudVoucherColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region FeeStudVoucherKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="FeeStudVoucher"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class FeeStudVoucherKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the FeeStudVoucherKey class.
		/// </summary>
		public FeeStudVoucherKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the FeeStudVoucherKey class.
		/// </summary>
		public FeeStudVoucherKey(FeeStudVoucherBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.FeeStudVoucherId = entity.FeeStudVoucherId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the FeeStudVoucherKey class.
		/// </summary>
		public FeeStudVoucherKey(System.Decimal _feeStudVoucherId)
		{
			#region Init Properties

			this.FeeStudVoucherId = _feeStudVoucherId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private FeeStudVoucherBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public FeeStudVoucherBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the FeeStudVoucherId property
		private System.Decimal _feeStudVoucherId;
		
		/// <summary>
		/// Gets or sets the FeeStudVoucherId property.
		/// </summary>
		public System.Decimal FeeStudVoucherId
		{
			get { return _feeStudVoucherId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.FeeStudVoucherId = value;
				
				_feeStudVoucherId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				FeeStudVoucherId = ( values["FeeStudVoucherId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["FeeStudVoucherId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("FeeStudVoucherId", FeeStudVoucherId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("FeeStudVoucherId: {0}{1}",
								FeeStudVoucherId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region FeeStudVoucherColumn Enum
	
	/// <summary>
	/// Enumerate the FeeStudVoucher columns.
	/// </summary>
	[Serializable]
	public enum FeeStudVoucherColumn : int
	{
		/// <summary>
		/// FeeStudVoucherId : اذن دفع/ايصال سداد
		/// </summary>
		[EnumTextValue("FEE_STUD_VOUCHER_ID")]
		[ColumnEnum("FEE_STUD_VOUCHER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		FeeStudVoucherId = 1,
		/// <summary>
		/// VoucherSerial : 
		/// </summary>
		[EnumTextValue("VOUCHER_SERIAL")]
		[ColumnEnum("VOUCHER_SERIAL", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		VoucherSerial = 2,
		/// <summary>
		/// VoucherDate : 
		/// </summary>
		[EnumTextValue("VOUCHER_DATE")]
		[ColumnEnum("VOUCHER_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, false)]
		VoucherDate = 3,
		/// <summary>
		/// EdStudId : KU sponsor
		/// </summary>
		[EnumTextValue("ED_STUD_ID")]
		[ColumnEnum("ED_STUD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudId = 4,
		/// <summary>
		/// EdAcadYearId : 
		/// </summary>
		[EnumTextValue("ED_ACAD_YEAR_ID")]
		[ColumnEnum("ED_ACAD_YEAR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdAcadYearId = 5,
		/// <summary>
		/// AsFacultyInfoId : 
		/// </summary>
		[EnumTextValue("AS_FACULTY_INFO_ID")]
		[ColumnEnum("AS_FACULTY_INFO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AsFacultyInfoId = 6,
		/// <summary>
		/// TotalAmount : اجمالى القيم المسددة
		/// </summary>
		[EnumTextValue("TOTAL_AMOUNT")]
		[ColumnEnum("TOTAL_AMOUNT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		TotalAmount = 7,
		/// <summary>
		/// ReceiptNum : 
		/// </summary>
		[EnumTextValue("RECEIPT_NUM")]
		[ColumnEnum("RECEIPT_NUM", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		ReceiptNum = 8,
		/// <summary>
		/// ReceiptDate : 
		/// </summary>
		[EnumTextValue("RECEIPT_DATE")]
		[ColumnEnum("RECEIPT_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		ReceiptDate = 9,
		/// <summary>
		/// GsCodeCurrencyId : 
		/// </summary>
		[EnumTextValue("GS_CODE_CURRENCY_ID")]
		[ColumnEnum("GS_CODE_CURRENCY_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		GsCodeCurrencyId = 10,
		/// <summary>
		/// GsCodePayMethodId : 
		/// </summary>
		[EnumTextValue("GS_CODE_PAY_METHOD_ID")]
		[ColumnEnum("GS_CODE_PAY_METHOD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodePayMethodId = 11,
		/// <summary>
		/// FeeCodeBankId : 
		/// </summary>
		[EnumTextValue("FEE_CODE_BANK_ID")]
		[ColumnEnum("FEE_CODE_BANK_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FeeCodeBankId = 12,
		/// <summary>
		/// FeeCodeTypeId : 
		/// </summary>
		[EnumTextValue("FEE_CODE_TYPE_ID")]
		[ColumnEnum("FEE_CODE_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FeeCodeTypeId = 13,
		/// <summary>
		/// PayFlg : 
		/// </summary>
		[EnumTextValue("PAY_FLG")]
		[ColumnEnum("PAY_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PayFlg = 14,
		/// <summary>
		/// BalanceFlg : 1: add to balance, 0 payy balance,3:Current balance of student
		/// </summary>
		[EnumTextValue("BALANCE_FLG")]
		[ColumnEnum("BALANCE_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		BalanceFlg = 15,
		/// <summary>
		/// CancelFlg : 
		/// </summary>
		[EnumTextValue("CANCEL_FLG")]
		[ColumnEnum("CANCEL_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		CancelFlg = 16,
		/// <summary>
		/// EdCodeSemesterId : 
		/// </summary>
		[EnumTextValue("ED_CODE_SEMESTER_ID")]
		[ColumnEnum("ED_CODE_SEMESTER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdCodeSemesterId = 17,
		/// <summary>
		/// Notes : بيان ايصال السداد
		/// </summary>
		[EnumTextValue("NOTES")]
		[ColumnEnum("NOTES", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		Notes = 18,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 19,
		/// <summary>
		/// UserName : =web if online
		/// </summary>
		[EnumTextValue("User_Name")]
		[ColumnEnum("User_Name", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		UserName = 20,
		/// <summary>
		/// CheqNum : رقم الشيك فى حالة دفع بالشيك
		/// </summary>
		[EnumTextValue("CHEQ_NUM")]
		[ColumnEnum("CHEQ_NUM", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		CheqNum = 21,
		/// <summary>
		/// AccntNum : رقم حساب البنك  فى حالة ايداع
		/// </summary>
		[EnumTextValue("ACCNT_NUM")]
		[ColumnEnum("ACCNT_NUM", typeof(System.String), System.Data.DbType.String, false, false, true, 150)]
		AccntNum = 22,
		/// <summary>
		/// AttchdDoc : صورة الشيك او مرفق
		/// </summary>
		[EnumTextValue("ATTCHD_DOC")]
		[ColumnEnum("ATTCHD_DOC", typeof(System.String), System.Data.DbType.String, false, false, true)]
		AttchdDoc = 23,
		/// <summary>
		/// StudFeeBalance : رصيد الطالب المستخدم فى الفاتورة
		/// </summary>
		[EnumTextValue("STUD_FEE_BALANCE")]
		[ColumnEnum("STUD_FEE_BALANCE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		StudFeeBalance = 24,
		/// <summary>
		/// TotalPayed : اجمالى المدفوع
		/// </summary>
		[EnumTextValue("TOTAL_PAYED")]
		[ColumnEnum("TOTAL_PAYED", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TotalPayed = 25,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 26,
		/// <summary>
		/// OnlineFlg : Angham:
		/// 		/// 1 فى ku فيزا   XXXX  (Should use PAYMENT_METHOD)
		/// 		/// 
		/// 		/// شاشه فورى للططالب بيكون Fee_Stud_Voucher.Online=2
		/// 		/// وشاشه فورى للمتقدم بيكون Fee_Stud_Voucher.Online=1هلى فيه فرق بين المتقدم والطالب هوه مش المفروض online=1 in visa
		/// 		/// online =2 in Fawry
		/// 		/// 
		/// 		/// بروسيجور بتحذف ايصالات فورى لو هيا pending وعدا 24 ساعه عليها وكنت بتشيك على انها online=2
		/// 		/// 
		/// 		/// 
		/// </summary>
		[EnumTextValue("ONLINE_FLG")]
		[ColumnEnum("ONLINE_FLG", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		OnlineFlg = 27,
		/// <summary>
		/// CancelDate : 
		/// </summary>
		[EnumTextValue("CANCEL_DATE")]
		[ColumnEnum("CANCEL_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		CancelDate = 28,
		/// <summary>
		/// SeUserCnclId : 
		/// </summary>
		[EnumTextValue("SE_USER_CNCL_ID")]
		[ColumnEnum("SE_USER_CNCL_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserCnclId = 29,
		/// <summary>
		/// SpoSponsorId : 
		/// </summary>
		[EnumTextValue("SPO_SPONSOR_ID")]
		[ColumnEnum("SPO_SPONSOR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SpoSponsorId = 30,
		/// <summary>
		/// SpoFeeBalance : رصيد الكفيل  المستخدم فى الفاتورة
		/// </summary>
		[EnumTextValue("SPO_FEE_BALANCE")]
		[ColumnEnum("SPO_FEE_BALANCE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SpoFeeBalance = 31,
		/// <summary>
		/// AdmApplicantId : 
		/// </summary>
		[EnumTextValue("ADM_APPLICANT_ID")]
		[ColumnEnum("ADM_APPLICANT_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmApplicantId = 32,
		/// <summary>
		/// DiscAmount : usednot affect items
		/// </summary>
		[EnumTextValue("DISC_AMOUNT")]
		[ColumnEnum("DISC_AMOUNT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		DiscAmount = 33,
		/// <summary>
		/// CurTotBalance : اجمالى المدفوع
		/// </summary>
		[EnumTextValue("CUR_TOT_BALANCE")]
		[ColumnEnum("CUR_TOT_BALANCE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CurTotBalance = 34,
		/// <summary>
		/// CurTotRemain : اجمالى المدفوع
		/// </summary>
		[EnumTextValue("CUR_TOT_REMAIN")]
		[ColumnEnum("CUR_TOT_REMAIN", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CurTotRemain = 35,
		/// <summary>
		/// ExchangeRate : سعر تغيير العملة
		/// </summary>
		[EnumTextValue("EXCHANGE_RATE")]
		[ColumnEnum("EXCHANGE_RATE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ExchangeRate = 36
	}//End enum

	#endregion FeeStudVoucherColumn Enum

} // end namespace
