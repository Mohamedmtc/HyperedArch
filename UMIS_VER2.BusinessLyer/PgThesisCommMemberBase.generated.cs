
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file PgThesisCommMember.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'PG_THESIS_COMM_MEMBER' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class PgThesisCommMemberBase : EntityBase, IPgThesisCommMember, IEntityId<PgThesisCommMemberKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private PgThesisCommMemberEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private PgThesisCommMemberEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private PgThesisCommMemberEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<PgThesisCommMember> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event PgThesisCommMemberEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event PgThesisCommMemberEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="PgThesisCommMemberBase"/> instance.
		///</summary>
		public PgThesisCommMemberBase()
		{
			this.entityData = new PgThesisCommMemberEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="PgThesisCommMemberBase"/> instance.
		///</summary>
		///<param name="_pgThesisCommMemberId">اعضاء لجنة المناقشة والحكم</param>
		///<param name="_pgThesisCommId">تشكيل لجنة المناقشة</param>
		///<param name="_memberTypeFlg">نوع العضو داخلي = 0 / خارجي = 1</param>
		///<param name="_saStfMemberId">داخلي  يتم الاختيار من اعضاء هيئه التدريس</param>
		///<param name="_pgExtMemberId">مسلسل مشرف/محكم خارجى</param>
		///<param name="_pgCdeStfRoleId">دور العضو فى لجنه الاشراف على الرسالة</param>
		///<param name="_startDate">XXتاريخ بداية فترة الإشراف</param>
		///<param name="_endDate">XXتاريخ نهاية فترة الإشراف</param>
		///<param name="_pgCodeSupervisorChgRsnId">كود سبب تعديل المشرف</param>
		///<param name="_memberNameAr">XXCSS خارجي يتم ادخال الاسم</param>
		///<param name="_memberNameEn">XXCSS</param>
		///<param name="_isActive">الحالة نشط/غير نشط</param>
		///<param name="_lastDate"></param>
		///<param name="_seUserId"></param>
		public PgThesisCommMemberBase(System.Decimal _pgThesisCommMemberId, System.Decimal _pgThesisCommId, 
			System.Int16? _memberTypeFlg, System.Decimal? _saStfMemberId, System.Decimal? _pgExtMemberId, 
			System.Int32 _pgCdeStfRoleId, System.DateTime? _startDate, System.DateTime? _endDate, 
			System.Int32? _pgCodeSupervisorChgRsnId, System.String _memberNameAr, System.String _memberNameEn, 
			System.Boolean? _isActive, System.DateTime? _lastDate, System.Decimal? _seUserId)
		{
			this.entityData = new PgThesisCommMemberEntityData();
			this.backupData = null;

			this.PgThesisCommMemberId = _pgThesisCommMemberId;
			this.PgThesisCommId = _pgThesisCommId;
			this.MemberTypeFlg = _memberTypeFlg;
			this.SaStfMemberId = _saStfMemberId;
			this.PgExtMemberId = _pgExtMemberId;
			this.PgCdeStfRoleId = _pgCdeStfRoleId;
			this.StartDate = _startDate;
			this.EndDate = _endDate;
			this.PgCodeSupervisorChgRsnId = _pgCodeSupervisorChgRsnId;
			this.MemberNameAr = _memberNameAr;
			this.MemberNameEn = _memberNameEn;
			this.IsActive = _isActive;
			this.LastDate = _lastDate;
			this.SeUserId = _seUserId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="PgThesisCommMember"/> instance.
		///</summary>
		///<param name="_pgThesisCommMemberId">اعضاء لجنة المناقشة والحكم</param>
		///<param name="_pgThesisCommId">تشكيل لجنة المناقشة</param>
		///<param name="_memberTypeFlg">نوع العضو داخلي = 0 / خارجي = 1</param>
		///<param name="_saStfMemberId">داخلي  يتم الاختيار من اعضاء هيئه التدريس</param>
		///<param name="_pgExtMemberId">مسلسل مشرف/محكم خارجى</param>
		///<param name="_pgCdeStfRoleId">دور العضو فى لجنه الاشراف على الرسالة</param>
		///<param name="_startDate">XXتاريخ بداية فترة الإشراف</param>
		///<param name="_endDate">XXتاريخ نهاية فترة الإشراف</param>
		///<param name="_pgCodeSupervisorChgRsnId">كود سبب تعديل المشرف</param>
		///<param name="_memberNameAr">XXCSS خارجي يتم ادخال الاسم</param>
		///<param name="_memberNameEn">XXCSS</param>
		///<param name="_isActive">الحالة نشط/غير نشط</param>
		///<param name="_lastDate"></param>
		///<param name="_seUserId"></param>
		public static PgThesisCommMember CreatePgThesisCommMember(System.Decimal _pgThesisCommMemberId, System.Decimal _pgThesisCommId, 
			System.Int16? _memberTypeFlg, System.Decimal? _saStfMemberId, System.Decimal? _pgExtMemberId, 
			System.Int32 _pgCdeStfRoleId, System.DateTime? _startDate, System.DateTime? _endDate, 
			System.Int32? _pgCodeSupervisorChgRsnId, System.String _memberNameAr, System.String _memberNameEn, 
			System.Boolean? _isActive, System.DateTime? _lastDate, System.Decimal? _seUserId)
		{
			PgThesisCommMember newPgThesisCommMember = new PgThesisCommMember();
			newPgThesisCommMember.PgThesisCommMemberId = _pgThesisCommMemberId;
			newPgThesisCommMember.PgThesisCommId = _pgThesisCommId;
			newPgThesisCommMember.MemberTypeFlg = _memberTypeFlg;
			newPgThesisCommMember.SaStfMemberId = _saStfMemberId;
			newPgThesisCommMember.PgExtMemberId = _pgExtMemberId;
			newPgThesisCommMember.PgCdeStfRoleId = _pgCdeStfRoleId;
			newPgThesisCommMember.StartDate = _startDate;
			newPgThesisCommMember.EndDate = _endDate;
			newPgThesisCommMember.PgCodeSupervisorChgRsnId = _pgCodeSupervisorChgRsnId;
			newPgThesisCommMember.MemberNameAr = _memberNameAr;
			newPgThesisCommMember.MemberNameEn = _memberNameEn;
			newPgThesisCommMember.IsActive = _isActive;
			newPgThesisCommMember.LastDate = _lastDate;
			newPgThesisCommMember.SeUserId = _seUserId;
			return newPgThesisCommMember;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the PgThesisCommMemberId property. 
		///		اعضاء لجنة المناقشة والحكم
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"اعضاء لجنة المناقشة والحكم"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal PgThesisCommMemberId
		{
			get
			{
				return this.entityData.PgThesisCommMemberId; 
			}
			
			set
			{
				if (this.entityData.PgThesisCommMemberId == value)
					return;
					
				OnColumnChanging(PgThesisCommMemberColumn.PgThesisCommMemberId, this.entityData.PgThesisCommMemberId);
				this.entityData.PgThesisCommMemberId = value;
				this.EntityId.PgThesisCommMemberId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisCommMemberColumn.PgThesisCommMemberId, this.entityData.PgThesisCommMemberId);
				OnPropertyChanged("PgThesisCommMemberId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the PG_THESIS_COMM_MEMBER_ID property.
		///		اعضاء لجنة المناقشة والحكم
		/// </summary>
		/// <remarks>This is the original value of the PG_THESIS_COMM_MEMBER_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalPgThesisCommMemberId
		{
			get { return this.entityData.OriginalPgThesisCommMemberId; }
			set { this.entityData.OriginalPgThesisCommMemberId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the PgThesisCommId property. 
		///		تشكيل لجنة المناقشة
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"تشكيل لجنة المناقشة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal PgThesisCommId
		{
			get
			{
				return this.entityData.PgThesisCommId; 
			}
			
			set
			{
				if (this.entityData.PgThesisCommId == value)
					return;
					
				OnColumnChanging(PgThesisCommMemberColumn.PgThesisCommId, this.entityData.PgThesisCommId);
				this.entityData.PgThesisCommId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisCommMemberColumn.PgThesisCommId, this.entityData.PgThesisCommId);
				OnPropertyChanged("PgThesisCommId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MemberTypeFlg property. 
		///		نوع العضو داخلي = 0 / خارجي = 1
		/// </summary>
		/// <value>This type is smallint.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (short)0. It is up to the developer
		/// to check the value of IsMemberTypeFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"نوع العضو داخلي = 0 / خارجي = 1"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int16? MemberTypeFlg
		{
			get
			{
				return this.entityData.MemberTypeFlg; 
			}
			
			set
			{
				if (this.entityData.MemberTypeFlg == value)
					return;
					
				OnColumnChanging(PgThesisCommMemberColumn.MemberTypeFlg, this.entityData.MemberTypeFlg);
				this.entityData.MemberTypeFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisCommMemberColumn.MemberTypeFlg, this.entityData.MemberTypeFlg);
				OnPropertyChanged("MemberTypeFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SaStfMemberId property. 
		///		داخلي  يتم الاختيار من اعضاء هيئه التدريس
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSaStfMemberIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"داخلي  يتم الاختيار من اعضاء هيئه التدريس"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SaStfMemberId
		{
			get
			{
				return this.entityData.SaStfMemberId; 
			}
			
			set
			{
				if (this.entityData.SaStfMemberId == value)
					return;
					
				OnColumnChanging(PgThesisCommMemberColumn.SaStfMemberId, this.entityData.SaStfMemberId);
				this.entityData.SaStfMemberId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisCommMemberColumn.SaStfMemberId, this.entityData.SaStfMemberId);
				OnPropertyChanged("SaStfMemberId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PgExtMemberId property. 
		///		مسلسل مشرف/محكم خارجى
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPgExtMemberIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"مسلسل مشرف/محكم خارجى"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? PgExtMemberId
		{
			get
			{
				return this.entityData.PgExtMemberId; 
			}
			
			set
			{
				if (this.entityData.PgExtMemberId == value)
					return;
					
				OnColumnChanging(PgThesisCommMemberColumn.PgExtMemberId, this.entityData.PgExtMemberId);
				this.entityData.PgExtMemberId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisCommMemberColumn.PgExtMemberId, this.entityData.PgExtMemberId);
				OnPropertyChanged("PgExtMemberId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PgCdeStfRoleId property. 
		///		دور العضو فى لجنه الاشراف على الرسالة
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"دور العضو فى لجنه الاشراف على الرسالة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 PgCdeStfRoleId
		{
			get
			{
				return this.entityData.PgCdeStfRoleId; 
			}
			
			set
			{
				if (this.entityData.PgCdeStfRoleId == value)
					return;
					
				OnColumnChanging(PgThesisCommMemberColumn.PgCdeStfRoleId, this.entityData.PgCdeStfRoleId);
				this.entityData.PgCdeStfRoleId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisCommMemberColumn.PgCdeStfRoleId, this.entityData.PgCdeStfRoleId);
				OnPropertyChanged("PgCdeStfRoleId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StartDate property. 
		///		XXتاريخ بداية فترة الإشراف
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsStartDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXتاريخ بداية فترة الإشراف"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? StartDate
		{
			get
			{
				return this.entityData.StartDate; 
			}
			
			set
			{
				if (this.entityData.StartDate == value)
					return;
					
				OnColumnChanging(PgThesisCommMemberColumn.StartDate, this.entityData.StartDate);
				this.entityData.StartDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisCommMemberColumn.StartDate, this.entityData.StartDate);
				OnPropertyChanged("StartDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EndDate property. 
		///		XXتاريخ نهاية فترة الإشراف
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsEndDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXتاريخ نهاية فترة الإشراف"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? EndDate
		{
			get
			{
				return this.entityData.EndDate; 
			}
			
			set
			{
				if (this.entityData.EndDate == value)
					return;
					
				OnColumnChanging(PgThesisCommMemberColumn.EndDate, this.entityData.EndDate);
				this.entityData.EndDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisCommMemberColumn.EndDate, this.entityData.EndDate);
				OnPropertyChanged("EndDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PgCodeSupervisorChgRsnId property. 
		///		كود سبب تعديل المشرف
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsPgCodeSupervisorChgRsnIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"كود سبب تعديل المشرف"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? PgCodeSupervisorChgRsnId
		{
			get
			{
				return this.entityData.PgCodeSupervisorChgRsnId; 
			}
			
			set
			{
				if (this.entityData.PgCodeSupervisorChgRsnId == value)
					return;
					
				OnColumnChanging(PgThesisCommMemberColumn.PgCodeSupervisorChgRsnId, this.entityData.PgCodeSupervisorChgRsnId);
				this.entityData.PgCodeSupervisorChgRsnId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisCommMemberColumn.PgCodeSupervisorChgRsnId, this.entityData.PgCodeSupervisorChgRsnId);
				OnPropertyChanged("PgCodeSupervisorChgRsnId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MemberNameAr property. 
		///		XXCSS خارجي يتم ادخال الاسم
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"XXCSS خارجي يتم ادخال الاسم"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String MemberNameAr
		{
			get
			{
				return this.entityData.MemberNameAr; 
			}
			
			set
			{
				if (this.entityData.MemberNameAr == value)
					return;
					
				OnColumnChanging(PgThesisCommMemberColumn.MemberNameAr, this.entityData.MemberNameAr);
				this.entityData.MemberNameAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisCommMemberColumn.MemberNameAr, this.entityData.MemberNameAr);
				OnPropertyChanged("MemberNameAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MemberNameEn property. 
		///		XXCSS
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"XXCSS"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String MemberNameEn
		{
			get
			{
				return this.entityData.MemberNameEn; 
			}
			
			set
			{
				if (this.entityData.MemberNameEn == value)
					return;
					
				OnColumnChanging(PgThesisCommMemberColumn.MemberNameEn, this.entityData.MemberNameEn);
				this.entityData.MemberNameEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisCommMemberColumn.MemberNameEn, this.entityData.MemberNameEn);
				OnPropertyChanged("MemberNameEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IsActive property. 
		///		الحالة نشط/غير نشط
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsIsActiveNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"الحالة نشط/غير نشط"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? IsActive
		{
			get
			{
				return this.entityData.IsActive; 
			}
			
			set
			{
				if (this.entityData.IsActive == value)
					return;
					
				OnColumnChanging(PgThesisCommMemberColumn.IsActive, this.entityData.IsActive);
				this.entityData.IsActive = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisCommMemberColumn.IsActive, this.entityData.IsActive);
				OnPropertyChanged("IsActive");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(PgThesisCommMemberColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisCommMemberColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(PgThesisCommMemberColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisCommMemberColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="PgCdeStfRole"/>.
		/// </summary>
		/// <value>The source PgCdeStfRole for PgCdeStfRoleId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual PgCdeStfRole PgCdeStfRoleIdSource
      	{
            get { return entityData.PgCdeStfRoleIdSource; }
            set { entityData.PgCdeStfRoleIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="PgCodeSupervisorChgRsn"/>.
		/// </summary>
		/// <value>The source PgCodeSupervisorChgRsn for PgCodeSupervisorChgRsnId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual PgCodeSupervisorChgRsn PgCodeSupervisorChgRsnIdSource
      	{
            get { return entityData.PgCodeSupervisorChgRsnIdSource; }
            set { entityData.PgCodeSupervisorChgRsnIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="PgExtMember"/>.
		/// </summary>
		/// <value>The source PgExtMember for PgExtMemberId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual PgExtMember PgExtMemberIdSource
      	{
            get { return entityData.PgExtMemberIdSource; }
            set { entityData.PgExtMemberIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="PgThesisComm"/>.
		/// </summary>
		/// <value>The source PgThesisComm for PgThesisCommId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual PgThesisComm PgThesisCommIdSource
      	{
            get { return entityData.PgThesisCommIdSource; }
            set { entityData.PgThesisCommIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SaStfMember"/>.
		/// </summary>
		/// <value>The source SaStfMember for SaStfMemberId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SaStfMember SaStfMemberIdSource
      	{
            get { return entityData.SaStfMemberIdSource; }
            set { entityData.SaStfMemberIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of PgThesisCommRpt objects
		///	which are related to this object through the relation FK_PG_THESIS_COMM_RPT_PG_THESIS_COMM_MEMBER
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisCommRpt> PgThesisCommRptCollection
		{
			get { return entityData.PgThesisCommRptCollection; }
			set { entityData.PgThesisCommRptCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MemberNameAr", "Member Name Ar", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("MemberNameEn", "Member Name En", 100));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "PG_THESIS_COMM_MEMBER"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"PG_THESIS_COMM_MEMBER_ID", "PG_THESIS_COMM_ID", "MEMBER_TYPE_FLG", "SA_STF_MEMBER_ID", "PG_EXT_MEMBER_ID", "PG_CDE_STF_ROLE_ID", "START_DATE", "END_DATE", "PG_CODE_SUPERVISOR_CHG_RSN_ID", "MEMBER_NAME_AR", "MEMBER_NAME_EN", "IS_ACTIVE", "LAST_DATE", "SE_USER_ID"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as PgThesisCommMemberEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (PgThesisCommMember) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<PgThesisCommMember>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as PgThesisCommMember);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed PgThesisCommMember Entity 
		///</summary>
		protected virtual PgThesisCommMember Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			PgThesisCommMember copy = new PgThesisCommMember();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.PgThesisCommMemberId = this.PgThesisCommMemberId;
					copy.OriginalPgThesisCommMemberId = this.OriginalPgThesisCommMemberId;
				copy.PgThesisCommId = this.PgThesisCommId;
				copy.MemberTypeFlg = this.MemberTypeFlg;
				copy.SaStfMemberId = this.SaStfMemberId;
				copy.PgExtMemberId = this.PgExtMemberId;
				copy.PgCdeStfRoleId = this.PgCdeStfRoleId;
				copy.StartDate = this.StartDate;
				copy.EndDate = this.EndDate;
				copy.PgCodeSupervisorChgRsnId = this.PgCodeSupervisorChgRsnId;
				copy.MemberNameAr = this.MemberNameAr;
				copy.MemberNameEn = this.MemberNameEn;
				copy.IsActive = this.IsActive;
				copy.LastDate = this.LastDate;
				copy.SeUserId = this.SeUserId;
			
			if (this.PgCdeStfRoleIdSource != null && existingCopies.Contains(this.PgCdeStfRoleIdSource))
				copy.PgCdeStfRoleIdSource = existingCopies[this.PgCdeStfRoleIdSource] as PgCdeStfRole;
			else
				copy.PgCdeStfRoleIdSource = MakeCopyOf(this.PgCdeStfRoleIdSource, existingCopies) as PgCdeStfRole;
			if (this.PgCodeSupervisorChgRsnIdSource != null && existingCopies.Contains(this.PgCodeSupervisorChgRsnIdSource))
				copy.PgCodeSupervisorChgRsnIdSource = existingCopies[this.PgCodeSupervisorChgRsnIdSource] as PgCodeSupervisorChgRsn;
			else
				copy.PgCodeSupervisorChgRsnIdSource = MakeCopyOf(this.PgCodeSupervisorChgRsnIdSource, existingCopies) as PgCodeSupervisorChgRsn;
			if (this.PgExtMemberIdSource != null && existingCopies.Contains(this.PgExtMemberIdSource))
				copy.PgExtMemberIdSource = existingCopies[this.PgExtMemberIdSource] as PgExtMember;
			else
				copy.PgExtMemberIdSource = MakeCopyOf(this.PgExtMemberIdSource, existingCopies) as PgExtMember;
			if (this.PgThesisCommIdSource != null && existingCopies.Contains(this.PgThesisCommIdSource))
				copy.PgThesisCommIdSource = existingCopies[this.PgThesisCommIdSource] as PgThesisComm;
			else
				copy.PgThesisCommIdSource = MakeCopyOf(this.PgThesisCommIdSource, existingCopies) as PgThesisComm;
			if (this.SaStfMemberIdSource != null && existingCopies.Contains(this.SaStfMemberIdSource))
				copy.SaStfMemberIdSource = existingCopies[this.SaStfMemberIdSource] as SaStfMember;
			else
				copy.SaStfMemberIdSource = MakeCopyOf(this.SaStfMemberIdSource, existingCopies) as SaStfMember;
		
			//deep copy nested objects
			copy.PgThesisCommRptCollection = (TList<PgThesisCommRpt>) MakeCopyOf(this.PgThesisCommRptCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed PgThesisCommMember Entity 
		///</summary>
		public virtual PgThesisCommMember Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed PgThesisCommMember Entity which is a deep copy of the current entity.
		///</summary>
		public virtual PgThesisCommMember DeepCopy()
		{
			return EntityHelper.Clone<PgThesisCommMember>(this as PgThesisCommMember);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as PgThesisCommMemberEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new PgThesisCommMemberEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as PgThesisCommMemberEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(PgThesisCommMemberColumn column)
		{
			switch(column)
			{
					case PgThesisCommMemberColumn.PgThesisCommMemberId:
					return entityData.PgThesisCommMemberId != _originalData.PgThesisCommMemberId;
					case PgThesisCommMemberColumn.PgThesisCommId:
					return entityData.PgThesisCommId != _originalData.PgThesisCommId;
					case PgThesisCommMemberColumn.MemberTypeFlg:
					return entityData.MemberTypeFlg != _originalData.MemberTypeFlg;
					case PgThesisCommMemberColumn.SaStfMemberId:
					return entityData.SaStfMemberId != _originalData.SaStfMemberId;
					case PgThesisCommMemberColumn.PgExtMemberId:
					return entityData.PgExtMemberId != _originalData.PgExtMemberId;
					case PgThesisCommMemberColumn.PgCdeStfRoleId:
					return entityData.PgCdeStfRoleId != _originalData.PgCdeStfRoleId;
					case PgThesisCommMemberColumn.StartDate:
					return entityData.StartDate != _originalData.StartDate;
					case PgThesisCommMemberColumn.EndDate:
					return entityData.EndDate != _originalData.EndDate;
					case PgThesisCommMemberColumn.PgCodeSupervisorChgRsnId:
					return entityData.PgCodeSupervisorChgRsnId != _originalData.PgCodeSupervisorChgRsnId;
					case PgThesisCommMemberColumn.MemberNameAr:
					return entityData.MemberNameAr != _originalData.MemberNameAr;
					case PgThesisCommMemberColumn.MemberNameEn:
					return entityData.MemberNameEn != _originalData.MemberNameEn;
					case PgThesisCommMemberColumn.IsActive:
					return entityData.IsActive != _originalData.IsActive;
					case PgThesisCommMemberColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
					case PgThesisCommMemberColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< PgThesisCommMemberColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.PgThesisCommMemberId != _originalData.PgThesisCommMemberId;
			result = result || entityData.PgThesisCommId != _originalData.PgThesisCommId;
			result = result || entityData.MemberTypeFlg != _originalData.MemberTypeFlg;
			result = result || entityData.SaStfMemberId != _originalData.SaStfMemberId;
			result = result || entityData.PgExtMemberId != _originalData.PgExtMemberId;
			result = result || entityData.PgCdeStfRoleId != _originalData.PgCdeStfRoleId;
			result = result || entityData.StartDate != _originalData.StartDate;
			result = result || entityData.EndDate != _originalData.EndDate;
			result = result || entityData.PgCodeSupervisorChgRsnId != _originalData.PgCodeSupervisorChgRsnId;
			result = result || entityData.MemberNameAr != _originalData.MemberNameAr;
			result = result || entityData.MemberNameEn != _originalData.MemberNameEn;
			result = result || entityData.IsActive != _originalData.IsActive;
			result = result || entityData.LastDate != _originalData.LastDate;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			return result;
		}	
		
		///<summary>
		///  Returns a PgThesisCommMember Entity with the original data.
		///</summary>
		public PgThesisCommMember GetOriginalEntity()
		{
			if (_originalData != null)
				return CreatePgThesisCommMember(
				_originalData.PgThesisCommMemberId,
				_originalData.PgThesisCommId,
				_originalData.MemberTypeFlg,
				_originalData.SaStfMemberId,
				_originalData.PgExtMemberId,
				_originalData.PgCdeStfRoleId,
				_originalData.StartDate,
				_originalData.EndDate,
				_originalData.PgCodeSupervisorChgRsnId,
				_originalData.MemberNameAr,
				_originalData.MemberNameEn,
				_originalData.IsActive,
				_originalData.LastDate,
				_originalData.SeUserId
				);
				
			return (PgThesisCommMember)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="PgThesisCommMemberBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is PgThesisCommMemberBase)
				return ValueEquals(this, (PgThesisCommMemberBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="PgThesisCommMemberBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.PgThesisCommMemberId.GetHashCode() ^ 
					this.PgThesisCommId.GetHashCode() ^ 
					((this.MemberTypeFlg == null) ? string.Empty : this.MemberTypeFlg.ToString()).GetHashCode() ^ 
					((this.SaStfMemberId == null) ? string.Empty : this.SaStfMemberId.ToString()).GetHashCode() ^ 
					((this.PgExtMemberId == null) ? string.Empty : this.PgExtMemberId.ToString()).GetHashCode() ^ 
					this.PgCdeStfRoleId.GetHashCode() ^ 
					((this.StartDate == null) ? string.Empty : this.StartDate.ToString()).GetHashCode() ^ 
					((this.EndDate == null) ? string.Empty : this.EndDate.ToString()).GetHashCode() ^ 
					((this.PgCodeSupervisorChgRsnId == null) ? string.Empty : this.PgCodeSupervisorChgRsnId.ToString()).GetHashCode() ^ 
					((this.MemberNameAr == null) ? string.Empty : this.MemberNameAr.ToString()).GetHashCode() ^ 
					((this.MemberNameEn == null) ? string.Empty : this.MemberNameEn.ToString()).GetHashCode() ^ 
					((this.IsActive == null) ? string.Empty : this.IsActive.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="PgThesisCommMemberBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(PgThesisCommMemberBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="PgThesisCommMemberBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="PgThesisCommMemberBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="PgThesisCommMemberBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(PgThesisCommMemberBase Object1, PgThesisCommMemberBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.PgThesisCommMemberId != Object2.PgThesisCommMemberId)
				equal = false;
			if (Object1.PgThesisCommId != Object2.PgThesisCommId)
				equal = false;
			if ( Object1.MemberTypeFlg != null && Object2.MemberTypeFlg != null )
			{
				if (Object1.MemberTypeFlg != Object2.MemberTypeFlg)
					equal = false;
			}
			else if (Object1.MemberTypeFlg == null ^ Object2.MemberTypeFlg == null )
			{
				equal = false;
			}
			if ( Object1.SaStfMemberId != null && Object2.SaStfMemberId != null )
			{
				if (Object1.SaStfMemberId != Object2.SaStfMemberId)
					equal = false;
			}
			else if (Object1.SaStfMemberId == null ^ Object2.SaStfMemberId == null )
			{
				equal = false;
			}
			if ( Object1.PgExtMemberId != null && Object2.PgExtMemberId != null )
			{
				if (Object1.PgExtMemberId != Object2.PgExtMemberId)
					equal = false;
			}
			else if (Object1.PgExtMemberId == null ^ Object2.PgExtMemberId == null )
			{
				equal = false;
			}
			if (Object1.PgCdeStfRoleId != Object2.PgCdeStfRoleId)
				equal = false;
			if ( Object1.StartDate != null && Object2.StartDate != null )
			{
				if (Object1.StartDate != Object2.StartDate)
					equal = false;
			}
			else if (Object1.StartDate == null ^ Object2.StartDate == null )
			{
				equal = false;
			}
			if ( Object1.EndDate != null && Object2.EndDate != null )
			{
				if (Object1.EndDate != Object2.EndDate)
					equal = false;
			}
			else if (Object1.EndDate == null ^ Object2.EndDate == null )
			{
				equal = false;
			}
			if ( Object1.PgCodeSupervisorChgRsnId != null && Object2.PgCodeSupervisorChgRsnId != null )
			{
				if (Object1.PgCodeSupervisorChgRsnId != Object2.PgCodeSupervisorChgRsnId)
					equal = false;
			}
			else if (Object1.PgCodeSupervisorChgRsnId == null ^ Object2.PgCodeSupervisorChgRsnId == null )
			{
				equal = false;
			}
			if ( Object1.MemberNameAr != null && Object2.MemberNameAr != null )
			{
				if (Object1.MemberNameAr != Object2.MemberNameAr)
					equal = false;
			}
			else if (Object1.MemberNameAr == null ^ Object2.MemberNameAr == null )
			{
				equal = false;
			}
			if ( Object1.MemberNameEn != null && Object2.MemberNameEn != null )
			{
				if (Object1.MemberNameEn != Object2.MemberNameEn)
					equal = false;
			}
			else if (Object1.MemberNameEn == null ^ Object2.MemberNameEn == null )
			{
				equal = false;
			}
			if ( Object1.IsActive != null && Object2.IsActive != null )
			{
				if (Object1.IsActive != Object2.IsActive)
					equal = false;
			}
			else if (Object1.IsActive == null ^ Object2.IsActive == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((PgThesisCommMemberBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static PgThesisCommMemberComparer GetComparer()
        {
            return new PgThesisCommMemberComparer();
        }
        */

        // Comparer delegates back to PgThesisCommMember
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(PgThesisCommMember rhs, PgThesisCommMemberColumn which)
        {
            switch (which)
            {
            	
            	
            	case PgThesisCommMemberColumn.PgThesisCommMemberId:
            		return this.PgThesisCommMemberId.CompareTo(rhs.PgThesisCommMemberId);
            		
            		                 
            	
            	
            	case PgThesisCommMemberColumn.PgThesisCommId:
            		return this.PgThesisCommId.CompareTo(rhs.PgThesisCommId);
            		
            		                 
            	
            	
            	case PgThesisCommMemberColumn.MemberTypeFlg:
            		return this.MemberTypeFlg.Value.CompareTo(rhs.MemberTypeFlg.Value);
            		
            		                 
            	
            	
            	case PgThesisCommMemberColumn.SaStfMemberId:
            		return this.SaStfMemberId.Value.CompareTo(rhs.SaStfMemberId.Value);
            		
            		                 
            	
            	
            	case PgThesisCommMemberColumn.PgExtMemberId:
            		return this.PgExtMemberId.Value.CompareTo(rhs.PgExtMemberId.Value);
            		
            		                 
            	
            	
            	case PgThesisCommMemberColumn.PgCdeStfRoleId:
            		return this.PgCdeStfRoleId.CompareTo(rhs.PgCdeStfRoleId);
            		
            		                 
            	
            	
            	case PgThesisCommMemberColumn.StartDate:
            		return this.StartDate.Value.CompareTo(rhs.StartDate.Value);
            		
            		                 
            	
            	
            	case PgThesisCommMemberColumn.EndDate:
            		return this.EndDate.Value.CompareTo(rhs.EndDate.Value);
            		
            		                 
            	
            	
            	case PgThesisCommMemberColumn.PgCodeSupervisorChgRsnId:
            		return this.PgCodeSupervisorChgRsnId.Value.CompareTo(rhs.PgCodeSupervisorChgRsnId.Value);
            		
            		                 
            	
            	
            	case PgThesisCommMemberColumn.MemberNameAr:
            		return this.MemberNameAr.CompareTo(rhs.MemberNameAr);
            		
            		                 
            	
            	
            	case PgThesisCommMemberColumn.MemberNameEn:
            		return this.MemberNameEn.CompareTo(rhs.MemberNameEn);
            		
            		                 
            	
            	
            	case PgThesisCommMemberColumn.IsActive:
            		return this.IsActive.Value.CompareTo(rhs.IsActive.Value);
            		
            		                 
            	
            	
            	case PgThesisCommMemberColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            	
            	
            	case PgThesisCommMemberColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<PgThesisCommMemberKey> Members
		
		// member variable for the EntityId property
		private PgThesisCommMemberKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual PgThesisCommMemberKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new PgThesisCommMemberKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("PgThesisCommMember")
					.Append("|").Append( this.PgThesisCommMemberId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{15}{14}- PgThesisCommMemberId: {0}{14}- PgThesisCommId: {1}{14}- MemberTypeFlg: {2}{14}- SaStfMemberId: {3}{14}- PgExtMemberId: {4}{14}- PgCdeStfRoleId: {5}{14}- StartDate: {6}{14}- EndDate: {7}{14}- PgCodeSupervisorChgRsnId: {8}{14}- MemberNameAr: {9}{14}- MemberNameEn: {10}{14}- IsActive: {11}{14}- LastDate: {12}{14}- SeUserId: {13}{14}{16}", 
				this.PgThesisCommMemberId,
				this.PgThesisCommId,
				(this.MemberTypeFlg == null) ? string.Empty : this.MemberTypeFlg.ToString(),
				(this.SaStfMemberId == null) ? string.Empty : this.SaStfMemberId.ToString(),
				(this.PgExtMemberId == null) ? string.Empty : this.PgExtMemberId.ToString(),
				this.PgCdeStfRoleId,
				(this.StartDate == null) ? string.Empty : this.StartDate.ToString(),
				(this.EndDate == null) ? string.Empty : this.EndDate.ToString(),
				(this.PgCodeSupervisorChgRsnId == null) ? string.Empty : this.PgCodeSupervisorChgRsnId.ToString(),
				(this.MemberNameAr == null) ? string.Empty : this.MemberNameAr.ToString(),
				(this.MemberNameEn == null) ? string.Empty : this.MemberNameEn.ToString(),
				(this.IsActive == null) ? string.Empty : this.IsActive.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'PG_THESIS_COMM_MEMBER' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class PgThesisCommMemberEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// PG_THESIS_COMM_MEMBER_ID : اعضاء لجنة المناقشة والحكم
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "PG_THESIS_COMM_MEMBER"</remarks>
		public System.Decimal PgThesisCommMemberId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalPgThesisCommMemberId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// PG_THESIS_COMM_ID : تشكيل لجنة المناقشة
		/// </summary>
		public System.Decimal		  PgThesisCommId = 0.0m;
		
		/// <summary>
		/// MEMBER_TYPE_FLG : نوع العضو داخلي = 0 / خارجي = 1
		/// </summary>
		public System.Int16?		  MemberTypeFlg = null;
		
		/// <summary>
		/// SA_STF_MEMBER_ID : داخلي  يتم الاختيار من اعضاء هيئه التدريس
		/// </summary>
		public System.Decimal?		  SaStfMemberId = null;
		
		/// <summary>
		/// PG_EXT_MEMBER_ID : مسلسل مشرف/محكم خارجى
		/// </summary>
		public System.Decimal?		  PgExtMemberId = null;
		
		/// <summary>
		/// PG_CDE_STF_ROLE_ID : دور العضو فى لجنه الاشراف على الرسالة
		/// </summary>
		public System.Int32		  PgCdeStfRoleId = (int)0;
		
		/// <summary>
		/// START_DATE : XXتاريخ بداية فترة الإشراف
		/// </summary>
		public System.DateTime?		  StartDate = null;
		
		/// <summary>
		/// END_DATE : XXتاريخ نهاية فترة الإشراف
		/// </summary>
		public System.DateTime?		  EndDate = null;
		
		/// <summary>
		/// PG_CODE_SUPERVISOR_CHG_RSN_ID : كود سبب تعديل المشرف
		/// </summary>
		public System.Int32?		  PgCodeSupervisorChgRsnId = null;
		
		/// <summary>
		/// MEMBER_NAME_AR : XXCSS خارجي يتم ادخال الاسم
		/// </summary>
		public System.String		  MemberNameAr = null;
		
		/// <summary>
		/// MEMBER_NAME_EN : XXCSS
		/// </summary>
		public System.String		  MemberNameEn = null;
		
		/// <summary>
		/// IS_ACTIVE : الحالة نشط/غير نشط
		/// </summary>
		public System.Boolean?		  IsActive = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private PgCdeStfRole _pgCdeStfRoleIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="PgCdeStfRole"/>.
		/// </summary>
		/// <value>The source PgCdeStfRole for PgCdeStfRoleId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual PgCdeStfRole PgCdeStfRoleIdSource
      	{
            get { return this._pgCdeStfRoleIdSource; }
            set { this._pgCdeStfRoleIdSource = value; }
      	}
		private PgCodeSupervisorChgRsn _pgCodeSupervisorChgRsnIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="PgCodeSupervisorChgRsn"/>.
		/// </summary>
		/// <value>The source PgCodeSupervisorChgRsn for PgCodeSupervisorChgRsnId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual PgCodeSupervisorChgRsn PgCodeSupervisorChgRsnIdSource
      	{
            get { return this._pgCodeSupervisorChgRsnIdSource; }
            set { this._pgCodeSupervisorChgRsnIdSource = value; }
      	}
		private PgExtMember _pgExtMemberIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="PgExtMember"/>.
		/// </summary>
		/// <value>The source PgExtMember for PgExtMemberId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual PgExtMember PgExtMemberIdSource
      	{
            get { return this._pgExtMemberIdSource; }
            set { this._pgExtMemberIdSource = value; }
      	}
		private PgThesisComm _pgThesisCommIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="PgThesisComm"/>.
		/// </summary>
		/// <value>The source PgThesisComm for PgThesisCommId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual PgThesisComm PgThesisCommIdSource
      	{
            get { return this._pgThesisCommIdSource; }
            set { this._pgThesisCommIdSource = value; }
      	}
		private SaStfMember _saStfMemberIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SaStfMember"/>.
		/// </summary>
		/// <value>The source SaStfMember for SaStfMemberId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SaStfMember SaStfMemberIdSource
      	{
            get { return this._saStfMemberIdSource; }
            set { this._saStfMemberIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region PgThesisCommRptCollection
		
		private TList<PgThesisCommRpt> _pgThesisCommRptPgThesisCommMemberId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisCommRptPgThesisCommMemberId
		/// </summary>
		
		public TList<PgThesisCommRpt> PgThesisCommRptCollection
		{
			get
			{
				if (_pgThesisCommRptPgThesisCommMemberId == null)
				{
				_pgThesisCommRptPgThesisCommMemberId = new TList<PgThesisCommRpt>();
				}
	
				return _pgThesisCommRptPgThesisCommMemberId;
			}
			set { _pgThesisCommRptPgThesisCommMemberId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			PgThesisCommMemberEntityData _tmp = new PgThesisCommMemberEntityData();
						
			_tmp.PgThesisCommMemberId = this.PgThesisCommMemberId;
			_tmp.OriginalPgThesisCommMemberId = this.OriginalPgThesisCommMemberId;
			
			_tmp.PgThesisCommId = this.PgThesisCommId;
			_tmp.MemberTypeFlg = this.MemberTypeFlg;
			_tmp.SaStfMemberId = this.SaStfMemberId;
			_tmp.PgExtMemberId = this.PgExtMemberId;
			_tmp.PgCdeStfRoleId = this.PgCdeStfRoleId;
			_tmp.StartDate = this.StartDate;
			_tmp.EndDate = this.EndDate;
			_tmp.PgCodeSupervisorChgRsnId = this.PgCodeSupervisorChgRsnId;
			_tmp.MemberNameAr = this.MemberNameAr;
			_tmp.MemberNameEn = this.MemberNameEn;
			_tmp.IsActive = this.IsActive;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserId = this.SeUserId;
			
			#region Source Parent Composite Entities
			if (this.PgCdeStfRoleIdSource != null)
				_tmp.PgCdeStfRoleIdSource = MakeCopyOf(this.PgCdeStfRoleIdSource) as PgCdeStfRole;
			if (this.PgCodeSupervisorChgRsnIdSource != null)
				_tmp.PgCodeSupervisorChgRsnIdSource = MakeCopyOf(this.PgCodeSupervisorChgRsnIdSource) as PgCodeSupervisorChgRsn;
			if (this.PgExtMemberIdSource != null)
				_tmp.PgExtMemberIdSource = MakeCopyOf(this.PgExtMemberIdSource) as PgExtMember;
			if (this.PgThesisCommIdSource != null)
				_tmp.PgThesisCommIdSource = MakeCopyOf(this.PgThesisCommIdSource) as PgThesisComm;
			if (this.SaStfMemberIdSource != null)
				_tmp.SaStfMemberIdSource = MakeCopyOf(this.SaStfMemberIdSource) as SaStfMember;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._pgThesisCommRptPgThesisCommMemberId != null)
				_tmp.PgThesisCommRptCollection = (TList<PgThesisCommRpt>) MakeCopyOf(this.PgThesisCommRptCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			PgThesisCommMemberEntityData _tmp = new PgThesisCommMemberEntityData();
						
			_tmp.PgThesisCommMemberId = this.PgThesisCommMemberId;
			_tmp.OriginalPgThesisCommMemberId = this.OriginalPgThesisCommMemberId;
			
			_tmp.PgThesisCommId = this.PgThesisCommId;
			_tmp.MemberTypeFlg = this.MemberTypeFlg;
			_tmp.SaStfMemberId = this.SaStfMemberId;
			_tmp.PgExtMemberId = this.PgExtMemberId;
			_tmp.PgCdeStfRoleId = this.PgCdeStfRoleId;
			_tmp.StartDate = this.StartDate;
			_tmp.EndDate = this.EndDate;
			_tmp.PgCodeSupervisorChgRsnId = this.PgCodeSupervisorChgRsnId;
			_tmp.MemberNameAr = this.MemberNameAr;
			_tmp.MemberNameEn = this.MemberNameEn;
			_tmp.IsActive = this.IsActive;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserId = this.SeUserId;
			
			#region Source Parent Composite Entities
			if (this.PgCdeStfRoleIdSource != null && existingCopies.Contains(this.PgCdeStfRoleIdSource))
				_tmp.PgCdeStfRoleIdSource = existingCopies[this.PgCdeStfRoleIdSource] as PgCdeStfRole;
			else
				_tmp.PgCdeStfRoleIdSource = MakeCopyOf(this.PgCdeStfRoleIdSource, existingCopies) as PgCdeStfRole;
			if (this.PgCodeSupervisorChgRsnIdSource != null && existingCopies.Contains(this.PgCodeSupervisorChgRsnIdSource))
				_tmp.PgCodeSupervisorChgRsnIdSource = existingCopies[this.PgCodeSupervisorChgRsnIdSource] as PgCodeSupervisorChgRsn;
			else
				_tmp.PgCodeSupervisorChgRsnIdSource = MakeCopyOf(this.PgCodeSupervisorChgRsnIdSource, existingCopies) as PgCodeSupervisorChgRsn;
			if (this.PgExtMemberIdSource != null && existingCopies.Contains(this.PgExtMemberIdSource))
				_tmp.PgExtMemberIdSource = existingCopies[this.PgExtMemberIdSource] as PgExtMember;
			else
				_tmp.PgExtMemberIdSource = MakeCopyOf(this.PgExtMemberIdSource, existingCopies) as PgExtMember;
			if (this.PgThesisCommIdSource != null && existingCopies.Contains(this.PgThesisCommIdSource))
				_tmp.PgThesisCommIdSource = existingCopies[this.PgThesisCommIdSource] as PgThesisComm;
			else
				_tmp.PgThesisCommIdSource = MakeCopyOf(this.PgThesisCommIdSource, existingCopies) as PgThesisComm;
			if (this.SaStfMemberIdSource != null && existingCopies.Contains(this.SaStfMemberIdSource))
				_tmp.SaStfMemberIdSource = existingCopies[this.SaStfMemberIdSource] as SaStfMember;
			else
				_tmp.SaStfMemberIdSource = MakeCopyOf(this.SaStfMemberIdSource, existingCopies) as SaStfMember;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.PgThesisCommRptCollection = (TList<PgThesisCommRpt>) MakeCopyOf(this.PgThesisCommRptCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PgThesisCommMemberColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(PgThesisCommMemberColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PgThesisCommMemberColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(PgThesisCommMemberColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PgThesisCommMemberColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(PgThesisCommMemberColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				PgThesisCommMemberEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new PgThesisCommMemberEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PgThesisCommMemberColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(PgThesisCommMemberColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				PgThesisCommMemberEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new PgThesisCommMemberEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region PgThesisCommMemberEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="PgThesisCommMember"/> object.
	/// </remarks>
	public class PgThesisCommMemberEventArgs : System.EventArgs
	{
		private PgThesisCommMemberColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the PgThesisCommMemberEventArgs class.
		///</summary>
		public PgThesisCommMemberEventArgs(PgThesisCommMemberColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the PgThesisCommMemberEventArgs class.
		///</summary>
		public PgThesisCommMemberEventArgs(PgThesisCommMemberColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The PgThesisCommMemberColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="PgThesisCommMemberColumn" />
		public PgThesisCommMemberColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all PgThesisCommMember related events.
	///</summary>
	public delegate void PgThesisCommMemberEventHandler(object sender, PgThesisCommMemberEventArgs e);
	
	#region PgThesisCommMemberComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class PgThesisCommMemberComparer : System.Collections.Generic.IComparer<PgThesisCommMember>
	{
		PgThesisCommMemberColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:PgThesisCommMemberComparer"/> class.
        /// </summary>
		public PgThesisCommMemberComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:PgThesisCommMemberComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public PgThesisCommMemberComparer(PgThesisCommMemberColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="PgThesisCommMember"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="PgThesisCommMember"/> to compare.</param>
        /// <param name="b">The second <c>PgThesisCommMember</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(PgThesisCommMember a, PgThesisCommMember b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(PgThesisCommMember entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(PgThesisCommMember a, PgThesisCommMember b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public PgThesisCommMemberColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region PgThesisCommMemberKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="PgThesisCommMember"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class PgThesisCommMemberKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the PgThesisCommMemberKey class.
		/// </summary>
		public PgThesisCommMemberKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the PgThesisCommMemberKey class.
		/// </summary>
		public PgThesisCommMemberKey(PgThesisCommMemberBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.PgThesisCommMemberId = entity.PgThesisCommMemberId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the PgThesisCommMemberKey class.
		/// </summary>
		public PgThesisCommMemberKey(System.Decimal _pgThesisCommMemberId)
		{
			#region Init Properties

			this.PgThesisCommMemberId = _pgThesisCommMemberId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private PgThesisCommMemberBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public PgThesisCommMemberBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the PgThesisCommMemberId property
		private System.Decimal _pgThesisCommMemberId;
		
		/// <summary>
		/// Gets or sets the PgThesisCommMemberId property.
		/// </summary>
		public System.Decimal PgThesisCommMemberId
		{
			get { return _pgThesisCommMemberId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.PgThesisCommMemberId = value;
				
				_pgThesisCommMemberId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				PgThesisCommMemberId = ( values["PgThesisCommMemberId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["PgThesisCommMemberId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("PgThesisCommMemberId", PgThesisCommMemberId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("PgThesisCommMemberId: {0}{1}",
								PgThesisCommMemberId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region PgThesisCommMemberColumn Enum
	
	/// <summary>
	/// Enumerate the PgThesisCommMember columns.
	/// </summary>
	[Serializable]
	public enum PgThesisCommMemberColumn : int
	{
		/// <summary>
		/// PgThesisCommMemberId : اعضاء لجنة المناقشة والحكم
		/// </summary>
		[EnumTextValue("PG_THESIS_COMM_MEMBER_ID")]
		[ColumnEnum("PG_THESIS_COMM_MEMBER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		PgThesisCommMemberId = 1,
		/// <summary>
		/// PgThesisCommId : تشكيل لجنة المناقشة
		/// </summary>
		[EnumTextValue("PG_THESIS_COMM_ID")]
		[ColumnEnum("PG_THESIS_COMM_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		PgThesisCommId = 2,
		/// <summary>
		/// MemberTypeFlg : نوع العضو داخلي = 0 / خارجي = 1
		/// </summary>
		[EnumTextValue("MEMBER_TYPE_FLG")]
		[ColumnEnum("MEMBER_TYPE_FLG", typeof(System.Int16), System.Data.DbType.Int16, false, false, true)]
		MemberTypeFlg = 3,
		/// <summary>
		/// SaStfMemberId : داخلي  يتم الاختيار من اعضاء هيئه التدريس
		/// </summary>
		[EnumTextValue("SA_STF_MEMBER_ID")]
		[ColumnEnum("SA_STF_MEMBER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SaStfMemberId = 4,
		/// <summary>
		/// PgExtMemberId : مسلسل مشرف/محكم خارجى
		/// </summary>
		[EnumTextValue("PG_EXT_MEMBER_ID")]
		[ColumnEnum("PG_EXT_MEMBER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PgExtMemberId = 5,
		/// <summary>
		/// PgCdeStfRoleId : دور العضو فى لجنه الاشراف على الرسالة
		/// </summary>
		[EnumTextValue("PG_CDE_STF_ROLE_ID")]
		[ColumnEnum("PG_CDE_STF_ROLE_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		PgCdeStfRoleId = 6,
		/// <summary>
		/// StartDate : XXتاريخ بداية فترة الإشراف
		/// </summary>
		[EnumTextValue("START_DATE")]
		[ColumnEnum("START_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		StartDate = 7,
		/// <summary>
		/// EndDate : XXتاريخ نهاية فترة الإشراف
		/// </summary>
		[EnumTextValue("END_DATE")]
		[ColumnEnum("END_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		EndDate = 8,
		/// <summary>
		/// PgCodeSupervisorChgRsnId : كود سبب تعديل المشرف
		/// </summary>
		[EnumTextValue("PG_CODE_SUPERVISOR_CHG_RSN_ID")]
		[ColumnEnum("PG_CODE_SUPERVISOR_CHG_RSN_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		PgCodeSupervisorChgRsnId = 9,
		/// <summary>
		/// MemberNameAr : XXCSS خارجي يتم ادخال الاسم
		/// </summary>
		[EnumTextValue("MEMBER_NAME_AR")]
		[ColumnEnum("MEMBER_NAME_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		MemberNameAr = 10,
		/// <summary>
		/// MemberNameEn : XXCSS
		/// </summary>
		[EnumTextValue("MEMBER_NAME_EN")]
		[ColumnEnum("MEMBER_NAME_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		MemberNameEn = 11,
		/// <summary>
		/// IsActive : الحالة نشط/غير نشط
		/// </summary>
		[EnumTextValue("IS_ACTIVE")]
		[ColumnEnum("IS_ACTIVE", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		IsActive = 12,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 13,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 14
	}//End enum

	#endregion PgThesisCommMemberColumn Enum

} // end namespace
