
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file EntPolicyAccumHonor.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ENT_POLICY_ACCUM_HONOR' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class EntPolicyAccumHonorBase : EntityBase, IEntPolicyAccumHonor, IEntityId<EntPolicyAccumHonorKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private EntPolicyAccumHonorEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private EntPolicyAccumHonorEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private EntPolicyAccumHonorEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<EntPolicyAccumHonor> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EntPolicyAccumHonorEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EntPolicyAccumHonorEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="EntPolicyAccumHonorBase"/> instance.
		///</summary>
		public EntPolicyAccumHonorBase()
		{
			this.entityData = new EntPolicyAccumHonorEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="EntPolicyAccumHonorBase"/> instance.
		///</summary>
		///<param name="_entPolicyAccumHonorId">مراتب الشرف  التراكمية</param>
		///<param name="_gsCdeHonorId"></param>
		///<param name="_allowSubjFailure">مؤشر الرسوب فى مقرر</param>
		///<param name="_maxNoYears">عدد الفصول</param>
		///<param name="_gpaPointFrm">CGPA From</param>
		///<param name="_gpaPointTo">CGPA To</param>
		///<param name="_minLvlGradeId"></param>
		///<param name="_minLvlRate"></param>
		///<param name="_activityHourFlg"></param>
		///<param name="_courseRepeatFlg">عدم التحسين في اي مقرر</param>
		///<param name="_penltyFlg">عدم الخضوع لأي جزاء تأديبي</param>
		///<param name="_edBylawId"></param>
		///<param name="_noRaiseFlg">عدم حصول الطالب علي رأفة</param>
		///<param name="_excludeFrstYearFlg">او استثناء اول فرقة دراسية للطالب </param>
		public EntPolicyAccumHonorBase(System.Decimal _entPolicyAccumHonorId, System.Decimal? _gsCdeHonorId, 
			System.Decimal? _allowSubjFailure, System.Decimal? _maxNoYears, System.Decimal? _gpaPointFrm, 
			System.Decimal? _gpaPointTo, System.Decimal? _minLvlGradeId, System.Decimal? _minLvlRate, 
			System.Decimal? _activityHourFlg, System.Boolean? _courseRepeatFlg, System.Boolean? _penltyFlg, 
			System.Decimal? _edBylawId, System.Boolean? _noRaiseFlg, System.Boolean? _excludeFrstYearFlg)
		{
			this.entityData = new EntPolicyAccumHonorEntityData();
			this.backupData = null;

			this.EntPolicyAccumHonorId = _entPolicyAccumHonorId;
			this.GsCdeHonorId = _gsCdeHonorId;
			this.AllowSubjFailure = _allowSubjFailure;
			this.MaxNoYears = _maxNoYears;
			this.GpaPointFrm = _gpaPointFrm;
			this.GpaPointTo = _gpaPointTo;
			this.MinLvlGradeId = _minLvlGradeId;
			this.MinLvlRate = _minLvlRate;
			this.ActivityHourFlg = _activityHourFlg;
			this.CourseRepeatFlg = _courseRepeatFlg;
			this.PenltyFlg = _penltyFlg;
			this.EdBylawId = _edBylawId;
			this.NoRaiseFlg = _noRaiseFlg;
			this.ExcludeFrstYearFlg = _excludeFrstYearFlg;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="EntPolicyAccumHonor"/> instance.
		///</summary>
		///<param name="_entPolicyAccumHonorId">مراتب الشرف  التراكمية</param>
		///<param name="_gsCdeHonorId"></param>
		///<param name="_allowSubjFailure">مؤشر الرسوب فى مقرر</param>
		///<param name="_maxNoYears">عدد الفصول</param>
		///<param name="_gpaPointFrm">CGPA From</param>
		///<param name="_gpaPointTo">CGPA To</param>
		///<param name="_minLvlGradeId"></param>
		///<param name="_minLvlRate"></param>
		///<param name="_activityHourFlg"></param>
		///<param name="_courseRepeatFlg">عدم التحسين في اي مقرر</param>
		///<param name="_penltyFlg">عدم الخضوع لأي جزاء تأديبي</param>
		///<param name="_edBylawId"></param>
		///<param name="_noRaiseFlg">عدم حصول الطالب علي رأفة</param>
		///<param name="_excludeFrstYearFlg">او استثناء اول فرقة دراسية للطالب </param>
		public static EntPolicyAccumHonor CreateEntPolicyAccumHonor(System.Decimal _entPolicyAccumHonorId, System.Decimal? _gsCdeHonorId, 
			System.Decimal? _allowSubjFailure, System.Decimal? _maxNoYears, System.Decimal? _gpaPointFrm, 
			System.Decimal? _gpaPointTo, System.Decimal? _minLvlGradeId, System.Decimal? _minLvlRate, 
			System.Decimal? _activityHourFlg, System.Boolean? _courseRepeatFlg, System.Boolean? _penltyFlg, 
			System.Decimal? _edBylawId, System.Boolean? _noRaiseFlg, System.Boolean? _excludeFrstYearFlg)
		{
			EntPolicyAccumHonor newEntPolicyAccumHonor = new EntPolicyAccumHonor();
			newEntPolicyAccumHonor.EntPolicyAccumHonorId = _entPolicyAccumHonorId;
			newEntPolicyAccumHonor.GsCdeHonorId = _gsCdeHonorId;
			newEntPolicyAccumHonor.AllowSubjFailure = _allowSubjFailure;
			newEntPolicyAccumHonor.MaxNoYears = _maxNoYears;
			newEntPolicyAccumHonor.GpaPointFrm = _gpaPointFrm;
			newEntPolicyAccumHonor.GpaPointTo = _gpaPointTo;
			newEntPolicyAccumHonor.MinLvlGradeId = _minLvlGradeId;
			newEntPolicyAccumHonor.MinLvlRate = _minLvlRate;
			newEntPolicyAccumHonor.ActivityHourFlg = _activityHourFlg;
			newEntPolicyAccumHonor.CourseRepeatFlg = _courseRepeatFlg;
			newEntPolicyAccumHonor.PenltyFlg = _penltyFlg;
			newEntPolicyAccumHonor.EdBylawId = _edBylawId;
			newEntPolicyAccumHonor.NoRaiseFlg = _noRaiseFlg;
			newEntPolicyAccumHonor.ExcludeFrstYearFlg = _excludeFrstYearFlg;
			return newEntPolicyAccumHonor;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the EntPolicyAccumHonorId property. 
		///		مراتب الشرف  التراكمية
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"مراتب الشرف  التراكمية"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal EntPolicyAccumHonorId
		{
			get
			{
				return this.entityData.EntPolicyAccumHonorId; 
			}
			
			set
			{
				if (this.entityData.EntPolicyAccumHonorId == value)
					return;
					
				OnColumnChanging(EntPolicyAccumHonorColumn.EntPolicyAccumHonorId, this.entityData.EntPolicyAccumHonorId);
				this.entityData.EntPolicyAccumHonorId = value;
				this.EntityId.EntPolicyAccumHonorId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolicyAccumHonorColumn.EntPolicyAccumHonorId, this.entityData.EntPolicyAccumHonorId);
				OnPropertyChanged("EntPolicyAccumHonorId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ENT_POLICY_ACCUM_HONOR_ID property.
		///		مراتب الشرف  التراكمية
		/// </summary>
		/// <remarks>This is the original value of the ENT_POLICY_ACCUM_HONOR_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalEntPolicyAccumHonorId
		{
			get { return this.entityData.OriginalEntPolicyAccumHonorId; }
			set { this.entityData.OriginalEntPolicyAccumHonorId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the GsCdeHonorId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCdeHonorIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCdeHonorId
		{
			get
			{
				return this.entityData.GsCdeHonorId; 
			}
			
			set
			{
				if (this.entityData.GsCdeHonorId == value)
					return;
					
				OnColumnChanging(EntPolicyAccumHonorColumn.GsCdeHonorId, this.entityData.GsCdeHonorId);
				this.entityData.GsCdeHonorId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolicyAccumHonorColumn.GsCdeHonorId, this.entityData.GsCdeHonorId);
				OnPropertyChanged("GsCdeHonorId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AllowSubjFailure property. 
		///		مؤشر الرسوب فى مقرر
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAllowSubjFailureNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"مؤشر الرسوب فى مقرر"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AllowSubjFailure
		{
			get
			{
				return this.entityData.AllowSubjFailure; 
			}
			
			set
			{
				if (this.entityData.AllowSubjFailure == value)
					return;
					
				OnColumnChanging(EntPolicyAccumHonorColumn.AllowSubjFailure, this.entityData.AllowSubjFailure);
				this.entityData.AllowSubjFailure = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolicyAccumHonorColumn.AllowSubjFailure, this.entityData.AllowSubjFailure);
				OnPropertyChanged("AllowSubjFailure");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MaxNoYears property. 
		///		عدد الفصول
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsMaxNoYearsNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"عدد الفصول"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? MaxNoYears
		{
			get
			{
				return this.entityData.MaxNoYears; 
			}
			
			set
			{
				if (this.entityData.MaxNoYears == value)
					return;
					
				OnColumnChanging(EntPolicyAccumHonorColumn.MaxNoYears, this.entityData.MaxNoYears);
				this.entityData.MaxNoYears = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolicyAccumHonorColumn.MaxNoYears, this.entityData.MaxNoYears);
				OnPropertyChanged("MaxNoYears");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GpaPointFrm property. 
		///		CGPA From
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGpaPointFrmNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"CGPA From"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GpaPointFrm
		{
			get
			{
				return this.entityData.GpaPointFrm; 
			}
			
			set
			{
				if (this.entityData.GpaPointFrm == value)
					return;
					
				OnColumnChanging(EntPolicyAccumHonorColumn.GpaPointFrm, this.entityData.GpaPointFrm);
				this.entityData.GpaPointFrm = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolicyAccumHonorColumn.GpaPointFrm, this.entityData.GpaPointFrm);
				OnPropertyChanged("GpaPointFrm");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GpaPointTo property. 
		///		CGPA To
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGpaPointToNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"CGPA To"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GpaPointTo
		{
			get
			{
				return this.entityData.GpaPointTo; 
			}
			
			set
			{
				if (this.entityData.GpaPointTo == value)
					return;
					
				OnColumnChanging(EntPolicyAccumHonorColumn.GpaPointTo, this.entityData.GpaPointTo);
				this.entityData.GpaPointTo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolicyAccumHonorColumn.GpaPointTo, this.entityData.GpaPointTo);
				OnPropertyChanged("GpaPointTo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MinLvlGradeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsMinLvlGradeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? MinLvlGradeId
		{
			get
			{
				return this.entityData.MinLvlGradeId; 
			}
			
			set
			{
				if (this.entityData.MinLvlGradeId == value)
					return;
					
				OnColumnChanging(EntPolicyAccumHonorColumn.MinLvlGradeId, this.entityData.MinLvlGradeId);
				this.entityData.MinLvlGradeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolicyAccumHonorColumn.MinLvlGradeId, this.entityData.MinLvlGradeId);
				OnPropertyChanged("MinLvlGradeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the MinLvlRate property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsMinLvlRateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? MinLvlRate
		{
			get
			{
				return this.entityData.MinLvlRate; 
			}
			
			set
			{
				if (this.entityData.MinLvlRate == value)
					return;
					
				OnColumnChanging(EntPolicyAccumHonorColumn.MinLvlRate, this.entityData.MinLvlRate);
				this.entityData.MinLvlRate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolicyAccumHonorColumn.MinLvlRate, this.entityData.MinLvlRate);
				OnPropertyChanged("MinLvlRate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ActivityHourFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsActivityHourFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ActivityHourFlg
		{
			get
			{
				return this.entityData.ActivityHourFlg; 
			}
			
			set
			{
				if (this.entityData.ActivityHourFlg == value)
					return;
					
				OnColumnChanging(EntPolicyAccumHonorColumn.ActivityHourFlg, this.entityData.ActivityHourFlg);
				this.entityData.ActivityHourFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolicyAccumHonorColumn.ActivityHourFlg, this.entityData.ActivityHourFlg);
				OnPropertyChanged("ActivityHourFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CourseRepeatFlg property. 
		///		عدم التحسين في اي مقرر
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsCourseRepeatFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"عدم التحسين في اي مقرر"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? CourseRepeatFlg
		{
			get
			{
				return this.entityData.CourseRepeatFlg; 
			}
			
			set
			{
				if (this.entityData.CourseRepeatFlg == value)
					return;
					
				OnColumnChanging(EntPolicyAccumHonorColumn.CourseRepeatFlg, this.entityData.CourseRepeatFlg);
				this.entityData.CourseRepeatFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolicyAccumHonorColumn.CourseRepeatFlg, this.entityData.CourseRepeatFlg);
				OnPropertyChanged("CourseRepeatFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PenltyFlg property. 
		///		عدم الخضوع لأي جزاء تأديبي
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsPenltyFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"عدم الخضوع لأي جزاء تأديبي"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? PenltyFlg
		{
			get
			{
				return this.entityData.PenltyFlg; 
			}
			
			set
			{
				if (this.entityData.PenltyFlg == value)
					return;
					
				OnColumnChanging(EntPolicyAccumHonorColumn.PenltyFlg, this.entityData.PenltyFlg);
				this.entityData.PenltyFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolicyAccumHonorColumn.PenltyFlg, this.entityData.PenltyFlg);
				OnPropertyChanged("PenltyFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdBylawId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdBylawIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdBylawId
		{
			get
			{
				return this.entityData.EdBylawId; 
			}
			
			set
			{
				if (this.entityData.EdBylawId == value)
					return;
					
				OnColumnChanging(EntPolicyAccumHonorColumn.EdBylawId, this.entityData.EdBylawId);
				this.entityData.EdBylawId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolicyAccumHonorColumn.EdBylawId, this.entityData.EdBylawId);
				OnPropertyChanged("EdBylawId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the NoRaiseFlg property. 
		///		عدم حصول الطالب علي رأفة
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsNoRaiseFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"عدم حصول الطالب علي رأفة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? NoRaiseFlg
		{
			get
			{
				return this.entityData.NoRaiseFlg; 
			}
			
			set
			{
				if (this.entityData.NoRaiseFlg == value)
					return;
					
				OnColumnChanging(EntPolicyAccumHonorColumn.NoRaiseFlg, this.entityData.NoRaiseFlg);
				this.entityData.NoRaiseFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolicyAccumHonorColumn.NoRaiseFlg, this.entityData.NoRaiseFlg);
				OnPropertyChanged("NoRaiseFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ExcludeFrstYearFlg property. 
		///		او استثناء اول فرقة دراسية للطالب 
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return false. It is up to the developer
		/// to check the value of IsExcludeFrstYearFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"او استثناء اول فرقة دراسية للطالب "), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Boolean? ExcludeFrstYearFlg
		{
			get
			{
				return this.entityData.ExcludeFrstYearFlg; 
			}
			
			set
			{
				if (this.entityData.ExcludeFrstYearFlg == value)
					return;
					
				OnColumnChanging(EntPolicyAccumHonorColumn.ExcludeFrstYearFlg, this.entityData.ExcludeFrstYearFlg);
				this.entityData.ExcludeFrstYearFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EntPolicyAccumHonorColumn.ExcludeFrstYearFlg, this.entityData.ExcludeFrstYearFlg);
				OnPropertyChanged("ExcludeFrstYearFlg");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="EdBylaw"/>.
		/// </summary>
		/// <value>The source EdBylaw for EdBylawId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdBylaw EdBylawIdSource
      	{
            get { return entityData.EdBylawIdSource; }
            set { entityData.EdBylawIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeGrading"/>.
		/// </summary>
		/// <value>The source EdCodeGrading for MinLvlGradeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeGrading MinLvlGradeIdSource
      	{
            get { return entityData.MinLvlGradeIdSource; }
            set { entityData.MinLvlGradeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeHonor"/>.
		/// </summary>
		/// <value>The source GsCdeHonor for GsCdeHonorId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeHonor GsCdeHonorIdSource
      	{
            get { return entityData.GsCdeHonorIdSource; }
            set { entityData.GsCdeHonorIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of EdStudFaculty objects
		///	which are related to this object through the relation FK_ED_STUD_FACULTY_ENT_POLICY_ACCUM_HONOR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudFaculty> EdStudFacultyCollection
		{
			get { return entityData.EdStudFacultyCollection; }
			set { entityData.EdStudFacultyCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ENT_POLICY_ACCUM_HONOR"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ENT_POLICY_ACCUM_HONOR_ID", "GS_CDE_HONOR_ID", "ALLOW_SUBJ_FAILURE", "MAX_NO_YEARS", "GPA_POINT_FRM", "GPA_POINT_TO", "MIN_LVL_GRADE_ID", "MIN_LVL_RATE", "ACTIVITY_HOUR_FLG", "COURSE_REPEAT_FLG", "PENLTY_FLG", "ED_BYLAW_ID", "NO_RAISE_FLG", "EXCLUDE_FRST_YEAR_FLG"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as EntPolicyAccumHonorEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (EntPolicyAccumHonor) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<EntPolicyAccumHonor>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as EntPolicyAccumHonor);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed EntPolicyAccumHonor Entity 
		///</summary>
		protected virtual EntPolicyAccumHonor Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			EntPolicyAccumHonor copy = new EntPolicyAccumHonor();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.EntPolicyAccumHonorId = this.EntPolicyAccumHonorId;
					copy.OriginalEntPolicyAccumHonorId = this.OriginalEntPolicyAccumHonorId;
				copy.GsCdeHonorId = this.GsCdeHonorId;
				copy.AllowSubjFailure = this.AllowSubjFailure;
				copy.MaxNoYears = this.MaxNoYears;
				copy.GpaPointFrm = this.GpaPointFrm;
				copy.GpaPointTo = this.GpaPointTo;
				copy.MinLvlGradeId = this.MinLvlGradeId;
				copy.MinLvlRate = this.MinLvlRate;
				copy.ActivityHourFlg = this.ActivityHourFlg;
				copy.CourseRepeatFlg = this.CourseRepeatFlg;
				copy.PenltyFlg = this.PenltyFlg;
				copy.EdBylawId = this.EdBylawId;
				copy.NoRaiseFlg = this.NoRaiseFlg;
				copy.ExcludeFrstYearFlg = this.ExcludeFrstYearFlg;
			
			if (this.EdBylawIdSource != null && existingCopies.Contains(this.EdBylawIdSource))
				copy.EdBylawIdSource = existingCopies[this.EdBylawIdSource] as EdBylaw;
			else
				copy.EdBylawIdSource = MakeCopyOf(this.EdBylawIdSource, existingCopies) as EdBylaw;
			if (this.MinLvlGradeIdSource != null && existingCopies.Contains(this.MinLvlGradeIdSource))
				copy.MinLvlGradeIdSource = existingCopies[this.MinLvlGradeIdSource] as EdCodeGrading;
			else
				copy.MinLvlGradeIdSource = MakeCopyOf(this.MinLvlGradeIdSource, existingCopies) as EdCodeGrading;
			if (this.GsCdeHonorIdSource != null && existingCopies.Contains(this.GsCdeHonorIdSource))
				copy.GsCdeHonorIdSource = existingCopies[this.GsCdeHonorIdSource] as GsCdeHonor;
			else
				copy.GsCdeHonorIdSource = MakeCopyOf(this.GsCdeHonorIdSource, existingCopies) as GsCdeHonor;
		
			//deep copy nested objects
			copy.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed EntPolicyAccumHonor Entity 
		///</summary>
		public virtual EntPolicyAccumHonor Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed EntPolicyAccumHonor Entity which is a deep copy of the current entity.
		///</summary>
		public virtual EntPolicyAccumHonor DeepCopy()
		{
			return EntityHelper.Clone<EntPolicyAccumHonor>(this as EntPolicyAccumHonor);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as EntPolicyAccumHonorEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new EntPolicyAccumHonorEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as EntPolicyAccumHonorEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(EntPolicyAccumHonorColumn column)
		{
			switch(column)
			{
					case EntPolicyAccumHonorColumn.EntPolicyAccumHonorId:
					return entityData.EntPolicyAccumHonorId != _originalData.EntPolicyAccumHonorId;
					case EntPolicyAccumHonorColumn.GsCdeHonorId:
					return entityData.GsCdeHonorId != _originalData.GsCdeHonorId;
					case EntPolicyAccumHonorColumn.AllowSubjFailure:
					return entityData.AllowSubjFailure != _originalData.AllowSubjFailure;
					case EntPolicyAccumHonorColumn.MaxNoYears:
					return entityData.MaxNoYears != _originalData.MaxNoYears;
					case EntPolicyAccumHonorColumn.GpaPointFrm:
					return entityData.GpaPointFrm != _originalData.GpaPointFrm;
					case EntPolicyAccumHonorColumn.GpaPointTo:
					return entityData.GpaPointTo != _originalData.GpaPointTo;
					case EntPolicyAccumHonorColumn.MinLvlGradeId:
					return entityData.MinLvlGradeId != _originalData.MinLvlGradeId;
					case EntPolicyAccumHonorColumn.MinLvlRate:
					return entityData.MinLvlRate != _originalData.MinLvlRate;
					case EntPolicyAccumHonorColumn.ActivityHourFlg:
					return entityData.ActivityHourFlg != _originalData.ActivityHourFlg;
					case EntPolicyAccumHonorColumn.CourseRepeatFlg:
					return entityData.CourseRepeatFlg != _originalData.CourseRepeatFlg;
					case EntPolicyAccumHonorColumn.PenltyFlg:
					return entityData.PenltyFlg != _originalData.PenltyFlg;
					case EntPolicyAccumHonorColumn.EdBylawId:
					return entityData.EdBylawId != _originalData.EdBylawId;
					case EntPolicyAccumHonorColumn.NoRaiseFlg:
					return entityData.NoRaiseFlg != _originalData.NoRaiseFlg;
					case EntPolicyAccumHonorColumn.ExcludeFrstYearFlg:
					return entityData.ExcludeFrstYearFlg != _originalData.ExcludeFrstYearFlg;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< EntPolicyAccumHonorColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.EntPolicyAccumHonorId != _originalData.EntPolicyAccumHonorId;
			result = result || entityData.GsCdeHonorId != _originalData.GsCdeHonorId;
			result = result || entityData.AllowSubjFailure != _originalData.AllowSubjFailure;
			result = result || entityData.MaxNoYears != _originalData.MaxNoYears;
			result = result || entityData.GpaPointFrm != _originalData.GpaPointFrm;
			result = result || entityData.GpaPointTo != _originalData.GpaPointTo;
			result = result || entityData.MinLvlGradeId != _originalData.MinLvlGradeId;
			result = result || entityData.MinLvlRate != _originalData.MinLvlRate;
			result = result || entityData.ActivityHourFlg != _originalData.ActivityHourFlg;
			result = result || entityData.CourseRepeatFlg != _originalData.CourseRepeatFlg;
			result = result || entityData.PenltyFlg != _originalData.PenltyFlg;
			result = result || entityData.EdBylawId != _originalData.EdBylawId;
			result = result || entityData.NoRaiseFlg != _originalData.NoRaiseFlg;
			result = result || entityData.ExcludeFrstYearFlg != _originalData.ExcludeFrstYearFlg;
			return result;
		}	
		
		///<summary>
		///  Returns a EntPolicyAccumHonor Entity with the original data.
		///</summary>
		public EntPolicyAccumHonor GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateEntPolicyAccumHonor(
				_originalData.EntPolicyAccumHonorId,
				_originalData.GsCdeHonorId,
				_originalData.AllowSubjFailure,
				_originalData.MaxNoYears,
				_originalData.GpaPointFrm,
				_originalData.GpaPointTo,
				_originalData.MinLvlGradeId,
				_originalData.MinLvlRate,
				_originalData.ActivityHourFlg,
				_originalData.CourseRepeatFlg,
				_originalData.PenltyFlg,
				_originalData.EdBylawId,
				_originalData.NoRaiseFlg,
				_originalData.ExcludeFrstYearFlg
				);
				
			return (EntPolicyAccumHonor)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="EntPolicyAccumHonorBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is EntPolicyAccumHonorBase)
				return ValueEquals(this, (EntPolicyAccumHonorBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="EntPolicyAccumHonorBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.EntPolicyAccumHonorId.GetHashCode() ^ 
					((this.GsCdeHonorId == null) ? string.Empty : this.GsCdeHonorId.ToString()).GetHashCode() ^ 
					((this.AllowSubjFailure == null) ? string.Empty : this.AllowSubjFailure.ToString()).GetHashCode() ^ 
					((this.MaxNoYears == null) ? string.Empty : this.MaxNoYears.ToString()).GetHashCode() ^ 
					((this.GpaPointFrm == null) ? string.Empty : this.GpaPointFrm.ToString()).GetHashCode() ^ 
					((this.GpaPointTo == null) ? string.Empty : this.GpaPointTo.ToString()).GetHashCode() ^ 
					((this.MinLvlGradeId == null) ? string.Empty : this.MinLvlGradeId.ToString()).GetHashCode() ^ 
					((this.MinLvlRate == null) ? string.Empty : this.MinLvlRate.ToString()).GetHashCode() ^ 
					((this.ActivityHourFlg == null) ? string.Empty : this.ActivityHourFlg.ToString()).GetHashCode() ^ 
					((this.CourseRepeatFlg == null) ? string.Empty : this.CourseRepeatFlg.ToString()).GetHashCode() ^ 
					((this.PenltyFlg == null) ? string.Empty : this.PenltyFlg.ToString()).GetHashCode() ^ 
					((this.EdBylawId == null) ? string.Empty : this.EdBylawId.ToString()).GetHashCode() ^ 
					((this.NoRaiseFlg == null) ? string.Empty : this.NoRaiseFlg.ToString()).GetHashCode() ^ 
					((this.ExcludeFrstYearFlg == null) ? string.Empty : this.ExcludeFrstYearFlg.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="EntPolicyAccumHonorBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(EntPolicyAccumHonorBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="EntPolicyAccumHonorBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="EntPolicyAccumHonorBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="EntPolicyAccumHonorBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(EntPolicyAccumHonorBase Object1, EntPolicyAccumHonorBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.EntPolicyAccumHonorId != Object2.EntPolicyAccumHonorId)
				equal = false;
			if ( Object1.GsCdeHonorId != null && Object2.GsCdeHonorId != null )
			{
				if (Object1.GsCdeHonorId != Object2.GsCdeHonorId)
					equal = false;
			}
			else if (Object1.GsCdeHonorId == null ^ Object2.GsCdeHonorId == null )
			{
				equal = false;
			}
			if ( Object1.AllowSubjFailure != null && Object2.AllowSubjFailure != null )
			{
				if (Object1.AllowSubjFailure != Object2.AllowSubjFailure)
					equal = false;
			}
			else if (Object1.AllowSubjFailure == null ^ Object2.AllowSubjFailure == null )
			{
				equal = false;
			}
			if ( Object1.MaxNoYears != null && Object2.MaxNoYears != null )
			{
				if (Object1.MaxNoYears != Object2.MaxNoYears)
					equal = false;
			}
			else if (Object1.MaxNoYears == null ^ Object2.MaxNoYears == null )
			{
				equal = false;
			}
			if ( Object1.GpaPointFrm != null && Object2.GpaPointFrm != null )
			{
				if (Object1.GpaPointFrm != Object2.GpaPointFrm)
					equal = false;
			}
			else if (Object1.GpaPointFrm == null ^ Object2.GpaPointFrm == null )
			{
				equal = false;
			}
			if ( Object1.GpaPointTo != null && Object2.GpaPointTo != null )
			{
				if (Object1.GpaPointTo != Object2.GpaPointTo)
					equal = false;
			}
			else if (Object1.GpaPointTo == null ^ Object2.GpaPointTo == null )
			{
				equal = false;
			}
			if ( Object1.MinLvlGradeId != null && Object2.MinLvlGradeId != null )
			{
				if (Object1.MinLvlGradeId != Object2.MinLvlGradeId)
					equal = false;
			}
			else if (Object1.MinLvlGradeId == null ^ Object2.MinLvlGradeId == null )
			{
				equal = false;
			}
			if ( Object1.MinLvlRate != null && Object2.MinLvlRate != null )
			{
				if (Object1.MinLvlRate != Object2.MinLvlRate)
					equal = false;
			}
			else if (Object1.MinLvlRate == null ^ Object2.MinLvlRate == null )
			{
				equal = false;
			}
			if ( Object1.ActivityHourFlg != null && Object2.ActivityHourFlg != null )
			{
				if (Object1.ActivityHourFlg != Object2.ActivityHourFlg)
					equal = false;
			}
			else if (Object1.ActivityHourFlg == null ^ Object2.ActivityHourFlg == null )
			{
				equal = false;
			}
			if ( Object1.CourseRepeatFlg != null && Object2.CourseRepeatFlg != null )
			{
				if (Object1.CourseRepeatFlg != Object2.CourseRepeatFlg)
					equal = false;
			}
			else if (Object1.CourseRepeatFlg == null ^ Object2.CourseRepeatFlg == null )
			{
				equal = false;
			}
			if ( Object1.PenltyFlg != null && Object2.PenltyFlg != null )
			{
				if (Object1.PenltyFlg != Object2.PenltyFlg)
					equal = false;
			}
			else if (Object1.PenltyFlg == null ^ Object2.PenltyFlg == null )
			{
				equal = false;
			}
			if ( Object1.EdBylawId != null && Object2.EdBylawId != null )
			{
				if (Object1.EdBylawId != Object2.EdBylawId)
					equal = false;
			}
			else if (Object1.EdBylawId == null ^ Object2.EdBylawId == null )
			{
				equal = false;
			}
			if ( Object1.NoRaiseFlg != null && Object2.NoRaiseFlg != null )
			{
				if (Object1.NoRaiseFlg != Object2.NoRaiseFlg)
					equal = false;
			}
			else if (Object1.NoRaiseFlg == null ^ Object2.NoRaiseFlg == null )
			{
				equal = false;
			}
			if ( Object1.ExcludeFrstYearFlg != null && Object2.ExcludeFrstYearFlg != null )
			{
				if (Object1.ExcludeFrstYearFlg != Object2.ExcludeFrstYearFlg)
					equal = false;
			}
			else if (Object1.ExcludeFrstYearFlg == null ^ Object2.ExcludeFrstYearFlg == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((EntPolicyAccumHonorBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static EntPolicyAccumHonorComparer GetComparer()
        {
            return new EntPolicyAccumHonorComparer();
        }
        */

        // Comparer delegates back to EntPolicyAccumHonor
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(EntPolicyAccumHonor rhs, EntPolicyAccumHonorColumn which)
        {
            switch (which)
            {
            	
            	
            	case EntPolicyAccumHonorColumn.EntPolicyAccumHonorId:
            		return this.EntPolicyAccumHonorId.CompareTo(rhs.EntPolicyAccumHonorId);
            		
            		                 
            	
            	
            	case EntPolicyAccumHonorColumn.GsCdeHonorId:
            		return this.GsCdeHonorId.Value.CompareTo(rhs.GsCdeHonorId.Value);
            		
            		                 
            	
            	
            	case EntPolicyAccumHonorColumn.AllowSubjFailure:
            		return this.AllowSubjFailure.Value.CompareTo(rhs.AllowSubjFailure.Value);
            		
            		                 
            	
            	
            	case EntPolicyAccumHonorColumn.MaxNoYears:
            		return this.MaxNoYears.Value.CompareTo(rhs.MaxNoYears.Value);
            		
            		                 
            	
            	
            	case EntPolicyAccumHonorColumn.GpaPointFrm:
            		return this.GpaPointFrm.Value.CompareTo(rhs.GpaPointFrm.Value);
            		
            		                 
            	
            	
            	case EntPolicyAccumHonorColumn.GpaPointTo:
            		return this.GpaPointTo.Value.CompareTo(rhs.GpaPointTo.Value);
            		
            		                 
            	
            	
            	case EntPolicyAccumHonorColumn.MinLvlGradeId:
            		return this.MinLvlGradeId.Value.CompareTo(rhs.MinLvlGradeId.Value);
            		
            		                 
            	
            	
            	case EntPolicyAccumHonorColumn.MinLvlRate:
            		return this.MinLvlRate.Value.CompareTo(rhs.MinLvlRate.Value);
            		
            		                 
            	
            	
            	case EntPolicyAccumHonorColumn.ActivityHourFlg:
            		return this.ActivityHourFlg.Value.CompareTo(rhs.ActivityHourFlg.Value);
            		
            		                 
            	
            	
            	case EntPolicyAccumHonorColumn.CourseRepeatFlg:
            		return this.CourseRepeatFlg.Value.CompareTo(rhs.CourseRepeatFlg.Value);
            		
            		                 
            	
            	
            	case EntPolicyAccumHonorColumn.PenltyFlg:
            		return this.PenltyFlg.Value.CompareTo(rhs.PenltyFlg.Value);
            		
            		                 
            	
            	
            	case EntPolicyAccumHonorColumn.EdBylawId:
            		return this.EdBylawId.Value.CompareTo(rhs.EdBylawId.Value);
            		
            		                 
            	
            	
            	case EntPolicyAccumHonorColumn.NoRaiseFlg:
            		return this.NoRaiseFlg.Value.CompareTo(rhs.NoRaiseFlg.Value);
            		
            		                 
            	
            	
            	case EntPolicyAccumHonorColumn.ExcludeFrstYearFlg:
            		return this.ExcludeFrstYearFlg.Value.CompareTo(rhs.ExcludeFrstYearFlg.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<EntPolicyAccumHonorKey> Members
		
		// member variable for the EntityId property
		private EntPolicyAccumHonorKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual EntPolicyAccumHonorKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new EntPolicyAccumHonorKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("EntPolicyAccumHonor")
					.Append("|").Append( this.EntPolicyAccumHonorId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{15}{14}- EntPolicyAccumHonorId: {0}{14}- GsCdeHonorId: {1}{14}- AllowSubjFailure: {2}{14}- MaxNoYears: {3}{14}- GpaPointFrm: {4}{14}- GpaPointTo: {5}{14}- MinLvlGradeId: {6}{14}- MinLvlRate: {7}{14}- ActivityHourFlg: {8}{14}- CourseRepeatFlg: {9}{14}- PenltyFlg: {10}{14}- EdBylawId: {11}{14}- NoRaiseFlg: {12}{14}- ExcludeFrstYearFlg: {13}{14}{16}", 
				this.EntPolicyAccumHonorId,
				(this.GsCdeHonorId == null) ? string.Empty : this.GsCdeHonorId.ToString(),
				(this.AllowSubjFailure == null) ? string.Empty : this.AllowSubjFailure.ToString(),
				(this.MaxNoYears == null) ? string.Empty : this.MaxNoYears.ToString(),
				(this.GpaPointFrm == null) ? string.Empty : this.GpaPointFrm.ToString(),
				(this.GpaPointTo == null) ? string.Empty : this.GpaPointTo.ToString(),
				(this.MinLvlGradeId == null) ? string.Empty : this.MinLvlGradeId.ToString(),
				(this.MinLvlRate == null) ? string.Empty : this.MinLvlRate.ToString(),
				(this.ActivityHourFlg == null) ? string.Empty : this.ActivityHourFlg.ToString(),
				(this.CourseRepeatFlg == null) ? string.Empty : this.CourseRepeatFlg.ToString(),
				(this.PenltyFlg == null) ? string.Empty : this.PenltyFlg.ToString(),
				(this.EdBylawId == null) ? string.Empty : this.EdBylawId.ToString(),
				(this.NoRaiseFlg == null) ? string.Empty : this.NoRaiseFlg.ToString(),
				(this.ExcludeFrstYearFlg == null) ? string.Empty : this.ExcludeFrstYearFlg.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ENT_POLICY_ACCUM_HONOR' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class EntPolicyAccumHonorEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ENT_POLICY_ACCUM_HONOR_ID : مراتب الشرف  التراكمية
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ENT_POLICY_ACCUM_HONOR"</remarks>
		public System.Decimal EntPolicyAccumHonorId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalEntPolicyAccumHonorId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// GS_CDE_HONOR_ID : 
		/// </summary>
		public System.Decimal?		  GsCdeHonorId = null;
		
		/// <summary>
		/// ALLOW_SUBJ_FAILURE : مؤشر الرسوب فى مقرر
		/// </summary>
		public System.Decimal?		  AllowSubjFailure = null;
		
		/// <summary>
		/// MAX_NO_YEARS : عدد الفصول
		/// </summary>
		public System.Decimal?		  MaxNoYears = null;
		
		/// <summary>
		/// GPA_POINT_FRM : CGPA From
		/// </summary>
		public System.Decimal?		  GpaPointFrm = null;
		
		/// <summary>
		/// GPA_POINT_TO : CGPA To
		/// </summary>
		public System.Decimal?		  GpaPointTo = null;
		
		/// <summary>
		/// MIN_LVL_GRADE_ID : 
		/// </summary>
		public System.Decimal?		  MinLvlGradeId = null;
		
		/// <summary>
		/// MIN_LVL_RATE : 
		/// </summary>
		public System.Decimal?		  MinLvlRate = null;
		
		/// <summary>
		/// ACTIVITY_HOUR_FLG : 
		/// </summary>
		public System.Decimal?		  ActivityHourFlg = null;
		
		/// <summary>
		/// COURSE_REPEAT_FLG : عدم التحسين في اي مقرر
		/// </summary>
		public System.Boolean?		  CourseRepeatFlg = null;
		
		/// <summary>
		/// PENLTY_FLG : عدم الخضوع لأي جزاء تأديبي
		/// </summary>
		public System.Boolean?		  PenltyFlg = null;
		
		/// <summary>
		/// ED_BYLAW_ID : 
		/// </summary>
		public System.Decimal?		  EdBylawId = null;
		
		/// <summary>
		/// NO_RAISE_FLG : عدم حصول الطالب علي رأفة
		/// </summary>
		public System.Boolean?		  NoRaiseFlg = null;
		
		/// <summary>
		/// EXCLUDE_FRST_YEAR_FLG : او استثناء اول فرقة دراسية للطالب 
		/// </summary>
		public System.Boolean?		  ExcludeFrstYearFlg = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private EdBylaw _edBylawIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdBylaw"/>.
		/// </summary>
		/// <value>The source EdBylaw for EdBylawId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdBylaw EdBylawIdSource
      	{
            get { return this._edBylawIdSource; }
            set { this._edBylawIdSource = value; }
      	}
		private EdCodeGrading _minLvlGradeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeGrading"/>.
		/// </summary>
		/// <value>The source EdCodeGrading for MinLvlGradeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeGrading MinLvlGradeIdSource
      	{
            get { return this._minLvlGradeIdSource; }
            set { this._minLvlGradeIdSource = value; }
      	}
		private GsCdeHonor _gsCdeHonorIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeHonor"/>.
		/// </summary>
		/// <value>The source GsCdeHonor for GsCdeHonorId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeHonor GsCdeHonorIdSource
      	{
            get { return this._gsCdeHonorIdSource; }
            set { this._gsCdeHonorIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region EdStudFacultyCollection
		
		private TList<EdStudFaculty> _edStudFacultyEntPolicyAccumHonorId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudFacultyEntPolicyAccumHonorId
		/// </summary>
		
		public TList<EdStudFaculty> EdStudFacultyCollection
		{
			get
			{
				if (_edStudFacultyEntPolicyAccumHonorId == null)
				{
				_edStudFacultyEntPolicyAccumHonorId = new TList<EdStudFaculty>();
				}
	
				return _edStudFacultyEntPolicyAccumHonorId;
			}
			set { _edStudFacultyEntPolicyAccumHonorId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			EntPolicyAccumHonorEntityData _tmp = new EntPolicyAccumHonorEntityData();
						
			_tmp.EntPolicyAccumHonorId = this.EntPolicyAccumHonorId;
			_tmp.OriginalEntPolicyAccumHonorId = this.OriginalEntPolicyAccumHonorId;
			
			_tmp.GsCdeHonorId = this.GsCdeHonorId;
			_tmp.AllowSubjFailure = this.AllowSubjFailure;
			_tmp.MaxNoYears = this.MaxNoYears;
			_tmp.GpaPointFrm = this.GpaPointFrm;
			_tmp.GpaPointTo = this.GpaPointTo;
			_tmp.MinLvlGradeId = this.MinLvlGradeId;
			_tmp.MinLvlRate = this.MinLvlRate;
			_tmp.ActivityHourFlg = this.ActivityHourFlg;
			_tmp.CourseRepeatFlg = this.CourseRepeatFlg;
			_tmp.PenltyFlg = this.PenltyFlg;
			_tmp.EdBylawId = this.EdBylawId;
			_tmp.NoRaiseFlg = this.NoRaiseFlg;
			_tmp.ExcludeFrstYearFlg = this.ExcludeFrstYearFlg;
			
			#region Source Parent Composite Entities
			if (this.EdBylawIdSource != null)
				_tmp.EdBylawIdSource = MakeCopyOf(this.EdBylawIdSource) as EdBylaw;
			if (this.MinLvlGradeIdSource != null)
				_tmp.MinLvlGradeIdSource = MakeCopyOf(this.MinLvlGradeIdSource) as EdCodeGrading;
			if (this.GsCdeHonorIdSource != null)
				_tmp.GsCdeHonorIdSource = MakeCopyOf(this.GsCdeHonorIdSource) as GsCdeHonor;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._edStudFacultyEntPolicyAccumHonorId != null)
				_tmp.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			EntPolicyAccumHonorEntityData _tmp = new EntPolicyAccumHonorEntityData();
						
			_tmp.EntPolicyAccumHonorId = this.EntPolicyAccumHonorId;
			_tmp.OriginalEntPolicyAccumHonorId = this.OriginalEntPolicyAccumHonorId;
			
			_tmp.GsCdeHonorId = this.GsCdeHonorId;
			_tmp.AllowSubjFailure = this.AllowSubjFailure;
			_tmp.MaxNoYears = this.MaxNoYears;
			_tmp.GpaPointFrm = this.GpaPointFrm;
			_tmp.GpaPointTo = this.GpaPointTo;
			_tmp.MinLvlGradeId = this.MinLvlGradeId;
			_tmp.MinLvlRate = this.MinLvlRate;
			_tmp.ActivityHourFlg = this.ActivityHourFlg;
			_tmp.CourseRepeatFlg = this.CourseRepeatFlg;
			_tmp.PenltyFlg = this.PenltyFlg;
			_tmp.EdBylawId = this.EdBylawId;
			_tmp.NoRaiseFlg = this.NoRaiseFlg;
			_tmp.ExcludeFrstYearFlg = this.ExcludeFrstYearFlg;
			
			#region Source Parent Composite Entities
			if (this.EdBylawIdSource != null && existingCopies.Contains(this.EdBylawIdSource))
				_tmp.EdBylawIdSource = existingCopies[this.EdBylawIdSource] as EdBylaw;
			else
				_tmp.EdBylawIdSource = MakeCopyOf(this.EdBylawIdSource, existingCopies) as EdBylaw;
			if (this.MinLvlGradeIdSource != null && existingCopies.Contains(this.MinLvlGradeIdSource))
				_tmp.MinLvlGradeIdSource = existingCopies[this.MinLvlGradeIdSource] as EdCodeGrading;
			else
				_tmp.MinLvlGradeIdSource = MakeCopyOf(this.MinLvlGradeIdSource, existingCopies) as EdCodeGrading;
			if (this.GsCdeHonorIdSource != null && existingCopies.Contains(this.GsCdeHonorIdSource))
				_tmp.GsCdeHonorIdSource = existingCopies[this.GsCdeHonorIdSource] as GsCdeHonor;
			else
				_tmp.GsCdeHonorIdSource = MakeCopyOf(this.GsCdeHonorIdSource, existingCopies) as GsCdeHonor;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EntPolicyAccumHonorColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(EntPolicyAccumHonorColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EntPolicyAccumHonorColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(EntPolicyAccumHonorColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EntPolicyAccumHonorColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(EntPolicyAccumHonorColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				EntPolicyAccumHonorEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new EntPolicyAccumHonorEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EntPolicyAccumHonorColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(EntPolicyAccumHonorColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				EntPolicyAccumHonorEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new EntPolicyAccumHonorEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region EntPolicyAccumHonorEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="EntPolicyAccumHonor"/> object.
	/// </remarks>
	public class EntPolicyAccumHonorEventArgs : System.EventArgs
	{
		private EntPolicyAccumHonorColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the EntPolicyAccumHonorEventArgs class.
		///</summary>
		public EntPolicyAccumHonorEventArgs(EntPolicyAccumHonorColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the EntPolicyAccumHonorEventArgs class.
		///</summary>
		public EntPolicyAccumHonorEventArgs(EntPolicyAccumHonorColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The EntPolicyAccumHonorColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="EntPolicyAccumHonorColumn" />
		public EntPolicyAccumHonorColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all EntPolicyAccumHonor related events.
	///</summary>
	public delegate void EntPolicyAccumHonorEventHandler(object sender, EntPolicyAccumHonorEventArgs e);
	
	#region EntPolicyAccumHonorComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class EntPolicyAccumHonorComparer : System.Collections.Generic.IComparer<EntPolicyAccumHonor>
	{
		EntPolicyAccumHonorColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:EntPolicyAccumHonorComparer"/> class.
        /// </summary>
		public EntPolicyAccumHonorComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:EntPolicyAccumHonorComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public EntPolicyAccumHonorComparer(EntPolicyAccumHonorColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="EntPolicyAccumHonor"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="EntPolicyAccumHonor"/> to compare.</param>
        /// <param name="b">The second <c>EntPolicyAccumHonor</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(EntPolicyAccumHonor a, EntPolicyAccumHonor b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(EntPolicyAccumHonor entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(EntPolicyAccumHonor a, EntPolicyAccumHonor b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public EntPolicyAccumHonorColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region EntPolicyAccumHonorKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="EntPolicyAccumHonor"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class EntPolicyAccumHonorKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the EntPolicyAccumHonorKey class.
		/// </summary>
		public EntPolicyAccumHonorKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the EntPolicyAccumHonorKey class.
		/// </summary>
		public EntPolicyAccumHonorKey(EntPolicyAccumHonorBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.EntPolicyAccumHonorId = entity.EntPolicyAccumHonorId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the EntPolicyAccumHonorKey class.
		/// </summary>
		public EntPolicyAccumHonorKey(System.Decimal _entPolicyAccumHonorId)
		{
			#region Init Properties

			this.EntPolicyAccumHonorId = _entPolicyAccumHonorId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private EntPolicyAccumHonorBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public EntPolicyAccumHonorBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the EntPolicyAccumHonorId property
		private System.Decimal _entPolicyAccumHonorId;
		
		/// <summary>
		/// Gets or sets the EntPolicyAccumHonorId property.
		/// </summary>
		public System.Decimal EntPolicyAccumHonorId
		{
			get { return _entPolicyAccumHonorId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.EntPolicyAccumHonorId = value;
				
				_entPolicyAccumHonorId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				EntPolicyAccumHonorId = ( values["EntPolicyAccumHonorId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["EntPolicyAccumHonorId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("EntPolicyAccumHonorId", EntPolicyAccumHonorId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("EntPolicyAccumHonorId: {0}{1}",
								EntPolicyAccumHonorId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region EntPolicyAccumHonorColumn Enum
	
	/// <summary>
	/// Enumerate the EntPolicyAccumHonor columns.
	/// </summary>
	[Serializable]
	public enum EntPolicyAccumHonorColumn : int
	{
		/// <summary>
		/// EntPolicyAccumHonorId : مراتب الشرف  التراكمية
		/// </summary>
		[EnumTextValue("ENT_POLICY_ACCUM_HONOR_ID")]
		[ColumnEnum("ENT_POLICY_ACCUM_HONOR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		EntPolicyAccumHonorId = 1,
		/// <summary>
		/// GsCdeHonorId : 
		/// </summary>
		[EnumTextValue("GS_CDE_HONOR_ID")]
		[ColumnEnum("GS_CDE_HONOR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCdeHonorId = 2,
		/// <summary>
		/// AllowSubjFailure : مؤشر الرسوب فى مقرر
		/// </summary>
		[EnumTextValue("ALLOW_SUBJ_FAILURE")]
		[ColumnEnum("ALLOW_SUBJ_FAILURE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AllowSubjFailure = 3,
		/// <summary>
		/// MaxNoYears : عدد الفصول
		/// </summary>
		[EnumTextValue("MAX_NO_YEARS")]
		[ColumnEnum("MAX_NO_YEARS", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		MaxNoYears = 4,
		/// <summary>
		/// GpaPointFrm : CGPA From
		/// </summary>
		[EnumTextValue("GPA_POINT_FRM")]
		[ColumnEnum("GPA_POINT_FRM", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GpaPointFrm = 5,
		/// <summary>
		/// GpaPointTo : CGPA To
		/// </summary>
		[EnumTextValue("GPA_POINT_TO")]
		[ColumnEnum("GPA_POINT_TO", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GpaPointTo = 6,
		/// <summary>
		/// MinLvlGradeId : 
		/// </summary>
		[EnumTextValue("MIN_LVL_GRADE_ID")]
		[ColumnEnum("MIN_LVL_GRADE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		MinLvlGradeId = 7,
		/// <summary>
		/// MinLvlRate : 
		/// </summary>
		[EnumTextValue("MIN_LVL_RATE")]
		[ColumnEnum("MIN_LVL_RATE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		MinLvlRate = 8,
		/// <summary>
		/// ActivityHourFlg : 
		/// </summary>
		[EnumTextValue("ACTIVITY_HOUR_FLG")]
		[ColumnEnum("ACTIVITY_HOUR_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ActivityHourFlg = 9,
		/// <summary>
		/// CourseRepeatFlg : عدم التحسين في اي مقرر
		/// </summary>
		[EnumTextValue("COURSE_REPEAT_FLG")]
		[ColumnEnum("COURSE_REPEAT_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		CourseRepeatFlg = 10,
		/// <summary>
		/// PenltyFlg : عدم الخضوع لأي جزاء تأديبي
		/// </summary>
		[EnumTextValue("PENLTY_FLG")]
		[ColumnEnum("PENLTY_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		PenltyFlg = 11,
		/// <summary>
		/// EdBylawId : 
		/// </summary>
		[EnumTextValue("ED_BYLAW_ID")]
		[ColumnEnum("ED_BYLAW_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdBylawId = 12,
		/// <summary>
		/// NoRaiseFlg : عدم حصول الطالب علي رأفة
		/// </summary>
		[EnumTextValue("NO_RAISE_FLG")]
		[ColumnEnum("NO_RAISE_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		NoRaiseFlg = 13,
		/// <summary>
		/// ExcludeFrstYearFlg : او استثناء اول فرقة دراسية للطالب 
		/// </summary>
		[EnumTextValue("EXCLUDE_FRST_YEAR_FLG")]
		[ColumnEnum("EXCLUDE_FRST_YEAR_FLG", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, true)]
		ExcludeFrstYearFlg = 14
	}//End enum

	#endregion EntPolicyAccumHonorColumn Enum

} // end namespace
