/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file CoursePkg.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'COURSE_PKG' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("CoursePkgBase")]
	public abstract partial class CoursePkgBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// ENT_MAIN_ID : 
		/// </summary>
		private System.Decimal		  _entMainId = 0.0m;
		
		/// <summary>
		/// ED_ACAD_YEAR_ID : 
		/// </summary>
		private System.Decimal?		  _edAcadYearId = null;
		
		/// <summary>
		/// ED_COURSE_ID : 
		/// </summary>
		private System.Decimal?		  _edCourseId = null;
		
		/// <summary>
		/// ED_COURSE_EXP_PREREQ_HDR_ID : 
		/// </summary>
		private System.Decimal?		  _edCourseExpPrereqHdrId = null;
		
		/// <summary>
		/// ADD_GPA_FLG : 
		/// </summary>
		private System.Decimal		  _addGpaFlg = 0.0m;
		
		/// <summary>
		/// ADD_MJRGPA_FLG : 
		/// </summary>
		private System.Decimal?		  _addMjrgpaFlg = null;
		
		/// <summary>
		/// ENT_COURSE_PKG_HDR_ID : 
		/// </summary>
		private System.Decimal		  _entCoursePkgHdrId = 0.0m;
		
		/// <summary>
		/// DESCR_EN : 
		/// </summary>
		private System.String		  _descrEn = null;
		
		/// <summary>
		/// DESCR_AR : 
		/// </summary>
		private System.String		  _descrAr = string.Empty;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="CoursePkgBase"/> instance.
		///</summary>
		public CoursePkgBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="CoursePkgBase"/> instance.
		///</summary>
		///<param name="_entMainId"></param>
		///<param name="_edAcadYearId"></param>
		///<param name="_edCourseId"></param>
		///<param name="_edCourseExpPrereqHdrId"></param>
		///<param name="_addGpaFlg"></param>
		///<param name="_addMjrgpaFlg"></param>
		///<param name="_entCoursePkgHdrId"></param>
		///<param name="_descrEn"></param>
		///<param name="_descrAr"></param>
		public CoursePkgBase(System.Decimal _entMainId, System.Decimal? _edAcadYearId, System.Decimal? _edCourseId, System.Decimal? _edCourseExpPrereqHdrId, System.Decimal _addGpaFlg, System.Decimal? _addMjrgpaFlg, System.Decimal _entCoursePkgHdrId, System.String _descrEn, System.String _descrAr)
		{
			this._entMainId = _entMainId;
			this._edAcadYearId = _edAcadYearId;
			this._edCourseId = _edCourseId;
			this._edCourseExpPrereqHdrId = _edCourseExpPrereqHdrId;
			this._addGpaFlg = _addGpaFlg;
			this._addMjrgpaFlg = _addMjrgpaFlg;
			this._entCoursePkgHdrId = _entCoursePkgHdrId;
			this._descrEn = _descrEn;
			this._descrAr = _descrAr;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="CoursePkg"/> instance.
		///</summary>
		///<param name="_entMainId"></param>
		///<param name="_edAcadYearId"></param>
		///<param name="_edCourseId"></param>
		///<param name="_edCourseExpPrereqHdrId"></param>
		///<param name="_addGpaFlg"></param>
		///<param name="_addMjrgpaFlg"></param>
		///<param name="_entCoursePkgHdrId"></param>
		///<param name="_descrEn"></param>
		///<param name="_descrAr"></param>
		public static CoursePkg CreateCoursePkg(System.Decimal _entMainId, System.Decimal? _edAcadYearId, System.Decimal? _edCourseId, System.Decimal? _edCourseExpPrereqHdrId, System.Decimal _addGpaFlg, System.Decimal? _addMjrgpaFlg, System.Decimal _entCoursePkgHdrId, System.String _descrEn, System.String _descrAr)
		{
			CoursePkg newCoursePkg = new CoursePkg();
			newCoursePkg.EntMainId = _entMainId;
			newCoursePkg.EdAcadYearId = _edAcadYearId;
			newCoursePkg.EdCourseId = _edCourseId;
			newCoursePkg.EdCourseExpPrereqHdrId = _edCourseExpPrereqHdrId;
			newCoursePkg.AddGpaFlg = _addGpaFlg;
			newCoursePkg.AddMjrgpaFlg = _addMjrgpaFlg;
			newCoursePkg.EntCoursePkgHdrId = _entCoursePkgHdrId;
			newCoursePkg.DescrEn = _descrEn;
			newCoursePkg.DescrAr = _descrAr;
			return newCoursePkg;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the ENT_MAIN_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal EntMainId
		{
			get
			{
				return this._entMainId; 
			}
			set
			{
				if (_entMainId == value)
					return;
					
				this._entMainId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EntMainId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ED_ACAD_YEAR_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdAcadYearIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? EdAcadYearId
		{
			get
			{
				return this._edAcadYearId; 
			}
			set
			{
				if (_edAcadYearId == value && EdAcadYearId != null )
					return;
					
				this._edAcadYearId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdAcadYearId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ED_COURSE_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCourseIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? EdCourseId
		{
			get
			{
				return this._edCourseId; 
			}
			set
			{
				if (_edCourseId == value && EdCourseId != null )
					return;
					
				this._edCourseId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdCourseId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ED_COURSE_EXP_PREREQ_HDR_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCourseExpPrereqHdrIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? EdCourseExpPrereqHdrId
		{
			get
			{
				return this._edCourseExpPrereqHdrId; 
			}
			set
			{
				if (_edCourseExpPrereqHdrId == value && EdCourseExpPrereqHdrId != null )
					return;
					
				this._edCourseExpPrereqHdrId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdCourseExpPrereqHdrId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ADD_GPA_FLG property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal AddGpaFlg
		{
			get
			{
				return this._addGpaFlg; 
			}
			set
			{
				if (_addGpaFlg == value)
					return;
					
				this._addGpaFlg = value;
				this._isDirty = true;
				
				OnPropertyChanged("AddGpaFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ADD_MJRGPA_FLG property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAddMjrgpaFlgNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? AddMjrgpaFlg
		{
			get
			{
				return this._addMjrgpaFlg; 
			}
			set
			{
				if (_addMjrgpaFlg == value && AddMjrgpaFlg != null )
					return;
					
				this._addMjrgpaFlg = value;
				this._isDirty = true;
				
				OnPropertyChanged("AddMjrgpaFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ENT_COURSE_PKG_HDR_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal EntCoursePkgHdrId
		{
			get
			{
				return this._entCoursePkgHdrId; 
			}
			set
			{
				if (_entCoursePkgHdrId == value)
					return;
					
				this._entCoursePkgHdrId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EntCoursePkgHdrId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DESCR_EN property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DescrEn
		{
			get
			{
				return this._descrEn; 
			}
			set
			{
				if (_descrEn == value)
					return;
					
				this._descrEn = value;
				this._isDirty = true;
				
				OnPropertyChanged("DescrEn");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the DESCR_AR property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String DescrAr
		{
			get
			{
				return this._descrAr; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "DescrAr does not allow null values.");
				if (_descrAr == value)
					return;
					
				this._descrAr = value;
				this._isDirty = true;
				
				OnPropertyChanged("DescrAr");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "COURSE_PKG"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed CoursePkgBase Entity 
		///</summary>
		public virtual CoursePkgBase Copy()
		{
			//shallow copy entity
			CoursePkg copy = new CoursePkg();
				copy.EntMainId = this.EntMainId;
				copy.EdAcadYearId = this.EdAcadYearId;
				copy.EdCourseId = this.EdCourseId;
				copy.EdCourseExpPrereqHdrId = this.EdCourseExpPrereqHdrId;
				copy.AddGpaFlg = this.AddGpaFlg;
				copy.AddMjrgpaFlg = this.AddMjrgpaFlg;
				copy.EntCoursePkgHdrId = this.EntCoursePkgHdrId;
				copy.DescrEn = this.DescrEn;
				copy.DescrAr = this.DescrAr;
			copy.AcceptChanges();
			return (CoursePkg)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="CoursePkgBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(CoursePkgBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="CoursePkgBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="CoursePkgBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="CoursePkgBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(CoursePkgBase Object1, CoursePkgBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.EntMainId != Object2.EntMainId)
				equal = false;
			if (Object1.EdAcadYearId != null && Object2.EdAcadYearId != null )
			{
				if (Object1.EdAcadYearId != Object2.EdAcadYearId)
					equal = false;
			}
			else if (Object1.EdAcadYearId == null ^ Object1.EdAcadYearId == null )
			{
				equal = false;
			}
			if (Object1.EdCourseId != null && Object2.EdCourseId != null )
			{
				if (Object1.EdCourseId != Object2.EdCourseId)
					equal = false;
			}
			else if (Object1.EdCourseId == null ^ Object1.EdCourseId == null )
			{
				equal = false;
			}
			if (Object1.EdCourseExpPrereqHdrId != null && Object2.EdCourseExpPrereqHdrId != null )
			{
				if (Object1.EdCourseExpPrereqHdrId != Object2.EdCourseExpPrereqHdrId)
					equal = false;
			}
			else if (Object1.EdCourseExpPrereqHdrId == null ^ Object1.EdCourseExpPrereqHdrId == null )
			{
				equal = false;
			}
			if (Object1.AddGpaFlg != Object2.AddGpaFlg)
				equal = false;
			if (Object1.AddMjrgpaFlg != null && Object2.AddMjrgpaFlg != null )
			{
				if (Object1.AddMjrgpaFlg != Object2.AddMjrgpaFlg)
					equal = false;
			}
			else if (Object1.AddMjrgpaFlg == null ^ Object1.AddMjrgpaFlg == null )
			{
				equal = false;
			}
			if (Object1.EntCoursePkgHdrId != Object2.EntCoursePkgHdrId)
				equal = false;
			if (Object1.DescrEn != null && Object2.DescrEn != null )
			{
				if (Object1.DescrEn != Object2.DescrEn)
					equal = false;
			}
			else if (Object1.DescrEn == null ^ Object1.DescrEn == null )
			{
				equal = false;
			}
			if (Object1.DescrAr != Object2.DescrAr)
				equal = false;
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(CoursePkg entity, string propertyName)
		{
			switch (propertyName)
			{
				case "EntMainId":
					return entity.EntMainId;
				case "EdAcadYearId":
					return entity.EdAcadYearId;
				case "EdCourseId":
					return entity.EdCourseId;
				case "EdCourseExpPrereqHdrId":
					return entity.EdCourseExpPrereqHdrId;
				case "AddGpaFlg":
					return entity.AddGpaFlg;
				case "AddMjrgpaFlg":
					return entity.AddMjrgpaFlg;
				case "EntCoursePkgHdrId":
					return entity.EntCoursePkgHdrId;
				case "DescrEn":
					return entity.DescrEn;
				case "DescrAr":
					return entity.DescrAr;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as CoursePkg, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{10}{9}- EntMainId: {0}{9}- EdAcadYearId: {1}{9}- EdCourseId: {2}{9}- EdCourseExpPrereqHdrId: {3}{9}- AddGpaFlg: {4}{9}- AddMjrgpaFlg: {5}{9}- EntCoursePkgHdrId: {6}{9}- DescrEn: {7}{9}- DescrAr: {8}{9}", 
				this.EntMainId,
				(this.EdAcadYearId == null) ? string.Empty : this.EdAcadYearId.ToString(),
			     
				(this.EdCourseId == null) ? string.Empty : this.EdCourseId.ToString(),
			     
				(this.EdCourseExpPrereqHdrId == null) ? string.Empty : this.EdCourseExpPrereqHdrId.ToString(),
			     
				this.AddGpaFlg,
				(this.AddMjrgpaFlg == null) ? string.Empty : this.AddMjrgpaFlg.ToString(),
			     
				this.EntCoursePkgHdrId,
				(this.DescrEn == null) ? string.Empty : this.DescrEn.ToString(),
			     
				this.DescrAr,
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the CoursePkg columns.
	/// </summary>
	[Serializable]
	public enum CoursePkgColumn
	{
		/// <summary>
		/// ENT_MAIN_ID : 
		/// </summary>
		[EnumTextValue("ENT_MAIN_ID")]
		[ColumnEnum("ENT_MAIN_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EntMainId,
		/// <summary>
		/// ED_ACAD_YEAR_ID : 
		/// </summary>
		[EnumTextValue("ED_ACAD_YEAR_ID")]
		[ColumnEnum("ED_ACAD_YEAR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdAcadYearId,
		/// <summary>
		/// ED_COURSE_ID : 
		/// </summary>
		[EnumTextValue("ED_COURSE_ID")]
		[ColumnEnum("ED_COURSE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCourseId,
		/// <summary>
		/// ED_COURSE_EXP_PREREQ_HDR_ID : 
		/// </summary>
		[EnumTextValue("ED_COURSE_EXP_PREREQ_HDR_ID")]
		[ColumnEnum("ED_COURSE_EXP_PREREQ_HDR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCourseExpPrereqHdrId,
		/// <summary>
		/// ADD_GPA_FLG : 
		/// </summary>
		[EnumTextValue("ADD_GPA_FLG")]
		[ColumnEnum("ADD_GPA_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		AddGpaFlg,
		/// <summary>
		/// ADD_MJRGPA_FLG : 
		/// </summary>
		[EnumTextValue("ADD_MJRGPA_FLG")]
		[ColumnEnum("ADD_MJRGPA_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AddMjrgpaFlg,
		/// <summary>
		/// ENT_COURSE_PKG_HDR_ID : 
		/// </summary>
		[EnumTextValue("ENT_COURSE_PKG_HDR_ID")]
		[ColumnEnum("ENT_COURSE_PKG_HDR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EntCoursePkgHdrId,
		/// <summary>
		/// DESCR_EN : 
		/// </summary>
		[EnumTextValue("DESCR_EN")]
		[ColumnEnum("DESCR_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		DescrEn,
		/// <summary>
		/// DESCR_AR : 
		/// </summary>
		[EnumTextValue("DESCR_AR")]
		[ColumnEnum("DESCR_AR", typeof(System.String), System.Data.DbType.String, false, false, false, 50)]
		DescrAr
	}//End enum

} // end namespace
