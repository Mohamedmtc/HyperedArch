/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file VscheduleCourses.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'VScheduleCourses' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("VscheduleCoursesBase")]
	public abstract partial class VscheduleCoursesBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// SC_SCHEDULE_HDR_ID : 
		/// </summary>
		private System.Decimal		  _scScheduleHdrId = 0.0m;
		
		/// <summary>
		/// ED_OFFERING_COURSE_ID : 
		/// </summary>
		private System.Decimal		  _edOfferingCourseId = 0.0m;
		
		/// <summary>
		/// ED_COURSE_ID : 
		/// </summary>
		private System.Decimal?		  _edCourseId = null;
		
		/// <summary>
		/// COURSE_CODE : 
		/// </summary>
		private System.String		  _courseCode = string.Empty;
		
		/// <summary>
		/// COURSE_DESCR_AR : 
		/// </summary>
		private System.String		  _courseDescrAr = string.Empty;
		
		/// <summary>
		/// COURSE_DESCR_EN : 
		/// </summary>
		private System.String		  _courseDescrEn = string.Empty;
		
		/// <summary>
		/// ED_OFFERING_ID : 
		/// </summary>
		private System.Decimal?		  _edOfferingId = null;
		
		/// <summary>
		/// AS_FACULTY_INFO_ID : 
		/// </summary>
		private System.Decimal?		  _asFacultyInfoId = null;
		
		/// <summary>
		/// ED_ACAD_YEAR_ID : 
		/// </summary>
		private System.Decimal		  _edAcadYearId = 0.0m;
		
		/// <summary>
		/// ED_CODE_SEMESTER_ID : 
		/// </summary>
		private System.Decimal?		  _edCodeSemesterId = null;
		
		/// <summary>
		/// ENT_MAIN_ID : 
		/// </summary>
		private System.Decimal		  _entMainId = 0.0m;
		
		/// <summary>
		/// ED_CODE_COURSE_TEACHING_ID : 
		/// </summary>
		private System.Decimal?		  _edCodeCourseTeachingId = null;
		
		/// <summary>
		/// ED_CDE_TCHNG_MTHD_ID : 
		/// </summary>
		private System.Decimal?		  _edCdeTchngMthdId = null;
		
		/// <summary>
		/// TchngMthdDescrAr : 
		/// </summary>
		private System.String		  _tchngMthdDescrAr = string.Empty;
		
		/// <summary>
		/// TchngMthdDescrEn : 
		/// </summary>
		private System.String		  _tchngMthdDescrEn = string.Empty;
		
		/// <summary>
		/// SC_SCHEDULE_DTL_ID : 
		/// </summary>
		private System.Decimal		  _scScheduleDtlId = 0.0m;
		
		/// <summary>
		/// GROUP_DESCR_AR : 
		/// </summary>
		private System.String		  _groupDescrAr = string.Empty;
		
		/// <summary>
		/// GROUP_DESCR_EN : 
		/// </summary>
		private System.String		  _groupDescrEn = string.Empty;
		
		/// <summary>
		/// GROUP_ORDER : 
		/// </summary>
		private System.Decimal?		  _groupOrder = null;
		
		/// <summary>
		/// IS_RESULT_APPROVED : 
		/// </summary>
		private System.Decimal		  _isResultApproved = 0.0m;
		
		/// <summary>
		/// NO_STUDENTS : 
		/// </summary>
		private System.Decimal?		  _noStudents = null;
		
		/// <summary>
		/// NO_STUD_WAIT : 
		/// </summary>
		private System.Decimal?		  _noStudWait = null;
		
		/// <summary>
		/// NO_STUD_MAX : 
		/// </summary>
		private System.Decimal?		  _noStudMax = null;
		
		/// <summary>
		/// GS_CODE_GENDER_ID : 
		/// </summary>
		private System.Decimal?		  _gsCodeGenderId = null;
		
		/// <summary>
		/// GENDER_DESCR_AR : 
		/// </summary>
		private System.String		  _genderDescrAr = string.Empty;
		
		/// <summary>
		/// GENDER_DESCR_EN : 
		/// </summary>
		private System.String		  _genderDescrEn = string.Empty;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="VscheduleCoursesBase"/> instance.
		///</summary>
		public VscheduleCoursesBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="VscheduleCoursesBase"/> instance.
		///</summary>
		///<param name="_scScheduleHdrId"></param>
		///<param name="_edOfferingCourseId"></param>
		///<param name="_edCourseId"></param>
		///<param name="_courseCode"></param>
		///<param name="_courseDescrAr"></param>
		///<param name="_courseDescrEn"></param>
		///<param name="_edOfferingId"></param>
		///<param name="_asFacultyInfoId"></param>
		///<param name="_edAcadYearId"></param>
		///<param name="_edCodeSemesterId"></param>
		///<param name="_entMainId"></param>
		///<param name="_edCodeCourseTeachingId"></param>
		///<param name="_edCdeTchngMthdId"></param>
		///<param name="_tchngMthdDescrAr"></param>
		///<param name="_tchngMthdDescrEn"></param>
		///<param name="_scScheduleDtlId"></param>
		///<param name="_groupDescrAr"></param>
		///<param name="_groupDescrEn"></param>
		///<param name="_groupOrder"></param>
		///<param name="_isResultApproved"></param>
		///<param name="_noStudents"></param>
		///<param name="_noStudWait"></param>
		///<param name="_noStudMax"></param>
		///<param name="_gsCodeGenderId"></param>
		///<param name="_genderDescrAr"></param>
		///<param name="_genderDescrEn"></param>
		public VscheduleCoursesBase(System.Decimal _scScheduleHdrId, System.Decimal _edOfferingCourseId, System.Decimal? _edCourseId, System.String _courseCode, System.String _courseDescrAr, System.String _courseDescrEn, System.Decimal? _edOfferingId, System.Decimal? _asFacultyInfoId, System.Decimal _edAcadYearId, System.Decimal? _edCodeSemesterId, System.Decimal _entMainId, System.Decimal? _edCodeCourseTeachingId, System.Decimal? _edCdeTchngMthdId, System.String _tchngMthdDescrAr, System.String _tchngMthdDescrEn, System.Decimal _scScheduleDtlId, System.String _groupDescrAr, System.String _groupDescrEn, System.Decimal? _groupOrder, System.Decimal _isResultApproved, System.Decimal? _noStudents, System.Decimal? _noStudWait, System.Decimal? _noStudMax, System.Decimal? _gsCodeGenderId, System.String _genderDescrAr, System.String _genderDescrEn)
		{
			this._scScheduleHdrId = _scScheduleHdrId;
			this._edOfferingCourseId = _edOfferingCourseId;
			this._edCourseId = _edCourseId;
			this._courseCode = _courseCode;
			this._courseDescrAr = _courseDescrAr;
			this._courseDescrEn = _courseDescrEn;
			this._edOfferingId = _edOfferingId;
			this._asFacultyInfoId = _asFacultyInfoId;
			this._edAcadYearId = _edAcadYearId;
			this._edCodeSemesterId = _edCodeSemesterId;
			this._entMainId = _entMainId;
			this._edCodeCourseTeachingId = _edCodeCourseTeachingId;
			this._edCdeTchngMthdId = _edCdeTchngMthdId;
			this._tchngMthdDescrAr = _tchngMthdDescrAr;
			this._tchngMthdDescrEn = _tchngMthdDescrEn;
			this._scScheduleDtlId = _scScheduleDtlId;
			this._groupDescrAr = _groupDescrAr;
			this._groupDescrEn = _groupDescrEn;
			this._groupOrder = _groupOrder;
			this._isResultApproved = _isResultApproved;
			this._noStudents = _noStudents;
			this._noStudWait = _noStudWait;
			this._noStudMax = _noStudMax;
			this._gsCodeGenderId = _gsCodeGenderId;
			this._genderDescrAr = _genderDescrAr;
			this._genderDescrEn = _genderDescrEn;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="VscheduleCourses"/> instance.
		///</summary>
		///<param name="_scScheduleHdrId"></param>
		///<param name="_edOfferingCourseId"></param>
		///<param name="_edCourseId"></param>
		///<param name="_courseCode"></param>
		///<param name="_courseDescrAr"></param>
		///<param name="_courseDescrEn"></param>
		///<param name="_edOfferingId"></param>
		///<param name="_asFacultyInfoId"></param>
		///<param name="_edAcadYearId"></param>
		///<param name="_edCodeSemesterId"></param>
		///<param name="_entMainId"></param>
		///<param name="_edCodeCourseTeachingId"></param>
		///<param name="_edCdeTchngMthdId"></param>
		///<param name="_tchngMthdDescrAr"></param>
		///<param name="_tchngMthdDescrEn"></param>
		///<param name="_scScheduleDtlId"></param>
		///<param name="_groupDescrAr"></param>
		///<param name="_groupDescrEn"></param>
		///<param name="_groupOrder"></param>
		///<param name="_isResultApproved"></param>
		///<param name="_noStudents"></param>
		///<param name="_noStudWait"></param>
		///<param name="_noStudMax"></param>
		///<param name="_gsCodeGenderId"></param>
		///<param name="_genderDescrAr"></param>
		///<param name="_genderDescrEn"></param>
		public static VscheduleCourses CreateVscheduleCourses(System.Decimal _scScheduleHdrId, System.Decimal _edOfferingCourseId, System.Decimal? _edCourseId, System.String _courseCode, System.String _courseDescrAr, System.String _courseDescrEn, System.Decimal? _edOfferingId, System.Decimal? _asFacultyInfoId, System.Decimal _edAcadYearId, System.Decimal? _edCodeSemesterId, System.Decimal _entMainId, System.Decimal? _edCodeCourseTeachingId, System.Decimal? _edCdeTchngMthdId, System.String _tchngMthdDescrAr, System.String _tchngMthdDescrEn, System.Decimal _scScheduleDtlId, System.String _groupDescrAr, System.String _groupDescrEn, System.Decimal? _groupOrder, System.Decimal _isResultApproved, System.Decimal? _noStudents, System.Decimal? _noStudWait, System.Decimal? _noStudMax, System.Decimal? _gsCodeGenderId, System.String _genderDescrAr, System.String _genderDescrEn)
		{
			VscheduleCourses newVscheduleCourses = new VscheduleCourses();
			newVscheduleCourses.ScScheduleHdrId = _scScheduleHdrId;
			newVscheduleCourses.EdOfferingCourseId = _edOfferingCourseId;
			newVscheduleCourses.EdCourseId = _edCourseId;
			newVscheduleCourses.CourseCode = _courseCode;
			newVscheduleCourses.CourseDescrAr = _courseDescrAr;
			newVscheduleCourses.CourseDescrEn = _courseDescrEn;
			newVscheduleCourses.EdOfferingId = _edOfferingId;
			newVscheduleCourses.AsFacultyInfoId = _asFacultyInfoId;
			newVscheduleCourses.EdAcadYearId = _edAcadYearId;
			newVscheduleCourses.EdCodeSemesterId = _edCodeSemesterId;
			newVscheduleCourses.EntMainId = _entMainId;
			newVscheduleCourses.EdCodeCourseTeachingId = _edCodeCourseTeachingId;
			newVscheduleCourses.EdCdeTchngMthdId = _edCdeTchngMthdId;
			newVscheduleCourses.TchngMthdDescrAr = _tchngMthdDescrAr;
			newVscheduleCourses.TchngMthdDescrEn = _tchngMthdDescrEn;
			newVscheduleCourses.ScScheduleDtlId = _scScheduleDtlId;
			newVscheduleCourses.GroupDescrAr = _groupDescrAr;
			newVscheduleCourses.GroupDescrEn = _groupDescrEn;
			newVscheduleCourses.GroupOrder = _groupOrder;
			newVscheduleCourses.IsResultApproved = _isResultApproved;
			newVscheduleCourses.NoStudents = _noStudents;
			newVscheduleCourses.NoStudWait = _noStudWait;
			newVscheduleCourses.NoStudMax = _noStudMax;
			newVscheduleCourses.GsCodeGenderId = _gsCodeGenderId;
			newVscheduleCourses.GenderDescrAr = _genderDescrAr;
			newVscheduleCourses.GenderDescrEn = _genderDescrEn;
			return newVscheduleCourses;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the SC_SCHEDULE_HDR_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal ScScheduleHdrId
		{
			get
			{
				return this._scScheduleHdrId; 
			}
			set
			{
				if (_scScheduleHdrId == value)
					return;
					
				this._scScheduleHdrId = value;
				this._isDirty = true;
				
				OnPropertyChanged("ScScheduleHdrId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ED_OFFERING_COURSE_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal EdOfferingCourseId
		{
			get
			{
				return this._edOfferingCourseId; 
			}
			set
			{
				if (_edOfferingCourseId == value)
					return;
					
				this._edOfferingCourseId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdOfferingCourseId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ED_COURSE_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCourseIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? EdCourseId
		{
			get
			{
				return this._edCourseId; 
			}
			set
			{
				if (_edCourseId == value && EdCourseId != null )
					return;
					
				this._edCourseId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdCourseId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the COURSE_CODE property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CourseCode
		{
			get
			{
				return this._courseCode; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "CourseCode does not allow null values.");
				if (_courseCode == value)
					return;
					
				this._courseCode = value;
				this._isDirty = true;
				
				OnPropertyChanged("CourseCode");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the COURSE_DESCR_AR property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CourseDescrAr
		{
			get
			{
				return this._courseDescrAr; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "CourseDescrAr does not allow null values.");
				if (_courseDescrAr == value)
					return;
					
				this._courseDescrAr = value;
				this._isDirty = true;
				
				OnPropertyChanged("CourseDescrAr");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the COURSE_DESCR_EN property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String CourseDescrEn
		{
			get
			{
				return this._courseDescrEn; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "CourseDescrEn does not allow null values.");
				if (_courseDescrEn == value)
					return;
					
				this._courseDescrEn = value;
				this._isDirty = true;
				
				OnPropertyChanged("CourseDescrEn");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ED_OFFERING_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdOfferingIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? EdOfferingId
		{
			get
			{
				return this._edOfferingId; 
			}
			set
			{
				if (_edOfferingId == value && EdOfferingId != null )
					return;
					
				this._edOfferingId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdOfferingId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the AS_FACULTY_INFO_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAsFacultyInfoIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? AsFacultyInfoId
		{
			get
			{
				return this._asFacultyInfoId; 
			}
			set
			{
				if (_asFacultyInfoId == value && AsFacultyInfoId != null )
					return;
					
				this._asFacultyInfoId = value;
				this._isDirty = true;
				
				OnPropertyChanged("AsFacultyInfoId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ED_ACAD_YEAR_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal EdAcadYearId
		{
			get
			{
				return this._edAcadYearId; 
			}
			set
			{
				if (_edAcadYearId == value)
					return;
					
				this._edAcadYearId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdAcadYearId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ED_CODE_SEMESTER_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeSemesterIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? EdCodeSemesterId
		{
			get
			{
				return this._edCodeSemesterId; 
			}
			set
			{
				if (_edCodeSemesterId == value && EdCodeSemesterId != null )
					return;
					
				this._edCodeSemesterId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdCodeSemesterId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ENT_MAIN_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal EntMainId
		{
			get
			{
				return this._entMainId; 
			}
			set
			{
				if (_entMainId == value)
					return;
					
				this._entMainId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EntMainId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ED_CODE_COURSE_TEACHING_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeCourseTeachingIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? EdCodeCourseTeachingId
		{
			get
			{
				return this._edCodeCourseTeachingId; 
			}
			set
			{
				if (_edCodeCourseTeachingId == value && EdCodeCourseTeachingId != null )
					return;
					
				this._edCodeCourseTeachingId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdCodeCourseTeachingId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ED_CDE_TCHNG_MTHD_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCdeTchngMthdIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? EdCdeTchngMthdId
		{
			get
			{
				return this._edCdeTchngMthdId; 
			}
			set
			{
				if (_edCdeTchngMthdId == value && EdCdeTchngMthdId != null )
					return;
					
				this._edCdeTchngMthdId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdCdeTchngMthdId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TchngMthdDescrAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TchngMthdDescrAr
		{
			get
			{
				return this._tchngMthdDescrAr; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "TchngMthdDescrAr does not allow null values.");
				if (_tchngMthdDescrAr == value)
					return;
					
				this._tchngMthdDescrAr = value;
				this._isDirty = true;
				
				OnPropertyChanged("TchngMthdDescrAr");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TchngMthdDescrEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String TchngMthdDescrEn
		{
			get
			{
				return this._tchngMthdDescrEn; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "TchngMthdDescrEn does not allow null values.");
				if (_tchngMthdDescrEn == value)
					return;
					
				this._tchngMthdDescrEn = value;
				this._isDirty = true;
				
				OnPropertyChanged("TchngMthdDescrEn");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the SC_SCHEDULE_DTL_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal ScScheduleDtlId
		{
			get
			{
				return this._scScheduleDtlId; 
			}
			set
			{
				if (_scScheduleDtlId == value)
					return;
					
				this._scScheduleDtlId = value;
				this._isDirty = true;
				
				OnPropertyChanged("ScScheduleDtlId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GROUP_DESCR_AR property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GroupDescrAr
		{
			get
			{
				return this._groupDescrAr; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "GroupDescrAr does not allow null values.");
				if (_groupDescrAr == value)
					return;
					
				this._groupDescrAr = value;
				this._isDirty = true;
				
				OnPropertyChanged("GroupDescrAr");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GROUP_DESCR_EN property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GroupDescrEn
		{
			get
			{
				return this._groupDescrEn; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "GroupDescrEn does not allow null values.");
				if (_groupDescrEn == value)
					return;
					
				this._groupDescrEn = value;
				this._isDirty = true;
				
				OnPropertyChanged("GroupDescrEn");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GROUP_ORDER property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGroupOrderNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? GroupOrder
		{
			get
			{
				return this._groupOrder; 
			}
			set
			{
				if (_groupOrder == value && GroupOrder != null )
					return;
					
				this._groupOrder = value;
				this._isDirty = true;
				
				OnPropertyChanged("GroupOrder");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the IS_RESULT_APPROVED property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal IsResultApproved
		{
			get
			{
				return this._isResultApproved; 
			}
			set
			{
				if (_isResultApproved == value)
					return;
					
				this._isResultApproved = value;
				this._isDirty = true;
				
				OnPropertyChanged("IsResultApproved");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NO_STUDENTS property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsNoStudentsNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? NoStudents
		{
			get
			{
				return this._noStudents; 
			}
			set
			{
				if (_noStudents == value && NoStudents != null )
					return;
					
				this._noStudents = value;
				this._isDirty = true;
				
				OnPropertyChanged("NoStudents");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NO_STUD_WAIT property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsNoStudWaitNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? NoStudWait
		{
			get
			{
				return this._noStudWait; 
			}
			set
			{
				if (_noStudWait == value && NoStudWait != null )
					return;
					
				this._noStudWait = value;
				this._isDirty = true;
				
				OnPropertyChanged("NoStudWait");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the NO_STUD_MAX property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsNoStudMaxNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? NoStudMax
		{
			get
			{
				return this._noStudMax; 
			}
			set
			{
				if (_noStudMax == value && NoStudMax != null )
					return;
					
				this._noStudMax = value;
				this._isDirty = true;
				
				OnPropertyChanged("NoStudMax");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GS_CODE_GENDER_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeGenderIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? GsCodeGenderId
		{
			get
			{
				return this._gsCodeGenderId; 
			}
			set
			{
				if (_gsCodeGenderId == value && GsCodeGenderId != null )
					return;
					
				this._gsCodeGenderId = value;
				this._isDirty = true;
				
				OnPropertyChanged("GsCodeGenderId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GENDER_DESCR_AR property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GenderDescrAr
		{
			get
			{
				return this._genderDescrAr; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "GenderDescrAr does not allow null values.");
				if (_genderDescrAr == value)
					return;
					
				this._genderDescrAr = value;
				this._isDirty = true;
				
				OnPropertyChanged("GenderDescrAr");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the GENDER_DESCR_EN property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String GenderDescrEn
		{
			get
			{
				return this._genderDescrEn; 
			}
			set
			{
				if ( value == null )
					throw new ArgumentNullException("value", "GenderDescrEn does not allow null values.");
				if (_genderDescrEn == value)
					return;
					
				this._genderDescrEn = value;
				this._isDirty = true;
				
				OnPropertyChanged("GenderDescrEn");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "VScheduleCourses"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed VscheduleCoursesBase Entity 
		///</summary>
		public virtual VscheduleCoursesBase Copy()
		{
			//shallow copy entity
			VscheduleCourses copy = new VscheduleCourses();
				copy.ScScheduleHdrId = this.ScScheduleHdrId;
				copy.EdOfferingCourseId = this.EdOfferingCourseId;
				copy.EdCourseId = this.EdCourseId;
				copy.CourseCode = this.CourseCode;
				copy.CourseDescrAr = this.CourseDescrAr;
				copy.CourseDescrEn = this.CourseDescrEn;
				copy.EdOfferingId = this.EdOfferingId;
				copy.AsFacultyInfoId = this.AsFacultyInfoId;
				copy.EdAcadYearId = this.EdAcadYearId;
				copy.EdCodeSemesterId = this.EdCodeSemesterId;
				copy.EntMainId = this.EntMainId;
				copy.EdCodeCourseTeachingId = this.EdCodeCourseTeachingId;
				copy.EdCdeTchngMthdId = this.EdCdeTchngMthdId;
				copy.TchngMthdDescrAr = this.TchngMthdDescrAr;
				copy.TchngMthdDescrEn = this.TchngMthdDescrEn;
				copy.ScScheduleDtlId = this.ScScheduleDtlId;
				copy.GroupDescrAr = this.GroupDescrAr;
				copy.GroupDescrEn = this.GroupDescrEn;
				copy.GroupOrder = this.GroupOrder;
				copy.IsResultApproved = this.IsResultApproved;
				copy.NoStudents = this.NoStudents;
				copy.NoStudWait = this.NoStudWait;
				copy.NoStudMax = this.NoStudMax;
				copy.GsCodeGenderId = this.GsCodeGenderId;
				copy.GenderDescrAr = this.GenderDescrAr;
				copy.GenderDescrEn = this.GenderDescrEn;
			copy.AcceptChanges();
			return (VscheduleCourses)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="VscheduleCoursesBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(VscheduleCoursesBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="VscheduleCoursesBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="VscheduleCoursesBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="VscheduleCoursesBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(VscheduleCoursesBase Object1, VscheduleCoursesBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.ScScheduleHdrId != Object2.ScScheduleHdrId)
				equal = false;
			if (Object1.EdOfferingCourseId != Object2.EdOfferingCourseId)
				equal = false;
			if (Object1.EdCourseId != null && Object2.EdCourseId != null )
			{
				if (Object1.EdCourseId != Object2.EdCourseId)
					equal = false;
			}
			else if (Object1.EdCourseId == null ^ Object1.EdCourseId == null )
			{
				equal = false;
			}
			if (Object1.CourseCode != Object2.CourseCode)
				equal = false;
			if (Object1.CourseDescrAr != Object2.CourseDescrAr)
				equal = false;
			if (Object1.CourseDescrEn != Object2.CourseDescrEn)
				equal = false;
			if (Object1.EdOfferingId != null && Object2.EdOfferingId != null )
			{
				if (Object1.EdOfferingId != Object2.EdOfferingId)
					equal = false;
			}
			else if (Object1.EdOfferingId == null ^ Object1.EdOfferingId == null )
			{
				equal = false;
			}
			if (Object1.AsFacultyInfoId != null && Object2.AsFacultyInfoId != null )
			{
				if (Object1.AsFacultyInfoId != Object2.AsFacultyInfoId)
					equal = false;
			}
			else if (Object1.AsFacultyInfoId == null ^ Object1.AsFacultyInfoId == null )
			{
				equal = false;
			}
			if (Object1.EdAcadYearId != Object2.EdAcadYearId)
				equal = false;
			if (Object1.EdCodeSemesterId != null && Object2.EdCodeSemesterId != null )
			{
				if (Object1.EdCodeSemesterId != Object2.EdCodeSemesterId)
					equal = false;
			}
			else if (Object1.EdCodeSemesterId == null ^ Object1.EdCodeSemesterId == null )
			{
				equal = false;
			}
			if (Object1.EntMainId != Object2.EntMainId)
				equal = false;
			if (Object1.EdCodeCourseTeachingId != null && Object2.EdCodeCourseTeachingId != null )
			{
				if (Object1.EdCodeCourseTeachingId != Object2.EdCodeCourseTeachingId)
					equal = false;
			}
			else if (Object1.EdCodeCourseTeachingId == null ^ Object1.EdCodeCourseTeachingId == null )
			{
				equal = false;
			}
			if (Object1.EdCdeTchngMthdId != null && Object2.EdCdeTchngMthdId != null )
			{
				if (Object1.EdCdeTchngMthdId != Object2.EdCdeTchngMthdId)
					equal = false;
			}
			else if (Object1.EdCdeTchngMthdId == null ^ Object1.EdCdeTchngMthdId == null )
			{
				equal = false;
			}
			if (Object1.TchngMthdDescrAr != Object2.TchngMthdDescrAr)
				equal = false;
			if (Object1.TchngMthdDescrEn != Object2.TchngMthdDescrEn)
				equal = false;
			if (Object1.ScScheduleDtlId != Object2.ScScheduleDtlId)
				equal = false;
			if (Object1.GroupDescrAr != Object2.GroupDescrAr)
				equal = false;
			if (Object1.GroupDescrEn != Object2.GroupDescrEn)
				equal = false;
			if (Object1.GroupOrder != null && Object2.GroupOrder != null )
			{
				if (Object1.GroupOrder != Object2.GroupOrder)
					equal = false;
			}
			else if (Object1.GroupOrder == null ^ Object1.GroupOrder == null )
			{
				equal = false;
			}
			if (Object1.IsResultApproved != Object2.IsResultApproved)
				equal = false;
			if (Object1.NoStudents != null && Object2.NoStudents != null )
			{
				if (Object1.NoStudents != Object2.NoStudents)
					equal = false;
			}
			else if (Object1.NoStudents == null ^ Object1.NoStudents == null )
			{
				equal = false;
			}
			if (Object1.NoStudWait != null && Object2.NoStudWait != null )
			{
				if (Object1.NoStudWait != Object2.NoStudWait)
					equal = false;
			}
			else if (Object1.NoStudWait == null ^ Object1.NoStudWait == null )
			{
				equal = false;
			}
			if (Object1.NoStudMax != null && Object2.NoStudMax != null )
			{
				if (Object1.NoStudMax != Object2.NoStudMax)
					equal = false;
			}
			else if (Object1.NoStudMax == null ^ Object1.NoStudMax == null )
			{
				equal = false;
			}
			if (Object1.GsCodeGenderId != null && Object2.GsCodeGenderId != null )
			{
				if (Object1.GsCodeGenderId != Object2.GsCodeGenderId)
					equal = false;
			}
			else if (Object1.GsCodeGenderId == null ^ Object1.GsCodeGenderId == null )
			{
				equal = false;
			}
			if (Object1.GenderDescrAr != Object2.GenderDescrAr)
				equal = false;
			if (Object1.GenderDescrEn != Object2.GenderDescrEn)
				equal = false;
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(VscheduleCourses entity, string propertyName)
		{
			switch (propertyName)
			{
				case "ScScheduleHdrId":
					return entity.ScScheduleHdrId;
				case "EdOfferingCourseId":
					return entity.EdOfferingCourseId;
				case "EdCourseId":
					return entity.EdCourseId;
				case "CourseCode":
					return entity.CourseCode;
				case "CourseDescrAr":
					return entity.CourseDescrAr;
				case "CourseDescrEn":
					return entity.CourseDescrEn;
				case "EdOfferingId":
					return entity.EdOfferingId;
				case "AsFacultyInfoId":
					return entity.AsFacultyInfoId;
				case "EdAcadYearId":
					return entity.EdAcadYearId;
				case "EdCodeSemesterId":
					return entity.EdCodeSemesterId;
				case "EntMainId":
					return entity.EntMainId;
				case "EdCodeCourseTeachingId":
					return entity.EdCodeCourseTeachingId;
				case "EdCdeTchngMthdId":
					return entity.EdCdeTchngMthdId;
				case "TchngMthdDescrAr":
					return entity.TchngMthdDescrAr;
				case "TchngMthdDescrEn":
					return entity.TchngMthdDescrEn;
				case "ScScheduleDtlId":
					return entity.ScScheduleDtlId;
				case "GroupDescrAr":
					return entity.GroupDescrAr;
				case "GroupDescrEn":
					return entity.GroupDescrEn;
				case "GroupOrder":
					return entity.GroupOrder;
				case "IsResultApproved":
					return entity.IsResultApproved;
				case "NoStudents":
					return entity.NoStudents;
				case "NoStudWait":
					return entity.NoStudWait;
				case "NoStudMax":
					return entity.NoStudMax;
				case "GsCodeGenderId":
					return entity.GsCodeGenderId;
				case "GenderDescrAr":
					return entity.GenderDescrAr;
				case "GenderDescrEn":
					return entity.GenderDescrEn;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as VscheduleCourses, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{27}{26}- ScScheduleHdrId: {0}{26}- EdOfferingCourseId: {1}{26}- EdCourseId: {2}{26}- CourseCode: {3}{26}- CourseDescrAr: {4}{26}- CourseDescrEn: {5}{26}- EdOfferingId: {6}{26}- AsFacultyInfoId: {7}{26}- EdAcadYearId: {8}{26}- EdCodeSemesterId: {9}{26}- EntMainId: {10}{26}- EdCodeCourseTeachingId: {11}{26}- EdCdeTchngMthdId: {12}{26}- TchngMthdDescrAr: {13}{26}- TchngMthdDescrEn: {14}{26}- ScScheduleDtlId: {15}{26}- GroupDescrAr: {16}{26}- GroupDescrEn: {17}{26}- GroupOrder: {18}{26}- IsResultApproved: {19}{26}- NoStudents: {20}{26}- NoStudWait: {21}{26}- NoStudMax: {22}{26}- GsCodeGenderId: {23}{26}- GenderDescrAr: {24}{26}- GenderDescrEn: {25}{26}", 
				this.ScScheduleHdrId,
				this.EdOfferingCourseId,
				(this.EdCourseId == null) ? string.Empty : this.EdCourseId.ToString(),
			     
				this.CourseCode,
				this.CourseDescrAr,
				this.CourseDescrEn,
				(this.EdOfferingId == null) ? string.Empty : this.EdOfferingId.ToString(),
			     
				(this.AsFacultyInfoId == null) ? string.Empty : this.AsFacultyInfoId.ToString(),
			     
				this.EdAcadYearId,
				(this.EdCodeSemesterId == null) ? string.Empty : this.EdCodeSemesterId.ToString(),
			     
				this.EntMainId,
				(this.EdCodeCourseTeachingId == null) ? string.Empty : this.EdCodeCourseTeachingId.ToString(),
			     
				(this.EdCdeTchngMthdId == null) ? string.Empty : this.EdCdeTchngMthdId.ToString(),
			     
				this.TchngMthdDescrAr,
				this.TchngMthdDescrEn,
				this.ScScheduleDtlId,
				this.GroupDescrAr,
				this.GroupDescrEn,
				(this.GroupOrder == null) ? string.Empty : this.GroupOrder.ToString(),
			     
				this.IsResultApproved,
				(this.NoStudents == null) ? string.Empty : this.NoStudents.ToString(),
			     
				(this.NoStudWait == null) ? string.Empty : this.NoStudWait.ToString(),
			     
				(this.NoStudMax == null) ? string.Empty : this.NoStudMax.ToString(),
			     
				(this.GsCodeGenderId == null) ? string.Empty : this.GsCodeGenderId.ToString(),
			     
				this.GenderDescrAr,
				this.GenderDescrEn,
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the VscheduleCourses columns.
	/// </summary>
	[Serializable]
	public enum VscheduleCoursesColumn
	{
		/// <summary>
		/// SC_SCHEDULE_HDR_ID : 
		/// </summary>
		[EnumTextValue("SC_SCHEDULE_HDR_ID")]
		[ColumnEnum("SC_SCHEDULE_HDR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		ScScheduleHdrId,
		/// <summary>
		/// ED_OFFERING_COURSE_ID : 
		/// </summary>
		[EnumTextValue("ED_OFFERING_COURSE_ID")]
		[ColumnEnum("ED_OFFERING_COURSE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdOfferingCourseId,
		/// <summary>
		/// ED_COURSE_ID : 
		/// </summary>
		[EnumTextValue("ED_COURSE_ID")]
		[ColumnEnum("ED_COURSE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCourseId,
		/// <summary>
		/// COURSE_CODE : 
		/// </summary>
		[EnumTextValue("COURSE_CODE")]
		[ColumnEnum("COURSE_CODE", typeof(System.String), System.Data.DbType.String, false, false, false, 30)]
		CourseCode,
		/// <summary>
		/// COURSE_DESCR_AR : 
		/// </summary>
		[EnumTextValue("COURSE_DESCR_AR")]
		[ColumnEnum("COURSE_DESCR_AR", typeof(System.String), System.Data.DbType.String, false, false, false, 150)]
		CourseDescrAr,
		/// <summary>
		/// COURSE_DESCR_EN : 
		/// </summary>
		[EnumTextValue("COURSE_DESCR_EN")]
		[ColumnEnum("COURSE_DESCR_EN", typeof(System.String), System.Data.DbType.String, false, false, false, 150)]
		CourseDescrEn,
		/// <summary>
		/// ED_OFFERING_ID : 
		/// </summary>
		[EnumTextValue("ED_OFFERING_ID")]
		[ColumnEnum("ED_OFFERING_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdOfferingId,
		/// <summary>
		/// AS_FACULTY_INFO_ID : 
		/// </summary>
		[EnumTextValue("AS_FACULTY_INFO_ID")]
		[ColumnEnum("AS_FACULTY_INFO_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AsFacultyInfoId,
		/// <summary>
		/// ED_ACAD_YEAR_ID : 
		/// </summary>
		[EnumTextValue("ED_ACAD_YEAR_ID")]
		[ColumnEnum("ED_ACAD_YEAR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdAcadYearId,
		/// <summary>
		/// ED_CODE_SEMESTER_ID : 
		/// </summary>
		[EnumTextValue("ED_CODE_SEMESTER_ID")]
		[ColumnEnum("ED_CODE_SEMESTER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeSemesterId,
		/// <summary>
		/// ENT_MAIN_ID : 
		/// </summary>
		[EnumTextValue("ENT_MAIN_ID")]
		[ColumnEnum("ENT_MAIN_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EntMainId,
		/// <summary>
		/// ED_CODE_COURSE_TEACHING_ID : 
		/// </summary>
		[EnumTextValue("ED_CODE_COURSE_TEACHING_ID")]
		[ColumnEnum("ED_CODE_COURSE_TEACHING_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeCourseTeachingId,
		/// <summary>
		/// ED_CDE_TCHNG_MTHD_ID : 
		/// </summary>
		[EnumTextValue("ED_CDE_TCHNG_MTHD_ID")]
		[ColumnEnum("ED_CDE_TCHNG_MTHD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCdeTchngMthdId,
		/// <summary>
		/// TchngMthdDescrAr : 
		/// </summary>
		[EnumTextValue("TchngMthdDescrAr")]
		[ColumnEnum("TchngMthdDescrAr", typeof(System.String), System.Data.DbType.String, false, false, false, 150)]
		TchngMthdDescrAr,
		/// <summary>
		/// TchngMthdDescrEn : 
		/// </summary>
		[EnumTextValue("TchngMthdDescrEn")]
		[ColumnEnum("TchngMthdDescrEn", typeof(System.String), System.Data.DbType.String, false, false, false, 150)]
		TchngMthdDescrEn,
		/// <summary>
		/// SC_SCHEDULE_DTL_ID : 
		/// </summary>
		[EnumTextValue("SC_SCHEDULE_DTL_ID")]
		[ColumnEnum("SC_SCHEDULE_DTL_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		ScScheduleDtlId,
		/// <summary>
		/// GROUP_DESCR_AR : 
		/// </summary>
		[EnumTextValue("GROUP_DESCR_AR")]
		[ColumnEnum("GROUP_DESCR_AR", typeof(System.String), System.Data.DbType.String, false, false, false, 50)]
		GroupDescrAr,
		/// <summary>
		/// GROUP_DESCR_EN : 
		/// </summary>
		[EnumTextValue("GROUP_DESCR_EN")]
		[ColumnEnum("GROUP_DESCR_EN", typeof(System.String), System.Data.DbType.String, false, false, false, 50)]
		GroupDescrEn,
		/// <summary>
		/// GROUP_ORDER : 
		/// </summary>
		[EnumTextValue("GROUP_ORDER")]
		[ColumnEnum("GROUP_ORDER", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GroupOrder,
		/// <summary>
		/// IS_RESULT_APPROVED : 
		/// </summary>
		[EnumTextValue("IS_RESULT_APPROVED")]
		[ColumnEnum("IS_RESULT_APPROVED", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		IsResultApproved,
		/// <summary>
		/// NO_STUDENTS : 
		/// </summary>
		[EnumTextValue("NO_STUDENTS")]
		[ColumnEnum("NO_STUDENTS", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		NoStudents,
		/// <summary>
		/// NO_STUD_WAIT : 
		/// </summary>
		[EnumTextValue("NO_STUD_WAIT")]
		[ColumnEnum("NO_STUD_WAIT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		NoStudWait,
		/// <summary>
		/// NO_STUD_MAX : 
		/// </summary>
		[EnumTextValue("NO_STUD_MAX")]
		[ColumnEnum("NO_STUD_MAX", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		NoStudMax,
		/// <summary>
		/// GS_CODE_GENDER_ID : 
		/// </summary>
		[EnumTextValue("GS_CODE_GENDER_ID")]
		[ColumnEnum("GS_CODE_GENDER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeGenderId,
		/// <summary>
		/// GENDER_DESCR_AR : 
		/// </summary>
		[EnumTextValue("GENDER_DESCR_AR")]
		[ColumnEnum("GENDER_DESCR_AR", typeof(System.String), System.Data.DbType.String, false, false, false, 50)]
		GenderDescrAr,
		/// <summary>
		/// GENDER_DESCR_EN : 
		/// </summary>
		[EnumTextValue("GENDER_DESCR_EN")]
		[ColumnEnum("GENDER_DESCR_EN", typeof(System.String), System.Data.DbType.String, false, false, false, 50)]
		GenderDescrEn
	}//End enum

} // end namespace
