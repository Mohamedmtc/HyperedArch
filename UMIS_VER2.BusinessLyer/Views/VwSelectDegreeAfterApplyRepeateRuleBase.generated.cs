/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file VwSelectDegreeAfterApplyRepeateRule.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'Vw_SelectDegreeAfterApplyRepeateRule' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("VwSelectDegreeAfterApplyRepeateRuleBase")]
	public abstract partial class VwSelectDegreeAfterApplyRepeateRuleBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// ED_STUD_ID : 
		/// </summary>
		private System.Decimal		  _edStudId = 0.0m;
		
		/// <summary>
		/// ED_COURSE_ID : 
		/// </summary>
		private System.Decimal		  _edCourseId = 0.0m;
		
		/// <summary>
		/// ED_CODE_SEMESTER_TYPE_ID : 
		/// </summary>
		private System.Decimal?		  _edCodeSemesterTypeId = null;
		
		/// <summary>
		/// ExecuseFlg : 
		/// </summary>
		private System.Decimal?		  _execuseFlg = null;
		
		/// <summary>
		/// Prev_passFail : 
		/// </summary>
		private System.Decimal?		  _prevPassFail = null;
		
		/// <summary>
		/// COURSE_DEGREE : 
		/// </summary>
		private System.Decimal?		  _courseDegree = null;
		
		/// <summary>
		/// ED_BYLAW_ID : 
		/// </summary>
		private System.Decimal?		  _edBylawId = null;
		
		/// <summary>
		/// ENT_POLICY_COURSE_REPEAT_ID : 
		/// </summary>
		private System.Decimal		  _entPolicyCourseRepeatId = 0.0m;
		
		/// <summary>
		/// ED_STUD_SEMESTER_ID : 
		/// </summary>
		private System.Decimal		  _edStudSemesterId = 0.0m;
		
		/// <summary>
		/// aa : 
		/// </summary>
		private System.Decimal?		  _aa = null;
		
		/// <summary>
		/// COURSE_MAX_DEG : 
		/// </summary>
		private System.Decimal?		  _courseMaxDeg = null;
		
		/// <summary>
		/// CrsDegreeFrmByLaw : 
		/// </summary>
		private System.Decimal?		  _crsDegreeFrmByLaw = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="VwSelectDegreeAfterApplyRepeateRuleBase"/> instance.
		///</summary>
		public VwSelectDegreeAfterApplyRepeateRuleBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="VwSelectDegreeAfterApplyRepeateRuleBase"/> instance.
		///</summary>
		///<param name="_edStudId"></param>
		///<param name="_edCourseId"></param>
		///<param name="_edCodeSemesterTypeId"></param>
		///<param name="_execuseFlg"></param>
		///<param name="_prevPassFail"></param>
		///<param name="_courseDegree"></param>
		///<param name="_edBylawId"></param>
		///<param name="_entPolicyCourseRepeatId"></param>
		///<param name="_edStudSemesterId"></param>
		///<param name="_aa"></param>
		///<param name="_courseMaxDeg"></param>
		///<param name="_crsDegreeFrmByLaw"></param>
		public VwSelectDegreeAfterApplyRepeateRuleBase(System.Decimal _edStudId, System.Decimal _edCourseId, System.Decimal? _edCodeSemesterTypeId, System.Decimal? _execuseFlg, System.Decimal? _prevPassFail, System.Decimal? _courseDegree, System.Decimal? _edBylawId, System.Decimal _entPolicyCourseRepeatId, System.Decimal _edStudSemesterId, System.Decimal? _aa, System.Decimal? _courseMaxDeg, System.Decimal? _crsDegreeFrmByLaw)
		{
			this._edStudId = _edStudId;
			this._edCourseId = _edCourseId;
			this._edCodeSemesterTypeId = _edCodeSemesterTypeId;
			this._execuseFlg = _execuseFlg;
			this._prevPassFail = _prevPassFail;
			this._courseDegree = _courseDegree;
			this._edBylawId = _edBylawId;
			this._entPolicyCourseRepeatId = _entPolicyCourseRepeatId;
			this._edStudSemesterId = _edStudSemesterId;
			this._aa = _aa;
			this._courseMaxDeg = _courseMaxDeg;
			this._crsDegreeFrmByLaw = _crsDegreeFrmByLaw;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="VwSelectDegreeAfterApplyRepeateRule"/> instance.
		///</summary>
		///<param name="_edStudId"></param>
		///<param name="_edCourseId"></param>
		///<param name="_edCodeSemesterTypeId"></param>
		///<param name="_execuseFlg"></param>
		///<param name="_prevPassFail"></param>
		///<param name="_courseDegree"></param>
		///<param name="_edBylawId"></param>
		///<param name="_entPolicyCourseRepeatId"></param>
		///<param name="_edStudSemesterId"></param>
		///<param name="_aa"></param>
		///<param name="_courseMaxDeg"></param>
		///<param name="_crsDegreeFrmByLaw"></param>
		public static VwSelectDegreeAfterApplyRepeateRule CreateVwSelectDegreeAfterApplyRepeateRule(System.Decimal _edStudId, System.Decimal _edCourseId, System.Decimal? _edCodeSemesterTypeId, System.Decimal? _execuseFlg, System.Decimal? _prevPassFail, System.Decimal? _courseDegree, System.Decimal? _edBylawId, System.Decimal _entPolicyCourseRepeatId, System.Decimal _edStudSemesterId, System.Decimal? _aa, System.Decimal? _courseMaxDeg, System.Decimal? _crsDegreeFrmByLaw)
		{
			VwSelectDegreeAfterApplyRepeateRule newVwSelectDegreeAfterApplyRepeateRule = new VwSelectDegreeAfterApplyRepeateRule();
			newVwSelectDegreeAfterApplyRepeateRule.EdStudId = _edStudId;
			newVwSelectDegreeAfterApplyRepeateRule.EdCourseId = _edCourseId;
			newVwSelectDegreeAfterApplyRepeateRule.EdCodeSemesterTypeId = _edCodeSemesterTypeId;
			newVwSelectDegreeAfterApplyRepeateRule.ExecuseFlg = _execuseFlg;
			newVwSelectDegreeAfterApplyRepeateRule.PrevPassFail = _prevPassFail;
			newVwSelectDegreeAfterApplyRepeateRule.CourseDegree = _courseDegree;
			newVwSelectDegreeAfterApplyRepeateRule.EdBylawId = _edBylawId;
			newVwSelectDegreeAfterApplyRepeateRule.EntPolicyCourseRepeatId = _entPolicyCourseRepeatId;
			newVwSelectDegreeAfterApplyRepeateRule.EdStudSemesterId = _edStudSemesterId;
			newVwSelectDegreeAfterApplyRepeateRule.Aa = _aa;
			newVwSelectDegreeAfterApplyRepeateRule.CourseMaxDeg = _courseMaxDeg;
			newVwSelectDegreeAfterApplyRepeateRule.CrsDegreeFrmByLaw = _crsDegreeFrmByLaw;
			return newVwSelectDegreeAfterApplyRepeateRule;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the ED_STUD_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal EdStudId
		{
			get
			{
				return this._edStudId; 
			}
			set
			{
				if (_edStudId == value)
					return;
					
				this._edStudId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdStudId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ED_COURSE_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal EdCourseId
		{
			get
			{
				return this._edCourseId; 
			}
			set
			{
				if (_edCourseId == value)
					return;
					
				this._edCourseId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdCourseId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ED_CODE_SEMESTER_TYPE_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeSemesterTypeIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? EdCodeSemesterTypeId
		{
			get
			{
				return this._edCodeSemesterTypeId; 
			}
			set
			{
				if (_edCodeSemesterTypeId == value && EdCodeSemesterTypeId != null )
					return;
					
				this._edCodeSemesterTypeId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdCodeSemesterTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ExecuseFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsExecuseFlgNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? ExecuseFlg
		{
			get
			{
				return this._execuseFlg; 
			}
			set
			{
				if (_execuseFlg == value && ExecuseFlg != null )
					return;
					
				this._execuseFlg = value;
				this._isDirty = true;
				
				OnPropertyChanged("ExecuseFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the Prev_passFail property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsPrevPassFailNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? PrevPassFail
		{
			get
			{
				return this._prevPassFail; 
			}
			set
			{
				if (_prevPassFail == value && PrevPassFail != null )
					return;
					
				this._prevPassFail = value;
				this._isDirty = true;
				
				OnPropertyChanged("PrevPassFail");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the COURSE_DEGREE property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCourseDegreeNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? CourseDegree
		{
			get
			{
				return this._courseDegree; 
			}
			set
			{
				if (_courseDegree == value && CourseDegree != null )
					return;
					
				this._courseDegree = value;
				this._isDirty = true;
				
				OnPropertyChanged("CourseDegree");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ED_BYLAW_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdBylawIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? EdBylawId
		{
			get
			{
				return this._edBylawId; 
			}
			set
			{
				if (_edBylawId == value && EdBylawId != null )
					return;
					
				this._edBylawId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdBylawId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ENT_POLICY_COURSE_REPEAT_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal EntPolicyCourseRepeatId
		{
			get
			{
				return this._entPolicyCourseRepeatId; 
			}
			set
			{
				if (_entPolicyCourseRepeatId == value)
					return;
					
				this._entPolicyCourseRepeatId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EntPolicyCourseRepeatId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ED_STUD_SEMESTER_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal EdStudSemesterId
		{
			get
			{
				return this._edStudSemesterId; 
			}
			set
			{
				if (_edStudSemesterId == value)
					return;
					
				this._edStudSemesterId = value;
				this._isDirty = true;
				
				OnPropertyChanged("EdStudSemesterId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the aa property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAaNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? Aa
		{
			get
			{
				return this._aa; 
			}
			set
			{
				if (_aa == value && Aa != null )
					return;
					
				this._aa = value;
				this._isDirty = true;
				
				OnPropertyChanged("Aa");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the COURSE_MAX_DEG property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCourseMaxDegNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? CourseMaxDeg
		{
			get
			{
				return this._courseMaxDeg; 
			}
			set
			{
				if (_courseMaxDeg == value && CourseMaxDeg != null )
					return;
					
				this._courseMaxDeg = value;
				this._isDirty = true;
				
				OnPropertyChanged("CourseMaxDeg");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the CrsDegreeFrmByLaw property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCrsDegreeFrmByLawNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? CrsDegreeFrmByLaw
		{
			get
			{
				return this._crsDegreeFrmByLaw; 
			}
			set
			{
				if (_crsDegreeFrmByLaw == value && CrsDegreeFrmByLaw != null )
					return;
					
				this._crsDegreeFrmByLaw = value;
				this._isDirty = true;
				
				OnPropertyChanged("CrsDegreeFrmByLaw");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "Vw_SelectDegreeAfterApplyRepeateRule"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed VwSelectDegreeAfterApplyRepeateRuleBase Entity 
		///</summary>
		public virtual VwSelectDegreeAfterApplyRepeateRuleBase Copy()
		{
			//shallow copy entity
			VwSelectDegreeAfterApplyRepeateRule copy = new VwSelectDegreeAfterApplyRepeateRule();
				copy.EdStudId = this.EdStudId;
				copy.EdCourseId = this.EdCourseId;
				copy.EdCodeSemesterTypeId = this.EdCodeSemesterTypeId;
				copy.ExecuseFlg = this.ExecuseFlg;
				copy.PrevPassFail = this.PrevPassFail;
				copy.CourseDegree = this.CourseDegree;
				copy.EdBylawId = this.EdBylawId;
				copy.EntPolicyCourseRepeatId = this.EntPolicyCourseRepeatId;
				copy.EdStudSemesterId = this.EdStudSemesterId;
				copy.Aa = this.Aa;
				copy.CourseMaxDeg = this.CourseMaxDeg;
				copy.CrsDegreeFrmByLaw = this.CrsDegreeFrmByLaw;
			copy.AcceptChanges();
			return (VwSelectDegreeAfterApplyRepeateRule)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="VwSelectDegreeAfterApplyRepeateRuleBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(VwSelectDegreeAfterApplyRepeateRuleBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="VwSelectDegreeAfterApplyRepeateRuleBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="VwSelectDegreeAfterApplyRepeateRuleBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="VwSelectDegreeAfterApplyRepeateRuleBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(VwSelectDegreeAfterApplyRepeateRuleBase Object1, VwSelectDegreeAfterApplyRepeateRuleBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.EdStudId != Object2.EdStudId)
				equal = false;
			if (Object1.EdCourseId != Object2.EdCourseId)
				equal = false;
			if (Object1.EdCodeSemesterTypeId != null && Object2.EdCodeSemesterTypeId != null )
			{
				if (Object1.EdCodeSemesterTypeId != Object2.EdCodeSemesterTypeId)
					equal = false;
			}
			else if (Object1.EdCodeSemesterTypeId == null ^ Object1.EdCodeSemesterTypeId == null )
			{
				equal = false;
			}
			if (Object1.ExecuseFlg != null && Object2.ExecuseFlg != null )
			{
				if (Object1.ExecuseFlg != Object2.ExecuseFlg)
					equal = false;
			}
			else if (Object1.ExecuseFlg == null ^ Object1.ExecuseFlg == null )
			{
				equal = false;
			}
			if (Object1.PrevPassFail != null && Object2.PrevPassFail != null )
			{
				if (Object1.PrevPassFail != Object2.PrevPassFail)
					equal = false;
			}
			else if (Object1.PrevPassFail == null ^ Object1.PrevPassFail == null )
			{
				equal = false;
			}
			if (Object1.CourseDegree != null && Object2.CourseDegree != null )
			{
				if (Object1.CourseDegree != Object2.CourseDegree)
					equal = false;
			}
			else if (Object1.CourseDegree == null ^ Object1.CourseDegree == null )
			{
				equal = false;
			}
			if (Object1.EdBylawId != null && Object2.EdBylawId != null )
			{
				if (Object1.EdBylawId != Object2.EdBylawId)
					equal = false;
			}
			else if (Object1.EdBylawId == null ^ Object1.EdBylawId == null )
			{
				equal = false;
			}
			if (Object1.EntPolicyCourseRepeatId != Object2.EntPolicyCourseRepeatId)
				equal = false;
			if (Object1.EdStudSemesterId != Object2.EdStudSemesterId)
				equal = false;
			if (Object1.Aa != null && Object2.Aa != null )
			{
				if (Object1.Aa != Object2.Aa)
					equal = false;
			}
			else if (Object1.Aa == null ^ Object1.Aa == null )
			{
				equal = false;
			}
			if (Object1.CourseMaxDeg != null && Object2.CourseMaxDeg != null )
			{
				if (Object1.CourseMaxDeg != Object2.CourseMaxDeg)
					equal = false;
			}
			else if (Object1.CourseMaxDeg == null ^ Object1.CourseMaxDeg == null )
			{
				equal = false;
			}
			if (Object1.CrsDegreeFrmByLaw != null && Object2.CrsDegreeFrmByLaw != null )
			{
				if (Object1.CrsDegreeFrmByLaw != Object2.CrsDegreeFrmByLaw)
					equal = false;
			}
			else if (Object1.CrsDegreeFrmByLaw == null ^ Object1.CrsDegreeFrmByLaw == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(VwSelectDegreeAfterApplyRepeateRule entity, string propertyName)
		{
			switch (propertyName)
			{
				case "EdStudId":
					return entity.EdStudId;
				case "EdCourseId":
					return entity.EdCourseId;
				case "EdCodeSemesterTypeId":
					return entity.EdCodeSemesterTypeId;
				case "ExecuseFlg":
					return entity.ExecuseFlg;
				case "PrevPassFail":
					return entity.PrevPassFail;
				case "CourseDegree":
					return entity.CourseDegree;
				case "EdBylawId":
					return entity.EdBylawId;
				case "EntPolicyCourseRepeatId":
					return entity.EntPolicyCourseRepeatId;
				case "EdStudSemesterId":
					return entity.EdStudSemesterId;
				case "Aa":
					return entity.Aa;
				case "CourseMaxDeg":
					return entity.CourseMaxDeg;
				case "CrsDegreeFrmByLaw":
					return entity.CrsDegreeFrmByLaw;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as VwSelectDegreeAfterApplyRepeateRule, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{13}{12}- EdStudId: {0}{12}- EdCourseId: {1}{12}- EdCodeSemesterTypeId: {2}{12}- ExecuseFlg: {3}{12}- PrevPassFail: {4}{12}- CourseDegree: {5}{12}- EdBylawId: {6}{12}- EntPolicyCourseRepeatId: {7}{12}- EdStudSemesterId: {8}{12}- Aa: {9}{12}- CourseMaxDeg: {10}{12}- CrsDegreeFrmByLaw: {11}{12}", 
				this.EdStudId,
				this.EdCourseId,
				(this.EdCodeSemesterTypeId == null) ? string.Empty : this.EdCodeSemesterTypeId.ToString(),
			     
				(this.ExecuseFlg == null) ? string.Empty : this.ExecuseFlg.ToString(),
			     
				(this.PrevPassFail == null) ? string.Empty : this.PrevPassFail.ToString(),
			     
				(this.CourseDegree == null) ? string.Empty : this.CourseDegree.ToString(),
			     
				(this.EdBylawId == null) ? string.Empty : this.EdBylawId.ToString(),
			     
				this.EntPolicyCourseRepeatId,
				this.EdStudSemesterId,
				(this.Aa == null) ? string.Empty : this.Aa.ToString(),
			     
				(this.CourseMaxDeg == null) ? string.Empty : this.CourseMaxDeg.ToString(),
			     
				(this.CrsDegreeFrmByLaw == null) ? string.Empty : this.CrsDegreeFrmByLaw.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the VwSelectDegreeAfterApplyRepeateRule columns.
	/// </summary>
	[Serializable]
	public enum VwSelectDegreeAfterApplyRepeateRuleColumn
	{
		/// <summary>
		/// ED_STUD_ID : 
		/// </summary>
		[EnumTextValue("ED_STUD_ID")]
		[ColumnEnum("ED_STUD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdStudId,
		/// <summary>
		/// ED_COURSE_ID : 
		/// </summary>
		[EnumTextValue("ED_COURSE_ID")]
		[ColumnEnum("ED_COURSE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdCourseId,
		/// <summary>
		/// ED_CODE_SEMESTER_TYPE_ID : 
		/// </summary>
		[EnumTextValue("ED_CODE_SEMESTER_TYPE_ID")]
		[ColumnEnum("ED_CODE_SEMESTER_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeSemesterTypeId,
		/// <summary>
		/// ExecuseFlg : 
		/// </summary>
		[EnumTextValue("ExecuseFlg")]
		[ColumnEnum("ExecuseFlg", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ExecuseFlg,
		/// <summary>
		/// Prev_passFail : 
		/// </summary>
		[EnumTextValue("Prev_passFail")]
		[ColumnEnum("Prev_passFail", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		PrevPassFail,
		/// <summary>
		/// COURSE_DEGREE : 
		/// </summary>
		[EnumTextValue("COURSE_DEGREE")]
		[ColumnEnum("COURSE_DEGREE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CourseDegree,
		/// <summary>
		/// ED_BYLAW_ID : 
		/// </summary>
		[EnumTextValue("ED_BYLAW_ID")]
		[ColumnEnum("ED_BYLAW_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdBylawId,
		/// <summary>
		/// ENT_POLICY_COURSE_REPEAT_ID : 
		/// </summary>
		[EnumTextValue("ENT_POLICY_COURSE_REPEAT_ID")]
		[ColumnEnum("ENT_POLICY_COURSE_REPEAT_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EntPolicyCourseRepeatId,
		/// <summary>
		/// ED_STUD_SEMESTER_ID : 
		/// </summary>
		[EnumTextValue("ED_STUD_SEMESTER_ID")]
		[ColumnEnum("ED_STUD_SEMESTER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdStudSemesterId,
		/// <summary>
		/// aa : 
		/// </summary>
		[EnumTextValue("aa")]
		[ColumnEnum("aa", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		Aa,
		/// <summary>
		/// COURSE_MAX_DEG : 
		/// </summary>
		[EnumTextValue("COURSE_MAX_DEG")]
		[ColumnEnum("COURSE_MAX_DEG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CourseMaxDeg,
		/// <summary>
		/// CrsDegreeFrmByLaw : 
		/// </summary>
		[EnumTextValue("CrsDegreeFrmByLaw")]
		[ColumnEnum("CrsDegreeFrmByLaw", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		CrsDegreeFrmByLaw
	}//End enum

} // end namespace
