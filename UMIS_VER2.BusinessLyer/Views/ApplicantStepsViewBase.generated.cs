/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file ApplicantStepsView.cs instead.
*/
#region Using Directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Runtime.Serialization;
using System.Xml.Serialization;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ApplicantSteps_View' view. [No description found in the database]	
	///</summary>
	[Serializable]
	[CLSCompliant(true)]
	[ToolboxItem("ApplicantStepsViewBase")]
	public abstract partial class ApplicantStepsViewBase : System.IComparable, System.ICloneable, INotifyPropertyChanged
	{
		
		#region Variable Declarations
		
		/// <summary>
		/// ADM_REG_STEPS_ID : 
		/// </summary>
		private System.Decimal		  _admRegStepsId = 0.0m;
		
		/// <summary>
		/// STEP_NO : 
		/// </summary>
		private System.Decimal?		  _stepNo = null;
		
		/// <summary>
		/// STEP_TITLE_AR : 
		/// </summary>
		private System.String		  _stepTitleAr = null;
		
		/// <summary>
		/// STEP_TITLE_EN : 
		/// </summary>
		private System.String		  _stepTitleEn = null;
		
		/// <summary>
		/// APP_TYPE_REG_STEPS_ID : 
		/// </summary>
		private System.Decimal		  _appTypeRegStepsId = 0.0m;
		
		/// <summary>
		/// MANDATORY_FLG : 
		/// </summary>
		private System.Decimal?		  _mandatoryFlg = null;
		
		/// <summary>
		/// STEP_LAST_MODIFIED : 
		/// </summary>
		private System.DateTime?		  _stepLastModified = null;
		
		/// <summary>
		/// STEP_STATUS_FLG : 
		/// </summary>
		private System.Decimal?		  _stepStatusFlg = null;
		
		/// <summary>
		/// ADM_APP_PROC_STEPS_ID : 
		/// </summary>
		private System.Decimal		  _admAppProcStepsId = 0.0m;
		
		/// <summary>
		/// ADM_APPLICANT_ID : 
		/// </summary>
		private System.Decimal?		  _admApplicantId = null;
		
		/// <summary>
		/// AS_CODE_DEGREE_CLASS_ID : 
		/// </summary>
		private System.Decimal		  _asCodeDegreeClassId = 0.0m;
		
		/// <summary>
		/// TRANS_FLG : 
		/// </summary>
		private System.Decimal?		  _transFlg = null;
		
		/// <summary>
		/// Object that contains data to associate with this object
		/// </summary>
		private object _tag;
		
		/// <summary>
		/// Suppresses Entity Events from Firing, 
		/// useful when loading the entities from the database.
		/// </summary>
	    [NonSerialized] 
		private bool suppressEntityEvents = false;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="ApplicantStepsViewBase"/> instance.
		///</summary>
		public ApplicantStepsViewBase()
		{
		}		
		
		///<summary>
		/// Creates a new <see cref="ApplicantStepsViewBase"/> instance.
		///</summary>
		///<param name="_admRegStepsId"></param>
		///<param name="_stepNo"></param>
		///<param name="_stepTitleAr"></param>
		///<param name="_stepTitleEn"></param>
		///<param name="_appTypeRegStepsId"></param>
		///<param name="_mandatoryFlg"></param>
		///<param name="_stepLastModified"></param>
		///<param name="_stepStatusFlg"></param>
		///<param name="_admAppProcStepsId"></param>
		///<param name="_admApplicantId"></param>
		///<param name="_asCodeDegreeClassId"></param>
		///<param name="_transFlg"></param>
		public ApplicantStepsViewBase(System.Decimal _admRegStepsId, System.Decimal? _stepNo, System.String _stepTitleAr, System.String _stepTitleEn, System.Decimal _appTypeRegStepsId, System.Decimal? _mandatoryFlg, System.DateTime? _stepLastModified, System.Decimal? _stepStatusFlg, System.Decimal _admAppProcStepsId, System.Decimal? _admApplicantId, System.Decimal _asCodeDegreeClassId, System.Decimal? _transFlg)
		{
			this._admRegStepsId = _admRegStepsId;
			this._stepNo = _stepNo;
			this._stepTitleAr = _stepTitleAr;
			this._stepTitleEn = _stepTitleEn;
			this._appTypeRegStepsId = _appTypeRegStepsId;
			this._mandatoryFlg = _mandatoryFlg;
			this._stepLastModified = _stepLastModified;
			this._stepStatusFlg = _stepStatusFlg;
			this._admAppProcStepsId = _admAppProcStepsId;
			this._admApplicantId = _admApplicantId;
			this._asCodeDegreeClassId = _asCodeDegreeClassId;
			this._transFlg = _transFlg;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="ApplicantStepsView"/> instance.
		///</summary>
		///<param name="_admRegStepsId"></param>
		///<param name="_stepNo"></param>
		///<param name="_stepTitleAr"></param>
		///<param name="_stepTitleEn"></param>
		///<param name="_appTypeRegStepsId"></param>
		///<param name="_mandatoryFlg"></param>
		///<param name="_stepLastModified"></param>
		///<param name="_stepStatusFlg"></param>
		///<param name="_admAppProcStepsId"></param>
		///<param name="_admApplicantId"></param>
		///<param name="_asCodeDegreeClassId"></param>
		///<param name="_transFlg"></param>
		public static ApplicantStepsView CreateApplicantStepsView(System.Decimal _admRegStepsId, System.Decimal? _stepNo, System.String _stepTitleAr, System.String _stepTitleEn, System.Decimal _appTypeRegStepsId, System.Decimal? _mandatoryFlg, System.DateTime? _stepLastModified, System.Decimal? _stepStatusFlg, System.Decimal _admAppProcStepsId, System.Decimal? _admApplicantId, System.Decimal _asCodeDegreeClassId, System.Decimal? _transFlg)
		{
			ApplicantStepsView newApplicantStepsView = new ApplicantStepsView();
			newApplicantStepsView.AdmRegStepsId = _admRegStepsId;
			newApplicantStepsView.StepNo = _stepNo;
			newApplicantStepsView.StepTitleAr = _stepTitleAr;
			newApplicantStepsView.StepTitleEn = _stepTitleEn;
			newApplicantStepsView.AppTypeRegStepsId = _appTypeRegStepsId;
			newApplicantStepsView.MandatoryFlg = _mandatoryFlg;
			newApplicantStepsView.StepLastModified = _stepLastModified;
			newApplicantStepsView.StepStatusFlg = _stepStatusFlg;
			newApplicantStepsView.AdmAppProcStepsId = _admAppProcStepsId;
			newApplicantStepsView.AdmApplicantId = _admApplicantId;
			newApplicantStepsView.AsCodeDegreeClassId = _asCodeDegreeClassId;
			newApplicantStepsView.TransFlg = _transFlg;
			return newApplicantStepsView;
		}
				
		#endregion Constructors
		
		#region Properties	
		/// <summary>
		/// 	Gets or Sets the ADM_REG_STEPS_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal AdmRegStepsId
		{
			get
			{
				return this._admRegStepsId; 
			}
			set
			{
				if (_admRegStepsId == value)
					return;
					
				this._admRegStepsId = value;
				this._isDirty = true;
				
				OnPropertyChanged("AdmRegStepsId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the STEP_NO property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsStepNoNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? StepNo
		{
			get
			{
				return this._stepNo; 
			}
			set
			{
				if (_stepNo == value && StepNo != null )
					return;
					
				this._stepNo = value;
				this._isDirty = true;
				
				OnPropertyChanged("StepNo");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the STEP_TITLE_AR property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String StepTitleAr
		{
			get
			{
				return this._stepTitleAr; 
			}
			set
			{
				if (_stepTitleAr == value)
					return;
					
				this._stepTitleAr = value;
				this._isDirty = true;
				
				OnPropertyChanged("StepTitleAr");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the STEP_TITLE_EN property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.String StepTitleEn
		{
			get
			{
				return this._stepTitleEn; 
			}
			set
			{
				if (_stepTitleEn == value)
					return;
					
				this._stepTitleEn = value;
				this._isDirty = true;
				
				OnPropertyChanged("StepTitleEn");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the APP_TYPE_REG_STEPS_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal AppTypeRegStepsId
		{
			get
			{
				return this._appTypeRegStepsId; 
			}
			set
			{
				if (_appTypeRegStepsId == value)
					return;
					
				this._appTypeRegStepsId = value;
				this._isDirty = true;
				
				OnPropertyChanged("AppTypeRegStepsId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the MANDATORY_FLG property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsMandatoryFlgNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? MandatoryFlg
		{
			get
			{
				return this._mandatoryFlg; 
			}
			set
			{
				if (_mandatoryFlg == value && MandatoryFlg != null )
					return;
					
				this._mandatoryFlg = value;
				this._isDirty = true;
				
				OnPropertyChanged("MandatoryFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the STEP_LAST_MODIFIED property. 
		///		
		/// </summary>
		/// <value>This type is datetime</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsStepLastModifiedNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.DateTime? StepLastModified
		{
			get
			{
				return this._stepLastModified; 
			}
			set
			{
				if (_stepLastModified == value && StepLastModified != null )
					return;
					
				this._stepLastModified = value;
				this._isDirty = true;
				
				OnPropertyChanged("StepLastModified");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the STEP_STATUS_FLG property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsStepStatusFlgNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? StepStatusFlg
		{
			get
			{
				return this._stepStatusFlg; 
			}
			set
			{
				if (_stepStatusFlg == value && StepStatusFlg != null )
					return;
					
				this._stepStatusFlg = value;
				this._isDirty = true;
				
				OnPropertyChanged("StepStatusFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ADM_APP_PROC_STEPS_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal AdmAppProcStepsId
		{
			get
			{
				return this._admAppProcStepsId; 
			}
			set
			{
				if (_admAppProcStepsId == value)
					return;
					
				this._admAppProcStepsId = value;
				this._isDirty = true;
				
				OnPropertyChanged("AdmAppProcStepsId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the ADM_APPLICANT_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmApplicantIdNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? AdmApplicantId
		{
			get
			{
				return this._admApplicantId; 
			}
			set
			{
				if (_admApplicantId == value && AdmApplicantId != null )
					return;
					
				this._admApplicantId = value;
				this._isDirty = true;
				
				OnPropertyChanged("AdmApplicantId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the AS_CODE_DEGREE_CLASS_ID property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal AsCodeDegreeClassId
		{
			get
			{
				return this._asCodeDegreeClassId; 
			}
			set
			{
				if (_asCodeDegreeClassId == value)
					return;
					
				this._asCodeDegreeClassId = value;
				this._isDirty = true;
				
				OnPropertyChanged("AsCodeDegreeClassId");
			}
		}
		
		/// <summary>
		/// 	Gets or Sets the TRANS_FLG property. 
		///		
		/// </summary>
		/// <value>This type is numeric</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTransFlgNull() and perform business logic appropriately.
		/// </remarks>
		[DescriptionAttribute(""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		public virtual System.Decimal? TransFlg
		{
			get
			{
				return this._transFlg; 
			}
			set
			{
				if (_transFlg == value && TransFlg != null )
					return;
					
				this._transFlg = value;
				this._isDirty = true;
				
				OnPropertyChanged("TransFlg");
			}
		}
		
		
		/// <summary>
		///     Gets or sets the object that contains supplemental data about this object.
		/// </summary>
		/// <value>Object</value>
		[System.ComponentModel.Bindable(false)]
		[LocalizableAttribute(false)]
		[DescriptionAttribute("Object containing data to be associated with this object")]
		public virtual object Tag
		{
			get
			{
				return this._tag;
			}
			set
			{
				if (this._tag == value)
					return;
		
				this._tag = value;
			}
		}
	
		/// <summary>
		/// Determines whether this entity is to suppress events while set to true.
		/// </summary>
		[System.ComponentModel.Bindable(false)]
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public bool SuppressEntityEvents
		{	
			get
			{
				return suppressEntityEvents;
			}
			set
			{
				suppressEntityEvents = value;
			}	
		}

		private bool _isDeleted = false;
		/// <summary>
		/// Gets a value indicating if object has been <see cref="MarkToDelete"/>. ReadOnly.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDeleted
		{
			get { return this._isDeleted; }
		}


		private bool _isDirty = false;
		/// <summary>
		///	Gets a value indicating  if the object has been modified from its original state.
		/// </summary>
		///<value>True if object has been modified from its original state; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsDirty
		{
			get { return this._isDirty; }
		}
		

		private bool _isNew = true;
		/// <summary>
		///	Gets a value indicating if the object is new.
		/// </summary>
		///<value>True if objectis new; otherwise False;</value>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public virtual bool IsNew
		{
			get { return this._isNew; }
			set { this._isNew = value; }
		}

		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public string ViewName
		{
			get { return "ApplicantSteps_View"; }
		}

		
		#endregion
		
		#region Methods	
		
		/// <summary>
		/// Accepts the changes made to this object by setting each flags to false.
		/// </summary>
		public virtual void AcceptChanges()
		{
			this._isDeleted = false;
			this._isDirty = false;
			this._isNew = false;
			OnPropertyChanged(string.Empty);
		}
		
		
		///<summary>
		///  Revert all changes and restore original values.
		///  Currently not supported.
		///</summary>
		/// <exception cref="NotSupportedException">This method is not currently supported and always throws this exception.</exception>
		public virtual void CancelChanges()
		{
			throw new NotSupportedException("Method currently not Supported.");
		}
		
		///<summary>
		///   Marks entity to be deleted.
		///</summary>
		public virtual void MarkToDelete()
		{
			this._isDeleted = true;
		}
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed ApplicantStepsViewBase Entity 
		///</summary>
		public virtual ApplicantStepsViewBase Copy()
		{
			//shallow copy entity
			ApplicantStepsView copy = new ApplicantStepsView();
				copy.AdmRegStepsId = this.AdmRegStepsId;
				copy.StepNo = this.StepNo;
				copy.StepTitleAr = this.StepTitleAr;
				copy.StepTitleEn = this.StepTitleEn;
				copy.AppTypeRegStepsId = this.AppTypeRegStepsId;
				copy.MandatoryFlg = this.MandatoryFlg;
				copy.StepLastModified = this.StepLastModified;
				copy.StepStatusFlg = this.StepStatusFlg;
				copy.AdmAppProcStepsId = this.AdmAppProcStepsId;
				copy.AdmApplicantId = this.AdmApplicantId;
				copy.AsCodeDegreeClassId = this.AsCodeDegreeClassId;
				copy.TransFlg = this.TransFlg;
			copy.AcceptChanges();
			return (ApplicantStepsView)copy;
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Deep Copy of this entity.
		///</summary>
		public object Clone(){
			return this.Copy();
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		#endregion
		
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="ApplicantStepsViewBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(ApplicantStepsViewBase toObject)
		{
			if (toObject == null)
				return false;
			return Equals(this, toObject);
		}
		
		
		///<summary>
		/// Determines whether the specified <see cref="ApplicantStepsViewBase"/> instances are considered equal.
		///</summary>
		///<param name="Object1">The first <see cref="ApplicantStepsViewBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="ApplicantStepsViewBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool Equals(ApplicantStepsViewBase Object1, ApplicantStepsViewBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;

			bool equal = true;
			if (Object1.AdmRegStepsId != Object2.AdmRegStepsId)
				equal = false;
			if (Object1.StepNo != null && Object2.StepNo != null )
			{
				if (Object1.StepNo != Object2.StepNo)
					equal = false;
			}
			else if (Object1.StepNo == null ^ Object1.StepNo == null )
			{
				equal = false;
			}
			if (Object1.StepTitleAr != null && Object2.StepTitleAr != null )
			{
				if (Object1.StepTitleAr != Object2.StepTitleAr)
					equal = false;
			}
			else if (Object1.StepTitleAr == null ^ Object1.StepTitleAr == null )
			{
				equal = false;
			}
			if (Object1.StepTitleEn != null && Object2.StepTitleEn != null )
			{
				if (Object1.StepTitleEn != Object2.StepTitleEn)
					equal = false;
			}
			else if (Object1.StepTitleEn == null ^ Object1.StepTitleEn == null )
			{
				equal = false;
			}
			if (Object1.AppTypeRegStepsId != Object2.AppTypeRegStepsId)
				equal = false;
			if (Object1.MandatoryFlg != null && Object2.MandatoryFlg != null )
			{
				if (Object1.MandatoryFlg != Object2.MandatoryFlg)
					equal = false;
			}
			else if (Object1.MandatoryFlg == null ^ Object1.MandatoryFlg == null )
			{
				equal = false;
			}
			if (Object1.StepLastModified != null && Object2.StepLastModified != null )
			{
				if (Object1.StepLastModified != Object2.StepLastModified)
					equal = false;
			}
			else if (Object1.StepLastModified == null ^ Object1.StepLastModified == null )
			{
				equal = false;
			}
			if (Object1.StepStatusFlg != null && Object2.StepStatusFlg != null )
			{
				if (Object1.StepStatusFlg != Object2.StepStatusFlg)
					equal = false;
			}
			else if (Object1.StepStatusFlg == null ^ Object1.StepStatusFlg == null )
			{
				equal = false;
			}
			if (Object1.AdmAppProcStepsId != Object2.AdmAppProcStepsId)
				equal = false;
			if (Object1.AdmApplicantId != null && Object2.AdmApplicantId != null )
			{
				if (Object1.AdmApplicantId != Object2.AdmApplicantId)
					equal = false;
			}
			else if (Object1.AdmApplicantId == null ^ Object1.AdmApplicantId == null )
			{
				equal = false;
			}
			if (Object1.AsCodeDegreeClassId != Object2.AsCodeDegreeClassId)
				equal = false;
			if (Object1.TransFlg != null && Object2.TransFlg != null )
			{
				if (Object1.TransFlg != Object2.TransFlg)
					equal = false;
			}
			else if (Object1.TransFlg == null ^ Object1.TransFlg == null )
			{
				equal = false;
			}
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
		}
	
		#endregion
		
		#region INotifyPropertyChanged Members
		
		/// <summary>
      /// Event to indicate that a property has changed.
      /// </summary>
		[field:NonSerialized]
		public event PropertyChangedEventHandler PropertyChanged;

		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="propertyName">The name of the property that has changed.</param>
		protected virtual void OnPropertyChanged(string propertyName)
		{ 
			OnPropertyChanged(new PropertyChangedEventArgs(propertyName));
		}
		
		/// <summary>
      /// Called when a property is changed
      /// </summary>
      /// <param name="e">PropertyChangedEventArgs</param>
		protected virtual void OnPropertyChanged(PropertyChangedEventArgs e)
		{
			if (!SuppressEntityEvents)
			{
				if (null != PropertyChanged)
				{
					PropertyChanged(this, e);
				}
			}
		}
		
		#endregion
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="entity">The entity.</param>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public static object GetPropertyValueByName(ApplicantStepsView entity, string propertyName)
		{
			switch (propertyName)
			{
				case "AdmRegStepsId":
					return entity.AdmRegStepsId;
				case "StepNo":
					return entity.StepNo;
				case "StepTitleAr":
					return entity.StepTitleAr;
				case "StepTitleEn":
					return entity.StepTitleEn;
				case "AppTypeRegStepsId":
					return entity.AppTypeRegStepsId;
				case "MandatoryFlg":
					return entity.MandatoryFlg;
				case "StepLastModified":
					return entity.StepLastModified;
				case "StepStatusFlg":
					return entity.StepStatusFlg;
				case "AdmAppProcStepsId":
					return entity.AdmAppProcStepsId;
				case "AdmApplicantId":
					return entity.AdmApplicantId;
				case "AsCodeDegreeClassId":
					return entity.AsCodeDegreeClassId;
				case "TransFlg":
					return entity.TransFlg;
			}
			return null;
		}
				
		/// <summary>
		/// Gets the property value by name.
		/// </summary>
		/// <param name="propertyName">Name of the property.</param>
		/// <returns></returns>
		public object GetPropertyValueByName(string propertyName)
		{			
			return GetPropertyValueByName(this as ApplicantStepsView, propertyName);
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{13}{12}- AdmRegStepsId: {0}{12}- StepNo: {1}{12}- StepTitleAr: {2}{12}- StepTitleEn: {3}{12}- AppTypeRegStepsId: {4}{12}- MandatoryFlg: {5}{12}- StepLastModified: {6}{12}- StepStatusFlg: {7}{12}- AdmAppProcStepsId: {8}{12}- AdmApplicantId: {9}{12}- AsCodeDegreeClassId: {10}{12}- TransFlg: {11}{12}", 
				this.AdmRegStepsId,
				(this.StepNo == null) ? string.Empty : this.StepNo.ToString(),
			     
				(this.StepTitleAr == null) ? string.Empty : this.StepTitleAr.ToString(),
			     
				(this.StepTitleEn == null) ? string.Empty : this.StepTitleEn.ToString(),
			     
				this.AppTypeRegStepsId,
				(this.MandatoryFlg == null) ? string.Empty : this.MandatoryFlg.ToString(),
			     
				(this.StepLastModified == null) ? string.Empty : this.StepLastModified.ToString(),
			     
				(this.StepStatusFlg == null) ? string.Empty : this.StepStatusFlg.ToString(),
			     
				this.AdmAppProcStepsId,
				(this.AdmApplicantId == null) ? string.Empty : this.AdmApplicantId.ToString(),
			     
				this.AsCodeDegreeClassId,
				(this.TransFlg == null) ? string.Empty : this.TransFlg.ToString(),
			     
				System.Environment.NewLine, 
				this.GetType());
		}
	
	}//End Class
	
	
	/// <summary>
	/// Enumerate the ApplicantStepsView columns.
	/// </summary>
	[Serializable]
	public enum ApplicantStepsViewColumn
	{
		/// <summary>
		/// ADM_REG_STEPS_ID : 
		/// </summary>
		[EnumTextValue("ADM_REG_STEPS_ID")]
		[ColumnEnum("ADM_REG_STEPS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		AdmRegStepsId,
		/// <summary>
		/// STEP_NO : 
		/// </summary>
		[EnumTextValue("STEP_NO")]
		[ColumnEnum("STEP_NO", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		StepNo,
		/// <summary>
		/// STEP_TITLE_AR : 
		/// </summary>
		[EnumTextValue("STEP_TITLE_AR")]
		[ColumnEnum("STEP_TITLE_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		StepTitleAr,
		/// <summary>
		/// STEP_TITLE_EN : 
		/// </summary>
		[EnumTextValue("STEP_TITLE_EN")]
		[ColumnEnum("STEP_TITLE_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		StepTitleEn,
		/// <summary>
		/// APP_TYPE_REG_STEPS_ID : 
		/// </summary>
		[EnumTextValue("APP_TYPE_REG_STEPS_ID")]
		[ColumnEnum("APP_TYPE_REG_STEPS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		AppTypeRegStepsId,
		/// <summary>
		/// MANDATORY_FLG : 
		/// </summary>
		[EnumTextValue("MANDATORY_FLG")]
		[ColumnEnum("MANDATORY_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		MandatoryFlg,
		/// <summary>
		/// STEP_LAST_MODIFIED : 
		/// </summary>
		[EnumTextValue("STEP_LAST_MODIFIED")]
		[ColumnEnum("STEP_LAST_MODIFIED", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		StepLastModified,
		/// <summary>
		/// STEP_STATUS_FLG : 
		/// </summary>
		[EnumTextValue("STEP_STATUS_FLG")]
		[ColumnEnum("STEP_STATUS_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		StepStatusFlg,
		/// <summary>
		/// ADM_APP_PROC_STEPS_ID : 
		/// </summary>
		[EnumTextValue("ADM_APP_PROC_STEPS_ID")]
		[ColumnEnum("ADM_APP_PROC_STEPS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		AdmAppProcStepsId,
		/// <summary>
		/// ADM_APPLICANT_ID : 
		/// </summary>
		[EnumTextValue("ADM_APPLICANT_ID")]
		[ColumnEnum("ADM_APPLICANT_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmApplicantId,
		/// <summary>
		/// AS_CODE_DEGREE_CLASS_ID : 
		/// </summary>
		[EnumTextValue("AS_CODE_DEGREE_CLASS_ID")]
		[ColumnEnum("AS_CODE_DEGREE_CLASS_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		AsCodeDegreeClassId,
		/// <summary>
		/// TRANS_FLG : 
		/// </summary>
		[EnumTextValue("TRANS_FLG")]
		[ColumnEnum("TRANS_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TransFlg
	}//End enum

} // end namespace
