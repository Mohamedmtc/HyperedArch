
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file EdStudCourseGrdChng.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ED_STUD_COURSE_GRD_CHNG' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class EdStudCourseGrdChngBase : EntityBase, IEdStudCourseGrdChng, IEntityId<EdStudCourseGrdChngKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private EdStudCourseGrdChngEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private EdStudCourseGrdChngEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private EdStudCourseGrdChngEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<EdStudCourseGrdChng> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdStudCourseGrdChngEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdStudCourseGrdChngEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="EdStudCourseGrdChngBase"/> instance.
		///</summary>
		public EdStudCourseGrdChngBase()
		{
			this.entityData = new EdStudCourseGrdChngEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="EdStudCourseGrdChngBase"/> instance.
		///</summary>
		///<param name="_edStudCourseGrdChngId">طلب تعديل تقدير مقرر    -طلب تظلم في تقدير مقرر</param>
		///<param name="_seCodeUserTypeId">طالب-ستاف-رئيس قسم WF</param>
		///<param name="_edStudCourseRegId"></param>
		///<param name="_edCodeCourseStsOldId"></param>
		///<param name="_edCodeCourseStsNewId"></param>
		///<param name="_edCodeGradingOldId"></param>
		///<param name="_edCodeGradingNewId"></param>
		///<param name="_edCdeGrdChngRsnId"></param>
		///<param name="_reqDate"></param>
		///<param name="_decisionNo"></param>
		///<param name="_decisionDate"></param>
		///<param name="_approveFlg"></param>
		///<param name="_saStfMemApprovedById"></param>
		///<param name="_isLast"></param>
		///<param name="_notes"></param>
		///<param name="_lastDate"></param>
		///<param name="_seUserId"></param>
		///<param name="_seFormId"></param>
		///<param name="_feeStudFeeItemId">بنود المصروفات على  طالب</param>
		///<param name="_commFlg">رأي اللجنة اما "تعدل – لا تعدل"</param>
		///<param name="_staffFlg">الاستاذ على علم بالطلب نعم او لا</param>
		public EdStudCourseGrdChngBase(System.Decimal _edStudCourseGrdChngId, System.Decimal? _seCodeUserTypeId, 
			System.Decimal _edStudCourseRegId, System.Decimal _edCodeCourseStsOldId, System.Decimal? _edCodeCourseStsNewId, 
			System.Decimal? _edCodeGradingOldId, System.Decimal? _edCodeGradingNewId, 
			System.Decimal? _edCdeGrdChngRsnId, System.DateTime? _reqDate, System.String _decisionNo, 
			System.DateTime? _decisionDate, System.Decimal? _approveFlg, System.Decimal? _saStfMemApprovedById, 
			System.Decimal _isLast, System.String _notes, System.DateTime? _lastDate, 
			System.Decimal? _seUserId, System.Decimal? _seFormId, System.Decimal? _feeStudFeeItemId, 
			System.Int32? _commFlg, System.Int32? _staffFlg)
		{
			this.entityData = new EdStudCourseGrdChngEntityData();
			this.backupData = null;

			this.EdStudCourseGrdChngId = _edStudCourseGrdChngId;
			this.SeCodeUserTypeId = _seCodeUserTypeId;
			this.EdStudCourseRegId = _edStudCourseRegId;
			this.EdCodeCourseStsOldId = _edCodeCourseStsOldId;
			this.EdCodeCourseStsNewId = _edCodeCourseStsNewId;
			this.EdCodeGradingOldId = _edCodeGradingOldId;
			this.EdCodeGradingNewId = _edCodeGradingNewId;
			this.EdCdeGrdChngRsnId = _edCdeGrdChngRsnId;
			this.ReqDate = _reqDate;
			this.DecisionNo = _decisionNo;
			this.DecisionDate = _decisionDate;
			this.ApproveFlg = _approveFlg;
			this.SaStfMemApprovedById = _saStfMemApprovedById;
			this.IsLast = _isLast;
			this.Notes = _notes;
			this.LastDate = _lastDate;
			this.SeUserId = _seUserId;
			this.SeFormId = _seFormId;
			this.FeeStudFeeItemId = _feeStudFeeItemId;
			this.CommFlg = _commFlg;
			this.StaffFlg = _staffFlg;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="EdStudCourseGrdChng"/> instance.
		///</summary>
		///<param name="_edStudCourseGrdChngId">طلب تعديل تقدير مقرر    -طلب تظلم في تقدير مقرر</param>
		///<param name="_seCodeUserTypeId">طالب-ستاف-رئيس قسم WF</param>
		///<param name="_edStudCourseRegId"></param>
		///<param name="_edCodeCourseStsOldId"></param>
		///<param name="_edCodeCourseStsNewId"></param>
		///<param name="_edCodeGradingOldId"></param>
		///<param name="_edCodeGradingNewId"></param>
		///<param name="_edCdeGrdChngRsnId"></param>
		///<param name="_reqDate"></param>
		///<param name="_decisionNo"></param>
		///<param name="_decisionDate"></param>
		///<param name="_approveFlg"></param>
		///<param name="_saStfMemApprovedById"></param>
		///<param name="_isLast"></param>
		///<param name="_notes"></param>
		///<param name="_lastDate"></param>
		///<param name="_seUserId"></param>
		///<param name="_seFormId"></param>
		///<param name="_feeStudFeeItemId">بنود المصروفات على  طالب</param>
		///<param name="_commFlg">رأي اللجنة اما "تعدل – لا تعدل"</param>
		///<param name="_staffFlg">الاستاذ على علم بالطلب نعم او لا</param>
		public static EdStudCourseGrdChng CreateEdStudCourseGrdChng(System.Decimal _edStudCourseGrdChngId, System.Decimal? _seCodeUserTypeId, 
			System.Decimal _edStudCourseRegId, System.Decimal _edCodeCourseStsOldId, System.Decimal? _edCodeCourseStsNewId, 
			System.Decimal? _edCodeGradingOldId, System.Decimal? _edCodeGradingNewId, 
			System.Decimal? _edCdeGrdChngRsnId, System.DateTime? _reqDate, System.String _decisionNo, 
			System.DateTime? _decisionDate, System.Decimal? _approveFlg, System.Decimal? _saStfMemApprovedById, 
			System.Decimal _isLast, System.String _notes, System.DateTime? _lastDate, 
			System.Decimal? _seUserId, System.Decimal? _seFormId, System.Decimal? _feeStudFeeItemId, 
			System.Int32? _commFlg, System.Int32? _staffFlg)
		{
			EdStudCourseGrdChng newEdStudCourseGrdChng = new EdStudCourseGrdChng();
			newEdStudCourseGrdChng.EdStudCourseGrdChngId = _edStudCourseGrdChngId;
			newEdStudCourseGrdChng.SeCodeUserTypeId = _seCodeUserTypeId;
			newEdStudCourseGrdChng.EdStudCourseRegId = _edStudCourseRegId;
			newEdStudCourseGrdChng.EdCodeCourseStsOldId = _edCodeCourseStsOldId;
			newEdStudCourseGrdChng.EdCodeCourseStsNewId = _edCodeCourseStsNewId;
			newEdStudCourseGrdChng.EdCodeGradingOldId = _edCodeGradingOldId;
			newEdStudCourseGrdChng.EdCodeGradingNewId = _edCodeGradingNewId;
			newEdStudCourseGrdChng.EdCdeGrdChngRsnId = _edCdeGrdChngRsnId;
			newEdStudCourseGrdChng.ReqDate = _reqDate;
			newEdStudCourseGrdChng.DecisionNo = _decisionNo;
			newEdStudCourseGrdChng.DecisionDate = _decisionDate;
			newEdStudCourseGrdChng.ApproveFlg = _approveFlg;
			newEdStudCourseGrdChng.SaStfMemApprovedById = _saStfMemApprovedById;
			newEdStudCourseGrdChng.IsLast = _isLast;
			newEdStudCourseGrdChng.Notes = _notes;
			newEdStudCourseGrdChng.LastDate = _lastDate;
			newEdStudCourseGrdChng.SeUserId = _seUserId;
			newEdStudCourseGrdChng.SeFormId = _seFormId;
			newEdStudCourseGrdChng.FeeStudFeeItemId = _feeStudFeeItemId;
			newEdStudCourseGrdChng.CommFlg = _commFlg;
			newEdStudCourseGrdChng.StaffFlg = _staffFlg;
			return newEdStudCourseGrdChng;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the EdStudCourseGrdChngId property. 
		///		طلب تعديل تقدير مقرر    -طلب تظلم في تقدير مقرر
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"طلب تعديل تقدير مقرر    -طلب تظلم في تقدير مقرر"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal EdStudCourseGrdChngId
		{
			get
			{
				return this.entityData.EdStudCourseGrdChngId; 
			}
			
			set
			{
				if (this.entityData.EdStudCourseGrdChngId == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.EdStudCourseGrdChngId, this.entityData.EdStudCourseGrdChngId);
				this.entityData.EdStudCourseGrdChngId = value;
				this.EntityId.EdStudCourseGrdChngId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.EdStudCourseGrdChngId, this.entityData.EdStudCourseGrdChngId);
				OnPropertyChanged("EdStudCourseGrdChngId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ED_STUD_COURSE_GRD_CHNG_ID property.
		///		طلب تعديل تقدير مقرر    -طلب تظلم في تقدير مقرر
		/// </summary>
		/// <remarks>This is the original value of the ED_STUD_COURSE_GRD_CHNG_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalEdStudCourseGrdChngId
		{
			get { return this.entityData.OriginalEdStudCourseGrdChngId; }
			set { this.entityData.OriginalEdStudCourseGrdChngId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the SeCodeUserTypeId property. 
		///		طالب-ستاف-رئيس قسم WF
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeCodeUserTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"طالب-ستاف-رئيس قسم WF"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeCodeUserTypeId
		{
			get
			{
				return this.entityData.SeCodeUserTypeId; 
			}
			
			set
			{
				if (this.entityData.SeCodeUserTypeId == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.SeCodeUserTypeId, this.entityData.SeCodeUserTypeId);
				this.entityData.SeCodeUserTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.SeCodeUserTypeId, this.entityData.SeCodeUserTypeId);
				OnPropertyChanged("SeCodeUserTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudCourseRegId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EdStudCourseRegId
		{
			get
			{
				return this.entityData.EdStudCourseRegId; 
			}
			
			set
			{
				if (this.entityData.EdStudCourseRegId == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.EdStudCourseRegId, this.entityData.EdStudCourseRegId);
				this.entityData.EdStudCourseRegId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.EdStudCourseRegId, this.entityData.EdStudCourseRegId);
				OnPropertyChanged("EdStudCourseRegId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeCourseStsOldId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EdCodeCourseStsOldId
		{
			get
			{
				return this.entityData.EdCodeCourseStsOldId; 
			}
			
			set
			{
				if (this.entityData.EdCodeCourseStsOldId == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.EdCodeCourseStsOldId, this.entityData.EdCodeCourseStsOldId);
				this.entityData.EdCodeCourseStsOldId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.EdCodeCourseStsOldId, this.entityData.EdCodeCourseStsOldId);
				OnPropertyChanged("EdCodeCourseStsOldId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeCourseStsNewId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeCourseStsNewIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCodeCourseStsNewId
		{
			get
			{
				return this.entityData.EdCodeCourseStsNewId; 
			}
			
			set
			{
				if (this.entityData.EdCodeCourseStsNewId == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.EdCodeCourseStsNewId, this.entityData.EdCodeCourseStsNewId);
				this.entityData.EdCodeCourseStsNewId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.EdCodeCourseStsNewId, this.entityData.EdCodeCourseStsNewId);
				OnPropertyChanged("EdCodeCourseStsNewId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeGradingOldId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeGradingOldIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCodeGradingOldId
		{
			get
			{
				return this.entityData.EdCodeGradingOldId; 
			}
			
			set
			{
				if (this.entityData.EdCodeGradingOldId == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.EdCodeGradingOldId, this.entityData.EdCodeGradingOldId);
				this.entityData.EdCodeGradingOldId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.EdCodeGradingOldId, this.entityData.EdCodeGradingOldId);
				OnPropertyChanged("EdCodeGradingOldId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeGradingNewId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCodeGradingNewIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCodeGradingNewId
		{
			get
			{
				return this.entityData.EdCodeGradingNewId; 
			}
			
			set
			{
				if (this.entityData.EdCodeGradingNewId == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.EdCodeGradingNewId, this.entityData.EdCodeGradingNewId);
				this.entityData.EdCodeGradingNewId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.EdCodeGradingNewId, this.entityData.EdCodeGradingNewId);
				OnPropertyChanged("EdCodeGradingNewId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCdeGrdChngRsnId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCdeGrdChngRsnIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCdeGrdChngRsnId
		{
			get
			{
				return this.entityData.EdCdeGrdChngRsnId; 
			}
			
			set
			{
				if (this.entityData.EdCdeGrdChngRsnId == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.EdCdeGrdChngRsnId, this.entityData.EdCdeGrdChngRsnId);
				this.entityData.EdCdeGrdChngRsnId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.EdCdeGrdChngRsnId, this.entityData.EdCdeGrdChngRsnId);
				OnPropertyChanged("EdCdeGrdChngRsnId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ReqDate property. 
		///		
		/// </summary>
		/// <value>This type is date.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsReqDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? ReqDate
		{
			get
			{
				return this.entityData.ReqDate; 
			}
			
			set
			{
				if (this.entityData.ReqDate == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.ReqDate, this.entityData.ReqDate);
				this.entityData.ReqDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.ReqDate, this.entityData.ReqDate);
				OnPropertyChanged("ReqDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DecisionNo property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String DecisionNo
		{
			get
			{
				return this.entityData.DecisionNo; 
			}
			
			set
			{
				if (this.entityData.DecisionNo == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.DecisionNo, this.entityData.DecisionNo);
				this.entityData.DecisionNo = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.DecisionNo, this.entityData.DecisionNo);
				OnPropertyChanged("DecisionNo");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DecisionDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsDecisionDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? DecisionDate
		{
			get
			{
				return this.entityData.DecisionDate; 
			}
			
			set
			{
				if (this.entityData.DecisionDate == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.DecisionDate, this.entityData.DecisionDate);
				this.entityData.DecisionDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.DecisionDate, this.entityData.DecisionDate);
				OnPropertyChanged("DecisionDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ApproveFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsApproveFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ApproveFlg
		{
			get
			{
				return this.entityData.ApproveFlg; 
			}
			
			set
			{
				if (this.entityData.ApproveFlg == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.ApproveFlg, this.entityData.ApproveFlg);
				this.entityData.ApproveFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.ApproveFlg, this.entityData.ApproveFlg);
				OnPropertyChanged("ApproveFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SaStfMemApprovedById property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSaStfMemApprovedByIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SaStfMemApprovedById
		{
			get
			{
				return this.entityData.SaStfMemApprovedById; 
			}
			
			set
			{
				if (this.entityData.SaStfMemApprovedById == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.SaStfMemApprovedById, this.entityData.SaStfMemApprovedById);
				this.entityData.SaStfMemApprovedById = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.SaStfMemApprovedById, this.entityData.SaStfMemApprovedById);
				OnPropertyChanged("SaStfMemApprovedById");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IsLast property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal IsLast
		{
			get
			{
				return this.entityData.IsLast; 
			}
			
			set
			{
				if (this.entityData.IsLast == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.IsLast, this.entityData.IsLast);
				this.entityData.IsLast = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.IsLast, this.entityData.IsLast);
				OnPropertyChanged("IsLast");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Notes property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 1000)]
		public virtual System.String Notes
		{
			get
			{
				return this.entityData.Notes; 
			}
			
			set
			{
				if (this.entityData.Notes == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.Notes, this.entityData.Notes);
				this.entityData.Notes = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.Notes, this.entityData.Notes);
				OnPropertyChanged("Notes");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeFormId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeFormIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeFormId
		{
			get
			{
				return this.entityData.SeFormId; 
			}
			
			set
			{
				if (this.entityData.SeFormId == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.SeFormId, this.entityData.SeFormId);
				this.entityData.SeFormId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.SeFormId, this.entityData.SeFormId);
				OnPropertyChanged("SeFormId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeStudFeeItemId property. 
		///		بنود المصروفات على  طالب
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFeeStudFeeItemIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"بنود المصروفات على  طالب"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FeeStudFeeItemId
		{
			get
			{
				return this.entityData.FeeStudFeeItemId; 
			}
			
			set
			{
				if (this.entityData.FeeStudFeeItemId == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.FeeStudFeeItemId, this.entityData.FeeStudFeeItemId);
				this.entityData.FeeStudFeeItemId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.FeeStudFeeItemId, this.entityData.FeeStudFeeItemId);
				OnPropertyChanged("FeeStudFeeItemId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CommFlg property. 
		///		رأي اللجنة اما "تعدل – لا تعدل"
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsCommFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"رأي اللجنة اما 'تعدل – لا تعدل'"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? CommFlg
		{
			get
			{
				return this.entityData.CommFlg; 
			}
			
			set
			{
				if (this.entityData.CommFlg == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.CommFlg, this.entityData.CommFlg);
				this.entityData.CommFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.CommFlg, this.entityData.CommFlg);
				OnPropertyChanged("CommFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StaffFlg property. 
		///		الاستاذ على علم بالطلب نعم او لا
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsStaffFlgNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"الاستاذ على علم بالطلب نعم او لا"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? StaffFlg
		{
			get
			{
				return this.entityData.StaffFlg; 
			}
			
			set
			{
				if (this.entityData.StaffFlg == value)
					return;
					
				OnColumnChanging(EdStudCourseGrdChngColumn.StaffFlg, this.entityData.StaffFlg);
				this.entityData.StaffFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudCourseGrdChngColumn.StaffFlg, this.entityData.StaffFlg);
				OnPropertyChanged("StaffFlg");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="EdCdeGrdChngRsn"/>.
		/// </summary>
		/// <value>The source EdCdeGrdChngRsn for EdCdeGrdChngRsnId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCdeGrdChngRsn EdCdeGrdChngRsnIdSource
      	{
            get { return entityData.EdCdeGrdChngRsnIdSource; }
            set { entityData.EdCdeGrdChngRsnIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeCourseStatus"/>.
		/// </summary>
		/// <value>The source EdCodeCourseStatus for EdCodeCourseStsOldId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeCourseStatus EdCodeCourseStsOldIdSource
      	{
            get { return entityData.EdCodeCourseStsOldIdSource; }
            set { entityData.EdCodeCourseStsOldIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeCourseStatus"/>.
		/// </summary>
		/// <value>The source EdCodeCourseStatus for EdCodeCourseStsNewId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeCourseStatus EdCodeCourseStsNewIdSource
      	{
            get { return entityData.EdCodeCourseStsNewIdSource; }
            set { entityData.EdCodeCourseStsNewIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeGrading"/>.
		/// </summary>
		/// <value>The source EdCodeGrading for EdCodeGradingOldId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeGrading EdCodeGradingOldIdSource
      	{
            get { return entityData.EdCodeGradingOldIdSource; }
            set { entityData.EdCodeGradingOldIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeGrading"/>.
		/// </summary>
		/// <value>The source EdCodeGrading for EdCodeGradingNewId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeGrading EdCodeGradingNewIdSource
      	{
            get { return entityData.EdCodeGradingNewIdSource; }
            set { entityData.EdCodeGradingNewIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdStudCourseReg"/>.
		/// </summary>
		/// <value>The source EdStudCourseReg for EdStudCourseRegId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStudCourseReg EdStudCourseRegIdSource
      	{
            get { return entityData.EdStudCourseRegIdSource; }
            set { entityData.EdStudCourseRegIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="FeeStudFeeItem"/>.
		/// </summary>
		/// <value>The source FeeStudFeeItem for FeeStudFeeItemId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeStudFeeItem FeeStudFeeItemIdSource
      	{
            get { return entityData.FeeStudFeeItemIdSource; }
            set { entityData.FeeStudFeeItemIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SaStfMember"/>.
		/// </summary>
		/// <value>The source SaStfMember for SaStfMemApprovedById.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SaStfMember SaStfMemApprovedByIdSource
      	{
            get { return entityData.SaStfMemApprovedByIdSource; }
            set { entityData.SaStfMemApprovedByIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SeCodeUserType"/>.
		/// </summary>
		/// <value>The source SeCodeUserType for SeCodeUserTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SeCodeUserType SeCodeUserTypeIdSource
      	{
            get { return entityData.SeCodeUserTypeIdSource; }
            set { entityData.SeCodeUserTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SeForm"/>.
		/// </summary>
		/// <value>The source SeForm for SeFormId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SeForm SeFormIdSource
      	{
            get { return entityData.SeFormIdSource; }
            set { entityData.SeFormIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="SeUser"/>.
		/// </summary>
		/// <value>The source SeUser for SeUserId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual SeUser SeUserIdSource
      	{
            get { return entityData.SeUserIdSource; }
            set { entityData.SeUserIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of GsAttchdDoc objects
		///	which are related to this object through the relation FK_GS_ATTCHD_DOC_ED_STUD_COURSE_GRD_CHNG
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GsAttchdDoc> GsAttchdDocCollection
		{
			get { return entityData.GsAttchdDocCollection; }
			set { entityData.GsAttchdDocCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of WfCrsRsltApprove objects
		///	which are related to this object through the relation FK_WF_CRS_RSLT_APPROVE_ED_STUD_COURSE_GRD_CHNG
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<WfCrsRsltApprove> WfCrsRsltApproveCollection
		{
			get { return entityData.WfCrsRsltApproveCollection; }
			set { entityData.WfCrsRsltApproveCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DecisionNo", "Decision No", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Notes", "Notes", 1000));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ED_STUD_COURSE_GRD_CHNG"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ED_STUD_COURSE_GRD_CHNG_ID", "SE_CODE_USER_TYPE_ID", "ED_STUD_COURSE_REG_ID", "ED_CODE_COURSE_STS_OLD_ID", "ED_CODE_COURSE_STS_NEW_ID", "ED_CODE_GRADING_OLD_ID", "ED_CODE_GRADING_NEW_ID", "ED_CDE_GRD_CHNG_RSN_ID", "REQ_DATE", "DECISION_NO", "DECISION_DATE", "APPROVE_FLG", "SA_STF_MEM_APPROVED_BY_ID", "IS_LAST", "NOTES", "LAST_DATE", "SE_USER_ID", "SE_FORM_ID", "FEE_STUD_FEE_ITEM_ID", "COMM_FLG", "STAFF_FLG"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as EdStudCourseGrdChngEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (EdStudCourseGrdChng) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<EdStudCourseGrdChng>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as EdStudCourseGrdChng);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed EdStudCourseGrdChng Entity 
		///</summary>
		protected virtual EdStudCourseGrdChng Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			EdStudCourseGrdChng copy = new EdStudCourseGrdChng();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.EdStudCourseGrdChngId = this.EdStudCourseGrdChngId;
					copy.OriginalEdStudCourseGrdChngId = this.OriginalEdStudCourseGrdChngId;
				copy.SeCodeUserTypeId = this.SeCodeUserTypeId;
				copy.EdStudCourseRegId = this.EdStudCourseRegId;
				copy.EdCodeCourseStsOldId = this.EdCodeCourseStsOldId;
				copy.EdCodeCourseStsNewId = this.EdCodeCourseStsNewId;
				copy.EdCodeGradingOldId = this.EdCodeGradingOldId;
				copy.EdCodeGradingNewId = this.EdCodeGradingNewId;
				copy.EdCdeGrdChngRsnId = this.EdCdeGrdChngRsnId;
				copy.ReqDate = this.ReqDate;
				copy.DecisionNo = this.DecisionNo;
				copy.DecisionDate = this.DecisionDate;
				copy.ApproveFlg = this.ApproveFlg;
				copy.SaStfMemApprovedById = this.SaStfMemApprovedById;
				copy.IsLast = this.IsLast;
				copy.Notes = this.Notes;
				copy.LastDate = this.LastDate;
				copy.SeUserId = this.SeUserId;
				copy.SeFormId = this.SeFormId;
				copy.FeeStudFeeItemId = this.FeeStudFeeItemId;
				copy.CommFlg = this.CommFlg;
				copy.StaffFlg = this.StaffFlg;
			
			if (this.EdCdeGrdChngRsnIdSource != null && existingCopies.Contains(this.EdCdeGrdChngRsnIdSource))
				copy.EdCdeGrdChngRsnIdSource = existingCopies[this.EdCdeGrdChngRsnIdSource] as EdCdeGrdChngRsn;
			else
				copy.EdCdeGrdChngRsnIdSource = MakeCopyOf(this.EdCdeGrdChngRsnIdSource, existingCopies) as EdCdeGrdChngRsn;
			if (this.EdCodeCourseStsOldIdSource != null && existingCopies.Contains(this.EdCodeCourseStsOldIdSource))
				copy.EdCodeCourseStsOldIdSource = existingCopies[this.EdCodeCourseStsOldIdSource] as EdCodeCourseStatus;
			else
				copy.EdCodeCourseStsOldIdSource = MakeCopyOf(this.EdCodeCourseStsOldIdSource, existingCopies) as EdCodeCourseStatus;
			if (this.EdCodeCourseStsNewIdSource != null && existingCopies.Contains(this.EdCodeCourseStsNewIdSource))
				copy.EdCodeCourseStsNewIdSource = existingCopies[this.EdCodeCourseStsNewIdSource] as EdCodeCourseStatus;
			else
				copy.EdCodeCourseStsNewIdSource = MakeCopyOf(this.EdCodeCourseStsNewIdSource, existingCopies) as EdCodeCourseStatus;
			if (this.EdCodeGradingOldIdSource != null && existingCopies.Contains(this.EdCodeGradingOldIdSource))
				copy.EdCodeGradingOldIdSource = existingCopies[this.EdCodeGradingOldIdSource] as EdCodeGrading;
			else
				copy.EdCodeGradingOldIdSource = MakeCopyOf(this.EdCodeGradingOldIdSource, existingCopies) as EdCodeGrading;
			if (this.EdCodeGradingNewIdSource != null && existingCopies.Contains(this.EdCodeGradingNewIdSource))
				copy.EdCodeGradingNewIdSource = existingCopies[this.EdCodeGradingNewIdSource] as EdCodeGrading;
			else
				copy.EdCodeGradingNewIdSource = MakeCopyOf(this.EdCodeGradingNewIdSource, existingCopies) as EdCodeGrading;
			if (this.EdStudCourseRegIdSource != null && existingCopies.Contains(this.EdStudCourseRegIdSource))
				copy.EdStudCourseRegIdSource = existingCopies[this.EdStudCourseRegIdSource] as EdStudCourseReg;
			else
				copy.EdStudCourseRegIdSource = MakeCopyOf(this.EdStudCourseRegIdSource, existingCopies) as EdStudCourseReg;
			if (this.FeeStudFeeItemIdSource != null && existingCopies.Contains(this.FeeStudFeeItemIdSource))
				copy.FeeStudFeeItemIdSource = existingCopies[this.FeeStudFeeItemIdSource] as FeeStudFeeItem;
			else
				copy.FeeStudFeeItemIdSource = MakeCopyOf(this.FeeStudFeeItemIdSource, existingCopies) as FeeStudFeeItem;
			if (this.SaStfMemApprovedByIdSource != null && existingCopies.Contains(this.SaStfMemApprovedByIdSource))
				copy.SaStfMemApprovedByIdSource = existingCopies[this.SaStfMemApprovedByIdSource] as SaStfMember;
			else
				copy.SaStfMemApprovedByIdSource = MakeCopyOf(this.SaStfMemApprovedByIdSource, existingCopies) as SaStfMember;
			if (this.SeCodeUserTypeIdSource != null && existingCopies.Contains(this.SeCodeUserTypeIdSource))
				copy.SeCodeUserTypeIdSource = existingCopies[this.SeCodeUserTypeIdSource] as SeCodeUserType;
			else
				copy.SeCodeUserTypeIdSource = MakeCopyOf(this.SeCodeUserTypeIdSource, existingCopies) as SeCodeUserType;
			if (this.SeFormIdSource != null && existingCopies.Contains(this.SeFormIdSource))
				copy.SeFormIdSource = existingCopies[this.SeFormIdSource] as SeForm;
			else
				copy.SeFormIdSource = MakeCopyOf(this.SeFormIdSource, existingCopies) as SeForm;
			if (this.SeUserIdSource != null && existingCopies.Contains(this.SeUserIdSource))
				copy.SeUserIdSource = existingCopies[this.SeUserIdSource] as SeUser;
			else
				copy.SeUserIdSource = MakeCopyOf(this.SeUserIdSource, existingCopies) as SeUser;
		
			//deep copy nested objects
			copy.GsAttchdDocCollection = (TList<GsAttchdDoc>) MakeCopyOf(this.GsAttchdDocCollection, existingCopies); 
			copy.WfCrsRsltApproveCollection = (TList<WfCrsRsltApprove>) MakeCopyOf(this.WfCrsRsltApproveCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed EdStudCourseGrdChng Entity 
		///</summary>
		public virtual EdStudCourseGrdChng Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed EdStudCourseGrdChng Entity which is a deep copy of the current entity.
		///</summary>
		public virtual EdStudCourseGrdChng DeepCopy()
		{
			return EntityHelper.Clone<EdStudCourseGrdChng>(this as EdStudCourseGrdChng);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as EdStudCourseGrdChngEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new EdStudCourseGrdChngEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as EdStudCourseGrdChngEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(EdStudCourseGrdChngColumn column)
		{
			switch(column)
			{
					case EdStudCourseGrdChngColumn.EdStudCourseGrdChngId:
					return entityData.EdStudCourseGrdChngId != _originalData.EdStudCourseGrdChngId;
					case EdStudCourseGrdChngColumn.SeCodeUserTypeId:
					return entityData.SeCodeUserTypeId != _originalData.SeCodeUserTypeId;
					case EdStudCourseGrdChngColumn.EdStudCourseRegId:
					return entityData.EdStudCourseRegId != _originalData.EdStudCourseRegId;
					case EdStudCourseGrdChngColumn.EdCodeCourseStsOldId:
					return entityData.EdCodeCourseStsOldId != _originalData.EdCodeCourseStsOldId;
					case EdStudCourseGrdChngColumn.EdCodeCourseStsNewId:
					return entityData.EdCodeCourseStsNewId != _originalData.EdCodeCourseStsNewId;
					case EdStudCourseGrdChngColumn.EdCodeGradingOldId:
					return entityData.EdCodeGradingOldId != _originalData.EdCodeGradingOldId;
					case EdStudCourseGrdChngColumn.EdCodeGradingNewId:
					return entityData.EdCodeGradingNewId != _originalData.EdCodeGradingNewId;
					case EdStudCourseGrdChngColumn.EdCdeGrdChngRsnId:
					return entityData.EdCdeGrdChngRsnId != _originalData.EdCdeGrdChngRsnId;
					case EdStudCourseGrdChngColumn.ReqDate:
					return entityData.ReqDate != _originalData.ReqDate;
					case EdStudCourseGrdChngColumn.DecisionNo:
					return entityData.DecisionNo != _originalData.DecisionNo;
					case EdStudCourseGrdChngColumn.DecisionDate:
					return entityData.DecisionDate != _originalData.DecisionDate;
					case EdStudCourseGrdChngColumn.ApproveFlg:
					return entityData.ApproveFlg != _originalData.ApproveFlg;
					case EdStudCourseGrdChngColumn.SaStfMemApprovedById:
					return entityData.SaStfMemApprovedById != _originalData.SaStfMemApprovedById;
					case EdStudCourseGrdChngColumn.IsLast:
					return entityData.IsLast != _originalData.IsLast;
					case EdStudCourseGrdChngColumn.Notes:
					return entityData.Notes != _originalData.Notes;
					case EdStudCourseGrdChngColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
					case EdStudCourseGrdChngColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
					case EdStudCourseGrdChngColumn.SeFormId:
					return entityData.SeFormId != _originalData.SeFormId;
					case EdStudCourseGrdChngColumn.FeeStudFeeItemId:
					return entityData.FeeStudFeeItemId != _originalData.FeeStudFeeItemId;
					case EdStudCourseGrdChngColumn.CommFlg:
					return entityData.CommFlg != _originalData.CommFlg;
					case EdStudCourseGrdChngColumn.StaffFlg:
					return entityData.StaffFlg != _originalData.StaffFlg;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< EdStudCourseGrdChngColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.EdStudCourseGrdChngId != _originalData.EdStudCourseGrdChngId;
			result = result || entityData.SeCodeUserTypeId != _originalData.SeCodeUserTypeId;
			result = result || entityData.EdStudCourseRegId != _originalData.EdStudCourseRegId;
			result = result || entityData.EdCodeCourseStsOldId != _originalData.EdCodeCourseStsOldId;
			result = result || entityData.EdCodeCourseStsNewId != _originalData.EdCodeCourseStsNewId;
			result = result || entityData.EdCodeGradingOldId != _originalData.EdCodeGradingOldId;
			result = result || entityData.EdCodeGradingNewId != _originalData.EdCodeGradingNewId;
			result = result || entityData.EdCdeGrdChngRsnId != _originalData.EdCdeGrdChngRsnId;
			result = result || entityData.ReqDate != _originalData.ReqDate;
			result = result || entityData.DecisionNo != _originalData.DecisionNo;
			result = result || entityData.DecisionDate != _originalData.DecisionDate;
			result = result || entityData.ApproveFlg != _originalData.ApproveFlg;
			result = result || entityData.SaStfMemApprovedById != _originalData.SaStfMemApprovedById;
			result = result || entityData.IsLast != _originalData.IsLast;
			result = result || entityData.Notes != _originalData.Notes;
			result = result || entityData.LastDate != _originalData.LastDate;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			result = result || entityData.SeFormId != _originalData.SeFormId;
			result = result || entityData.FeeStudFeeItemId != _originalData.FeeStudFeeItemId;
			result = result || entityData.CommFlg != _originalData.CommFlg;
			result = result || entityData.StaffFlg != _originalData.StaffFlg;
			return result;
		}	
		
		///<summary>
		///  Returns a EdStudCourseGrdChng Entity with the original data.
		///</summary>
		public EdStudCourseGrdChng GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateEdStudCourseGrdChng(
				_originalData.EdStudCourseGrdChngId,
				_originalData.SeCodeUserTypeId,
				_originalData.EdStudCourseRegId,
				_originalData.EdCodeCourseStsOldId,
				_originalData.EdCodeCourseStsNewId,
				_originalData.EdCodeGradingOldId,
				_originalData.EdCodeGradingNewId,
				_originalData.EdCdeGrdChngRsnId,
				_originalData.ReqDate,
				_originalData.DecisionNo,
				_originalData.DecisionDate,
				_originalData.ApproveFlg,
				_originalData.SaStfMemApprovedById,
				_originalData.IsLast,
				_originalData.Notes,
				_originalData.LastDate,
				_originalData.SeUserId,
				_originalData.SeFormId,
				_originalData.FeeStudFeeItemId,
				_originalData.CommFlg,
				_originalData.StaffFlg
				);
				
			return (EdStudCourseGrdChng)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="EdStudCourseGrdChngBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is EdStudCourseGrdChngBase)
				return ValueEquals(this, (EdStudCourseGrdChngBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="EdStudCourseGrdChngBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.EdStudCourseGrdChngId.GetHashCode() ^ 
					((this.SeCodeUserTypeId == null) ? string.Empty : this.SeCodeUserTypeId.ToString()).GetHashCode() ^ 
					this.EdStudCourseRegId.GetHashCode() ^ 
					this.EdCodeCourseStsOldId.GetHashCode() ^ 
					((this.EdCodeCourseStsNewId == null) ? string.Empty : this.EdCodeCourseStsNewId.ToString()).GetHashCode() ^ 
					((this.EdCodeGradingOldId == null) ? string.Empty : this.EdCodeGradingOldId.ToString()).GetHashCode() ^ 
					((this.EdCodeGradingNewId == null) ? string.Empty : this.EdCodeGradingNewId.ToString()).GetHashCode() ^ 
					((this.EdCdeGrdChngRsnId == null) ? string.Empty : this.EdCdeGrdChngRsnId.ToString()).GetHashCode() ^ 
					((this.ReqDate == null) ? string.Empty : this.ReqDate.ToString()).GetHashCode() ^ 
					((this.DecisionNo == null) ? string.Empty : this.DecisionNo.ToString()).GetHashCode() ^ 
					((this.DecisionDate == null) ? string.Empty : this.DecisionDate.ToString()).GetHashCode() ^ 
					((this.ApproveFlg == null) ? string.Empty : this.ApproveFlg.ToString()).GetHashCode() ^ 
					((this.SaStfMemApprovedById == null) ? string.Empty : this.SaStfMemApprovedById.ToString()).GetHashCode() ^ 
					this.IsLast.GetHashCode() ^ 
					((this.Notes == null) ? string.Empty : this.Notes.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode() ^ 
					((this.SeFormId == null) ? string.Empty : this.SeFormId.ToString()).GetHashCode() ^ 
					((this.FeeStudFeeItemId == null) ? string.Empty : this.FeeStudFeeItemId.ToString()).GetHashCode() ^ 
					((this.CommFlg == null) ? string.Empty : this.CommFlg.ToString()).GetHashCode() ^ 
					((this.StaffFlg == null) ? string.Empty : this.StaffFlg.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="EdStudCourseGrdChngBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(EdStudCourseGrdChngBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="EdStudCourseGrdChngBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="EdStudCourseGrdChngBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="EdStudCourseGrdChngBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(EdStudCourseGrdChngBase Object1, EdStudCourseGrdChngBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.EdStudCourseGrdChngId != Object2.EdStudCourseGrdChngId)
				equal = false;
			if ( Object1.SeCodeUserTypeId != null && Object2.SeCodeUserTypeId != null )
			{
				if (Object1.SeCodeUserTypeId != Object2.SeCodeUserTypeId)
					equal = false;
			}
			else if (Object1.SeCodeUserTypeId == null ^ Object2.SeCodeUserTypeId == null )
			{
				equal = false;
			}
			if (Object1.EdStudCourseRegId != Object2.EdStudCourseRegId)
				equal = false;
			if (Object1.EdCodeCourseStsOldId != Object2.EdCodeCourseStsOldId)
				equal = false;
			if ( Object1.EdCodeCourseStsNewId != null && Object2.EdCodeCourseStsNewId != null )
			{
				if (Object1.EdCodeCourseStsNewId != Object2.EdCodeCourseStsNewId)
					equal = false;
			}
			else if (Object1.EdCodeCourseStsNewId == null ^ Object2.EdCodeCourseStsNewId == null )
			{
				equal = false;
			}
			if ( Object1.EdCodeGradingOldId != null && Object2.EdCodeGradingOldId != null )
			{
				if (Object1.EdCodeGradingOldId != Object2.EdCodeGradingOldId)
					equal = false;
			}
			else if (Object1.EdCodeGradingOldId == null ^ Object2.EdCodeGradingOldId == null )
			{
				equal = false;
			}
			if ( Object1.EdCodeGradingNewId != null && Object2.EdCodeGradingNewId != null )
			{
				if (Object1.EdCodeGradingNewId != Object2.EdCodeGradingNewId)
					equal = false;
			}
			else if (Object1.EdCodeGradingNewId == null ^ Object2.EdCodeGradingNewId == null )
			{
				equal = false;
			}
			if ( Object1.EdCdeGrdChngRsnId != null && Object2.EdCdeGrdChngRsnId != null )
			{
				if (Object1.EdCdeGrdChngRsnId != Object2.EdCdeGrdChngRsnId)
					equal = false;
			}
			else if (Object1.EdCdeGrdChngRsnId == null ^ Object2.EdCdeGrdChngRsnId == null )
			{
				equal = false;
			}
			if ( Object1.ReqDate != null && Object2.ReqDate != null )
			{
				if (Object1.ReqDate != Object2.ReqDate)
					equal = false;
			}
			else if (Object1.ReqDate == null ^ Object2.ReqDate == null )
			{
				equal = false;
			}
			if ( Object1.DecisionNo != null && Object2.DecisionNo != null )
			{
				if (Object1.DecisionNo != Object2.DecisionNo)
					equal = false;
			}
			else if (Object1.DecisionNo == null ^ Object2.DecisionNo == null )
			{
				equal = false;
			}
			if ( Object1.DecisionDate != null && Object2.DecisionDate != null )
			{
				if (Object1.DecisionDate != Object2.DecisionDate)
					equal = false;
			}
			else if (Object1.DecisionDate == null ^ Object2.DecisionDate == null )
			{
				equal = false;
			}
			if ( Object1.ApproveFlg != null && Object2.ApproveFlg != null )
			{
				if (Object1.ApproveFlg != Object2.ApproveFlg)
					equal = false;
			}
			else if (Object1.ApproveFlg == null ^ Object2.ApproveFlg == null )
			{
				equal = false;
			}
			if ( Object1.SaStfMemApprovedById != null && Object2.SaStfMemApprovedById != null )
			{
				if (Object1.SaStfMemApprovedById != Object2.SaStfMemApprovedById)
					equal = false;
			}
			else if (Object1.SaStfMemApprovedById == null ^ Object2.SaStfMemApprovedById == null )
			{
				equal = false;
			}
			if (Object1.IsLast != Object2.IsLast)
				equal = false;
			if ( Object1.Notes != null && Object2.Notes != null )
			{
				if (Object1.Notes != Object2.Notes)
					equal = false;
			}
			else if (Object1.Notes == null ^ Object2.Notes == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
			if ( Object1.SeFormId != null && Object2.SeFormId != null )
			{
				if (Object1.SeFormId != Object2.SeFormId)
					equal = false;
			}
			else if (Object1.SeFormId == null ^ Object2.SeFormId == null )
			{
				equal = false;
			}
			if ( Object1.FeeStudFeeItemId != null && Object2.FeeStudFeeItemId != null )
			{
				if (Object1.FeeStudFeeItemId != Object2.FeeStudFeeItemId)
					equal = false;
			}
			else if (Object1.FeeStudFeeItemId == null ^ Object2.FeeStudFeeItemId == null )
			{
				equal = false;
			}
			if ( Object1.CommFlg != null && Object2.CommFlg != null )
			{
				if (Object1.CommFlg != Object2.CommFlg)
					equal = false;
			}
			else if (Object1.CommFlg == null ^ Object2.CommFlg == null )
			{
				equal = false;
			}
			if ( Object1.StaffFlg != null && Object2.StaffFlg != null )
			{
				if (Object1.StaffFlg != Object2.StaffFlg)
					equal = false;
			}
			else if (Object1.StaffFlg == null ^ Object2.StaffFlg == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((EdStudCourseGrdChngBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static EdStudCourseGrdChngComparer GetComparer()
        {
            return new EdStudCourseGrdChngComparer();
        }
        */

        // Comparer delegates back to EdStudCourseGrdChng
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(EdStudCourseGrdChng rhs, EdStudCourseGrdChngColumn which)
        {
            switch (which)
            {
            	
            	
            	case EdStudCourseGrdChngColumn.EdStudCourseGrdChngId:
            		return this.EdStudCourseGrdChngId.CompareTo(rhs.EdStudCourseGrdChngId);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.SeCodeUserTypeId:
            		return this.SeCodeUserTypeId.Value.CompareTo(rhs.SeCodeUserTypeId.Value);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.EdStudCourseRegId:
            		return this.EdStudCourseRegId.CompareTo(rhs.EdStudCourseRegId);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.EdCodeCourseStsOldId:
            		return this.EdCodeCourseStsOldId.CompareTo(rhs.EdCodeCourseStsOldId);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.EdCodeCourseStsNewId:
            		return this.EdCodeCourseStsNewId.Value.CompareTo(rhs.EdCodeCourseStsNewId.Value);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.EdCodeGradingOldId:
            		return this.EdCodeGradingOldId.Value.CompareTo(rhs.EdCodeGradingOldId.Value);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.EdCodeGradingNewId:
            		return this.EdCodeGradingNewId.Value.CompareTo(rhs.EdCodeGradingNewId.Value);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.EdCdeGrdChngRsnId:
            		return this.EdCdeGrdChngRsnId.Value.CompareTo(rhs.EdCdeGrdChngRsnId.Value);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.ReqDate:
            		return this.ReqDate.Value.CompareTo(rhs.ReqDate.Value);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.DecisionNo:
            		return this.DecisionNo.CompareTo(rhs.DecisionNo);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.DecisionDate:
            		return this.DecisionDate.Value.CompareTo(rhs.DecisionDate.Value);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.ApproveFlg:
            		return this.ApproveFlg.Value.CompareTo(rhs.ApproveFlg.Value);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.SaStfMemApprovedById:
            		return this.SaStfMemApprovedById.Value.CompareTo(rhs.SaStfMemApprovedById.Value);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.IsLast:
            		return this.IsLast.CompareTo(rhs.IsLast);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.Notes:
            		return this.Notes.CompareTo(rhs.Notes);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.SeFormId:
            		return this.SeFormId.Value.CompareTo(rhs.SeFormId.Value);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.FeeStudFeeItemId:
            		return this.FeeStudFeeItemId.Value.CompareTo(rhs.FeeStudFeeItemId.Value);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.CommFlg:
            		return this.CommFlg.Value.CompareTo(rhs.CommFlg.Value);
            		
            		                 
            	
            	
            	case EdStudCourseGrdChngColumn.StaffFlg:
            		return this.StaffFlg.Value.CompareTo(rhs.StaffFlg.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<EdStudCourseGrdChngKey> Members
		
		// member variable for the EntityId property
		private EdStudCourseGrdChngKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual EdStudCourseGrdChngKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new EdStudCourseGrdChngKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("EdStudCourseGrdChng")
					.Append("|").Append( this.EdStudCourseGrdChngId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{22}{21}- EdStudCourseGrdChngId: {0}{21}- SeCodeUserTypeId: {1}{21}- EdStudCourseRegId: {2}{21}- EdCodeCourseStsOldId: {3}{21}- EdCodeCourseStsNewId: {4}{21}- EdCodeGradingOldId: {5}{21}- EdCodeGradingNewId: {6}{21}- EdCdeGrdChngRsnId: {7}{21}- ReqDate: {8}{21}- DecisionNo: {9}{21}- DecisionDate: {10}{21}- ApproveFlg: {11}{21}- SaStfMemApprovedById: {12}{21}- IsLast: {13}{21}- Notes: {14}{21}- LastDate: {15}{21}- SeUserId: {16}{21}- SeFormId: {17}{21}- FeeStudFeeItemId: {18}{21}- CommFlg: {19}{21}- StaffFlg: {20}{21}{23}", 
				this.EdStudCourseGrdChngId,
				(this.SeCodeUserTypeId == null) ? string.Empty : this.SeCodeUserTypeId.ToString(),
				this.EdStudCourseRegId,
				this.EdCodeCourseStsOldId,
				(this.EdCodeCourseStsNewId == null) ? string.Empty : this.EdCodeCourseStsNewId.ToString(),
				(this.EdCodeGradingOldId == null) ? string.Empty : this.EdCodeGradingOldId.ToString(),
				(this.EdCodeGradingNewId == null) ? string.Empty : this.EdCodeGradingNewId.ToString(),
				(this.EdCdeGrdChngRsnId == null) ? string.Empty : this.EdCdeGrdChngRsnId.ToString(),
				(this.ReqDate == null) ? string.Empty : this.ReqDate.ToString(),
				(this.DecisionNo == null) ? string.Empty : this.DecisionNo.ToString(),
				(this.DecisionDate == null) ? string.Empty : this.DecisionDate.ToString(),
				(this.ApproveFlg == null) ? string.Empty : this.ApproveFlg.ToString(),
				(this.SaStfMemApprovedById == null) ? string.Empty : this.SaStfMemApprovedById.ToString(),
				this.IsLast,
				(this.Notes == null) ? string.Empty : this.Notes.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				(this.SeFormId == null) ? string.Empty : this.SeFormId.ToString(),
				(this.FeeStudFeeItemId == null) ? string.Empty : this.FeeStudFeeItemId.ToString(),
				(this.CommFlg == null) ? string.Empty : this.CommFlg.ToString(),
				(this.StaffFlg == null) ? string.Empty : this.StaffFlg.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ED_STUD_COURSE_GRD_CHNG' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class EdStudCourseGrdChngEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ED_STUD_COURSE_GRD_CHNG_ID : طلب تعديل تقدير مقرر    -طلب تظلم في تقدير مقرر
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ED_STUD_COURSE_GRD_CHNG"</remarks>
		public System.Decimal EdStudCourseGrdChngId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalEdStudCourseGrdChngId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// SE_CODE_USER_TYPE_ID : طالب-ستاف-رئيس قسم WF
		/// </summary>
		public System.Decimal?		  SeCodeUserTypeId = null;
		
		/// <summary>
		/// ED_STUD_COURSE_REG_ID : 
		/// </summary>
		public System.Decimal		  EdStudCourseRegId = 0.0m;
		
		/// <summary>
		/// ED_CODE_COURSE_STS_OLD_ID : 
		/// </summary>
		public System.Decimal		  EdCodeCourseStsOldId = 0.0m;
		
		/// <summary>
		/// ED_CODE_COURSE_STS_NEW_ID : 
		/// </summary>
		public System.Decimal?		  EdCodeCourseStsNewId = null;
		
		/// <summary>
		/// ED_CODE_GRADING_OLD_ID : 
		/// </summary>
		public System.Decimal?		  EdCodeGradingOldId = null;
		
		/// <summary>
		/// ED_CODE_GRADING_NEW_ID : 
		/// </summary>
		public System.Decimal?		  EdCodeGradingNewId = null;
		
		/// <summary>
		/// ED_CDE_GRD_CHNG_RSN_ID : 
		/// </summary>
		public System.Decimal?		  EdCdeGrdChngRsnId = null;
		
		/// <summary>
		/// REQ_DATE : 
		/// </summary>
		public System.DateTime?		  ReqDate = null;
		
		/// <summary>
		/// DECISION_NO : 
		/// </summary>
		public System.String		  DecisionNo = null;
		
		/// <summary>
		/// DECISION_DATE : 
		/// </summary>
		public System.DateTime?		  DecisionDate = null;
		
		/// <summary>
		/// APPROVE_FLG : 
		/// </summary>
		public System.Decimal?		  ApproveFlg = null;
		
		/// <summary>
		/// SA_STF_MEM_APPROVED_BY_ID : 
		/// </summary>
		public System.Decimal?		  SaStfMemApprovedById = null;
		
		/// <summary>
		/// IS_LAST : 
		/// </summary>
		public System.Decimal		  IsLast = 0.0m;
		
		/// <summary>
		/// NOTES : 
		/// </summary>
		public System.String		  Notes = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		
		/// <summary>
		/// SE_FORM_ID : 
		/// </summary>
		public System.Decimal?		  SeFormId = null;
		
		/// <summary>
		/// FEE_STUD_FEE_ITEM_ID : بنود المصروفات على  طالب
		/// </summary>
		public System.Decimal?		  FeeStudFeeItemId = null;
		
		/// <summary>
		/// COMM_FLG : رأي اللجنة اما "تعدل – لا تعدل"
		/// </summary>
		public System.Int32?		  CommFlg = null;
		
		/// <summary>
		/// STAFF_FLG : الاستاذ على علم بالطلب نعم او لا
		/// </summary>
		public System.Int32?		  StaffFlg = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private EdCdeGrdChngRsn _edCdeGrdChngRsnIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCdeGrdChngRsn"/>.
		/// </summary>
		/// <value>The source EdCdeGrdChngRsn for EdCdeGrdChngRsnId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCdeGrdChngRsn EdCdeGrdChngRsnIdSource
      	{
            get { return this._edCdeGrdChngRsnIdSource; }
            set { this._edCdeGrdChngRsnIdSource = value; }
      	}
		private EdCodeCourseStatus _edCodeCourseStsOldIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeCourseStatus"/>.
		/// </summary>
		/// <value>The source EdCodeCourseStatus for EdCodeCourseStsOldId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeCourseStatus EdCodeCourseStsOldIdSource
      	{
            get { return this._edCodeCourseStsOldIdSource; }
            set { this._edCodeCourseStsOldIdSource = value; }
      	}
		private EdCodeCourseStatus _edCodeCourseStsNewIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeCourseStatus"/>.
		/// </summary>
		/// <value>The source EdCodeCourseStatus for EdCodeCourseStsNewId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeCourseStatus EdCodeCourseStsNewIdSource
      	{
            get { return this._edCodeCourseStsNewIdSource; }
            set { this._edCodeCourseStsNewIdSource = value; }
      	}
		private EdCodeGrading _edCodeGradingOldIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeGrading"/>.
		/// </summary>
		/// <value>The source EdCodeGrading for EdCodeGradingOldId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeGrading EdCodeGradingOldIdSource
      	{
            get { return this._edCodeGradingOldIdSource; }
            set { this._edCodeGradingOldIdSource = value; }
      	}
		private EdCodeGrading _edCodeGradingNewIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeGrading"/>.
		/// </summary>
		/// <value>The source EdCodeGrading for EdCodeGradingNewId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeGrading EdCodeGradingNewIdSource
      	{
            get { return this._edCodeGradingNewIdSource; }
            set { this._edCodeGradingNewIdSource = value; }
      	}
		private EdStudCourseReg _edStudCourseRegIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStudCourseReg"/>.
		/// </summary>
		/// <value>The source EdStudCourseReg for EdStudCourseRegId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStudCourseReg EdStudCourseRegIdSource
      	{
            get { return this._edStudCourseRegIdSource; }
            set { this._edStudCourseRegIdSource = value; }
      	}
		private FeeStudFeeItem _feeStudFeeItemIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeStudFeeItem"/>.
		/// </summary>
		/// <value>The source FeeStudFeeItem for FeeStudFeeItemId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeStudFeeItem FeeStudFeeItemIdSource
      	{
            get { return this._feeStudFeeItemIdSource; }
            set { this._feeStudFeeItemIdSource = value; }
      	}
		private SaStfMember _saStfMemApprovedByIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SaStfMember"/>.
		/// </summary>
		/// <value>The source SaStfMember for SaStfMemApprovedById.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SaStfMember SaStfMemApprovedByIdSource
      	{
            get { return this._saStfMemApprovedByIdSource; }
            set { this._saStfMemApprovedByIdSource = value; }
      	}
		private SeCodeUserType _seCodeUserTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SeCodeUserType"/>.
		/// </summary>
		/// <value>The source SeCodeUserType for SeCodeUserTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SeCodeUserType SeCodeUserTypeIdSource
      	{
            get { return this._seCodeUserTypeIdSource; }
            set { this._seCodeUserTypeIdSource = value; }
      	}
		private SeForm _seFormIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SeForm"/>.
		/// </summary>
		/// <value>The source SeForm for SeFormId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SeForm SeFormIdSource
      	{
            get { return this._seFormIdSource; }
            set { this._seFormIdSource = value; }
      	}
		private SeUser _seUserIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="SeUser"/>.
		/// </summary>
		/// <value>The source SeUser for SeUserId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual SeUser SeUserIdSource
      	{
            get { return this._seUserIdSource; }
            set { this._seUserIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region GsAttchdDocCollection
		
		private TList<GsAttchdDoc> _gsAttchdDocEdStudCourseGrdChngId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _gsAttchdDocEdStudCourseGrdChngId
		/// </summary>
		
		public TList<GsAttchdDoc> GsAttchdDocCollection
		{
			get
			{
				if (_gsAttchdDocEdStudCourseGrdChngId == null)
				{
				_gsAttchdDocEdStudCourseGrdChngId = new TList<GsAttchdDoc>();
				}
	
				return _gsAttchdDocEdStudCourseGrdChngId;
			}
			set { _gsAttchdDocEdStudCourseGrdChngId = value; }
		}
		
		#endregion

		#region WfCrsRsltApproveCollection
		
		private TList<WfCrsRsltApprove> _wfCrsRsltApproveEdStudCourseGrdChngId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _wfCrsRsltApproveEdStudCourseGrdChngId
		/// </summary>
		
		public TList<WfCrsRsltApprove> WfCrsRsltApproveCollection
		{
			get
			{
				if (_wfCrsRsltApproveEdStudCourseGrdChngId == null)
				{
				_wfCrsRsltApproveEdStudCourseGrdChngId = new TList<WfCrsRsltApprove>();
				}
	
				return _wfCrsRsltApproveEdStudCourseGrdChngId;
			}
			set { _wfCrsRsltApproveEdStudCourseGrdChngId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			EdStudCourseGrdChngEntityData _tmp = new EdStudCourseGrdChngEntityData();
						
			_tmp.EdStudCourseGrdChngId = this.EdStudCourseGrdChngId;
			_tmp.OriginalEdStudCourseGrdChngId = this.OriginalEdStudCourseGrdChngId;
			
			_tmp.SeCodeUserTypeId = this.SeCodeUserTypeId;
			_tmp.EdStudCourseRegId = this.EdStudCourseRegId;
			_tmp.EdCodeCourseStsOldId = this.EdCodeCourseStsOldId;
			_tmp.EdCodeCourseStsNewId = this.EdCodeCourseStsNewId;
			_tmp.EdCodeGradingOldId = this.EdCodeGradingOldId;
			_tmp.EdCodeGradingNewId = this.EdCodeGradingNewId;
			_tmp.EdCdeGrdChngRsnId = this.EdCdeGrdChngRsnId;
			_tmp.ReqDate = this.ReqDate;
			_tmp.DecisionNo = this.DecisionNo;
			_tmp.DecisionDate = this.DecisionDate;
			_tmp.ApproveFlg = this.ApproveFlg;
			_tmp.SaStfMemApprovedById = this.SaStfMemApprovedById;
			_tmp.IsLast = this.IsLast;
			_tmp.Notes = this.Notes;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserId = this.SeUserId;
			_tmp.SeFormId = this.SeFormId;
			_tmp.FeeStudFeeItemId = this.FeeStudFeeItemId;
			_tmp.CommFlg = this.CommFlg;
			_tmp.StaffFlg = this.StaffFlg;
			
			#region Source Parent Composite Entities
			if (this.EdCdeGrdChngRsnIdSource != null)
				_tmp.EdCdeGrdChngRsnIdSource = MakeCopyOf(this.EdCdeGrdChngRsnIdSource) as EdCdeGrdChngRsn;
			if (this.EdCodeCourseStsOldIdSource != null)
				_tmp.EdCodeCourseStsOldIdSource = MakeCopyOf(this.EdCodeCourseStsOldIdSource) as EdCodeCourseStatus;
			if (this.EdCodeCourseStsNewIdSource != null)
				_tmp.EdCodeCourseStsNewIdSource = MakeCopyOf(this.EdCodeCourseStsNewIdSource) as EdCodeCourseStatus;
			if (this.EdCodeGradingOldIdSource != null)
				_tmp.EdCodeGradingOldIdSource = MakeCopyOf(this.EdCodeGradingOldIdSource) as EdCodeGrading;
			if (this.EdCodeGradingNewIdSource != null)
				_tmp.EdCodeGradingNewIdSource = MakeCopyOf(this.EdCodeGradingNewIdSource) as EdCodeGrading;
			if (this.EdStudCourseRegIdSource != null)
				_tmp.EdStudCourseRegIdSource = MakeCopyOf(this.EdStudCourseRegIdSource) as EdStudCourseReg;
			if (this.FeeStudFeeItemIdSource != null)
				_tmp.FeeStudFeeItemIdSource = MakeCopyOf(this.FeeStudFeeItemIdSource) as FeeStudFeeItem;
			if (this.SaStfMemApprovedByIdSource != null)
				_tmp.SaStfMemApprovedByIdSource = MakeCopyOf(this.SaStfMemApprovedByIdSource) as SaStfMember;
			if (this.SeCodeUserTypeIdSource != null)
				_tmp.SeCodeUserTypeIdSource = MakeCopyOf(this.SeCodeUserTypeIdSource) as SeCodeUserType;
			if (this.SeFormIdSource != null)
				_tmp.SeFormIdSource = MakeCopyOf(this.SeFormIdSource) as SeForm;
			if (this.SeUserIdSource != null)
				_tmp.SeUserIdSource = MakeCopyOf(this.SeUserIdSource) as SeUser;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._gsAttchdDocEdStudCourseGrdChngId != null)
				_tmp.GsAttchdDocCollection = (TList<GsAttchdDoc>) MakeCopyOf(this.GsAttchdDocCollection); 
			if (this._wfCrsRsltApproveEdStudCourseGrdChngId != null)
				_tmp.WfCrsRsltApproveCollection = (TList<WfCrsRsltApprove>) MakeCopyOf(this.WfCrsRsltApproveCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			EdStudCourseGrdChngEntityData _tmp = new EdStudCourseGrdChngEntityData();
						
			_tmp.EdStudCourseGrdChngId = this.EdStudCourseGrdChngId;
			_tmp.OriginalEdStudCourseGrdChngId = this.OriginalEdStudCourseGrdChngId;
			
			_tmp.SeCodeUserTypeId = this.SeCodeUserTypeId;
			_tmp.EdStudCourseRegId = this.EdStudCourseRegId;
			_tmp.EdCodeCourseStsOldId = this.EdCodeCourseStsOldId;
			_tmp.EdCodeCourseStsNewId = this.EdCodeCourseStsNewId;
			_tmp.EdCodeGradingOldId = this.EdCodeGradingOldId;
			_tmp.EdCodeGradingNewId = this.EdCodeGradingNewId;
			_tmp.EdCdeGrdChngRsnId = this.EdCdeGrdChngRsnId;
			_tmp.ReqDate = this.ReqDate;
			_tmp.DecisionNo = this.DecisionNo;
			_tmp.DecisionDate = this.DecisionDate;
			_tmp.ApproveFlg = this.ApproveFlg;
			_tmp.SaStfMemApprovedById = this.SaStfMemApprovedById;
			_tmp.IsLast = this.IsLast;
			_tmp.Notes = this.Notes;
			_tmp.LastDate = this.LastDate;
			_tmp.SeUserId = this.SeUserId;
			_tmp.SeFormId = this.SeFormId;
			_tmp.FeeStudFeeItemId = this.FeeStudFeeItemId;
			_tmp.CommFlg = this.CommFlg;
			_tmp.StaffFlg = this.StaffFlg;
			
			#region Source Parent Composite Entities
			if (this.EdCdeGrdChngRsnIdSource != null && existingCopies.Contains(this.EdCdeGrdChngRsnIdSource))
				_tmp.EdCdeGrdChngRsnIdSource = existingCopies[this.EdCdeGrdChngRsnIdSource] as EdCdeGrdChngRsn;
			else
				_tmp.EdCdeGrdChngRsnIdSource = MakeCopyOf(this.EdCdeGrdChngRsnIdSource, existingCopies) as EdCdeGrdChngRsn;
			if (this.EdCodeCourseStsOldIdSource != null && existingCopies.Contains(this.EdCodeCourseStsOldIdSource))
				_tmp.EdCodeCourseStsOldIdSource = existingCopies[this.EdCodeCourseStsOldIdSource] as EdCodeCourseStatus;
			else
				_tmp.EdCodeCourseStsOldIdSource = MakeCopyOf(this.EdCodeCourseStsOldIdSource, existingCopies) as EdCodeCourseStatus;
			if (this.EdCodeCourseStsNewIdSource != null && existingCopies.Contains(this.EdCodeCourseStsNewIdSource))
				_tmp.EdCodeCourseStsNewIdSource = existingCopies[this.EdCodeCourseStsNewIdSource] as EdCodeCourseStatus;
			else
				_tmp.EdCodeCourseStsNewIdSource = MakeCopyOf(this.EdCodeCourseStsNewIdSource, existingCopies) as EdCodeCourseStatus;
			if (this.EdCodeGradingOldIdSource != null && existingCopies.Contains(this.EdCodeGradingOldIdSource))
				_tmp.EdCodeGradingOldIdSource = existingCopies[this.EdCodeGradingOldIdSource] as EdCodeGrading;
			else
				_tmp.EdCodeGradingOldIdSource = MakeCopyOf(this.EdCodeGradingOldIdSource, existingCopies) as EdCodeGrading;
			if (this.EdCodeGradingNewIdSource != null && existingCopies.Contains(this.EdCodeGradingNewIdSource))
				_tmp.EdCodeGradingNewIdSource = existingCopies[this.EdCodeGradingNewIdSource] as EdCodeGrading;
			else
				_tmp.EdCodeGradingNewIdSource = MakeCopyOf(this.EdCodeGradingNewIdSource, existingCopies) as EdCodeGrading;
			if (this.EdStudCourseRegIdSource != null && existingCopies.Contains(this.EdStudCourseRegIdSource))
				_tmp.EdStudCourseRegIdSource = existingCopies[this.EdStudCourseRegIdSource] as EdStudCourseReg;
			else
				_tmp.EdStudCourseRegIdSource = MakeCopyOf(this.EdStudCourseRegIdSource, existingCopies) as EdStudCourseReg;
			if (this.FeeStudFeeItemIdSource != null && existingCopies.Contains(this.FeeStudFeeItemIdSource))
				_tmp.FeeStudFeeItemIdSource = existingCopies[this.FeeStudFeeItemIdSource] as FeeStudFeeItem;
			else
				_tmp.FeeStudFeeItemIdSource = MakeCopyOf(this.FeeStudFeeItemIdSource, existingCopies) as FeeStudFeeItem;
			if (this.SaStfMemApprovedByIdSource != null && existingCopies.Contains(this.SaStfMemApprovedByIdSource))
				_tmp.SaStfMemApprovedByIdSource = existingCopies[this.SaStfMemApprovedByIdSource] as SaStfMember;
			else
				_tmp.SaStfMemApprovedByIdSource = MakeCopyOf(this.SaStfMemApprovedByIdSource, existingCopies) as SaStfMember;
			if (this.SeCodeUserTypeIdSource != null && existingCopies.Contains(this.SeCodeUserTypeIdSource))
				_tmp.SeCodeUserTypeIdSource = existingCopies[this.SeCodeUserTypeIdSource] as SeCodeUserType;
			else
				_tmp.SeCodeUserTypeIdSource = MakeCopyOf(this.SeCodeUserTypeIdSource, existingCopies) as SeCodeUserType;
			if (this.SeFormIdSource != null && existingCopies.Contains(this.SeFormIdSource))
				_tmp.SeFormIdSource = existingCopies[this.SeFormIdSource] as SeForm;
			else
				_tmp.SeFormIdSource = MakeCopyOf(this.SeFormIdSource, existingCopies) as SeForm;
			if (this.SeUserIdSource != null && existingCopies.Contains(this.SeUserIdSource))
				_tmp.SeUserIdSource = existingCopies[this.SeUserIdSource] as SeUser;
			else
				_tmp.SeUserIdSource = MakeCopyOf(this.SeUserIdSource, existingCopies) as SeUser;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.GsAttchdDocCollection = (TList<GsAttchdDoc>) MakeCopyOf(this.GsAttchdDocCollection, existingCopies); 
			_tmp.WfCrsRsltApproveCollection = (TList<WfCrsRsltApprove>) MakeCopyOf(this.WfCrsRsltApproveCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudCourseGrdChngColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(EdStudCourseGrdChngColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudCourseGrdChngColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(EdStudCourseGrdChngColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudCourseGrdChngColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(EdStudCourseGrdChngColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				EdStudCourseGrdChngEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new EdStudCourseGrdChngEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudCourseGrdChngColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(EdStudCourseGrdChngColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				EdStudCourseGrdChngEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new EdStudCourseGrdChngEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region EdStudCourseGrdChngEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="EdStudCourseGrdChng"/> object.
	/// </remarks>
	public class EdStudCourseGrdChngEventArgs : System.EventArgs
	{
		private EdStudCourseGrdChngColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the EdStudCourseGrdChngEventArgs class.
		///</summary>
		public EdStudCourseGrdChngEventArgs(EdStudCourseGrdChngColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the EdStudCourseGrdChngEventArgs class.
		///</summary>
		public EdStudCourseGrdChngEventArgs(EdStudCourseGrdChngColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The EdStudCourseGrdChngColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="EdStudCourseGrdChngColumn" />
		public EdStudCourseGrdChngColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all EdStudCourseGrdChng related events.
	///</summary>
	public delegate void EdStudCourseGrdChngEventHandler(object sender, EdStudCourseGrdChngEventArgs e);
	
	#region EdStudCourseGrdChngComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class EdStudCourseGrdChngComparer : System.Collections.Generic.IComparer<EdStudCourseGrdChng>
	{
		EdStudCourseGrdChngColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:EdStudCourseGrdChngComparer"/> class.
        /// </summary>
		public EdStudCourseGrdChngComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:EdStudCourseGrdChngComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public EdStudCourseGrdChngComparer(EdStudCourseGrdChngColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="EdStudCourseGrdChng"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="EdStudCourseGrdChng"/> to compare.</param>
        /// <param name="b">The second <c>EdStudCourseGrdChng</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(EdStudCourseGrdChng a, EdStudCourseGrdChng b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(EdStudCourseGrdChng entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(EdStudCourseGrdChng a, EdStudCourseGrdChng b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public EdStudCourseGrdChngColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region EdStudCourseGrdChngKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="EdStudCourseGrdChng"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class EdStudCourseGrdChngKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the EdStudCourseGrdChngKey class.
		/// </summary>
		public EdStudCourseGrdChngKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the EdStudCourseGrdChngKey class.
		/// </summary>
		public EdStudCourseGrdChngKey(EdStudCourseGrdChngBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.EdStudCourseGrdChngId = entity.EdStudCourseGrdChngId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the EdStudCourseGrdChngKey class.
		/// </summary>
		public EdStudCourseGrdChngKey(System.Decimal _edStudCourseGrdChngId)
		{
			#region Init Properties

			this.EdStudCourseGrdChngId = _edStudCourseGrdChngId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private EdStudCourseGrdChngBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public EdStudCourseGrdChngBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the EdStudCourseGrdChngId property
		private System.Decimal _edStudCourseGrdChngId;
		
		/// <summary>
		/// Gets or sets the EdStudCourseGrdChngId property.
		/// </summary>
		public System.Decimal EdStudCourseGrdChngId
		{
			get { return _edStudCourseGrdChngId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.EdStudCourseGrdChngId = value;
				
				_edStudCourseGrdChngId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				EdStudCourseGrdChngId = ( values["EdStudCourseGrdChngId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["EdStudCourseGrdChngId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("EdStudCourseGrdChngId", EdStudCourseGrdChngId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("EdStudCourseGrdChngId: {0}{1}",
								EdStudCourseGrdChngId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region EdStudCourseGrdChngColumn Enum
	
	/// <summary>
	/// Enumerate the EdStudCourseGrdChng columns.
	/// </summary>
	[Serializable]
	public enum EdStudCourseGrdChngColumn : int
	{
		/// <summary>
		/// EdStudCourseGrdChngId : طلب تعديل تقدير مقرر    -طلب تظلم في تقدير مقرر
		/// </summary>
		[EnumTextValue("ED_STUD_COURSE_GRD_CHNG_ID")]
		[ColumnEnum("ED_STUD_COURSE_GRD_CHNG_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		EdStudCourseGrdChngId = 1,
		/// <summary>
		/// SeCodeUserTypeId : طالب-ستاف-رئيس قسم WF
		/// </summary>
		[EnumTextValue("SE_CODE_USER_TYPE_ID")]
		[ColumnEnum("SE_CODE_USER_TYPE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeCodeUserTypeId = 2,
		/// <summary>
		/// EdStudCourseRegId : 
		/// </summary>
		[EnumTextValue("ED_STUD_COURSE_REG_ID")]
		[ColumnEnum("ED_STUD_COURSE_REG_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdStudCourseRegId = 3,
		/// <summary>
		/// EdCodeCourseStsOldId : 
		/// </summary>
		[EnumTextValue("ED_CODE_COURSE_STS_OLD_ID")]
		[ColumnEnum("ED_CODE_COURSE_STS_OLD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdCodeCourseStsOldId = 4,
		/// <summary>
		/// EdCodeCourseStsNewId : 
		/// </summary>
		[EnumTextValue("ED_CODE_COURSE_STS_NEW_ID")]
		[ColumnEnum("ED_CODE_COURSE_STS_NEW_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeCourseStsNewId = 5,
		/// <summary>
		/// EdCodeGradingOldId : 
		/// </summary>
		[EnumTextValue("ED_CODE_GRADING_OLD_ID")]
		[ColumnEnum("ED_CODE_GRADING_OLD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeGradingOldId = 6,
		/// <summary>
		/// EdCodeGradingNewId : 
		/// </summary>
		[EnumTextValue("ED_CODE_GRADING_NEW_ID")]
		[ColumnEnum("ED_CODE_GRADING_NEW_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCodeGradingNewId = 7,
		/// <summary>
		/// EdCdeGrdChngRsnId : 
		/// </summary>
		[EnumTextValue("ED_CDE_GRD_CHNG_RSN_ID")]
		[ColumnEnum("ED_CDE_GRD_CHNG_RSN_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCdeGrdChngRsnId = 8,
		/// <summary>
		/// ReqDate : 
		/// </summary>
		[EnumTextValue("REQ_DATE")]
		[ColumnEnum("REQ_DATE", typeof(System.DateTime), System.Data.DbType.Date, false, false, true)]
		ReqDate = 9,
		/// <summary>
		/// DecisionNo : 
		/// </summary>
		[EnumTextValue("DECISION_NO")]
		[ColumnEnum("DECISION_NO", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		DecisionNo = 10,
		/// <summary>
		/// DecisionDate : 
		/// </summary>
		[EnumTextValue("DECISION_DATE")]
		[ColumnEnum("DECISION_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		DecisionDate = 11,
		/// <summary>
		/// ApproveFlg : 
		/// </summary>
		[EnumTextValue("APPROVE_FLG")]
		[ColumnEnum("APPROVE_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ApproveFlg = 12,
		/// <summary>
		/// SaStfMemApprovedById : 
		/// </summary>
		[EnumTextValue("SA_STF_MEM_APPROVED_BY_ID")]
		[ColumnEnum("SA_STF_MEM_APPROVED_BY_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SaStfMemApprovedById = 13,
		/// <summary>
		/// IsLast : 
		/// </summary>
		[EnumTextValue("IS_LAST")]
		[ColumnEnum("IS_LAST", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		IsLast = 14,
		/// <summary>
		/// Notes : 
		/// </summary>
		[EnumTextValue("NOTES")]
		[ColumnEnum("NOTES", typeof(System.String), System.Data.DbType.String, false, false, true, 1000)]
		Notes = 15,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 16,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 17,
		/// <summary>
		/// SeFormId : 
		/// </summary>
		[EnumTextValue("SE_FORM_ID")]
		[ColumnEnum("SE_FORM_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeFormId = 18,
		/// <summary>
		/// FeeStudFeeItemId : بنود المصروفات على  طالب
		/// </summary>
		[EnumTextValue("FEE_STUD_FEE_ITEM_ID")]
		[ColumnEnum("FEE_STUD_FEE_ITEM_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FeeStudFeeItemId = 19,
		/// <summary>
		/// CommFlg : رأي اللجنة اما "تعدل – لا تعدل"
		/// </summary>
		[EnumTextValue("COMM_FLG")]
		[ColumnEnum("COMM_FLG", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		CommFlg = 20,
		/// <summary>
		/// StaffFlg : الاستاذ على علم بالطلب نعم او لا
		/// </summary>
		[EnumTextValue("STAFF_FLG")]
		[ColumnEnum("STAFF_FLG", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		StaffFlg = 21
	}//End enum

	#endregion EdStudCourseGrdChngColumn Enum

} // end namespace
