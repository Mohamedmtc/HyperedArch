
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file EdAcadYear.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ED_ACAD_YEAR' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class EdAcadYearBase : EntityBase, IEdAcadYear, IEntityId<EdAcadYearKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private EdAcadYearEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private EdAcadYearEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private EdAcadYearEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<EdAcadYear> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdAcadYearEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdAcadYearEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="EdAcadYearBase"/> instance.
		///</summary>
		public EdAcadYearBase()
		{
			this.entityData = new EdAcadYearEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="EdAcadYearBase"/> instance.
		///</summary>
		///<param name="_edAcadYearId"></param>
		///<param name="_descrAr"></param>
		///<param name="_descrEn"></param>
		///<param name="_yearCode"></param>
		///<param name="_yearOrder"></param>
		///<param name="_yearCalender"></param>
		///<param name="_currentYear">XXXX</param>
		///<param name="_isClosed">XXX</param>
		public EdAcadYearBase(System.Decimal _edAcadYearId, System.String _descrAr, System.String _descrEn, 
			System.String _yearCode, System.Decimal _yearOrder, System.Decimal _yearCalender, System.Decimal _currentYear, 
			System.Decimal? _isClosed)
		{
			this.entityData = new EdAcadYearEntityData();
			this.backupData = null;

			this.EdAcadYearId = _edAcadYearId;
			this.DescrAr = _descrAr;
			this.DescrEn = _descrEn;
			this.YearCode = _yearCode;
			this.YearOrder = _yearOrder;
			this.YearCalender = _yearCalender;
			this.CurrentYear = _currentYear;
			this.IsClosed = _isClosed;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="EdAcadYear"/> instance.
		///</summary>
		///<param name="_edAcadYearId"></param>
		///<param name="_descrAr"></param>
		///<param name="_descrEn"></param>
		///<param name="_yearCode"></param>
		///<param name="_yearOrder"></param>
		///<param name="_yearCalender"></param>
		///<param name="_currentYear">XXXX</param>
		///<param name="_isClosed">XXX</param>
		public static EdAcadYear CreateEdAcadYear(System.Decimal _edAcadYearId, System.String _descrAr, System.String _descrEn, 
			System.String _yearCode, System.Decimal _yearOrder, System.Decimal _yearCalender, System.Decimal _currentYear, 
			System.Decimal? _isClosed)
		{
			EdAcadYear newEdAcadYear = new EdAcadYear();
			newEdAcadYear.EdAcadYearId = _edAcadYearId;
			newEdAcadYear.DescrAr = _descrAr;
			newEdAcadYear.DescrEn = _descrEn;
			newEdAcadYear.YearCode = _yearCode;
			newEdAcadYear.YearOrder = _yearOrder;
			newEdAcadYear.YearCalender = _yearCalender;
			newEdAcadYear.CurrentYear = _currentYear;
			newEdAcadYear.IsClosed = _isClosed;
			return newEdAcadYear;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the EdAcadYearId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal EdAcadYearId
		{
			get
			{
				return this.entityData.EdAcadYearId; 
			}
			
			set
			{
				if (this.entityData.EdAcadYearId == value)
					return;
					
				OnColumnChanging(EdAcadYearColumn.EdAcadYearId, this.entityData.EdAcadYearId);
				this.entityData.EdAcadYearId = value;
				this.EntityId.EdAcadYearId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdAcadYearColumn.EdAcadYearId, this.entityData.EdAcadYearId);
				OnPropertyChanged("EdAcadYearId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ED_ACAD_YEAR_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the ED_ACAD_YEAR_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalEdAcadYearId
		{
			get { return this.entityData.OriginalEdAcadYearId; }
			set { this.entityData.OriginalEdAcadYearId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the DescrAr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false, 50)]
		public virtual System.String DescrAr
		{
			get
			{
				return this.entityData.DescrAr; 
			}
			
			set
			{
				if (this.entityData.DescrAr == value)
					return;
					
				OnColumnChanging(EdAcadYearColumn.DescrAr, this.entityData.DescrAr);
				this.entityData.DescrAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdAcadYearColumn.DescrAr, this.entityData.DescrAr);
				OnPropertyChanged("DescrAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the DescrEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 50)]
		public virtual System.String DescrEn
		{
			get
			{
				return this.entityData.DescrEn; 
			}
			
			set
			{
				if (this.entityData.DescrEn == value)
					return;
					
				OnColumnChanging(EdAcadYearColumn.DescrEn, this.entityData.DescrEn);
				this.entityData.DescrEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdAcadYearColumn.DescrEn, this.entityData.DescrEn);
				OnPropertyChanged("DescrEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the YearCode property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 30)]
		public virtual System.String YearCode
		{
			get
			{
				return this.entityData.YearCode; 
			}
			
			set
			{
				if (this.entityData.YearCode == value)
					return;
					
				OnColumnChanging(EdAcadYearColumn.YearCode, this.entityData.YearCode);
				this.entityData.YearCode = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdAcadYearColumn.YearCode, this.entityData.YearCode);
				OnPropertyChanged("YearCode");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the YearOrder property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal YearOrder
		{
			get
			{
				return this.entityData.YearOrder; 
			}
			
			set
			{
				if (this.entityData.YearOrder == value)
					return;
					
				OnColumnChanging(EdAcadYearColumn.YearOrder, this.entityData.YearOrder);
				this.entityData.YearOrder = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdAcadYearColumn.YearOrder, this.entityData.YearOrder);
				OnPropertyChanged("YearOrder");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the YearCalender property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal YearCalender
		{
			get
			{
				return this.entityData.YearCalender; 
			}
			
			set
			{
				if (this.entityData.YearCalender == value)
					return;
					
				OnColumnChanging(EdAcadYearColumn.YearCalender, this.entityData.YearCalender);
				this.entityData.YearCalender = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdAcadYearColumn.YearCalender, this.entityData.YearCalender);
				OnPropertyChanged("YearCalender");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CurrentYear property. 
		///		XXXX
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"XXXX"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal CurrentYear
		{
			get
			{
				return this.entityData.CurrentYear; 
			}
			
			set
			{
				if (this.entityData.CurrentYear == value)
					return;
					
				OnColumnChanging(EdAcadYearColumn.CurrentYear, this.entityData.CurrentYear);
				this.entityData.CurrentYear = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdAcadYearColumn.CurrentYear, this.entityData.CurrentYear);
				OnPropertyChanged("CurrentYear");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IsClosed property. 
		///		XXX
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsIsClosedNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"XXX"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? IsClosed
		{
			get
			{
				return this.entityData.IsClosed; 
			}
			
			set
			{
				if (this.entityData.IsClosed == value)
					return;
					
				OnColumnChanging(EdAcadYearColumn.IsClosed, this.entityData.IsClosed);
				this.entityData.IsClosed = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdAcadYearColumn.IsClosed, this.entityData.IsClosed);
				OnPropertyChanged("IsClosed");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of EdStudFaculty objects
		///	which are related to this object through the relation FK_AUTO_004b
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudFaculty> EdStudFacultyCollectionGetByEdAcadYearId
		{
			get { return entityData.EdStudFacultyCollectionGetByEdAcadYearId; }
			set { entityData.EdStudFacultyCollectionGetByEdAcadYearId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeFacultyInstallment objects
		///	which are related to this object through the relation FK_FEE_INSTALLMENT_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeFacultyInstallment> FeeFacultyInstallmentCollection
		{
			get { return entityData.FeeFacultyInstallmentCollection; }
			set { entityData.FeeFacultyInstallmentCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudTrans objects
		///	which are related to this object through the relation FK_ED_STUD_TRANS_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudTrans> EdStudTransCollection
		{
			get { return entityData.EdStudTransCollection; }
			set { entityData.EdStudTransCollection = value; }	
		}

		/// <summary>
		///	Holds a FeeAccntYear object
		///	which is related to this object through the relation FeeAccntYear
		/// </summary>
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeAccntYear FeeAccntYear
		{
			get { return entityData.FeeAccntYear; }
			set { entityData.FeeAccntYear = value; }	
		}
	
		/// <summary>
		///	Holds a collection of WfCrsRsltApprove objects
		///	which are related to this object through the relation FK_WF_CRS_RSLT_APPROVE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<WfCrsRsltApprove> WfCrsRsltApproveCollection
		{
			get { return entityData.WfCrsRsltApproveCollection; }
			set { entityData.WfCrsRsltApproveCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdAcadYearFaculty objects
		///	which are related to this object through the relation FK_AUTO_0059
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdAcadYearFaculty> EdAcadYearFacultyCollection
		{
			get { return entityData.EdAcadYearFacultyCollection; }
			set { entityData.EdAcadYearFacultyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaOfficeHour objects
		///	which are related to this object through the relation FK_SA_OFFICE_HOUR_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaOfficeHour> SaOfficeHourCollection
		{
			get { return entityData.SaOfficeHourCollection; }
			set { entityData.SaOfficeHourCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStaffEvl objects
		///	which are related to this object through the relation FK_SV_STAFF_EVL_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStaffEvl> SvStaffEvlCollection
		{
			get { return entityData.SvStaffEvlCollection; }
			set { entityData.SvStaffEvlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudCourseRegPre objects
		///	which are related to this object through the relation FK_ED_STUD_COURSE_REG_PRE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudCourseRegPre> EdStudCourseRegPreCollection
		{
			get { return entityData.EdStudCourseRegPreCollection; }
			set { entityData.EdStudCourseRegPreCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudNatSimilarityRequest objects
		///	which are related to this object through the relation FK_FEE_STUD_NAT_SIMILARITY_REQUEST_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudNatSimilarityRequest> FeeStudNatSimilarityRequestCollection
		{
			get { return entityData.FeeStudNatSimilarityRequestCollection; }
			set { entityData.FeeStudNatSimilarityRequestCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmOpenAcadSemester objects
		///	which are related to this object through the relation FK_AUTO_0002
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmOpenAcadSemester> AdmOpenAcadSemesterCollection
		{
			get { return entityData.AdmOpenAcadSemesterCollection; }
			set { entityData.AdmOpenAcadSemesterCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrns objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_ED_ACAD_YEAR1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrns> EdStudIntTrnsCollectionGetByEdAcadYearReqId
		{
			get { return entityData.EdStudIntTrnsCollectionGetByEdAcadYearReqId; }
			set { entityData.EdStudIntTrnsCollectionGetByEdAcadYearReqId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntCoursePkgMdData objects
		///	which are related to this object through the relation FK_ENT_COURSE_PKG_MD_DATA_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntCoursePkgMdData> EntCoursePkgMdDataCollection
		{
			get { return entityData.EntCoursePkgMdDataCollection; }
			set { entityData.EntCoursePkgMdDataCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeUserBondReq objects
		///	which are related to this object through the relation FK_FEE_USER_BOND_REQ_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeUserBondReq> FeeUserBondReqCollection
		{
			get { return entityData.FeeUserBondReqCollection; }
			set { entityData.FeeUserBondReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdGraduationAward objects
		///	which are related to this object through the relation FK_ED_GRADUATION_AWARD_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdGraduationAward> EdGraduationAwardCollection
		{
			get { return entityData.EdGraduationAwardCollection; }
			set { entityData.EdGraduationAwardCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomWfRequestApprove objects
		///	which are related to this object through the relation FK_ACCOM_WF_REQUEST_APPROVE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomWfRequestApprove> AccomWfRequestApproveCollection
		{
			get { return entityData.AccomWfRequestApproveCollection; }
			set { entityData.AccomWfRequestApproveCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScStudGroup objects
		///	which are related to this object through the relation FK_SC_STUD_GROUP_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScStudGroup> ScStudGroupCollection
		{
			get { return entityData.ScStudGroupCollection; }
			set { entityData.ScStudGroupCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdProject objects
		///	which are related to this object through the relation FK_ED_PROJECT_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdProject> EdProjectCollection
		{
			get { return entityData.EdProjectCollection; }
			set { entityData.EdProjectCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of RsrchStudRegister objects
		///	which are related to this object through the relation FK_RSRCH_STUD_REGISTER_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<RsrchStudRegister> RsrchStudRegisterCollection
		{
			get { return entityData.RsrchStudRegisterCollection; }
			set { entityData.RsrchStudRegisterCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseOutcomesTopics objects
		///	which are related to this object through the relation FK_ED_Course_Outcomes_Topics_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseOutcomesTopics> EdCourseOutcomesTopicsCollection
		{
			get { return entityData.EdCourseOutcomesTopicsCollection; }
			set { entityData.EdCourseOutcomesTopicsCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoSponsorOffer objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_OFFER_ED_ACAD_YEAR1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorOffer> SpoSponsorOfferCollectionGetByEdAcadYearToId
		{
			get { return entityData.SpoSponsorOfferCollectionGetByEdAcadYearToId; }
			set { entityData.SpoSponsorOfferCollectionGetByEdAcadYearToId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdCourseTchng objects
		///	which are related to this object through the relation FK_ED_COURSE_TCHNG_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdCourseTchng> EdCourseTchngCollection
		{
			get { return entityData.EdCourseTchngCollection; }
			set { entityData.EdCourseTchngCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoSponsorStud objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_STUD_ED_ACAD_YEAR1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorStud> SpoSponsorStudCollectionGetByEdAcadYearToId
		{
			get { return entityData.SpoSponsorStudCollectionGetByEdAcadYearToId; }
			set { entityData.SpoSponsorStudCollectionGetByEdAcadYearToId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdExamSchdl objects
		///	which are related to this object through the relation FK_ED_EXAM_SCHDL_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdExamSchdl> EdExamSchdlCollection
		{
			get { return entityData.EdExamSchdlCollection; }
			set { entityData.EdExamSchdlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoControl objects
		///	which are related to this object through the relation FK_CO_CONTROL_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoControl> CoControlCollection
		{
			get { return entityData.CoControlCollection; }
			set { entityData.CoControlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAcadWarn objects
		///	which are related to this object through the relation FK_ED_STUD_ACAD_WARN_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAcadWarn> EdStudAcadWarnCollection
		{
			get { return entityData.EdStudAcadWarnCollection; }
			set { entityData.EdStudAcadWarnCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdAcadPlan objects
		///	which are related to this object through the relation FK_ED_ACAD_PLAN_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdAcadPlan> EdAcadPlanCollection
		{
			get { return entityData.EdAcadPlanCollection; }
			set { entityData.EdAcadPlanCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CoCrsRsltRaise objects
		///	which are related to this object through the relation FK_CO_CRS_RSLT_RAISE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CoCrsRsltRaise> CoCrsRsltRaiseCollection
		{
			get { return entityData.CoCrsRsltRaiseCollection; }
			set { entityData.CoCrsRsltRaiseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsStateFrom objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_STATE_FROM_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsStateFrom> EdStudIntTrnsStateFromCollection
		{
			get { return entityData.EdStudIntTrnsStateFromCollection; }
			set { entityData.EdStudIntTrnsStateFromCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvUserTask objects
		///	which are related to this object through the relation FK_SV_USER_TASK_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvUserTask> SvUserTaskCollection
		{
			get { return entityData.SvUserTaskCollection; }
			set { entityData.SvUserTaskCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MdiStudRecord objects
		///	which are related to this object through the relation FK_MDI_STUD_RECORD_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MdiStudRecord> MdiStudRecordCollection
		{
			get { return entityData.MdiStudRecordCollection; }
			set { entityData.MdiStudRecordCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudFaculty objects
		///	which are related to this object through the relation FK_ED_STUD_FACULTY_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudFaculty> EdStudFacultyCollectionGetByEdAcadYearJoinId
		{
			get { return entityData.EdStudFacultyCollectionGetByEdAcadYearJoinId; }
			set { entityData.EdStudFacultyCollectionGetByEdAcadYearJoinId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeFacItemAdmYear objects
		///	which are related to this object through the relation FK_FEE_FAC_ITEM_ADM_YEAR_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeFacItemAdmYear> FeeFacItemAdmYearCollection
		{
			get { return entityData.FeeFacItemAdmYearCollection; }
			set { entityData.FeeFacItemAdmYearCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudLateness objects
		///	which are related to this object through the relation FK_Ed_Stud_Lateness_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudLateness> EdStudLatenessCollection
		{
			get { return entityData.EdStudLatenessCollection; }
			set { entityData.EdStudLatenessCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudItemCncl objects
		///	which are related to this object through the relation FK_FEE_STUD_ITEM_CNCL_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudItemCncl> FeeStudItemCnclCollection
		{
			get { return entityData.FeeStudItemCnclCollection; }
			set { entityData.FeeStudItemCnclCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudBranchPref objects
		///	which are related to this object through the relation FK_ED_STUD_BRANCH_PREF_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudBranchPref> EdStudBranchPrefCollection
		{
			get { return entityData.EdStudBranchPrefCollection; }
			set { entityData.EdStudBranchPrefCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdAcdadvRmk objects
		///	which are related to this object through the relation FK_ED_ACDADV_RMK_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdAcdadvRmk> EdAcdadvRmkCollection
		{
			get { return entityData.EdAcdadvRmkCollection; }
			set { entityData.EdAcdadvRmkCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvSrvyHdr objects
		///	which are related to this object through the relation FK_SV_SRVY_HDR_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvSrvyHdr> SvSrvyHdrCollection
		{
			get { return entityData.SvSrvyHdrCollection; }
			set { entityData.SvSrvyHdrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudPayPostpone objects
		///	which are related to this object through the relation FK_FEE_STUD_PAY_POSTPONE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudPayPostpone> FeeStudPayPostponeCollection
		{
			get { return entityData.FeeStudPayPostponeCollection; }
			set { entityData.FeeStudPayPostponeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoSponsorStud objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_STUD_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorStud> SpoSponsorStudCollectionGetByEdAcadYearId
		{
			get { return entityData.SpoSponsorStudCollectionGetByEdAcadYearId; }
			set { entityData.SpoSponsorStudCollectionGetByEdAcadYearId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeLimitRule objects
		///	which are related to this object through the relation FK_FEE_LIMIT_RULE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeLimitRule> FeeLimitRuleCollection
		{
			get { return entityData.FeeLimitRuleCollection; }
			set { entityData.FeeLimitRuleCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MltStudInfo objects
		///	which are related to this object through the relation FK_MLT_STUD_INFO_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MltStudInfo> MltStudInfoCollection
		{
			get { return entityData.MltStudInfoCollection; }
			set { entityData.MltStudInfoCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeTreasuryReq objects
		///	which are related to this object through the relation FK_FEE_TREASURY_REQ_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeTreasuryReq> FeeTreasuryReqCollection
		{
			get { return entityData.FeeTreasuryReqCollection; }
			set { entityData.FeeTreasuryReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudAllowance objects
		///	which are related to this object through the relation FK_FEE_STUD_ALLOWANCE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudAllowance> FeeStudAllowanceCollection
		{
			get { return entityData.FeeStudAllowanceCollection; }
			set { entityData.FeeStudAllowanceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoSponsorOffer objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_OFFER_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorOffer> SpoSponsorOfferCollectionGetByEdAcadYearFromId
		{
			get { return entityData.SpoSponsorOfferCollectionGetByEdAcadYearFromId; }
			set { entityData.SpoSponsorOfferCollectionGetByEdAcadYearFromId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAcadmicAdv objects
		///	which are related to this object through the relation FK_ED_STUD_ACADMIC_ADV_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAcadmicAdv> EdStudAcadmicAdvCollection
		{
			get { return entityData.EdStudAcadmicAdvCollection; }
			set { entityData.EdStudAcadmicAdvCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomStudAbsenceWarn objects
		///	which are related to this object through the relation FK_ACCOM_STUD_ABSENCE_WARN_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomStudAbsenceWarn> AccomStudAbsenceWarnCollection
		{
			get { return entityData.AccomStudAbsenceWarnCollection; }
			set { entityData.AccomStudAbsenceWarnCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdInttransRule objects
		///	which are related to this object through the relation FK_ED_Int_Trans_RULE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdInttransRule> EdInttransRuleCollection
		{
			get { return entityData.EdInttransRuleCollection; }
			set { entityData.EdInttransRuleCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScGroupInfo objects
		///	which are related to this object through the relation FK_SC_GROUP_INFO_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScGroupInfo> ScGroupInfoCollection
		{
			get { return entityData.ScGroupInfoCollection; }
			set { entityData.ScGroupInfoCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudState objects
		///	which are related to this object through the relation FK_ED_STUD_STATE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudState> EdStudStateCollection
		{
			get { return entityData.EdStudStateCollection; }
			set { entityData.EdStudStateCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MilCodeCourse objects
		///	which are related to this object through the relation FK_MIL_CODE_COURSE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MilCodeCourse> MilCodeCourseCollection
		{
			get { return entityData.MilCodeCourseCollection; }
			set { entityData.MilCodeCourseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudFund objects
		///	which are related to this object through the relation FK_FEE_STUD_FUND_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudFund> FeeStudFundCollection
		{
			get { return entityData.FeeStudFundCollection; }
			set { entityData.FeeStudFundCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdSemAgendaDtl objects
		///	which are related to this object through the relation FK_ED_SEM_AGENDA_DTL_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdSemAgendaDtl> EdSemAgendaDtlCollectionGetByFAdmAcadYearId
		{
			get { return entityData.EdSemAgendaDtlCollectionGetByFAdmAcadYearId; }
			set { entityData.EdSemAgendaDtlCollectionGetByFAdmAcadYearId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeCdeDiscType objects
		///	which are related to this object through the relation FK_FEE_CDE_DISC_TYPE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeCdeDiscType> FeeCdeDiscTypeCollection
		{
			get { return entityData.FeeCdeDiscTypeCollection; }
			set { entityData.FeeCdeDiscTypeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeItemTrnsBlnc objects
		///	which are related to this object through the relation FK_FEE_ITEM_TRNS_BLNC_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeItemTrnsBlnc> FeeItemTrnsBlncCollection
		{
			get { return entityData.FeeItemTrnsBlncCollection; }
			set { entityData.FeeItemTrnsBlncCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudCoursesItem objects
		///	which are related to this object through the relation FK_FEE_STUD_COURSES_ITEM_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudCoursesItem> FeeStudCoursesItemCollection
		{
			get { return entityData.FeeStudCoursesItemCollection; }
			set { entityData.FeeStudCoursesItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudDisc objects
		///	which are related to this object through the relation FK_FEE_STUD_DISC_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudDisc> FeeStudDiscCollection
		{
			get { return entityData.FeeStudDiscCollection; }
			set { entityData.FeeStudDiscCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdSemesterOpen objects
		///	which are related to this object through the relation FK_ED_SEMESTER_OPEN_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdSemesterOpen> EdSemesterOpenCollection
		{
			get { return entityData.EdSemesterOpenCollection; }
			set { entityData.EdSemesterOpenCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeTreasury objects
		///	which are related to this object through the relation FK_FEE_TREASURY_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeTreasury> FeeTreasuryCollection
		{
			get { return entityData.FeeTreasuryCollection; }
			set { entityData.FeeTreasuryCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CtrStudExp objects
		///	which are related to this object through the relation FK_CTR_STUD_EXP_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CtrStudExp> CtrStudExpCollection
		{
			get { return entityData.CtrStudExpCollection; }
			set { entityData.CtrStudExpCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MdiStudClnq objects
		///	which are related to this object through the relation FK_MDI_STUD_CLNQ_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MdiStudClnq> MdiStudClnqCollection
		{
			get { return entityData.MdiStudClnqCollection; }
			set { entityData.MdiStudClnqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgThesisStud objects
		///	which are related to this object through the relation FK_PG_THESIS_STUD_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisStud> PgThesisStudCollection
		{
			get { return entityData.PgThesisStudCollection; }
			set { entityData.PgThesisStudCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GsAgendaHoliday objects
		///	which are related to this object through the relation FK_GS_AGENDA_HOLIDAY_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GsAgendaHoliday> GsAgendaHolidayCollection
		{
			get { return entityData.GsAgendaHolidayCollection; }
			set { entityData.GsAgendaHolidayCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudViol objects
		///	which are related to this object through the relation FK_ED_STUD_VIOL_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudViol> EdStudViolCollectionGetByEdAcadYearId
		{
			get { return entityData.EdStudViolCollectionGetByEdAcadYearId; }
			set { entityData.EdStudViolCollectionGetByEdAcadYearId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsCourseFrom objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRANS_COURSE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsCourseFrom> EdStudIntTrnsCourseFromCollection
		{
			get { return entityData.EdStudIntTrnsCourseFromCollection; }
			set { entityData.EdStudIntTrnsCourseFromCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomStudAbsence objects
		///	which are related to this object through the relation FK_ACCOM_STUD_ABSENCE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomStudAbsence> AccomStudAbsenceCollection
		{
			get { return entityData.AccomStudAbsenceCollection; }
			set { entityData.AccomStudAbsenceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of TrnsLine objects
		///	which are related to this object through the relation FK_TRNS_LINE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<TrnsLine> TrnsLineCollection
		{
			get { return entityData.TrnsLineCollection; }
			set { entityData.TrnsLineCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgOffering objects
		///	which are related to this object through the relation FK_PG_OFFERING_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgOffering> PgOfferingCollection
		{
			get { return entityData.PgOfferingCollection; }
			set { entityData.PgOfferingCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntPolcyGrdngHdr objects
		///	which are related to this object through the relation FK_ENT_POLCY_GRDNG_HDR_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntPolcyGrdngHdr> EntPolcyGrdngHdrCollection
		{
			get { return entityData.EntPolcyGrdngHdrCollection; }
			set { entityData.EntPolcyGrdngHdrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntCoursePkgHdr objects
		///	which are related to this object through the relation FK_ENT_COURSE_PKG_HDR_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntCoursePkgHdr> EntCoursePkgHdrCollection
		{
			get { return entityData.EntCoursePkgHdrCollection; }
			set { entityData.EntCoursePkgHdrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudTransFromReq objects
		///	which are related to this object through the relation FK_ED_STUD_TRANS_FROM_REQ_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudTransFromReq> EdStudTransFromReqCollection
		{
			get { return entityData.EdStudTransFromReqCollection; }
			set { entityData.EdStudTransFromReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudInstallment objects
		///	which are related to this object through the relation FEE_STUD_INSTALLMENT_fk
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudInstallment> FeeStudInstallmentCollection
		{
			get { return entityData.FeeStudInstallmentCollection; }
			set { entityData.FeeStudInstallmentCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmFeePromocode objects
		///	which are related to this object through the relation FK_ADM_FEE_PROMOCODE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmFeePromocode> AdmFeePromocodeCollection
		{
			get { return entityData.AdmFeePromocodeCollection; }
			set { entityData.AdmFeePromocodeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdBranchRule objects
		///	which are related to this object through the relation FK_ED_BRANCH_RULE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdBranchRule> EdBranchRuleCollection
		{
			get { return entityData.EdBranchRuleCollection; }
			set { entityData.EdBranchRuleCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoSponsorStudSemester objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_STUD_SEMESTER_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorStudSemester> SpoSponsorStudSemesterCollection
		{
			get { return entityData.SpoSponsorStudSemesterCollection; }
			set { entityData.SpoSponsorStudSemesterCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeFacultyRule objects
		///	which are related to this object through the relation FK_FEE_FACULTY_RULE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeFacultyRule> FeeFacultyRuleCollection
		{
			get { return entityData.FeeFacultyRuleCollection; }
			set { entityData.FeeFacultyRuleCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudProblem objects
		///	which are related to this object through the relation FK_ED_STUD_PROBLEM_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudProblem> EdStudProblemCollection
		{
			get { return entityData.EdStudProblemCollection; }
			set { entityData.EdStudProblemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeItemSemester objects
		///	which are related to this object through the relation FK_FEE_ITEM_SEMESTER_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeItemSemester> FeeItemSemesterCollection
		{
			get { return entityData.FeeItemSemesterCollection; }
			set { entityData.FeeItemSemesterCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScSectionGroupHdr objects
		///	which are related to this object through the relation FK_ED_SEC_GRP_HDR_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScSectionGroupHdr> ScSectionGroupHdrCollection
		{
			get { return entityData.ScSectionGroupHdrCollection; }
			set { entityData.ScSectionGroupHdrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of CtrStudOut objects
		///	which are related to this object through the relation FK_CTR_STUD_OUT_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<CtrStudOut> CtrStudOutCollection
		{
			get { return entityData.CtrStudOutCollection; }
			set { entityData.CtrStudOutCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoOfferStudException objects
		///	which are related to this object through the relation FK_SPO_OFFER_STUD_EXCEPTION_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoOfferStudException> SpoOfferStudExceptionCollection
		{
			get { return entityData.SpoOfferStudExceptionCollection; }
			set { entityData.SpoOfferStudExceptionCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeAccomItem objects
		///	which are related to this object through the relation FK_FEE_ACCOM_ITEM_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeAccomItem> FeeAccomItemCollection
		{
			get { return entityData.FeeAccomItemCollection; }
			set { entityData.FeeAccomItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of TrnsStudReq objects
		///	which are related to this object through the relation FK_TRNS_LINE_STUD_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<TrnsStudReq> TrnsStudReqCollection
		{
			get { return entityData.TrnsStudReqCollection; }
			set { entityData.TrnsStudReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudExmptReq objects
		///	which are related to this object through the relation FK_ED_STUD_EXMPT_REQ_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudExmptReq> EdStudExmptReqCollection
		{
			get { return entityData.EdStudExmptReqCollection; }
			set { entityData.EdStudExmptReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudRetrieveRequest objects
		///	which are related to this object through the relation FK_FEE_STUD_RETRIEVE_REQUEST_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudRetrieveRequest> FeeStudRetrieveRequestCollection
		{
			get { return entityData.FeeStudRetrieveRequestCollection; }
			set { entityData.FeeStudRetrieveRequestCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvCourseEval objects
		///	which are related to this object through the relation FK_SV_COURSE_EVAL_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvCourseEval> SvCourseEvalCollection
		{
			get { return entityData.SvCourseEvalCollection; }
			set { entityData.SvCourseEvalCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudViol objects
		///	which are related to this object through the relation FK_ED_STUD_VIOL_ED_ACAD_YEAR2
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudViol> EdStudViolCollectionGetByEdAcadYearStopToId
		{
			get { return entityData.EdStudViolCollectionGetByEdAcadYearStopToId; }
			set { entityData.EdStudViolCollectionGetByEdAcadYearStopToId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeBusLineItem objects
		///	which are related to this object through the relation FK_FEE_BUS_LINE_ITEM_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeBusLineItem> FeeBusLineItemCollection
		{
			get { return entityData.FeeBusLineItemCollection; }
			set { entityData.FeeBusLineItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AdmAppRegHistory objects
		///	which are related to this object through the relation FK_ADM_APP_REG_HISTORY_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AdmAppRegHistory> AdmAppRegHistoryCollection
		{
			get { return entityData.AdmAppRegHistoryCollection; }
			set { entityData.AdmAppRegHistoryCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudSemester objects
		///	which are related to this object through the relation FK_ED_STUD_SEMESTER_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudSemester> EdStudSemesterCollection
		{
			get { return entityData.EdStudSemesterCollection; }
			set { entityData.EdStudSemesterCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgThesisGrantDegree objects
		///	which are related to this object through the relation FK_PG_THESIS_GRANT_DEGREE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisGrantDegree> PgThesisGrantDegreeCollection
		{
			get { return entityData.PgThesisGrantDegreeCollection; }
			set { entityData.PgThesisGrantDegreeCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudExecuseReq objects
		///	which are related to this object through the relation FK_ED_STUD_EXECUSE_REQ_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudExecuseReq> EdStudExecuseReqCollection
		{
			get { return entityData.EdStudExecuseReqCollection; }
			set { entityData.EdStudExecuseReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeUserFundReq objects
		///	which are related to this object through the relation FK_FEE_USER_FUND_REQ_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeUserFundReq> FeeUserFundReqCollection
		{
			get { return entityData.FeeUserFundReqCollection; }
			set { entityData.FeeUserFundReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdOffering objects
		///	which are related to this object through the relation FK_AUTO_0049
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdOffering> EdOfferingCollection
		{
			get { return entityData.EdOfferingCollection; }
			set { entityData.EdOfferingCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdBylaw objects
		///	which are related to this object through the relation FK_ED_BYLAW_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdBylaw> EdBylawCollection
		{
			get { return entityData.EdBylawCollection; }
			set { entityData.EdBylawCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAbsence objects
		///	which are related to this object through the relation FK_ED_STUD_ABSENCE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAbsence> EdStudAbsenceCollection
		{
			get { return entityData.EdStudAbsenceCollection; }
			set { entityData.EdStudAbsenceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudAbsFw objects
		///	which are related to this object through the relation FK_ED_STUD_ABS_FW_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudAbsFw> EdStudAbsFwCollection
		{
			get { return entityData.EdStudAbsFwCollection; }
			set { entityData.EdStudAbsFwCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudInstallmentRequest objects
		///	which are related to this object through the relation FK_FEE_STUD_INSTALLMENT_REQUEST_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudInstallmentRequest> FeeStudInstallmentRequestCollection
		{
			get { return entityData.FeeStudInstallmentRequestCollection; }
			set { entityData.FeeStudInstallmentRequestCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudStateTemp objects
		///	which are related to this object through the relation FK_ED_STUD_STATE_TEMP_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudStateTemp> EdStudStateTempCollection
		{
			get { return entityData.EdStudStateTempCollection; }
			set { entityData.EdStudStateTempCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MltRptDayStudSts objects
		///	which are related to this object through the relation FK_MLT_RPT_DAY_STUD_STS_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MltRptDayStudSts> MltRptDayStudStsCollectionGetByEdAcadYearJoinId
		{
			get { return entityData.MltRptDayStudStsCollectionGetByEdAcadYearJoinId; }
			set { entityData.MltRptDayStudStsCollectionGetByEdAcadYearJoinId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntPrecondMdData objects
		///	which are related to this object through the relation FK_ENT_PRECOND_MD_DATA_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntPrecondMdData> EntPrecondMdDataCollection
		{
			get { return entityData.EntPrecondMdDataCollection; }
			set { entityData.EntPrecondMdDataCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SaServTermin objects
		///	which are related to this object through the relation FK_SA_SERV_TERMIN_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SaServTermin> SaServTerminCollection
		{
			get { return entityData.SaServTerminCollection; }
			set { entityData.SaServTerminCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of TrnsStudCarStkr objects
		///	which are related to this object through the relation FK_TRNS_STUD_CAR_STKR_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<TrnsStudCarStkr> TrnsStudCarStkrCollection
		{
			get { return entityData.TrnsStudCarStkrCollection; }
			set { entityData.TrnsStudCarStkrCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvMessage objects
		///	which are related to this object through the relation FK_SV_MESSAGE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvMessage> SvMessageCollection
		{
			get { return entityData.SvMessageCollection; }
			set { entityData.SvMessageCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudEnrollChange objects
		///	which are related to this object through the relation FK_ED_STUD_ENROLL_CHANGE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudEnrollChange> EdStudEnrollChangeCollectionGetByEdAcadYearToId
		{
			get { return entityData.EdStudEnrollChangeCollectionGetByEdAcadYearToId; }
			set { entityData.EdStudEnrollChangeCollectionGetByEdAcadYearToId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeRefndStdReq objects
		///	which are related to this object through the relation FK_REFUND_STUD_REQ_MASTER_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeRefndStdReq> FeeRefndStdReqCollection
		{
			get { return entityData.FeeRefndStdReqCollection; }
			set { entityData.FeeRefndStdReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudVoucher objects
		///	which are related to this object through the relation FK_FEE_STUD_VOUCHER_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudVoucher> FeeStudVoucherCollection
		{
			get { return entityData.FeeStudVoucherCollection; }
			set { entityData.FeeStudVoucherCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomStudReq objects
		///	which are related to this object through the relation FK_ACCOM_STUD_REQ_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomStudReq> AccomStudReqCollection
		{
			get { return entityData.AccomStudReqCollection; }
			set { entityData.AccomStudReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of RsrchStudPostponeReq objects
		///	which are related to this object through the relation FK_RSRCH_STUD_POSTPONE_REQ_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<RsrchStudPostponeReq> RsrchStudPostponeReqCollection
		{
			get { return entityData.RsrchStudPostponeReqCollection; }
			set { entityData.RsrchStudPostponeReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudAskAdv objects
		///	which are related to this object through the relation FK_SV_STUD_ASK_ADV_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudAskAdv> SvStudAskAdvCollection
		{
			get { return entityData.SvStudAskAdvCollection; }
			set { entityData.SvStudAskAdvCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgStudPublish objects
		///	which are related to this object through the relation FK_PG_STUD_PUBLISH_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgStudPublish> PgStudPublishCollection
		{
			get { return entityData.PgStudPublishCollection; }
			set { entityData.PgStudPublishCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsCourseTo objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_COURSE_TO_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsCourseTo> EdStudIntTrnsCourseToCollection
		{
			get { return entityData.EdStudIntTrnsCourseToCollection; }
			set { entityData.EdStudIntTrnsCourseToCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SpoSponsorOfferExt objects
		///	which are related to this object through the relation FK_SPO_SPONSOR_OFFER_EXT_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SpoSponsorOfferExt> SpoSponsorOfferExtCollection
		{
			get { return entityData.SpoSponsorOfferExtCollection; }
			set { entityData.SpoSponsorOfferExtCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrnsStateTo objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_STATE_TO_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrnsStateTo> EdStudIntTrnsStateToCollection
		{
			get { return entityData.EdStudIntTrnsStateToCollection; }
			set { entityData.EdStudIntTrnsStateToCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeStudFeeItem objects
		///	which are related to this object through the relation FK_FEE_STUD_FEE_ITEM_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeStudFeeItem> FeeStudFeeItemCollection
		{
			get { return entityData.FeeStudFeeItemCollection; }
			set { entityData.FeeStudFeeItemCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdPrintReq objects
		///	which are related to this object through the relation FK_ED_PRINT_REQ_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdPrintReq> EdPrintReqCollection
		{
			get { return entityData.EdPrintReqCollection; }
			set { entityData.EdPrintReqCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgStudTravel objects
		///	which are related to this object through the relation FK_PG_STUD_TRAVEL_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgStudTravel> PgStudTravelCollection
		{
			get { return entityData.PgStudTravelCollection; }
			set { entityData.PgStudTravelCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdSemAgendaDtl objects
		///	which are related to this object through the relation FK_ED_SEM_AGENDA_DTL_ED_ACAD_YEAR1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdSemAgendaDtl> EdSemAgendaDtlCollectionGetByTAdmAcadYearId
		{
			get { return entityData.EdSemAgendaDtlCollectionGetByTAdmAcadYearId; }
			set { entityData.EdSemAgendaDtlCollectionGetByTAdmAcadYearId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of AccomStudBook objects
		///	which are related to this object through the relation FK_ACCOM_STUD_BOOK_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<AccomStudBook> AccomStudBookCollection
		{
			get { return entityData.AccomStudBookCollection; }
			set { entityData.AccomStudBookCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntFullfillMdData objects
		///	which are related to this object through the relation FK_ENT_FULLFILL_MD_DATA_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntFullfillMdData> EntFullfillMdDataCollection
		{
			get { return entityData.EntFullfillMdDataCollection; }
			set { entityData.EntFullfillMdDataCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudIntTrns objects
		///	which are related to this object through the relation FK_ED_STUD_INT_TRNS_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudIntTrns> EdStudIntTrnsCollectionGetByEdAcadYearId
		{
			get { return entityData.EdStudIntTrnsCollectionGetByEdAcadYearId; }
			set { entityData.EdStudIntTrnsCollectionGetByEdAcadYearId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvStudComp objects
		///	which are related to this object through the relation FK_SV_STUD_COMP_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvStudComp> SvStudCompCollection
		{
			get { return entityData.SvStudCompCollection; }
			set { entityData.SvStudCompCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudExcuse objects
		///	which are related to this object through the relation FK_ED_STUD_EXCUSE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudExcuse> EdStudExcuseCollection
		{
			get { return entityData.EdStudExcuseCollection; }
			set { entityData.EdStudExcuseCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MdiStudHosptl objects
		///	which are related to this object through the relation FK_MDI_STUD_HOSPTL_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MdiStudHosptl> MdiStudHosptlCollection
		{
			get { return entityData.MdiStudHosptlCollection; }
			set { entityData.MdiStudHosptlCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeCourseExp objects
		///	which are related to this object through the relation FK_FEE_COURSE_EXP_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeCourseExp> FeeCourseExpCollection
		{
			get { return entityData.FeeCourseExpCollection; }
			set { entityData.FeeCourseExpCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SeUserCrsAssess objects
		///	which are related to this object through the relation FK_SE_USER_CRS_ASSESS_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SeUserCrsAssess> SeUserCrsAssessCollection
		{
			get { return entityData.SeUserCrsAssessCollection; }
			set { entityData.SeUserCrsAssessCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudEnrollChange objects
		///	which are related to this object through the relation FK_ED_STUD_ENROLL_CHANGE_ED_ACAD_YEAR1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudEnrollChange> EdStudEnrollChangeCollectionGetByEdAcadYearFromId
		{
			get { return entityData.EdStudEnrollChangeCollectionGetByEdAcadYearFromId; }
			set { entityData.EdStudEnrollChangeCollectionGetByEdAcadYearFromId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of FeeInstlmntRule objects
		///	which are related to this object through the relation FK_FEE_INSTLMNT_RULE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<FeeInstlmntRule> FeeInstlmntRuleCollection
		{
			get { return entityData.FeeInstlmntRuleCollection; }
			set { entityData.FeeInstlmntRuleCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdTraining objects
		///	which are related to this object through the relation FK_ED_TRAINING_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdTraining> EdTrainingCollection
		{
			get { return entityData.EdTrainingCollection; }
			set { entityData.EdTrainingCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of ScSchdlPeriod objects
		///	which are related to this object through the relation FK_SC_SCHDL_PERIOD_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<ScSchdlPeriod> ScSchdlPeriodCollection
		{
			get { return entityData.ScSchdlPeriodCollection; }
			set { entityData.ScSchdlPeriodCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudViol objects
		///	which are related to this object through the relation FK_ED_STUD_VIOL_ED_ACAD_YEAR1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudViol> EdStudViolCollectionGetByEdAcadYearStopFromId
		{
			get { return entityData.EdStudViolCollectionGetByEdAcadYearStopFromId; }
			set { entityData.EdStudViolCollectionGetByEdAcadYearStopFromId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SeBlockTrans objects
		///	which are related to this object through the relation FK_SE_BLOCK_TRANS_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SeBlockTrans> SeBlockTransCollection
		{
			get { return entityData.SeBlockTransCollection; }
			set { entityData.SeBlockTransCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of PgStudConference objects
		///	which are related to this object through the relation FK_PG_STUD_CONFERENCE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgStudConference> PgStudConferenceCollection
		{
			get { return entityData.PgStudConferenceCollection; }
			set { entityData.PgStudConferenceCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of SvLecNote objects
		///	which are related to this object through the relation FK_SV_LEC_NOTE_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<SvLecNote> SvLecNoteCollection
		{
			get { return entityData.SvLecNoteCollection; }
			set { entityData.SvLecNoteCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudSemesterTemp objects
		///	which are related to this object through the relation FK_ED_STUD_SEMESTER_OLD_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudSemesterTemp> EdStudSemesterTempCollection
		{
			get { return entityData.EdStudSemesterTempCollection; }
			set { entityData.EdStudSemesterTempCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStaffCoursePref objects
		///	which are related to this object through the relation FK_ED_STAFF_COURSE_PREF_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStaffCoursePref> EdStaffCoursePrefCollection
		{
			get { return entityData.EdStaffCoursePrefCollection; }
			set { entityData.EdStaffCoursePrefCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of MltRptDayStudSts objects
		///	which are related to this object through the relation FK_MLT_RPT_DAY_STUD_STS_ED_ACAD_YEAR1
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<MltRptDayStudSts> MltRptDayStudStsCollectionGetByEdAcadYearId
		{
			get { return entityData.MltRptDayStudStsCollectionGetByEdAcadYearId; }
			set { entityData.MltRptDayStudStsCollectionGetByEdAcadYearId = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EntCourseMdData objects
		///	which are related to this object through the relation FK_ENT_COURSE_MD_DATA_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EntCourseMdData> EntCourseMdDataCollection
		{
			get { return entityData.EntCourseMdDataCollection; }
			set { entityData.EntCourseMdDataCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of GsComm objects
		///	which are related to this object through the relation FK_GS_COMM_ED_ACAD_YEAR
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<GsComm> GsCommCollection
		{
			get { return entityData.GsCommCollection; }
			set { entityData.GsCommCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("DescrAr", "Descr Ar"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DescrAr", "Descr Ar", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("DescrEn", "Descr En", 50));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("YearCode", "Year Code", 30));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ED_ACAD_YEAR"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ED_ACAD_YEAR_ID", "DESCR_AR", "DESCR_EN", "YEAR_CODE", "YEAR_ORDER", "YEAR_CALENDER", "CURRENT_YEAR", "IS_CLOSED"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as EdAcadYearEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (EdAcadYear) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<EdAcadYear>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as EdAcadYear);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed EdAcadYear Entity 
		///</summary>
		protected virtual EdAcadYear Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			EdAcadYear copy = new EdAcadYear();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.EdAcadYearId = this.EdAcadYearId;
					copy.OriginalEdAcadYearId = this.OriginalEdAcadYearId;
				copy.DescrAr = this.DescrAr;
				copy.DescrEn = this.DescrEn;
				copy.YearCode = this.YearCode;
				copy.YearOrder = this.YearOrder;
				copy.YearCalender = this.YearCalender;
				copy.CurrentYear = this.CurrentYear;
				copy.IsClosed = this.IsClosed;
			
		
			//deep copy nested objects
			copy.EdStudFacultyCollectionGetByEdAcadYearId = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollectionGetByEdAcadYearId, existingCopies); 
			copy.FeeFacultyInstallmentCollection = (TList<FeeFacultyInstallment>) MakeCopyOf(this.FeeFacultyInstallmentCollection, existingCopies); 
			copy.EdStudTransCollection = (TList<EdStudTrans>) MakeCopyOf(this.EdStudTransCollection, existingCopies); 
			copy.FeeAccntYear = (FeeAccntYear) MakeCopyOf(this.FeeAccntYear, existingCopies); 
			copy.WfCrsRsltApproveCollection = (TList<WfCrsRsltApprove>) MakeCopyOf(this.WfCrsRsltApproveCollection, existingCopies); 
			copy.EdAcadYearFacultyCollection = (TList<EdAcadYearFaculty>) MakeCopyOf(this.EdAcadYearFacultyCollection, existingCopies); 
			copy.SaOfficeHourCollection = (TList<SaOfficeHour>) MakeCopyOf(this.SaOfficeHourCollection, existingCopies); 
			copy.SvStaffEvlCollection = (TList<SvStaffEvl>) MakeCopyOf(this.SvStaffEvlCollection, existingCopies); 
			copy.EdStudCourseRegPreCollection = (TList<EdStudCourseRegPre>) MakeCopyOf(this.EdStudCourseRegPreCollection, existingCopies); 
			copy.FeeStudNatSimilarityRequestCollection = (TList<FeeStudNatSimilarityRequest>) MakeCopyOf(this.FeeStudNatSimilarityRequestCollection, existingCopies); 
			copy.AdmOpenAcadSemesterCollection = (TList<AdmOpenAcadSemester>) MakeCopyOf(this.AdmOpenAcadSemesterCollection, existingCopies); 
			copy.EdStudIntTrnsCollectionGetByEdAcadYearReqId = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollectionGetByEdAcadYearReqId, existingCopies); 
			copy.EntCoursePkgMdDataCollection = (TList<EntCoursePkgMdData>) MakeCopyOf(this.EntCoursePkgMdDataCollection, existingCopies); 
			copy.FeeUserBondReqCollection = (TList<FeeUserBondReq>) MakeCopyOf(this.FeeUserBondReqCollection, existingCopies); 
			copy.EdGraduationAwardCollection = (TList<EdGraduationAward>) MakeCopyOf(this.EdGraduationAwardCollection, existingCopies); 
			copy.AccomWfRequestApproveCollection = (TList<AccomWfRequestApprove>) MakeCopyOf(this.AccomWfRequestApproveCollection, existingCopies); 
			copy.ScStudGroupCollection = (TList<ScStudGroup>) MakeCopyOf(this.ScStudGroupCollection, existingCopies); 
			copy.EdProjectCollection = (TList<EdProject>) MakeCopyOf(this.EdProjectCollection, existingCopies); 
			copy.RsrchStudRegisterCollection = (TList<RsrchStudRegister>) MakeCopyOf(this.RsrchStudRegisterCollection, existingCopies); 
			copy.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection, existingCopies); 
			copy.SpoSponsorOfferCollectionGetByEdAcadYearToId = (TList<SpoSponsorOffer>) MakeCopyOf(this.SpoSponsorOfferCollectionGetByEdAcadYearToId, existingCopies); 
			copy.EdCourseTchngCollection = (TList<EdCourseTchng>) MakeCopyOf(this.EdCourseTchngCollection, existingCopies); 
			copy.SpoSponsorStudCollectionGetByEdAcadYearToId = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollectionGetByEdAcadYearToId, existingCopies); 
			copy.EdExamSchdlCollection = (TList<EdExamSchdl>) MakeCopyOf(this.EdExamSchdlCollection, existingCopies); 
			copy.CoControlCollection = (TList<CoControl>) MakeCopyOf(this.CoControlCollection, existingCopies); 
			copy.EdStudAcadWarnCollection = (TList<EdStudAcadWarn>) MakeCopyOf(this.EdStudAcadWarnCollection, existingCopies); 
			copy.EdAcadPlanCollection = (TList<EdAcadPlan>) MakeCopyOf(this.EdAcadPlanCollection, existingCopies); 
			copy.CoCrsRsltRaiseCollection = (TList<CoCrsRsltRaise>) MakeCopyOf(this.CoCrsRsltRaiseCollection, existingCopies); 
			copy.EdStudIntTrnsStateFromCollection = (TList<EdStudIntTrnsStateFrom>) MakeCopyOf(this.EdStudIntTrnsStateFromCollection, existingCopies); 
			copy.SvUserTaskCollection = (TList<SvUserTask>) MakeCopyOf(this.SvUserTaskCollection, existingCopies); 
			copy.MdiStudRecordCollection = (TList<MdiStudRecord>) MakeCopyOf(this.MdiStudRecordCollection, existingCopies); 
			copy.EdStudFacultyCollectionGetByEdAcadYearJoinId = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollectionGetByEdAcadYearJoinId, existingCopies); 
			copy.FeeFacItemAdmYearCollection = (TList<FeeFacItemAdmYear>) MakeCopyOf(this.FeeFacItemAdmYearCollection, existingCopies); 
			copy.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection, existingCopies); 
			copy.FeeStudItemCnclCollection = (TList<FeeStudItemCncl>) MakeCopyOf(this.FeeStudItemCnclCollection, existingCopies); 
			copy.EdStudBranchPrefCollection = (TList<EdStudBranchPref>) MakeCopyOf(this.EdStudBranchPrefCollection, existingCopies); 
			copy.EdAcdadvRmkCollection = (TList<EdAcdadvRmk>) MakeCopyOf(this.EdAcdadvRmkCollection, existingCopies); 
			copy.SvSrvyHdrCollection = (TList<SvSrvyHdr>) MakeCopyOf(this.SvSrvyHdrCollection, existingCopies); 
			copy.FeeStudPayPostponeCollection = (TList<FeeStudPayPostpone>) MakeCopyOf(this.FeeStudPayPostponeCollection, existingCopies); 
			copy.SpoSponsorStudCollectionGetByEdAcadYearId = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollectionGetByEdAcadYearId, existingCopies); 
			copy.FeeLimitRuleCollection = (TList<FeeLimitRule>) MakeCopyOf(this.FeeLimitRuleCollection, existingCopies); 
			copy.MltStudInfoCollection = (TList<MltStudInfo>) MakeCopyOf(this.MltStudInfoCollection, existingCopies); 
			copy.FeeTreasuryReqCollection = (TList<FeeTreasuryReq>) MakeCopyOf(this.FeeTreasuryReqCollection, existingCopies); 
			copy.FeeStudAllowanceCollection = (TList<FeeStudAllowance>) MakeCopyOf(this.FeeStudAllowanceCollection, existingCopies); 
			copy.SpoSponsorOfferCollectionGetByEdAcadYearFromId = (TList<SpoSponsorOffer>) MakeCopyOf(this.SpoSponsorOfferCollectionGetByEdAcadYearFromId, existingCopies); 
			copy.EdStudAcadmicAdvCollection = (TList<EdStudAcadmicAdv>) MakeCopyOf(this.EdStudAcadmicAdvCollection, existingCopies); 
			copy.AccomStudAbsenceWarnCollection = (TList<AccomStudAbsenceWarn>) MakeCopyOf(this.AccomStudAbsenceWarnCollection, existingCopies); 
			copy.EdInttransRuleCollection = (TList<EdInttransRule>) MakeCopyOf(this.EdInttransRuleCollection, existingCopies); 
			copy.ScGroupInfoCollection = (TList<ScGroupInfo>) MakeCopyOf(this.ScGroupInfoCollection, existingCopies); 
			copy.EdStudStateCollection = (TList<EdStudState>) MakeCopyOf(this.EdStudStateCollection, existingCopies); 
			copy.MilCodeCourseCollection = (TList<MilCodeCourse>) MakeCopyOf(this.MilCodeCourseCollection, existingCopies); 
			copy.FeeStudFundCollection = (TList<FeeStudFund>) MakeCopyOf(this.FeeStudFundCollection, existingCopies); 
			copy.EdSemAgendaDtlCollectionGetByFAdmAcadYearId = (TList<EdSemAgendaDtl>) MakeCopyOf(this.EdSemAgendaDtlCollectionGetByFAdmAcadYearId, existingCopies); 
			copy.FeeCdeDiscTypeCollection = (TList<FeeCdeDiscType>) MakeCopyOf(this.FeeCdeDiscTypeCollection, existingCopies); 
			copy.FeeItemTrnsBlncCollection = (TList<FeeItemTrnsBlnc>) MakeCopyOf(this.FeeItemTrnsBlncCollection, existingCopies); 
			copy.FeeStudCoursesItemCollection = (TList<FeeStudCoursesItem>) MakeCopyOf(this.FeeStudCoursesItemCollection, existingCopies); 
			copy.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection, existingCopies); 
			copy.EdSemesterOpenCollection = (TList<EdSemesterOpen>) MakeCopyOf(this.EdSemesterOpenCollection, existingCopies); 
			copy.FeeTreasuryCollection = (TList<FeeTreasury>) MakeCopyOf(this.FeeTreasuryCollection, existingCopies); 
			copy.CtrStudExpCollection = (TList<CtrStudExp>) MakeCopyOf(this.CtrStudExpCollection, existingCopies); 
			copy.MdiStudClnqCollection = (TList<MdiStudClnq>) MakeCopyOf(this.MdiStudClnqCollection, existingCopies); 
			copy.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection, existingCopies); 
			copy.GsAgendaHolidayCollection = (TList<GsAgendaHoliday>) MakeCopyOf(this.GsAgendaHolidayCollection, existingCopies); 
			copy.EdStudViolCollectionGetByEdAcadYearId = (TList<EdStudViol>) MakeCopyOf(this.EdStudViolCollectionGetByEdAcadYearId, existingCopies); 
			copy.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection, existingCopies); 
			copy.AccomStudAbsenceCollection = (TList<AccomStudAbsence>) MakeCopyOf(this.AccomStudAbsenceCollection, existingCopies); 
			copy.TrnsLineCollection = (TList<TrnsLine>) MakeCopyOf(this.TrnsLineCollection, existingCopies); 
			copy.PgOfferingCollection = (TList<PgOffering>) MakeCopyOf(this.PgOfferingCollection, existingCopies); 
			copy.EntPolcyGrdngHdrCollection = (TList<EntPolcyGrdngHdr>) MakeCopyOf(this.EntPolcyGrdngHdrCollection, existingCopies); 
			copy.EntCoursePkgHdrCollection = (TList<EntCoursePkgHdr>) MakeCopyOf(this.EntCoursePkgHdrCollection, existingCopies); 
			copy.EdStudTransFromReqCollection = (TList<EdStudTransFromReq>) MakeCopyOf(this.EdStudTransFromReqCollection, existingCopies); 
			copy.FeeStudInstallmentCollection = (TList<FeeStudInstallment>) MakeCopyOf(this.FeeStudInstallmentCollection, existingCopies); 
			copy.AdmFeePromocodeCollection = (TList<AdmFeePromocode>) MakeCopyOf(this.AdmFeePromocodeCollection, existingCopies); 
			copy.EdBranchRuleCollection = (TList<EdBranchRule>) MakeCopyOf(this.EdBranchRuleCollection, existingCopies); 
			copy.SpoSponsorStudSemesterCollection = (TList<SpoSponsorStudSemester>) MakeCopyOf(this.SpoSponsorStudSemesterCollection, existingCopies); 
			copy.FeeFacultyRuleCollection = (TList<FeeFacultyRule>) MakeCopyOf(this.FeeFacultyRuleCollection, existingCopies); 
			copy.EdStudProblemCollection = (TList<EdStudProblem>) MakeCopyOf(this.EdStudProblemCollection, existingCopies); 
			copy.FeeItemSemesterCollection = (TList<FeeItemSemester>) MakeCopyOf(this.FeeItemSemesterCollection, existingCopies); 
			copy.ScSectionGroupHdrCollection = (TList<ScSectionGroupHdr>) MakeCopyOf(this.ScSectionGroupHdrCollection, existingCopies); 
			copy.CtrStudOutCollection = (TList<CtrStudOut>) MakeCopyOf(this.CtrStudOutCollection, existingCopies); 
			copy.SpoOfferStudExceptionCollection = (TList<SpoOfferStudException>) MakeCopyOf(this.SpoOfferStudExceptionCollection, existingCopies); 
			copy.FeeAccomItemCollection = (TList<FeeAccomItem>) MakeCopyOf(this.FeeAccomItemCollection, existingCopies); 
			copy.TrnsStudReqCollection = (TList<TrnsStudReq>) MakeCopyOf(this.TrnsStudReqCollection, existingCopies); 
			copy.EdStudExmptReqCollection = (TList<EdStudExmptReq>) MakeCopyOf(this.EdStudExmptReqCollection, existingCopies); 
			copy.FeeStudRetrieveRequestCollection = (TList<FeeStudRetrieveRequest>) MakeCopyOf(this.FeeStudRetrieveRequestCollection, existingCopies); 
			copy.SvCourseEvalCollection = (TList<SvCourseEval>) MakeCopyOf(this.SvCourseEvalCollection, existingCopies); 
			copy.EdStudViolCollectionGetByEdAcadYearStopToId = (TList<EdStudViol>) MakeCopyOf(this.EdStudViolCollectionGetByEdAcadYearStopToId, existingCopies); 
			copy.FeeBusLineItemCollection = (TList<FeeBusLineItem>) MakeCopyOf(this.FeeBusLineItemCollection, existingCopies); 
			copy.AdmAppRegHistoryCollection = (TList<AdmAppRegHistory>) MakeCopyOf(this.AdmAppRegHistoryCollection, existingCopies); 
			copy.EdStudSemesterCollection = (TList<EdStudSemester>) MakeCopyOf(this.EdStudSemesterCollection, existingCopies); 
			copy.PgThesisGrantDegreeCollection = (TList<PgThesisGrantDegree>) MakeCopyOf(this.PgThesisGrantDegreeCollection, existingCopies); 
			copy.EdStudExecuseReqCollection = (TList<EdStudExecuseReq>) MakeCopyOf(this.EdStudExecuseReqCollection, existingCopies); 
			copy.FeeUserFundReqCollection = (TList<FeeUserFundReq>) MakeCopyOf(this.FeeUserFundReqCollection, existingCopies); 
			copy.EdOfferingCollection = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollection, existingCopies); 
			copy.EdBylawCollection = (TList<EdBylaw>) MakeCopyOf(this.EdBylawCollection, existingCopies); 
			copy.EdStudAbsenceCollection = (TList<EdStudAbsence>) MakeCopyOf(this.EdStudAbsenceCollection, existingCopies); 
			copy.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection, existingCopies); 
			copy.FeeStudInstallmentRequestCollection = (TList<FeeStudInstallmentRequest>) MakeCopyOf(this.FeeStudInstallmentRequestCollection, existingCopies); 
			copy.EdStudStateTempCollection = (TList<EdStudStateTemp>) MakeCopyOf(this.EdStudStateTempCollection, existingCopies); 
			copy.MltRptDayStudStsCollectionGetByEdAcadYearJoinId = (TList<MltRptDayStudSts>) MakeCopyOf(this.MltRptDayStudStsCollectionGetByEdAcadYearJoinId, existingCopies); 
			copy.EntPrecondMdDataCollection = (TList<EntPrecondMdData>) MakeCopyOf(this.EntPrecondMdDataCollection, existingCopies); 
			copy.SaServTerminCollection = (TList<SaServTermin>) MakeCopyOf(this.SaServTerminCollection, existingCopies); 
			copy.TrnsStudCarStkrCollection = (TList<TrnsStudCarStkr>) MakeCopyOf(this.TrnsStudCarStkrCollection, existingCopies); 
			copy.SvMessageCollection = (TList<SvMessage>) MakeCopyOf(this.SvMessageCollection, existingCopies); 
			copy.EdStudEnrollChangeCollectionGetByEdAcadYearToId = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollectionGetByEdAcadYearToId, existingCopies); 
			copy.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection, existingCopies); 
			copy.FeeStudVoucherCollection = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollection, existingCopies); 
			copy.AccomStudReqCollection = (TList<AccomStudReq>) MakeCopyOf(this.AccomStudReqCollection, existingCopies); 
			copy.RsrchStudPostponeReqCollection = (TList<RsrchStudPostponeReq>) MakeCopyOf(this.RsrchStudPostponeReqCollection, existingCopies); 
			copy.SvStudAskAdvCollection = (TList<SvStudAskAdv>) MakeCopyOf(this.SvStudAskAdvCollection, existingCopies); 
			copy.PgStudPublishCollection = (TList<PgStudPublish>) MakeCopyOf(this.PgStudPublishCollection, existingCopies); 
			copy.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection, existingCopies); 
			copy.SpoSponsorOfferExtCollection = (TList<SpoSponsorOfferExt>) MakeCopyOf(this.SpoSponsorOfferExtCollection, existingCopies); 
			copy.EdStudIntTrnsStateToCollection = (TList<EdStudIntTrnsStateTo>) MakeCopyOf(this.EdStudIntTrnsStateToCollection, existingCopies); 
			copy.FeeStudFeeItemCollection = (TList<FeeStudFeeItem>) MakeCopyOf(this.FeeStudFeeItemCollection, existingCopies); 
			copy.EdPrintReqCollection = (TList<EdPrintReq>) MakeCopyOf(this.EdPrintReqCollection, existingCopies); 
			copy.PgStudTravelCollection = (TList<PgStudTravel>) MakeCopyOf(this.PgStudTravelCollection, existingCopies); 
			copy.EdSemAgendaDtlCollectionGetByTAdmAcadYearId = (TList<EdSemAgendaDtl>) MakeCopyOf(this.EdSemAgendaDtlCollectionGetByTAdmAcadYearId, existingCopies); 
			copy.AccomStudBookCollection = (TList<AccomStudBook>) MakeCopyOf(this.AccomStudBookCollection, existingCopies); 
			copy.EntFullfillMdDataCollection = (TList<EntFullfillMdData>) MakeCopyOf(this.EntFullfillMdDataCollection, existingCopies); 
			copy.EdStudIntTrnsCollectionGetByEdAcadYearId = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollectionGetByEdAcadYearId, existingCopies); 
			copy.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection, existingCopies); 
			copy.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection, existingCopies); 
			copy.MdiStudHosptlCollection = (TList<MdiStudHosptl>) MakeCopyOf(this.MdiStudHosptlCollection, existingCopies); 
			copy.FeeCourseExpCollection = (TList<FeeCourseExp>) MakeCopyOf(this.FeeCourseExpCollection, existingCopies); 
			copy.SeUserCrsAssessCollection = (TList<SeUserCrsAssess>) MakeCopyOf(this.SeUserCrsAssessCollection, existingCopies); 
			copy.EdStudEnrollChangeCollectionGetByEdAcadYearFromId = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollectionGetByEdAcadYearFromId, existingCopies); 
			copy.FeeInstlmntRuleCollection = (TList<FeeInstlmntRule>) MakeCopyOf(this.FeeInstlmntRuleCollection, existingCopies); 
			copy.EdTrainingCollection = (TList<EdTraining>) MakeCopyOf(this.EdTrainingCollection, existingCopies); 
			copy.ScSchdlPeriodCollection = (TList<ScSchdlPeriod>) MakeCopyOf(this.ScSchdlPeriodCollection, existingCopies); 
			copy.EdStudViolCollectionGetByEdAcadYearStopFromId = (TList<EdStudViol>) MakeCopyOf(this.EdStudViolCollectionGetByEdAcadYearStopFromId, existingCopies); 
			copy.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection, existingCopies); 
			copy.PgStudConferenceCollection = (TList<PgStudConference>) MakeCopyOf(this.PgStudConferenceCollection, existingCopies); 
			copy.SvLecNoteCollection = (TList<SvLecNote>) MakeCopyOf(this.SvLecNoteCollection, existingCopies); 
			copy.EdStudSemesterTempCollection = (TList<EdStudSemesterTemp>) MakeCopyOf(this.EdStudSemesterTempCollection, existingCopies); 
			copy.EdStaffCoursePrefCollection = (TList<EdStaffCoursePref>) MakeCopyOf(this.EdStaffCoursePrefCollection, existingCopies); 
			copy.MltRptDayStudStsCollectionGetByEdAcadYearId = (TList<MltRptDayStudSts>) MakeCopyOf(this.MltRptDayStudStsCollectionGetByEdAcadYearId, existingCopies); 
			copy.EntCourseMdDataCollection = (TList<EntCourseMdData>) MakeCopyOf(this.EntCourseMdDataCollection, existingCopies); 
			copy.GsCommCollection = (TList<GsComm>) MakeCopyOf(this.GsCommCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed EdAcadYear Entity 
		///</summary>
		public virtual EdAcadYear Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed EdAcadYear Entity which is a deep copy of the current entity.
		///</summary>
		public virtual EdAcadYear DeepCopy()
		{
			return EntityHelper.Clone<EdAcadYear>(this as EdAcadYear);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as EdAcadYearEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new EdAcadYearEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as EdAcadYearEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(EdAcadYearColumn column)
		{
			switch(column)
			{
					case EdAcadYearColumn.EdAcadYearId:
					return entityData.EdAcadYearId != _originalData.EdAcadYearId;
					case EdAcadYearColumn.DescrAr:
					return entityData.DescrAr != _originalData.DescrAr;
					case EdAcadYearColumn.DescrEn:
					return entityData.DescrEn != _originalData.DescrEn;
					case EdAcadYearColumn.YearCode:
					return entityData.YearCode != _originalData.YearCode;
					case EdAcadYearColumn.YearOrder:
					return entityData.YearOrder != _originalData.YearOrder;
					case EdAcadYearColumn.YearCalender:
					return entityData.YearCalender != _originalData.YearCalender;
					case EdAcadYearColumn.CurrentYear:
					return entityData.CurrentYear != _originalData.CurrentYear;
					case EdAcadYearColumn.IsClosed:
					return entityData.IsClosed != _originalData.IsClosed;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< EdAcadYearColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.EdAcadYearId != _originalData.EdAcadYearId;
			result = result || entityData.DescrAr != _originalData.DescrAr;
			result = result || entityData.DescrEn != _originalData.DescrEn;
			result = result || entityData.YearCode != _originalData.YearCode;
			result = result || entityData.YearOrder != _originalData.YearOrder;
			result = result || entityData.YearCalender != _originalData.YearCalender;
			result = result || entityData.CurrentYear != _originalData.CurrentYear;
			result = result || entityData.IsClosed != _originalData.IsClosed;
			return result;
		}	
		
		///<summary>
		///  Returns a EdAcadYear Entity with the original data.
		///</summary>
		public EdAcadYear GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateEdAcadYear(
				_originalData.EdAcadYearId,
				_originalData.DescrAr,
				_originalData.DescrEn,
				_originalData.YearCode,
				_originalData.YearOrder,
				_originalData.YearCalender,
				_originalData.CurrentYear,
				_originalData.IsClosed
				);
				
			return (EdAcadYear)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="EdAcadYearBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is EdAcadYearBase)
				return ValueEquals(this, (EdAcadYearBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="EdAcadYearBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.EdAcadYearId.GetHashCode() ^ 
					this.DescrAr.GetHashCode() ^ 
					((this.DescrEn == null) ? string.Empty : this.DescrEn.ToString()).GetHashCode() ^ 
					((this.YearCode == null) ? string.Empty : this.YearCode.ToString()).GetHashCode() ^ 
					this.YearOrder.GetHashCode() ^ 
					this.YearCalender.GetHashCode() ^ 
					this.CurrentYear.GetHashCode() ^ 
					((this.IsClosed == null) ? string.Empty : this.IsClosed.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="EdAcadYearBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(EdAcadYearBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="EdAcadYearBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="EdAcadYearBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="EdAcadYearBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(EdAcadYearBase Object1, EdAcadYearBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.EdAcadYearId != Object2.EdAcadYearId)
				equal = false;
			if (Object1.DescrAr != Object2.DescrAr)
				equal = false;
			if ( Object1.DescrEn != null && Object2.DescrEn != null )
			{
				if (Object1.DescrEn != Object2.DescrEn)
					equal = false;
			}
			else if (Object1.DescrEn == null ^ Object2.DescrEn == null )
			{
				equal = false;
			}
			if ( Object1.YearCode != null && Object2.YearCode != null )
			{
				if (Object1.YearCode != Object2.YearCode)
					equal = false;
			}
			else if (Object1.YearCode == null ^ Object2.YearCode == null )
			{
				equal = false;
			}
			if (Object1.YearOrder != Object2.YearOrder)
				equal = false;
			if (Object1.YearCalender != Object2.YearCalender)
				equal = false;
			if (Object1.CurrentYear != Object2.CurrentYear)
				equal = false;
			if ( Object1.IsClosed != null && Object2.IsClosed != null )
			{
				if (Object1.IsClosed != Object2.IsClosed)
					equal = false;
			}
			else if (Object1.IsClosed == null ^ Object2.IsClosed == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((EdAcadYearBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static EdAcadYearComparer GetComparer()
        {
            return new EdAcadYearComparer();
        }
        */

        // Comparer delegates back to EdAcadYear
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(EdAcadYear rhs, EdAcadYearColumn which)
        {
            switch (which)
            {
            	
            	
            	case EdAcadYearColumn.EdAcadYearId:
            		return this.EdAcadYearId.CompareTo(rhs.EdAcadYearId);
            		
            		                 
            	
            	
            	case EdAcadYearColumn.DescrAr:
            		return this.DescrAr.CompareTo(rhs.DescrAr);
            		
            		                 
            	
            	
            	case EdAcadYearColumn.DescrEn:
            		return this.DescrEn.CompareTo(rhs.DescrEn);
            		
            		                 
            	
            	
            	case EdAcadYearColumn.YearCode:
            		return this.YearCode.CompareTo(rhs.YearCode);
            		
            		                 
            	
            	
            	case EdAcadYearColumn.YearOrder:
            		return this.YearOrder.CompareTo(rhs.YearOrder);
            		
            		                 
            	
            	
            	case EdAcadYearColumn.YearCalender:
            		return this.YearCalender.CompareTo(rhs.YearCalender);
            		
            		                 
            	
            	
            	case EdAcadYearColumn.CurrentYear:
            		return this.CurrentYear.CompareTo(rhs.CurrentYear);
            		
            		                 
            	
            	
            	case EdAcadYearColumn.IsClosed:
            		return this.IsClosed.Value.CompareTo(rhs.IsClosed.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<EdAcadYearKey> Members
		
		// member variable for the EntityId property
		private EdAcadYearKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual EdAcadYearKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new EdAcadYearKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("EdAcadYear")
					.Append("|").Append( this.EdAcadYearId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{9}{8}- EdAcadYearId: {0}{8}- DescrAr: {1}{8}- DescrEn: {2}{8}- YearCode: {3}{8}- YearOrder: {4}{8}- YearCalender: {5}{8}- CurrentYear: {6}{8}- IsClosed: {7}{8}{10}", 
				this.EdAcadYearId,
				this.DescrAr,
				(this.DescrEn == null) ? string.Empty : this.DescrEn.ToString(),
				(this.YearCode == null) ? string.Empty : this.YearCode.ToString(),
				this.YearOrder,
				this.YearCalender,
				this.CurrentYear,
				(this.IsClosed == null) ? string.Empty : this.IsClosed.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ED_ACAD_YEAR' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class EdAcadYearEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ED_ACAD_YEAR_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ED_ACAD_YEAR"</remarks>
		public System.Decimal EdAcadYearId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalEdAcadYearId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// DESCR_AR : 
		/// </summary>
		public System.String		  DescrAr = string.Empty;
		
		/// <summary>
		/// DESCR_EN : 
		/// </summary>
		public System.String		  DescrEn = null;
		
		/// <summary>
		/// YEAR_CODE : 
		/// </summary>
		public System.String		  YearCode = null;
		
		/// <summary>
		/// YEAR_ORDER : 
		/// </summary>
		public System.Decimal		  YearOrder = 0.0m;
		
		/// <summary>
		/// YEAR_CALENDER : 
		/// </summary>
		public System.Decimal		  YearCalender = 0.0m;
		
		/// <summary>
		/// CURRENT_YEAR : XXXX
		/// </summary>
		public System.Decimal		  CurrentYear = 0.0m;
		
		/// <summary>
		/// IS_CLOSED : XXX
		/// </summary>
		public System.Decimal?		  IsClosed = null;
		#endregion
			
		#region Source Foreign Key Property
				
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region EdStudFacultyCollectionGetByEdAcadYearId
		
		private TList<EdStudFaculty> _edStudFacultyEdAcadYearJoinIdGetByEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudFacultyEdAcadYearJoinIdGetByEdAcadYearId
		/// </summary>
		
		public TList<EdStudFaculty> EdStudFacultyCollectionGetByEdAcadYearId
		{
			get
			{
				if (_edStudFacultyEdAcadYearJoinIdGetByEdAcadYearId == null)
				{
				_edStudFacultyEdAcadYearJoinIdGetByEdAcadYearId = new TList<EdStudFaculty>();
				}
	
				return _edStudFacultyEdAcadYearJoinIdGetByEdAcadYearId;
			}
			set { _edStudFacultyEdAcadYearJoinIdGetByEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeFacultyInstallmentCollection
		
		private TList<FeeFacultyInstallment> _feeFacultyInstallmentEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeFacultyInstallmentEdAcadYearId
		/// </summary>
		
		public TList<FeeFacultyInstallment> FeeFacultyInstallmentCollection
		{
			get
			{
				if (_feeFacultyInstallmentEdAcadYearId == null)
				{
				_feeFacultyInstallmentEdAcadYearId = new TList<FeeFacultyInstallment>();
				}
	
				return _feeFacultyInstallmentEdAcadYearId;
			}
			set { _feeFacultyInstallmentEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudTransCollection
		
		private TList<EdStudTrans> _edStudTransEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudTransEdAcadYearId
		/// </summary>
		
		public TList<EdStudTrans> EdStudTransCollection
		{
			get
			{
				if (_edStudTransEdAcadYearId == null)
				{
				_edStudTransEdAcadYearId = new TList<EdStudTrans>();
				}
	
				return _edStudTransEdAcadYearId;
			}
			set { _edStudTransEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeAccntYear
		
		private FeeAccntYear _feeAccntYearEdAcadYearId;
		
		/// <summary>
		///	Holds a  FeeAccntYear entity object
		///	which is related to this object through the relation _feeAccntYearEdAcadYearId
		/// </summary>
		
		public FeeAccntYear FeeAccntYear
		{
			get {		return _feeAccntYearEdAcadYearId;		}
			set { 	_feeAccntYearEdAcadYearId = value; 	}
		}
		
		#endregion 

		#region WfCrsRsltApproveCollection
		
		private TList<WfCrsRsltApprove> _wfCrsRsltApproveEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _wfCrsRsltApproveEdAcadYearId
		/// </summary>
		
		public TList<WfCrsRsltApprove> WfCrsRsltApproveCollection
		{
			get
			{
				if (_wfCrsRsltApproveEdAcadYearId == null)
				{
				_wfCrsRsltApproveEdAcadYearId = new TList<WfCrsRsltApprove>();
				}
	
				return _wfCrsRsltApproveEdAcadYearId;
			}
			set { _wfCrsRsltApproveEdAcadYearId = value; }
		}
		
		#endregion

		#region EdAcadYearFacultyCollection
		
		private TList<EdAcadYearFaculty> _edAcadYearFacultyEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edAcadYearFacultyEdAcadYearId
		/// </summary>
		
		public TList<EdAcadYearFaculty> EdAcadYearFacultyCollection
		{
			get
			{
				if (_edAcadYearFacultyEdAcadYearId == null)
				{
				_edAcadYearFacultyEdAcadYearId = new TList<EdAcadYearFaculty>();
				}
	
				return _edAcadYearFacultyEdAcadYearId;
			}
			set { _edAcadYearFacultyEdAcadYearId = value; }
		}
		
		#endregion

		#region SaOfficeHourCollection
		
		private TList<SaOfficeHour> _saOfficeHourEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saOfficeHourEdAcadYearId
		/// </summary>
		
		public TList<SaOfficeHour> SaOfficeHourCollection
		{
			get
			{
				if (_saOfficeHourEdAcadYearId == null)
				{
				_saOfficeHourEdAcadYearId = new TList<SaOfficeHour>();
				}
	
				return _saOfficeHourEdAcadYearId;
			}
			set { _saOfficeHourEdAcadYearId = value; }
		}
		
		#endregion

		#region SvStaffEvlCollection
		
		private TList<SvStaffEvl> _svStaffEvlEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStaffEvlEdAcadYearId
		/// </summary>
		
		public TList<SvStaffEvl> SvStaffEvlCollection
		{
			get
			{
				if (_svStaffEvlEdAcadYearId == null)
				{
				_svStaffEvlEdAcadYearId = new TList<SvStaffEvl>();
				}
	
				return _svStaffEvlEdAcadYearId;
			}
			set { _svStaffEvlEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudCourseRegPreCollection
		
		private TList<EdStudCourseRegPre> _edStudCourseRegPreEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudCourseRegPreEdAcadYearId
		/// </summary>
		
		public TList<EdStudCourseRegPre> EdStudCourseRegPreCollection
		{
			get
			{
				if (_edStudCourseRegPreEdAcadYearId == null)
				{
				_edStudCourseRegPreEdAcadYearId = new TList<EdStudCourseRegPre>();
				}
	
				return _edStudCourseRegPreEdAcadYearId;
			}
			set { _edStudCourseRegPreEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeStudNatSimilarityRequestCollection
		
		private TList<FeeStudNatSimilarityRequest> _feeStudNatSimilarityRequestEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudNatSimilarityRequestEdAcadYearId
		/// </summary>
		
		public TList<FeeStudNatSimilarityRequest> FeeStudNatSimilarityRequestCollection
		{
			get
			{
				if (_feeStudNatSimilarityRequestEdAcadYearId == null)
				{
				_feeStudNatSimilarityRequestEdAcadYearId = new TList<FeeStudNatSimilarityRequest>();
				}
	
				return _feeStudNatSimilarityRequestEdAcadYearId;
			}
			set { _feeStudNatSimilarityRequestEdAcadYearId = value; }
		}
		
		#endregion

		#region AdmOpenAcadSemesterCollection
		
		private TList<AdmOpenAcadSemester> _admOpenAcadSemesterEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admOpenAcadSemesterEdAcadYearId
		/// </summary>
		
		public TList<AdmOpenAcadSemester> AdmOpenAcadSemesterCollection
		{
			get
			{
				if (_admOpenAcadSemesterEdAcadYearId == null)
				{
				_admOpenAcadSemesterEdAcadYearId = new TList<AdmOpenAcadSemester>();
				}
	
				return _admOpenAcadSemesterEdAcadYearId;
			}
			set { _admOpenAcadSemesterEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsCollectionGetByEdAcadYearReqId
		
		private TList<EdStudIntTrns> _edStudIntTrnsEdAcadYearReqIdGetByEdAcadYearReqId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsEdAcadYearReqIdGetByEdAcadYearReqId
		/// </summary>
		
		public TList<EdStudIntTrns> EdStudIntTrnsCollectionGetByEdAcadYearReqId
		{
			get
			{
				if (_edStudIntTrnsEdAcadYearReqIdGetByEdAcadYearReqId == null)
				{
				_edStudIntTrnsEdAcadYearReqIdGetByEdAcadYearReqId = new TList<EdStudIntTrns>();
				}
	
				return _edStudIntTrnsEdAcadYearReqIdGetByEdAcadYearReqId;
			}
			set { _edStudIntTrnsEdAcadYearReqIdGetByEdAcadYearReqId = value; }
		}
		
		#endregion

		#region EntCoursePkgMdDataCollection
		
		private TList<EntCoursePkgMdData> _entCoursePkgMdDataEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entCoursePkgMdDataEdAcadYearId
		/// </summary>
		
		public TList<EntCoursePkgMdData> EntCoursePkgMdDataCollection
		{
			get
			{
				if (_entCoursePkgMdDataEdAcadYearId == null)
				{
				_entCoursePkgMdDataEdAcadYearId = new TList<EntCoursePkgMdData>();
				}
	
				return _entCoursePkgMdDataEdAcadYearId;
			}
			set { _entCoursePkgMdDataEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeUserBondReqCollection
		
		private TList<FeeUserBondReq> _feeUserBondReqEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeUserBondReqEdAcadYearId
		/// </summary>
		
		public TList<FeeUserBondReq> FeeUserBondReqCollection
		{
			get
			{
				if (_feeUserBondReqEdAcadYearId == null)
				{
				_feeUserBondReqEdAcadYearId = new TList<FeeUserBondReq>();
				}
	
				return _feeUserBondReqEdAcadYearId;
			}
			set { _feeUserBondReqEdAcadYearId = value; }
		}
		
		#endregion

		#region EdGraduationAwardCollection
		
		private TList<EdGraduationAward> _edGraduationAwardEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edGraduationAwardEdAcadYearId
		/// </summary>
		
		public TList<EdGraduationAward> EdGraduationAwardCollection
		{
			get
			{
				if (_edGraduationAwardEdAcadYearId == null)
				{
				_edGraduationAwardEdAcadYearId = new TList<EdGraduationAward>();
				}
	
				return _edGraduationAwardEdAcadYearId;
			}
			set { _edGraduationAwardEdAcadYearId = value; }
		}
		
		#endregion

		#region AccomWfRequestApproveCollection
		
		private TList<AccomWfRequestApprove> _accomWfRequestApproveEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomWfRequestApproveEdAcadYearId
		/// </summary>
		
		public TList<AccomWfRequestApprove> AccomWfRequestApproveCollection
		{
			get
			{
				if (_accomWfRequestApproveEdAcadYearId == null)
				{
				_accomWfRequestApproveEdAcadYearId = new TList<AccomWfRequestApprove>();
				}
	
				return _accomWfRequestApproveEdAcadYearId;
			}
			set { _accomWfRequestApproveEdAcadYearId = value; }
		}
		
		#endregion

		#region ScStudGroupCollection
		
		private TList<ScStudGroup> _scStudGroupEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scStudGroupEdAcadYearId
		/// </summary>
		
		public TList<ScStudGroup> ScStudGroupCollection
		{
			get
			{
				if (_scStudGroupEdAcadYearId == null)
				{
				_scStudGroupEdAcadYearId = new TList<ScStudGroup>();
				}
	
				return _scStudGroupEdAcadYearId;
			}
			set { _scStudGroupEdAcadYearId = value; }
		}
		
		#endregion

		#region EdProjectCollection
		
		private TList<EdProject> _edProjectEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edProjectEdAcadYearId
		/// </summary>
		
		public TList<EdProject> EdProjectCollection
		{
			get
			{
				if (_edProjectEdAcadYearId == null)
				{
				_edProjectEdAcadYearId = new TList<EdProject>();
				}
	
				return _edProjectEdAcadYearId;
			}
			set { _edProjectEdAcadYearId = value; }
		}
		
		#endregion

		#region RsrchStudRegisterCollection
		
		private TList<RsrchStudRegister> _rsrchStudRegisterEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _rsrchStudRegisterEdAcadYearId
		/// </summary>
		
		public TList<RsrchStudRegister> RsrchStudRegisterCollection
		{
			get
			{
				if (_rsrchStudRegisterEdAcadYearId == null)
				{
				_rsrchStudRegisterEdAcadYearId = new TList<RsrchStudRegister>();
				}
	
				return _rsrchStudRegisterEdAcadYearId;
			}
			set { _rsrchStudRegisterEdAcadYearId = value; }
		}
		
		#endregion

		#region EdCourseOutcomesTopicsCollection
		
		private TList<EdCourseOutcomesTopics> _edCourseOutcomesTopicsEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseOutcomesTopicsEdAcadYearId
		/// </summary>
		
		public TList<EdCourseOutcomesTopics> EdCourseOutcomesTopicsCollection
		{
			get
			{
				if (_edCourseOutcomesTopicsEdAcadYearId == null)
				{
				_edCourseOutcomesTopicsEdAcadYearId = new TList<EdCourseOutcomesTopics>();
				}
	
				return _edCourseOutcomesTopicsEdAcadYearId;
			}
			set { _edCourseOutcomesTopicsEdAcadYearId = value; }
		}
		
		#endregion

		#region SpoSponsorOfferCollectionGetByEdAcadYearToId
		
		private TList<SpoSponsorOffer> _spoSponsorOfferEdAcadYearToIdGetByEdAcadYearToId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorOfferEdAcadYearToIdGetByEdAcadYearToId
		/// </summary>
		
		public TList<SpoSponsorOffer> SpoSponsorOfferCollectionGetByEdAcadYearToId
		{
			get
			{
				if (_spoSponsorOfferEdAcadYearToIdGetByEdAcadYearToId == null)
				{
				_spoSponsorOfferEdAcadYearToIdGetByEdAcadYearToId = new TList<SpoSponsorOffer>();
				}
	
				return _spoSponsorOfferEdAcadYearToIdGetByEdAcadYearToId;
			}
			set { _spoSponsorOfferEdAcadYearToIdGetByEdAcadYearToId = value; }
		}
		
		#endregion

		#region EdCourseTchngCollection
		
		private TList<EdCourseTchng> _edCourseTchngEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edCourseTchngEdAcadYearId
		/// </summary>
		
		public TList<EdCourseTchng> EdCourseTchngCollection
		{
			get
			{
				if (_edCourseTchngEdAcadYearId == null)
				{
				_edCourseTchngEdAcadYearId = new TList<EdCourseTchng>();
				}
	
				return _edCourseTchngEdAcadYearId;
			}
			set { _edCourseTchngEdAcadYearId = value; }
		}
		
		#endregion

		#region SpoSponsorStudCollectionGetByEdAcadYearToId
		
		private TList<SpoSponsorStud> _spoSponsorStudEdAcadYearToIdGetByEdAcadYearToId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorStudEdAcadYearToIdGetByEdAcadYearToId
		/// </summary>
		
		public TList<SpoSponsorStud> SpoSponsorStudCollectionGetByEdAcadYearToId
		{
			get
			{
				if (_spoSponsorStudEdAcadYearToIdGetByEdAcadYearToId == null)
				{
				_spoSponsorStudEdAcadYearToIdGetByEdAcadYearToId = new TList<SpoSponsorStud>();
				}
	
				return _spoSponsorStudEdAcadYearToIdGetByEdAcadYearToId;
			}
			set { _spoSponsorStudEdAcadYearToIdGetByEdAcadYearToId = value; }
		}
		
		#endregion

		#region EdExamSchdlCollection
		
		private TList<EdExamSchdl> _edExamSchdlEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edExamSchdlEdAcadYearId
		/// </summary>
		
		public TList<EdExamSchdl> EdExamSchdlCollection
		{
			get
			{
				if (_edExamSchdlEdAcadYearId == null)
				{
				_edExamSchdlEdAcadYearId = new TList<EdExamSchdl>();
				}
	
				return _edExamSchdlEdAcadYearId;
			}
			set { _edExamSchdlEdAcadYearId = value; }
		}
		
		#endregion

		#region CoControlCollection
		
		private TList<CoControl> _coControlEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coControlEdAcadYearId
		/// </summary>
		
		public TList<CoControl> CoControlCollection
		{
			get
			{
				if (_coControlEdAcadYearId == null)
				{
				_coControlEdAcadYearId = new TList<CoControl>();
				}
	
				return _coControlEdAcadYearId;
			}
			set { _coControlEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudAcadWarnCollection
		
		private TList<EdStudAcadWarn> _edStudAcadWarnEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAcadWarnEdAcadYearId
		/// </summary>
		
		public TList<EdStudAcadWarn> EdStudAcadWarnCollection
		{
			get
			{
				if (_edStudAcadWarnEdAcadYearId == null)
				{
				_edStudAcadWarnEdAcadYearId = new TList<EdStudAcadWarn>();
				}
	
				return _edStudAcadWarnEdAcadYearId;
			}
			set { _edStudAcadWarnEdAcadYearId = value; }
		}
		
		#endregion

		#region EdAcadPlanCollection
		
		private TList<EdAcadPlan> _edAcadPlanEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edAcadPlanEdAcadYearId
		/// </summary>
		
		public TList<EdAcadPlan> EdAcadPlanCollection
		{
			get
			{
				if (_edAcadPlanEdAcadYearId == null)
				{
				_edAcadPlanEdAcadYearId = new TList<EdAcadPlan>();
				}
	
				return _edAcadPlanEdAcadYearId;
			}
			set { _edAcadPlanEdAcadYearId = value; }
		}
		
		#endregion

		#region CoCrsRsltRaiseCollection
		
		private TList<CoCrsRsltRaise> _coCrsRsltRaiseEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _coCrsRsltRaiseEdAcadYearId
		/// </summary>
		
		public TList<CoCrsRsltRaise> CoCrsRsltRaiseCollection
		{
			get
			{
				if (_coCrsRsltRaiseEdAcadYearId == null)
				{
				_coCrsRsltRaiseEdAcadYearId = new TList<CoCrsRsltRaise>();
				}
	
				return _coCrsRsltRaiseEdAcadYearId;
			}
			set { _coCrsRsltRaiseEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsStateFromCollection
		
		private TList<EdStudIntTrnsStateFrom> _edStudIntTrnsStateFromEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsStateFromEdAcadYearId
		/// </summary>
		
		public TList<EdStudIntTrnsStateFrom> EdStudIntTrnsStateFromCollection
		{
			get
			{
				if (_edStudIntTrnsStateFromEdAcadYearId == null)
				{
				_edStudIntTrnsStateFromEdAcadYearId = new TList<EdStudIntTrnsStateFrom>();
				}
	
				return _edStudIntTrnsStateFromEdAcadYearId;
			}
			set { _edStudIntTrnsStateFromEdAcadYearId = value; }
		}
		
		#endregion

		#region SvUserTaskCollection
		
		private TList<SvUserTask> _svUserTaskEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svUserTaskEdAcadYearId
		/// </summary>
		
		public TList<SvUserTask> SvUserTaskCollection
		{
			get
			{
				if (_svUserTaskEdAcadYearId == null)
				{
				_svUserTaskEdAcadYearId = new TList<SvUserTask>();
				}
	
				return _svUserTaskEdAcadYearId;
			}
			set { _svUserTaskEdAcadYearId = value; }
		}
		
		#endregion

		#region MdiStudRecordCollection
		
		private TList<MdiStudRecord> _mdiStudRecordEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mdiStudRecordEdAcadYearId
		/// </summary>
		
		public TList<MdiStudRecord> MdiStudRecordCollection
		{
			get
			{
				if (_mdiStudRecordEdAcadYearId == null)
				{
				_mdiStudRecordEdAcadYearId = new TList<MdiStudRecord>();
				}
	
				return _mdiStudRecordEdAcadYearId;
			}
			set { _mdiStudRecordEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudFacultyCollectionGetByEdAcadYearJoinId
		
		private TList<EdStudFaculty> _edStudFacultyEdAcadYearJoinIdGetByEdAcadYearJoinId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudFacultyEdAcadYearJoinIdGetByEdAcadYearJoinId
		/// </summary>
		
		public TList<EdStudFaculty> EdStudFacultyCollectionGetByEdAcadYearJoinId
		{
			get
			{
				if (_edStudFacultyEdAcadYearJoinIdGetByEdAcadYearJoinId == null)
				{
				_edStudFacultyEdAcadYearJoinIdGetByEdAcadYearJoinId = new TList<EdStudFaculty>();
				}
	
				return _edStudFacultyEdAcadYearJoinIdGetByEdAcadYearJoinId;
			}
			set { _edStudFacultyEdAcadYearJoinIdGetByEdAcadYearJoinId = value; }
		}
		
		#endregion

		#region FeeFacItemAdmYearCollection
		
		private TList<FeeFacItemAdmYear> _feeFacItemAdmYearEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeFacItemAdmYearEdAcadYearId
		/// </summary>
		
		public TList<FeeFacItemAdmYear> FeeFacItemAdmYearCollection
		{
			get
			{
				if (_feeFacItemAdmYearEdAcadYearId == null)
				{
				_feeFacItemAdmYearEdAcadYearId = new TList<FeeFacItemAdmYear>();
				}
	
				return _feeFacItemAdmYearEdAcadYearId;
			}
			set { _feeFacItemAdmYearEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudLatenessCollection
		
		private TList<EdStudLateness> _edStudLatenessEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudLatenessEdAcadYearId
		/// </summary>
		
		public TList<EdStudLateness> EdStudLatenessCollection
		{
			get
			{
				if (_edStudLatenessEdAcadYearId == null)
				{
				_edStudLatenessEdAcadYearId = new TList<EdStudLateness>();
				}
	
				return _edStudLatenessEdAcadYearId;
			}
			set { _edStudLatenessEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeStudItemCnclCollection
		
		private TList<FeeStudItemCncl> _feeStudItemCnclEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudItemCnclEdAcadYearId
		/// </summary>
		
		public TList<FeeStudItemCncl> FeeStudItemCnclCollection
		{
			get
			{
				if (_feeStudItemCnclEdAcadYearId == null)
				{
				_feeStudItemCnclEdAcadYearId = new TList<FeeStudItemCncl>();
				}
	
				return _feeStudItemCnclEdAcadYearId;
			}
			set { _feeStudItemCnclEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudBranchPrefCollection
		
		private TList<EdStudBranchPref> _edStudBranchPrefEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudBranchPrefEdAcadYearId
		/// </summary>
		
		public TList<EdStudBranchPref> EdStudBranchPrefCollection
		{
			get
			{
				if (_edStudBranchPrefEdAcadYearId == null)
				{
				_edStudBranchPrefEdAcadYearId = new TList<EdStudBranchPref>();
				}
	
				return _edStudBranchPrefEdAcadYearId;
			}
			set { _edStudBranchPrefEdAcadYearId = value; }
		}
		
		#endregion

		#region EdAcdadvRmkCollection
		
		private TList<EdAcdadvRmk> _edAcdadvRmkEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edAcdadvRmkEdAcadYearId
		/// </summary>
		
		public TList<EdAcdadvRmk> EdAcdadvRmkCollection
		{
			get
			{
				if (_edAcdadvRmkEdAcadYearId == null)
				{
				_edAcdadvRmkEdAcadYearId = new TList<EdAcdadvRmk>();
				}
	
				return _edAcdadvRmkEdAcadYearId;
			}
			set { _edAcdadvRmkEdAcadYearId = value; }
		}
		
		#endregion

		#region SvSrvyHdrCollection
		
		private TList<SvSrvyHdr> _svSrvyHdrEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svSrvyHdrEdAcadYearId
		/// </summary>
		
		public TList<SvSrvyHdr> SvSrvyHdrCollection
		{
			get
			{
				if (_svSrvyHdrEdAcadYearId == null)
				{
				_svSrvyHdrEdAcadYearId = new TList<SvSrvyHdr>();
				}
	
				return _svSrvyHdrEdAcadYearId;
			}
			set { _svSrvyHdrEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeStudPayPostponeCollection
		
		private TList<FeeStudPayPostpone> _feeStudPayPostponeEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudPayPostponeEdAcadYearId
		/// </summary>
		
		public TList<FeeStudPayPostpone> FeeStudPayPostponeCollection
		{
			get
			{
				if (_feeStudPayPostponeEdAcadYearId == null)
				{
				_feeStudPayPostponeEdAcadYearId = new TList<FeeStudPayPostpone>();
				}
	
				return _feeStudPayPostponeEdAcadYearId;
			}
			set { _feeStudPayPostponeEdAcadYearId = value; }
		}
		
		#endregion

		#region SpoSponsorStudCollectionGetByEdAcadYearId
		
		private TList<SpoSponsorStud> _spoSponsorStudEdAcadYearToIdGetByEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorStudEdAcadYearToIdGetByEdAcadYearId
		/// </summary>
		
		public TList<SpoSponsorStud> SpoSponsorStudCollectionGetByEdAcadYearId
		{
			get
			{
				if (_spoSponsorStudEdAcadYearToIdGetByEdAcadYearId == null)
				{
				_spoSponsorStudEdAcadYearToIdGetByEdAcadYearId = new TList<SpoSponsorStud>();
				}
	
				return _spoSponsorStudEdAcadYearToIdGetByEdAcadYearId;
			}
			set { _spoSponsorStudEdAcadYearToIdGetByEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeLimitRuleCollection
		
		private TList<FeeLimitRule> _feeLimitRuleEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeLimitRuleEdAcadYearId
		/// </summary>
		
		public TList<FeeLimitRule> FeeLimitRuleCollection
		{
			get
			{
				if (_feeLimitRuleEdAcadYearId == null)
				{
				_feeLimitRuleEdAcadYearId = new TList<FeeLimitRule>();
				}
	
				return _feeLimitRuleEdAcadYearId;
			}
			set { _feeLimitRuleEdAcadYearId = value; }
		}
		
		#endregion

		#region MltStudInfoCollection
		
		private TList<MltStudInfo> _mltStudInfoEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mltStudInfoEdAcadYearId
		/// </summary>
		
		public TList<MltStudInfo> MltStudInfoCollection
		{
			get
			{
				if (_mltStudInfoEdAcadYearId == null)
				{
				_mltStudInfoEdAcadYearId = new TList<MltStudInfo>();
				}
	
				return _mltStudInfoEdAcadYearId;
			}
			set { _mltStudInfoEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeTreasuryReqCollection
		
		private TList<FeeTreasuryReq> _feeTreasuryReqEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeTreasuryReqEdAcadYearId
		/// </summary>
		
		public TList<FeeTreasuryReq> FeeTreasuryReqCollection
		{
			get
			{
				if (_feeTreasuryReqEdAcadYearId == null)
				{
				_feeTreasuryReqEdAcadYearId = new TList<FeeTreasuryReq>();
				}
	
				return _feeTreasuryReqEdAcadYearId;
			}
			set { _feeTreasuryReqEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeStudAllowanceCollection
		
		private TList<FeeStudAllowance> _feeStudAllowanceEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudAllowanceEdAcadYearId
		/// </summary>
		
		public TList<FeeStudAllowance> FeeStudAllowanceCollection
		{
			get
			{
				if (_feeStudAllowanceEdAcadYearId == null)
				{
				_feeStudAllowanceEdAcadYearId = new TList<FeeStudAllowance>();
				}
	
				return _feeStudAllowanceEdAcadYearId;
			}
			set { _feeStudAllowanceEdAcadYearId = value; }
		}
		
		#endregion

		#region SpoSponsorOfferCollectionGetByEdAcadYearFromId
		
		private TList<SpoSponsorOffer> _spoSponsorOfferEdAcadYearToIdGetByEdAcadYearFromId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorOfferEdAcadYearToIdGetByEdAcadYearFromId
		/// </summary>
		
		public TList<SpoSponsorOffer> SpoSponsorOfferCollectionGetByEdAcadYearFromId
		{
			get
			{
				if (_spoSponsorOfferEdAcadYearToIdGetByEdAcadYearFromId == null)
				{
				_spoSponsorOfferEdAcadYearToIdGetByEdAcadYearFromId = new TList<SpoSponsorOffer>();
				}
	
				return _spoSponsorOfferEdAcadYearToIdGetByEdAcadYearFromId;
			}
			set { _spoSponsorOfferEdAcadYearToIdGetByEdAcadYearFromId = value; }
		}
		
		#endregion

		#region EdStudAcadmicAdvCollection
		
		private TList<EdStudAcadmicAdv> _edStudAcadmicAdvEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAcadmicAdvEdAcadYearId
		/// </summary>
		
		public TList<EdStudAcadmicAdv> EdStudAcadmicAdvCollection
		{
			get
			{
				if (_edStudAcadmicAdvEdAcadYearId == null)
				{
				_edStudAcadmicAdvEdAcadYearId = new TList<EdStudAcadmicAdv>();
				}
	
				return _edStudAcadmicAdvEdAcadYearId;
			}
			set { _edStudAcadmicAdvEdAcadYearId = value; }
		}
		
		#endregion

		#region AccomStudAbsenceWarnCollection
		
		private TList<AccomStudAbsenceWarn> _accomStudAbsenceWarnEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomStudAbsenceWarnEdAcadYearId
		/// </summary>
		
		public TList<AccomStudAbsenceWarn> AccomStudAbsenceWarnCollection
		{
			get
			{
				if (_accomStudAbsenceWarnEdAcadYearId == null)
				{
				_accomStudAbsenceWarnEdAcadYearId = new TList<AccomStudAbsenceWarn>();
				}
	
				return _accomStudAbsenceWarnEdAcadYearId;
			}
			set { _accomStudAbsenceWarnEdAcadYearId = value; }
		}
		
		#endregion

		#region EdInttransRuleCollection
		
		private TList<EdInttransRule> _edInttransRuleEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edInttransRuleEdAcadYearId
		/// </summary>
		
		public TList<EdInttransRule> EdInttransRuleCollection
		{
			get
			{
				if (_edInttransRuleEdAcadYearId == null)
				{
				_edInttransRuleEdAcadYearId = new TList<EdInttransRule>();
				}
	
				return _edInttransRuleEdAcadYearId;
			}
			set { _edInttransRuleEdAcadYearId = value; }
		}
		
		#endregion

		#region ScGroupInfoCollection
		
		private TList<ScGroupInfo> _scGroupInfoEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scGroupInfoEdAcadYearId
		/// </summary>
		
		public TList<ScGroupInfo> ScGroupInfoCollection
		{
			get
			{
				if (_scGroupInfoEdAcadYearId == null)
				{
				_scGroupInfoEdAcadYearId = new TList<ScGroupInfo>();
				}
	
				return _scGroupInfoEdAcadYearId;
			}
			set { _scGroupInfoEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudStateCollection
		
		private TList<EdStudState> _edStudStateEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudStateEdAcadYearId
		/// </summary>
		
		public TList<EdStudState> EdStudStateCollection
		{
			get
			{
				if (_edStudStateEdAcadYearId == null)
				{
				_edStudStateEdAcadYearId = new TList<EdStudState>();
				}
	
				return _edStudStateEdAcadYearId;
			}
			set { _edStudStateEdAcadYearId = value; }
		}
		
		#endregion

		#region MilCodeCourseCollection
		
		private TList<MilCodeCourse> _milCodeCourseEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _milCodeCourseEdAcadYearId
		/// </summary>
		
		public TList<MilCodeCourse> MilCodeCourseCollection
		{
			get
			{
				if (_milCodeCourseEdAcadYearId == null)
				{
				_milCodeCourseEdAcadYearId = new TList<MilCodeCourse>();
				}
	
				return _milCodeCourseEdAcadYearId;
			}
			set { _milCodeCourseEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeStudFundCollection
		
		private TList<FeeStudFund> _feeStudFundEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudFundEdAcadYearId
		/// </summary>
		
		public TList<FeeStudFund> FeeStudFundCollection
		{
			get
			{
				if (_feeStudFundEdAcadYearId == null)
				{
				_feeStudFundEdAcadYearId = new TList<FeeStudFund>();
				}
	
				return _feeStudFundEdAcadYearId;
			}
			set { _feeStudFundEdAcadYearId = value; }
		}
		
		#endregion

		#region EdSemAgendaDtlCollectionGetByFAdmAcadYearId
		
		private TList<EdSemAgendaDtl> _edSemAgendaDtlTAdmAcadYearIdGetByFAdmAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edSemAgendaDtlTAdmAcadYearIdGetByFAdmAcadYearId
		/// </summary>
		
		public TList<EdSemAgendaDtl> EdSemAgendaDtlCollectionGetByFAdmAcadYearId
		{
			get
			{
				if (_edSemAgendaDtlTAdmAcadYearIdGetByFAdmAcadYearId == null)
				{
				_edSemAgendaDtlTAdmAcadYearIdGetByFAdmAcadYearId = new TList<EdSemAgendaDtl>();
				}
	
				return _edSemAgendaDtlTAdmAcadYearIdGetByFAdmAcadYearId;
			}
			set { _edSemAgendaDtlTAdmAcadYearIdGetByFAdmAcadYearId = value; }
		}
		
		#endregion

		#region FeeCdeDiscTypeCollection
		
		private TList<FeeCdeDiscType> _feeCdeDiscTypeEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeCdeDiscTypeEdAcadYearId
		/// </summary>
		
		public TList<FeeCdeDiscType> FeeCdeDiscTypeCollection
		{
			get
			{
				if (_feeCdeDiscTypeEdAcadYearId == null)
				{
				_feeCdeDiscTypeEdAcadYearId = new TList<FeeCdeDiscType>();
				}
	
				return _feeCdeDiscTypeEdAcadYearId;
			}
			set { _feeCdeDiscTypeEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeItemTrnsBlncCollection
		
		private TList<FeeItemTrnsBlnc> _feeItemTrnsBlncEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeItemTrnsBlncEdAcadYearId
		/// </summary>
		
		public TList<FeeItemTrnsBlnc> FeeItemTrnsBlncCollection
		{
			get
			{
				if (_feeItemTrnsBlncEdAcadYearId == null)
				{
				_feeItemTrnsBlncEdAcadYearId = new TList<FeeItemTrnsBlnc>();
				}
	
				return _feeItemTrnsBlncEdAcadYearId;
			}
			set { _feeItemTrnsBlncEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeStudCoursesItemCollection
		
		private TList<FeeStudCoursesItem> _feeStudCoursesItemEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudCoursesItemEdAcadYearId
		/// </summary>
		
		public TList<FeeStudCoursesItem> FeeStudCoursesItemCollection
		{
			get
			{
				if (_feeStudCoursesItemEdAcadYearId == null)
				{
				_feeStudCoursesItemEdAcadYearId = new TList<FeeStudCoursesItem>();
				}
	
				return _feeStudCoursesItemEdAcadYearId;
			}
			set { _feeStudCoursesItemEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeStudDiscCollection
		
		private TList<FeeStudDisc> _feeStudDiscEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudDiscEdAcadYearId
		/// </summary>
		
		public TList<FeeStudDisc> FeeStudDiscCollection
		{
			get
			{
				if (_feeStudDiscEdAcadYearId == null)
				{
				_feeStudDiscEdAcadYearId = new TList<FeeStudDisc>();
				}
	
				return _feeStudDiscEdAcadYearId;
			}
			set { _feeStudDiscEdAcadYearId = value; }
		}
		
		#endregion

		#region EdSemesterOpenCollection
		
		private TList<EdSemesterOpen> _edSemesterOpenEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edSemesterOpenEdAcadYearId
		/// </summary>
		
		public TList<EdSemesterOpen> EdSemesterOpenCollection
		{
			get
			{
				if (_edSemesterOpenEdAcadYearId == null)
				{
				_edSemesterOpenEdAcadYearId = new TList<EdSemesterOpen>();
				}
	
				return _edSemesterOpenEdAcadYearId;
			}
			set { _edSemesterOpenEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeTreasuryCollection
		
		private TList<FeeTreasury> _feeTreasuryEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeTreasuryEdAcadYearId
		/// </summary>
		
		public TList<FeeTreasury> FeeTreasuryCollection
		{
			get
			{
				if (_feeTreasuryEdAcadYearId == null)
				{
				_feeTreasuryEdAcadYearId = new TList<FeeTreasury>();
				}
	
				return _feeTreasuryEdAcadYearId;
			}
			set { _feeTreasuryEdAcadYearId = value; }
		}
		
		#endregion

		#region CtrStudExpCollection
		
		private TList<CtrStudExp> _ctrStudExpEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _ctrStudExpEdAcadYearId
		/// </summary>
		
		public TList<CtrStudExp> CtrStudExpCollection
		{
			get
			{
				if (_ctrStudExpEdAcadYearId == null)
				{
				_ctrStudExpEdAcadYearId = new TList<CtrStudExp>();
				}
	
				return _ctrStudExpEdAcadYearId;
			}
			set { _ctrStudExpEdAcadYearId = value; }
		}
		
		#endregion

		#region MdiStudClnqCollection
		
		private TList<MdiStudClnq> _mdiStudClnqEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mdiStudClnqEdAcadYearId
		/// </summary>
		
		public TList<MdiStudClnq> MdiStudClnqCollection
		{
			get
			{
				if (_mdiStudClnqEdAcadYearId == null)
				{
				_mdiStudClnqEdAcadYearId = new TList<MdiStudClnq>();
				}
	
				return _mdiStudClnqEdAcadYearId;
			}
			set { _mdiStudClnqEdAcadYearId = value; }
		}
		
		#endregion

		#region PgThesisStudCollection
		
		private TList<PgThesisStud> _pgThesisStudEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisStudEdAcadYearId
		/// </summary>
		
		public TList<PgThesisStud> PgThesisStudCollection
		{
			get
			{
				if (_pgThesisStudEdAcadYearId == null)
				{
				_pgThesisStudEdAcadYearId = new TList<PgThesisStud>();
				}
	
				return _pgThesisStudEdAcadYearId;
			}
			set { _pgThesisStudEdAcadYearId = value; }
		}
		
		#endregion

		#region GsAgendaHolidayCollection
		
		private TList<GsAgendaHoliday> _gsAgendaHolidayEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _gsAgendaHolidayEdAcadYearId
		/// </summary>
		
		public TList<GsAgendaHoliday> GsAgendaHolidayCollection
		{
			get
			{
				if (_gsAgendaHolidayEdAcadYearId == null)
				{
				_gsAgendaHolidayEdAcadYearId = new TList<GsAgendaHoliday>();
				}
	
				return _gsAgendaHolidayEdAcadYearId;
			}
			set { _gsAgendaHolidayEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudViolCollectionGetByEdAcadYearId
		
		private TList<EdStudViol> _edStudViolEdAcadYearStopToIdGetByEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudViolEdAcadYearStopToIdGetByEdAcadYearId
		/// </summary>
		
		public TList<EdStudViol> EdStudViolCollectionGetByEdAcadYearId
		{
			get
			{
				if (_edStudViolEdAcadYearStopToIdGetByEdAcadYearId == null)
				{
				_edStudViolEdAcadYearStopToIdGetByEdAcadYearId = new TList<EdStudViol>();
				}
	
				return _edStudViolEdAcadYearStopToIdGetByEdAcadYearId;
			}
			set { _edStudViolEdAcadYearStopToIdGetByEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsCourseFromCollection
		
		private TList<EdStudIntTrnsCourseFrom> _edStudIntTrnsCourseFromEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsCourseFromEdAcadYearId
		/// </summary>
		
		public TList<EdStudIntTrnsCourseFrom> EdStudIntTrnsCourseFromCollection
		{
			get
			{
				if (_edStudIntTrnsCourseFromEdAcadYearId == null)
				{
				_edStudIntTrnsCourseFromEdAcadYearId = new TList<EdStudIntTrnsCourseFrom>();
				}
	
				return _edStudIntTrnsCourseFromEdAcadYearId;
			}
			set { _edStudIntTrnsCourseFromEdAcadYearId = value; }
		}
		
		#endregion

		#region AccomStudAbsenceCollection
		
		private TList<AccomStudAbsence> _accomStudAbsenceEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomStudAbsenceEdAcadYearId
		/// </summary>
		
		public TList<AccomStudAbsence> AccomStudAbsenceCollection
		{
			get
			{
				if (_accomStudAbsenceEdAcadYearId == null)
				{
				_accomStudAbsenceEdAcadYearId = new TList<AccomStudAbsence>();
				}
	
				return _accomStudAbsenceEdAcadYearId;
			}
			set { _accomStudAbsenceEdAcadYearId = value; }
		}
		
		#endregion

		#region TrnsLineCollection
		
		private TList<TrnsLine> _trnsLineEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _trnsLineEdAcadYearId
		/// </summary>
		
		public TList<TrnsLine> TrnsLineCollection
		{
			get
			{
				if (_trnsLineEdAcadYearId == null)
				{
				_trnsLineEdAcadYearId = new TList<TrnsLine>();
				}
	
				return _trnsLineEdAcadYearId;
			}
			set { _trnsLineEdAcadYearId = value; }
		}
		
		#endregion

		#region PgOfferingCollection
		
		private TList<PgOffering> _pgOfferingEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgOfferingEdAcadYearId
		/// </summary>
		
		public TList<PgOffering> PgOfferingCollection
		{
			get
			{
				if (_pgOfferingEdAcadYearId == null)
				{
				_pgOfferingEdAcadYearId = new TList<PgOffering>();
				}
	
				return _pgOfferingEdAcadYearId;
			}
			set { _pgOfferingEdAcadYearId = value; }
		}
		
		#endregion

		#region EntPolcyGrdngHdrCollection
		
		private TList<EntPolcyGrdngHdr> _entPolcyGrdngHdrEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entPolcyGrdngHdrEdAcadYearId
		/// </summary>
		
		public TList<EntPolcyGrdngHdr> EntPolcyGrdngHdrCollection
		{
			get
			{
				if (_entPolcyGrdngHdrEdAcadYearId == null)
				{
				_entPolcyGrdngHdrEdAcadYearId = new TList<EntPolcyGrdngHdr>();
				}
	
				return _entPolcyGrdngHdrEdAcadYearId;
			}
			set { _entPolcyGrdngHdrEdAcadYearId = value; }
		}
		
		#endregion

		#region EntCoursePkgHdrCollection
		
		private TList<EntCoursePkgHdr> _entCoursePkgHdrEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entCoursePkgHdrEdAcadYearId
		/// </summary>
		
		public TList<EntCoursePkgHdr> EntCoursePkgHdrCollection
		{
			get
			{
				if (_entCoursePkgHdrEdAcadYearId == null)
				{
				_entCoursePkgHdrEdAcadYearId = new TList<EntCoursePkgHdr>();
				}
	
				return _entCoursePkgHdrEdAcadYearId;
			}
			set { _entCoursePkgHdrEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudTransFromReqCollection
		
		private TList<EdStudTransFromReq> _edStudTransFromReqEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudTransFromReqEdAcadYearId
		/// </summary>
		
		public TList<EdStudTransFromReq> EdStudTransFromReqCollection
		{
			get
			{
				if (_edStudTransFromReqEdAcadYearId == null)
				{
				_edStudTransFromReqEdAcadYearId = new TList<EdStudTransFromReq>();
				}
	
				return _edStudTransFromReqEdAcadYearId;
			}
			set { _edStudTransFromReqEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeStudInstallmentCollection
		
		private TList<FeeStudInstallment> _feeStudInstallmentEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudInstallmentEdAcadYearId
		/// </summary>
		
		public TList<FeeStudInstallment> FeeStudInstallmentCollection
		{
			get
			{
				if (_feeStudInstallmentEdAcadYearId == null)
				{
				_feeStudInstallmentEdAcadYearId = new TList<FeeStudInstallment>();
				}
	
				return _feeStudInstallmentEdAcadYearId;
			}
			set { _feeStudInstallmentEdAcadYearId = value; }
		}
		
		#endregion

		#region AdmFeePromocodeCollection
		
		private TList<AdmFeePromocode> _admFeePromocodeEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admFeePromocodeEdAcadYearId
		/// </summary>
		
		public TList<AdmFeePromocode> AdmFeePromocodeCollection
		{
			get
			{
				if (_admFeePromocodeEdAcadYearId == null)
				{
				_admFeePromocodeEdAcadYearId = new TList<AdmFeePromocode>();
				}
	
				return _admFeePromocodeEdAcadYearId;
			}
			set { _admFeePromocodeEdAcadYearId = value; }
		}
		
		#endregion

		#region EdBranchRuleCollection
		
		private TList<EdBranchRule> _edBranchRuleEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edBranchRuleEdAcadYearId
		/// </summary>
		
		public TList<EdBranchRule> EdBranchRuleCollection
		{
			get
			{
				if (_edBranchRuleEdAcadYearId == null)
				{
				_edBranchRuleEdAcadYearId = new TList<EdBranchRule>();
				}
	
				return _edBranchRuleEdAcadYearId;
			}
			set { _edBranchRuleEdAcadYearId = value; }
		}
		
		#endregion

		#region SpoSponsorStudSemesterCollection
		
		private TList<SpoSponsorStudSemester> _spoSponsorStudSemesterEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorStudSemesterEdAcadYearId
		/// </summary>
		
		public TList<SpoSponsorStudSemester> SpoSponsorStudSemesterCollection
		{
			get
			{
				if (_spoSponsorStudSemesterEdAcadYearId == null)
				{
				_spoSponsorStudSemesterEdAcadYearId = new TList<SpoSponsorStudSemester>();
				}
	
				return _spoSponsorStudSemesterEdAcadYearId;
			}
			set { _spoSponsorStudSemesterEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeFacultyRuleCollection
		
		private TList<FeeFacultyRule> _feeFacultyRuleEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeFacultyRuleEdAcadYearId
		/// </summary>
		
		public TList<FeeFacultyRule> FeeFacultyRuleCollection
		{
			get
			{
				if (_feeFacultyRuleEdAcadYearId == null)
				{
				_feeFacultyRuleEdAcadYearId = new TList<FeeFacultyRule>();
				}
	
				return _feeFacultyRuleEdAcadYearId;
			}
			set { _feeFacultyRuleEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudProblemCollection
		
		private TList<EdStudProblem> _edStudProblemEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudProblemEdAcadYearId
		/// </summary>
		
		public TList<EdStudProblem> EdStudProblemCollection
		{
			get
			{
				if (_edStudProblemEdAcadYearId == null)
				{
				_edStudProblemEdAcadYearId = new TList<EdStudProblem>();
				}
	
				return _edStudProblemEdAcadYearId;
			}
			set { _edStudProblemEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeItemSemesterCollection
		
		private TList<FeeItemSemester> _feeItemSemesterEdAcadYearJoinId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeItemSemesterEdAcadYearJoinId
		/// </summary>
		
		public TList<FeeItemSemester> FeeItemSemesterCollection
		{
			get
			{
				if (_feeItemSemesterEdAcadYearJoinId == null)
				{
				_feeItemSemesterEdAcadYearJoinId = new TList<FeeItemSemester>();
				}
	
				return _feeItemSemesterEdAcadYearJoinId;
			}
			set { _feeItemSemesterEdAcadYearJoinId = value; }
		}
		
		#endregion

		#region ScSectionGroupHdrCollection
		
		private TList<ScSectionGroupHdr> _scSectionGroupHdrEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scSectionGroupHdrEdAcadYearId
		/// </summary>
		
		public TList<ScSectionGroupHdr> ScSectionGroupHdrCollection
		{
			get
			{
				if (_scSectionGroupHdrEdAcadYearId == null)
				{
				_scSectionGroupHdrEdAcadYearId = new TList<ScSectionGroupHdr>();
				}
	
				return _scSectionGroupHdrEdAcadYearId;
			}
			set { _scSectionGroupHdrEdAcadYearId = value; }
		}
		
		#endregion

		#region CtrStudOutCollection
		
		private TList<CtrStudOut> _ctrStudOutEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _ctrStudOutEdAcadYearId
		/// </summary>
		
		public TList<CtrStudOut> CtrStudOutCollection
		{
			get
			{
				if (_ctrStudOutEdAcadYearId == null)
				{
				_ctrStudOutEdAcadYearId = new TList<CtrStudOut>();
				}
	
				return _ctrStudOutEdAcadYearId;
			}
			set { _ctrStudOutEdAcadYearId = value; }
		}
		
		#endregion

		#region SpoOfferStudExceptionCollection
		
		private TList<SpoOfferStudException> _spoOfferStudExceptionEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoOfferStudExceptionEdAcadYearId
		/// </summary>
		
		public TList<SpoOfferStudException> SpoOfferStudExceptionCollection
		{
			get
			{
				if (_spoOfferStudExceptionEdAcadYearId == null)
				{
				_spoOfferStudExceptionEdAcadYearId = new TList<SpoOfferStudException>();
				}
	
				return _spoOfferStudExceptionEdAcadYearId;
			}
			set { _spoOfferStudExceptionEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeAccomItemCollection
		
		private TList<FeeAccomItem> _feeAccomItemEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeAccomItemEdAcadYearId
		/// </summary>
		
		public TList<FeeAccomItem> FeeAccomItemCollection
		{
			get
			{
				if (_feeAccomItemEdAcadYearId == null)
				{
				_feeAccomItemEdAcadYearId = new TList<FeeAccomItem>();
				}
	
				return _feeAccomItemEdAcadYearId;
			}
			set { _feeAccomItemEdAcadYearId = value; }
		}
		
		#endregion

		#region TrnsStudReqCollection
		
		private TList<TrnsStudReq> _trnsStudReqEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _trnsStudReqEdAcadYearId
		/// </summary>
		
		public TList<TrnsStudReq> TrnsStudReqCollection
		{
			get
			{
				if (_trnsStudReqEdAcadYearId == null)
				{
				_trnsStudReqEdAcadYearId = new TList<TrnsStudReq>();
				}
	
				return _trnsStudReqEdAcadYearId;
			}
			set { _trnsStudReqEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudExmptReqCollection
		
		private TList<EdStudExmptReq> _edStudExmptReqEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudExmptReqEdAcadYearId
		/// </summary>
		
		public TList<EdStudExmptReq> EdStudExmptReqCollection
		{
			get
			{
				if (_edStudExmptReqEdAcadYearId == null)
				{
				_edStudExmptReqEdAcadYearId = new TList<EdStudExmptReq>();
				}
	
				return _edStudExmptReqEdAcadYearId;
			}
			set { _edStudExmptReqEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeStudRetrieveRequestCollection
		
		private TList<FeeStudRetrieveRequest> _feeStudRetrieveRequestEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudRetrieveRequestEdAcadYearId
		/// </summary>
		
		public TList<FeeStudRetrieveRequest> FeeStudRetrieveRequestCollection
		{
			get
			{
				if (_feeStudRetrieveRequestEdAcadYearId == null)
				{
				_feeStudRetrieveRequestEdAcadYearId = new TList<FeeStudRetrieveRequest>();
				}
	
				return _feeStudRetrieveRequestEdAcadYearId;
			}
			set { _feeStudRetrieveRequestEdAcadYearId = value; }
		}
		
		#endregion

		#region SvCourseEvalCollection
		
		private TList<SvCourseEval> _svCourseEvalEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svCourseEvalEdAcadYearId
		/// </summary>
		
		public TList<SvCourseEval> SvCourseEvalCollection
		{
			get
			{
				if (_svCourseEvalEdAcadYearId == null)
				{
				_svCourseEvalEdAcadYearId = new TList<SvCourseEval>();
				}
	
				return _svCourseEvalEdAcadYearId;
			}
			set { _svCourseEvalEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudViolCollectionGetByEdAcadYearStopToId
		
		private TList<EdStudViol> _edStudViolEdAcadYearStopToIdGetByEdAcadYearStopToId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudViolEdAcadYearStopToIdGetByEdAcadYearStopToId
		/// </summary>
		
		public TList<EdStudViol> EdStudViolCollectionGetByEdAcadYearStopToId
		{
			get
			{
				if (_edStudViolEdAcadYearStopToIdGetByEdAcadYearStopToId == null)
				{
				_edStudViolEdAcadYearStopToIdGetByEdAcadYearStopToId = new TList<EdStudViol>();
				}
	
				return _edStudViolEdAcadYearStopToIdGetByEdAcadYearStopToId;
			}
			set { _edStudViolEdAcadYearStopToIdGetByEdAcadYearStopToId = value; }
		}
		
		#endregion

		#region FeeBusLineItemCollection
		
		private TList<FeeBusLineItem> _feeBusLineItemEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeBusLineItemEdAcadYearId
		/// </summary>
		
		public TList<FeeBusLineItem> FeeBusLineItemCollection
		{
			get
			{
				if (_feeBusLineItemEdAcadYearId == null)
				{
				_feeBusLineItemEdAcadYearId = new TList<FeeBusLineItem>();
				}
	
				return _feeBusLineItemEdAcadYearId;
			}
			set { _feeBusLineItemEdAcadYearId = value; }
		}
		
		#endregion

		#region AdmAppRegHistoryCollection
		
		private TList<AdmAppRegHistory> _admAppRegHistoryEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _admAppRegHistoryEdAcadYearId
		/// </summary>
		
		public TList<AdmAppRegHistory> AdmAppRegHistoryCollection
		{
			get
			{
				if (_admAppRegHistoryEdAcadYearId == null)
				{
				_admAppRegHistoryEdAcadYearId = new TList<AdmAppRegHistory>();
				}
	
				return _admAppRegHistoryEdAcadYearId;
			}
			set { _admAppRegHistoryEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudSemesterCollection
		
		private TList<EdStudSemester> _edStudSemesterEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudSemesterEdAcadYearId
		/// </summary>
		
		public TList<EdStudSemester> EdStudSemesterCollection
		{
			get
			{
				if (_edStudSemesterEdAcadYearId == null)
				{
				_edStudSemesterEdAcadYearId = new TList<EdStudSemester>();
				}
	
				return _edStudSemesterEdAcadYearId;
			}
			set { _edStudSemesterEdAcadYearId = value; }
		}
		
		#endregion

		#region PgThesisGrantDegreeCollection
		
		private TList<PgThesisGrantDegree> _pgThesisGrantDegreeEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisGrantDegreeEdAcadYearId
		/// </summary>
		
		public TList<PgThesisGrantDegree> PgThesisGrantDegreeCollection
		{
			get
			{
				if (_pgThesisGrantDegreeEdAcadYearId == null)
				{
				_pgThesisGrantDegreeEdAcadYearId = new TList<PgThesisGrantDegree>();
				}
	
				return _pgThesisGrantDegreeEdAcadYearId;
			}
			set { _pgThesisGrantDegreeEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudExecuseReqCollection
		
		private TList<EdStudExecuseReq> _edStudExecuseReqEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudExecuseReqEdAcadYearId
		/// </summary>
		
		public TList<EdStudExecuseReq> EdStudExecuseReqCollection
		{
			get
			{
				if (_edStudExecuseReqEdAcadYearId == null)
				{
				_edStudExecuseReqEdAcadYearId = new TList<EdStudExecuseReq>();
				}
	
				return _edStudExecuseReqEdAcadYearId;
			}
			set { _edStudExecuseReqEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeUserFundReqCollection
		
		private TList<FeeUserFundReq> _feeUserFundReqEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeUserFundReqEdAcadYearId
		/// </summary>
		
		public TList<FeeUserFundReq> FeeUserFundReqCollection
		{
			get
			{
				if (_feeUserFundReqEdAcadYearId == null)
				{
				_feeUserFundReqEdAcadYearId = new TList<FeeUserFundReq>();
				}
	
				return _feeUserFundReqEdAcadYearId;
			}
			set { _feeUserFundReqEdAcadYearId = value; }
		}
		
		#endregion

		#region EdOfferingCollection
		
		private TList<EdOffering> _edOfferingEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edOfferingEdAcadYearId
		/// </summary>
		
		public TList<EdOffering> EdOfferingCollection
		{
			get
			{
				if (_edOfferingEdAcadYearId == null)
				{
				_edOfferingEdAcadYearId = new TList<EdOffering>();
				}
	
				return _edOfferingEdAcadYearId;
			}
			set { _edOfferingEdAcadYearId = value; }
		}
		
		#endregion

		#region EdBylawCollection
		
		private TList<EdBylaw> _edBylawEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edBylawEdAcadYearId
		/// </summary>
		
		public TList<EdBylaw> EdBylawCollection
		{
			get
			{
				if (_edBylawEdAcadYearId == null)
				{
				_edBylawEdAcadYearId = new TList<EdBylaw>();
				}
	
				return _edBylawEdAcadYearId;
			}
			set { _edBylawEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudAbsenceCollection
		
		private TList<EdStudAbsence> _edStudAbsenceEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAbsenceEdAcadYearId
		/// </summary>
		
		public TList<EdStudAbsence> EdStudAbsenceCollection
		{
			get
			{
				if (_edStudAbsenceEdAcadYearId == null)
				{
				_edStudAbsenceEdAcadYearId = new TList<EdStudAbsence>();
				}
	
				return _edStudAbsenceEdAcadYearId;
			}
			set { _edStudAbsenceEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudAbsFwCollection
		
		private TList<EdStudAbsFw> _edStudAbsFwEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudAbsFwEdAcadYearId
		/// </summary>
		
		public TList<EdStudAbsFw> EdStudAbsFwCollection
		{
			get
			{
				if (_edStudAbsFwEdAcadYearId == null)
				{
				_edStudAbsFwEdAcadYearId = new TList<EdStudAbsFw>();
				}
	
				return _edStudAbsFwEdAcadYearId;
			}
			set { _edStudAbsFwEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeStudInstallmentRequestCollection
		
		private TList<FeeStudInstallmentRequest> _feeStudInstallmentRequestEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudInstallmentRequestEdAcadYearId
		/// </summary>
		
		public TList<FeeStudInstallmentRequest> FeeStudInstallmentRequestCollection
		{
			get
			{
				if (_feeStudInstallmentRequestEdAcadYearId == null)
				{
				_feeStudInstallmentRequestEdAcadYearId = new TList<FeeStudInstallmentRequest>();
				}
	
				return _feeStudInstallmentRequestEdAcadYearId;
			}
			set { _feeStudInstallmentRequestEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudStateTempCollection
		
		private TList<EdStudStateTemp> _edStudStateTempEdAcadYearPlnId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudStateTempEdAcadYearPlnId
		/// </summary>
		
		public TList<EdStudStateTemp> EdStudStateTempCollection
		{
			get
			{
				if (_edStudStateTempEdAcadYearPlnId == null)
				{
				_edStudStateTempEdAcadYearPlnId = new TList<EdStudStateTemp>();
				}
	
				return _edStudStateTempEdAcadYearPlnId;
			}
			set { _edStudStateTempEdAcadYearPlnId = value; }
		}
		
		#endregion

		#region MltRptDayStudStsCollectionGetByEdAcadYearJoinId
		
		private TList<MltRptDayStudSts> _mltRptDayStudStsEdAcadYearIdGetByEdAcadYearJoinId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mltRptDayStudStsEdAcadYearIdGetByEdAcadYearJoinId
		/// </summary>
		
		public TList<MltRptDayStudSts> MltRptDayStudStsCollectionGetByEdAcadYearJoinId
		{
			get
			{
				if (_mltRptDayStudStsEdAcadYearIdGetByEdAcadYearJoinId == null)
				{
				_mltRptDayStudStsEdAcadYearIdGetByEdAcadYearJoinId = new TList<MltRptDayStudSts>();
				}
	
				return _mltRptDayStudStsEdAcadYearIdGetByEdAcadYearJoinId;
			}
			set { _mltRptDayStudStsEdAcadYearIdGetByEdAcadYearJoinId = value; }
		}
		
		#endregion

		#region EntPrecondMdDataCollection
		
		private TList<EntPrecondMdData> _entPrecondMdDataEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entPrecondMdDataEdAcadYearId
		/// </summary>
		
		public TList<EntPrecondMdData> EntPrecondMdDataCollection
		{
			get
			{
				if (_entPrecondMdDataEdAcadYearId == null)
				{
				_entPrecondMdDataEdAcadYearId = new TList<EntPrecondMdData>();
				}
	
				return _entPrecondMdDataEdAcadYearId;
			}
			set { _entPrecondMdDataEdAcadYearId = value; }
		}
		
		#endregion

		#region SaServTerminCollection
		
		private TList<SaServTermin> _saServTerminEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _saServTerminEdAcadYearId
		/// </summary>
		
		public TList<SaServTermin> SaServTerminCollection
		{
			get
			{
				if (_saServTerminEdAcadYearId == null)
				{
				_saServTerminEdAcadYearId = new TList<SaServTermin>();
				}
	
				return _saServTerminEdAcadYearId;
			}
			set { _saServTerminEdAcadYearId = value; }
		}
		
		#endregion

		#region TrnsStudCarStkrCollection
		
		private TList<TrnsStudCarStkr> _trnsStudCarStkrEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _trnsStudCarStkrEdAcadYearId
		/// </summary>
		
		public TList<TrnsStudCarStkr> TrnsStudCarStkrCollection
		{
			get
			{
				if (_trnsStudCarStkrEdAcadYearId == null)
				{
				_trnsStudCarStkrEdAcadYearId = new TList<TrnsStudCarStkr>();
				}
	
				return _trnsStudCarStkrEdAcadYearId;
			}
			set { _trnsStudCarStkrEdAcadYearId = value; }
		}
		
		#endregion

		#region SvMessageCollection
		
		private TList<SvMessage> _svMessageEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svMessageEdAcadYearId
		/// </summary>
		
		public TList<SvMessage> SvMessageCollection
		{
			get
			{
				if (_svMessageEdAcadYearId == null)
				{
				_svMessageEdAcadYearId = new TList<SvMessage>();
				}
	
				return _svMessageEdAcadYearId;
			}
			set { _svMessageEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudEnrollChangeCollectionGetByEdAcadYearToId
		
		private TList<EdStudEnrollChange> _edStudEnrollChangeEdAcadYearFromIdGetByEdAcadYearToId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudEnrollChangeEdAcadYearFromIdGetByEdAcadYearToId
		/// </summary>
		
		public TList<EdStudEnrollChange> EdStudEnrollChangeCollectionGetByEdAcadYearToId
		{
			get
			{
				if (_edStudEnrollChangeEdAcadYearFromIdGetByEdAcadYearToId == null)
				{
				_edStudEnrollChangeEdAcadYearFromIdGetByEdAcadYearToId = new TList<EdStudEnrollChange>();
				}
	
				return _edStudEnrollChangeEdAcadYearFromIdGetByEdAcadYearToId;
			}
			set { _edStudEnrollChangeEdAcadYearFromIdGetByEdAcadYearToId = value; }
		}
		
		#endregion

		#region FeeRefndStdReqCollection
		
		private TList<FeeRefndStdReq> _feeRefndStdReqEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeRefndStdReqEdAcadYearId
		/// </summary>
		
		public TList<FeeRefndStdReq> FeeRefndStdReqCollection
		{
			get
			{
				if (_feeRefndStdReqEdAcadYearId == null)
				{
				_feeRefndStdReqEdAcadYearId = new TList<FeeRefndStdReq>();
				}
	
				return _feeRefndStdReqEdAcadYearId;
			}
			set { _feeRefndStdReqEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeStudVoucherCollection
		
		private TList<FeeStudVoucher> _feeStudVoucherEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudVoucherEdAcadYearId
		/// </summary>
		
		public TList<FeeStudVoucher> FeeStudVoucherCollection
		{
			get
			{
				if (_feeStudVoucherEdAcadYearId == null)
				{
				_feeStudVoucherEdAcadYearId = new TList<FeeStudVoucher>();
				}
	
				return _feeStudVoucherEdAcadYearId;
			}
			set { _feeStudVoucherEdAcadYearId = value; }
		}
		
		#endregion

		#region AccomStudReqCollection
		
		private TList<AccomStudReq> _accomStudReqEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomStudReqEdAcadYearId
		/// </summary>
		
		public TList<AccomStudReq> AccomStudReqCollection
		{
			get
			{
				if (_accomStudReqEdAcadYearId == null)
				{
				_accomStudReqEdAcadYearId = new TList<AccomStudReq>();
				}
	
				return _accomStudReqEdAcadYearId;
			}
			set { _accomStudReqEdAcadYearId = value; }
		}
		
		#endregion

		#region RsrchStudPostponeReqCollection
		
		private TList<RsrchStudPostponeReq> _rsrchStudPostponeReqEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _rsrchStudPostponeReqEdAcadYearId
		/// </summary>
		
		public TList<RsrchStudPostponeReq> RsrchStudPostponeReqCollection
		{
			get
			{
				if (_rsrchStudPostponeReqEdAcadYearId == null)
				{
				_rsrchStudPostponeReqEdAcadYearId = new TList<RsrchStudPostponeReq>();
				}
	
				return _rsrchStudPostponeReqEdAcadYearId;
			}
			set { _rsrchStudPostponeReqEdAcadYearId = value; }
		}
		
		#endregion

		#region SvStudAskAdvCollection
		
		private TList<SvStudAskAdv> _svStudAskAdvEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudAskAdvEdAcadYearId
		/// </summary>
		
		public TList<SvStudAskAdv> SvStudAskAdvCollection
		{
			get
			{
				if (_svStudAskAdvEdAcadYearId == null)
				{
				_svStudAskAdvEdAcadYearId = new TList<SvStudAskAdv>();
				}
	
				return _svStudAskAdvEdAcadYearId;
			}
			set { _svStudAskAdvEdAcadYearId = value; }
		}
		
		#endregion

		#region PgStudPublishCollection
		
		private TList<PgStudPublish> _pgStudPublishEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgStudPublishEdAcadYearId
		/// </summary>
		
		public TList<PgStudPublish> PgStudPublishCollection
		{
			get
			{
				if (_pgStudPublishEdAcadYearId == null)
				{
				_pgStudPublishEdAcadYearId = new TList<PgStudPublish>();
				}
	
				return _pgStudPublishEdAcadYearId;
			}
			set { _pgStudPublishEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsCourseToCollection
		
		private TList<EdStudIntTrnsCourseTo> _edStudIntTrnsCourseToEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsCourseToEdAcadYearId
		/// </summary>
		
		public TList<EdStudIntTrnsCourseTo> EdStudIntTrnsCourseToCollection
		{
			get
			{
				if (_edStudIntTrnsCourseToEdAcadYearId == null)
				{
				_edStudIntTrnsCourseToEdAcadYearId = new TList<EdStudIntTrnsCourseTo>();
				}
	
				return _edStudIntTrnsCourseToEdAcadYearId;
			}
			set { _edStudIntTrnsCourseToEdAcadYearId = value; }
		}
		
		#endregion

		#region SpoSponsorOfferExtCollection
		
		private TList<SpoSponsorOfferExt> _spoSponsorOfferExtEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _spoSponsorOfferExtEdAcadYearId
		/// </summary>
		
		public TList<SpoSponsorOfferExt> SpoSponsorOfferExtCollection
		{
			get
			{
				if (_spoSponsorOfferExtEdAcadYearId == null)
				{
				_spoSponsorOfferExtEdAcadYearId = new TList<SpoSponsorOfferExt>();
				}
	
				return _spoSponsorOfferExtEdAcadYearId;
			}
			set { _spoSponsorOfferExtEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsStateToCollection
		
		private TList<EdStudIntTrnsStateTo> _edStudIntTrnsStateToEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsStateToEdAcadYearId
		/// </summary>
		
		public TList<EdStudIntTrnsStateTo> EdStudIntTrnsStateToCollection
		{
			get
			{
				if (_edStudIntTrnsStateToEdAcadYearId == null)
				{
				_edStudIntTrnsStateToEdAcadYearId = new TList<EdStudIntTrnsStateTo>();
				}
	
				return _edStudIntTrnsStateToEdAcadYearId;
			}
			set { _edStudIntTrnsStateToEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeStudFeeItemCollection
		
		private TList<FeeStudFeeItem> _feeStudFeeItemEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeStudFeeItemEdAcadYearId
		/// </summary>
		
		public TList<FeeStudFeeItem> FeeStudFeeItemCollection
		{
			get
			{
				if (_feeStudFeeItemEdAcadYearId == null)
				{
				_feeStudFeeItemEdAcadYearId = new TList<FeeStudFeeItem>();
				}
	
				return _feeStudFeeItemEdAcadYearId;
			}
			set { _feeStudFeeItemEdAcadYearId = value; }
		}
		
		#endregion

		#region EdPrintReqCollection
		
		private TList<EdPrintReq> _edPrintReqEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edPrintReqEdAcadYearId
		/// </summary>
		
		public TList<EdPrintReq> EdPrintReqCollection
		{
			get
			{
				if (_edPrintReqEdAcadYearId == null)
				{
				_edPrintReqEdAcadYearId = new TList<EdPrintReq>();
				}
	
				return _edPrintReqEdAcadYearId;
			}
			set { _edPrintReqEdAcadYearId = value; }
		}
		
		#endregion

		#region PgStudTravelCollection
		
		private TList<PgStudTravel> _pgStudTravelEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgStudTravelEdAcadYearId
		/// </summary>
		
		public TList<PgStudTravel> PgStudTravelCollection
		{
			get
			{
				if (_pgStudTravelEdAcadYearId == null)
				{
				_pgStudTravelEdAcadYearId = new TList<PgStudTravel>();
				}
	
				return _pgStudTravelEdAcadYearId;
			}
			set { _pgStudTravelEdAcadYearId = value; }
		}
		
		#endregion

		#region EdSemAgendaDtlCollectionGetByTAdmAcadYearId
		
		private TList<EdSemAgendaDtl> _edSemAgendaDtlTAdmAcadYearIdGetByTAdmAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edSemAgendaDtlTAdmAcadYearIdGetByTAdmAcadYearId
		/// </summary>
		
		public TList<EdSemAgendaDtl> EdSemAgendaDtlCollectionGetByTAdmAcadYearId
		{
			get
			{
				if (_edSemAgendaDtlTAdmAcadYearIdGetByTAdmAcadYearId == null)
				{
				_edSemAgendaDtlTAdmAcadYearIdGetByTAdmAcadYearId = new TList<EdSemAgendaDtl>();
				}
	
				return _edSemAgendaDtlTAdmAcadYearIdGetByTAdmAcadYearId;
			}
			set { _edSemAgendaDtlTAdmAcadYearIdGetByTAdmAcadYearId = value; }
		}
		
		#endregion

		#region AccomStudBookCollection
		
		private TList<AccomStudBook> _accomStudBookEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _accomStudBookEdAcadYearId
		/// </summary>
		
		public TList<AccomStudBook> AccomStudBookCollection
		{
			get
			{
				if (_accomStudBookEdAcadYearId == null)
				{
				_accomStudBookEdAcadYearId = new TList<AccomStudBook>();
				}
	
				return _accomStudBookEdAcadYearId;
			}
			set { _accomStudBookEdAcadYearId = value; }
		}
		
		#endregion

		#region EntFullfillMdDataCollection
		
		private TList<EntFullfillMdData> _entFullfillMdDataEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entFullfillMdDataEdAcadYearId
		/// </summary>
		
		public TList<EntFullfillMdData> EntFullfillMdDataCollection
		{
			get
			{
				if (_entFullfillMdDataEdAcadYearId == null)
				{
				_entFullfillMdDataEdAcadYearId = new TList<EntFullfillMdData>();
				}
	
				return _entFullfillMdDataEdAcadYearId;
			}
			set { _entFullfillMdDataEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudIntTrnsCollectionGetByEdAcadYearId
		
		private TList<EdStudIntTrns> _edStudIntTrnsEdAcadYearReqIdGetByEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudIntTrnsEdAcadYearReqIdGetByEdAcadYearId
		/// </summary>
		
		public TList<EdStudIntTrns> EdStudIntTrnsCollectionGetByEdAcadYearId
		{
			get
			{
				if (_edStudIntTrnsEdAcadYearReqIdGetByEdAcadYearId == null)
				{
				_edStudIntTrnsEdAcadYearReqIdGetByEdAcadYearId = new TList<EdStudIntTrns>();
				}
	
				return _edStudIntTrnsEdAcadYearReqIdGetByEdAcadYearId;
			}
			set { _edStudIntTrnsEdAcadYearReqIdGetByEdAcadYearId = value; }
		}
		
		#endregion

		#region SvStudCompCollection
		
		private TList<SvStudComp> _svStudCompEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svStudCompEdAcadYearId
		/// </summary>
		
		public TList<SvStudComp> SvStudCompCollection
		{
			get
			{
				if (_svStudCompEdAcadYearId == null)
				{
				_svStudCompEdAcadYearId = new TList<SvStudComp>();
				}
	
				return _svStudCompEdAcadYearId;
			}
			set { _svStudCompEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudExcuseCollection
		
		private TList<EdStudExcuse> _edStudExcuseEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudExcuseEdAcadYearId
		/// </summary>
		
		public TList<EdStudExcuse> EdStudExcuseCollection
		{
			get
			{
				if (_edStudExcuseEdAcadYearId == null)
				{
				_edStudExcuseEdAcadYearId = new TList<EdStudExcuse>();
				}
	
				return _edStudExcuseEdAcadYearId;
			}
			set { _edStudExcuseEdAcadYearId = value; }
		}
		
		#endregion

		#region MdiStudHosptlCollection
		
		private TList<MdiStudHosptl> _mdiStudHosptlEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mdiStudHosptlEdAcadYearId
		/// </summary>
		
		public TList<MdiStudHosptl> MdiStudHosptlCollection
		{
			get
			{
				if (_mdiStudHosptlEdAcadYearId == null)
				{
				_mdiStudHosptlEdAcadYearId = new TList<MdiStudHosptl>();
				}
	
				return _mdiStudHosptlEdAcadYearId;
			}
			set { _mdiStudHosptlEdAcadYearId = value; }
		}
		
		#endregion

		#region FeeCourseExpCollection
		
		private TList<FeeCourseExp> _feeCourseExpEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeCourseExpEdAcadYearId
		/// </summary>
		
		public TList<FeeCourseExp> FeeCourseExpCollection
		{
			get
			{
				if (_feeCourseExpEdAcadYearId == null)
				{
				_feeCourseExpEdAcadYearId = new TList<FeeCourseExp>();
				}
	
				return _feeCourseExpEdAcadYearId;
			}
			set { _feeCourseExpEdAcadYearId = value; }
		}
		
		#endregion

		#region SeUserCrsAssessCollection
		
		private TList<SeUserCrsAssess> _seUserCrsAssessEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _seUserCrsAssessEdAcadYearId
		/// </summary>
		
		public TList<SeUserCrsAssess> SeUserCrsAssessCollection
		{
			get
			{
				if (_seUserCrsAssessEdAcadYearId == null)
				{
				_seUserCrsAssessEdAcadYearId = new TList<SeUserCrsAssess>();
				}
	
				return _seUserCrsAssessEdAcadYearId;
			}
			set { _seUserCrsAssessEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudEnrollChangeCollectionGetByEdAcadYearFromId
		
		private TList<EdStudEnrollChange> _edStudEnrollChangeEdAcadYearFromIdGetByEdAcadYearFromId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudEnrollChangeEdAcadYearFromIdGetByEdAcadYearFromId
		/// </summary>
		
		public TList<EdStudEnrollChange> EdStudEnrollChangeCollectionGetByEdAcadYearFromId
		{
			get
			{
				if (_edStudEnrollChangeEdAcadYearFromIdGetByEdAcadYearFromId == null)
				{
				_edStudEnrollChangeEdAcadYearFromIdGetByEdAcadYearFromId = new TList<EdStudEnrollChange>();
				}
	
				return _edStudEnrollChangeEdAcadYearFromIdGetByEdAcadYearFromId;
			}
			set { _edStudEnrollChangeEdAcadYearFromIdGetByEdAcadYearFromId = value; }
		}
		
		#endregion

		#region FeeInstlmntRuleCollection
		
		private TList<FeeInstlmntRule> _feeInstlmntRuleEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _feeInstlmntRuleEdAcadYearId
		/// </summary>
		
		public TList<FeeInstlmntRule> FeeInstlmntRuleCollection
		{
			get
			{
				if (_feeInstlmntRuleEdAcadYearId == null)
				{
				_feeInstlmntRuleEdAcadYearId = new TList<FeeInstlmntRule>();
				}
	
				return _feeInstlmntRuleEdAcadYearId;
			}
			set { _feeInstlmntRuleEdAcadYearId = value; }
		}
		
		#endregion

		#region EdTrainingCollection
		
		private TList<EdTraining> _edTrainingEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edTrainingEdAcadYearId
		/// </summary>
		
		public TList<EdTraining> EdTrainingCollection
		{
			get
			{
				if (_edTrainingEdAcadYearId == null)
				{
				_edTrainingEdAcadYearId = new TList<EdTraining>();
				}
	
				return _edTrainingEdAcadYearId;
			}
			set { _edTrainingEdAcadYearId = value; }
		}
		
		#endregion

		#region ScSchdlPeriodCollection
		
		private TList<ScSchdlPeriod> _scSchdlPeriodEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _scSchdlPeriodEdAcadYearId
		/// </summary>
		
		public TList<ScSchdlPeriod> ScSchdlPeriodCollection
		{
			get
			{
				if (_scSchdlPeriodEdAcadYearId == null)
				{
				_scSchdlPeriodEdAcadYearId = new TList<ScSchdlPeriod>();
				}
	
				return _scSchdlPeriodEdAcadYearId;
			}
			set { _scSchdlPeriodEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudViolCollectionGetByEdAcadYearStopFromId
		
		private TList<EdStudViol> _edStudViolEdAcadYearStopFromIdGetByEdAcadYearStopFromId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudViolEdAcadYearStopFromIdGetByEdAcadYearStopFromId
		/// </summary>
		
		public TList<EdStudViol> EdStudViolCollectionGetByEdAcadYearStopFromId
		{
			get
			{
				if (_edStudViolEdAcadYearStopFromIdGetByEdAcadYearStopFromId == null)
				{
				_edStudViolEdAcadYearStopFromIdGetByEdAcadYearStopFromId = new TList<EdStudViol>();
				}
	
				return _edStudViolEdAcadYearStopFromIdGetByEdAcadYearStopFromId;
			}
			set { _edStudViolEdAcadYearStopFromIdGetByEdAcadYearStopFromId = value; }
		}
		
		#endregion

		#region SeBlockTransCollection
		
		private TList<SeBlockTrans> _seBlockTransEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _seBlockTransEdAcadYearId
		/// </summary>
		
		public TList<SeBlockTrans> SeBlockTransCollection
		{
			get
			{
				if (_seBlockTransEdAcadYearId == null)
				{
				_seBlockTransEdAcadYearId = new TList<SeBlockTrans>();
				}
	
				return _seBlockTransEdAcadYearId;
			}
			set { _seBlockTransEdAcadYearId = value; }
		}
		
		#endregion

		#region PgStudConferenceCollection
		
		private TList<PgStudConference> _pgStudConferenceEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgStudConferenceEdAcadYearId
		/// </summary>
		
		public TList<PgStudConference> PgStudConferenceCollection
		{
			get
			{
				if (_pgStudConferenceEdAcadYearId == null)
				{
				_pgStudConferenceEdAcadYearId = new TList<PgStudConference>();
				}
	
				return _pgStudConferenceEdAcadYearId;
			}
			set { _pgStudConferenceEdAcadYearId = value; }
		}
		
		#endregion

		#region SvLecNoteCollection
		
		private TList<SvLecNote> _svLecNoteEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _svLecNoteEdAcadYearId
		/// </summary>
		
		public TList<SvLecNote> SvLecNoteCollection
		{
			get
			{
				if (_svLecNoteEdAcadYearId == null)
				{
				_svLecNoteEdAcadYearId = new TList<SvLecNote>();
				}
	
				return _svLecNoteEdAcadYearId;
			}
			set { _svLecNoteEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStudSemesterTempCollection
		
		private TList<EdStudSemesterTemp> _edStudSemesterTempEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudSemesterTempEdAcadYearId
		/// </summary>
		
		public TList<EdStudSemesterTemp> EdStudSemesterTempCollection
		{
			get
			{
				if (_edStudSemesterTempEdAcadYearId == null)
				{
				_edStudSemesterTempEdAcadYearId = new TList<EdStudSemesterTemp>();
				}
	
				return _edStudSemesterTempEdAcadYearId;
			}
			set { _edStudSemesterTempEdAcadYearId = value; }
		}
		
		#endregion

		#region EdStaffCoursePrefCollection
		
		private TList<EdStaffCoursePref> _edStaffCoursePrefEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStaffCoursePrefEdAcadYearId
		/// </summary>
		
		public TList<EdStaffCoursePref> EdStaffCoursePrefCollection
		{
			get
			{
				if (_edStaffCoursePrefEdAcadYearId == null)
				{
				_edStaffCoursePrefEdAcadYearId = new TList<EdStaffCoursePref>();
				}
	
				return _edStaffCoursePrefEdAcadYearId;
			}
			set { _edStaffCoursePrefEdAcadYearId = value; }
		}
		
		#endregion

		#region MltRptDayStudStsCollectionGetByEdAcadYearId
		
		private TList<MltRptDayStudSts> _mltRptDayStudStsEdAcadYearIdGetByEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _mltRptDayStudStsEdAcadYearIdGetByEdAcadYearId
		/// </summary>
		
		public TList<MltRptDayStudSts> MltRptDayStudStsCollectionGetByEdAcadYearId
		{
			get
			{
				if (_mltRptDayStudStsEdAcadYearIdGetByEdAcadYearId == null)
				{
				_mltRptDayStudStsEdAcadYearIdGetByEdAcadYearId = new TList<MltRptDayStudSts>();
				}
	
				return _mltRptDayStudStsEdAcadYearIdGetByEdAcadYearId;
			}
			set { _mltRptDayStudStsEdAcadYearIdGetByEdAcadYearId = value; }
		}
		
		#endregion

		#region EntCourseMdDataCollection
		
		private TList<EntCourseMdData> _entCourseMdDataEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _entCourseMdDataEdAcadYearId
		/// </summary>
		
		public TList<EntCourseMdData> EntCourseMdDataCollection
		{
			get
			{
				if (_entCourseMdDataEdAcadYearId == null)
				{
				_entCourseMdDataEdAcadYearId = new TList<EntCourseMdData>();
				}
	
				return _entCourseMdDataEdAcadYearId;
			}
			set { _entCourseMdDataEdAcadYearId = value; }
		}
		
		#endregion

		#region GsCommCollection
		
		private TList<GsComm> _gsCommEdAcadYearId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _gsCommEdAcadYearId
		/// </summary>
		
		public TList<GsComm> GsCommCollection
		{
			get
			{
				if (_gsCommEdAcadYearId == null)
				{
				_gsCommEdAcadYearId = new TList<GsComm>();
				}
	
				return _gsCommEdAcadYearId;
			}
			set { _gsCommEdAcadYearId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			EdAcadYearEntityData _tmp = new EdAcadYearEntityData();
						
			_tmp.EdAcadYearId = this.EdAcadYearId;
			_tmp.OriginalEdAcadYearId = this.OriginalEdAcadYearId;
			
			_tmp.DescrAr = this.DescrAr;
			_tmp.DescrEn = this.DescrEn;
			_tmp.YearCode = this.YearCode;
			_tmp.YearOrder = this.YearOrder;
			_tmp.YearCalender = this.YearCalender;
			_tmp.CurrentYear = this.CurrentYear;
			_tmp.IsClosed = this.IsClosed;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._edStudFacultyEdAcadYearJoinIdGetByEdAcadYearId != null)
				_tmp.EdStudFacultyCollectionGetByEdAcadYearId = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollectionGetByEdAcadYearId); 
			if (this._feeFacultyInstallmentEdAcadYearId != null)
				_tmp.FeeFacultyInstallmentCollection = (TList<FeeFacultyInstallment>) MakeCopyOf(this.FeeFacultyInstallmentCollection); 
			if (this._edStudTransEdAcadYearId != null)
				_tmp.EdStudTransCollection = (TList<EdStudTrans>) MakeCopyOf(this.EdStudTransCollection); 
			if (this._feeAccntYearEdAcadYearId != null)
				_tmp.FeeAccntYear = (FeeAccntYear) MakeCopyOf(this.FeeAccntYear); 
			if (this._wfCrsRsltApproveEdAcadYearId != null)
				_tmp.WfCrsRsltApproveCollection = (TList<WfCrsRsltApprove>) MakeCopyOf(this.WfCrsRsltApproveCollection); 
			if (this._edAcadYearFacultyEdAcadYearId != null)
				_tmp.EdAcadYearFacultyCollection = (TList<EdAcadYearFaculty>) MakeCopyOf(this.EdAcadYearFacultyCollection); 
			if (this._saOfficeHourEdAcadYearId != null)
				_tmp.SaOfficeHourCollection = (TList<SaOfficeHour>) MakeCopyOf(this.SaOfficeHourCollection); 
			if (this._svStaffEvlEdAcadYearId != null)
				_tmp.SvStaffEvlCollection = (TList<SvStaffEvl>) MakeCopyOf(this.SvStaffEvlCollection); 
			if (this._edStudCourseRegPreEdAcadYearId != null)
				_tmp.EdStudCourseRegPreCollection = (TList<EdStudCourseRegPre>) MakeCopyOf(this.EdStudCourseRegPreCollection); 
			if (this._feeStudNatSimilarityRequestEdAcadYearId != null)
				_tmp.FeeStudNatSimilarityRequestCollection = (TList<FeeStudNatSimilarityRequest>) MakeCopyOf(this.FeeStudNatSimilarityRequestCollection); 
			if (this._admOpenAcadSemesterEdAcadYearId != null)
				_tmp.AdmOpenAcadSemesterCollection = (TList<AdmOpenAcadSemester>) MakeCopyOf(this.AdmOpenAcadSemesterCollection); 
			if (this._edStudIntTrnsEdAcadYearReqIdGetByEdAcadYearReqId != null)
				_tmp.EdStudIntTrnsCollectionGetByEdAcadYearReqId = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollectionGetByEdAcadYearReqId); 
			if (this._entCoursePkgMdDataEdAcadYearId != null)
				_tmp.EntCoursePkgMdDataCollection = (TList<EntCoursePkgMdData>) MakeCopyOf(this.EntCoursePkgMdDataCollection); 
			if (this._feeUserBondReqEdAcadYearId != null)
				_tmp.FeeUserBondReqCollection = (TList<FeeUserBondReq>) MakeCopyOf(this.FeeUserBondReqCollection); 
			if (this._edGraduationAwardEdAcadYearId != null)
				_tmp.EdGraduationAwardCollection = (TList<EdGraduationAward>) MakeCopyOf(this.EdGraduationAwardCollection); 
			if (this._accomWfRequestApproveEdAcadYearId != null)
				_tmp.AccomWfRequestApproveCollection = (TList<AccomWfRequestApprove>) MakeCopyOf(this.AccomWfRequestApproveCollection); 
			if (this._scStudGroupEdAcadYearId != null)
				_tmp.ScStudGroupCollection = (TList<ScStudGroup>) MakeCopyOf(this.ScStudGroupCollection); 
			if (this._edProjectEdAcadYearId != null)
				_tmp.EdProjectCollection = (TList<EdProject>) MakeCopyOf(this.EdProjectCollection); 
			if (this._rsrchStudRegisterEdAcadYearId != null)
				_tmp.RsrchStudRegisterCollection = (TList<RsrchStudRegister>) MakeCopyOf(this.RsrchStudRegisterCollection); 
			if (this._edCourseOutcomesTopicsEdAcadYearId != null)
				_tmp.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection); 
			if (this._spoSponsorOfferEdAcadYearToIdGetByEdAcadYearToId != null)
				_tmp.SpoSponsorOfferCollectionGetByEdAcadYearToId = (TList<SpoSponsorOffer>) MakeCopyOf(this.SpoSponsorOfferCollectionGetByEdAcadYearToId); 
			if (this._edCourseTchngEdAcadYearId != null)
				_tmp.EdCourseTchngCollection = (TList<EdCourseTchng>) MakeCopyOf(this.EdCourseTchngCollection); 
			if (this._spoSponsorStudEdAcadYearToIdGetByEdAcadYearToId != null)
				_tmp.SpoSponsorStudCollectionGetByEdAcadYearToId = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollectionGetByEdAcadYearToId); 
			if (this._edExamSchdlEdAcadYearId != null)
				_tmp.EdExamSchdlCollection = (TList<EdExamSchdl>) MakeCopyOf(this.EdExamSchdlCollection); 
			if (this._coControlEdAcadYearId != null)
				_tmp.CoControlCollection = (TList<CoControl>) MakeCopyOf(this.CoControlCollection); 
			if (this._edStudAcadWarnEdAcadYearId != null)
				_tmp.EdStudAcadWarnCollection = (TList<EdStudAcadWarn>) MakeCopyOf(this.EdStudAcadWarnCollection); 
			if (this._edAcadPlanEdAcadYearId != null)
				_tmp.EdAcadPlanCollection = (TList<EdAcadPlan>) MakeCopyOf(this.EdAcadPlanCollection); 
			if (this._coCrsRsltRaiseEdAcadYearId != null)
				_tmp.CoCrsRsltRaiseCollection = (TList<CoCrsRsltRaise>) MakeCopyOf(this.CoCrsRsltRaiseCollection); 
			if (this._edStudIntTrnsStateFromEdAcadYearId != null)
				_tmp.EdStudIntTrnsStateFromCollection = (TList<EdStudIntTrnsStateFrom>) MakeCopyOf(this.EdStudIntTrnsStateFromCollection); 
			if (this._svUserTaskEdAcadYearId != null)
				_tmp.SvUserTaskCollection = (TList<SvUserTask>) MakeCopyOf(this.SvUserTaskCollection); 
			if (this._mdiStudRecordEdAcadYearId != null)
				_tmp.MdiStudRecordCollection = (TList<MdiStudRecord>) MakeCopyOf(this.MdiStudRecordCollection); 
			if (this._edStudFacultyEdAcadYearJoinIdGetByEdAcadYearJoinId != null)
				_tmp.EdStudFacultyCollectionGetByEdAcadYearJoinId = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollectionGetByEdAcadYearJoinId); 
			if (this._feeFacItemAdmYearEdAcadYearId != null)
				_tmp.FeeFacItemAdmYearCollection = (TList<FeeFacItemAdmYear>) MakeCopyOf(this.FeeFacItemAdmYearCollection); 
			if (this._edStudLatenessEdAcadYearId != null)
				_tmp.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection); 
			if (this._feeStudItemCnclEdAcadYearId != null)
				_tmp.FeeStudItemCnclCollection = (TList<FeeStudItemCncl>) MakeCopyOf(this.FeeStudItemCnclCollection); 
			if (this._edStudBranchPrefEdAcadYearId != null)
				_tmp.EdStudBranchPrefCollection = (TList<EdStudBranchPref>) MakeCopyOf(this.EdStudBranchPrefCollection); 
			if (this._edAcdadvRmkEdAcadYearId != null)
				_tmp.EdAcdadvRmkCollection = (TList<EdAcdadvRmk>) MakeCopyOf(this.EdAcdadvRmkCollection); 
			if (this._svSrvyHdrEdAcadYearId != null)
				_tmp.SvSrvyHdrCollection = (TList<SvSrvyHdr>) MakeCopyOf(this.SvSrvyHdrCollection); 
			if (this._feeStudPayPostponeEdAcadYearId != null)
				_tmp.FeeStudPayPostponeCollection = (TList<FeeStudPayPostpone>) MakeCopyOf(this.FeeStudPayPostponeCollection); 
			if (this._spoSponsorStudEdAcadYearToIdGetByEdAcadYearId != null)
				_tmp.SpoSponsorStudCollectionGetByEdAcadYearId = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollectionGetByEdAcadYearId); 
			if (this._feeLimitRuleEdAcadYearId != null)
				_tmp.FeeLimitRuleCollection = (TList<FeeLimitRule>) MakeCopyOf(this.FeeLimitRuleCollection); 
			if (this._mltStudInfoEdAcadYearId != null)
				_tmp.MltStudInfoCollection = (TList<MltStudInfo>) MakeCopyOf(this.MltStudInfoCollection); 
			if (this._feeTreasuryReqEdAcadYearId != null)
				_tmp.FeeTreasuryReqCollection = (TList<FeeTreasuryReq>) MakeCopyOf(this.FeeTreasuryReqCollection); 
			if (this._feeStudAllowanceEdAcadYearId != null)
				_tmp.FeeStudAllowanceCollection = (TList<FeeStudAllowance>) MakeCopyOf(this.FeeStudAllowanceCollection); 
			if (this._spoSponsorOfferEdAcadYearToIdGetByEdAcadYearFromId != null)
				_tmp.SpoSponsorOfferCollectionGetByEdAcadYearFromId = (TList<SpoSponsorOffer>) MakeCopyOf(this.SpoSponsorOfferCollectionGetByEdAcadYearFromId); 
			if (this._edStudAcadmicAdvEdAcadYearId != null)
				_tmp.EdStudAcadmicAdvCollection = (TList<EdStudAcadmicAdv>) MakeCopyOf(this.EdStudAcadmicAdvCollection); 
			if (this._accomStudAbsenceWarnEdAcadYearId != null)
				_tmp.AccomStudAbsenceWarnCollection = (TList<AccomStudAbsenceWarn>) MakeCopyOf(this.AccomStudAbsenceWarnCollection); 
			if (this._edInttransRuleEdAcadYearId != null)
				_tmp.EdInttransRuleCollection = (TList<EdInttransRule>) MakeCopyOf(this.EdInttransRuleCollection); 
			if (this._scGroupInfoEdAcadYearId != null)
				_tmp.ScGroupInfoCollection = (TList<ScGroupInfo>) MakeCopyOf(this.ScGroupInfoCollection); 
			if (this._edStudStateEdAcadYearId != null)
				_tmp.EdStudStateCollection = (TList<EdStudState>) MakeCopyOf(this.EdStudStateCollection); 
			if (this._milCodeCourseEdAcadYearId != null)
				_tmp.MilCodeCourseCollection = (TList<MilCodeCourse>) MakeCopyOf(this.MilCodeCourseCollection); 
			if (this._feeStudFundEdAcadYearId != null)
				_tmp.FeeStudFundCollection = (TList<FeeStudFund>) MakeCopyOf(this.FeeStudFundCollection); 
			if (this._edSemAgendaDtlTAdmAcadYearIdGetByFAdmAcadYearId != null)
				_tmp.EdSemAgendaDtlCollectionGetByFAdmAcadYearId = (TList<EdSemAgendaDtl>) MakeCopyOf(this.EdSemAgendaDtlCollectionGetByFAdmAcadYearId); 
			if (this._feeCdeDiscTypeEdAcadYearId != null)
				_tmp.FeeCdeDiscTypeCollection = (TList<FeeCdeDiscType>) MakeCopyOf(this.FeeCdeDiscTypeCollection); 
			if (this._feeItemTrnsBlncEdAcadYearId != null)
				_tmp.FeeItemTrnsBlncCollection = (TList<FeeItemTrnsBlnc>) MakeCopyOf(this.FeeItemTrnsBlncCollection); 
			if (this._feeStudCoursesItemEdAcadYearId != null)
				_tmp.FeeStudCoursesItemCollection = (TList<FeeStudCoursesItem>) MakeCopyOf(this.FeeStudCoursesItemCollection); 
			if (this._feeStudDiscEdAcadYearId != null)
				_tmp.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection); 
			if (this._edSemesterOpenEdAcadYearId != null)
				_tmp.EdSemesterOpenCollection = (TList<EdSemesterOpen>) MakeCopyOf(this.EdSemesterOpenCollection); 
			if (this._feeTreasuryEdAcadYearId != null)
				_tmp.FeeTreasuryCollection = (TList<FeeTreasury>) MakeCopyOf(this.FeeTreasuryCollection); 
			if (this._ctrStudExpEdAcadYearId != null)
				_tmp.CtrStudExpCollection = (TList<CtrStudExp>) MakeCopyOf(this.CtrStudExpCollection); 
			if (this._mdiStudClnqEdAcadYearId != null)
				_tmp.MdiStudClnqCollection = (TList<MdiStudClnq>) MakeCopyOf(this.MdiStudClnqCollection); 
			if (this._pgThesisStudEdAcadYearId != null)
				_tmp.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection); 
			if (this._gsAgendaHolidayEdAcadYearId != null)
				_tmp.GsAgendaHolidayCollection = (TList<GsAgendaHoliday>) MakeCopyOf(this.GsAgendaHolidayCollection); 
			if (this._edStudViolEdAcadYearStopToIdGetByEdAcadYearId != null)
				_tmp.EdStudViolCollectionGetByEdAcadYearId = (TList<EdStudViol>) MakeCopyOf(this.EdStudViolCollectionGetByEdAcadYearId); 
			if (this._edStudIntTrnsCourseFromEdAcadYearId != null)
				_tmp.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection); 
			if (this._accomStudAbsenceEdAcadYearId != null)
				_tmp.AccomStudAbsenceCollection = (TList<AccomStudAbsence>) MakeCopyOf(this.AccomStudAbsenceCollection); 
			if (this._trnsLineEdAcadYearId != null)
				_tmp.TrnsLineCollection = (TList<TrnsLine>) MakeCopyOf(this.TrnsLineCollection); 
			if (this._pgOfferingEdAcadYearId != null)
				_tmp.PgOfferingCollection = (TList<PgOffering>) MakeCopyOf(this.PgOfferingCollection); 
			if (this._entPolcyGrdngHdrEdAcadYearId != null)
				_tmp.EntPolcyGrdngHdrCollection = (TList<EntPolcyGrdngHdr>) MakeCopyOf(this.EntPolcyGrdngHdrCollection); 
			if (this._entCoursePkgHdrEdAcadYearId != null)
				_tmp.EntCoursePkgHdrCollection = (TList<EntCoursePkgHdr>) MakeCopyOf(this.EntCoursePkgHdrCollection); 
			if (this._edStudTransFromReqEdAcadYearId != null)
				_tmp.EdStudTransFromReqCollection = (TList<EdStudTransFromReq>) MakeCopyOf(this.EdStudTransFromReqCollection); 
			if (this._feeStudInstallmentEdAcadYearId != null)
				_tmp.FeeStudInstallmentCollection = (TList<FeeStudInstallment>) MakeCopyOf(this.FeeStudInstallmentCollection); 
			if (this._admFeePromocodeEdAcadYearId != null)
				_tmp.AdmFeePromocodeCollection = (TList<AdmFeePromocode>) MakeCopyOf(this.AdmFeePromocodeCollection); 
			if (this._edBranchRuleEdAcadYearId != null)
				_tmp.EdBranchRuleCollection = (TList<EdBranchRule>) MakeCopyOf(this.EdBranchRuleCollection); 
			if (this._spoSponsorStudSemesterEdAcadYearId != null)
				_tmp.SpoSponsorStudSemesterCollection = (TList<SpoSponsorStudSemester>) MakeCopyOf(this.SpoSponsorStudSemesterCollection); 
			if (this._feeFacultyRuleEdAcadYearId != null)
				_tmp.FeeFacultyRuleCollection = (TList<FeeFacultyRule>) MakeCopyOf(this.FeeFacultyRuleCollection); 
			if (this._edStudProblemEdAcadYearId != null)
				_tmp.EdStudProblemCollection = (TList<EdStudProblem>) MakeCopyOf(this.EdStudProblemCollection); 
			if (this._feeItemSemesterEdAcadYearJoinId != null)
				_tmp.FeeItemSemesterCollection = (TList<FeeItemSemester>) MakeCopyOf(this.FeeItemSemesterCollection); 
			if (this._scSectionGroupHdrEdAcadYearId != null)
				_tmp.ScSectionGroupHdrCollection = (TList<ScSectionGroupHdr>) MakeCopyOf(this.ScSectionGroupHdrCollection); 
			if (this._ctrStudOutEdAcadYearId != null)
				_tmp.CtrStudOutCollection = (TList<CtrStudOut>) MakeCopyOf(this.CtrStudOutCollection); 
			if (this._spoOfferStudExceptionEdAcadYearId != null)
				_tmp.SpoOfferStudExceptionCollection = (TList<SpoOfferStudException>) MakeCopyOf(this.SpoOfferStudExceptionCollection); 
			if (this._feeAccomItemEdAcadYearId != null)
				_tmp.FeeAccomItemCollection = (TList<FeeAccomItem>) MakeCopyOf(this.FeeAccomItemCollection); 
			if (this._trnsStudReqEdAcadYearId != null)
				_tmp.TrnsStudReqCollection = (TList<TrnsStudReq>) MakeCopyOf(this.TrnsStudReqCollection); 
			if (this._edStudExmptReqEdAcadYearId != null)
				_tmp.EdStudExmptReqCollection = (TList<EdStudExmptReq>) MakeCopyOf(this.EdStudExmptReqCollection); 
			if (this._feeStudRetrieveRequestEdAcadYearId != null)
				_tmp.FeeStudRetrieveRequestCollection = (TList<FeeStudRetrieveRequest>) MakeCopyOf(this.FeeStudRetrieveRequestCollection); 
			if (this._svCourseEvalEdAcadYearId != null)
				_tmp.SvCourseEvalCollection = (TList<SvCourseEval>) MakeCopyOf(this.SvCourseEvalCollection); 
			if (this._edStudViolEdAcadYearStopToIdGetByEdAcadYearStopToId != null)
				_tmp.EdStudViolCollectionGetByEdAcadYearStopToId = (TList<EdStudViol>) MakeCopyOf(this.EdStudViolCollectionGetByEdAcadYearStopToId); 
			if (this._feeBusLineItemEdAcadYearId != null)
				_tmp.FeeBusLineItemCollection = (TList<FeeBusLineItem>) MakeCopyOf(this.FeeBusLineItemCollection); 
			if (this._admAppRegHistoryEdAcadYearId != null)
				_tmp.AdmAppRegHistoryCollection = (TList<AdmAppRegHistory>) MakeCopyOf(this.AdmAppRegHistoryCollection); 
			if (this._edStudSemesterEdAcadYearId != null)
				_tmp.EdStudSemesterCollection = (TList<EdStudSemester>) MakeCopyOf(this.EdStudSemesterCollection); 
			if (this._pgThesisGrantDegreeEdAcadYearId != null)
				_tmp.PgThesisGrantDegreeCollection = (TList<PgThesisGrantDegree>) MakeCopyOf(this.PgThesisGrantDegreeCollection); 
			if (this._edStudExecuseReqEdAcadYearId != null)
				_tmp.EdStudExecuseReqCollection = (TList<EdStudExecuseReq>) MakeCopyOf(this.EdStudExecuseReqCollection); 
			if (this._feeUserFundReqEdAcadYearId != null)
				_tmp.FeeUserFundReqCollection = (TList<FeeUserFundReq>) MakeCopyOf(this.FeeUserFundReqCollection); 
			if (this._edOfferingEdAcadYearId != null)
				_tmp.EdOfferingCollection = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollection); 
			if (this._edBylawEdAcadYearId != null)
				_tmp.EdBylawCollection = (TList<EdBylaw>) MakeCopyOf(this.EdBylawCollection); 
			if (this._edStudAbsenceEdAcadYearId != null)
				_tmp.EdStudAbsenceCollection = (TList<EdStudAbsence>) MakeCopyOf(this.EdStudAbsenceCollection); 
			if (this._edStudAbsFwEdAcadYearId != null)
				_tmp.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection); 
			if (this._feeStudInstallmentRequestEdAcadYearId != null)
				_tmp.FeeStudInstallmentRequestCollection = (TList<FeeStudInstallmentRequest>) MakeCopyOf(this.FeeStudInstallmentRequestCollection); 
			if (this._edStudStateTempEdAcadYearPlnId != null)
				_tmp.EdStudStateTempCollection = (TList<EdStudStateTemp>) MakeCopyOf(this.EdStudStateTempCollection); 
			if (this._mltRptDayStudStsEdAcadYearIdGetByEdAcadYearJoinId != null)
				_tmp.MltRptDayStudStsCollectionGetByEdAcadYearJoinId = (TList<MltRptDayStudSts>) MakeCopyOf(this.MltRptDayStudStsCollectionGetByEdAcadYearJoinId); 
			if (this._entPrecondMdDataEdAcadYearId != null)
				_tmp.EntPrecondMdDataCollection = (TList<EntPrecondMdData>) MakeCopyOf(this.EntPrecondMdDataCollection); 
			if (this._saServTerminEdAcadYearId != null)
				_tmp.SaServTerminCollection = (TList<SaServTermin>) MakeCopyOf(this.SaServTerminCollection); 
			if (this._trnsStudCarStkrEdAcadYearId != null)
				_tmp.TrnsStudCarStkrCollection = (TList<TrnsStudCarStkr>) MakeCopyOf(this.TrnsStudCarStkrCollection); 
			if (this._svMessageEdAcadYearId != null)
				_tmp.SvMessageCollection = (TList<SvMessage>) MakeCopyOf(this.SvMessageCollection); 
			if (this._edStudEnrollChangeEdAcadYearFromIdGetByEdAcadYearToId != null)
				_tmp.EdStudEnrollChangeCollectionGetByEdAcadYearToId = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollectionGetByEdAcadYearToId); 
			if (this._feeRefndStdReqEdAcadYearId != null)
				_tmp.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection); 
			if (this._feeStudVoucherEdAcadYearId != null)
				_tmp.FeeStudVoucherCollection = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollection); 
			if (this._accomStudReqEdAcadYearId != null)
				_tmp.AccomStudReqCollection = (TList<AccomStudReq>) MakeCopyOf(this.AccomStudReqCollection); 
			if (this._rsrchStudPostponeReqEdAcadYearId != null)
				_tmp.RsrchStudPostponeReqCollection = (TList<RsrchStudPostponeReq>) MakeCopyOf(this.RsrchStudPostponeReqCollection); 
			if (this._svStudAskAdvEdAcadYearId != null)
				_tmp.SvStudAskAdvCollection = (TList<SvStudAskAdv>) MakeCopyOf(this.SvStudAskAdvCollection); 
			if (this._pgStudPublishEdAcadYearId != null)
				_tmp.PgStudPublishCollection = (TList<PgStudPublish>) MakeCopyOf(this.PgStudPublishCollection); 
			if (this._edStudIntTrnsCourseToEdAcadYearId != null)
				_tmp.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection); 
			if (this._spoSponsorOfferExtEdAcadYearId != null)
				_tmp.SpoSponsorOfferExtCollection = (TList<SpoSponsorOfferExt>) MakeCopyOf(this.SpoSponsorOfferExtCollection); 
			if (this._edStudIntTrnsStateToEdAcadYearId != null)
				_tmp.EdStudIntTrnsStateToCollection = (TList<EdStudIntTrnsStateTo>) MakeCopyOf(this.EdStudIntTrnsStateToCollection); 
			if (this._feeStudFeeItemEdAcadYearId != null)
				_tmp.FeeStudFeeItemCollection = (TList<FeeStudFeeItem>) MakeCopyOf(this.FeeStudFeeItemCollection); 
			if (this._edPrintReqEdAcadYearId != null)
				_tmp.EdPrintReqCollection = (TList<EdPrintReq>) MakeCopyOf(this.EdPrintReqCollection); 
			if (this._pgStudTravelEdAcadYearId != null)
				_tmp.PgStudTravelCollection = (TList<PgStudTravel>) MakeCopyOf(this.PgStudTravelCollection); 
			if (this._edSemAgendaDtlTAdmAcadYearIdGetByTAdmAcadYearId != null)
				_tmp.EdSemAgendaDtlCollectionGetByTAdmAcadYearId = (TList<EdSemAgendaDtl>) MakeCopyOf(this.EdSemAgendaDtlCollectionGetByTAdmAcadYearId); 
			if (this._accomStudBookEdAcadYearId != null)
				_tmp.AccomStudBookCollection = (TList<AccomStudBook>) MakeCopyOf(this.AccomStudBookCollection); 
			if (this._entFullfillMdDataEdAcadYearId != null)
				_tmp.EntFullfillMdDataCollection = (TList<EntFullfillMdData>) MakeCopyOf(this.EntFullfillMdDataCollection); 
			if (this._edStudIntTrnsEdAcadYearReqIdGetByEdAcadYearId != null)
				_tmp.EdStudIntTrnsCollectionGetByEdAcadYearId = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollectionGetByEdAcadYearId); 
			if (this._svStudCompEdAcadYearId != null)
				_tmp.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection); 
			if (this._edStudExcuseEdAcadYearId != null)
				_tmp.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection); 
			if (this._mdiStudHosptlEdAcadYearId != null)
				_tmp.MdiStudHosptlCollection = (TList<MdiStudHosptl>) MakeCopyOf(this.MdiStudHosptlCollection); 
			if (this._feeCourseExpEdAcadYearId != null)
				_tmp.FeeCourseExpCollection = (TList<FeeCourseExp>) MakeCopyOf(this.FeeCourseExpCollection); 
			if (this._seUserCrsAssessEdAcadYearId != null)
				_tmp.SeUserCrsAssessCollection = (TList<SeUserCrsAssess>) MakeCopyOf(this.SeUserCrsAssessCollection); 
			if (this._edStudEnrollChangeEdAcadYearFromIdGetByEdAcadYearFromId != null)
				_tmp.EdStudEnrollChangeCollectionGetByEdAcadYearFromId = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollectionGetByEdAcadYearFromId); 
			if (this._feeInstlmntRuleEdAcadYearId != null)
				_tmp.FeeInstlmntRuleCollection = (TList<FeeInstlmntRule>) MakeCopyOf(this.FeeInstlmntRuleCollection); 
			if (this._edTrainingEdAcadYearId != null)
				_tmp.EdTrainingCollection = (TList<EdTraining>) MakeCopyOf(this.EdTrainingCollection); 
			if (this._scSchdlPeriodEdAcadYearId != null)
				_tmp.ScSchdlPeriodCollection = (TList<ScSchdlPeriod>) MakeCopyOf(this.ScSchdlPeriodCollection); 
			if (this._edStudViolEdAcadYearStopFromIdGetByEdAcadYearStopFromId != null)
				_tmp.EdStudViolCollectionGetByEdAcadYearStopFromId = (TList<EdStudViol>) MakeCopyOf(this.EdStudViolCollectionGetByEdAcadYearStopFromId); 
			if (this._seBlockTransEdAcadYearId != null)
				_tmp.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection); 
			if (this._pgStudConferenceEdAcadYearId != null)
				_tmp.PgStudConferenceCollection = (TList<PgStudConference>) MakeCopyOf(this.PgStudConferenceCollection); 
			if (this._svLecNoteEdAcadYearId != null)
				_tmp.SvLecNoteCollection = (TList<SvLecNote>) MakeCopyOf(this.SvLecNoteCollection); 
			if (this._edStudSemesterTempEdAcadYearId != null)
				_tmp.EdStudSemesterTempCollection = (TList<EdStudSemesterTemp>) MakeCopyOf(this.EdStudSemesterTempCollection); 
			if (this._edStaffCoursePrefEdAcadYearId != null)
				_tmp.EdStaffCoursePrefCollection = (TList<EdStaffCoursePref>) MakeCopyOf(this.EdStaffCoursePrefCollection); 
			if (this._mltRptDayStudStsEdAcadYearIdGetByEdAcadYearId != null)
				_tmp.MltRptDayStudStsCollectionGetByEdAcadYearId = (TList<MltRptDayStudSts>) MakeCopyOf(this.MltRptDayStudStsCollectionGetByEdAcadYearId); 
			if (this._entCourseMdDataEdAcadYearId != null)
				_tmp.EntCourseMdDataCollection = (TList<EntCourseMdData>) MakeCopyOf(this.EntCourseMdDataCollection); 
			if (this._gsCommEdAcadYearId != null)
				_tmp.GsCommCollection = (TList<GsComm>) MakeCopyOf(this.GsCommCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			EdAcadYearEntityData _tmp = new EdAcadYearEntityData();
						
			_tmp.EdAcadYearId = this.EdAcadYearId;
			_tmp.OriginalEdAcadYearId = this.OriginalEdAcadYearId;
			
			_tmp.DescrAr = this.DescrAr;
			_tmp.DescrEn = this.DescrEn;
			_tmp.YearCode = this.YearCode;
			_tmp.YearOrder = this.YearOrder;
			_tmp.YearCalender = this.YearCalender;
			_tmp.CurrentYear = this.CurrentYear;
			_tmp.IsClosed = this.IsClosed;
			
			#region Source Parent Composite Entities
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.EdStudFacultyCollectionGetByEdAcadYearId = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollectionGetByEdAcadYearId, existingCopies); 
			_tmp.FeeFacultyInstallmentCollection = (TList<FeeFacultyInstallment>) MakeCopyOf(this.FeeFacultyInstallmentCollection, existingCopies); 
			_tmp.EdStudTransCollection = (TList<EdStudTrans>) MakeCopyOf(this.EdStudTransCollection, existingCopies); 
			_tmp.FeeAccntYear = (FeeAccntYear) MakeCopyOf(this.FeeAccntYear, existingCopies); 
			_tmp.WfCrsRsltApproveCollection = (TList<WfCrsRsltApprove>) MakeCopyOf(this.WfCrsRsltApproveCollection, existingCopies); 
			_tmp.EdAcadYearFacultyCollection = (TList<EdAcadYearFaculty>) MakeCopyOf(this.EdAcadYearFacultyCollection, existingCopies); 
			_tmp.SaOfficeHourCollection = (TList<SaOfficeHour>) MakeCopyOf(this.SaOfficeHourCollection, existingCopies); 
			_tmp.SvStaffEvlCollection = (TList<SvStaffEvl>) MakeCopyOf(this.SvStaffEvlCollection, existingCopies); 
			_tmp.EdStudCourseRegPreCollection = (TList<EdStudCourseRegPre>) MakeCopyOf(this.EdStudCourseRegPreCollection, existingCopies); 
			_tmp.FeeStudNatSimilarityRequestCollection = (TList<FeeStudNatSimilarityRequest>) MakeCopyOf(this.FeeStudNatSimilarityRequestCollection, existingCopies); 
			_tmp.AdmOpenAcadSemesterCollection = (TList<AdmOpenAcadSemester>) MakeCopyOf(this.AdmOpenAcadSemesterCollection, existingCopies); 
			_tmp.EdStudIntTrnsCollectionGetByEdAcadYearReqId = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollectionGetByEdAcadYearReqId, existingCopies); 
			_tmp.EntCoursePkgMdDataCollection = (TList<EntCoursePkgMdData>) MakeCopyOf(this.EntCoursePkgMdDataCollection, existingCopies); 
			_tmp.FeeUserBondReqCollection = (TList<FeeUserBondReq>) MakeCopyOf(this.FeeUserBondReqCollection, existingCopies); 
			_tmp.EdGraduationAwardCollection = (TList<EdGraduationAward>) MakeCopyOf(this.EdGraduationAwardCollection, existingCopies); 
			_tmp.AccomWfRequestApproveCollection = (TList<AccomWfRequestApprove>) MakeCopyOf(this.AccomWfRequestApproveCollection, existingCopies); 
			_tmp.ScStudGroupCollection = (TList<ScStudGroup>) MakeCopyOf(this.ScStudGroupCollection, existingCopies); 
			_tmp.EdProjectCollection = (TList<EdProject>) MakeCopyOf(this.EdProjectCollection, existingCopies); 
			_tmp.RsrchStudRegisterCollection = (TList<RsrchStudRegister>) MakeCopyOf(this.RsrchStudRegisterCollection, existingCopies); 
			_tmp.EdCourseOutcomesTopicsCollection = (TList<EdCourseOutcomesTopics>) MakeCopyOf(this.EdCourseOutcomesTopicsCollection, existingCopies); 
			_tmp.SpoSponsorOfferCollectionGetByEdAcadYearToId = (TList<SpoSponsorOffer>) MakeCopyOf(this.SpoSponsorOfferCollectionGetByEdAcadYearToId, existingCopies); 
			_tmp.EdCourseTchngCollection = (TList<EdCourseTchng>) MakeCopyOf(this.EdCourseTchngCollection, existingCopies); 
			_tmp.SpoSponsorStudCollectionGetByEdAcadYearToId = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollectionGetByEdAcadYearToId, existingCopies); 
			_tmp.EdExamSchdlCollection = (TList<EdExamSchdl>) MakeCopyOf(this.EdExamSchdlCollection, existingCopies); 
			_tmp.CoControlCollection = (TList<CoControl>) MakeCopyOf(this.CoControlCollection, existingCopies); 
			_tmp.EdStudAcadWarnCollection = (TList<EdStudAcadWarn>) MakeCopyOf(this.EdStudAcadWarnCollection, existingCopies); 
			_tmp.EdAcadPlanCollection = (TList<EdAcadPlan>) MakeCopyOf(this.EdAcadPlanCollection, existingCopies); 
			_tmp.CoCrsRsltRaiseCollection = (TList<CoCrsRsltRaise>) MakeCopyOf(this.CoCrsRsltRaiseCollection, existingCopies); 
			_tmp.EdStudIntTrnsStateFromCollection = (TList<EdStudIntTrnsStateFrom>) MakeCopyOf(this.EdStudIntTrnsStateFromCollection, existingCopies); 
			_tmp.SvUserTaskCollection = (TList<SvUserTask>) MakeCopyOf(this.SvUserTaskCollection, existingCopies); 
			_tmp.MdiStudRecordCollection = (TList<MdiStudRecord>) MakeCopyOf(this.MdiStudRecordCollection, existingCopies); 
			_tmp.EdStudFacultyCollectionGetByEdAcadYearJoinId = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollectionGetByEdAcadYearJoinId, existingCopies); 
			_tmp.FeeFacItemAdmYearCollection = (TList<FeeFacItemAdmYear>) MakeCopyOf(this.FeeFacItemAdmYearCollection, existingCopies); 
			_tmp.EdStudLatenessCollection = (TList<EdStudLateness>) MakeCopyOf(this.EdStudLatenessCollection, existingCopies); 
			_tmp.FeeStudItemCnclCollection = (TList<FeeStudItemCncl>) MakeCopyOf(this.FeeStudItemCnclCollection, existingCopies); 
			_tmp.EdStudBranchPrefCollection = (TList<EdStudBranchPref>) MakeCopyOf(this.EdStudBranchPrefCollection, existingCopies); 
			_tmp.EdAcdadvRmkCollection = (TList<EdAcdadvRmk>) MakeCopyOf(this.EdAcdadvRmkCollection, existingCopies); 
			_tmp.SvSrvyHdrCollection = (TList<SvSrvyHdr>) MakeCopyOf(this.SvSrvyHdrCollection, existingCopies); 
			_tmp.FeeStudPayPostponeCollection = (TList<FeeStudPayPostpone>) MakeCopyOf(this.FeeStudPayPostponeCollection, existingCopies); 
			_tmp.SpoSponsorStudCollectionGetByEdAcadYearId = (TList<SpoSponsorStud>) MakeCopyOf(this.SpoSponsorStudCollectionGetByEdAcadYearId, existingCopies); 
			_tmp.FeeLimitRuleCollection = (TList<FeeLimitRule>) MakeCopyOf(this.FeeLimitRuleCollection, existingCopies); 
			_tmp.MltStudInfoCollection = (TList<MltStudInfo>) MakeCopyOf(this.MltStudInfoCollection, existingCopies); 
			_tmp.FeeTreasuryReqCollection = (TList<FeeTreasuryReq>) MakeCopyOf(this.FeeTreasuryReqCollection, existingCopies); 
			_tmp.FeeStudAllowanceCollection = (TList<FeeStudAllowance>) MakeCopyOf(this.FeeStudAllowanceCollection, existingCopies); 
			_tmp.SpoSponsorOfferCollectionGetByEdAcadYearFromId = (TList<SpoSponsorOffer>) MakeCopyOf(this.SpoSponsorOfferCollectionGetByEdAcadYearFromId, existingCopies); 
			_tmp.EdStudAcadmicAdvCollection = (TList<EdStudAcadmicAdv>) MakeCopyOf(this.EdStudAcadmicAdvCollection, existingCopies); 
			_tmp.AccomStudAbsenceWarnCollection = (TList<AccomStudAbsenceWarn>) MakeCopyOf(this.AccomStudAbsenceWarnCollection, existingCopies); 
			_tmp.EdInttransRuleCollection = (TList<EdInttransRule>) MakeCopyOf(this.EdInttransRuleCollection, existingCopies); 
			_tmp.ScGroupInfoCollection = (TList<ScGroupInfo>) MakeCopyOf(this.ScGroupInfoCollection, existingCopies); 
			_tmp.EdStudStateCollection = (TList<EdStudState>) MakeCopyOf(this.EdStudStateCollection, existingCopies); 
			_tmp.MilCodeCourseCollection = (TList<MilCodeCourse>) MakeCopyOf(this.MilCodeCourseCollection, existingCopies); 
			_tmp.FeeStudFundCollection = (TList<FeeStudFund>) MakeCopyOf(this.FeeStudFundCollection, existingCopies); 
			_tmp.EdSemAgendaDtlCollectionGetByFAdmAcadYearId = (TList<EdSemAgendaDtl>) MakeCopyOf(this.EdSemAgendaDtlCollectionGetByFAdmAcadYearId, existingCopies); 
			_tmp.FeeCdeDiscTypeCollection = (TList<FeeCdeDiscType>) MakeCopyOf(this.FeeCdeDiscTypeCollection, existingCopies); 
			_tmp.FeeItemTrnsBlncCollection = (TList<FeeItemTrnsBlnc>) MakeCopyOf(this.FeeItemTrnsBlncCollection, existingCopies); 
			_tmp.FeeStudCoursesItemCollection = (TList<FeeStudCoursesItem>) MakeCopyOf(this.FeeStudCoursesItemCollection, existingCopies); 
			_tmp.FeeStudDiscCollection = (TList<FeeStudDisc>) MakeCopyOf(this.FeeStudDiscCollection, existingCopies); 
			_tmp.EdSemesterOpenCollection = (TList<EdSemesterOpen>) MakeCopyOf(this.EdSemesterOpenCollection, existingCopies); 
			_tmp.FeeTreasuryCollection = (TList<FeeTreasury>) MakeCopyOf(this.FeeTreasuryCollection, existingCopies); 
			_tmp.CtrStudExpCollection = (TList<CtrStudExp>) MakeCopyOf(this.CtrStudExpCollection, existingCopies); 
			_tmp.MdiStudClnqCollection = (TList<MdiStudClnq>) MakeCopyOf(this.MdiStudClnqCollection, existingCopies); 
			_tmp.PgThesisStudCollection = (TList<PgThesisStud>) MakeCopyOf(this.PgThesisStudCollection, existingCopies); 
			_tmp.GsAgendaHolidayCollection = (TList<GsAgendaHoliday>) MakeCopyOf(this.GsAgendaHolidayCollection, existingCopies); 
			_tmp.EdStudViolCollectionGetByEdAcadYearId = (TList<EdStudViol>) MakeCopyOf(this.EdStudViolCollectionGetByEdAcadYearId, existingCopies); 
			_tmp.EdStudIntTrnsCourseFromCollection = (TList<EdStudIntTrnsCourseFrom>) MakeCopyOf(this.EdStudIntTrnsCourseFromCollection, existingCopies); 
			_tmp.AccomStudAbsenceCollection = (TList<AccomStudAbsence>) MakeCopyOf(this.AccomStudAbsenceCollection, existingCopies); 
			_tmp.TrnsLineCollection = (TList<TrnsLine>) MakeCopyOf(this.TrnsLineCollection, existingCopies); 
			_tmp.PgOfferingCollection = (TList<PgOffering>) MakeCopyOf(this.PgOfferingCollection, existingCopies); 
			_tmp.EntPolcyGrdngHdrCollection = (TList<EntPolcyGrdngHdr>) MakeCopyOf(this.EntPolcyGrdngHdrCollection, existingCopies); 
			_tmp.EntCoursePkgHdrCollection = (TList<EntCoursePkgHdr>) MakeCopyOf(this.EntCoursePkgHdrCollection, existingCopies); 
			_tmp.EdStudTransFromReqCollection = (TList<EdStudTransFromReq>) MakeCopyOf(this.EdStudTransFromReqCollection, existingCopies); 
			_tmp.FeeStudInstallmentCollection = (TList<FeeStudInstallment>) MakeCopyOf(this.FeeStudInstallmentCollection, existingCopies); 
			_tmp.AdmFeePromocodeCollection = (TList<AdmFeePromocode>) MakeCopyOf(this.AdmFeePromocodeCollection, existingCopies); 
			_tmp.EdBranchRuleCollection = (TList<EdBranchRule>) MakeCopyOf(this.EdBranchRuleCollection, existingCopies); 
			_tmp.SpoSponsorStudSemesterCollection = (TList<SpoSponsorStudSemester>) MakeCopyOf(this.SpoSponsorStudSemesterCollection, existingCopies); 
			_tmp.FeeFacultyRuleCollection = (TList<FeeFacultyRule>) MakeCopyOf(this.FeeFacultyRuleCollection, existingCopies); 
			_tmp.EdStudProblemCollection = (TList<EdStudProblem>) MakeCopyOf(this.EdStudProblemCollection, existingCopies); 
			_tmp.FeeItemSemesterCollection = (TList<FeeItemSemester>) MakeCopyOf(this.FeeItemSemesterCollection, existingCopies); 
			_tmp.ScSectionGroupHdrCollection = (TList<ScSectionGroupHdr>) MakeCopyOf(this.ScSectionGroupHdrCollection, existingCopies); 
			_tmp.CtrStudOutCollection = (TList<CtrStudOut>) MakeCopyOf(this.CtrStudOutCollection, existingCopies); 
			_tmp.SpoOfferStudExceptionCollection = (TList<SpoOfferStudException>) MakeCopyOf(this.SpoOfferStudExceptionCollection, existingCopies); 
			_tmp.FeeAccomItemCollection = (TList<FeeAccomItem>) MakeCopyOf(this.FeeAccomItemCollection, existingCopies); 
			_tmp.TrnsStudReqCollection = (TList<TrnsStudReq>) MakeCopyOf(this.TrnsStudReqCollection, existingCopies); 
			_tmp.EdStudExmptReqCollection = (TList<EdStudExmptReq>) MakeCopyOf(this.EdStudExmptReqCollection, existingCopies); 
			_tmp.FeeStudRetrieveRequestCollection = (TList<FeeStudRetrieveRequest>) MakeCopyOf(this.FeeStudRetrieveRequestCollection, existingCopies); 
			_tmp.SvCourseEvalCollection = (TList<SvCourseEval>) MakeCopyOf(this.SvCourseEvalCollection, existingCopies); 
			_tmp.EdStudViolCollectionGetByEdAcadYearStopToId = (TList<EdStudViol>) MakeCopyOf(this.EdStudViolCollectionGetByEdAcadYearStopToId, existingCopies); 
			_tmp.FeeBusLineItemCollection = (TList<FeeBusLineItem>) MakeCopyOf(this.FeeBusLineItemCollection, existingCopies); 
			_tmp.AdmAppRegHistoryCollection = (TList<AdmAppRegHistory>) MakeCopyOf(this.AdmAppRegHistoryCollection, existingCopies); 
			_tmp.EdStudSemesterCollection = (TList<EdStudSemester>) MakeCopyOf(this.EdStudSemesterCollection, existingCopies); 
			_tmp.PgThesisGrantDegreeCollection = (TList<PgThesisGrantDegree>) MakeCopyOf(this.PgThesisGrantDegreeCollection, existingCopies); 
			_tmp.EdStudExecuseReqCollection = (TList<EdStudExecuseReq>) MakeCopyOf(this.EdStudExecuseReqCollection, existingCopies); 
			_tmp.FeeUserFundReqCollection = (TList<FeeUserFundReq>) MakeCopyOf(this.FeeUserFundReqCollection, existingCopies); 
			_tmp.EdOfferingCollection = (TList<EdOffering>) MakeCopyOf(this.EdOfferingCollection, existingCopies); 
			_tmp.EdBylawCollection = (TList<EdBylaw>) MakeCopyOf(this.EdBylawCollection, existingCopies); 
			_tmp.EdStudAbsenceCollection = (TList<EdStudAbsence>) MakeCopyOf(this.EdStudAbsenceCollection, existingCopies); 
			_tmp.EdStudAbsFwCollection = (TList<EdStudAbsFw>) MakeCopyOf(this.EdStudAbsFwCollection, existingCopies); 
			_tmp.FeeStudInstallmentRequestCollection = (TList<FeeStudInstallmentRequest>) MakeCopyOf(this.FeeStudInstallmentRequestCollection, existingCopies); 
			_tmp.EdStudStateTempCollection = (TList<EdStudStateTemp>) MakeCopyOf(this.EdStudStateTempCollection, existingCopies); 
			_tmp.MltRptDayStudStsCollectionGetByEdAcadYearJoinId = (TList<MltRptDayStudSts>) MakeCopyOf(this.MltRptDayStudStsCollectionGetByEdAcadYearJoinId, existingCopies); 
			_tmp.EntPrecondMdDataCollection = (TList<EntPrecondMdData>) MakeCopyOf(this.EntPrecondMdDataCollection, existingCopies); 
			_tmp.SaServTerminCollection = (TList<SaServTermin>) MakeCopyOf(this.SaServTerminCollection, existingCopies); 
			_tmp.TrnsStudCarStkrCollection = (TList<TrnsStudCarStkr>) MakeCopyOf(this.TrnsStudCarStkrCollection, existingCopies); 
			_tmp.SvMessageCollection = (TList<SvMessage>) MakeCopyOf(this.SvMessageCollection, existingCopies); 
			_tmp.EdStudEnrollChangeCollectionGetByEdAcadYearToId = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollectionGetByEdAcadYearToId, existingCopies); 
			_tmp.FeeRefndStdReqCollection = (TList<FeeRefndStdReq>) MakeCopyOf(this.FeeRefndStdReqCollection, existingCopies); 
			_tmp.FeeStudVoucherCollection = (TList<FeeStudVoucher>) MakeCopyOf(this.FeeStudVoucherCollection, existingCopies); 
			_tmp.AccomStudReqCollection = (TList<AccomStudReq>) MakeCopyOf(this.AccomStudReqCollection, existingCopies); 
			_tmp.RsrchStudPostponeReqCollection = (TList<RsrchStudPostponeReq>) MakeCopyOf(this.RsrchStudPostponeReqCollection, existingCopies); 
			_tmp.SvStudAskAdvCollection = (TList<SvStudAskAdv>) MakeCopyOf(this.SvStudAskAdvCollection, existingCopies); 
			_tmp.PgStudPublishCollection = (TList<PgStudPublish>) MakeCopyOf(this.PgStudPublishCollection, existingCopies); 
			_tmp.EdStudIntTrnsCourseToCollection = (TList<EdStudIntTrnsCourseTo>) MakeCopyOf(this.EdStudIntTrnsCourseToCollection, existingCopies); 
			_tmp.SpoSponsorOfferExtCollection = (TList<SpoSponsorOfferExt>) MakeCopyOf(this.SpoSponsorOfferExtCollection, existingCopies); 
			_tmp.EdStudIntTrnsStateToCollection = (TList<EdStudIntTrnsStateTo>) MakeCopyOf(this.EdStudIntTrnsStateToCollection, existingCopies); 
			_tmp.FeeStudFeeItemCollection = (TList<FeeStudFeeItem>) MakeCopyOf(this.FeeStudFeeItemCollection, existingCopies); 
			_tmp.EdPrintReqCollection = (TList<EdPrintReq>) MakeCopyOf(this.EdPrintReqCollection, existingCopies); 
			_tmp.PgStudTravelCollection = (TList<PgStudTravel>) MakeCopyOf(this.PgStudTravelCollection, existingCopies); 
			_tmp.EdSemAgendaDtlCollectionGetByTAdmAcadYearId = (TList<EdSemAgendaDtl>) MakeCopyOf(this.EdSemAgendaDtlCollectionGetByTAdmAcadYearId, existingCopies); 
			_tmp.AccomStudBookCollection = (TList<AccomStudBook>) MakeCopyOf(this.AccomStudBookCollection, existingCopies); 
			_tmp.EntFullfillMdDataCollection = (TList<EntFullfillMdData>) MakeCopyOf(this.EntFullfillMdDataCollection, existingCopies); 
			_tmp.EdStudIntTrnsCollectionGetByEdAcadYearId = (TList<EdStudIntTrns>) MakeCopyOf(this.EdStudIntTrnsCollectionGetByEdAcadYearId, existingCopies); 
			_tmp.SvStudCompCollection = (TList<SvStudComp>) MakeCopyOf(this.SvStudCompCollection, existingCopies); 
			_tmp.EdStudExcuseCollection = (TList<EdStudExcuse>) MakeCopyOf(this.EdStudExcuseCollection, existingCopies); 
			_tmp.MdiStudHosptlCollection = (TList<MdiStudHosptl>) MakeCopyOf(this.MdiStudHosptlCollection, existingCopies); 
			_tmp.FeeCourseExpCollection = (TList<FeeCourseExp>) MakeCopyOf(this.FeeCourseExpCollection, existingCopies); 
			_tmp.SeUserCrsAssessCollection = (TList<SeUserCrsAssess>) MakeCopyOf(this.SeUserCrsAssessCollection, existingCopies); 
			_tmp.EdStudEnrollChangeCollectionGetByEdAcadYearFromId = (TList<EdStudEnrollChange>) MakeCopyOf(this.EdStudEnrollChangeCollectionGetByEdAcadYearFromId, existingCopies); 
			_tmp.FeeInstlmntRuleCollection = (TList<FeeInstlmntRule>) MakeCopyOf(this.FeeInstlmntRuleCollection, existingCopies); 
			_tmp.EdTrainingCollection = (TList<EdTraining>) MakeCopyOf(this.EdTrainingCollection, existingCopies); 
			_tmp.ScSchdlPeriodCollection = (TList<ScSchdlPeriod>) MakeCopyOf(this.ScSchdlPeriodCollection, existingCopies); 
			_tmp.EdStudViolCollectionGetByEdAcadYearStopFromId = (TList<EdStudViol>) MakeCopyOf(this.EdStudViolCollectionGetByEdAcadYearStopFromId, existingCopies); 
			_tmp.SeBlockTransCollection = (TList<SeBlockTrans>) MakeCopyOf(this.SeBlockTransCollection, existingCopies); 
			_tmp.PgStudConferenceCollection = (TList<PgStudConference>) MakeCopyOf(this.PgStudConferenceCollection, existingCopies); 
			_tmp.SvLecNoteCollection = (TList<SvLecNote>) MakeCopyOf(this.SvLecNoteCollection, existingCopies); 
			_tmp.EdStudSemesterTempCollection = (TList<EdStudSemesterTemp>) MakeCopyOf(this.EdStudSemesterTempCollection, existingCopies); 
			_tmp.EdStaffCoursePrefCollection = (TList<EdStaffCoursePref>) MakeCopyOf(this.EdStaffCoursePrefCollection, existingCopies); 
			_tmp.MltRptDayStudStsCollectionGetByEdAcadYearId = (TList<MltRptDayStudSts>) MakeCopyOf(this.MltRptDayStudStsCollectionGetByEdAcadYearId, existingCopies); 
			_tmp.EntCourseMdDataCollection = (TList<EntCourseMdData>) MakeCopyOf(this.EntCourseMdDataCollection, existingCopies); 
			_tmp.GsCommCollection = (TList<GsComm>) MakeCopyOf(this.GsCommCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdAcadYearColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(EdAcadYearColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdAcadYearColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(EdAcadYearColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdAcadYearColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(EdAcadYearColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				EdAcadYearEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new EdAcadYearEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdAcadYearColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(EdAcadYearColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				EdAcadYearEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new EdAcadYearEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region EdAcadYearEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="EdAcadYear"/> object.
	/// </remarks>
	public class EdAcadYearEventArgs : System.EventArgs
	{
		private EdAcadYearColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the EdAcadYearEventArgs class.
		///</summary>
		public EdAcadYearEventArgs(EdAcadYearColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the EdAcadYearEventArgs class.
		///</summary>
		public EdAcadYearEventArgs(EdAcadYearColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The EdAcadYearColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="EdAcadYearColumn" />
		public EdAcadYearColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all EdAcadYear related events.
	///</summary>
	public delegate void EdAcadYearEventHandler(object sender, EdAcadYearEventArgs e);
	
	#region EdAcadYearComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class EdAcadYearComparer : System.Collections.Generic.IComparer<EdAcadYear>
	{
		EdAcadYearColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:EdAcadYearComparer"/> class.
        /// </summary>
		public EdAcadYearComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:EdAcadYearComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public EdAcadYearComparer(EdAcadYearColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="EdAcadYear"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="EdAcadYear"/> to compare.</param>
        /// <param name="b">The second <c>EdAcadYear</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(EdAcadYear a, EdAcadYear b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(EdAcadYear entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(EdAcadYear a, EdAcadYear b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public EdAcadYearColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region EdAcadYearKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="EdAcadYear"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class EdAcadYearKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the EdAcadYearKey class.
		/// </summary>
		public EdAcadYearKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the EdAcadYearKey class.
		/// </summary>
		public EdAcadYearKey(EdAcadYearBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.EdAcadYearId = entity.EdAcadYearId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the EdAcadYearKey class.
		/// </summary>
		public EdAcadYearKey(System.Decimal _edAcadYearId)
		{
			#region Init Properties

			this.EdAcadYearId = _edAcadYearId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private EdAcadYearBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public EdAcadYearBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the EdAcadYearId property
		private System.Decimal _edAcadYearId;
		
		/// <summary>
		/// Gets or sets the EdAcadYearId property.
		/// </summary>
		public System.Decimal EdAcadYearId
		{
			get { return _edAcadYearId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.EdAcadYearId = value;
				
				_edAcadYearId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				EdAcadYearId = ( values["EdAcadYearId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["EdAcadYearId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("EdAcadYearId", EdAcadYearId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("EdAcadYearId: {0}{1}",
								EdAcadYearId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region EdAcadYearColumn Enum
	
	/// <summary>
	/// Enumerate the EdAcadYear columns.
	/// </summary>
	[Serializable]
	public enum EdAcadYearColumn : int
	{
		/// <summary>
		/// EdAcadYearId : 
		/// </summary>
		[EnumTextValue("ED_ACAD_YEAR_ID")]
		[ColumnEnum("ED_ACAD_YEAR_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		EdAcadYearId = 1,
		/// <summary>
		/// DescrAr : 
		/// </summary>
		[EnumTextValue("DESCR_AR")]
		[ColumnEnum("DESCR_AR", typeof(System.String), System.Data.DbType.String, false, false, false, 50)]
		DescrAr = 2,
		/// <summary>
		/// DescrEn : 
		/// </summary>
		[EnumTextValue("DESCR_EN")]
		[ColumnEnum("DESCR_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 50)]
		DescrEn = 3,
		/// <summary>
		/// YearCode : 
		/// </summary>
		[EnumTextValue("YEAR_CODE")]
		[ColumnEnum("YEAR_CODE", typeof(System.String), System.Data.DbType.String, false, false, true, 30)]
		YearCode = 4,
		/// <summary>
		/// YearOrder : 
		/// </summary>
		[EnumTextValue("YEAR_ORDER")]
		[ColumnEnum("YEAR_ORDER", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		YearOrder = 5,
		/// <summary>
		/// YearCalender : 
		/// </summary>
		[EnumTextValue("YEAR_CALENDER")]
		[ColumnEnum("YEAR_CALENDER", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		YearCalender = 6,
		/// <summary>
		/// CurrentYear : XXXX
		/// </summary>
		[EnumTextValue("CURRENT_YEAR")]
		[ColumnEnum("CURRENT_YEAR", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		CurrentYear = 7,
		/// <summary>
		/// IsClosed : XXX
		/// </summary>
		[EnumTextValue("IS_CLOSED")]
		[ColumnEnum("IS_CLOSED", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		IsClosed = 8
	}//End enum

	#endregion EdAcadYearColumn Enum

} // end namespace
