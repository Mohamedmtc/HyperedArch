
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file FeeStudVoucherCrsItem.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'FEE_STUD_VOUCHER_CRS_ITEM' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class FeeStudVoucherCrsItemBase : EntityBase, IFeeStudVoucherCrsItem, IEntityId<FeeStudVoucherCrsItemKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private FeeStudVoucherCrsItemEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private FeeStudVoucherCrsItemEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private FeeStudVoucherCrsItemEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<FeeStudVoucherCrsItem> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event FeeStudVoucherCrsItemEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event FeeStudVoucherCrsItemEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="FeeStudVoucherCrsItemBase"/> instance.
		///</summary>
		public FeeStudVoucherCrsItemBase()
		{
			this.entityData = new FeeStudVoucherCrsItemEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="FeeStudVoucherCrsItemBase"/> instance.
		///</summary>
		///<param name="_feeStudVoucherCrsItemId"></param>
		///<param name="_feeStudVoucherItemId"></param>
		///<param name="_feeInvoiceItemId">بنود الفاتورة</param>
		///<param name="_edCourseId">Modify :Register-add-delete-drop</param>
		///<param name="_crsPayAmnt"></param>
		///<param name="_seUserId"></param>
		///<param name="_lastDate"></param>
		public FeeStudVoucherCrsItemBase(System.Decimal _feeStudVoucherCrsItemId, System.Decimal? _feeStudVoucherItemId, 
			System.Decimal? _feeInvoiceItemId, System.Decimal _edCourseId, System.Decimal _crsPayAmnt, 
			System.Decimal? _seUserId, System.DateTime? _lastDate)
		{
			this.entityData = new FeeStudVoucherCrsItemEntityData();
			this.backupData = null;

			this.FeeStudVoucherCrsItemId = _feeStudVoucherCrsItemId;
			this.FeeStudVoucherItemId = _feeStudVoucherItemId;
			this.FeeInvoiceItemId = _feeInvoiceItemId;
			this.EdCourseId = _edCourseId;
			this.CrsPayAmnt = _crsPayAmnt;
			this.SeUserId = _seUserId;
			this.LastDate = _lastDate;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="FeeStudVoucherCrsItem"/> instance.
		///</summary>
		///<param name="_feeStudVoucherCrsItemId"></param>
		///<param name="_feeStudVoucherItemId"></param>
		///<param name="_feeInvoiceItemId">بنود الفاتورة</param>
		///<param name="_edCourseId">Modify :Register-add-delete-drop</param>
		///<param name="_crsPayAmnt"></param>
		///<param name="_seUserId"></param>
		///<param name="_lastDate"></param>
		public static FeeStudVoucherCrsItem CreateFeeStudVoucherCrsItem(System.Decimal _feeStudVoucherCrsItemId, System.Decimal? _feeStudVoucherItemId, 
			System.Decimal? _feeInvoiceItemId, System.Decimal _edCourseId, System.Decimal _crsPayAmnt, 
			System.Decimal? _seUserId, System.DateTime? _lastDate)
		{
			FeeStudVoucherCrsItem newFeeStudVoucherCrsItem = new FeeStudVoucherCrsItem();
			newFeeStudVoucherCrsItem.FeeStudVoucherCrsItemId = _feeStudVoucherCrsItemId;
			newFeeStudVoucherCrsItem.FeeStudVoucherItemId = _feeStudVoucherItemId;
			newFeeStudVoucherCrsItem.FeeInvoiceItemId = _feeInvoiceItemId;
			newFeeStudVoucherCrsItem.EdCourseId = _edCourseId;
			newFeeStudVoucherCrsItem.CrsPayAmnt = _crsPayAmnt;
			newFeeStudVoucherCrsItem.SeUserId = _seUserId;
			newFeeStudVoucherCrsItem.LastDate = _lastDate;
			return newFeeStudVoucherCrsItem;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the FeeStudVoucherCrsItemId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal FeeStudVoucherCrsItemId
		{
			get
			{
				return this.entityData.FeeStudVoucherCrsItemId; 
			}
			
			set
			{
				if (this.entityData.FeeStudVoucherCrsItemId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherCrsItemColumn.FeeStudVoucherCrsItemId, this.entityData.FeeStudVoucherCrsItemId);
				this.entityData.FeeStudVoucherCrsItemId = value;
				this.EntityId.FeeStudVoucherCrsItemId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherCrsItemColumn.FeeStudVoucherCrsItemId, this.entityData.FeeStudVoucherCrsItemId);
				OnPropertyChanged("FeeStudVoucherCrsItemId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the FEE_STUD_VOUCHER_CRS_ITEM_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the FEE_STUD_VOUCHER_CRS_ITEM_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalFeeStudVoucherCrsItemId
		{
			get { return this.entityData.OriginalFeeStudVoucherCrsItemId; }
			set { this.entityData.OriginalFeeStudVoucherCrsItemId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the FeeStudVoucherItemId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFeeStudVoucherItemIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FeeStudVoucherItemId
		{
			get
			{
				return this.entityData.FeeStudVoucherItemId; 
			}
			
			set
			{
				if (this.entityData.FeeStudVoucherItemId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherCrsItemColumn.FeeStudVoucherItemId, this.entityData.FeeStudVoucherItemId);
				this.entityData.FeeStudVoucherItemId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherCrsItemColumn.FeeStudVoucherItemId, this.entityData.FeeStudVoucherItemId);
				OnPropertyChanged("FeeStudVoucherItemId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the FeeInvoiceItemId property. 
		///		بنود الفاتورة
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsFeeInvoiceItemIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"بنود الفاتورة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? FeeInvoiceItemId
		{
			get
			{
				return this.entityData.FeeInvoiceItemId; 
			}
			
			set
			{
				if (this.entityData.FeeInvoiceItemId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherCrsItemColumn.FeeInvoiceItemId, this.entityData.FeeInvoiceItemId);
				this.entityData.FeeInvoiceItemId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherCrsItemColumn.FeeInvoiceItemId, this.entityData.FeeInvoiceItemId);
				OnPropertyChanged("FeeInvoiceItemId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCourseId property. 
		///		Modify :Register-add-delete-drop
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"Modify :Register-add-delete-drop"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EdCourseId
		{
			get
			{
				return this.entityData.EdCourseId; 
			}
			
			set
			{
				if (this.entityData.EdCourseId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherCrsItemColumn.EdCourseId, this.entityData.EdCourseId);
				this.entityData.EdCourseId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherCrsItemColumn.EdCourseId, this.entityData.EdCourseId);
				OnPropertyChanged("EdCourseId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the CrsPayAmnt property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal CrsPayAmnt
		{
			get
			{
				return this.entityData.CrsPayAmnt; 
			}
			
			set
			{
				if (this.entityData.CrsPayAmnt == value)
					return;
					
				OnColumnChanging(FeeStudVoucherCrsItemColumn.CrsPayAmnt, this.entityData.CrsPayAmnt);
				this.entityData.CrsPayAmnt = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherCrsItemColumn.CrsPayAmnt, this.entityData.CrsPayAmnt);
				OnPropertyChanged("CrsPayAmnt");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(FeeStudVoucherCrsItemColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherCrsItemColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(FeeStudVoucherCrsItemColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(FeeStudVoucherCrsItemColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="EdCourse"/>.
		/// </summary>
		/// <value>The source EdCourse for EdCourseId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCourse EdCourseIdSource
      	{
            get { return entityData.EdCourseIdSource; }
            set { entityData.EdCourseIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="FeeInvoiceItem"/>.
		/// </summary>
		/// <value>The source FeeInvoiceItem for FeeInvoiceItemId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeInvoiceItem FeeInvoiceItemIdSource
      	{
            get { return entityData.FeeInvoiceItemIdSource; }
            set { entityData.FeeInvoiceItemIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="FeeStudVoucherItem"/>.
		/// </summary>
		/// <value>The source FeeStudVoucherItem for FeeStudVoucherItemId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual FeeStudVoucherItem FeeStudVoucherItemIdSource
      	{
            get { return entityData.FeeStudVoucherItemIdSource; }
            set { entityData.FeeStudVoucherItemIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "FEE_STUD_VOUCHER_CRS_ITEM"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"FEE_STUD_VOUCHER_CRS_ITEM_ID", "FEE_STUD_VOUCHER_ITEM_ID", "FEE_INVOICE_ITEM_ID", "ED_COURSE_ID", "CRS_PAY_AMNT", "SE_USER_ID", "LAST_DATE"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as FeeStudVoucherCrsItemEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (FeeStudVoucherCrsItem) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<FeeStudVoucherCrsItem>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as FeeStudVoucherCrsItem);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed FeeStudVoucherCrsItem Entity 
		///</summary>
		protected virtual FeeStudVoucherCrsItem Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			FeeStudVoucherCrsItem copy = new FeeStudVoucherCrsItem();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.FeeStudVoucherCrsItemId = this.FeeStudVoucherCrsItemId;
					copy.OriginalFeeStudVoucherCrsItemId = this.OriginalFeeStudVoucherCrsItemId;
				copy.FeeStudVoucherItemId = this.FeeStudVoucherItemId;
				copy.FeeInvoiceItemId = this.FeeInvoiceItemId;
				copy.EdCourseId = this.EdCourseId;
				copy.CrsPayAmnt = this.CrsPayAmnt;
				copy.SeUserId = this.SeUserId;
				copy.LastDate = this.LastDate;
			
			if (this.EdCourseIdSource != null && existingCopies.Contains(this.EdCourseIdSource))
				copy.EdCourseIdSource = existingCopies[this.EdCourseIdSource] as EdCourse;
			else
				copy.EdCourseIdSource = MakeCopyOf(this.EdCourseIdSource, existingCopies) as EdCourse;
			if (this.FeeInvoiceItemIdSource != null && existingCopies.Contains(this.FeeInvoiceItemIdSource))
				copy.FeeInvoiceItemIdSource = existingCopies[this.FeeInvoiceItemIdSource] as FeeInvoiceItem;
			else
				copy.FeeInvoiceItemIdSource = MakeCopyOf(this.FeeInvoiceItemIdSource, existingCopies) as FeeInvoiceItem;
			if (this.FeeStudVoucherItemIdSource != null && existingCopies.Contains(this.FeeStudVoucherItemIdSource))
				copy.FeeStudVoucherItemIdSource = existingCopies[this.FeeStudVoucherItemIdSource] as FeeStudVoucherItem;
			else
				copy.FeeStudVoucherItemIdSource = MakeCopyOf(this.FeeStudVoucherItemIdSource, existingCopies) as FeeStudVoucherItem;
		
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed FeeStudVoucherCrsItem Entity 
		///</summary>
		public virtual FeeStudVoucherCrsItem Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed FeeStudVoucherCrsItem Entity which is a deep copy of the current entity.
		///</summary>
		public virtual FeeStudVoucherCrsItem DeepCopy()
		{
			return EntityHelper.Clone<FeeStudVoucherCrsItem>(this as FeeStudVoucherCrsItem);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as FeeStudVoucherCrsItemEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new FeeStudVoucherCrsItemEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as FeeStudVoucherCrsItemEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(FeeStudVoucherCrsItemColumn column)
		{
			switch(column)
			{
					case FeeStudVoucherCrsItemColumn.FeeStudVoucherCrsItemId:
					return entityData.FeeStudVoucherCrsItemId != _originalData.FeeStudVoucherCrsItemId;
					case FeeStudVoucherCrsItemColumn.FeeStudVoucherItemId:
					return entityData.FeeStudVoucherItemId != _originalData.FeeStudVoucherItemId;
					case FeeStudVoucherCrsItemColumn.FeeInvoiceItemId:
					return entityData.FeeInvoiceItemId != _originalData.FeeInvoiceItemId;
					case FeeStudVoucherCrsItemColumn.EdCourseId:
					return entityData.EdCourseId != _originalData.EdCourseId;
					case FeeStudVoucherCrsItemColumn.CrsPayAmnt:
					return entityData.CrsPayAmnt != _originalData.CrsPayAmnt;
					case FeeStudVoucherCrsItemColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
					case FeeStudVoucherCrsItemColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< FeeStudVoucherCrsItemColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.FeeStudVoucherCrsItemId != _originalData.FeeStudVoucherCrsItemId;
			result = result || entityData.FeeStudVoucherItemId != _originalData.FeeStudVoucherItemId;
			result = result || entityData.FeeInvoiceItemId != _originalData.FeeInvoiceItemId;
			result = result || entityData.EdCourseId != _originalData.EdCourseId;
			result = result || entityData.CrsPayAmnt != _originalData.CrsPayAmnt;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			result = result || entityData.LastDate != _originalData.LastDate;
			return result;
		}	
		
		///<summary>
		///  Returns a FeeStudVoucherCrsItem Entity with the original data.
		///</summary>
		public FeeStudVoucherCrsItem GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateFeeStudVoucherCrsItem(
				_originalData.FeeStudVoucherCrsItemId,
				_originalData.FeeStudVoucherItemId,
				_originalData.FeeInvoiceItemId,
				_originalData.EdCourseId,
				_originalData.CrsPayAmnt,
				_originalData.SeUserId,
				_originalData.LastDate
				);
				
			return (FeeStudVoucherCrsItem)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="FeeStudVoucherCrsItemBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is FeeStudVoucherCrsItemBase)
				return ValueEquals(this, (FeeStudVoucherCrsItemBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="FeeStudVoucherCrsItemBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.FeeStudVoucherCrsItemId.GetHashCode() ^ 
					((this.FeeStudVoucherItemId == null) ? string.Empty : this.FeeStudVoucherItemId.ToString()).GetHashCode() ^ 
					((this.FeeInvoiceItemId == null) ? string.Empty : this.FeeInvoiceItemId.ToString()).GetHashCode() ^ 
					this.EdCourseId.GetHashCode() ^ 
					this.CrsPayAmnt.GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="FeeStudVoucherCrsItemBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(FeeStudVoucherCrsItemBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="FeeStudVoucherCrsItemBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="FeeStudVoucherCrsItemBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="FeeStudVoucherCrsItemBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(FeeStudVoucherCrsItemBase Object1, FeeStudVoucherCrsItemBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.FeeStudVoucherCrsItemId != Object2.FeeStudVoucherCrsItemId)
				equal = false;
			if ( Object1.FeeStudVoucherItemId != null && Object2.FeeStudVoucherItemId != null )
			{
				if (Object1.FeeStudVoucherItemId != Object2.FeeStudVoucherItemId)
					equal = false;
			}
			else if (Object1.FeeStudVoucherItemId == null ^ Object2.FeeStudVoucherItemId == null )
			{
				equal = false;
			}
			if ( Object1.FeeInvoiceItemId != null && Object2.FeeInvoiceItemId != null )
			{
				if (Object1.FeeInvoiceItemId != Object2.FeeInvoiceItemId)
					equal = false;
			}
			else if (Object1.FeeInvoiceItemId == null ^ Object2.FeeInvoiceItemId == null )
			{
				equal = false;
			}
			if (Object1.EdCourseId != Object2.EdCourseId)
				equal = false;
			if (Object1.CrsPayAmnt != Object2.CrsPayAmnt)
				equal = false;
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((FeeStudVoucherCrsItemBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static FeeStudVoucherCrsItemComparer GetComparer()
        {
            return new FeeStudVoucherCrsItemComparer();
        }
        */

        // Comparer delegates back to FeeStudVoucherCrsItem
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(FeeStudVoucherCrsItem rhs, FeeStudVoucherCrsItemColumn which)
        {
            switch (which)
            {
            	
            	
            	case FeeStudVoucherCrsItemColumn.FeeStudVoucherCrsItemId:
            		return this.FeeStudVoucherCrsItemId.CompareTo(rhs.FeeStudVoucherCrsItemId);
            		
            		                 
            	
            	
            	case FeeStudVoucherCrsItemColumn.FeeStudVoucherItemId:
            		return this.FeeStudVoucherItemId.Value.CompareTo(rhs.FeeStudVoucherItemId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherCrsItemColumn.FeeInvoiceItemId:
            		return this.FeeInvoiceItemId.Value.CompareTo(rhs.FeeInvoiceItemId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherCrsItemColumn.EdCourseId:
            		return this.EdCourseId.CompareTo(rhs.EdCourseId);
            		
            		                 
            	
            	
            	case FeeStudVoucherCrsItemColumn.CrsPayAmnt:
            		return this.CrsPayAmnt.CompareTo(rhs.CrsPayAmnt);
            		
            		                 
            	
            	
            	case FeeStudVoucherCrsItemColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            	
            	
            	case FeeStudVoucherCrsItemColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<FeeStudVoucherCrsItemKey> Members
		
		// member variable for the EntityId property
		private FeeStudVoucherCrsItemKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual FeeStudVoucherCrsItemKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new FeeStudVoucherCrsItemKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("FeeStudVoucherCrsItem")
					.Append("|").Append( this.FeeStudVoucherCrsItemId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{8}{7}- FeeStudVoucherCrsItemId: {0}{7}- FeeStudVoucherItemId: {1}{7}- FeeInvoiceItemId: {2}{7}- EdCourseId: {3}{7}- CrsPayAmnt: {4}{7}- SeUserId: {5}{7}- LastDate: {6}{7}{9}", 
				this.FeeStudVoucherCrsItemId,
				(this.FeeStudVoucherItemId == null) ? string.Empty : this.FeeStudVoucherItemId.ToString(),
				(this.FeeInvoiceItemId == null) ? string.Empty : this.FeeInvoiceItemId.ToString(),
				this.EdCourseId,
				this.CrsPayAmnt,
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'FEE_STUD_VOUCHER_CRS_ITEM' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class FeeStudVoucherCrsItemEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// FEE_STUD_VOUCHER_CRS_ITEM_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "FEE_STUD_VOUCHER_CRS_ITEM"</remarks>
		public System.Decimal FeeStudVoucherCrsItemId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalFeeStudVoucherCrsItemId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// FEE_STUD_VOUCHER_ITEM_ID : 
		/// </summary>
		public System.Decimal?		  FeeStudVoucherItemId = null;
		
		/// <summary>
		/// FEE_INVOICE_ITEM_ID : بنود الفاتورة
		/// </summary>
		public System.Decimal?		  FeeInvoiceItemId = null;
		
		/// <summary>
		/// ED_COURSE_ID : Modify :Register-add-delete-drop
		/// </summary>
		public System.Decimal		  EdCourseId = 0.0m;
		
		/// <summary>
		/// CRS_PAY_AMNT : 
		/// </summary>
		public System.Decimal		  CrsPayAmnt = 0.0m;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private EdCourse _edCourseIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCourse"/>.
		/// </summary>
		/// <value>The source EdCourse for EdCourseId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCourse EdCourseIdSource
      	{
            get { return this._edCourseIdSource; }
            set { this._edCourseIdSource = value; }
      	}
		private FeeInvoiceItem _feeInvoiceItemIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeInvoiceItem"/>.
		/// </summary>
		/// <value>The source FeeInvoiceItem for FeeInvoiceItemId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeInvoiceItem FeeInvoiceItemIdSource
      	{
            get { return this._feeInvoiceItemIdSource; }
            set { this._feeInvoiceItemIdSource = value; }
      	}
		private FeeStudVoucherItem _feeStudVoucherItemIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="FeeStudVoucherItem"/>.
		/// </summary>
		/// <value>The source FeeStudVoucherItem for FeeStudVoucherItemId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual FeeStudVoucherItem FeeStudVoucherItemIdSource
      	{
            get { return this._feeStudVoucherItemIdSource; }
            set { this._feeStudVoucherItemIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			FeeStudVoucherCrsItemEntityData _tmp = new FeeStudVoucherCrsItemEntityData();
						
			_tmp.FeeStudVoucherCrsItemId = this.FeeStudVoucherCrsItemId;
			_tmp.OriginalFeeStudVoucherCrsItemId = this.OriginalFeeStudVoucherCrsItemId;
			
			_tmp.FeeStudVoucherItemId = this.FeeStudVoucherItemId;
			_tmp.FeeInvoiceItemId = this.FeeInvoiceItemId;
			_tmp.EdCourseId = this.EdCourseId;
			_tmp.CrsPayAmnt = this.CrsPayAmnt;
			_tmp.SeUserId = this.SeUserId;
			_tmp.LastDate = this.LastDate;
			
			#region Source Parent Composite Entities
			if (this.EdCourseIdSource != null)
				_tmp.EdCourseIdSource = MakeCopyOf(this.EdCourseIdSource) as EdCourse;
			if (this.FeeInvoiceItemIdSource != null)
				_tmp.FeeInvoiceItemIdSource = MakeCopyOf(this.FeeInvoiceItemIdSource) as FeeInvoiceItem;
			if (this.FeeStudVoucherItemIdSource != null)
				_tmp.FeeStudVoucherItemIdSource = MakeCopyOf(this.FeeStudVoucherItemIdSource) as FeeStudVoucherItem;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			FeeStudVoucherCrsItemEntityData _tmp = new FeeStudVoucherCrsItemEntityData();
						
			_tmp.FeeStudVoucherCrsItemId = this.FeeStudVoucherCrsItemId;
			_tmp.OriginalFeeStudVoucherCrsItemId = this.OriginalFeeStudVoucherCrsItemId;
			
			_tmp.FeeStudVoucherItemId = this.FeeStudVoucherItemId;
			_tmp.FeeInvoiceItemId = this.FeeInvoiceItemId;
			_tmp.EdCourseId = this.EdCourseId;
			_tmp.CrsPayAmnt = this.CrsPayAmnt;
			_tmp.SeUserId = this.SeUserId;
			_tmp.LastDate = this.LastDate;
			
			#region Source Parent Composite Entities
			if (this.EdCourseIdSource != null && existingCopies.Contains(this.EdCourseIdSource))
				_tmp.EdCourseIdSource = existingCopies[this.EdCourseIdSource] as EdCourse;
			else
				_tmp.EdCourseIdSource = MakeCopyOf(this.EdCourseIdSource, existingCopies) as EdCourse;
			if (this.FeeInvoiceItemIdSource != null && existingCopies.Contains(this.FeeInvoiceItemIdSource))
				_tmp.FeeInvoiceItemIdSource = existingCopies[this.FeeInvoiceItemIdSource] as FeeInvoiceItem;
			else
				_tmp.FeeInvoiceItemIdSource = MakeCopyOf(this.FeeInvoiceItemIdSource, existingCopies) as FeeInvoiceItem;
			if (this.FeeStudVoucherItemIdSource != null && existingCopies.Contains(this.FeeStudVoucherItemIdSource))
				_tmp.FeeStudVoucherItemIdSource = existingCopies[this.FeeStudVoucherItemIdSource] as FeeStudVoucherItem;
			else
				_tmp.FeeStudVoucherItemIdSource = MakeCopyOf(this.FeeStudVoucherItemIdSource, existingCopies) as FeeStudVoucherItem;
			#endregion
		
			#region Child Collections
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeStudVoucherCrsItemColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(FeeStudVoucherCrsItemColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeStudVoucherCrsItemColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(FeeStudVoucherCrsItemColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeStudVoucherCrsItemColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(FeeStudVoucherCrsItemColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				FeeStudVoucherCrsItemEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new FeeStudVoucherCrsItemEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="FeeStudVoucherCrsItemColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(FeeStudVoucherCrsItemColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				FeeStudVoucherCrsItemEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new FeeStudVoucherCrsItemEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region FeeStudVoucherCrsItemEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="FeeStudVoucherCrsItem"/> object.
	/// </remarks>
	public class FeeStudVoucherCrsItemEventArgs : System.EventArgs
	{
		private FeeStudVoucherCrsItemColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the FeeStudVoucherCrsItemEventArgs class.
		///</summary>
		public FeeStudVoucherCrsItemEventArgs(FeeStudVoucherCrsItemColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the FeeStudVoucherCrsItemEventArgs class.
		///</summary>
		public FeeStudVoucherCrsItemEventArgs(FeeStudVoucherCrsItemColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The FeeStudVoucherCrsItemColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="FeeStudVoucherCrsItemColumn" />
		public FeeStudVoucherCrsItemColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all FeeStudVoucherCrsItem related events.
	///</summary>
	public delegate void FeeStudVoucherCrsItemEventHandler(object sender, FeeStudVoucherCrsItemEventArgs e);
	
	#region FeeStudVoucherCrsItemComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class FeeStudVoucherCrsItemComparer : System.Collections.Generic.IComparer<FeeStudVoucherCrsItem>
	{
		FeeStudVoucherCrsItemColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:FeeStudVoucherCrsItemComparer"/> class.
        /// </summary>
		public FeeStudVoucherCrsItemComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:FeeStudVoucherCrsItemComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public FeeStudVoucherCrsItemComparer(FeeStudVoucherCrsItemColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="FeeStudVoucherCrsItem"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="FeeStudVoucherCrsItem"/> to compare.</param>
        /// <param name="b">The second <c>FeeStudVoucherCrsItem</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(FeeStudVoucherCrsItem a, FeeStudVoucherCrsItem b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(FeeStudVoucherCrsItem entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(FeeStudVoucherCrsItem a, FeeStudVoucherCrsItem b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public FeeStudVoucherCrsItemColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region FeeStudVoucherCrsItemKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="FeeStudVoucherCrsItem"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class FeeStudVoucherCrsItemKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the FeeStudVoucherCrsItemKey class.
		/// </summary>
		public FeeStudVoucherCrsItemKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the FeeStudVoucherCrsItemKey class.
		/// </summary>
		public FeeStudVoucherCrsItemKey(FeeStudVoucherCrsItemBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.FeeStudVoucherCrsItemId = entity.FeeStudVoucherCrsItemId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the FeeStudVoucherCrsItemKey class.
		/// </summary>
		public FeeStudVoucherCrsItemKey(System.Decimal _feeStudVoucherCrsItemId)
		{
			#region Init Properties

			this.FeeStudVoucherCrsItemId = _feeStudVoucherCrsItemId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private FeeStudVoucherCrsItemBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public FeeStudVoucherCrsItemBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the FeeStudVoucherCrsItemId property
		private System.Decimal _feeStudVoucherCrsItemId;
		
		/// <summary>
		/// Gets or sets the FeeStudVoucherCrsItemId property.
		/// </summary>
		public System.Decimal FeeStudVoucherCrsItemId
		{
			get { return _feeStudVoucherCrsItemId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.FeeStudVoucherCrsItemId = value;
				
				_feeStudVoucherCrsItemId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				FeeStudVoucherCrsItemId = ( values["FeeStudVoucherCrsItemId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["FeeStudVoucherCrsItemId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("FeeStudVoucherCrsItemId", FeeStudVoucherCrsItemId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("FeeStudVoucherCrsItemId: {0}{1}",
								FeeStudVoucherCrsItemId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region FeeStudVoucherCrsItemColumn Enum
	
	/// <summary>
	/// Enumerate the FeeStudVoucherCrsItem columns.
	/// </summary>
	[Serializable]
	public enum FeeStudVoucherCrsItemColumn : int
	{
		/// <summary>
		/// FeeStudVoucherCrsItemId : 
		/// </summary>
		[EnumTextValue("FEE_STUD_VOUCHER_CRS_ITEM_ID")]
		[ColumnEnum("FEE_STUD_VOUCHER_CRS_ITEM_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		FeeStudVoucherCrsItemId = 1,
		/// <summary>
		/// FeeStudVoucherItemId : 
		/// </summary>
		[EnumTextValue("FEE_STUD_VOUCHER_ITEM_ID")]
		[ColumnEnum("FEE_STUD_VOUCHER_ITEM_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FeeStudVoucherItemId = 2,
		/// <summary>
		/// FeeInvoiceItemId : بنود الفاتورة
		/// </summary>
		[EnumTextValue("FEE_INVOICE_ITEM_ID")]
		[ColumnEnum("FEE_INVOICE_ITEM_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		FeeInvoiceItemId = 3,
		/// <summary>
		/// EdCourseId : Modify :Register-add-delete-drop
		/// </summary>
		[EnumTextValue("ED_COURSE_ID")]
		[ColumnEnum("ED_COURSE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdCourseId = 4,
		/// <summary>
		/// CrsPayAmnt : 
		/// </summary>
		[EnumTextValue("CRS_PAY_AMNT")]
		[ColumnEnum("CRS_PAY_AMNT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		CrsPayAmnt = 5,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 6,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 7
	}//End enum

	#endregion FeeStudVoucherCrsItemColumn Enum

} // end namespace
