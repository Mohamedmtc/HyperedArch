
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file PgThesisStudTopic.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'PG_THESIS_STUD_TOPIC' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class PgThesisStudTopicBase : EntityBase, IPgThesisStudTopic, IEntityId<PgThesisStudTopicKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private PgThesisStudTopicEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private PgThesisStudTopicEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private PgThesisStudTopicEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<PgThesisStudTopic> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event PgThesisStudTopicEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event PgThesisStudTopicEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="PgThesisStudTopicBase"/> instance.
		///</summary>
		public PgThesisStudTopicBase()
		{
			this.entityData = new PgThesisStudTopicEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="PgThesisStudTopicBase"/> instance.
		///</summary>
		///<param name="_pgThesisStudTopicId">عنوان ومجال  البحث</param>
		///<param name="_pgThesisStudId">تسجيل بيانات الرسالة-بيانات البحث العلمي</param>
		///<param name="_titleAr">عنوان الرسالة باللغة العربية</param>
		///<param name="_titleEn">عنوان الرسالة باللغة الانجليزية</param>
		///<param name="_topicAr">XXاخر موضوع بحث   ممكن يكون الجهه</param>
		///<param name="_topicEn">XXاخر موضوع بحث</param>
		///<param name="_pgOfferingTopicId">مجال البحث- مواضيع البحث المطروحة</param>
		///<param name="_pgCodeChangeTypeId">سبب التعديل</param>
		///<param name="_notes">ملاحظات / التعديلات المطلوبة</param>
		///<param name="_isLast"></param>
		///<param name="_seUserId"></param>
		///<param name="_lastDate"></param>
		public PgThesisStudTopicBase(System.Decimal _pgThesisStudTopicId, System.Decimal _pgThesisStudId, 
			System.String _titleAr, System.String _titleEn, System.String _topicAr, 
			System.String _topicEn, System.Int32 _pgOfferingTopicId, System.Int32? _pgCodeChangeTypeId, 
			System.String _notes, System.Boolean _isLast, System.Decimal? _seUserId, 
			System.DateTime? _lastDate)
		{
			this.entityData = new PgThesisStudTopicEntityData();
			this.backupData = null;

			this.PgThesisStudTopicId = _pgThesisStudTopicId;
			this.PgThesisStudId = _pgThesisStudId;
			this.TitleAr = _titleAr;
			this.TitleEn = _titleEn;
			this.TopicAr = _topicAr;
			this.TopicEn = _topicEn;
			this.PgOfferingTopicId = _pgOfferingTopicId;
			this.PgCodeChangeTypeId = _pgCodeChangeTypeId;
			this.Notes = _notes;
			this.IsLast = _isLast;
			this.SeUserId = _seUserId;
			this.LastDate = _lastDate;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="PgThesisStudTopic"/> instance.
		///</summary>
		///<param name="_pgThesisStudTopicId">عنوان ومجال  البحث</param>
		///<param name="_pgThesisStudId">تسجيل بيانات الرسالة-بيانات البحث العلمي</param>
		///<param name="_titleAr">عنوان الرسالة باللغة العربية</param>
		///<param name="_titleEn">عنوان الرسالة باللغة الانجليزية</param>
		///<param name="_topicAr">XXاخر موضوع بحث   ممكن يكون الجهه</param>
		///<param name="_topicEn">XXاخر موضوع بحث</param>
		///<param name="_pgOfferingTopicId">مجال البحث- مواضيع البحث المطروحة</param>
		///<param name="_pgCodeChangeTypeId">سبب التعديل</param>
		///<param name="_notes">ملاحظات / التعديلات المطلوبة</param>
		///<param name="_isLast"></param>
		///<param name="_seUserId"></param>
		///<param name="_lastDate"></param>
		public static PgThesisStudTopic CreatePgThesisStudTopic(System.Decimal _pgThesisStudTopicId, System.Decimal _pgThesisStudId, 
			System.String _titleAr, System.String _titleEn, System.String _topicAr, 
			System.String _topicEn, System.Int32 _pgOfferingTopicId, System.Int32? _pgCodeChangeTypeId, 
			System.String _notes, System.Boolean _isLast, System.Decimal? _seUserId, 
			System.DateTime? _lastDate)
		{
			PgThesisStudTopic newPgThesisStudTopic = new PgThesisStudTopic();
			newPgThesisStudTopic.PgThesisStudTopicId = _pgThesisStudTopicId;
			newPgThesisStudTopic.PgThesisStudId = _pgThesisStudId;
			newPgThesisStudTopic.TitleAr = _titleAr;
			newPgThesisStudTopic.TitleEn = _titleEn;
			newPgThesisStudTopic.TopicAr = _topicAr;
			newPgThesisStudTopic.TopicEn = _topicEn;
			newPgThesisStudTopic.PgOfferingTopicId = _pgOfferingTopicId;
			newPgThesisStudTopic.PgCodeChangeTypeId = _pgCodeChangeTypeId;
			newPgThesisStudTopic.Notes = _notes;
			newPgThesisStudTopic.IsLast = _isLast;
			newPgThesisStudTopic.SeUserId = _seUserId;
			newPgThesisStudTopic.LastDate = _lastDate;
			return newPgThesisStudTopic;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the PgThesisStudTopicId property. 
		///		عنوان ومجال  البحث
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"عنوان ومجال  البحث"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal PgThesisStudTopicId
		{
			get
			{
				return this.entityData.PgThesisStudTopicId; 
			}
			
			set
			{
				if (this.entityData.PgThesisStudTopicId == value)
					return;
					
				OnColumnChanging(PgThesisStudTopicColumn.PgThesisStudTopicId, this.entityData.PgThesisStudTopicId);
				this.entityData.PgThesisStudTopicId = value;
				this.EntityId.PgThesisStudTopicId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisStudTopicColumn.PgThesisStudTopicId, this.entityData.PgThesisStudTopicId);
				OnPropertyChanged("PgThesisStudTopicId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the PG_THESIS_STUD_TOPIC_ID property.
		///		عنوان ومجال  البحث
		/// </summary>
		/// <remarks>This is the original value of the PG_THESIS_STUD_TOPIC_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalPgThesisStudTopicId
		{
			get { return this.entityData.OriginalPgThesisStudTopicId; }
			set { this.entityData.OriginalPgThesisStudTopicId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the PgThesisStudId property. 
		///		تسجيل بيانات الرسالة-بيانات البحث العلمي
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"تسجيل بيانات الرسالة-بيانات البحث العلمي"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal PgThesisStudId
		{
			get
			{
				return this.entityData.PgThesisStudId; 
			}
			
			set
			{
				if (this.entityData.PgThesisStudId == value)
					return;
					
				OnColumnChanging(PgThesisStudTopicColumn.PgThesisStudId, this.entityData.PgThesisStudId);
				this.entityData.PgThesisStudId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisStudTopicColumn.PgThesisStudId, this.entityData.PgThesisStudId);
				OnPropertyChanged("PgThesisStudId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TitleAr property. 
		///		عنوان الرسالة باللغة العربية
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@"عنوان الرسالة باللغة العربية"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.String TitleAr
		{
			get
			{
				return this.entityData.TitleAr; 
			}
			
			set
			{
				if (this.entityData.TitleAr == value)
					return;
					
				OnColumnChanging(PgThesisStudTopicColumn.TitleAr, this.entityData.TitleAr);
				this.entityData.TitleAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisStudTopicColumn.TitleAr, this.entityData.TitleAr);
				OnPropertyChanged("TitleAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TitleEn property. 
		///		عنوان الرسالة باللغة الانجليزية
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>
		/// <exception cref="ArgumentNullException">If you attempt to set to null.</exception>




		[DescriptionAttribute(@"عنوان الرسالة باللغة الانجليزية"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.String TitleEn
		{
			get
			{
				return this.entityData.TitleEn; 
			}
			
			set
			{
				if (this.entityData.TitleEn == value)
					return;
					
				OnColumnChanging(PgThesisStudTopicColumn.TitleEn, this.entityData.TitleEn);
				this.entityData.TitleEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisStudTopicColumn.TitleEn, this.entityData.TitleEn);
				OnPropertyChanged("TitleEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TopicAr property. 
		///		XXاخر موضوع بحث   ممكن يكون الجهه
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"XXاخر موضوع بحث   ممكن يكون الجهه"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 400)]
		public virtual System.String TopicAr
		{
			get
			{
				return this.entityData.TopicAr; 
			}
			
			set
			{
				if (this.entityData.TopicAr == value)
					return;
					
				OnColumnChanging(PgThesisStudTopicColumn.TopicAr, this.entityData.TopicAr);
				this.entityData.TopicAr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisStudTopicColumn.TopicAr, this.entityData.TopicAr);
				OnPropertyChanged("TopicAr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TopicEn property. 
		///		XXاخر موضوع بحث
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"XXاخر موضوع بحث"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 400)]
		public virtual System.String TopicEn
		{
			get
			{
				return this.entityData.TopicEn; 
			}
			
			set
			{
				if (this.entityData.TopicEn == value)
					return;
					
				OnColumnChanging(PgThesisStudTopicColumn.TopicEn, this.entityData.TopicEn);
				this.entityData.TopicEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisStudTopicColumn.TopicEn, this.entityData.TopicEn);
				OnPropertyChanged("TopicEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PgOfferingTopicId property. 
		///		مجال البحث- مواضيع البحث المطروحة
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"مجال البحث- مواضيع البحث المطروحة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Int32 PgOfferingTopicId
		{
			get
			{
				return this.entityData.PgOfferingTopicId; 
			}
			
			set
			{
				if (this.entityData.PgOfferingTopicId == value)
					return;
					
				OnColumnChanging(PgThesisStudTopicColumn.PgOfferingTopicId, this.entityData.PgOfferingTopicId);
				this.entityData.PgOfferingTopicId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisStudTopicColumn.PgOfferingTopicId, this.entityData.PgOfferingTopicId);
				OnPropertyChanged("PgOfferingTopicId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the PgCodeChangeTypeId property. 
		///		سبب التعديل
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsPgCodeChangeTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"سبب التعديل"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? PgCodeChangeTypeId
		{
			get
			{
				return this.entityData.PgCodeChangeTypeId; 
			}
			
			set
			{
				if (this.entityData.PgCodeChangeTypeId == value)
					return;
					
				OnColumnChanging(PgThesisStudTopicColumn.PgCodeChangeTypeId, this.entityData.PgCodeChangeTypeId);
				this.entityData.PgCodeChangeTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisStudTopicColumn.PgCodeChangeTypeId, this.entityData.PgCodeChangeTypeId);
				OnPropertyChanged("PgCodeChangeTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Notes property. 
		///		ملاحظات / التعديلات المطلوبة
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"ملاحظات / التعديلات المطلوبة"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.String Notes
		{
			get
			{
				return this.entityData.Notes; 
			}
			
			set
			{
				if (this.entityData.Notes == value)
					return;
					
				OnColumnChanging(PgThesisStudTopicColumn.Notes, this.entityData.Notes);
				this.entityData.Notes = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisStudTopicColumn.Notes, this.entityData.Notes);
				OnPropertyChanged("Notes");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the IsLast property. 
		///		
		/// </summary>
		/// <value>This type is bit.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Boolean IsLast
		{
			get
			{
				return this.entityData.IsLast; 
			}
			
			set
			{
				if (this.entityData.IsLast == value)
					return;
					
				OnColumnChanging(PgThesisStudTopicColumn.IsLast, this.entityData.IsLast);
				this.entityData.IsLast = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisStudTopicColumn.IsLast, this.entityData.IsLast);
				OnPropertyChanged("IsLast");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SeUserId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsSeUserIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? SeUserId
		{
			get
			{
				return this.entityData.SeUserId; 
			}
			
			set
			{
				if (this.entityData.SeUserId == value)
					return;
					
				OnColumnChanging(PgThesisStudTopicColumn.SeUserId, this.entityData.SeUserId);
				this.entityData.SeUserId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisStudTopicColumn.SeUserId, this.entityData.SeUserId);
				OnPropertyChanged("SeUserId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the LastDate property. 
		///		
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsLastDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? LastDate
		{
			get
			{
				return this.entityData.LastDate; 
			}
			
			set
			{
				if (this.entityData.LastDate == value)
					return;
					
				OnColumnChanging(PgThesisStudTopicColumn.LastDate, this.entityData.LastDate);
				this.entityData.LastDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(PgThesisStudTopicColumn.LastDate, this.entityData.LastDate);
				OnPropertyChanged("LastDate");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="PgCodeChangeType"/>.
		/// </summary>
		/// <value>The source PgCodeChangeType for PgCodeChangeTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual PgCodeChangeType PgCodeChangeTypeIdSource
      	{
            get { return entityData.PgCodeChangeTypeIdSource; }
            set { entityData.PgCodeChangeTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="PgOfferingTopic"/>.
		/// </summary>
		/// <value>The source PgOfferingTopic for PgOfferingTopicId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual PgOfferingTopic PgOfferingTopicIdSource
      	{
            get { return entityData.PgOfferingTopicIdSource; }
            set { entityData.PgOfferingTopicIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="PgThesisStud"/>.
		/// </summary>
		/// <value>The source PgThesisStud for PgThesisStudId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual PgThesisStud PgThesisStudIdSource
      	{
            get { return entityData.PgThesisStudIdSource; }
            set { entityData.PgThesisStudIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of PgThesisStudApprove objects
		///	which are related to this object through the relation FK_PG_THESIS_STUD_APPROVE_PG_THESIS_STUD_TOPIC
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<PgThesisStudApprove> PgThesisStudApproveCollection
		{
			get { return entityData.PgThesisStudApproveCollection; }
			set { entityData.PgThesisStudApproveCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("TitleAr", "Title Ar"));
			ValidationRules.AddRule( CommonRules.NotNull,
				new ValidationRuleArgs("TitleEn", "Title En"));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TopicAr", "Topic Ar", 400));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("TopicEn", "Topic En", 400));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "PG_THESIS_STUD_TOPIC"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"PG_THESIS_STUD_TOPIC_ID", "PG_THESIS_STUD_ID", "TITLE_AR", "TITLE_EN", "TOPIC_AR", "TOPIC_EN", "PG_OFFERING_TOPIC_ID", "PG_CODE_CHANGE_TYPE_ID", "NOTES", "IS_LAST", "SE_USER_ID", "LAST_DATE"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as PgThesisStudTopicEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (PgThesisStudTopic) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<PgThesisStudTopic>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as PgThesisStudTopic);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed PgThesisStudTopic Entity 
		///</summary>
		protected virtual PgThesisStudTopic Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			PgThesisStudTopic copy = new PgThesisStudTopic();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.PgThesisStudTopicId = this.PgThesisStudTopicId;
					copy.OriginalPgThesisStudTopicId = this.OriginalPgThesisStudTopicId;
				copy.PgThesisStudId = this.PgThesisStudId;
				copy.TitleAr = this.TitleAr;
				copy.TitleEn = this.TitleEn;
				copy.TopicAr = this.TopicAr;
				copy.TopicEn = this.TopicEn;
				copy.PgOfferingTopicId = this.PgOfferingTopicId;
				copy.PgCodeChangeTypeId = this.PgCodeChangeTypeId;
				copy.Notes = this.Notes;
				copy.IsLast = this.IsLast;
				copy.SeUserId = this.SeUserId;
				copy.LastDate = this.LastDate;
			
			if (this.PgCodeChangeTypeIdSource != null && existingCopies.Contains(this.PgCodeChangeTypeIdSource))
				copy.PgCodeChangeTypeIdSource = existingCopies[this.PgCodeChangeTypeIdSource] as PgCodeChangeType;
			else
				copy.PgCodeChangeTypeIdSource = MakeCopyOf(this.PgCodeChangeTypeIdSource, existingCopies) as PgCodeChangeType;
			if (this.PgOfferingTopicIdSource != null && existingCopies.Contains(this.PgOfferingTopicIdSource))
				copy.PgOfferingTopicIdSource = existingCopies[this.PgOfferingTopicIdSource] as PgOfferingTopic;
			else
				copy.PgOfferingTopicIdSource = MakeCopyOf(this.PgOfferingTopicIdSource, existingCopies) as PgOfferingTopic;
			if (this.PgThesisStudIdSource != null && existingCopies.Contains(this.PgThesisStudIdSource))
				copy.PgThesisStudIdSource = existingCopies[this.PgThesisStudIdSource] as PgThesisStud;
			else
				copy.PgThesisStudIdSource = MakeCopyOf(this.PgThesisStudIdSource, existingCopies) as PgThesisStud;
		
			//deep copy nested objects
			copy.PgThesisStudApproveCollection = (TList<PgThesisStudApprove>) MakeCopyOf(this.PgThesisStudApproveCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed PgThesisStudTopic Entity 
		///</summary>
		public virtual PgThesisStudTopic Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed PgThesisStudTopic Entity which is a deep copy of the current entity.
		///</summary>
		public virtual PgThesisStudTopic DeepCopy()
		{
			return EntityHelper.Clone<PgThesisStudTopic>(this as PgThesisStudTopic);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as PgThesisStudTopicEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new PgThesisStudTopicEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as PgThesisStudTopicEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(PgThesisStudTopicColumn column)
		{
			switch(column)
			{
					case PgThesisStudTopicColumn.PgThesisStudTopicId:
					return entityData.PgThesisStudTopicId != _originalData.PgThesisStudTopicId;
					case PgThesisStudTopicColumn.PgThesisStudId:
					return entityData.PgThesisStudId != _originalData.PgThesisStudId;
					case PgThesisStudTopicColumn.TitleAr:
					return entityData.TitleAr != _originalData.TitleAr;
					case PgThesisStudTopicColumn.TitleEn:
					return entityData.TitleEn != _originalData.TitleEn;
					case PgThesisStudTopicColumn.TopicAr:
					return entityData.TopicAr != _originalData.TopicAr;
					case PgThesisStudTopicColumn.TopicEn:
					return entityData.TopicEn != _originalData.TopicEn;
					case PgThesisStudTopicColumn.PgOfferingTopicId:
					return entityData.PgOfferingTopicId != _originalData.PgOfferingTopicId;
					case PgThesisStudTopicColumn.PgCodeChangeTypeId:
					return entityData.PgCodeChangeTypeId != _originalData.PgCodeChangeTypeId;
					case PgThesisStudTopicColumn.Notes:
					return entityData.Notes != _originalData.Notes;
					case PgThesisStudTopicColumn.IsLast:
					return entityData.IsLast != _originalData.IsLast;
					case PgThesisStudTopicColumn.SeUserId:
					return entityData.SeUserId != _originalData.SeUserId;
					case PgThesisStudTopicColumn.LastDate:
					return entityData.LastDate != _originalData.LastDate;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< PgThesisStudTopicColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.PgThesisStudTopicId != _originalData.PgThesisStudTopicId;
			result = result || entityData.PgThesisStudId != _originalData.PgThesisStudId;
			result = result || entityData.TitleAr != _originalData.TitleAr;
			result = result || entityData.TitleEn != _originalData.TitleEn;
			result = result || entityData.TopicAr != _originalData.TopicAr;
			result = result || entityData.TopicEn != _originalData.TopicEn;
			result = result || entityData.PgOfferingTopicId != _originalData.PgOfferingTopicId;
			result = result || entityData.PgCodeChangeTypeId != _originalData.PgCodeChangeTypeId;
			result = result || entityData.Notes != _originalData.Notes;
			result = result || entityData.IsLast != _originalData.IsLast;
			result = result || entityData.SeUserId != _originalData.SeUserId;
			result = result || entityData.LastDate != _originalData.LastDate;
			return result;
		}	
		
		///<summary>
		///  Returns a PgThesisStudTopic Entity with the original data.
		///</summary>
		public PgThesisStudTopic GetOriginalEntity()
		{
			if (_originalData != null)
				return CreatePgThesisStudTopic(
				_originalData.PgThesisStudTopicId,
				_originalData.PgThesisStudId,
				_originalData.TitleAr,
				_originalData.TitleEn,
				_originalData.TopicAr,
				_originalData.TopicEn,
				_originalData.PgOfferingTopicId,
				_originalData.PgCodeChangeTypeId,
				_originalData.Notes,
				_originalData.IsLast,
				_originalData.SeUserId,
				_originalData.LastDate
				);
				
			return (PgThesisStudTopic)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="PgThesisStudTopicBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is PgThesisStudTopicBase)
				return ValueEquals(this, (PgThesisStudTopicBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="PgThesisStudTopicBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.PgThesisStudTopicId.GetHashCode() ^ 
					this.PgThesisStudId.GetHashCode() ^ 
					this.TitleAr.GetHashCode() ^ 
					this.TitleEn.GetHashCode() ^ 
					((this.TopicAr == null) ? string.Empty : this.TopicAr.ToString()).GetHashCode() ^ 
					((this.TopicEn == null) ? string.Empty : this.TopicEn.ToString()).GetHashCode() ^ 
					this.PgOfferingTopicId.GetHashCode() ^ 
					((this.PgCodeChangeTypeId == null) ? string.Empty : this.PgCodeChangeTypeId.ToString()).GetHashCode() ^ 
					((this.Notes == null) ? string.Empty : this.Notes.ToString()).GetHashCode() ^ 
					this.IsLast.GetHashCode() ^ 
					((this.SeUserId == null) ? string.Empty : this.SeUserId.ToString()).GetHashCode() ^ 
					((this.LastDate == null) ? string.Empty : this.LastDate.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="PgThesisStudTopicBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(PgThesisStudTopicBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="PgThesisStudTopicBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="PgThesisStudTopicBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="PgThesisStudTopicBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(PgThesisStudTopicBase Object1, PgThesisStudTopicBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.PgThesisStudTopicId != Object2.PgThesisStudTopicId)
				equal = false;
			if (Object1.PgThesisStudId != Object2.PgThesisStudId)
				equal = false;
			if (Object1.TitleAr != Object2.TitleAr)
				equal = false;
			if (Object1.TitleEn != Object2.TitleEn)
				equal = false;
			if ( Object1.TopicAr != null && Object2.TopicAr != null )
			{
				if (Object1.TopicAr != Object2.TopicAr)
					equal = false;
			}
			else if (Object1.TopicAr == null ^ Object2.TopicAr == null )
			{
				equal = false;
			}
			if ( Object1.TopicEn != null && Object2.TopicEn != null )
			{
				if (Object1.TopicEn != Object2.TopicEn)
					equal = false;
			}
			else if (Object1.TopicEn == null ^ Object2.TopicEn == null )
			{
				equal = false;
			}
			if (Object1.PgOfferingTopicId != Object2.PgOfferingTopicId)
				equal = false;
			if ( Object1.PgCodeChangeTypeId != null && Object2.PgCodeChangeTypeId != null )
			{
				if (Object1.PgCodeChangeTypeId != Object2.PgCodeChangeTypeId)
					equal = false;
			}
			else if (Object1.PgCodeChangeTypeId == null ^ Object2.PgCodeChangeTypeId == null )
			{
				equal = false;
			}
			if ( Object1.Notes != null && Object2.Notes != null )
			{
				if (Object1.Notes != Object2.Notes)
					equal = false;
			}
			else if (Object1.Notes == null ^ Object2.Notes == null )
			{
				equal = false;
			}
			if (Object1.IsLast != Object2.IsLast)
				equal = false;
			if ( Object1.SeUserId != null && Object2.SeUserId != null )
			{
				if (Object1.SeUserId != Object2.SeUserId)
					equal = false;
			}
			else if (Object1.SeUserId == null ^ Object2.SeUserId == null )
			{
				equal = false;
			}
			if ( Object1.LastDate != null && Object2.LastDate != null )
			{
				if (Object1.LastDate != Object2.LastDate)
					equal = false;
			}
			else if (Object1.LastDate == null ^ Object2.LastDate == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((PgThesisStudTopicBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static PgThesisStudTopicComparer GetComparer()
        {
            return new PgThesisStudTopicComparer();
        }
        */

        // Comparer delegates back to PgThesisStudTopic
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(PgThesisStudTopic rhs, PgThesisStudTopicColumn which)
        {
            switch (which)
            {
            	
            	
            	case PgThesisStudTopicColumn.PgThesisStudTopicId:
            		return this.PgThesisStudTopicId.CompareTo(rhs.PgThesisStudTopicId);
            		
            		                 
            	
            	
            	case PgThesisStudTopicColumn.PgThesisStudId:
            		return this.PgThesisStudId.CompareTo(rhs.PgThesisStudId);
            		
            		                 
            	
            	
            	case PgThesisStudTopicColumn.TitleAr:
            		return this.TitleAr.CompareTo(rhs.TitleAr);
            		
            		                 
            	
            	
            	case PgThesisStudTopicColumn.TitleEn:
            		return this.TitleEn.CompareTo(rhs.TitleEn);
            		
            		                 
            	
            	
            	case PgThesisStudTopicColumn.TopicAr:
            		return this.TopicAr.CompareTo(rhs.TopicAr);
            		
            		                 
            	
            	
            	case PgThesisStudTopicColumn.TopicEn:
            		return this.TopicEn.CompareTo(rhs.TopicEn);
            		
            		                 
            	
            	
            	case PgThesisStudTopicColumn.PgOfferingTopicId:
            		return this.PgOfferingTopicId.CompareTo(rhs.PgOfferingTopicId);
            		
            		                 
            	
            	
            	case PgThesisStudTopicColumn.PgCodeChangeTypeId:
            		return this.PgCodeChangeTypeId.Value.CompareTo(rhs.PgCodeChangeTypeId.Value);
            		
            		                 
            	
            	
            	case PgThesisStudTopicColumn.Notes:
            		return this.Notes.CompareTo(rhs.Notes);
            		
            		                 
            	
            	
            	case PgThesisStudTopicColumn.IsLast:
            		return this.IsLast.CompareTo(rhs.IsLast);
            		
            		                 
            	
            	
            	case PgThesisStudTopicColumn.SeUserId:
            		return this.SeUserId.Value.CompareTo(rhs.SeUserId.Value);
            		
            		                 
            	
            	
            	case PgThesisStudTopicColumn.LastDate:
            		return this.LastDate.Value.CompareTo(rhs.LastDate.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<PgThesisStudTopicKey> Members
		
		// member variable for the EntityId property
		private PgThesisStudTopicKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual PgThesisStudTopicKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new PgThesisStudTopicKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("PgThesisStudTopic")
					.Append("|").Append( this.PgThesisStudTopicId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{13}{12}- PgThesisStudTopicId: {0}{12}- PgThesisStudId: {1}{12}- TitleAr: {2}{12}- TitleEn: {3}{12}- TopicAr: {4}{12}- TopicEn: {5}{12}- PgOfferingTopicId: {6}{12}- PgCodeChangeTypeId: {7}{12}- Notes: {8}{12}- IsLast: {9}{12}- SeUserId: {10}{12}- LastDate: {11}{12}{14}", 
				this.PgThesisStudTopicId,
				this.PgThesisStudId,
				this.TitleAr,
				this.TitleEn,
				(this.TopicAr == null) ? string.Empty : this.TopicAr.ToString(),
				(this.TopicEn == null) ? string.Empty : this.TopicEn.ToString(),
				this.PgOfferingTopicId,
				(this.PgCodeChangeTypeId == null) ? string.Empty : this.PgCodeChangeTypeId.ToString(),
				(this.Notes == null) ? string.Empty : this.Notes.ToString(),
				this.IsLast,
				(this.SeUserId == null) ? string.Empty : this.SeUserId.ToString(),
				(this.LastDate == null) ? string.Empty : this.LastDate.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'PG_THESIS_STUD_TOPIC' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class PgThesisStudTopicEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// PG_THESIS_STUD_TOPIC_ID : عنوان ومجال  البحث
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "PG_THESIS_STUD_TOPIC"</remarks>
		public System.Decimal PgThesisStudTopicId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalPgThesisStudTopicId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// PG_THESIS_STUD_ID : تسجيل بيانات الرسالة-بيانات البحث العلمي
		/// </summary>
		public System.Decimal		  PgThesisStudId = 0.0m;
		
		/// <summary>
		/// TITLE_AR : عنوان الرسالة باللغة العربية
		/// </summary>
		public System.String		  TitleAr = string.Empty;
		
		/// <summary>
		/// TITLE_EN : عنوان الرسالة باللغة الانجليزية
		/// </summary>
		public System.String		  TitleEn = string.Empty;
		
		/// <summary>
		/// TOPIC_AR : XXاخر موضوع بحث   ممكن يكون الجهه
		/// </summary>
		public System.String		  TopicAr = null;
		
		/// <summary>
		/// TOPIC_EN : XXاخر موضوع بحث
		/// </summary>
		public System.String		  TopicEn = null;
		
		/// <summary>
		/// PG_OFFERING_TOPIC_ID : مجال البحث- مواضيع البحث المطروحة
		/// </summary>
		public System.Int32		  PgOfferingTopicId = (int)0;
		
		/// <summary>
		/// PG_CODE_CHANGE_TYPE_ID : سبب التعديل
		/// </summary>
		public System.Int32?		  PgCodeChangeTypeId = null;
		
		/// <summary>
		/// NOTES : ملاحظات / التعديلات المطلوبة
		/// </summary>
		public System.String		  Notes = null;
		
		/// <summary>
		/// IS_LAST : 
		/// </summary>
		public System.Boolean		  IsLast = false;
		
		/// <summary>
		/// SE_USER_ID : 
		/// </summary>
		public System.Decimal?		  SeUserId = null;
		
		/// <summary>
		/// LAST_DATE : 
		/// </summary>
		public System.DateTime?		  LastDate = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private PgCodeChangeType _pgCodeChangeTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="PgCodeChangeType"/>.
		/// </summary>
		/// <value>The source PgCodeChangeType for PgCodeChangeTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual PgCodeChangeType PgCodeChangeTypeIdSource
      	{
            get { return this._pgCodeChangeTypeIdSource; }
            set { this._pgCodeChangeTypeIdSource = value; }
      	}
		private PgOfferingTopic _pgOfferingTopicIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="PgOfferingTopic"/>.
		/// </summary>
		/// <value>The source PgOfferingTopic for PgOfferingTopicId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual PgOfferingTopic PgOfferingTopicIdSource
      	{
            get { return this._pgOfferingTopicIdSource; }
            set { this._pgOfferingTopicIdSource = value; }
      	}
		private PgThesisStud _pgThesisStudIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="PgThesisStud"/>.
		/// </summary>
		/// <value>The source PgThesisStud for PgThesisStudId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual PgThesisStud PgThesisStudIdSource
      	{
            get { return this._pgThesisStudIdSource; }
            set { this._pgThesisStudIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region PgThesisStudApproveCollection
		
		private TList<PgThesisStudApprove> _pgThesisStudApprovePgThesisStudTopicId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _pgThesisStudApprovePgThesisStudTopicId
		/// </summary>
		
		public TList<PgThesisStudApprove> PgThesisStudApproveCollection
		{
			get
			{
				if (_pgThesisStudApprovePgThesisStudTopicId == null)
				{
				_pgThesisStudApprovePgThesisStudTopicId = new TList<PgThesisStudApprove>();
				}
	
				return _pgThesisStudApprovePgThesisStudTopicId;
			}
			set { _pgThesisStudApprovePgThesisStudTopicId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			PgThesisStudTopicEntityData _tmp = new PgThesisStudTopicEntityData();
						
			_tmp.PgThesisStudTopicId = this.PgThesisStudTopicId;
			_tmp.OriginalPgThesisStudTopicId = this.OriginalPgThesisStudTopicId;
			
			_tmp.PgThesisStudId = this.PgThesisStudId;
			_tmp.TitleAr = this.TitleAr;
			_tmp.TitleEn = this.TitleEn;
			_tmp.TopicAr = this.TopicAr;
			_tmp.TopicEn = this.TopicEn;
			_tmp.PgOfferingTopicId = this.PgOfferingTopicId;
			_tmp.PgCodeChangeTypeId = this.PgCodeChangeTypeId;
			_tmp.Notes = this.Notes;
			_tmp.IsLast = this.IsLast;
			_tmp.SeUserId = this.SeUserId;
			_tmp.LastDate = this.LastDate;
			
			#region Source Parent Composite Entities
			if (this.PgCodeChangeTypeIdSource != null)
				_tmp.PgCodeChangeTypeIdSource = MakeCopyOf(this.PgCodeChangeTypeIdSource) as PgCodeChangeType;
			if (this.PgOfferingTopicIdSource != null)
				_tmp.PgOfferingTopicIdSource = MakeCopyOf(this.PgOfferingTopicIdSource) as PgOfferingTopic;
			if (this.PgThesisStudIdSource != null)
				_tmp.PgThesisStudIdSource = MakeCopyOf(this.PgThesisStudIdSource) as PgThesisStud;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._pgThesisStudApprovePgThesisStudTopicId != null)
				_tmp.PgThesisStudApproveCollection = (TList<PgThesisStudApprove>) MakeCopyOf(this.PgThesisStudApproveCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			PgThesisStudTopicEntityData _tmp = new PgThesisStudTopicEntityData();
						
			_tmp.PgThesisStudTopicId = this.PgThesisStudTopicId;
			_tmp.OriginalPgThesisStudTopicId = this.OriginalPgThesisStudTopicId;
			
			_tmp.PgThesisStudId = this.PgThesisStudId;
			_tmp.TitleAr = this.TitleAr;
			_tmp.TitleEn = this.TitleEn;
			_tmp.TopicAr = this.TopicAr;
			_tmp.TopicEn = this.TopicEn;
			_tmp.PgOfferingTopicId = this.PgOfferingTopicId;
			_tmp.PgCodeChangeTypeId = this.PgCodeChangeTypeId;
			_tmp.Notes = this.Notes;
			_tmp.IsLast = this.IsLast;
			_tmp.SeUserId = this.SeUserId;
			_tmp.LastDate = this.LastDate;
			
			#region Source Parent Composite Entities
			if (this.PgCodeChangeTypeIdSource != null && existingCopies.Contains(this.PgCodeChangeTypeIdSource))
				_tmp.PgCodeChangeTypeIdSource = existingCopies[this.PgCodeChangeTypeIdSource] as PgCodeChangeType;
			else
				_tmp.PgCodeChangeTypeIdSource = MakeCopyOf(this.PgCodeChangeTypeIdSource, existingCopies) as PgCodeChangeType;
			if (this.PgOfferingTopicIdSource != null && existingCopies.Contains(this.PgOfferingTopicIdSource))
				_tmp.PgOfferingTopicIdSource = existingCopies[this.PgOfferingTopicIdSource] as PgOfferingTopic;
			else
				_tmp.PgOfferingTopicIdSource = MakeCopyOf(this.PgOfferingTopicIdSource, existingCopies) as PgOfferingTopic;
			if (this.PgThesisStudIdSource != null && existingCopies.Contains(this.PgThesisStudIdSource))
				_tmp.PgThesisStudIdSource = existingCopies[this.PgThesisStudIdSource] as PgThesisStud;
			else
				_tmp.PgThesisStudIdSource = MakeCopyOf(this.PgThesisStudIdSource, existingCopies) as PgThesisStud;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.PgThesisStudApproveCollection = (TList<PgThesisStudApprove>) MakeCopyOf(this.PgThesisStudApproveCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PgThesisStudTopicColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(PgThesisStudTopicColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PgThesisStudTopicColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(PgThesisStudTopicColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PgThesisStudTopicColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(PgThesisStudTopicColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				PgThesisStudTopicEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new PgThesisStudTopicEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="PgThesisStudTopicColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(PgThesisStudTopicColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				PgThesisStudTopicEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new PgThesisStudTopicEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region PgThesisStudTopicEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="PgThesisStudTopic"/> object.
	/// </remarks>
	public class PgThesisStudTopicEventArgs : System.EventArgs
	{
		private PgThesisStudTopicColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the PgThesisStudTopicEventArgs class.
		///</summary>
		public PgThesisStudTopicEventArgs(PgThesisStudTopicColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the PgThesisStudTopicEventArgs class.
		///</summary>
		public PgThesisStudTopicEventArgs(PgThesisStudTopicColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The PgThesisStudTopicColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="PgThesisStudTopicColumn" />
		public PgThesisStudTopicColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all PgThesisStudTopic related events.
	///</summary>
	public delegate void PgThesisStudTopicEventHandler(object sender, PgThesisStudTopicEventArgs e);
	
	#region PgThesisStudTopicComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class PgThesisStudTopicComparer : System.Collections.Generic.IComparer<PgThesisStudTopic>
	{
		PgThesisStudTopicColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:PgThesisStudTopicComparer"/> class.
        /// </summary>
		public PgThesisStudTopicComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:PgThesisStudTopicComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public PgThesisStudTopicComparer(PgThesisStudTopicColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="PgThesisStudTopic"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="PgThesisStudTopic"/> to compare.</param>
        /// <param name="b">The second <c>PgThesisStudTopic</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(PgThesisStudTopic a, PgThesisStudTopic b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(PgThesisStudTopic entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(PgThesisStudTopic a, PgThesisStudTopic b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public PgThesisStudTopicColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region PgThesisStudTopicKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="PgThesisStudTopic"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class PgThesisStudTopicKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the PgThesisStudTopicKey class.
		/// </summary>
		public PgThesisStudTopicKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the PgThesisStudTopicKey class.
		/// </summary>
		public PgThesisStudTopicKey(PgThesisStudTopicBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.PgThesisStudTopicId = entity.PgThesisStudTopicId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the PgThesisStudTopicKey class.
		/// </summary>
		public PgThesisStudTopicKey(System.Decimal _pgThesisStudTopicId)
		{
			#region Init Properties

			this.PgThesisStudTopicId = _pgThesisStudTopicId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private PgThesisStudTopicBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public PgThesisStudTopicBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the PgThesisStudTopicId property
		private System.Decimal _pgThesisStudTopicId;
		
		/// <summary>
		/// Gets or sets the PgThesisStudTopicId property.
		/// </summary>
		public System.Decimal PgThesisStudTopicId
		{
			get { return _pgThesisStudTopicId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.PgThesisStudTopicId = value;
				
				_pgThesisStudTopicId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				PgThesisStudTopicId = ( values["PgThesisStudTopicId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["PgThesisStudTopicId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("PgThesisStudTopicId", PgThesisStudTopicId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("PgThesisStudTopicId: {0}{1}",
								PgThesisStudTopicId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region PgThesisStudTopicColumn Enum
	
	/// <summary>
	/// Enumerate the PgThesisStudTopic columns.
	/// </summary>
	[Serializable]
	public enum PgThesisStudTopicColumn : int
	{
		/// <summary>
		/// PgThesisStudTopicId : عنوان ومجال  البحث
		/// </summary>
		[EnumTextValue("PG_THESIS_STUD_TOPIC_ID")]
		[ColumnEnum("PG_THESIS_STUD_TOPIC_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		PgThesisStudTopicId = 1,
		/// <summary>
		/// PgThesisStudId : تسجيل بيانات الرسالة-بيانات البحث العلمي
		/// </summary>
		[EnumTextValue("PG_THESIS_STUD_ID")]
		[ColumnEnum("PG_THESIS_STUD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		PgThesisStudId = 2,
		/// <summary>
		/// TitleAr : عنوان الرسالة باللغة العربية
		/// </summary>
		[EnumTextValue("TITLE_AR")]
		[ColumnEnum("TITLE_AR", typeof(System.String), System.Data.DbType.String, false, false, false)]
		TitleAr = 3,
		/// <summary>
		/// TitleEn : عنوان الرسالة باللغة الانجليزية
		/// </summary>
		[EnumTextValue("TITLE_EN")]
		[ColumnEnum("TITLE_EN", typeof(System.String), System.Data.DbType.String, false, false, false)]
		TitleEn = 4,
		/// <summary>
		/// TopicAr : XXاخر موضوع بحث   ممكن يكون الجهه
		/// </summary>
		[EnumTextValue("TOPIC_AR")]
		[ColumnEnum("TOPIC_AR", typeof(System.String), System.Data.DbType.String, false, false, true, 400)]
		TopicAr = 5,
		/// <summary>
		/// TopicEn : XXاخر موضوع بحث
		/// </summary>
		[EnumTextValue("TOPIC_EN")]
		[ColumnEnum("TOPIC_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 400)]
		TopicEn = 6,
		/// <summary>
		/// PgOfferingTopicId : مجال البحث- مواضيع البحث المطروحة
		/// </summary>
		[EnumTextValue("PG_OFFERING_TOPIC_ID")]
		[ColumnEnum("PG_OFFERING_TOPIC_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, false)]
		PgOfferingTopicId = 7,
		/// <summary>
		/// PgCodeChangeTypeId : سبب التعديل
		/// </summary>
		[EnumTextValue("PG_CODE_CHANGE_TYPE_ID")]
		[ColumnEnum("PG_CODE_CHANGE_TYPE_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		PgCodeChangeTypeId = 8,
		/// <summary>
		/// Notes : ملاحظات / التعديلات المطلوبة
		/// </summary>
		[EnumTextValue("NOTES")]
		[ColumnEnum("NOTES", typeof(System.String), System.Data.DbType.String, false, false, true)]
		Notes = 9,
		/// <summary>
		/// IsLast : 
		/// </summary>
		[EnumTextValue("IS_LAST")]
		[ColumnEnum("IS_LAST", typeof(System.Boolean), System.Data.DbType.Boolean, false, false, false)]
		IsLast = 10,
		/// <summary>
		/// SeUserId : 
		/// </summary>
		[EnumTextValue("SE_USER_ID")]
		[ColumnEnum("SE_USER_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		SeUserId = 11,
		/// <summary>
		/// LastDate : 
		/// </summary>
		[EnumTextValue("LAST_DATE")]
		[ColumnEnum("LAST_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		LastDate = 12
	}//End enum

	#endregion PgThesisStudTopicColumn Enum

} // end namespace
