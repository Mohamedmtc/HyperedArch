
/*
	File generated by NetTiers templates [www.nettiers.com]
	Important: Do not modify this file. Edit the file EdStudQual.cs instead.
*/

#region using directives
using System;
using System.ComponentModel;
using System.Collections;
using System.Xml.Serialization;
using System.Runtime.Serialization;

using UMIS_VER2.BusinessLyer.Validation;
#endregion

namespace UMIS_VER2.BusinessLyer
{
	///<summary>
	/// An object representation of the 'ED_STUD_QUAL' table. [No description found the database]	
	///</summary>
	[Serializable]
	[DataObject, CLSCompliant(true)]
	public abstract partial class EdStudQualBase : EntityBase, IEdStudQual, IEntityId<EdStudQualKey>, System.IComparable, System.ICloneable, ICloneableEx, IEditableObject, IComponent, INotifyPropertyChanged
	{		
		#region Variable Declarations
		
		/// <summary>
		///  Hold the inner data of the entity.
		/// </summary>
		private EdStudQualEntityData entityData;
		
		/// <summary>
		/// 	Hold the original data of the entity, as loaded from the repository.
		/// </summary>
		private EdStudQualEntityData _originalData;
		
		/// <summary>
		/// 	Hold a backup of the inner data of the entity.
		/// </summary>
		private EdStudQualEntityData backupData; 
		
		/// <summary>
		/// 	Key used if Tracking is Enabled for the <see cref="EntityLocator" />.
		/// </summary>
		private string entityTrackingKey;
		
		/// <summary>
		/// 	Hold the parent TList&lt;entity&gt; in which this entity maybe contained.
		/// </summary>
		/// <remark>Mostly used for databinding</remark>
		[NonSerialized]
		private TList<EdStudQual> parentCollection;
		
		private bool inTxn = false;
		
		/// <summary>
		/// Occurs when a value is being changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdStudQualEventHandler ColumnChanging;		
		
		/// <summary>
		/// Occurs after a value has been changed for the specified column.
		/// </summary>
		[field:NonSerialized]
		public event EdStudQualEventHandler ColumnChanged;
		
		#endregion Variable Declarations
		
		#region Constructors
		///<summary>
		/// Creates a new <see cref="EdStudQualBase"/> instance.
		///</summary>
		public EdStudQualBase()
		{
			this.entityData = new EdStudQualEntityData();
			this.backupData = null;
		}		
		
		///<summary>
		/// Creates a new <see cref="EdStudQualBase"/> instance.
		///</summary>
		///<param name="_edStudQualId"></param>
		///<param name="_edStudId"></param>
		///<param name="_edCodeQualId"></param>
		///<param name="_schoolName"></param>
		///<param name="_qualDate">End Date</param>
		///<param name="_qualTotMark"></param>
		///<param name="_totalDegree"></param>
		///<param name="_totalPercent"></param>
		///<param name="_gsCountryNodeId"></param>
		///<param name="_admApplicantId"></param>
		///<param name="_edCdeQualBrnId"></param>
		///<param name="_gsCdeSchoolId"></param>
		///<param name="_studSeatNum"></param>
		///<param name="_englishPercent"></param>
		///<param name="_convertedPercent"></param>
		///<param name="_edCdeQualCatId"></param>
		///<param name="_admissionFlg"></param>
		///<param name="_gsCdeUniversitiesId"></param>
		///<param name="_tofel"></param>
		///<param name="_cgpa"></param>
		///<param name="_qualRank">ترتيب الطالب فى المؤهل</param>
		///<param name="_edCdeQualPhase"></param>
		///<param name="_edCdeQualStatusId"></param>
		///<param name="_qualStartDate">From date</param>
		///<param name="_gsCodeLanguageId"></param>
		///<param name="_admAppRegHistoryId"></param>
		///<param name="_admCdeExamGrdngId">NU:PG QUAL GRADE</param>
		///<param name="_qualDescEn"></param>
		///<param name="_qualBrnDescEn">Qual Major</param>
		///<param name="_gsCdeFacultyId"></param>
		///<param name="_gsCdeSchoolTypeId">EJUST</param>
		///<param name="_admCdeQualStatusId">EJUST</param>
		///<param name="_notes">EJUST</param>
		///<param name="_qualRsltUsr"></param>
		///<param name="_qualRsltPwd"></param>
		///<param name="_edCdeSchoolGradeId"></param>
		public EdStudQualBase(System.Decimal _edStudQualId, System.Decimal? _edStudId, System.Decimal _edCodeQualId, 
			System.String _schoolName, System.DateTime? _qualDate, System.Decimal? _qualTotMark, 
			System.Decimal? _totalDegree, System.Decimal _totalPercent, System.Decimal? _gsCountryNodeId, 
			System.Decimal? _admApplicantId, System.Decimal? _edCdeQualBrnId, System.Decimal? _gsCdeSchoolId, 
			System.Decimal? _studSeatNum, System.Decimal? _englishPercent, System.Decimal? _convertedPercent, 
			System.Decimal? _edCdeQualCatId, System.Decimal _admissionFlg, System.Decimal? _gsCdeUniversitiesId, 
			System.Decimal? _tofel, System.Decimal? _cgpa, System.Int32? _qualRank, System.Decimal? _edCdeQualPhase, 
			System.Int32? _edCdeQualStatusId, System.DateTime? _qualStartDate, System.Decimal? _gsCodeLanguageId, 
			System.Decimal? _admAppRegHistoryId, System.Decimal? _admCdeExamGrdngId, System.String _qualDescEn, 
			System.String _qualBrnDescEn, System.Decimal? _gsCdeFacultyId, System.Int32? _gsCdeSchoolTypeId, 
			System.Int32? _admCdeQualStatusId, System.String _notes, System.String _qualRsltUsr, 
			System.String _qualRsltPwd, System.Int32? _edCdeSchoolGradeId)
		{
			this.entityData = new EdStudQualEntityData();
			this.backupData = null;

			this.EdStudQualId = _edStudQualId;
			this.EdStudId = _edStudId;
			this.EdCodeQualId = _edCodeQualId;
			this.SchoolName = _schoolName;
			this.QualDate = _qualDate;
			this.QualTotMark = _qualTotMark;
			this.TotalDegree = _totalDegree;
			this.TotalPercent = _totalPercent;
			this.GsCountryNodeId = _gsCountryNodeId;
			this.AdmApplicantId = _admApplicantId;
			this.EdCdeQualBrnId = _edCdeQualBrnId;
			this.GsCdeSchoolId = _gsCdeSchoolId;
			this.StudSeatNum = _studSeatNum;
			this.EnglishPercent = _englishPercent;
			this.ConvertedPercent = _convertedPercent;
			this.EdCdeQualCatId = _edCdeQualCatId;
			this.AdmissionFlg = _admissionFlg;
			this.GsCdeUniversitiesId = _gsCdeUniversitiesId;
			this.Tofel = _tofel;
			this.Cgpa = _cgpa;
			this.QualRank = _qualRank;
			this.EdCdeQualPhase = _edCdeQualPhase;
			this.EdCdeQualStatusId = _edCdeQualStatusId;
			this.QualStartDate = _qualStartDate;
			this.GsCodeLanguageId = _gsCodeLanguageId;
			this.AdmAppRegHistoryId = _admAppRegHistoryId;
			this.AdmCdeExamGrdngId = _admCdeExamGrdngId;
			this.QualDescEn = _qualDescEn;
			this.QualBrnDescEn = _qualBrnDescEn;
			this.GsCdeFacultyId = _gsCdeFacultyId;
			this.GsCdeSchoolTypeId = _gsCdeSchoolTypeId;
			this.AdmCdeQualStatusId = _admCdeQualStatusId;
			this.Notes = _notes;
			this.QualRsltUsr = _qualRsltUsr;
			this.QualRsltPwd = _qualRsltPwd;
			this.EdCdeSchoolGradeId = _edCdeSchoolGradeId;
		}
		
		///<summary>
		/// A simple factory method to create a new <see cref="EdStudQual"/> instance.
		///</summary>
		///<param name="_edStudQualId"></param>
		///<param name="_edStudId"></param>
		///<param name="_edCodeQualId"></param>
		///<param name="_schoolName"></param>
		///<param name="_qualDate">End Date</param>
		///<param name="_qualTotMark"></param>
		///<param name="_totalDegree"></param>
		///<param name="_totalPercent"></param>
		///<param name="_gsCountryNodeId"></param>
		///<param name="_admApplicantId"></param>
		///<param name="_edCdeQualBrnId"></param>
		///<param name="_gsCdeSchoolId"></param>
		///<param name="_studSeatNum"></param>
		///<param name="_englishPercent"></param>
		///<param name="_convertedPercent"></param>
		///<param name="_edCdeQualCatId"></param>
		///<param name="_admissionFlg"></param>
		///<param name="_gsCdeUniversitiesId"></param>
		///<param name="_tofel"></param>
		///<param name="_cgpa"></param>
		///<param name="_qualRank">ترتيب الطالب فى المؤهل</param>
		///<param name="_edCdeQualPhase"></param>
		///<param name="_edCdeQualStatusId"></param>
		///<param name="_qualStartDate">From date</param>
		///<param name="_gsCodeLanguageId"></param>
		///<param name="_admAppRegHistoryId"></param>
		///<param name="_admCdeExamGrdngId">NU:PG QUAL GRADE</param>
		///<param name="_qualDescEn"></param>
		///<param name="_qualBrnDescEn">Qual Major</param>
		///<param name="_gsCdeFacultyId"></param>
		///<param name="_gsCdeSchoolTypeId">EJUST</param>
		///<param name="_admCdeQualStatusId">EJUST</param>
		///<param name="_notes">EJUST</param>
		///<param name="_qualRsltUsr"></param>
		///<param name="_qualRsltPwd"></param>
		///<param name="_edCdeSchoolGradeId"></param>
		public static EdStudQual CreateEdStudQual(System.Decimal _edStudQualId, System.Decimal? _edStudId, System.Decimal _edCodeQualId, 
			System.String _schoolName, System.DateTime? _qualDate, System.Decimal? _qualTotMark, 
			System.Decimal? _totalDegree, System.Decimal _totalPercent, System.Decimal? _gsCountryNodeId, 
			System.Decimal? _admApplicantId, System.Decimal? _edCdeQualBrnId, System.Decimal? _gsCdeSchoolId, 
			System.Decimal? _studSeatNum, System.Decimal? _englishPercent, System.Decimal? _convertedPercent, 
			System.Decimal? _edCdeQualCatId, System.Decimal _admissionFlg, System.Decimal? _gsCdeUniversitiesId, 
			System.Decimal? _tofel, System.Decimal? _cgpa, System.Int32? _qualRank, System.Decimal? _edCdeQualPhase, 
			System.Int32? _edCdeQualStatusId, System.DateTime? _qualStartDate, System.Decimal? _gsCodeLanguageId, 
			System.Decimal? _admAppRegHistoryId, System.Decimal? _admCdeExamGrdngId, System.String _qualDescEn, 
			System.String _qualBrnDescEn, System.Decimal? _gsCdeFacultyId, System.Int32? _gsCdeSchoolTypeId, 
			System.Int32? _admCdeQualStatusId, System.String _notes, System.String _qualRsltUsr, 
			System.String _qualRsltPwd, System.Int32? _edCdeSchoolGradeId)
		{
			EdStudQual newEdStudQual = new EdStudQual();
			newEdStudQual.EdStudQualId = _edStudQualId;
			newEdStudQual.EdStudId = _edStudId;
			newEdStudQual.EdCodeQualId = _edCodeQualId;
			newEdStudQual.SchoolName = _schoolName;
			newEdStudQual.QualDate = _qualDate;
			newEdStudQual.QualTotMark = _qualTotMark;
			newEdStudQual.TotalDegree = _totalDegree;
			newEdStudQual.TotalPercent = _totalPercent;
			newEdStudQual.GsCountryNodeId = _gsCountryNodeId;
			newEdStudQual.AdmApplicantId = _admApplicantId;
			newEdStudQual.EdCdeQualBrnId = _edCdeQualBrnId;
			newEdStudQual.GsCdeSchoolId = _gsCdeSchoolId;
			newEdStudQual.StudSeatNum = _studSeatNum;
			newEdStudQual.EnglishPercent = _englishPercent;
			newEdStudQual.ConvertedPercent = _convertedPercent;
			newEdStudQual.EdCdeQualCatId = _edCdeQualCatId;
			newEdStudQual.AdmissionFlg = _admissionFlg;
			newEdStudQual.GsCdeUniversitiesId = _gsCdeUniversitiesId;
			newEdStudQual.Tofel = _tofel;
			newEdStudQual.Cgpa = _cgpa;
			newEdStudQual.QualRank = _qualRank;
			newEdStudQual.EdCdeQualPhase = _edCdeQualPhase;
			newEdStudQual.EdCdeQualStatusId = _edCdeQualStatusId;
			newEdStudQual.QualStartDate = _qualStartDate;
			newEdStudQual.GsCodeLanguageId = _gsCodeLanguageId;
			newEdStudQual.AdmAppRegHistoryId = _admAppRegHistoryId;
			newEdStudQual.AdmCdeExamGrdngId = _admCdeExamGrdngId;
			newEdStudQual.QualDescEn = _qualDescEn;
			newEdStudQual.QualBrnDescEn = _qualBrnDescEn;
			newEdStudQual.GsCdeFacultyId = _gsCdeFacultyId;
			newEdStudQual.GsCdeSchoolTypeId = _gsCdeSchoolTypeId;
			newEdStudQual.AdmCdeQualStatusId = _admCdeQualStatusId;
			newEdStudQual.Notes = _notes;
			newEdStudQual.QualRsltUsr = _qualRsltUsr;
			newEdStudQual.QualRsltPwd = _qualRsltPwd;
			newEdStudQual.EdCdeSchoolGradeId = _edCdeSchoolGradeId;
			return newEdStudQual;
		}
				
		#endregion Constructors
			
		#region Properties	
		
		#region Data Properties		
		/// <summary>
		/// 	Gets or sets the EdStudQualId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(true, false, false)]
		public virtual System.Decimal EdStudQualId
		{
			get
			{
				return this.entityData.EdStudQualId; 
			}
			
			set
			{
				if (this.entityData.EdStudQualId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.EdStudQualId, this.entityData.EdStudQualId);
				this.entityData.EdStudQualId = value;
				this.EntityId.EdStudQualId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.EdStudQualId, this.entityData.EdStudQualId);
				OnPropertyChanged("EdStudQualId");
			}
		}
		
		/// <summary>
		/// 	Get the original value of the ED_STUD_QUAL_ID property.
		///		
		/// </summary>
		/// <remarks>This is the original value of the ED_STUD_QUAL_ID property.</remarks>
		/// <value>This type is numeric</value>
		[BrowsableAttribute(false)/*, XmlIgnoreAttribute()*/]
		public  virtual System.Decimal OriginalEdStudQualId
		{
			get { return this.entityData.OriginalEdStudQualId; }
			set { this.entityData.OriginalEdStudQualId = value; }
		}
		
		/// <summary>
		/// 	Gets or sets the EdStudId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdStudIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdStudId
		{
			get
			{
				return this.entityData.EdStudId; 
			}
			
			set
			{
				if (this.entityData.EdStudId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.EdStudId, this.entityData.EdStudId);
				this.entityData.EdStudId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.EdStudId, this.entityData.EdStudId);
				OnPropertyChanged("EdStudId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCodeQualId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal EdCodeQualId
		{
			get
			{
				return this.entityData.EdCodeQualId; 
			}
			
			set
			{
				if (this.entityData.EdCodeQualId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.EdCodeQualId, this.entityData.EdCodeQualId);
				this.entityData.EdCodeQualId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.EdCodeQualId, this.entityData.EdCodeQualId);
				OnPropertyChanged("EdCodeQualId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the SchoolName property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 160)]
		public virtual System.String SchoolName
		{
			get
			{
				return this.entityData.SchoolName; 
			}
			
			set
			{
				if (this.entityData.SchoolName == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.SchoolName, this.entityData.SchoolName);
				this.entityData.SchoolName = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.SchoolName, this.entityData.SchoolName);
				OnPropertyChanged("SchoolName");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the QualDate property. 
		///		End Date
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsQualDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"End Date"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? QualDate
		{
			get
			{
				return this.entityData.QualDate; 
			}
			
			set
			{
				if (this.entityData.QualDate == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.QualDate, this.entityData.QualDate);
				this.entityData.QualDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.QualDate, this.entityData.QualDate);
				OnPropertyChanged("QualDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the QualTotMark property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsQualTotMarkNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? QualTotMark
		{
			get
			{
				return this.entityData.QualTotMark; 
			}
			
			set
			{
				if (this.entityData.QualTotMark == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.QualTotMark, this.entityData.QualTotMark);
				this.entityData.QualTotMark = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.QualTotMark, this.entityData.QualTotMark);
				OnPropertyChanged("QualTotMark");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TotalDegree property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTotalDegreeNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? TotalDegree
		{
			get
			{
				return this.entityData.TotalDegree; 
			}
			
			set
			{
				if (this.entityData.TotalDegree == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.TotalDegree, this.entityData.TotalDegree);
				this.entityData.TotalDegree = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.TotalDegree, this.entityData.TotalDegree);
				OnPropertyChanged("TotalDegree");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the TotalPercent property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal TotalPercent
		{
			get
			{
				return this.entityData.TotalPercent; 
			}
			
			set
			{
				if (this.entityData.TotalPercent == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.TotalPercent, this.entityData.TotalPercent);
				this.entityData.TotalPercent = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.TotalPercent, this.entityData.TotalPercent);
				OnPropertyChanged("TotalPercent");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCountryNodeId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCountryNodeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCountryNodeId
		{
			get
			{
				return this.entityData.GsCountryNodeId; 
			}
			
			set
			{
				if (this.entityData.GsCountryNodeId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.GsCountryNodeId, this.entityData.GsCountryNodeId);
				this.entityData.GsCountryNodeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.GsCountryNodeId, this.entityData.GsCountryNodeId);
				OnPropertyChanged("GsCountryNodeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmApplicantId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmApplicantIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmApplicantId
		{
			get
			{
				return this.entityData.AdmApplicantId; 
			}
			
			set
			{
				if (this.entityData.AdmApplicantId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.AdmApplicantId, this.entityData.AdmApplicantId);
				this.entityData.AdmApplicantId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.AdmApplicantId, this.entityData.AdmApplicantId);
				OnPropertyChanged("AdmApplicantId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCdeQualBrnId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCdeQualBrnIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCdeQualBrnId
		{
			get
			{
				return this.entityData.EdCdeQualBrnId; 
			}
			
			set
			{
				if (this.entityData.EdCdeQualBrnId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.EdCdeQualBrnId, this.entityData.EdCdeQualBrnId);
				this.entityData.EdCdeQualBrnId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.EdCdeQualBrnId, this.entityData.EdCdeQualBrnId);
				OnPropertyChanged("EdCdeQualBrnId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCdeSchoolId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCdeSchoolIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCdeSchoolId
		{
			get
			{
				return this.entityData.GsCdeSchoolId; 
			}
			
			set
			{
				if (this.entityData.GsCdeSchoolId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.GsCdeSchoolId, this.entityData.GsCdeSchoolId);
				this.entityData.GsCdeSchoolId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.GsCdeSchoolId, this.entityData.GsCdeSchoolId);
				OnPropertyChanged("GsCdeSchoolId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the StudSeatNum property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsStudSeatNumNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? StudSeatNum
		{
			get
			{
				return this.entityData.StudSeatNum; 
			}
			
			set
			{
				if (this.entityData.StudSeatNum == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.StudSeatNum, this.entityData.StudSeatNum);
				this.entityData.StudSeatNum = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.StudSeatNum, this.entityData.StudSeatNum);
				OnPropertyChanged("StudSeatNum");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EnglishPercent property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEnglishPercentNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EnglishPercent
		{
			get
			{
				return this.entityData.EnglishPercent; 
			}
			
			set
			{
				if (this.entityData.EnglishPercent == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.EnglishPercent, this.entityData.EnglishPercent);
				this.entityData.EnglishPercent = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.EnglishPercent, this.entityData.EnglishPercent);
				OnPropertyChanged("EnglishPercent");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the ConvertedPercent property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsConvertedPercentNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? ConvertedPercent
		{
			get
			{
				return this.entityData.ConvertedPercent; 
			}
			
			set
			{
				if (this.entityData.ConvertedPercent == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.ConvertedPercent, this.entityData.ConvertedPercent);
				this.entityData.ConvertedPercent = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.ConvertedPercent, this.entityData.ConvertedPercent);
				OnPropertyChanged("ConvertedPercent");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCdeQualCatId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCdeQualCatIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCdeQualCatId
		{
			get
			{
				return this.entityData.EdCdeQualCatId; 
			}
			
			set
			{
				if (this.entityData.EdCdeQualCatId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.EdCdeQualCatId, this.entityData.EdCdeQualCatId);
				this.entityData.EdCdeQualCatId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.EdCdeQualCatId, this.entityData.EdCdeQualCatId);
				OnPropertyChanged("EdCdeQualCatId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmissionFlg property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can not be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, false)]
		public virtual System.Decimal AdmissionFlg
		{
			get
			{
				return this.entityData.AdmissionFlg; 
			}
			
			set
			{
				if (this.entityData.AdmissionFlg == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.AdmissionFlg, this.entityData.AdmissionFlg);
				this.entityData.AdmissionFlg = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.AdmissionFlg, this.entityData.AdmissionFlg);
				OnPropertyChanged("AdmissionFlg");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCdeUniversitiesId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCdeUniversitiesIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCdeUniversitiesId
		{
			get
			{
				return this.entityData.GsCdeUniversitiesId; 
			}
			
			set
			{
				if (this.entityData.GsCdeUniversitiesId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.GsCdeUniversitiesId, this.entityData.GsCdeUniversitiesId);
				this.entityData.GsCdeUniversitiesId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.GsCdeUniversitiesId, this.entityData.GsCdeUniversitiesId);
				OnPropertyChanged("GsCdeUniversitiesId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Tofel property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsTofelNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? Tofel
		{
			get
			{
				return this.entityData.Tofel; 
			}
			
			set
			{
				if (this.entityData.Tofel == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.Tofel, this.entityData.Tofel);
				this.entityData.Tofel = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.Tofel, this.entityData.Tofel);
				OnPropertyChanged("Tofel");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Cgpa property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsCgpaNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? Cgpa
		{
			get
			{
				return this.entityData.Cgpa; 
			}
			
			set
			{
				if (this.entityData.Cgpa == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.Cgpa, this.entityData.Cgpa);
				this.entityData.Cgpa = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.Cgpa, this.entityData.Cgpa);
				OnPropertyChanged("Cgpa");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the QualRank property. 
		///		ترتيب الطالب فى المؤهل
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsQualRankNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"ترتيب الطالب فى المؤهل"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? QualRank
		{
			get
			{
				return this.entityData.QualRank; 
			}
			
			set
			{
				if (this.entityData.QualRank == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.QualRank, this.entityData.QualRank);
				this.entityData.QualRank = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.QualRank, this.entityData.QualRank);
				OnPropertyChanged("QualRank");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCdeQualPhase property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsEdCdeQualPhaseNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? EdCdeQualPhase
		{
			get
			{
				return this.entityData.EdCdeQualPhase; 
			}
			
			set
			{
				if (this.entityData.EdCdeQualPhase == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.EdCdeQualPhase, this.entityData.EdCdeQualPhase);
				this.entityData.EdCdeQualPhase = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.EdCdeQualPhase, this.entityData.EdCdeQualPhase);
				OnPropertyChanged("EdCdeQualPhase");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCdeQualStatusId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsEdCdeQualStatusIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? EdCdeQualStatusId
		{
			get
			{
				return this.entityData.EdCdeQualStatusId; 
			}
			
			set
			{
				if (this.entityData.EdCdeQualStatusId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.EdCdeQualStatusId, this.entityData.EdCdeQualStatusId);
				this.entityData.EdCdeQualStatusId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.EdCdeQualStatusId, this.entityData.EdCdeQualStatusId);
				OnPropertyChanged("EdCdeQualStatusId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the QualStartDate property. 
		///		From date
		/// </summary>
		/// <value>This type is datetime.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return DateTime.MinValue. It is up to the developer
		/// to check the value of IsQualStartDateNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"From date"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.DateTime? QualStartDate
		{
			get
			{
				return this.entityData.QualStartDate; 
			}
			
			set
			{
				if (this.entityData.QualStartDate == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.QualStartDate, this.entityData.QualStartDate);
				this.entityData.QualStartDate = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.QualStartDate, this.entityData.QualStartDate);
				OnPropertyChanged("QualStartDate");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCodeLanguageId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCodeLanguageIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCodeLanguageId
		{
			get
			{
				return this.entityData.GsCodeLanguageId; 
			}
			
			set
			{
				if (this.entityData.GsCodeLanguageId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.GsCodeLanguageId, this.entityData.GsCodeLanguageId);
				this.entityData.GsCodeLanguageId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.GsCodeLanguageId, this.entityData.GsCodeLanguageId);
				OnPropertyChanged("GsCodeLanguageId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmAppRegHistoryId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmAppRegHistoryIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmAppRegHistoryId
		{
			get
			{
				return this.entityData.AdmAppRegHistoryId; 
			}
			
			set
			{
				if (this.entityData.AdmAppRegHistoryId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.AdmAppRegHistoryId, this.entityData.AdmAppRegHistoryId);
				this.entityData.AdmAppRegHistoryId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.AdmAppRegHistoryId, this.entityData.AdmAppRegHistoryId);
				OnPropertyChanged("AdmAppRegHistoryId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmCdeExamGrdngId property. 
		///		NU:PG QUAL GRADE
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsAdmCdeExamGrdngIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"NU:PG QUAL GRADE"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? AdmCdeExamGrdngId
		{
			get
			{
				return this.entityData.AdmCdeExamGrdngId; 
			}
			
			set
			{
				if (this.entityData.AdmCdeExamGrdngId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.AdmCdeExamGrdngId, this.entityData.AdmCdeExamGrdngId);
				this.entityData.AdmCdeExamGrdngId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.AdmCdeExamGrdngId, this.entityData.AdmCdeExamGrdngId);
				OnPropertyChanged("AdmCdeExamGrdngId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the QualDescEn property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String QualDescEn
		{
			get
			{
				return this.entityData.QualDescEn; 
			}
			
			set
			{
				if (this.entityData.QualDescEn == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.QualDescEn, this.entityData.QualDescEn);
				this.entityData.QualDescEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.QualDescEn, this.entityData.QualDescEn);
				OnPropertyChanged("QualDescEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the QualBrnDescEn property. 
		///		Qual Major
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"Qual Major"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String QualBrnDescEn
		{
			get
			{
				return this.entityData.QualBrnDescEn; 
			}
			
			set
			{
				if (this.entityData.QualBrnDescEn == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.QualBrnDescEn, this.entityData.QualBrnDescEn);
				this.entityData.QualBrnDescEn = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.QualBrnDescEn, this.entityData.QualBrnDescEn);
				OnPropertyChanged("QualBrnDescEn");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCdeFacultyId property. 
		///		
		/// </summary>
		/// <value>This type is numeric.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return 0.0m. It is up to the developer
		/// to check the value of IsGsCdeFacultyIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Decimal? GsCdeFacultyId
		{
			get
			{
				return this.entityData.GsCdeFacultyId; 
			}
			
			set
			{
				if (this.entityData.GsCdeFacultyId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.GsCdeFacultyId, this.entityData.GsCdeFacultyId);
				this.entityData.GsCdeFacultyId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.GsCdeFacultyId, this.entityData.GsCdeFacultyId);
				OnPropertyChanged("GsCdeFacultyId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the GsCdeSchoolTypeId property. 
		///		EJUST
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsGsCdeSchoolTypeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"EJUST"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? GsCdeSchoolTypeId
		{
			get
			{
				return this.entityData.GsCdeSchoolTypeId; 
			}
			
			set
			{
				if (this.entityData.GsCdeSchoolTypeId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.GsCdeSchoolTypeId, this.entityData.GsCdeSchoolTypeId);
				this.entityData.GsCdeSchoolTypeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.GsCdeSchoolTypeId, this.entityData.GsCdeSchoolTypeId);
				OnPropertyChanged("GsCdeSchoolTypeId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the AdmCdeQualStatusId property. 
		///		EJUST
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsAdmCdeQualStatusIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@"EJUST"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? AdmCdeQualStatusId
		{
			get
			{
				return this.entityData.AdmCdeQualStatusId; 
			}
			
			set
			{
				if (this.entityData.AdmCdeQualStatusId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.AdmCdeQualStatusId, this.entityData.AdmCdeQualStatusId);
				this.entityData.AdmCdeQualStatusId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.AdmCdeQualStatusId, this.entityData.AdmCdeQualStatusId);
				OnPropertyChanged("AdmCdeQualStatusId");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the Notes property. 
		///		EJUST
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@"EJUST"), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 250)]
		public virtual System.String Notes
		{
			get
			{
				return this.entityData.Notes; 
			}
			
			set
			{
				if (this.entityData.Notes == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.Notes, this.entityData.Notes);
				this.entityData.Notes = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.Notes, this.entityData.Notes);
				OnPropertyChanged("Notes");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the QualRsltUsr property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String QualRsltUsr
		{
			get
			{
				return this.entityData.QualRsltUsr; 
			}
			
			set
			{
				if (this.entityData.QualRsltUsr == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.QualRsltUsr, this.entityData.QualRsltUsr);
				this.entityData.QualRsltUsr = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.QualRsltUsr, this.entityData.QualRsltUsr);
				OnPropertyChanged("QualRsltUsr");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the QualRsltPwd property. 
		///		
		/// </summary>
		/// <value>This type is nvarchar.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true, 100)]
		public virtual System.String QualRsltPwd
		{
			get
			{
				return this.entityData.QualRsltPwd; 
			}
			
			set
			{
				if (this.entityData.QualRsltPwd == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.QualRsltPwd, this.entityData.QualRsltPwd);
				this.entityData.QualRsltPwd = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.QualRsltPwd, this.entityData.QualRsltPwd);
				OnPropertyChanged("QualRsltPwd");
			}
		}
		
		/// <summary>
		/// 	Gets or sets the EdCdeSchoolGradeId property. 
		///		
		/// </summary>
		/// <value>This type is int.</value>
		/// <remarks>
		/// This property can be set to null. 
		/// If this column is null, this property will return (int)0. It is up to the developer
		/// to check the value of IsEdCdeSchoolGradeIdNull() and perform business logic appropriately.
		/// </remarks>




		[DescriptionAttribute(@""), System.ComponentModel.Bindable( System.ComponentModel.BindableSupport.Yes)]
		[DataObjectField(false, false, true)]
		public virtual System.Int32? EdCdeSchoolGradeId
		{
			get
			{
				return this.entityData.EdCdeSchoolGradeId; 
			}
			
			set
			{
				if (this.entityData.EdCdeSchoolGradeId == value)
					return;
					
				OnColumnChanging(EdStudQualColumn.EdCdeSchoolGradeId, this.entityData.EdCdeSchoolGradeId);
				this.entityData.EdCdeSchoolGradeId = value;
				if (this.EntityState == EntityState.Unchanged)
					this.EntityState = EntityState.Changed;
				OnColumnChanged(EdStudQualColumn.EdCdeSchoolGradeId, this.entityData.EdCdeSchoolGradeId);
				OnPropertyChanged("EdCdeSchoolGradeId");
			}
		}
		
		#endregion Data Properties		

		#region Source Foreign Key Property
				
		/// <summary>
		/// Gets or sets the source <see cref="EdStud"/>.
		/// </summary>
		/// <value>The source EdStud for EdStudId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdStud EdStudIdSource
      	{
            get { return entityData.EdStudIdSource; }
            set { entityData.EdStudIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmAppRegHistory"/>.
		/// </summary>
		/// <value>The source AdmAppRegHistory for AdmAppRegHistoryId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmAppRegHistory AdmAppRegHistoryIdSource
      	{
            get { return entityData.AdmAppRegHistoryIdSource; }
            set { entityData.AdmAppRegHistoryIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmApplicant"/>.
		/// </summary>
		/// <value>The source AdmApplicant for AdmApplicantId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmApplicant AdmApplicantIdSource
      	{
            get { return entityData.AdmApplicantIdSource; }
            set { entityData.AdmApplicantIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeExamGrdng"/>.
		/// </summary>
		/// <value>The source AdmCdeExamGrdng for AdmCdeExamGrdngId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmCdeExamGrdng AdmCdeExamGrdngIdSource
      	{
            get { return entityData.AdmCdeExamGrdngIdSource; }
            set { entityData.AdmCdeExamGrdngIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeQualStatus"/>.
		/// </summary>
		/// <value>The source AdmCdeQualStatus for AdmCdeQualStatusId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual AdmCdeQualStatus AdmCdeQualStatusIdSource
      	{
            get { return entityData.AdmCdeQualStatusIdSource; }
            set { entityData.AdmCdeQualStatusIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCdeQualBrn"/>.
		/// </summary>
		/// <value>The source EdCdeQualBrn for EdCdeQualBrnId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCdeQualBrn EdCdeQualBrnIdSource
      	{
            get { return entityData.EdCdeQualBrnIdSource; }
            set { entityData.EdCdeQualBrnIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCdeQualCat"/>.
		/// </summary>
		/// <value>The source EdCdeQualCat for EdCdeQualCatId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCdeQualCat EdCdeQualCatIdSource
      	{
            get { return entityData.EdCdeQualCatIdSource; }
            set { entityData.EdCdeQualCatIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCdeQualPhase"/>.
		/// </summary>
		/// <value>The source EdCdeQualPhase for EdCdeQualPhase.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCdeQualPhase EdCdeQualPhaseSource
      	{
            get { return entityData.EdCdeQualPhaseSource; }
            set { entityData.EdCdeQualPhaseSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCdeQualStatus"/>.
		/// </summary>
		/// <value>The source EdCdeQualStatus for EdCdeQualStatusId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCdeQualStatus EdCdeQualStatusIdSource
      	{
            get { return entityData.EdCdeQualStatusIdSource; }
            set { entityData.EdCdeQualStatusIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCdeSchoolGrade"/>.
		/// </summary>
		/// <value>The source EdCdeSchoolGrade for EdCdeSchoolGradeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCdeSchoolGrade EdCdeSchoolGradeIdSource
      	{
            get { return entityData.EdCdeSchoolGradeIdSource; }
            set { entityData.EdCdeSchoolGradeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeQual"/>.
		/// </summary>
		/// <value>The source EdCodeQual for EdCodeQualId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual EdCodeQual EdCodeQualIdSource
      	{
            get { return entityData.EdCodeQualIdSource; }
            set { entityData.EdCodeQualIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeFaculty"/>.
		/// </summary>
		/// <value>The source GsCdeFaculty for GsCdeFacultyId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeFaculty GsCdeFacultyIdSource
      	{
            get { return entityData.GsCdeFacultyIdSource; }
            set { entityData.GsCdeFacultyIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeSchool"/>.
		/// </summary>
		/// <value>The source GsCdeSchool for GsCdeSchoolId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeSchool GsCdeSchoolIdSource
      	{
            get { return entityData.GsCdeSchoolIdSource; }
            set { entityData.GsCdeSchoolIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeSchoolType"/>.
		/// </summary>
		/// <value>The source GsCdeSchoolType for GsCdeSchoolTypeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeSchoolType GsCdeSchoolTypeIdSource
      	{
            get { return entityData.GsCdeSchoolTypeIdSource; }
            set { entityData.GsCdeSchoolTypeIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeUniversities"/>.
		/// </summary>
		/// <value>The source GsCdeUniversities for GsCdeUniversitiesId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCdeUniversities GsCdeUniversitiesIdSource
      	{
            get { return entityData.GsCdeUniversitiesIdSource; }
            set { entityData.GsCdeUniversitiesIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeLanguage"/>.
		/// </summary>
		/// <value>The source GsCodeLanguage for GsCodeLanguageId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCodeLanguage GsCodeLanguageIdSource
      	{
            get { return entityData.GsCodeLanguageIdSource; }
            set { entityData.GsCodeLanguageIdSource = value; }
      	}
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryNodeId.</value>
        [XmlIgnore()]
		[Browsable(false), System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual GsCountryNode GsCountryNodeIdSource
      	{
            get { return entityData.GsCountryNodeIdSource; }
            set { entityData.GsCountryNodeIdSource = value; }
      	}
		#endregion
		
		#region Children Collections
	
		/// <summary>
		///	Holds a collection of EdStudFaculty objects
		///	which are related to this object through the relation FK_ED_STUD_FACULTY_ED_STUD_QUAL
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudFaculty> EdStudFacultyCollection
		{
			get { return entityData.EdStudFacultyCollection; }
			set { entityData.EdStudFacultyCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudQualGroup objects
		///	which are related to this object through the relation FK_ED_STUD_QUAL_GROUP_ED_STUD_QUAL
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudQualGroup> EdStudQualGroupCollection
		{
			get { return entityData.EdStudQualGroupCollection; }
			set { entityData.EdStudQualGroupCollection = value; }	
		}
	
		/// <summary>
		///	Holds a collection of EdStudQualSubject objects
		///	which are related to this object through the relation FK_ED_STUD_QUAL_SUBJECT_ED_STUD_QUAL
		/// </summary>	
		[System.ComponentModel.Bindable(System.ComponentModel.BindableSupport.Yes)]
		public virtual TList<EdStudQualSubject> EdStudQualSubjectCollection
		{
			get { return entityData.EdStudQualSubjectCollection; }
			set { entityData.EdStudQualSubjectCollection = value; }	
		}
		#endregion Children Collections
		
		#endregion
		#region Validation
		
		/// <summary>
		/// Assigns validation rules to this object based on model definition.
		/// </summary>
		/// <remarks>This method overrides the base class to add schema related validation.</remarks>
		protected override void AddValidationRules()
		{
			//Validation rules based on database schema.
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("SchoolName", "School Name", 160));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("QualDescEn", "Qual Desc En", 250));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("QualBrnDescEn", "Qual Brn Desc En", 250));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("Notes", "Notes", 250));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("QualRsltUsr", "Qual Rslt Usr", 100));
			ValidationRules.AddRule( CommonRules.StringMaxLength, 
				new CommonRules.MaxLengthRuleArgs("QualRsltPwd", "Qual Rslt Pwd", 100));
		}
   		#endregion
		
		#region Table Meta Data
		/// <summary>
		///		The name of the underlying database table.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string TableName
		{
			get { return "ED_STUD_QUAL"; }
		}
		
		/// <summary>
		///		The name of the underlying database table's columns.
		/// </summary>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public override string[] TableColumns
		{
			get
			{
				return new string[] {"ED_STUD_QUAL_ID", "ED_STUD_ID", "ED_CODE_QUAL_ID", "SCHOOL_NAME", "QUAL_DATE", "QUAL_TOT_MARK", "TOTAL_DEGREE", "TOTAL_PERCENT", "GS_COUNTRY_NODE_ID", "ADM_APPLICANT_ID", "ED_CDE_QUAL_BRN_ID", "GS_CDE_SCHOOL_ID", "STUD_SEAT_NUM", "ENGLISH_PERCENT", "CONVERTED_PERCENT", "ED_CDE_QUAL_CAT_ID", "ADMISSION_FLG", "GS_CDE_UNIVERSITIES_ID", "TOFEL", "CGPA", "QUAL_RANK", "ED_CDE_QUAL_PHASE", "ED_CDE_QUAL_STATUS_ID", "QUAL_START_DATE", "GS_CODE_LANGUAGE_ID", "ADM_APP_REG_HISTORY_ID", "ADM_CDE_EXAM_GRDNG_ID", "QUAL_DESC_EN", "QUAL_BRN_DESC_EN", "GS_CDE_FACULTY_ID", "GS_CDE_SCHOOL_TYPE_ID", "ADM_CDE_QUAL_STATUS_ID", "NOTES", "QUAL_RSLT_USR", "QUAL_RSLT_PWD", "ED_CDE_SCHOOL_GRADE_ID"};
			}
		}
		#endregion 
		
		#region IEditableObject
		
		#region  CancelAddNew Event
		/// <summary>
        /// The delegate for the CancelAddNew event.
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
		public delegate void CancelAddNewEventHandler(object sender, EventArgs e);
    
    	/// <summary>
		/// The CancelAddNew event.
		/// </summary>
		[field:NonSerialized]
		public event CancelAddNewEventHandler CancelAddNew ;

		/// <summary>
        /// Called when [cancel add new].
        /// </summary>
        public void OnCancelAddNew()
        {    
			if (!SuppressEntityEvents)
			{
	            CancelAddNewEventHandler handler = CancelAddNew ;
            	if (handler != null)
	            {    
    	            handler(this, EventArgs.Empty) ;
        	    }
	        }
        }
		#endregion 
		
		/// <summary>
		/// Begins an edit on an object.
		/// </summary>
		void IEditableObject.BeginEdit() 
	    {
	        //Console.WriteLine("Start BeginEdit");
	        if (!inTxn) 
	        {
	            this.backupData = this.entityData.Clone() as EdStudQualEntityData;
	            inTxn = true;
	            //Console.WriteLine("BeginEdit");
	        }
	        //Console.WriteLine("End BeginEdit");
	    }
	
		/// <summary>
		/// Discards changes since the last <c>BeginEdit</c> call.
		/// </summary>
	    void IEditableObject.CancelEdit() 
	    {
	        //Console.WriteLine("Start CancelEdit");
	        if (this.inTxn) 
	        {
	            this.entityData = this.backupData;
	            this.backupData = null;
				this.inTxn = false;

				if (this.bindingIsNew)
	        	//if (this.EntityState == EntityState.Added)
	        	{
					if (this.parentCollection != null)
						this.parentCollection.Remove( (EdStudQual) this ) ;
				}	            
	        }
	        //Console.WriteLine("End CancelEdit");
	    }
	
		/// <summary>
		/// Pushes changes since the last <c>BeginEdit</c> or <c>IBindingList.AddNew</c> call into the underlying object.
		/// </summary>
	    void IEditableObject.EndEdit() 
	    {
	        //Console.WriteLine("Start EndEdit" + this.custData.id + this.custData.lastName);
	        if (this.inTxn) 
	        {
	            this.backupData = null;
				if (this.IsDirty) 
				{
					if (this.bindingIsNew) {
						this.EntityState = EntityState.Added;
						this.bindingIsNew = false ;
					}
					else
						if (this.EntityState == EntityState.Unchanged) 
							this.EntityState = EntityState.Changed ;
				}

				this.bindingIsNew = false ;
	            this.inTxn = false;	            
	        }
	        //Console.WriteLine("End EndEdit");
	    }
	    
	    /// <summary>
        /// Gets or sets the parent collection of this current entity, if available.
        /// </summary>
        /// <value>The parent collection.</value>
	    [XmlIgnore]
		[Browsable(false)]
	    public override object ParentCollection
	    {
	        get 
	        {
	            return this.parentCollection;
	        }
	        set 
	        {
	            this.parentCollection = value as TList<EdStudQual>;
	        }
	    }
	    
	    /// <summary>
        /// Called when the entity is changed.
        /// </summary>
	    private void OnEntityChanged() 
	    {
	        if (!SuppressEntityEvents && !inTxn && this.parentCollection != null) 
	        {
	            this.parentCollection.EntityChanged(this as EdStudQual);
	        }
	    }


		#endregion
		
		#region ICloneable Members
		///<summary>
		///  Returns a Typed EdStudQual Entity 
		///</summary>
		protected virtual EdStudQual Copy(IDictionary existingCopies)
		{
			if (existingCopies == null)
			{
				// This is the root of the tree to be copied!
				existingCopies = new Hashtable();
			}

			//shallow copy entity
			EdStudQual copy = new EdStudQual();
			existingCopies.Add(this, copy);
			copy.SuppressEntityEvents = true;
				copy.EdStudQualId = this.EdStudQualId;
					copy.OriginalEdStudQualId = this.OriginalEdStudQualId;
				copy.EdStudId = this.EdStudId;
				copy.EdCodeQualId = this.EdCodeQualId;
				copy.SchoolName = this.SchoolName;
				copy.QualDate = this.QualDate;
				copy.QualTotMark = this.QualTotMark;
				copy.TotalDegree = this.TotalDegree;
				copy.TotalPercent = this.TotalPercent;
				copy.GsCountryNodeId = this.GsCountryNodeId;
				copy.AdmApplicantId = this.AdmApplicantId;
				copy.EdCdeQualBrnId = this.EdCdeQualBrnId;
				copy.GsCdeSchoolId = this.GsCdeSchoolId;
				copy.StudSeatNum = this.StudSeatNum;
				copy.EnglishPercent = this.EnglishPercent;
				copy.ConvertedPercent = this.ConvertedPercent;
				copy.EdCdeQualCatId = this.EdCdeQualCatId;
				copy.AdmissionFlg = this.AdmissionFlg;
				copy.GsCdeUniversitiesId = this.GsCdeUniversitiesId;
				copy.Tofel = this.Tofel;
				copy.Cgpa = this.Cgpa;
				copy.QualRank = this.QualRank;
				copy.EdCdeQualPhase = this.EdCdeQualPhase;
				copy.EdCdeQualStatusId = this.EdCdeQualStatusId;
				copy.QualStartDate = this.QualStartDate;
				copy.GsCodeLanguageId = this.GsCodeLanguageId;
				copy.AdmAppRegHistoryId = this.AdmAppRegHistoryId;
				copy.AdmCdeExamGrdngId = this.AdmCdeExamGrdngId;
				copy.QualDescEn = this.QualDescEn;
				copy.QualBrnDescEn = this.QualBrnDescEn;
				copy.GsCdeFacultyId = this.GsCdeFacultyId;
				copy.GsCdeSchoolTypeId = this.GsCdeSchoolTypeId;
				copy.AdmCdeQualStatusId = this.AdmCdeQualStatusId;
				copy.Notes = this.Notes;
				copy.QualRsltUsr = this.QualRsltUsr;
				copy.QualRsltPwd = this.QualRsltPwd;
				copy.EdCdeSchoolGradeId = this.EdCdeSchoolGradeId;
			
			if (this.EdStudIdSource != null && existingCopies.Contains(this.EdStudIdSource))
				copy.EdStudIdSource = existingCopies[this.EdStudIdSource] as EdStud;
			else
				copy.EdStudIdSource = MakeCopyOf(this.EdStudIdSource, existingCopies) as EdStud;
			if (this.AdmAppRegHistoryIdSource != null && existingCopies.Contains(this.AdmAppRegHistoryIdSource))
				copy.AdmAppRegHistoryIdSource = existingCopies[this.AdmAppRegHistoryIdSource] as AdmAppRegHistory;
			else
				copy.AdmAppRegHistoryIdSource = MakeCopyOf(this.AdmAppRegHistoryIdSource, existingCopies) as AdmAppRegHistory;
			if (this.AdmApplicantIdSource != null && existingCopies.Contains(this.AdmApplicantIdSource))
				copy.AdmApplicantIdSource = existingCopies[this.AdmApplicantIdSource] as AdmApplicant;
			else
				copy.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource, existingCopies) as AdmApplicant;
			if (this.AdmCdeExamGrdngIdSource != null && existingCopies.Contains(this.AdmCdeExamGrdngIdSource))
				copy.AdmCdeExamGrdngIdSource = existingCopies[this.AdmCdeExamGrdngIdSource] as AdmCdeExamGrdng;
			else
				copy.AdmCdeExamGrdngIdSource = MakeCopyOf(this.AdmCdeExamGrdngIdSource, existingCopies) as AdmCdeExamGrdng;
			if (this.AdmCdeQualStatusIdSource != null && existingCopies.Contains(this.AdmCdeQualStatusIdSource))
				copy.AdmCdeQualStatusIdSource = existingCopies[this.AdmCdeQualStatusIdSource] as AdmCdeQualStatus;
			else
				copy.AdmCdeQualStatusIdSource = MakeCopyOf(this.AdmCdeQualStatusIdSource, existingCopies) as AdmCdeQualStatus;
			if (this.EdCdeQualBrnIdSource != null && existingCopies.Contains(this.EdCdeQualBrnIdSource))
				copy.EdCdeQualBrnIdSource = existingCopies[this.EdCdeQualBrnIdSource] as EdCdeQualBrn;
			else
				copy.EdCdeQualBrnIdSource = MakeCopyOf(this.EdCdeQualBrnIdSource, existingCopies) as EdCdeQualBrn;
			if (this.EdCdeQualCatIdSource != null && existingCopies.Contains(this.EdCdeQualCatIdSource))
				copy.EdCdeQualCatIdSource = existingCopies[this.EdCdeQualCatIdSource] as EdCdeQualCat;
			else
				copy.EdCdeQualCatIdSource = MakeCopyOf(this.EdCdeQualCatIdSource, existingCopies) as EdCdeQualCat;
			if (this.EdCdeQualPhaseSource != null && existingCopies.Contains(this.EdCdeQualPhaseSource))
				copy.EdCdeQualPhaseSource = existingCopies[this.EdCdeQualPhaseSource] as EdCdeQualPhase;
			else
				copy.EdCdeQualPhaseSource = MakeCopyOf(this.EdCdeQualPhaseSource, existingCopies) as EdCdeQualPhase;
			if (this.EdCdeQualStatusIdSource != null && existingCopies.Contains(this.EdCdeQualStatusIdSource))
				copy.EdCdeQualStatusIdSource = existingCopies[this.EdCdeQualStatusIdSource] as EdCdeQualStatus;
			else
				copy.EdCdeQualStatusIdSource = MakeCopyOf(this.EdCdeQualStatusIdSource, existingCopies) as EdCdeQualStatus;
			if (this.EdCdeSchoolGradeIdSource != null && existingCopies.Contains(this.EdCdeSchoolGradeIdSource))
				copy.EdCdeSchoolGradeIdSource = existingCopies[this.EdCdeSchoolGradeIdSource] as EdCdeSchoolGrade;
			else
				copy.EdCdeSchoolGradeIdSource = MakeCopyOf(this.EdCdeSchoolGradeIdSource, existingCopies) as EdCdeSchoolGrade;
			if (this.EdCodeQualIdSource != null && existingCopies.Contains(this.EdCodeQualIdSource))
				copy.EdCodeQualIdSource = existingCopies[this.EdCodeQualIdSource] as EdCodeQual;
			else
				copy.EdCodeQualIdSource = MakeCopyOf(this.EdCodeQualIdSource, existingCopies) as EdCodeQual;
			if (this.GsCdeFacultyIdSource != null && existingCopies.Contains(this.GsCdeFacultyIdSource))
				copy.GsCdeFacultyIdSource = existingCopies[this.GsCdeFacultyIdSource] as GsCdeFaculty;
			else
				copy.GsCdeFacultyIdSource = MakeCopyOf(this.GsCdeFacultyIdSource, existingCopies) as GsCdeFaculty;
			if (this.GsCdeSchoolIdSource != null && existingCopies.Contains(this.GsCdeSchoolIdSource))
				copy.GsCdeSchoolIdSource = existingCopies[this.GsCdeSchoolIdSource] as GsCdeSchool;
			else
				copy.GsCdeSchoolIdSource = MakeCopyOf(this.GsCdeSchoolIdSource, existingCopies) as GsCdeSchool;
			if (this.GsCdeSchoolTypeIdSource != null && existingCopies.Contains(this.GsCdeSchoolTypeIdSource))
				copy.GsCdeSchoolTypeIdSource = existingCopies[this.GsCdeSchoolTypeIdSource] as GsCdeSchoolType;
			else
				copy.GsCdeSchoolTypeIdSource = MakeCopyOf(this.GsCdeSchoolTypeIdSource, existingCopies) as GsCdeSchoolType;
			if (this.GsCdeUniversitiesIdSource != null && existingCopies.Contains(this.GsCdeUniversitiesIdSource))
				copy.GsCdeUniversitiesIdSource = existingCopies[this.GsCdeUniversitiesIdSource] as GsCdeUniversities;
			else
				copy.GsCdeUniversitiesIdSource = MakeCopyOf(this.GsCdeUniversitiesIdSource, existingCopies) as GsCdeUniversities;
			if (this.GsCodeLanguageIdSource != null && existingCopies.Contains(this.GsCodeLanguageIdSource))
				copy.GsCodeLanguageIdSource = existingCopies[this.GsCodeLanguageIdSource] as GsCodeLanguage;
			else
				copy.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource, existingCopies) as GsCodeLanguage;
			if (this.GsCountryNodeIdSource != null && existingCopies.Contains(this.GsCountryNodeIdSource))
				copy.GsCountryNodeIdSource = existingCopies[this.GsCountryNodeIdSource] as GsCountryNode;
			else
				copy.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource, existingCopies) as GsCountryNode;
		
			//deep copy nested objects
			copy.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection, existingCopies); 
			copy.EdStudQualGroupCollection = (TList<EdStudQualGroup>) MakeCopyOf(this.EdStudQualGroupCollection, existingCopies); 
			copy.EdStudQualSubjectCollection = (TList<EdStudQualSubject>) MakeCopyOf(this.EdStudQualSubjectCollection, existingCopies); 
			copy.EntityState = this.EntityState;
			copy.SuppressEntityEvents = false;
			return copy;
		}		
		
		
		
		///<summary>
		///  Returns a Typed EdStudQual Entity 
		///</summary>
		public virtual EdStudQual Copy()
		{
			return this.Copy(null);	
		}
		
		///<summary>
		/// ICloneable.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone()
		{
			return this.Copy(null);
		}
		
		///<summary>
		/// ICloneableEx.Clone() Member, returns the Shallow Copy of this entity.
		///</summary>
		public object Clone(IDictionary existingCopies)
		{
			return this.Copy(existingCopies);
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x)
		{
			if (x == null)
				return null;
				
			if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable Interface.");
		}
		
		///<summary>
		/// Returns a deep copy of the child collection object passed in.
		///</summary>
		public static object MakeCopyOf(object x, IDictionary existingCopies)
		{
			if (x == null)
				return null;
			
			if (x is ICloneableEx)
			{
				// Return a deep copy of the object
				return ((ICloneableEx)x).Clone(existingCopies);
			}
			else if (x is ICloneable)
			{
				// Return a deep copy of the object
				return ((ICloneable)x).Clone();
			}
			else
				throw new System.NotSupportedException("Object Does Not Implement the ICloneable or IClonableEx Interface.");
		}
		
		
		///<summary>
		///  Returns a Typed EdStudQual Entity which is a deep copy of the current entity.
		///</summary>
		public virtual EdStudQual DeepCopy()
		{
			return EntityHelper.Clone<EdStudQual>(this as EdStudQual);	
		}
		#endregion
		
		#region Methods	
			
		///<summary>
		/// Revert all changes and restore original values.
		///</summary>
		public override void CancelChanges()
		{
			IEditableObject obj = (IEditableObject) this;
			obj.CancelEdit();

			this.entityData = null;
			if (this._originalData != null)
			{
				this.entityData = this._originalData.Clone() as EdStudQualEntityData;
			}
			else
			{
				//Since this had no _originalData, then just reset the entityData with a new one.  entityData cannot be null.
				this.entityData = new EdStudQualEntityData();
			}
		}	
		
		/// <summary>
		/// Accepts the changes made to this object.
		/// </summary>
		/// <remarks>
		/// After calling this method, properties: IsDirty, IsNew are false. IsDeleted flag remains unchanged as it is handled by the parent List.
		/// </remarks>
		public override void AcceptChanges()
		{
			base.AcceptChanges();

			// we keep of the original version of the data
			this._originalData = null;
			this._originalData = this.entityData.Clone() as EdStudQualEntityData;
		}
		
		#region Comparision with original data
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="column">The column.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool IsPropertyChanged(EdStudQualColumn column)
		{
			switch(column)
			{
					case EdStudQualColumn.EdStudQualId:
					return entityData.EdStudQualId != _originalData.EdStudQualId;
					case EdStudQualColumn.EdStudId:
					return entityData.EdStudId != _originalData.EdStudId;
					case EdStudQualColumn.EdCodeQualId:
					return entityData.EdCodeQualId != _originalData.EdCodeQualId;
					case EdStudQualColumn.SchoolName:
					return entityData.SchoolName != _originalData.SchoolName;
					case EdStudQualColumn.QualDate:
					return entityData.QualDate != _originalData.QualDate;
					case EdStudQualColumn.QualTotMark:
					return entityData.QualTotMark != _originalData.QualTotMark;
					case EdStudQualColumn.TotalDegree:
					return entityData.TotalDegree != _originalData.TotalDegree;
					case EdStudQualColumn.TotalPercent:
					return entityData.TotalPercent != _originalData.TotalPercent;
					case EdStudQualColumn.GsCountryNodeId:
					return entityData.GsCountryNodeId != _originalData.GsCountryNodeId;
					case EdStudQualColumn.AdmApplicantId:
					return entityData.AdmApplicantId != _originalData.AdmApplicantId;
					case EdStudQualColumn.EdCdeQualBrnId:
					return entityData.EdCdeQualBrnId != _originalData.EdCdeQualBrnId;
					case EdStudQualColumn.GsCdeSchoolId:
					return entityData.GsCdeSchoolId != _originalData.GsCdeSchoolId;
					case EdStudQualColumn.StudSeatNum:
					return entityData.StudSeatNum != _originalData.StudSeatNum;
					case EdStudQualColumn.EnglishPercent:
					return entityData.EnglishPercent != _originalData.EnglishPercent;
					case EdStudQualColumn.ConvertedPercent:
					return entityData.ConvertedPercent != _originalData.ConvertedPercent;
					case EdStudQualColumn.EdCdeQualCatId:
					return entityData.EdCdeQualCatId != _originalData.EdCdeQualCatId;
					case EdStudQualColumn.AdmissionFlg:
					return entityData.AdmissionFlg != _originalData.AdmissionFlg;
					case EdStudQualColumn.GsCdeUniversitiesId:
					return entityData.GsCdeUniversitiesId != _originalData.GsCdeUniversitiesId;
					case EdStudQualColumn.Tofel:
					return entityData.Tofel != _originalData.Tofel;
					case EdStudQualColumn.Cgpa:
					return entityData.Cgpa != _originalData.Cgpa;
					case EdStudQualColumn.QualRank:
					return entityData.QualRank != _originalData.QualRank;
					case EdStudQualColumn.EdCdeQualPhase:
					return entityData.EdCdeQualPhase != _originalData.EdCdeQualPhase;
					case EdStudQualColumn.EdCdeQualStatusId:
					return entityData.EdCdeQualStatusId != _originalData.EdCdeQualStatusId;
					case EdStudQualColumn.QualStartDate:
					return entityData.QualStartDate != _originalData.QualStartDate;
					case EdStudQualColumn.GsCodeLanguageId:
					return entityData.GsCodeLanguageId != _originalData.GsCodeLanguageId;
					case EdStudQualColumn.AdmAppRegHistoryId:
					return entityData.AdmAppRegHistoryId != _originalData.AdmAppRegHistoryId;
					case EdStudQualColumn.AdmCdeExamGrdngId:
					return entityData.AdmCdeExamGrdngId != _originalData.AdmCdeExamGrdngId;
					case EdStudQualColumn.QualDescEn:
					return entityData.QualDescEn != _originalData.QualDescEn;
					case EdStudQualColumn.QualBrnDescEn:
					return entityData.QualBrnDescEn != _originalData.QualBrnDescEn;
					case EdStudQualColumn.GsCdeFacultyId:
					return entityData.GsCdeFacultyId != _originalData.GsCdeFacultyId;
					case EdStudQualColumn.GsCdeSchoolTypeId:
					return entityData.GsCdeSchoolTypeId != _originalData.GsCdeSchoolTypeId;
					case EdStudQualColumn.AdmCdeQualStatusId:
					return entityData.AdmCdeQualStatusId != _originalData.AdmCdeQualStatusId;
					case EdStudQualColumn.Notes:
					return entityData.Notes != _originalData.Notes;
					case EdStudQualColumn.QualRsltUsr:
					return entityData.QualRsltUsr != _originalData.QualRsltUsr;
					case EdStudQualColumn.QualRsltPwd:
					return entityData.QualRsltPwd != _originalData.QualRsltPwd;
					case EdStudQualColumn.EdCdeSchoolGradeId:
					return entityData.EdCdeSchoolGradeId != _originalData.EdCdeSchoolGradeId;
			
				default:
					return false;
			}
		}
		
		/// <summary>
		/// Determines whether the property value has changed from the original data.
		/// </summary>
		/// <param name="columnName">The column name.</param>
		/// <returns>
		/// 	<c>true</c> if the property value has changed; otherwise, <c>false</c>.
		/// </returns>
		public override bool IsPropertyChanged(string columnName)
		{
			return 	IsPropertyChanged(EntityHelper.GetEnumValue< EdStudQualColumn >(columnName));
		}
		
		/// <summary>
		/// Determines whether the data has changed from original.
		/// </summary>
		/// <returns>
		/// 	<c>true</c> if data has changed; otherwise, <c>false</c>.
		/// </returns>
		public bool HasDataChanged()
		{
			bool result = false;
			result = result || entityData.EdStudQualId != _originalData.EdStudQualId;
			result = result || entityData.EdStudId != _originalData.EdStudId;
			result = result || entityData.EdCodeQualId != _originalData.EdCodeQualId;
			result = result || entityData.SchoolName != _originalData.SchoolName;
			result = result || entityData.QualDate != _originalData.QualDate;
			result = result || entityData.QualTotMark != _originalData.QualTotMark;
			result = result || entityData.TotalDegree != _originalData.TotalDegree;
			result = result || entityData.TotalPercent != _originalData.TotalPercent;
			result = result || entityData.GsCountryNodeId != _originalData.GsCountryNodeId;
			result = result || entityData.AdmApplicantId != _originalData.AdmApplicantId;
			result = result || entityData.EdCdeQualBrnId != _originalData.EdCdeQualBrnId;
			result = result || entityData.GsCdeSchoolId != _originalData.GsCdeSchoolId;
			result = result || entityData.StudSeatNum != _originalData.StudSeatNum;
			result = result || entityData.EnglishPercent != _originalData.EnglishPercent;
			result = result || entityData.ConvertedPercent != _originalData.ConvertedPercent;
			result = result || entityData.EdCdeQualCatId != _originalData.EdCdeQualCatId;
			result = result || entityData.AdmissionFlg != _originalData.AdmissionFlg;
			result = result || entityData.GsCdeUniversitiesId != _originalData.GsCdeUniversitiesId;
			result = result || entityData.Tofel != _originalData.Tofel;
			result = result || entityData.Cgpa != _originalData.Cgpa;
			result = result || entityData.QualRank != _originalData.QualRank;
			result = result || entityData.EdCdeQualPhase != _originalData.EdCdeQualPhase;
			result = result || entityData.EdCdeQualStatusId != _originalData.EdCdeQualStatusId;
			result = result || entityData.QualStartDate != _originalData.QualStartDate;
			result = result || entityData.GsCodeLanguageId != _originalData.GsCodeLanguageId;
			result = result || entityData.AdmAppRegHistoryId != _originalData.AdmAppRegHistoryId;
			result = result || entityData.AdmCdeExamGrdngId != _originalData.AdmCdeExamGrdngId;
			result = result || entityData.QualDescEn != _originalData.QualDescEn;
			result = result || entityData.QualBrnDescEn != _originalData.QualBrnDescEn;
			result = result || entityData.GsCdeFacultyId != _originalData.GsCdeFacultyId;
			result = result || entityData.GsCdeSchoolTypeId != _originalData.GsCdeSchoolTypeId;
			result = result || entityData.AdmCdeQualStatusId != _originalData.AdmCdeQualStatusId;
			result = result || entityData.Notes != _originalData.Notes;
			result = result || entityData.QualRsltUsr != _originalData.QualRsltUsr;
			result = result || entityData.QualRsltPwd != _originalData.QualRsltPwd;
			result = result || entityData.EdCdeSchoolGradeId != _originalData.EdCdeSchoolGradeId;
			return result;
		}	
		
		///<summary>
		///  Returns a EdStudQual Entity with the original data.
		///</summary>
		public EdStudQual GetOriginalEntity()
		{
			if (_originalData != null)
				return CreateEdStudQual(
				_originalData.EdStudQualId,
				_originalData.EdStudId,
				_originalData.EdCodeQualId,
				_originalData.SchoolName,
				_originalData.QualDate,
				_originalData.QualTotMark,
				_originalData.TotalDegree,
				_originalData.TotalPercent,
				_originalData.GsCountryNodeId,
				_originalData.AdmApplicantId,
				_originalData.EdCdeQualBrnId,
				_originalData.GsCdeSchoolId,
				_originalData.StudSeatNum,
				_originalData.EnglishPercent,
				_originalData.ConvertedPercent,
				_originalData.EdCdeQualCatId,
				_originalData.AdmissionFlg,
				_originalData.GsCdeUniversitiesId,
				_originalData.Tofel,
				_originalData.Cgpa,
				_originalData.QualRank,
				_originalData.EdCdeQualPhase,
				_originalData.EdCdeQualStatusId,
				_originalData.QualStartDate,
				_originalData.GsCodeLanguageId,
				_originalData.AdmAppRegHistoryId,
				_originalData.AdmCdeExamGrdngId,
				_originalData.QualDescEn,
				_originalData.QualBrnDescEn,
				_originalData.GsCdeFacultyId,
				_originalData.GsCdeSchoolTypeId,
				_originalData.AdmCdeQualStatusId,
				_originalData.Notes,
				_originalData.QualRsltUsr,
				_originalData.QualRsltPwd,
				_originalData.EdCdeSchoolGradeId
				);
				
			return (EdStudQual)this.Clone();
		}
		#endregion
	
	#region Value Semantics Instance Equality
        ///<summary>
        /// Returns a value indicating whether this instance is equal to a specified object using value semantics.
        ///</summary>
        ///<param name="Object1">An object to compare to this instance.</param>
        ///<returns>true if Object1 is a <see cref="EdStudQualBase"/> and has the same value as this instance; otherwise, false.</returns>
        public override bool Equals(object Object1)
        {
			// Cast exception if Object1 is null or DbNull
			if (Object1 != null && Object1 != DBNull.Value && Object1 is EdStudQualBase)
				return ValueEquals(this, (EdStudQualBase)Object1);
			else
				return false;
        }

        /// <summary>
		/// Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
        /// Provides a hash function that is appropriate for <see cref="EdStudQualBase"/> class 
        /// and that ensures a better distribution in the hash table
        /// </summary>
        /// <returns>number (hash code) that corresponds to the value of an object</returns>
        public override int GetHashCode()
        {
			return this.EdStudQualId.GetHashCode() ^ 
					((this.EdStudId == null) ? string.Empty : this.EdStudId.ToString()).GetHashCode() ^ 
					this.EdCodeQualId.GetHashCode() ^ 
					((this.SchoolName == null) ? string.Empty : this.SchoolName.ToString()).GetHashCode() ^ 
					((this.QualDate == null) ? string.Empty : this.QualDate.ToString()).GetHashCode() ^ 
					((this.QualTotMark == null) ? string.Empty : this.QualTotMark.ToString()).GetHashCode() ^ 
					((this.TotalDegree == null) ? string.Empty : this.TotalDegree.ToString()).GetHashCode() ^ 
					this.TotalPercent.GetHashCode() ^ 
					((this.GsCountryNodeId == null) ? string.Empty : this.GsCountryNodeId.ToString()).GetHashCode() ^ 
					((this.AdmApplicantId == null) ? string.Empty : this.AdmApplicantId.ToString()).GetHashCode() ^ 
					((this.EdCdeQualBrnId == null) ? string.Empty : this.EdCdeQualBrnId.ToString()).GetHashCode() ^ 
					((this.GsCdeSchoolId == null) ? string.Empty : this.GsCdeSchoolId.ToString()).GetHashCode() ^ 
					((this.StudSeatNum == null) ? string.Empty : this.StudSeatNum.ToString()).GetHashCode() ^ 
					((this.EnglishPercent == null) ? string.Empty : this.EnglishPercent.ToString()).GetHashCode() ^ 
					((this.ConvertedPercent == null) ? string.Empty : this.ConvertedPercent.ToString()).GetHashCode() ^ 
					((this.EdCdeQualCatId == null) ? string.Empty : this.EdCdeQualCatId.ToString()).GetHashCode() ^ 
					this.AdmissionFlg.GetHashCode() ^ 
					((this.GsCdeUniversitiesId == null) ? string.Empty : this.GsCdeUniversitiesId.ToString()).GetHashCode() ^ 
					((this.Tofel == null) ? string.Empty : this.Tofel.ToString()).GetHashCode() ^ 
					((this.Cgpa == null) ? string.Empty : this.Cgpa.ToString()).GetHashCode() ^ 
					((this.QualRank == null) ? string.Empty : this.QualRank.ToString()).GetHashCode() ^ 
					((this.EdCdeQualPhase == null) ? string.Empty : this.EdCdeQualPhase.ToString()).GetHashCode() ^ 
					((this.EdCdeQualStatusId == null) ? string.Empty : this.EdCdeQualStatusId.ToString()).GetHashCode() ^ 
					((this.QualStartDate == null) ? string.Empty : this.QualStartDate.ToString()).GetHashCode() ^ 
					((this.GsCodeLanguageId == null) ? string.Empty : this.GsCodeLanguageId.ToString()).GetHashCode() ^ 
					((this.AdmAppRegHistoryId == null) ? string.Empty : this.AdmAppRegHistoryId.ToString()).GetHashCode() ^ 
					((this.AdmCdeExamGrdngId == null) ? string.Empty : this.AdmCdeExamGrdngId.ToString()).GetHashCode() ^ 
					((this.QualDescEn == null) ? string.Empty : this.QualDescEn.ToString()).GetHashCode() ^ 
					((this.QualBrnDescEn == null) ? string.Empty : this.QualBrnDescEn.ToString()).GetHashCode() ^ 
					((this.GsCdeFacultyId == null) ? string.Empty : this.GsCdeFacultyId.ToString()).GetHashCode() ^ 
					((this.GsCdeSchoolTypeId == null) ? string.Empty : this.GsCdeSchoolTypeId.ToString()).GetHashCode() ^ 
					((this.AdmCdeQualStatusId == null) ? string.Empty : this.AdmCdeQualStatusId.ToString()).GetHashCode() ^ 
					((this.Notes == null) ? string.Empty : this.Notes.ToString()).GetHashCode() ^ 
					((this.QualRsltUsr == null) ? string.Empty : this.QualRsltUsr.ToString()).GetHashCode() ^ 
					((this.QualRsltPwd == null) ? string.Empty : this.QualRsltPwd.ToString()).GetHashCode() ^ 
					((this.EdCdeSchoolGradeId == null) ? string.Empty : this.EdCdeSchoolGradeId.ToString()).GetHashCode();
        }
		
		///<summary>
		/// Returns a value indicating whether this instance is equal to a specified object using value semantics.
		///</summary>
		///<param name="toObject">An object to compare to this instance.</param>
		///<returns>true if toObject is a <see cref="EdStudQualBase"/> and has the same value as this instance; otherwise, false.</returns>
		public virtual bool Equals(EdStudQualBase toObject)
		{
			if (toObject == null)
				return false;
			return ValueEquals(this, toObject);
		}
		#endregion
		
		///<summary>
		/// Determines whether the specified <see cref="EdStudQualBase"/> instances are considered equal using value semantics.
		///</summary>
		///<param name="Object1">The first <see cref="EdStudQualBase"/> to compare.</param>
		///<param name="Object2">The second <see cref="EdStudQualBase"/> to compare. </param>
		///<returns>true if Object1 is the same instance as Object2 or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
		public static bool ValueEquals(EdStudQualBase Object1, EdStudQualBase Object2)
		{
			// both are null
			if (Object1 == null && Object2 == null)
				return true;

			// one or the other is null, but not both
			if (Object1 == null ^ Object2 == null)
				return false;
				
			bool equal = true;
			if (Object1.EdStudQualId != Object2.EdStudQualId)
				equal = false;
			if ( Object1.EdStudId != null && Object2.EdStudId != null )
			{
				if (Object1.EdStudId != Object2.EdStudId)
					equal = false;
			}
			else if (Object1.EdStudId == null ^ Object2.EdStudId == null )
			{
				equal = false;
			}
			if (Object1.EdCodeQualId != Object2.EdCodeQualId)
				equal = false;
			if ( Object1.SchoolName != null && Object2.SchoolName != null )
			{
				if (Object1.SchoolName != Object2.SchoolName)
					equal = false;
			}
			else if (Object1.SchoolName == null ^ Object2.SchoolName == null )
			{
				equal = false;
			}
			if ( Object1.QualDate != null && Object2.QualDate != null )
			{
				if (Object1.QualDate != Object2.QualDate)
					equal = false;
			}
			else if (Object1.QualDate == null ^ Object2.QualDate == null )
			{
				equal = false;
			}
			if ( Object1.QualTotMark != null && Object2.QualTotMark != null )
			{
				if (Object1.QualTotMark != Object2.QualTotMark)
					equal = false;
			}
			else if (Object1.QualTotMark == null ^ Object2.QualTotMark == null )
			{
				equal = false;
			}
			if ( Object1.TotalDegree != null && Object2.TotalDegree != null )
			{
				if (Object1.TotalDegree != Object2.TotalDegree)
					equal = false;
			}
			else if (Object1.TotalDegree == null ^ Object2.TotalDegree == null )
			{
				equal = false;
			}
			if (Object1.TotalPercent != Object2.TotalPercent)
				equal = false;
			if ( Object1.GsCountryNodeId != null && Object2.GsCountryNodeId != null )
			{
				if (Object1.GsCountryNodeId != Object2.GsCountryNodeId)
					equal = false;
			}
			else if (Object1.GsCountryNodeId == null ^ Object2.GsCountryNodeId == null )
			{
				equal = false;
			}
			if ( Object1.AdmApplicantId != null && Object2.AdmApplicantId != null )
			{
				if (Object1.AdmApplicantId != Object2.AdmApplicantId)
					equal = false;
			}
			else if (Object1.AdmApplicantId == null ^ Object2.AdmApplicantId == null )
			{
				equal = false;
			}
			if ( Object1.EdCdeQualBrnId != null && Object2.EdCdeQualBrnId != null )
			{
				if (Object1.EdCdeQualBrnId != Object2.EdCdeQualBrnId)
					equal = false;
			}
			else if (Object1.EdCdeQualBrnId == null ^ Object2.EdCdeQualBrnId == null )
			{
				equal = false;
			}
			if ( Object1.GsCdeSchoolId != null && Object2.GsCdeSchoolId != null )
			{
				if (Object1.GsCdeSchoolId != Object2.GsCdeSchoolId)
					equal = false;
			}
			else if (Object1.GsCdeSchoolId == null ^ Object2.GsCdeSchoolId == null )
			{
				equal = false;
			}
			if ( Object1.StudSeatNum != null && Object2.StudSeatNum != null )
			{
				if (Object1.StudSeatNum != Object2.StudSeatNum)
					equal = false;
			}
			else if (Object1.StudSeatNum == null ^ Object2.StudSeatNum == null )
			{
				equal = false;
			}
			if ( Object1.EnglishPercent != null && Object2.EnglishPercent != null )
			{
				if (Object1.EnglishPercent != Object2.EnglishPercent)
					equal = false;
			}
			else if (Object1.EnglishPercent == null ^ Object2.EnglishPercent == null )
			{
				equal = false;
			}
			if ( Object1.ConvertedPercent != null && Object2.ConvertedPercent != null )
			{
				if (Object1.ConvertedPercent != Object2.ConvertedPercent)
					equal = false;
			}
			else if (Object1.ConvertedPercent == null ^ Object2.ConvertedPercent == null )
			{
				equal = false;
			}
			if ( Object1.EdCdeQualCatId != null && Object2.EdCdeQualCatId != null )
			{
				if (Object1.EdCdeQualCatId != Object2.EdCdeQualCatId)
					equal = false;
			}
			else if (Object1.EdCdeQualCatId == null ^ Object2.EdCdeQualCatId == null )
			{
				equal = false;
			}
			if (Object1.AdmissionFlg != Object2.AdmissionFlg)
				equal = false;
			if ( Object1.GsCdeUniversitiesId != null && Object2.GsCdeUniversitiesId != null )
			{
				if (Object1.GsCdeUniversitiesId != Object2.GsCdeUniversitiesId)
					equal = false;
			}
			else if (Object1.GsCdeUniversitiesId == null ^ Object2.GsCdeUniversitiesId == null )
			{
				equal = false;
			}
			if ( Object1.Tofel != null && Object2.Tofel != null )
			{
				if (Object1.Tofel != Object2.Tofel)
					equal = false;
			}
			else if (Object1.Tofel == null ^ Object2.Tofel == null )
			{
				equal = false;
			}
			if ( Object1.Cgpa != null && Object2.Cgpa != null )
			{
				if (Object1.Cgpa != Object2.Cgpa)
					equal = false;
			}
			else if (Object1.Cgpa == null ^ Object2.Cgpa == null )
			{
				equal = false;
			}
			if ( Object1.QualRank != null && Object2.QualRank != null )
			{
				if (Object1.QualRank != Object2.QualRank)
					equal = false;
			}
			else if (Object1.QualRank == null ^ Object2.QualRank == null )
			{
				equal = false;
			}
			if ( Object1.EdCdeQualPhase != null && Object2.EdCdeQualPhase != null )
			{
				if (Object1.EdCdeQualPhase != Object2.EdCdeQualPhase)
					equal = false;
			}
			else if (Object1.EdCdeQualPhase == null ^ Object2.EdCdeQualPhase == null )
			{
				equal = false;
			}
			if ( Object1.EdCdeQualStatusId != null && Object2.EdCdeQualStatusId != null )
			{
				if (Object1.EdCdeQualStatusId != Object2.EdCdeQualStatusId)
					equal = false;
			}
			else if (Object1.EdCdeQualStatusId == null ^ Object2.EdCdeQualStatusId == null )
			{
				equal = false;
			}
			if ( Object1.QualStartDate != null && Object2.QualStartDate != null )
			{
				if (Object1.QualStartDate != Object2.QualStartDate)
					equal = false;
			}
			else if (Object1.QualStartDate == null ^ Object2.QualStartDate == null )
			{
				equal = false;
			}
			if ( Object1.GsCodeLanguageId != null && Object2.GsCodeLanguageId != null )
			{
				if (Object1.GsCodeLanguageId != Object2.GsCodeLanguageId)
					equal = false;
			}
			else if (Object1.GsCodeLanguageId == null ^ Object2.GsCodeLanguageId == null )
			{
				equal = false;
			}
			if ( Object1.AdmAppRegHistoryId != null && Object2.AdmAppRegHistoryId != null )
			{
				if (Object1.AdmAppRegHistoryId != Object2.AdmAppRegHistoryId)
					equal = false;
			}
			else if (Object1.AdmAppRegHistoryId == null ^ Object2.AdmAppRegHistoryId == null )
			{
				equal = false;
			}
			if ( Object1.AdmCdeExamGrdngId != null && Object2.AdmCdeExamGrdngId != null )
			{
				if (Object1.AdmCdeExamGrdngId != Object2.AdmCdeExamGrdngId)
					equal = false;
			}
			else if (Object1.AdmCdeExamGrdngId == null ^ Object2.AdmCdeExamGrdngId == null )
			{
				equal = false;
			}
			if ( Object1.QualDescEn != null && Object2.QualDescEn != null )
			{
				if (Object1.QualDescEn != Object2.QualDescEn)
					equal = false;
			}
			else if (Object1.QualDescEn == null ^ Object2.QualDescEn == null )
			{
				equal = false;
			}
			if ( Object1.QualBrnDescEn != null && Object2.QualBrnDescEn != null )
			{
				if (Object1.QualBrnDescEn != Object2.QualBrnDescEn)
					equal = false;
			}
			else if (Object1.QualBrnDescEn == null ^ Object2.QualBrnDescEn == null )
			{
				equal = false;
			}
			if ( Object1.GsCdeFacultyId != null && Object2.GsCdeFacultyId != null )
			{
				if (Object1.GsCdeFacultyId != Object2.GsCdeFacultyId)
					equal = false;
			}
			else if (Object1.GsCdeFacultyId == null ^ Object2.GsCdeFacultyId == null )
			{
				equal = false;
			}
			if ( Object1.GsCdeSchoolTypeId != null && Object2.GsCdeSchoolTypeId != null )
			{
				if (Object1.GsCdeSchoolTypeId != Object2.GsCdeSchoolTypeId)
					equal = false;
			}
			else if (Object1.GsCdeSchoolTypeId == null ^ Object2.GsCdeSchoolTypeId == null )
			{
				equal = false;
			}
			if ( Object1.AdmCdeQualStatusId != null && Object2.AdmCdeQualStatusId != null )
			{
				if (Object1.AdmCdeQualStatusId != Object2.AdmCdeQualStatusId)
					equal = false;
			}
			else if (Object1.AdmCdeQualStatusId == null ^ Object2.AdmCdeQualStatusId == null )
			{
				equal = false;
			}
			if ( Object1.Notes != null && Object2.Notes != null )
			{
				if (Object1.Notes != Object2.Notes)
					equal = false;
			}
			else if (Object1.Notes == null ^ Object2.Notes == null )
			{
				equal = false;
			}
			if ( Object1.QualRsltUsr != null && Object2.QualRsltUsr != null )
			{
				if (Object1.QualRsltUsr != Object2.QualRsltUsr)
					equal = false;
			}
			else if (Object1.QualRsltUsr == null ^ Object2.QualRsltUsr == null )
			{
				equal = false;
			}
			if ( Object1.QualRsltPwd != null && Object2.QualRsltPwd != null )
			{
				if (Object1.QualRsltPwd != Object2.QualRsltPwd)
					equal = false;
			}
			else if (Object1.QualRsltPwd == null ^ Object2.QualRsltPwd == null )
			{
				equal = false;
			}
			if ( Object1.EdCdeSchoolGradeId != null && Object2.EdCdeSchoolGradeId != null )
			{
				if (Object1.EdCdeSchoolGradeId != Object2.EdCdeSchoolGradeId)
					equal = false;
			}
			else if (Object1.EdCdeSchoolGradeId == null ^ Object2.EdCdeSchoolGradeId == null )
			{
				equal = false;
			}
					
			return equal;
		}
		
		#endregion
		
		#region IComparable Members
		///<summary>
		/// Compares this instance to a specified object and returns an indication of their relative values.
		///<param name="obj">An object to compare to this instance, or a null reference (Nothing in Visual Basic).</param>
		///</summary>
		///<returns>A signed integer that indicates the relative order of this instance and obj.</returns>
		public virtual int CompareTo(object obj)
		{
			throw new NotImplementedException();
			//return this. GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]) .CompareTo(((EdStudQualBase)obj).GetPropertyName(SourceTable.PrimaryKey.MemberColumns[0]));
		}
		
		/*
		// static method to get a Comparer object
        public static EdStudQualComparer GetComparer()
        {
            return new EdStudQualComparer();
        }
        */

        // Comparer delegates back to EdStudQual
        // Employee uses the integer's default
        // CompareTo method
        /*
        public int CompareTo(Item rhs)
        {
            return this.Id.CompareTo(rhs.Id);
        }
        */

/*
        // Special implementation to be called by custom comparer
        public int CompareTo(EdStudQual rhs, EdStudQualColumn which)
        {
            switch (which)
            {
            	
            	
            	case EdStudQualColumn.EdStudQualId:
            		return this.EdStudQualId.CompareTo(rhs.EdStudQualId);
            		
            		                 
            	
            	
            	case EdStudQualColumn.EdStudId:
            		return this.EdStudId.Value.CompareTo(rhs.EdStudId.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.EdCodeQualId:
            		return this.EdCodeQualId.CompareTo(rhs.EdCodeQualId);
            		
            		                 
            	
            	
            	case EdStudQualColumn.SchoolName:
            		return this.SchoolName.CompareTo(rhs.SchoolName);
            		
            		                 
            	
            	
            	case EdStudQualColumn.QualDate:
            		return this.QualDate.Value.CompareTo(rhs.QualDate.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.QualTotMark:
            		return this.QualTotMark.Value.CompareTo(rhs.QualTotMark.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.TotalDegree:
            		return this.TotalDegree.Value.CompareTo(rhs.TotalDegree.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.TotalPercent:
            		return this.TotalPercent.CompareTo(rhs.TotalPercent);
            		
            		                 
            	
            	
            	case EdStudQualColumn.GsCountryNodeId:
            		return this.GsCountryNodeId.Value.CompareTo(rhs.GsCountryNodeId.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.AdmApplicantId:
            		return this.AdmApplicantId.Value.CompareTo(rhs.AdmApplicantId.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.EdCdeQualBrnId:
            		return this.EdCdeQualBrnId.Value.CompareTo(rhs.EdCdeQualBrnId.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.GsCdeSchoolId:
            		return this.GsCdeSchoolId.Value.CompareTo(rhs.GsCdeSchoolId.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.StudSeatNum:
            		return this.StudSeatNum.Value.CompareTo(rhs.StudSeatNum.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.EnglishPercent:
            		return this.EnglishPercent.Value.CompareTo(rhs.EnglishPercent.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.ConvertedPercent:
            		return this.ConvertedPercent.Value.CompareTo(rhs.ConvertedPercent.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.EdCdeQualCatId:
            		return this.EdCdeQualCatId.Value.CompareTo(rhs.EdCdeQualCatId.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.AdmissionFlg:
            		return this.AdmissionFlg.CompareTo(rhs.AdmissionFlg);
            		
            		                 
            	
            	
            	case EdStudQualColumn.GsCdeUniversitiesId:
            		return this.GsCdeUniversitiesId.Value.CompareTo(rhs.GsCdeUniversitiesId.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.Tofel:
            		return this.Tofel.Value.CompareTo(rhs.Tofel.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.Cgpa:
            		return this.Cgpa.Value.CompareTo(rhs.Cgpa.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.QualRank:
            		return this.QualRank.Value.CompareTo(rhs.QualRank.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.EdCdeQualPhase:
            		return this.EdCdeQualPhase.Value.CompareTo(rhs.EdCdeQualPhase.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.EdCdeQualStatusId:
            		return this.EdCdeQualStatusId.Value.CompareTo(rhs.EdCdeQualStatusId.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.QualStartDate:
            		return this.QualStartDate.Value.CompareTo(rhs.QualStartDate.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.GsCodeLanguageId:
            		return this.GsCodeLanguageId.Value.CompareTo(rhs.GsCodeLanguageId.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.AdmAppRegHistoryId:
            		return this.AdmAppRegHistoryId.Value.CompareTo(rhs.AdmAppRegHistoryId.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.AdmCdeExamGrdngId:
            		return this.AdmCdeExamGrdngId.Value.CompareTo(rhs.AdmCdeExamGrdngId.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.QualDescEn:
            		return this.QualDescEn.CompareTo(rhs.QualDescEn);
            		
            		                 
            	
            	
            	case EdStudQualColumn.QualBrnDescEn:
            		return this.QualBrnDescEn.CompareTo(rhs.QualBrnDescEn);
            		
            		                 
            	
            	
            	case EdStudQualColumn.GsCdeFacultyId:
            		return this.GsCdeFacultyId.Value.CompareTo(rhs.GsCdeFacultyId.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.GsCdeSchoolTypeId:
            		return this.GsCdeSchoolTypeId.Value.CompareTo(rhs.GsCdeSchoolTypeId.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.AdmCdeQualStatusId:
            		return this.AdmCdeQualStatusId.Value.CompareTo(rhs.AdmCdeQualStatusId.Value);
            		
            		                 
            	
            	
            	case EdStudQualColumn.Notes:
            		return this.Notes.CompareTo(rhs.Notes);
            		
            		                 
            	
            	
            	case EdStudQualColumn.QualRsltUsr:
            		return this.QualRsltUsr.CompareTo(rhs.QualRsltUsr);
            		
            		                 
            	
            	
            	case EdStudQualColumn.QualRsltPwd:
            		return this.QualRsltPwd.CompareTo(rhs.QualRsltPwd);
            		
            		                 
            	
            	
            	case EdStudQualColumn.EdCdeSchoolGradeId:
            		return this.EdCdeSchoolGradeId.Value.CompareTo(rhs.EdCdeSchoolGradeId.Value);
            		
            		                 
            }
            return 0;
        }
        */
	
		#endregion
		
		#region IComponent Members
		
		private ISite _site = null;

		/// <summary>
		/// Gets or Sets the site where this data is located.
		/// </summary>
		[XmlIgnore]
		[SoapIgnore]
		[Browsable(false)]
		public ISite Site
		{
			get{ return this._site; }
			set{ this._site = value; }
		}

		#endregion

		#region IDisposable Members
		
		/// <summary>
		/// Notify those that care when we dispose.
		/// </summary>
		[field:NonSerialized]
		public event System.EventHandler Disposed;

		/// <summary>
		/// Clean up. Nothing here though.
		/// </summary>
		public virtual void Dispose()
		{
			this.parentCollection = null;
			this.Dispose(true);
			GC.SuppressFinalize(this);
		}
		
		/// <summary>
		/// Clean up.
		/// </summary>
		protected virtual void Dispose(bool disposing)
		{
			if (disposing)
			{
				EventHandler handler = Disposed;
				if (handler != null)
					handler(this, EventArgs.Empty);
			}
		}
		
		#endregion
				
		#region IEntityKey<EdStudQualKey> Members
		
		// member variable for the EntityId property
		private EdStudQualKey _entityId;

		/// <summary>
		/// Gets or sets the EntityId property.
		/// </summary>
		[XmlIgnore]
		public virtual EdStudQualKey EntityId
		{
			get
			{
				if ( _entityId == null )
				{
					_entityId = new EdStudQualKey(this);
				}

				return _entityId;
			}
			set
			{
				if ( value != null )
				{
					value.Entity = this;
				}
				
				_entityId = value;
			}
		}
		
		#endregion
		
		#region EntityState
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false) , XmlIgnoreAttribute()]
		public override EntityState EntityState 
		{ 
			get{ return entityData.EntityState;	 } 
			set{ entityData.EntityState = value; } 
		}
		#endregion 
		
		#region EntityTrackingKey
		///<summary>
		/// Provides the tracking key for the <see cref="EntityLocator"/>
		///</summary>
		[XmlIgnore]
		public override string EntityTrackingKey
		{
			get
			{
				if(entityTrackingKey == null)
					entityTrackingKey = new System.Text.StringBuilder("EdStudQual")
					.Append("|").Append( this.EdStudQualId.ToString()).ToString();
				return entityTrackingKey;
			}
			set
		    {
		        if (value != null)
                    entityTrackingKey = value;
		    }
		}
		#endregion 
		
		#region ToString Method
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return string.Format(System.Globalization.CultureInfo.InvariantCulture,
				"{37}{36}- EdStudQualId: {0}{36}- EdStudId: {1}{36}- EdCodeQualId: {2}{36}- SchoolName: {3}{36}- QualDate: {4}{36}- QualTotMark: {5}{36}- TotalDegree: {6}{36}- TotalPercent: {7}{36}- GsCountryNodeId: {8}{36}- AdmApplicantId: {9}{36}- EdCdeQualBrnId: {10}{36}- GsCdeSchoolId: {11}{36}- StudSeatNum: {12}{36}- EnglishPercent: {13}{36}- ConvertedPercent: {14}{36}- EdCdeQualCatId: {15}{36}- AdmissionFlg: {16}{36}- GsCdeUniversitiesId: {17}{36}- Tofel: {18}{36}- Cgpa: {19}{36}- QualRank: {20}{36}- EdCdeQualPhase: {21}{36}- EdCdeQualStatusId: {22}{36}- QualStartDate: {23}{36}- GsCodeLanguageId: {24}{36}- AdmAppRegHistoryId: {25}{36}- AdmCdeExamGrdngId: {26}{36}- QualDescEn: {27}{36}- QualBrnDescEn: {28}{36}- GsCdeFacultyId: {29}{36}- GsCdeSchoolTypeId: {30}{36}- AdmCdeQualStatusId: {31}{36}- Notes: {32}{36}- QualRsltUsr: {33}{36}- QualRsltPwd: {34}{36}- EdCdeSchoolGradeId: {35}{36}{38}", 
				this.EdStudQualId,
				(this.EdStudId == null) ? string.Empty : this.EdStudId.ToString(),
				this.EdCodeQualId,
				(this.SchoolName == null) ? string.Empty : this.SchoolName.ToString(),
				(this.QualDate == null) ? string.Empty : this.QualDate.ToString(),
				(this.QualTotMark == null) ? string.Empty : this.QualTotMark.ToString(),
				(this.TotalDegree == null) ? string.Empty : this.TotalDegree.ToString(),
				this.TotalPercent,
				(this.GsCountryNodeId == null) ? string.Empty : this.GsCountryNodeId.ToString(),
				(this.AdmApplicantId == null) ? string.Empty : this.AdmApplicantId.ToString(),
				(this.EdCdeQualBrnId == null) ? string.Empty : this.EdCdeQualBrnId.ToString(),
				(this.GsCdeSchoolId == null) ? string.Empty : this.GsCdeSchoolId.ToString(),
				(this.StudSeatNum == null) ? string.Empty : this.StudSeatNum.ToString(),
				(this.EnglishPercent == null) ? string.Empty : this.EnglishPercent.ToString(),
				(this.ConvertedPercent == null) ? string.Empty : this.ConvertedPercent.ToString(),
				(this.EdCdeQualCatId == null) ? string.Empty : this.EdCdeQualCatId.ToString(),
				this.AdmissionFlg,
				(this.GsCdeUniversitiesId == null) ? string.Empty : this.GsCdeUniversitiesId.ToString(),
				(this.Tofel == null) ? string.Empty : this.Tofel.ToString(),
				(this.Cgpa == null) ? string.Empty : this.Cgpa.ToString(),
				(this.QualRank == null) ? string.Empty : this.QualRank.ToString(),
				(this.EdCdeQualPhase == null) ? string.Empty : this.EdCdeQualPhase.ToString(),
				(this.EdCdeQualStatusId == null) ? string.Empty : this.EdCdeQualStatusId.ToString(),
				(this.QualStartDate == null) ? string.Empty : this.QualStartDate.ToString(),
				(this.GsCodeLanguageId == null) ? string.Empty : this.GsCodeLanguageId.ToString(),
				(this.AdmAppRegHistoryId == null) ? string.Empty : this.AdmAppRegHistoryId.ToString(),
				(this.AdmCdeExamGrdngId == null) ? string.Empty : this.AdmCdeExamGrdngId.ToString(),
				(this.QualDescEn == null) ? string.Empty : this.QualDescEn.ToString(),
				(this.QualBrnDescEn == null) ? string.Empty : this.QualBrnDescEn.ToString(),
				(this.GsCdeFacultyId == null) ? string.Empty : this.GsCdeFacultyId.ToString(),
				(this.GsCdeSchoolTypeId == null) ? string.Empty : this.GsCdeSchoolTypeId.ToString(),
				(this.AdmCdeQualStatusId == null) ? string.Empty : this.AdmCdeQualStatusId.ToString(),
				(this.Notes == null) ? string.Empty : this.Notes.ToString(),
				(this.QualRsltUsr == null) ? string.Empty : this.QualRsltUsr.ToString(),
				(this.QualRsltPwd == null) ? string.Empty : this.QualRsltPwd.ToString(),
				(this.EdCdeSchoolGradeId == null) ? string.Empty : this.EdCdeSchoolGradeId.ToString(),
				System.Environment.NewLine, 
				this.GetType(),
				this.Error.Length == 0 ? string.Empty : string.Format("- Error: {0}\n",this.Error));
		}
		
		#endregion ToString Method
		
		#region Inner data class
		
	/// <summary>
	///		The data structure representation of the 'ED_STUD_QUAL' table.
	/// </summary>
	/// <remarks>
	/// 	This struct is generated by a tool and should never be modified.
	/// </remarks>
	[EditorBrowsable(EditorBrowsableState.Never)]
	[Serializable]
	internal protected class EdStudQualEntityData : ICloneable, ICloneableEx
	{
		#region Variable Declarations
		private EntityState currentEntityState = EntityState.Added;
		
		#region Primary key(s)
		/// <summary>			
		/// ED_STUD_QUAL_ID : 
		/// </summary>
		/// <remarks>Member of the primary key of the underlying table "ED_STUD_QUAL"</remarks>
		public System.Decimal EdStudQualId;
			
		/// <summary>
		/// keep a copy of the original so it can be used for editable primary keys.
		/// </summary>
		public System.Decimal OriginalEdStudQualId;
		
		#endregion
		
		#region Non Primary key(s)
		
		
		/// <summary>
		/// ED_STUD_ID : 
		/// </summary>
		public System.Decimal?		  EdStudId = null;
		
		/// <summary>
		/// ED_CODE_QUAL_ID : 
		/// </summary>
		public System.Decimal		  EdCodeQualId = 0.0m;
		
		/// <summary>
		/// SCHOOL_NAME : 
		/// </summary>
		public System.String		  SchoolName = null;
		
		/// <summary>
		/// QUAL_DATE : End Date
		/// </summary>
		public System.DateTime?		  QualDate = null;
		
		/// <summary>
		/// QUAL_TOT_MARK : 
		/// </summary>
		public System.Decimal?		  QualTotMark = null;
		
		/// <summary>
		/// TOTAL_DEGREE : 
		/// </summary>
		public System.Decimal?		  TotalDegree = null;
		
		/// <summary>
		/// TOTAL_PERCENT : 
		/// </summary>
		public System.Decimal		  TotalPercent = 0.0m;
		
		/// <summary>
		/// GS_COUNTRY_NODE_ID : 
		/// </summary>
		public System.Decimal?		  GsCountryNodeId = null;
		
		/// <summary>
		/// ADM_APPLICANT_ID : 
		/// </summary>
		public System.Decimal?		  AdmApplicantId = null;
		
		/// <summary>
		/// ED_CDE_QUAL_BRN_ID : 
		/// </summary>
		public System.Decimal?		  EdCdeQualBrnId = null;
		
		/// <summary>
		/// GS_CDE_SCHOOL_ID : 
		/// </summary>
		public System.Decimal?		  GsCdeSchoolId = null;
		
		/// <summary>
		/// STUD_SEAT_NUM : 
		/// </summary>
		public System.Decimal?		  StudSeatNum = null;
		
		/// <summary>
		/// ENGLISH_PERCENT : 
		/// </summary>
		public System.Decimal?		  EnglishPercent = null;
		
		/// <summary>
		/// CONVERTED_PERCENT : 
		/// </summary>
		public System.Decimal?		  ConvertedPercent = null;
		
		/// <summary>
		/// ED_CDE_QUAL_CAT_ID : 
		/// </summary>
		public System.Decimal?		  EdCdeQualCatId = null;
		
		/// <summary>
		/// ADMISSION_FLG : 
		/// </summary>
		public System.Decimal		  AdmissionFlg = 0.0m;
		
		/// <summary>
		/// GS_CDE_UNIVERSITIES_ID : 
		/// </summary>
		public System.Decimal?		  GsCdeUniversitiesId = null;
		
		/// <summary>
		/// TOFEL : 
		/// </summary>
		public System.Decimal?		  Tofel = null;
		
		/// <summary>
		/// CGPA : 
		/// </summary>
		public System.Decimal?		  Cgpa = null;
		
		/// <summary>
		/// QUAL_RANK : ترتيب الطالب فى المؤهل
		/// </summary>
		public System.Int32?		  QualRank = null;
		
		/// <summary>
		/// ED_CDE_QUAL_PHASE : 
		/// </summary>
		public System.Decimal?		  EdCdeQualPhase = null;
		
		/// <summary>
		/// ED_CDE_QUAL_STATUS_ID : 
		/// </summary>
		public System.Int32?		  EdCdeQualStatusId = null;
		
		/// <summary>
		/// QUAL_START_DATE : From date
		/// </summary>
		public System.DateTime?		  QualStartDate = null;
		
		/// <summary>
		/// GS_CODE_LANGUAGE_ID : 
		/// </summary>
		public System.Decimal?		  GsCodeLanguageId = null;
		
		/// <summary>
		/// ADM_APP_REG_HISTORY_ID : 
		/// </summary>
		public System.Decimal?		  AdmAppRegHistoryId = null;
		
		/// <summary>
		/// ADM_CDE_EXAM_GRDNG_ID : NU:PG QUAL GRADE
		/// </summary>
		public System.Decimal?		  AdmCdeExamGrdngId = null;
		
		/// <summary>
		/// QUAL_DESC_EN : 
		/// </summary>
		public System.String		  QualDescEn = null;
		
		/// <summary>
		/// QUAL_BRN_DESC_EN : Qual Major
		/// </summary>
		public System.String		  QualBrnDescEn = null;
		
		/// <summary>
		/// GS_CDE_FACULTY_ID : 
		/// </summary>
		public System.Decimal?		  GsCdeFacultyId = null;
		
		/// <summary>
		/// GS_CDE_SCHOOL_TYPE_ID : EJUST
		/// </summary>
		public System.Int32?		  GsCdeSchoolTypeId = null;
		
		/// <summary>
		/// ADM_CDE_QUAL_STATUS_ID : EJUST
		/// </summary>
		public System.Int32?		  AdmCdeQualStatusId = null;
		
		/// <summary>
		/// NOTES : EJUST
		/// </summary>
		public System.String		  Notes = null;
		
		/// <summary>
		/// QUAL_RSLT_USR : 
		/// </summary>
		public System.String		  QualRsltUsr = null;
		
		/// <summary>
		/// QUAL_RSLT_PWD : 
		/// </summary>
		public System.String		  QualRsltPwd = null;
		
		/// <summary>
		/// ED_CDE_SCHOOL_GRADE_ID : 
		/// </summary>
		public System.Int32?		  EdCdeSchoolGradeId = null;
		#endregion
			
		#region Source Foreign Key Property
				
		private EdStud _edStudIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdStud"/>.
		/// </summary>
		/// <value>The source EdStud for EdStudId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdStud EdStudIdSource
      	{
            get { return this._edStudIdSource; }
            set { this._edStudIdSource = value; }
      	}
		private AdmAppRegHistory _admAppRegHistoryIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmAppRegHistory"/>.
		/// </summary>
		/// <value>The source AdmAppRegHistory for AdmAppRegHistoryId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmAppRegHistory AdmAppRegHistoryIdSource
      	{
            get { return this._admAppRegHistoryIdSource; }
            set { this._admAppRegHistoryIdSource = value; }
      	}
		private AdmApplicant _admApplicantIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmApplicant"/>.
		/// </summary>
		/// <value>The source AdmApplicant for AdmApplicantId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmApplicant AdmApplicantIdSource
      	{
            get { return this._admApplicantIdSource; }
            set { this._admApplicantIdSource = value; }
      	}
		private AdmCdeExamGrdng _admCdeExamGrdngIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeExamGrdng"/>.
		/// </summary>
		/// <value>The source AdmCdeExamGrdng for AdmCdeExamGrdngId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmCdeExamGrdng AdmCdeExamGrdngIdSource
      	{
            get { return this._admCdeExamGrdngIdSource; }
            set { this._admCdeExamGrdngIdSource = value; }
      	}
		private AdmCdeQualStatus _admCdeQualStatusIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="AdmCdeQualStatus"/>.
		/// </summary>
		/// <value>The source AdmCdeQualStatus for AdmCdeQualStatusId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual AdmCdeQualStatus AdmCdeQualStatusIdSource
      	{
            get { return this._admCdeQualStatusIdSource; }
            set { this._admCdeQualStatusIdSource = value; }
      	}
		private EdCdeQualBrn _edCdeQualBrnIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCdeQualBrn"/>.
		/// </summary>
		/// <value>The source EdCdeQualBrn for EdCdeQualBrnId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCdeQualBrn EdCdeQualBrnIdSource
      	{
            get { return this._edCdeQualBrnIdSource; }
            set { this._edCdeQualBrnIdSource = value; }
      	}
		private EdCdeQualCat _edCdeQualCatIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCdeQualCat"/>.
		/// </summary>
		/// <value>The source EdCdeQualCat for EdCdeQualCatId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCdeQualCat EdCdeQualCatIdSource
      	{
            get { return this._edCdeQualCatIdSource; }
            set { this._edCdeQualCatIdSource = value; }
      	}
		private EdCdeQualPhase _edCdeQualPhaseSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCdeQualPhase"/>.
		/// </summary>
		/// <value>The source EdCdeQualPhase for EdCdeQualPhase.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCdeQualPhase EdCdeQualPhaseSource
      	{
            get { return this._edCdeQualPhaseSource; }
            set { this._edCdeQualPhaseSource = value; }
      	}
		private EdCdeQualStatus _edCdeQualStatusIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCdeQualStatus"/>.
		/// </summary>
		/// <value>The source EdCdeQualStatus for EdCdeQualStatusId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCdeQualStatus EdCdeQualStatusIdSource
      	{
            get { return this._edCdeQualStatusIdSource; }
            set { this._edCdeQualStatusIdSource = value; }
      	}
		private EdCdeSchoolGrade _edCdeSchoolGradeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCdeSchoolGrade"/>.
		/// </summary>
		/// <value>The source EdCdeSchoolGrade for EdCdeSchoolGradeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCdeSchoolGrade EdCdeSchoolGradeIdSource
      	{
            get { return this._edCdeSchoolGradeIdSource; }
            set { this._edCdeSchoolGradeIdSource = value; }
      	}
		private EdCodeQual _edCodeQualIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="EdCodeQual"/>.
		/// </summary>
		/// <value>The source EdCodeQual for EdCodeQualId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual EdCodeQual EdCodeQualIdSource
      	{
            get { return this._edCodeQualIdSource; }
            set { this._edCodeQualIdSource = value; }
      	}
		private GsCdeFaculty _gsCdeFacultyIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeFaculty"/>.
		/// </summary>
		/// <value>The source GsCdeFaculty for GsCdeFacultyId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeFaculty GsCdeFacultyIdSource
      	{
            get { return this._gsCdeFacultyIdSource; }
            set { this._gsCdeFacultyIdSource = value; }
      	}
		private GsCdeSchool _gsCdeSchoolIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeSchool"/>.
		/// </summary>
		/// <value>The source GsCdeSchool for GsCdeSchoolId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeSchool GsCdeSchoolIdSource
      	{
            get { return this._gsCdeSchoolIdSource; }
            set { this._gsCdeSchoolIdSource = value; }
      	}
		private GsCdeSchoolType _gsCdeSchoolTypeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeSchoolType"/>.
		/// </summary>
		/// <value>The source GsCdeSchoolType for GsCdeSchoolTypeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeSchoolType GsCdeSchoolTypeIdSource
      	{
            get { return this._gsCdeSchoolTypeIdSource; }
            set { this._gsCdeSchoolTypeIdSource = value; }
      	}
		private GsCdeUniversities _gsCdeUniversitiesIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCdeUniversities"/>.
		/// </summary>
		/// <value>The source GsCdeUniversities for GsCdeUniversitiesId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCdeUniversities GsCdeUniversitiesIdSource
      	{
            get { return this._gsCdeUniversitiesIdSource; }
            set { this._gsCdeUniversitiesIdSource = value; }
      	}
		private GsCodeLanguage _gsCodeLanguageIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCodeLanguage"/>.
		/// </summary>
		/// <value>The source GsCodeLanguage for GsCodeLanguageId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCodeLanguage GsCodeLanguageIdSource
      	{
            get { return this._gsCodeLanguageIdSource; }
            set { this._gsCodeLanguageIdSource = value; }
      	}
		private GsCountryNode _gsCountryNodeIdSource = null;
		
		/// <summary>
		/// Gets or sets the source <see cref="GsCountryNode"/>.
		/// </summary>
		/// <value>The source GsCountryNode for GsCountryNodeId.</value>
		[XmlIgnore()]
		[Browsable(false)]
		public virtual GsCountryNode GsCountryNodeIdSource
      	{
            get { return this._gsCountryNodeIdSource; }
            set { this._gsCountryNodeIdSource = value; }
      	}
		#endregion
		#endregion Variable Declarations
	
		#region Data Properties

		#region EdStudFacultyCollection
		
		private TList<EdStudFaculty> _edStudFacultyEdStudQualId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudFacultyEdStudQualId
		/// </summary>
		
		public TList<EdStudFaculty> EdStudFacultyCollection
		{
			get
			{
				if (_edStudFacultyEdStudQualId == null)
				{
				_edStudFacultyEdStudQualId = new TList<EdStudFaculty>();
				}
	
				return _edStudFacultyEdStudQualId;
			}
			set { _edStudFacultyEdStudQualId = value; }
		}
		
		#endregion

		#region EdStudQualGroupCollection
		
		private TList<EdStudQualGroup> _edStudQualGroupEdStudQualId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudQualGroupEdStudQualId
		/// </summary>
		
		public TList<EdStudQualGroup> EdStudQualGroupCollection
		{
			get
			{
				if (_edStudQualGroupEdStudQualId == null)
				{
				_edStudQualGroupEdStudQualId = new TList<EdStudQualGroup>();
				}
	
				return _edStudQualGroupEdStudQualId;
			}
			set { _edStudQualGroupEdStudQualId = value; }
		}
		
		#endregion

		#region EdStudQualSubjectCollection
		
		private TList<EdStudQualSubject> _edStudQualSubjectEdStudQualId;
		
		/// <summary>
		///	Holds a collection of entity objects
		///	which are related to this object through the relation _edStudQualSubjectEdStudQualId
		/// </summary>
		
		public TList<EdStudQualSubject> EdStudQualSubjectCollection
		{
			get
			{
				if (_edStudQualSubjectEdStudQualId == null)
				{
				_edStudQualSubjectEdStudQualId = new TList<EdStudQualSubject>();
				}
	
				return _edStudQualSubjectEdStudQualId;
			}
			set { _edStudQualSubjectEdStudQualId = value; }
		}
		
		#endregion

		#endregion Data Properties
		
		#region Clone Method

		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public Object Clone()
		{
			EdStudQualEntityData _tmp = new EdStudQualEntityData();
						
			_tmp.EdStudQualId = this.EdStudQualId;
			_tmp.OriginalEdStudQualId = this.OriginalEdStudQualId;
			
			_tmp.EdStudId = this.EdStudId;
			_tmp.EdCodeQualId = this.EdCodeQualId;
			_tmp.SchoolName = this.SchoolName;
			_tmp.QualDate = this.QualDate;
			_tmp.QualTotMark = this.QualTotMark;
			_tmp.TotalDegree = this.TotalDegree;
			_tmp.TotalPercent = this.TotalPercent;
			_tmp.GsCountryNodeId = this.GsCountryNodeId;
			_tmp.AdmApplicantId = this.AdmApplicantId;
			_tmp.EdCdeQualBrnId = this.EdCdeQualBrnId;
			_tmp.GsCdeSchoolId = this.GsCdeSchoolId;
			_tmp.StudSeatNum = this.StudSeatNum;
			_tmp.EnglishPercent = this.EnglishPercent;
			_tmp.ConvertedPercent = this.ConvertedPercent;
			_tmp.EdCdeQualCatId = this.EdCdeQualCatId;
			_tmp.AdmissionFlg = this.AdmissionFlg;
			_tmp.GsCdeUniversitiesId = this.GsCdeUniversitiesId;
			_tmp.Tofel = this.Tofel;
			_tmp.Cgpa = this.Cgpa;
			_tmp.QualRank = this.QualRank;
			_tmp.EdCdeQualPhase = this.EdCdeQualPhase;
			_tmp.EdCdeQualStatusId = this.EdCdeQualStatusId;
			_tmp.QualStartDate = this.QualStartDate;
			_tmp.GsCodeLanguageId = this.GsCodeLanguageId;
			_tmp.AdmAppRegHistoryId = this.AdmAppRegHistoryId;
			_tmp.AdmCdeExamGrdngId = this.AdmCdeExamGrdngId;
			_tmp.QualDescEn = this.QualDescEn;
			_tmp.QualBrnDescEn = this.QualBrnDescEn;
			_tmp.GsCdeFacultyId = this.GsCdeFacultyId;
			_tmp.GsCdeSchoolTypeId = this.GsCdeSchoolTypeId;
			_tmp.AdmCdeQualStatusId = this.AdmCdeQualStatusId;
			_tmp.Notes = this.Notes;
			_tmp.QualRsltUsr = this.QualRsltUsr;
			_tmp.QualRsltPwd = this.QualRsltPwd;
			_tmp.EdCdeSchoolGradeId = this.EdCdeSchoolGradeId;
			
			#region Source Parent Composite Entities
			if (this.EdStudIdSource != null)
				_tmp.EdStudIdSource = MakeCopyOf(this.EdStudIdSource) as EdStud;
			if (this.AdmAppRegHistoryIdSource != null)
				_tmp.AdmAppRegHistoryIdSource = MakeCopyOf(this.AdmAppRegHistoryIdSource) as AdmAppRegHistory;
			if (this.AdmApplicantIdSource != null)
				_tmp.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource) as AdmApplicant;
			if (this.AdmCdeExamGrdngIdSource != null)
				_tmp.AdmCdeExamGrdngIdSource = MakeCopyOf(this.AdmCdeExamGrdngIdSource) as AdmCdeExamGrdng;
			if (this.AdmCdeQualStatusIdSource != null)
				_tmp.AdmCdeQualStatusIdSource = MakeCopyOf(this.AdmCdeQualStatusIdSource) as AdmCdeQualStatus;
			if (this.EdCdeQualBrnIdSource != null)
				_tmp.EdCdeQualBrnIdSource = MakeCopyOf(this.EdCdeQualBrnIdSource) as EdCdeQualBrn;
			if (this.EdCdeQualCatIdSource != null)
				_tmp.EdCdeQualCatIdSource = MakeCopyOf(this.EdCdeQualCatIdSource) as EdCdeQualCat;
			if (this.EdCdeQualPhaseSource != null)
				_tmp.EdCdeQualPhaseSource = MakeCopyOf(this.EdCdeQualPhaseSource) as EdCdeQualPhase;
			if (this.EdCdeQualStatusIdSource != null)
				_tmp.EdCdeQualStatusIdSource = MakeCopyOf(this.EdCdeQualStatusIdSource) as EdCdeQualStatus;
			if (this.EdCdeSchoolGradeIdSource != null)
				_tmp.EdCdeSchoolGradeIdSource = MakeCopyOf(this.EdCdeSchoolGradeIdSource) as EdCdeSchoolGrade;
			if (this.EdCodeQualIdSource != null)
				_tmp.EdCodeQualIdSource = MakeCopyOf(this.EdCodeQualIdSource) as EdCodeQual;
			if (this.GsCdeFacultyIdSource != null)
				_tmp.GsCdeFacultyIdSource = MakeCopyOf(this.GsCdeFacultyIdSource) as GsCdeFaculty;
			if (this.GsCdeSchoolIdSource != null)
				_tmp.GsCdeSchoolIdSource = MakeCopyOf(this.GsCdeSchoolIdSource) as GsCdeSchool;
			if (this.GsCdeSchoolTypeIdSource != null)
				_tmp.GsCdeSchoolTypeIdSource = MakeCopyOf(this.GsCdeSchoolTypeIdSource) as GsCdeSchoolType;
			if (this.GsCdeUniversitiesIdSource != null)
				_tmp.GsCdeUniversitiesIdSource = MakeCopyOf(this.GsCdeUniversitiesIdSource) as GsCdeUniversities;
			if (this.GsCodeLanguageIdSource != null)
				_tmp.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource) as GsCodeLanguage;
			if (this.GsCountryNodeIdSource != null)
				_tmp.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource) as GsCountryNode;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			if (this._edStudFacultyEdStudQualId != null)
				_tmp.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection); 
			if (this._edStudQualGroupEdStudQualId != null)
				_tmp.EdStudQualGroupCollection = (TList<EdStudQualGroup>) MakeCopyOf(this.EdStudQualGroupCollection); 
			if (this._edStudQualSubjectEdStudQualId != null)
				_tmp.EdStudQualSubjectCollection = (TList<EdStudQualSubject>) MakeCopyOf(this.EdStudQualSubjectCollection); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		/// <summary>
		/// Creates a new object that is a copy of the current instance.
		/// </summary>
		/// <returns>A new object that is a copy of this instance.</returns>
		public object Clone(IDictionary existingCopies)
		{
			if (existingCopies == null)
				existingCopies = new Hashtable();
				
			EdStudQualEntityData _tmp = new EdStudQualEntityData();
						
			_tmp.EdStudQualId = this.EdStudQualId;
			_tmp.OriginalEdStudQualId = this.OriginalEdStudQualId;
			
			_tmp.EdStudId = this.EdStudId;
			_tmp.EdCodeQualId = this.EdCodeQualId;
			_tmp.SchoolName = this.SchoolName;
			_tmp.QualDate = this.QualDate;
			_tmp.QualTotMark = this.QualTotMark;
			_tmp.TotalDegree = this.TotalDegree;
			_tmp.TotalPercent = this.TotalPercent;
			_tmp.GsCountryNodeId = this.GsCountryNodeId;
			_tmp.AdmApplicantId = this.AdmApplicantId;
			_tmp.EdCdeQualBrnId = this.EdCdeQualBrnId;
			_tmp.GsCdeSchoolId = this.GsCdeSchoolId;
			_tmp.StudSeatNum = this.StudSeatNum;
			_tmp.EnglishPercent = this.EnglishPercent;
			_tmp.ConvertedPercent = this.ConvertedPercent;
			_tmp.EdCdeQualCatId = this.EdCdeQualCatId;
			_tmp.AdmissionFlg = this.AdmissionFlg;
			_tmp.GsCdeUniversitiesId = this.GsCdeUniversitiesId;
			_tmp.Tofel = this.Tofel;
			_tmp.Cgpa = this.Cgpa;
			_tmp.QualRank = this.QualRank;
			_tmp.EdCdeQualPhase = this.EdCdeQualPhase;
			_tmp.EdCdeQualStatusId = this.EdCdeQualStatusId;
			_tmp.QualStartDate = this.QualStartDate;
			_tmp.GsCodeLanguageId = this.GsCodeLanguageId;
			_tmp.AdmAppRegHistoryId = this.AdmAppRegHistoryId;
			_tmp.AdmCdeExamGrdngId = this.AdmCdeExamGrdngId;
			_tmp.QualDescEn = this.QualDescEn;
			_tmp.QualBrnDescEn = this.QualBrnDescEn;
			_tmp.GsCdeFacultyId = this.GsCdeFacultyId;
			_tmp.GsCdeSchoolTypeId = this.GsCdeSchoolTypeId;
			_tmp.AdmCdeQualStatusId = this.AdmCdeQualStatusId;
			_tmp.Notes = this.Notes;
			_tmp.QualRsltUsr = this.QualRsltUsr;
			_tmp.QualRsltPwd = this.QualRsltPwd;
			_tmp.EdCdeSchoolGradeId = this.EdCdeSchoolGradeId;
			
			#region Source Parent Composite Entities
			if (this.EdStudIdSource != null && existingCopies.Contains(this.EdStudIdSource))
				_tmp.EdStudIdSource = existingCopies[this.EdStudIdSource] as EdStud;
			else
				_tmp.EdStudIdSource = MakeCopyOf(this.EdStudIdSource, existingCopies) as EdStud;
			if (this.AdmAppRegHistoryIdSource != null && existingCopies.Contains(this.AdmAppRegHistoryIdSource))
				_tmp.AdmAppRegHistoryIdSource = existingCopies[this.AdmAppRegHistoryIdSource] as AdmAppRegHistory;
			else
				_tmp.AdmAppRegHistoryIdSource = MakeCopyOf(this.AdmAppRegHistoryIdSource, existingCopies) as AdmAppRegHistory;
			if (this.AdmApplicantIdSource != null && existingCopies.Contains(this.AdmApplicantIdSource))
				_tmp.AdmApplicantIdSource = existingCopies[this.AdmApplicantIdSource] as AdmApplicant;
			else
				_tmp.AdmApplicantIdSource = MakeCopyOf(this.AdmApplicantIdSource, existingCopies) as AdmApplicant;
			if (this.AdmCdeExamGrdngIdSource != null && existingCopies.Contains(this.AdmCdeExamGrdngIdSource))
				_tmp.AdmCdeExamGrdngIdSource = existingCopies[this.AdmCdeExamGrdngIdSource] as AdmCdeExamGrdng;
			else
				_tmp.AdmCdeExamGrdngIdSource = MakeCopyOf(this.AdmCdeExamGrdngIdSource, existingCopies) as AdmCdeExamGrdng;
			if (this.AdmCdeQualStatusIdSource != null && existingCopies.Contains(this.AdmCdeQualStatusIdSource))
				_tmp.AdmCdeQualStatusIdSource = existingCopies[this.AdmCdeQualStatusIdSource] as AdmCdeQualStatus;
			else
				_tmp.AdmCdeQualStatusIdSource = MakeCopyOf(this.AdmCdeQualStatusIdSource, existingCopies) as AdmCdeQualStatus;
			if (this.EdCdeQualBrnIdSource != null && existingCopies.Contains(this.EdCdeQualBrnIdSource))
				_tmp.EdCdeQualBrnIdSource = existingCopies[this.EdCdeQualBrnIdSource] as EdCdeQualBrn;
			else
				_tmp.EdCdeQualBrnIdSource = MakeCopyOf(this.EdCdeQualBrnIdSource, existingCopies) as EdCdeQualBrn;
			if (this.EdCdeQualCatIdSource != null && existingCopies.Contains(this.EdCdeQualCatIdSource))
				_tmp.EdCdeQualCatIdSource = existingCopies[this.EdCdeQualCatIdSource] as EdCdeQualCat;
			else
				_tmp.EdCdeQualCatIdSource = MakeCopyOf(this.EdCdeQualCatIdSource, existingCopies) as EdCdeQualCat;
			if (this.EdCdeQualPhaseSource != null && existingCopies.Contains(this.EdCdeQualPhaseSource))
				_tmp.EdCdeQualPhaseSource = existingCopies[this.EdCdeQualPhaseSource] as EdCdeQualPhase;
			else
				_tmp.EdCdeQualPhaseSource = MakeCopyOf(this.EdCdeQualPhaseSource, existingCopies) as EdCdeQualPhase;
			if (this.EdCdeQualStatusIdSource != null && existingCopies.Contains(this.EdCdeQualStatusIdSource))
				_tmp.EdCdeQualStatusIdSource = existingCopies[this.EdCdeQualStatusIdSource] as EdCdeQualStatus;
			else
				_tmp.EdCdeQualStatusIdSource = MakeCopyOf(this.EdCdeQualStatusIdSource, existingCopies) as EdCdeQualStatus;
			if (this.EdCdeSchoolGradeIdSource != null && existingCopies.Contains(this.EdCdeSchoolGradeIdSource))
				_tmp.EdCdeSchoolGradeIdSource = existingCopies[this.EdCdeSchoolGradeIdSource] as EdCdeSchoolGrade;
			else
				_tmp.EdCdeSchoolGradeIdSource = MakeCopyOf(this.EdCdeSchoolGradeIdSource, existingCopies) as EdCdeSchoolGrade;
			if (this.EdCodeQualIdSource != null && existingCopies.Contains(this.EdCodeQualIdSource))
				_tmp.EdCodeQualIdSource = existingCopies[this.EdCodeQualIdSource] as EdCodeQual;
			else
				_tmp.EdCodeQualIdSource = MakeCopyOf(this.EdCodeQualIdSource, existingCopies) as EdCodeQual;
			if (this.GsCdeFacultyIdSource != null && existingCopies.Contains(this.GsCdeFacultyIdSource))
				_tmp.GsCdeFacultyIdSource = existingCopies[this.GsCdeFacultyIdSource] as GsCdeFaculty;
			else
				_tmp.GsCdeFacultyIdSource = MakeCopyOf(this.GsCdeFacultyIdSource, existingCopies) as GsCdeFaculty;
			if (this.GsCdeSchoolIdSource != null && existingCopies.Contains(this.GsCdeSchoolIdSource))
				_tmp.GsCdeSchoolIdSource = existingCopies[this.GsCdeSchoolIdSource] as GsCdeSchool;
			else
				_tmp.GsCdeSchoolIdSource = MakeCopyOf(this.GsCdeSchoolIdSource, existingCopies) as GsCdeSchool;
			if (this.GsCdeSchoolTypeIdSource != null && existingCopies.Contains(this.GsCdeSchoolTypeIdSource))
				_tmp.GsCdeSchoolTypeIdSource = existingCopies[this.GsCdeSchoolTypeIdSource] as GsCdeSchoolType;
			else
				_tmp.GsCdeSchoolTypeIdSource = MakeCopyOf(this.GsCdeSchoolTypeIdSource, existingCopies) as GsCdeSchoolType;
			if (this.GsCdeUniversitiesIdSource != null && existingCopies.Contains(this.GsCdeUniversitiesIdSource))
				_tmp.GsCdeUniversitiesIdSource = existingCopies[this.GsCdeUniversitiesIdSource] as GsCdeUniversities;
			else
				_tmp.GsCdeUniversitiesIdSource = MakeCopyOf(this.GsCdeUniversitiesIdSource, existingCopies) as GsCdeUniversities;
			if (this.GsCodeLanguageIdSource != null && existingCopies.Contains(this.GsCodeLanguageIdSource))
				_tmp.GsCodeLanguageIdSource = existingCopies[this.GsCodeLanguageIdSource] as GsCodeLanguage;
			else
				_tmp.GsCodeLanguageIdSource = MakeCopyOf(this.GsCodeLanguageIdSource, existingCopies) as GsCodeLanguage;
			if (this.GsCountryNodeIdSource != null && existingCopies.Contains(this.GsCountryNodeIdSource))
				_tmp.GsCountryNodeIdSource = existingCopies[this.GsCountryNodeIdSource] as GsCountryNode;
			else
				_tmp.GsCountryNodeIdSource = MakeCopyOf(this.GsCountryNodeIdSource, existingCopies) as GsCountryNode;
			#endregion
		
			#region Child Collections
			//deep copy nested objects
			_tmp.EdStudFacultyCollection = (TList<EdStudFaculty>) MakeCopyOf(this.EdStudFacultyCollection, existingCopies); 
			_tmp.EdStudQualGroupCollection = (TList<EdStudQualGroup>) MakeCopyOf(this.EdStudQualGroupCollection, existingCopies); 
			_tmp.EdStudQualSubjectCollection = (TList<EdStudQualSubject>) MakeCopyOf(this.EdStudQualSubjectCollection, existingCopies); 
			#endregion Child Collections
			
			//EntityState
			_tmp.EntityState = this.EntityState;
			
			return _tmp;
		}
		
		#endregion Clone Method
		
		/// <summary>
		///		Indicates state of object
		/// </summary>
		/// <remarks>0=Unchanged, 1=Added, 2=Changed</remarks>
		[BrowsableAttribute(false), XmlIgnoreAttribute()]
		public EntityState	EntityState
		{
			get { return currentEntityState;  }
			set { currentEntityState = value; }
		}
	
	}//End struct











		#endregion
		
				
		
		#region Events trigger
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudQualColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanging(EdStudQualColumn column)
		{
			OnColumnChanging(column, null);
			return;
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudQualColumn"/> which has raised the event.</param>
		public virtual void OnColumnChanged(EdStudQualColumn column)
		{
			OnColumnChanged(column, null);
			return;
		} 
		
		
		/// <summary>
		/// Raises the <see cref="ColumnChanging" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudQualColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanging(EdStudQualColumn column, object value)
		{
			if(IsEntityTracked && EntityState != EntityState.Added && !EntityManager.TrackChangedEntities)
				EntityManager.StopTracking(entityTrackingKey);
				
			if (!SuppressEntityEvents)
			{
				EdStudQualEventHandler handler = ColumnChanging;
				if(handler != null)
				{
					handler(this, new EdStudQualEventArgs(column, value));
				}
			}
		}
		
		/// <summary>
		/// Raises the <see cref="ColumnChanged" /> event.
		/// </summary>
		/// <param name="column">The <see cref="EdStudQualColumn"/> which has raised the event.</param>
		/// <param name="value">The changed value.</param>
		public virtual void OnColumnChanged(EdStudQualColumn column, object value)
		{
			if (!SuppressEntityEvents)
			{
				EdStudQualEventHandler handler = ColumnChanged;
				if(handler != null)
				{
					handler(this, new EdStudQualEventArgs(column, value));
				}
			
				// warn the parent list that i have changed
				OnEntityChanged();
			}
		} 
		#endregion
			
	} // End Class
	
	
	#region EdStudQualEventArgs class
	/// <summary>
	/// Provides data for the ColumnChanging and ColumnChanged events.
	/// </summary>
	/// <remarks>
	/// The ColumnChanging and ColumnChanged events occur when a change is made to the value 
	/// of a property of a <see cref="EdStudQual"/> object.
	/// </remarks>
	public class EdStudQualEventArgs : System.EventArgs
	{
		private EdStudQualColumn column;
		private object value;
		
		///<summary>
		/// Initalizes a new Instance of the EdStudQualEventArgs class.
		///</summary>
		public EdStudQualEventArgs(EdStudQualColumn column)
		{
			this.column = column;
		}
		
		///<summary>
		/// Initalizes a new Instance of the EdStudQualEventArgs class.
		///</summary>
		public EdStudQualEventArgs(EdStudQualColumn column, object value)
		{
			this.column = column;
			this.value = value;
		}
		
		///<summary>
		/// The EdStudQualColumn that was modified, which has raised the event.
		///</summary>
		///<value cref="EdStudQualColumn" />
		public EdStudQualColumn Column { get { return this.column; } }
		
		/// <summary>
        /// Gets the current value of the column.
        /// </summary>
        /// <value>The current value of the column.</value>
		public object Value{ get { return this.value; } }

	}
	#endregion
	
	///<summary>
	/// Define a delegate for all EdStudQual related events.
	///</summary>
	public delegate void EdStudQualEventHandler(object sender, EdStudQualEventArgs e);
	
	#region EdStudQualComparer
		
	/// <summary>
	///	Strongly Typed IComparer
	/// </summary>
	public class EdStudQualComparer : System.Collections.Generic.IComparer<EdStudQual>
	{
		EdStudQualColumn whichComparison;
		
		/// <summary>
        /// Initializes a new instance of the <see cref="T:EdStudQualComparer"/> class.
        /// </summary>
		public EdStudQualComparer()
        {            
        }               
        
        /// <summary>
        /// Initializes a new instance of the <see cref="T:EdStudQualComparer"/> class.
        /// </summary>
        /// <param name="column">The column to sort on.</param>
        public EdStudQualComparer(EdStudQualColumn column)
        {
            this.whichComparison = column;
        }

		/// <summary>
        /// Determines whether the specified <c cref="EdStudQual"/> instances are considered equal.
        /// </summary>
        /// <param name="a">The first <c cref="EdStudQual"/> to compare.</param>
        /// <param name="b">The second <c>EdStudQual</c> to compare.</param>
        /// <returns>true if objA is the same instance as objB or if both are null references or if objA.Equals(objB) returns true; otherwise, false.</returns>
        public bool Equals(EdStudQual a, EdStudQual b)
        {
            return this.Compare(a, b) == 0;
        }

		/// <summary>
        /// Gets the hash code of the specified entity.
        /// </summary>
        /// <param name="entity">The entity.</param>
        /// <returns></returns>
        public int GetHashCode(EdStudQual entity)
        {
            return entity.GetHashCode();
        }

        /// <summary>
        /// Performs a case-insensitive comparison of two objects of the same type and returns a value indicating whether one is less than, equal to, or greater than the other.
        /// </summary>
        /// <param name="a">The first object to compare.</param>
        /// <param name="b">The second object to compare.</param>
        /// <returns></returns>
        public int Compare(EdStudQual a, EdStudQual b)
        {
        	EntityPropertyComparer entityPropertyComparer = new EntityPropertyComparer(this.whichComparison.ToString());
        	return entityPropertyComparer.Compare(a, b);
        }

		/// <summary>
        /// Gets or sets the column that will be used for comparison.
        /// </summary>
        /// <value>The comparison column.</value>
        public EdStudQualColumn WhichComparison
        {
            get { return this.whichComparison; }
            set { this.whichComparison = value; }
        }
	}
	
	#endregion
	
	#region EdStudQualKey Class

	/// <summary>
	/// Wraps the unique identifier values for the <see cref="EdStudQual"/> object.
	/// </summary>
	[Serializable]
	[CLSCompliant(true)]
	public class EdStudQualKey : EntityKeyBase
	{
		#region Constructors
		
		/// <summary>
		/// Initializes a new instance of the EdStudQualKey class.
		/// </summary>
		public EdStudQualKey()
		{
		}
		
		/// <summary>
		/// Initializes a new instance of the EdStudQualKey class.
		/// </summary>
		public EdStudQualKey(EdStudQualBase entity)
		{
			this.Entity = entity;

			#region Init Properties

			if ( entity != null )
			{
				this.EdStudQualId = entity.EdStudQualId;
			}

			#endregion
		}
		
		/// <summary>
		/// Initializes a new instance of the EdStudQualKey class.
		/// </summary>
		public EdStudQualKey(System.Decimal _edStudQualId)
		{
			#region Init Properties

			this.EdStudQualId = _edStudQualId;

			#endregion
		}
		
		#endregion Constructors

		#region Properties
		
		// member variable for the Entity property
		private EdStudQualBase _entity;
		
		/// <summary>
		/// Gets or sets the Entity property.
		/// </summary>
		public EdStudQualBase Entity
		{
			get { return _entity; }
			set { _entity = value; }
		}
		
		// member variable for the EdStudQualId property
		private System.Decimal _edStudQualId;
		
		/// <summary>
		/// Gets or sets the EdStudQualId property.
		/// </summary>
		public System.Decimal EdStudQualId
		{
			get { return _edStudQualId; }
			set
			{
				if ( this.Entity != null )
					this.Entity.EdStudQualId = value;
				
				_edStudQualId = value;
			}
		}
		
		#endregion

		#region Methods
		
		/// <summary>
		/// Reads values from the supplied <see cref="IDictionary"/> object into
		/// properties of the current object.
		/// </summary>
		/// <param name="values">An <see cref="IDictionary"/> instance that contains
		/// the key/value pairs to be used as property values.</param>
		public override void Load(IDictionary values)
		{
			#region Init Properties

			if ( values != null )
			{
				EdStudQualId = ( values["EdStudQualId"] != null ) ? (System.Decimal) EntityUtil.ChangeType(values["EdStudQualId"], typeof(System.Decimal)) : 0.0m;
			}

			#endregion
		}

		/// <summary>
		/// Creates a new <see cref="IDictionary"/> object and populates it
		/// with the property values of the current object.
		/// </summary>
		/// <returns>A collection of name/value pairs.</returns>
		public override IDictionary ToDictionary()
		{
			IDictionary values = new Hashtable();

			#region Init Dictionary

			values.Add("EdStudQualId", EdStudQualId);

			#endregion Init Dictionary

			return values;
		}
		
		///<summary>
		/// Returns a String that represents the current object.
		///</summary>
		public override string ToString()
		{
			return String.Format("EdStudQualId: {0}{1}",
								EdStudQualId,
								System.Environment.NewLine);
		}

		#endregion Methods
	}
	
	#endregion	

	#region EdStudQualColumn Enum
	
	/// <summary>
	/// Enumerate the EdStudQual columns.
	/// </summary>
	[Serializable]
	public enum EdStudQualColumn : int
	{
		/// <summary>
		/// EdStudQualId : 
		/// </summary>
		[EnumTextValue("ED_STUD_QUAL_ID")]
		[ColumnEnum("ED_STUD_QUAL_ID", typeof(System.Decimal), System.Data.DbType.Decimal, true, false, false)]
		EdStudQualId = 1,
		/// <summary>
		/// EdStudId : 
		/// </summary>
		[EnumTextValue("ED_STUD_ID")]
		[ColumnEnum("ED_STUD_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdStudId = 2,
		/// <summary>
		/// EdCodeQualId : 
		/// </summary>
		[EnumTextValue("ED_CODE_QUAL_ID")]
		[ColumnEnum("ED_CODE_QUAL_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		EdCodeQualId = 3,
		/// <summary>
		/// SchoolName : 
		/// </summary>
		[EnumTextValue("SCHOOL_NAME")]
		[ColumnEnum("SCHOOL_NAME", typeof(System.String), System.Data.DbType.String, false, false, true, 160)]
		SchoolName = 4,
		/// <summary>
		/// QualDate : End Date
		/// </summary>
		[EnumTextValue("QUAL_DATE")]
		[ColumnEnum("QUAL_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		QualDate = 5,
		/// <summary>
		/// QualTotMark : 
		/// </summary>
		[EnumTextValue("QUAL_TOT_MARK")]
		[ColumnEnum("QUAL_TOT_MARK", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		QualTotMark = 6,
		/// <summary>
		/// TotalDegree : 
		/// </summary>
		[EnumTextValue("TOTAL_DEGREE")]
		[ColumnEnum("TOTAL_DEGREE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		TotalDegree = 7,
		/// <summary>
		/// TotalPercent : 
		/// </summary>
		[EnumTextValue("TOTAL_PERCENT")]
		[ColumnEnum("TOTAL_PERCENT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		TotalPercent = 8,
		/// <summary>
		/// GsCountryNodeId : 
		/// </summary>
		[EnumTextValue("GS_COUNTRY_NODE_ID")]
		[ColumnEnum("GS_COUNTRY_NODE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCountryNodeId = 9,
		/// <summary>
		/// AdmApplicantId : 
		/// </summary>
		[EnumTextValue("ADM_APPLICANT_ID")]
		[ColumnEnum("ADM_APPLICANT_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmApplicantId = 10,
		/// <summary>
		/// EdCdeQualBrnId : 
		/// </summary>
		[EnumTextValue("ED_CDE_QUAL_BRN_ID")]
		[ColumnEnum("ED_CDE_QUAL_BRN_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCdeQualBrnId = 11,
		/// <summary>
		/// GsCdeSchoolId : 
		/// </summary>
		[EnumTextValue("GS_CDE_SCHOOL_ID")]
		[ColumnEnum("GS_CDE_SCHOOL_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCdeSchoolId = 12,
		/// <summary>
		/// StudSeatNum : 
		/// </summary>
		[EnumTextValue("STUD_SEAT_NUM")]
		[ColumnEnum("STUD_SEAT_NUM", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		StudSeatNum = 13,
		/// <summary>
		/// EnglishPercent : 
		/// </summary>
		[EnumTextValue("ENGLISH_PERCENT")]
		[ColumnEnum("ENGLISH_PERCENT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EnglishPercent = 14,
		/// <summary>
		/// ConvertedPercent : 
		/// </summary>
		[EnumTextValue("CONVERTED_PERCENT")]
		[ColumnEnum("CONVERTED_PERCENT", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		ConvertedPercent = 15,
		/// <summary>
		/// EdCdeQualCatId : 
		/// </summary>
		[EnumTextValue("ED_CDE_QUAL_CAT_ID")]
		[ColumnEnum("ED_CDE_QUAL_CAT_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCdeQualCatId = 16,
		/// <summary>
		/// AdmissionFlg : 
		/// </summary>
		[EnumTextValue("ADMISSION_FLG")]
		[ColumnEnum("ADMISSION_FLG", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, false)]
		AdmissionFlg = 17,
		/// <summary>
		/// GsCdeUniversitiesId : 
		/// </summary>
		[EnumTextValue("GS_CDE_UNIVERSITIES_ID")]
		[ColumnEnum("GS_CDE_UNIVERSITIES_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCdeUniversitiesId = 18,
		/// <summary>
		/// Tofel : 
		/// </summary>
		[EnumTextValue("TOFEL")]
		[ColumnEnum("TOFEL", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		Tofel = 19,
		/// <summary>
		/// Cgpa : 
		/// </summary>
		[EnumTextValue("CGPA")]
		[ColumnEnum("CGPA", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		Cgpa = 20,
		/// <summary>
		/// QualRank : ترتيب الطالب فى المؤهل
		/// </summary>
		[EnumTextValue("QUAL_RANK")]
		[ColumnEnum("QUAL_RANK", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		QualRank = 21,
		/// <summary>
		/// EdCdeQualPhase : 
		/// </summary>
		[EnumTextValue("ED_CDE_QUAL_PHASE")]
		[ColumnEnum("ED_CDE_QUAL_PHASE", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		EdCdeQualPhase = 22,
		/// <summary>
		/// EdCdeQualStatusId : 
		/// </summary>
		[EnumTextValue("ED_CDE_QUAL_STATUS_ID")]
		[ColumnEnum("ED_CDE_QUAL_STATUS_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		EdCdeQualStatusId = 23,
		/// <summary>
		/// QualStartDate : From date
		/// </summary>
		[EnumTextValue("QUAL_START_DATE")]
		[ColumnEnum("QUAL_START_DATE", typeof(System.DateTime), System.Data.DbType.DateTime, false, false, true)]
		QualStartDate = 24,
		/// <summary>
		/// GsCodeLanguageId : 
		/// </summary>
		[EnumTextValue("GS_CODE_LANGUAGE_ID")]
		[ColumnEnum("GS_CODE_LANGUAGE_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCodeLanguageId = 25,
		/// <summary>
		/// AdmAppRegHistoryId : 
		/// </summary>
		[EnumTextValue("ADM_APP_REG_HISTORY_ID")]
		[ColumnEnum("ADM_APP_REG_HISTORY_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmAppRegHistoryId = 26,
		/// <summary>
		/// AdmCdeExamGrdngId : NU:PG QUAL GRADE
		/// </summary>
		[EnumTextValue("ADM_CDE_EXAM_GRDNG_ID")]
		[ColumnEnum("ADM_CDE_EXAM_GRDNG_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		AdmCdeExamGrdngId = 27,
		/// <summary>
		/// QualDescEn : 
		/// </summary>
		[EnumTextValue("QUAL_DESC_EN")]
		[ColumnEnum("QUAL_DESC_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		QualDescEn = 28,
		/// <summary>
		/// QualBrnDescEn : Qual Major
		/// </summary>
		[EnumTextValue("QUAL_BRN_DESC_EN")]
		[ColumnEnum("QUAL_BRN_DESC_EN", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		QualBrnDescEn = 29,
		/// <summary>
		/// GsCdeFacultyId : 
		/// </summary>
		[EnumTextValue("GS_CDE_FACULTY_ID")]
		[ColumnEnum("GS_CDE_FACULTY_ID", typeof(System.Decimal), System.Data.DbType.Decimal, false, false, true)]
		GsCdeFacultyId = 30,
		/// <summary>
		/// GsCdeSchoolTypeId : EJUST
		/// </summary>
		[EnumTextValue("GS_CDE_SCHOOL_TYPE_ID")]
		[ColumnEnum("GS_CDE_SCHOOL_TYPE_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		GsCdeSchoolTypeId = 31,
		/// <summary>
		/// AdmCdeQualStatusId : EJUST
		/// </summary>
		[EnumTextValue("ADM_CDE_QUAL_STATUS_ID")]
		[ColumnEnum("ADM_CDE_QUAL_STATUS_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		AdmCdeQualStatusId = 32,
		/// <summary>
		/// Notes : EJUST
		/// </summary>
		[EnumTextValue("NOTES")]
		[ColumnEnum("NOTES", typeof(System.String), System.Data.DbType.String, false, false, true, 250)]
		Notes = 33,
		/// <summary>
		/// QualRsltUsr : 
		/// </summary>
		[EnumTextValue("QUAL_RSLT_USR")]
		[ColumnEnum("QUAL_RSLT_USR", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		QualRsltUsr = 34,
		/// <summary>
		/// QualRsltPwd : 
		/// </summary>
		[EnumTextValue("QUAL_RSLT_PWD")]
		[ColumnEnum("QUAL_RSLT_PWD", typeof(System.String), System.Data.DbType.String, false, false, true, 100)]
		QualRsltPwd = 35,
		/// <summary>
		/// EdCdeSchoolGradeId : 
		/// </summary>
		[EnumTextValue("ED_CDE_SCHOOL_GRADE_ID")]
		[ColumnEnum("ED_CDE_SCHOOL_GRADE_ID", typeof(System.Int32), System.Data.DbType.Int32, false, false, true)]
		EdCdeSchoolGradeId = 36
	}//End enum

	#endregion EdStudQualColumn Enum

} // end namespace
